pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
482530252,markdown: Fix Youtube and Vimeo preview overriding markdown link titles bug. Fixes #16100,"[Issue](https://github.com/zulip/zulip/issues/16100#issue-676910913)
Youtube and Vimeo preview overriding markdown link titles bug fixed.
Now if a user uses `[Random_title](url)` then `Random_title` will be used instead of `extracted_title`. While in other cases `extracted_title` will be shown for markdown title, if **Preview of linked websites is enabled.**
Fixes #16100 


**Screenshot:**
![Solved Issue](https://user-images.githubusercontent.com/67277428/92560072-63648a80-f28f-11ea-8ba7-d764193b2aab.png)
 
**Testing Plan:**

Following is the modified testing code in zerver/tests/test_link_embed.py :

```python
@override_settings(INLINE_URL_EMBED_PREVIEW=True)
  def test_youtube_url_title_replaces_url(self) -> None:
        url = '[Youtube link](https://www.youtube.com/watch?v=eSJTXC7Ixgg)'
        with mock_queue_publish('zerver.lib.actions.queue_json_publish'):
            msg_id = self.send_personal_message(
                self.example_user('hamlet'),
                self.example_user('cordelia'),
                content=url,
            )
        msg = Message.objects.select_related(""sender"").get(id=msg_id)
        event = {
            'message_id': msg_id,
            'urls': [url],
            'message_realm_id': msg.sender.realm_id,
            'message_content': url}

        mocked_data = {'title': 'Clearer Code at Scale - Static Types at Zulip and Dropbox'}
        mocked_response = mock.Mock(side_effect=self.create_mock_response(url))
        with self.settings(TEST_SUITE=False, CACHES=TEST_CACHES):
            with mock.patch('requests.get', mocked_response), self.assertLogs(level='INFO') as info_logs:
                with mock.patch('zerver.lib.markdown.link_preview.link_embed_data_from_cache',
                                lambda *args, **kwargs: mocked_data):
                    FetchLinksEmbedData().consume(event)
            self.assertTrue(
                'INFO:root:Time spent on get_link_embed_data for [Youtube link](https://www.youtube.com/watch?v=eSJTXC7Ixgg):' in info_logs.output[0]
            )

        msg.refresh_from_db()
        expected_content = '<p><a href=""https://www.youtube.com/watch?v=eSJTXC7Ixgg"">Youtube link</a></p>\n<div class=""youtube-video message_inline_image""><a data-id=""eSJTXC7Ixgg"" href=""https://www.youtube.com/watch?v=eSJTXC7Ixgg""><img src=""https://i.ytimg.com/vi/eSJTXC7Ixgg/default.jpg""></a></div>'
        self.assertEqual(expected_content, msg.rendered_content)
```


**Test Result:**

![Test Result](https://user-images.githubusercontent.com/67277428/93724520-6d5a8780-fbc5-11ea-91cc-431952d64fa6.png)


",True,16319,https://api.github.com/repos/zulip/zulip/pulls/16319,https://github.com/zulip/zulip/pull/16319,closed,39,2,2,1,8,0,3,0,"[{'name': 'bug'}, {'name': 'area: markdown'}, {'name': 'size: M'}]",2020-09-09 05:58:34+00:00,2020-10-19 19:06:14+00:00,3503260.0,"40 days, 13:07:40",[],"[{'commit_sha': '8e85a8c8a170979b2f8f3b2cafc5d6786b6145c6', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
497162510,emoji: Add padding around the gif on GIF emoji upload.,"This adds padding to the gif on GIF emoji upload, as mentioned in #16370 .

**Testing Plan:**
I picked up gif from [GIPHY](https://giphy.com) for testing purposes.
Following I am attaching the test results.

**GIFs or Screenshots:**
Before | After
--- | --- 
![man_bad](https://user-images.githubusercontent.com/67277428/94967015-eb9b2000-051b-11eb-9076-55f09a80f31d.gif)  | ![man](https://user-images.githubusercontent.com/67277428/94966996-de7e3100-051b-11eb-84ed-a19f06ad0062.gif) 
![nice_bad](https://user-images.githubusercontent.com/67277428/94967226-4896d600-051c-11eb-8d42-cee813e95135.gif) | ![nice](https://user-images.githubusercontent.com/67277428/94967206-42a0f500-051c-11eb-83d7-7f45b39e213b.gif) 
![nice2_bad](https://user-images.githubusercontent.com/67277428/94967453-be02a680-051c-11eb-8b2f-66963e7b66b7.gif) | ![nice2](https://user-images.githubusercontent.com/67277428/94967469-c78c0e80-051c-11eb-96c7-336be64da2a7.gif)
![pokemon_bad](https://user-images.githubusercontent.com/67277428/94967499-d1157680-051c-11eb-9655-39362c4fbeaa.gif) | ![pokemon](https://user-images.githubusercontent.com/67277428/94967514-d70b5780-051c-11eb-814c-d21c80bd1853.gif)
![sunday_bad](https://user-images.githubusercontent.com/67277428/94967529-df639280-051c-11eb-8894-04fe6445eacd.gif) | ![sunday](https://user-images.githubusercontent.com/67277428/94967542-e5597380-051c-11eb-96d4-ad391a1947a9.gif)
",True,16466,https://api.github.com/repos/zulip/zulip/pulls/16466,https://github.com/zulip/zulip/pull/16466,closed,1,1,1,1,5,0,0,0,[],2020-10-02 22:32:19+00:00,2020-10-07 00:28:03+00:00,352544.0,"4 days, 1:55:44",[],"[{'commit_sha': '2546c456387b0942dd383d954bfcc693b204b2d2', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
507155008,docs: Update guidelines to URL-encode stream name or topic name.,"Updated guidelines to URL-encode stream name and topic name. It will especially help
them who use emoji in the stream name and topic name

Fixes #16430.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",False,16581,https://api.github.com/repos/zulip/zulip/pulls/16581,https://github.com/zulip/zulip/pull/16581,closed,7,3,1,1,2,0,3,0,"[{'name': 'bug'}, {'name': 'area: emoji'}, {'name': 'size: S'}]",2020-10-20 23:34:55+00:00,2020-10-21 18:15:37+00:00,67242.0,18:40:42,[],"[{'commit_sha': '9e8eb669ef5f2d1bc4820399a5444a64bef5693c', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
513297835,markdown: Fix merging of separate quotations.,"Initally, when writing two or more quotes, having a blank line in between them, merges those quotes.
This created confusion especially in ""quote and reply"".

This commit fixes such issues. Now two or more quotes having a blank line in between them, will not get merged.
Fixes #14379.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** Tested locally.


**GIFs or screenshots:**

| Raw message | Before | After
| --- | --- | --- |
| `> Hello World !`<br>` `<br>`> Hello Universe !` | ![Screenshot from 2020-10-31 01-08-16](https://user-images.githubusercontent.com/67277428/97751173-e4b1fe00-1b17-11eb-8e51-8536c8dfe3de.png) | ![Screenshot from 2020-10-31 01-09-53](https://user-images.githubusercontent.com/67277428/97751270-07dcad80-1b18-11eb-82ba-7ecc7d84f516.png)
| `> This is`<br> `> a multiline text.`<br>` `<br>`> This looks cool !` | ![Screenshot from 2020-10-31 01-08-51](https://user-images.githubusercontent.com/67277428/97751307-19be5080-1b18-11eb-9fd5-ae528649d4fd.png) | ![Screenshot from 2020-10-31 01-10-03](https://user-images.githubusercontent.com/67277428/97751327-20e55e80-1b18-11eb-94e1-5bbb2349a9fe.png)
| `Desdemona [said](link):`<br>` ```quote`<br>`Is this cool ?`<br>` ``` `<br>` `<br> `> Certainly it is !!`<br>` `<br>`I agree :)` | ![Screenshot from 2020-10-31 01-09-04](https://user-images.githubusercontent.com/67277428/97751361-2fcc1100-1b18-11eb-9564-0a8e7d5e33d5.png) | ![Screenshot from 2020-10-31 01-10-30](https://user-images.githubusercontent.com/67277428/97751381-3a86a600-1b18-11eb-8532-5dd5186da6cf.png)
| `Desdemona [said](link):`<br>` ```quote`<br>`Desdemona [said](link):`<br>` ```quote`<br>`Is this cool ?`<br>` ``` ` <br>` `<br> `> Certainly it is !!`<br>` `<br>`I agree :)`<br>` ``` `<br>`> Same here`<br>` `<br>`:love:` | ![Screenshot from 2020-10-31 01-09-23](https://user-images.githubusercontent.com/67277428/97751403-43777780-1b18-11eb-9c0f-1fb2df7d4fd9.png) | ![Screenshot from 2020-10-31 01-10-46](https://user-images.githubusercontent.com/67277428/97751421-4c684900-1b18-11eb-9c88-31266750cf55.png)
",False,16665,https://api.github.com/repos/zulip/zulip/pulls/16665,https://github.com/zulip/zulip/pull/16665,closed,50,16,6,1,2,0,0,0,[],2020-10-30 21:39:02+00:00,2020-10-30 22:22:53+00:00,2631.0,0:43:51,[],"[{'commit_sha': 'c2770c2c5981f5563f02ba928ed80436570edcba', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
515670070,markdown: Fix flickering of embedded link inside Italic.,"This commit fixes bug in marked.js which used to render buggy markdown in message content when a message is of
form: `*[text](url)*`.

Fixes #14845.

I have added test cases for embedded link inside **Bold** and _Italic_ cases.",False,16708,https://api.github.com/repos/zulip/zulip/pulls/16708,https://github.com/zulip/zulip/pull/16708,closed,22,1,2,1,7,0,3,0,"[{'name': 'bug'}, {'name': 'area: markdown'}, {'name': 'size: S'}]",2020-11-04 22:16:37+00:00,2020-11-06 18:12:58+00:00,158181.0,"1 day, 19:56:21",[],"[{'commit_sha': 'b68c4dfb1c6860879dd58c19fa8921c63ebe31b9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
536262983,message view: Allow unmute a topic from its recipient bar.,"Earlier a user can only mute a topic from its recipient bar but can't unmute it from there. This commit fixes that bug and allows a user to also unmute the topic from its recipient bar.

Fixes #15223.",True,16871,https://api.github.com/repos/zulip/zulip/pulls/16871,https://github.com/zulip/zulip/pull/16871,closed,48,8,7,1,10,9,1,0,[{'name': 'size: L'}],2020-12-10 21:17:17+00:00,2021-05-03 20:07:45+00:00,12437428.0,"143 days, 22:50:28","[{'comment_id': 541248599, 'comment_body': 'I guess the `aria-label` attribute should be ""Unmute"" too.\r\nAnd we should make the same change in `recent_topic_row.hbs`', 'comment_created': datetime.datetime(2020, 12, 11, 20, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 619698684, 'comment_body': ""This function is wrong; and I think the fix involves no longer passing `row` here.  The bugs are (1) that we can have more than one message list rendered at a time that might need updating and (2) we might have multiple recipient bars for a given topic that need updating (E.g. in a search or stream-level narrow where there's interleaved messages from the topic in question).\r\n\r\nI think the existing call to `rerender_on_topic_update` should handle what we need here."", 'comment_created': datetime.datetime(2021, 4, 24, 19, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 623740330, 'comment_body': ""Isn't this redundant code? `flag OR false` is identically equal to `flag`."", 'comment_created': datetime.datetime(2021, 4, 30, 9, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 623751218, 'comment_body': 'Why not just remove the condition? (But please make sure we rerender *after* updating the data)\r\nI also did not understand your comment. Removing `this.rerender()` out of the condition is essential here because otherwise the bell icon will not update in stream+topic narrows, where `excludes_muted_topics` is set as `false`. Is there any other reason too?', 'comment_created': datetime.datetime(2021, 4, 30, 9, 42, 59, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 623752002, 'comment_body': ""An earlier return might be cleaner, but it isn't a big deal\r\n\r\n```javascript\r\nif (!hotkey_used) {\r\n    return;\r\n}\r\n\r\n// Create feedback widget\r\n```"", 'comment_created': datetime.datetime(2021, 4, 30, 9, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 623764032, 'comment_body': 'The only possible cases here are:\r\n\r\n1. `undefined` || `false` => `false`\r\n2. `some integer` || `false` => `integer itself`.\r\n(here it can also be `true` || `false` => `true`).', 'comment_created': datetime.datetime(2021, 4, 30, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 623773736, 'comment_body': 'Is the intent to convert the return value to a Boolean? Maybe `return (sub_dict && sub_dict.get(topic)) !== undefined` might be cleaner then?', 'comment_created': datetime.datetime(2021, 4, 30, 10, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 623785300, 'comment_body': ""**Note:** This added logic works in a similar fashion to how we update the topic name in the recipient bar.\r\n\r\n`rerender` function in `message_list.js` ultimately calls `render` function in `rerender_with_target_scrolltop` function inside `message_list_view.js`. So there you will observe that we render for `messages`(or `message_containers`) passed in the function and then we build `new_message_groups` there. So 2 things are important here the `messages` that we pass and the `new_message_groups` that are formed. Before we have called `this.data.update_items_for_topic_muting` which updates `this._items` (or `all_messages()`), it is necessary to `rerender` for the messages (which we have after muting/unmuting the topic). And `data.update_items_for_topic_muting` updates the `this._items` list (to store only `unmuted_messages`) to rerender them (or collapsing the view for muted topics).\r\nAfter we have new message groups, it won't be possible to `populate_group_from_message_container` for the **original** message container (Sorry but this point will be a little complex to understand unless you look in the codebase).\r\n`message_groups` differ for `current` and `home` `message_list`.\r\n\r\nSo, the 2nd call is important for the `unmuted_messages` to rerender them (or collapse the muted messages). Because we don't have them unless we call `data.update_items_for_topic_muting` and once we call `data.update_items_for_topic_muting` we don't have muted message in the `current`/`home` `message_list` and hence the first call is important in this way.\r\nSee the origin: https://github.com/zulip/zulip/commit/660475bd0cda520eea86a0e3bcfeedc5245ed352\r\n\r\nI hope this clears."", 'comment_created': datetime.datetime(2021, 4, 30, 10, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 624664933, 'comment_body': ""I think I understood your explanation, but not the reasoning behind why we need to care about the *original* (ie, pre-muting) messages/message groups/etc at all?\r\nOnce you update the set of messages in the `data`, the new groups will be created based on these new messages right?\r\n\r\nIt will be really helpful if you can mention what *user-facing* bug (and steps to reproduce maybe) rerendering twice prevents. I think that'll help much more for getting a context of the situation than talking about how the code itself flows (which is difficult to explain here, as you already point out!)"", 'comment_created': datetime.datetime(2021, 5, 2, 9, 43, 35, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}]","[{'commit_sha': 'bf41f455cd8e3ee6e6d6483e2596fb3c045c9d2c', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
541930089,markdown: Add support to shorten GitHub links.,"Support added to shorten GitHub links.

Logic added in frontend and backend Markdown Processor are identical.
This makes easy upgradation for other services like gitlab.

Fixes zulip#11895.


**Testing plan:** <!-- How have you tested? -->
New test cases are added.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
| Before | After |
| --- | --- |
| `https://github.com/zulip/zulip/issues/11895` | `zulip/zulip#11895` |
| `https://github.com/zulip/zulip/pull/16665` | `zulip/zulip#16665` |
| `https://github.com/zulip/zulip/commit/620e9cbf72ca729534aba41693d7ab2872caa394` | `zulip/zulip@620e9cbf72` |
| `https://github.com/zulip/zulip/issues/11895#issuecomment-476370010` | `zulip/zulip#11895#issuecomment-476370010` |
| `https://github.com/zulip/zulip/pull/16665#issuecomment-719814618` | `zulip/zulip#16665#issuecomment-719814618` |
| `https://github.com/zulip/zulip/pull/16860/files#r539133612` | `zulip/zulip#16860/files#r539133612` |",True,16916,https://api.github.com/repos/zulip/zulip/pulls/16916,https://github.com/zulip/zulip/pull/16916,closed,225,2,3,1,7,21,1,0,[{'name': 'size: XL'}],2020-12-17 15:11:10+00:00,2021-03-25 07:41:14+00:00,8440204.0,"97 days, 16:30:04","[{'comment_id': 581562141, 'comment_body': 'It looks like we\'re now adding a list of `""`s; is this comment out of date?', 'comment_created': datetime.datetime(2021, 2, 24, 2, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581562604, 'comment_body': 'This would be cleaner without the reassignment of `text`, i.e. just writing `return None` here.  ', 'comment_created': datetime.datetime(2021, 2, 24, 2, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581564299, 'comment_body': 'I would do specifically https://github.com/marketplace for the test here, since that\'s the sort of page we definitely don\'t want to turn into ""marketplace"".  I\'m not entirely what a correct rule would be to exclude such pages, but one theory might be that we should only do this linkification when the `artifact` field is present?', 'comment_created': datetime.datetime(2021, 2, 24, 2, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 583077542, 'comment_body': 'Nobody uses www.github.com and GitHub itself doesn’t shorten www.github.com links, so we shouldn’t either. And we should check that the scheme is `https`.', 'comment_created': datetime.datetime(2021, 2, 25, 18, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 583080221, 'comment_body': 'You’ve commented `None` but coded `""""`.\r\n\r\nMany GitHub URLs don’t obey this scheme, e.g. https://github.com/settings/profile, https://github.com/sponsors/accounts, https://github.com/marketplace/circleci, https://github.com/account/choose, https://github.com/about/press.\r\n\r\nI agree with Tim that it’s dangerous to try to parse parts of URLs that we don’t fully understand. We should have a very restrictive parser that works for a fixed collection of common patterns and errs on the side of not shortening.', 'comment_created': datetime.datetime(2021, 2, 25, 18, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 583090367, 'comment_body': '@andersk, Ah! Sorry, I forget to correct it. I will make the changes in my next push.\r\n\r\nAbout the other part, we now agree only to shorten links related to issues and PRs only.\r\nMore info in [CZO](https://chat.zulip.org/#narrow/stream/3-backend/topic/Automatically.20shorten.20Github.20URLs.20.2311895).', 'comment_created': datetime.datetime(2021, 2, 25, 19, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 583778853, 'comment_body': 'This much part of the code will be common for both the netlocs: [github.com](www.github.com) and [gitlab.com](www.gitlab.com). So, I have written this here only.', 'comment_created': datetime.datetime(2021, 2, 26, 16, 55, 1, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 583779055, 'comment_body': 'When extending this for [gitlab.com](www.gitlab.com), we can write -\r\n```python\r\n  if netloc == ""gitlab.com"":\r\n       return self.shorten_gitlab_links(.....)\r\n```', 'comment_created': datetime.datetime(2021, 2, 26, 16, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 583779306, 'comment_body': '[gitlab.com](www.gitlab.com) and [github.com](www.github.com), differs in `artifact`, `value` and `remaining_text`, so we just need to write a separate function for [gitlab.com](www.gitlab.com). And also `merge_request`s are formatted a little differently in `gitlab` which can be dealt here.', 'comment_created': datetime.datetime(2021, 2, 26, 16, 55, 39, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 588789498, 'comment_body': 'Awesome, this is a good structure.', 'comment_created': datetime.datetime(2021, 3, 5, 23, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 588790444, 'comment_body': ""Both here and in the backend implementation, let's define e.g. `const commit_id_prefix_length = 10;` and use that variable -- it's helpful self-documentation to use a long variable name here.  I would consider adding a comment noting that ideally this would vary depending on the size of the repository, but we don't have that information and thus pick a value that's large enough.    (And maybe we want to use 12, since 10 is insufficient for Linux, unless we had some other reason to pick 10).\r\n\r\nhttps://stackoverflow.com/questions/32405922/in-my-repo-how-long-must-the-longest-hash-prefix-be-to-prevent-any-overlap\r\n\r\nI might just write the long comment only in the backend, and at most do a comment here mentioning the value must match that used in the backend."", 'comment_created': datetime.datetime(2021, 3, 6, 0, 0, 8, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 588791293, 'comment_body': ""I think it would be better for this to have an `if shortened_text is not None` here, and two `url_to_a` calls, since it's a little subtle that `url_to_a` treats `None` as no parameter for `shortened_text`."", 'comment_created': datetime.datetime(2021, 3, 6, 0, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 588791405, 'comment_body': ""Does having two with the same name work?  In any case, I think it'd be better to use unique names for readability, e.g. /`marketplace` here."", 'comment_created': datetime.datetime(2021, 3, 6, 0, 4, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 588791609, 'comment_body': 'Can you change these tests to look at repositories that are not zulip/zulip?  The organization name matching the project name could hide bugs.  `zulip/zulip-mobile` would be a better choice.', 'comment_created': datetime.datetime(2021, 3, 6, 0, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 589024383, 'comment_body': ""> Does having two with the same name work? In any case, I think it'd be better to use unique names for\r\nreadability, e.g. `/marketplace` here.\r\n\r\n@timabbott I completely didn't get this part. Can you please explain this a little more ?"", 'comment_created': datetime.datetime(2021, 3, 7, 12, 39, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 589199372, 'comment_body': 'About half of these new tests have the `name` field set to `auto_shorten_links`, and the other half have unique names.  I think they should all have unique names.', 'comment_created': datetime.datetime(2021, 3, 8, 6, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 594020775, 'comment_body': 'I\'m not sure it makes sense to shorten links of these forms -- I don\'t think GitHub itself does so either (correct me if I\'m wrong for any of these examples; it should be easy enough to edit a GitHub comment to include all your test cases below to verify).  I think we just want to skip anything where `remaining_text != """"`.\r\n', 'comment_created': datetime.datetime(2021, 3, 15, 3, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 595149945, 'comment_body': 'GitHub does shorten links of these forms, but their shorten text is something different.\r\nFollowing is the comparison between how we do it right now and how GitHub does the same:\r\n| Links | GitHub Version | Zulip Version |\r\n| --- | --- | --- |\r\n| `https://github.com/zulip/zulip/issues/11895` | ![zulip_zulip#11895](https://user-images.githubusercontent.com/67277428/111310662-5af86c80-8683-11eb-9861-ed056678bf04.png) | ![Screenshot from 2021-03-16 17-40-36](https://user-images.githubusercontent.com/67277428/111310815-824f3980-8683-11eb-8ccc-0f94f550bfdb.png) |\r\n| `https://github.com/zulip/zulip/pull/16665` | ![zulip_zulip#16665](https://user-images.githubusercontent.com/67277428/111311003-b62a5f00-8683-11eb-8373-5efff3bdf763.png) | ![Screenshot from 2021-03-16 17-41-10](https://user-images.githubusercontent.com/67277428/111311050-c2162100-8683-11eb-8db3-0308bf81f91b.png) |\r\n| `https://github.com/zulip/zulip/commit/620e9cbf72-ca729534aba41693d7ab2872caa394` | ![zulip_zulip@620e9cb_diff_length](https://user-images.githubusercontent.com/67277428/111311240-f984cd80-8683-11eb-8939-e56528be9acb.png) | ![Screenshot from 2021-03-16 17-43-05](https://user-images.githubusercontent.com/67277428/111311295-0c979d80-8684-11eb-93b9-9d2918f473f3.png) |\r\n| `https://github.com/zulip/zulip/pull/16860/commits/1-9e96bcea616e6e9b1a3c10f25930ac1f75d4f92` | ![zulip_zulip@19e96bc](https://user-images.githubusercontent.com/67277428/111311456-436db380-8684-11eb-9ef6-0612731bec0b.png) | ![Screenshot from 2021-03-16 17-44-57](https://user-images.githubusercontent.com/67277428/111311496-4cf71b80-8684-11eb-8fe2-05b70b375907.png) |\r\n| `https://github.com/zulip/zulip/pull/16665#issue-513297835` | ![zulip_zulip#16665 (comment) Initial comment](https://user-images.githubusercontent.com/67277428/111312131-01913d00-8685-11eb-858d-4415c5a34c4c.png) | ![Screenshot from 2021-03-16 17-46-42](https://user-images.githubusercontent.com/67277428/111312193-0f46c280-8685-11eb-9169-86bff6408ef4.png) |\r\n| `https://github.com/zulip/zulip/pull/16665#issuecomment-719814618` | ![zulip_zulip#16665 (comment)](https://user-images.githubusercontent.com/67277428/111312340-2eddeb00-8685-11eb-9a72-c1022ce6db04.png) | ![Screenshot from 2021-03-16 17-47-32](https://user-images.githubusercontent.com/67277428/111312386-3bfada00-8685-11eb-8569-4e0158510df3.png) |\r\n| `https://github.com/zulip/zulip/issues/16579#issue-725908927` | ![zulip_zulip#16579 (comment)](https://user-images.githubusercontent.com/67277428/111312585-72d0f000-8685-11eb-9bec-8ee1291a93a3.png) | ![Screenshot from 2021-03-16 17-48-12](https://user-images.githubusercontent.com/67277428/111312630-80867580-8685-11eb-9da5-b83ad9cd828f.png) |\r\n| `https://github.com/zulip/zulip/issues/16482#issuecomment-726354516` | ![zulip_zulip#16482 (comment)](https://user-images.githubusercontent.com/67277428/111312786-a6ac1580-8685-11eb-8c3d-ebb8c4c341f6.png) | ![Screenshot from 2021-03-16 17-48-40](https://user-images.githubusercontent.com/67277428/111312881-bdeb0300-8685-11eb-9a69-d19872be4937.png) |\r\n| `https://github.com/zulip/zulip/pull/16964/commits` | ![Screenshot from 2021-03-16 18-54-57](https://user-images.githubusercontent.com/67277428/111316312-2ab3cc80-8689-11eb-957a-4c289d321670.png) | ![Screenshot from 2021-03-16 18-53-52](https://user-images.githubusercontent.com/67277428/111316167-0821b380-8689-11eb-97d9-63e6e2f454bf.png) |\r\n| `https://github.com/zulip/zulip/pull/16860/files` | ![zulip_zulip_pull_16860_files](https://user-images.githubusercontent.com/67277428/111312979-d9eea480-8685-11eb-8f5b-4ba9699a98e9.png) | ![Screenshot from 2021-03-16 17-49-19](https://user-images.githubusercontent.com/67277428/111313014-e07d1c00-8685-11eb-8107-b472597e631b.png) |\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2021, 3, 16, 13, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 595175528, 'comment_body': 'While GitLab slightly differs from GitHub, the following is how:\r\n| Links | GitLab Version |\r\n| --- | --- |\r\n| `https://gitlab.com/inkscape/inkscape/-/issues/1306` | ![Screenshot from 2021-03-16 18-43-41](https://user-images.githubusercontent.com/67277428/111314593-8ed59100-8687-11eb-8418-8e9e7de3ad59.png) |\r\n| `https://gitlab.com/inkscape/inkscape/-/merge_requests/2688` | ![Screenshot from 2021-03-16 18-45-17](https://user-images.githubusercontent.com/67277428/111314835-c8a69780-8687-11eb-9cee-d98be19c3ae3.png) |\r\n| `https://gitlab.com/inkscape/inkscape/-/issues/1306#note_325493115` | ![Screenshot from 2021-03-16 18-46-12](https://user-images.githubusercontent.com/67277428/111314968-ee33a100-8687-11eb-92a8-1c06f3fc6a52.png) |\r\n| `https://gitlab.com/inkscape/inkscape/-/merge_requests/2688#note_486823380` | ![Screenshot from 2021-03-16 18-47-29](https://user-images.githubusercontent.com/67277428/111315137-17543180-8688-11eb-8913-a336efc6c790.png) |\r\n| `https://gitlab.com/inkscape/inkscape/-/commit/9ce253cb-a0a23ef8f910bb7ab00584ccc96f9db8` | ![Screenshot from 2021-03-16 18-49-34](https://user-images.githubusercontent.com/67277428/111315485-6dc17000-8688-11eb-8ee2-8bbd4d2342ad.png) |\r\n| `https://gitlab.com/inkscape/inkscape/-/merge_requests/2688/commits` | ![Screenshot from 2021-03-16 18-53-02](https://user-images.githubusercontent.com/67277428/111315975-df99b980-8688-11eb-9cad-d61265de1bdf.png) |\r\n| `https://gitlab.com/inkscape/inkscape/-/merge_requests/2688/diffs?commit_id=28443c2e334c8ac4f2275e897ea116e97d595f68` | ![Screenshot from 2021-03-16 18-57-41](https://user-images.githubusercontent.com/67277428/111316771-8c743680-8689-11eb-9651-0c1df2f2f047.png) |\r\n\r\n`GITHUB_COMMIT_ID_PREFIX_LENGTH = 7`\r\n`GITLAB_COMMIT_ID_PREFIX_LENGTH = 8`\r\n\r\n@timabbott, should I now try to write the code to follow GitHub and GitLab patterns exactly the same ?\r\n\r\n', 'comment_created': datetime.datetime(2021, 3, 16, 13, 37, 36, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 599327916, 'comment_body': ""I think we should only do shortening for the basic issue, pr, and commit ones (i.e. the first 3 in your GitHub list) for the first version of this.  It'd be good to have the test suite cover the full range of examples from your comment, though, even if we're doing nothing special with these, since it'll be helpful for any additional examples.\r\n\r\nBut I basically want to be minimally aggressive on this.  Fundamentally, Zulip isn't a GitHub/GitLab-specific tool, and I think starting with a minimalist scope for what rewriting we do (and then seeing what feedback we get over the next month or two) is the right path forward.\r\n\r\nSimple and easy to predict is best when we're not sure where we're going to ultimately land on this feature."", 'comment_created': datetime.datetime(2021, 3, 23, 7, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 601149101, 'comment_body': ""Changed the default to 12, as I'd suggested earlier."", 'comment_created': datetime.datetime(2021, 3, 25, 7, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '9c6d8d9d81eae6db0c636dfcad37b169014e82d7', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
542898524,message view: Add hotkey hint.,"`>` and `e` are added as hotkey hint for `Quote and reply or forward` and `View source / Edit topic` options in actions popover.
",True,16931,https://api.github.com/repos/zulip/zulip/pulls/16931,https://github.com/zulip/zulip/pull/16931,closed,2,0,1,1,1,0,1,0,[{'name': 'size: XS'}],2020-12-19 08:44:40+00:00,2021-01-25 22:26:44+00:00,3246124.0,"37 days, 13:42:04",[],"[{'commit_sha': 'd8cbfa085c342527108f2643e43cfab6f8ec1ee2', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
553660643,linkifiers: Add setting to edit linkifiers.,"This commit adds a setting to edit realm filters. A new API is added in zproject/urls.py.Modal, added to edit realm filters, supports ui_report error.

Fixes #10830.

**Testing plan:** 
New test cases are added for this new setting.

**GIFs or screenshots:** 
#### Modal to Edit Linkifiers:
![Screenshot from 2021-01-12 21-31-31](https://user-images.githubusercontent.com/67277428/104345600-8e543900-5524-11eb-813a-64d249dffe4b.png)
-----------------------------------------------
#### Edit Linkifiers:
![Screenshot from 2021-01-12 21-33-30](https://user-images.githubusercontent.com/67277428/104345611-9318ed00-5524-11eb-834a-7c7e18d707e1.png)

",True,17045,https://api.github.com/repos/zulip/zulip/pulls/17045,https://github.com/zulip/zulip/pull/17045,closed,220,16,15,4,41,67,1,0,[{'name': 'size: XL'}],2021-01-12 18:24:50+00:00,2021-05-10 03:31:27+00:00,10141597.0,"117 days, 9:06:37","[{'comment_id': 581552224, 'comment_body': ""We generally use `check_update_realm_filter` as the naming convention for functions where validation is done inside `actions.py`.  Though I notice this module isn't following that convention more generally, so it might be reasonable to defer to follow-up work."", 'comment_created': datetime.datetime(2021, 2, 24, 1, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581553494, 'comment_body': 'Are these tests basically a copy of the set of values from the ""Create a linkifier"" test?  Probably it\'s not worth duplicating them all, given that we know structurally we\'re running the exact same validation code in this code path.', 'comment_created': datetime.datetime(2021, 2, 24, 1, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581554954, 'comment_body': 'We use the term ""linkifier"" rather than ""filter"" in all user-facing docs, and probably this text should be included.\r\n\r\n(More medium-term, we\'re going to eventually rename ""filters"" to ""linkifiers"" in the API; it\'s just a bit of an annoying transition because of mobile app compatibility issues)', 'comment_created': datetime.datetime(2021, 2, 24, 1, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581556098, 'comment_body': ""Please use `id=id)`, rather than `pk=id`; we prefer that style as it's more readable."", 'comment_created': datetime.datetime(2021, 2, 24, 1, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581558457, 'comment_body': ""We prefer `e.currentTarget` and similar over `this` for this sort of selector, stylistically, though again I note this module seems to already have the style you're using.  Maybe a good follow-up project to bring this module in line with the more recently improved settings pages."", 'comment_created': datetime.datetime(2021, 2, 24, 1, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581559019, 'comment_body': 'These should be done via CSS rules -- wherever possible we avoid doing inline styles like this from JavaScript.', 'comment_created': datetime.datetime(2021, 2, 24, 1, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 582335943, 'comment_body': 'I have left this unchanged, since you mentioned that this will be taken in the follow-up work.', 'comment_created': datetime.datetime(2021, 2, 24, 22, 0, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 582335976, 'comment_body': 'I have reduced the number of test cases and have just put the basic test cases now.', 'comment_created': datetime.datetime(2021, 2, 24, 22, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 582336052, 'comment_body': 'I have renamed this to `linkifier` and have also changed the same over [here](https://github.com/zulip/zulip/pull/17045/files#diff-7d09c06f7ab16ed46eeff8eb6e1a342f75fc9f3c780c6f10643303145316581eR5895).', 'comment_created': datetime.datetime(2021, 2, 24, 22, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 582336078, 'comment_body': 'It is corrected now. And I have also changed the same over [here](https://github.com/zulip/zulip/pull/17045/files#diff-9a1fd3f8a1bd0ccd686ac2d96d265d3d5dce323f6fc191adac2cb88500af6e1cR6444).', 'comment_created': datetime.datetime(2021, 2, 24, 22, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 582336102, 'comment_body': 'Again, I have left this unchanged, since you mentioned that this will be taken in the follow-up project.', 'comment_created': datetime.datetime(2021, 2, 24, 22, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 594050042, 'comment_body': 'This needs to catch RealmFilter.DoesNotExist.  You should use the same error message as for the deletion code path above.', 'comment_created': datetime.datetime(2021, 3, 15, 4, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 594050188, 'comment_body': 'This should make it more clear that this is updating a single linkifier.', 'comment_created': datetime.datetime(2021, 3, 15, 4, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 594050432, 'comment_body': 'For these last two parameters, since they should match what\'s present with the ""add realm filter"" endpoint (and I assume you just copied), it\'s worth extracting this as a shared variable.', 'comment_created': datetime.datetime(2021, 3, 15, 4, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 594050547, 'comment_body': 'Might as well call this `data-linkifier-id` just to avoid a migration later.', 'comment_created': datetime.datetime(2021, 3, 15, 4, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 594050763, 'comment_body': ""Same with these; s/filter/linkifier` would be well worth doing in this PR just to avoid future churn -- we're planning to eliminate `realm_filters` from the lexicon.\r\n\r\nAlso, I'd probably prefer to not mix `_`s and `-`s for naming IDs for the same feature."", 'comment_created': datetime.datetime(2021, 3, 15, 4, 59, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 594051441, 'comment_body': 'Maybe worth adding a brief comment here that the endpoint uses the somewhat uncommon in our codebase Django ValidationError system that returns somewhat complicated error dictionaries.\r\n\r\nThis isn\'t a pattern we want to use in general, but it\'s probably OK to have it here given that the other linkifier endpoints have it too.\r\n\r\nThat said, it\'d be nice to have a prep commit that extracts the code here that\'s common with the ""add linkifier"" code path as a function that we can call from both places rather than copying it.\r\n\r\nIn general, we try to avoid copying substantial blocks of code, as it tends to result in someone later fixing bugs in only one of the two places.', 'comment_created': datetime.datetime(2021, 3, 15, 5, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 596079248, 'comment_body': 'But updating an existing filter is like adding a filter, hence errors each time can be different (cannot be always `RealmFilter.DoesNotExist`) like `Invalid filter pattern` (when new filter pattern entered is Invalid) or `Invalid URL format string` (when the new format string is Invalid).\r\nShould I still update it to `RealmFilter.DoesNotExist` ?\r\nOr should I add this as extra except block to catch `RealmFilter.DoesNotExist` ?', 'comment_created': datetime.datetime(2021, 3, 17, 14, 38, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 596085673, 'comment_body': ""Sorry, I didn't get what `extracting this as a shared variable` means here."", 'comment_created': datetime.datetime(2021, 3, 17, 14, 45, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 596085975, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 3, 17, 14, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 596086231, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 3, 17, 14, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 596090142, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 3, 17, 14, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 599325400, 'comment_body': 'We have a set of common components in the API docs like `#/components/schemas/BasicStream` that let us avoid duplicating code in the OpenAPI files -- we should use that mechanism for this as well.', 'comment_created': datetime.datetime(2021, 3, 23, 7, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 601143787, 'comment_body': 'Yeah, I meant an additional except block -- sorry for the confusion.  I agree we still need the `except ValidationError` block that you already have.', 'comment_created': datetime.datetime(2021, 3, 25, 7, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 609762201, 'comment_body': 'This should be `/help/add-a-custom-linkifier`. This page was renamed in 9223dced3b1f0ca28cf9cf86193e121167ab50ef.', 'comment_created': datetime.datetime(2021, 4, 8, 14, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 609769317, 'comment_body': 'Would it be better to do this extraction in a separate, prep commit?', 'comment_created': datetime.datetime(2021, 4, 8, 14, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 609773926, 'comment_body': 'This should be `linkifier`, not `filter`. I think I missed this when doing the renaming for most of these 😅. Can you make a separate commit for this, along with the punctuation fix?', 'comment_created': datetime.datetime(2021, 4, 8, 14, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 609774306, 'comment_body': 'This should also be `linkifier`.', 'comment_created': datetime.datetime(2021, 4, 8, 14, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 613052392, 'comment_body': 'You should verify the value returned here, to make sure it was actually updated.', 'comment_created': datetime.datetime(2021, 4, 14, 8, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 613976081, 'comment_body': 'I think ideally, this `pk` -> `id` cleanup should be in its separate commit. (Because it changes existing code, and independent of this new feature.)', 'comment_created': datetime.datetime(2021, 4, 15, 11, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 613987230, 'comment_body': 'To address https://github.com/zulip/zulip/pull/17045#discussion_r594050188, I think something like-\r\n```\r\nUpdate a [linkifier](/help/add-a-custom-linkifier) ....\r\n```\r\nmight be better (notice the `a` and the singular `linkifier`), rather than saying this explicitly at the end.', 'comment_created': datetime.datetime(2021, 4, 15, 11, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 613991885, 'comment_body': 'I think you can do `linkifier = result.json()[""linkifiers""][0]` after asserting the length to be one, and that would be cleaner.\r\nAlso, this change could be in a different commit, since it\'s not related to this feature?', 'comment_created': datetime.datetime(2021, 4, 15, 11, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 613996007, 'comment_body': 'These tests should all use the API instead of internal `do_*` functions, so that they are more end-to-end.', 'comment_created': datetime.datetime(2021, 4, 15, 11, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 613997710, 'comment_body': 'Similar to my above comment, I think here too `linkifier = result.json()[""linkifiers""][0]` would be cleaner.', 'comment_created': datetime.datetime(2021, 4, 15, 11, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614000266, 'comment_body': ""I didn't understand what we're testing here. We've already tested a successful update above, right? Maybe this `re.match` assertion can go there, instead of doing a successful update once more just to test this?"", 'comment_created': datetime.datetime(2021, 4, 15, 11, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614001941, 'comment_body': ""I think we don't need these validation tests here, since we've already tested them in the `create` tests."", 'comment_created': datetime.datetime(2021, 4, 15, 11, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614054224, 'comment_body': 'This should be `Linkifier not found` 😅 ', 'comment_created': datetime.datetime(2021, 4, 15, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614069428, 'comment_body': ""I do not understand how using the same linkifier ID gives a `200` response at one time and a `400: Filter not found` at another time. Do we or do we not have a linkifier with `id=1` in the database?\r\nI think we don't need to test bad inputs here, because the point of this file is to generate correct examples.\r\nYou can probably create a new linkifier outside the `code_example` block at the beginning of the test, and then use the ID you get there to update."", 'comment_created': datetime.datetime(2021, 4, 15, 13, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614070167, 'comment_body': 'This could be in a separate commit, because it is unrelated with this new feature.', 'comment_created': datetime.datetime(2021, 4, 15, 13, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614075843, 'comment_body': ""Oh, I see you've fixed this in a later commit in this PR. But why introduce it in the first place?"", 'comment_created': datetime.datetime(2021, 4, 15, 13, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614110382, 'comment_body': 'Yeah!, actually I was following the documentation description of other APIs. I saw that `delete/remove linkifier` also has `Update [linkifiers]...` so I thought to go with the current description. But thanks, I guess this makes more sense.', 'comment_created': datetime.datetime(2021, 4, 15, 14, 17, 15, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614111881, 'comment_body': 'I think I should do:\r\n```.py\r\nlinkifiers = result.json()[""linkifiers""]\r\nself.assertEqual(len(linkifiers), 1)\r\nself.assertEqual(linkifiers[0][""pattern""], ""#(?P<id>[123])"")\r\nself.assertEqual(linkifiers[0][""url_format""], ""https://realm.com/my_realm_filter/%(id)s"")\r\n```\r\n`linkifiers` would make more sense.', 'comment_created': datetime.datetime(2021, 4, 15, 14, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614112217, 'comment_body': 'https://github.com/zulip/zulip/pull/17045#discussion_r614111881', 'comment_created': datetime.datetime(2021, 4, 15, 14, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614114974, 'comment_body': 'I want to rename this cleanly in a single commit since the `delete_linkifier` function also returns the same error `Filter not found` (which should be updated in a separate commit).', 'comment_created': datetime.datetime(2021, 4, 15, 14, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614121391, 'comment_body': ""> I do not understand how using the same linkifier ID gives a 200 response at one time and a `400: Filter not found` at another time.\r\n\r\nThat's because in the 2nd call to `client.call_endpoint` I'm not passing `request=request`. But I guess I confused here by not doing `{filter_id + 1}`. Sorry for the confusion."", 'comment_created': datetime.datetime(2021, 4, 15, 14, 29, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614124183, 'comment_body': 'Yeah, my point was, you can change just the `delete_linkifier` code (along with https://github.com/zulip/zulip/pull/17045#discussion_r614070167 maybe) in a commit at the beginning of this PR, and then just write this new code correctly.', 'comment_created': datetime.datetime(2021, 4, 15, 14, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614131114, 'comment_body': ""Again, I was trying to follow `test_delete` and `test_list` functions. But I think this makes more sense. I'll update accordingly in my new commit and address the older changes in a separate commit."", 'comment_created': datetime.datetime(2021, 4, 15, 14, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614137814, 'comment_body': ""These validations are done since a new API is added (hence I've used `client_patch`).\r\nAll the validations/error validations are done to verify that they work correctly for the new added API.\r\nI've not repeated any validation like `create` tests; here, I've just made sure that we do all types of validations (via this new API)."", 'comment_created': datetime.datetime(2021, 4, 15, 14, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614141369, 'comment_body': ""Ok, that makes sense. But I still think there's no need to test the `Filter not found` case, because it doesn't add to the documentation."", 'comment_created': datetime.datetime(2021, 4, 15, 14, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614144737, 'comment_body': 'Doing an `assert_json_success` implies that the request was made successfully or not.\r\n`assertIsNotNone` is done to verify that the `notify_linkifiers` function (in `actions.py`) sends an event containing the updated linkifiers that we cross-check in `assertIsNotNone`.', 'comment_created': datetime.datetime(2021, 4, 15, 14, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614149123, 'comment_body': 'Cool! I should better remove that part. Also, since `*_realm_filter` functions do not do the same.', 'comment_created': datetime.datetime(2021, 4, 15, 15, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 614157955, 'comment_body': 'Sorry for the confusion here. What I meant was that, once you have addressed https://github.com/zulip/zulip/pull/17045#discussion_r613996007, you can club that and this together, because they both test a successful linkifier update.', 'comment_created': datetime.datetime(2021, 4, 15, 15, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 614161980, 'comment_body': 'Got it! That will help to reduce these duplicate tests when https://github.com/zulip/zulip/pull/17045#discussion_r613996007 is addressed. Thanks!', 'comment_created': datetime.datetime(2021, 4, 15, 15, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 616273201, 'comment_body': 'What is this `data-status` attribute for -- just for tests?', 'comment_created': datetime.datetime(2021, 4, 20, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616273770, 'comment_body': ""Let's rename `html` to `edit_form_html` and `div => $edit_form_div`?"", 'comment_created': datetime.datetime(2021, 4, 20, 1, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616273887, 'comment_body': 'This is kinda a weird return format; why not just return `div`?', 'comment_created': datetime.datetime(2021, 4, 20, 1, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616274230, 'comment_body': ""What's the story with this `data-status` attribute?  We don't AFAIK use similar attributes anywhere except our standard `settings_save_discard_widget.hbs` widget; are you trying to replace its UI?"", 'comment_created': datetime.datetime(2021, 4, 20, 1, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616274467, 'comment_body': ""Yeah, or you could add a prep commit cleaning up this module's use of that pattern and then use it correctly here (or add a commit to this PR), when you're next looking at this, so we don't need to remember."", 'comment_created': datetime.datetime(2021, 4, 20, 1, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616275251, 'comment_body': 'This should be `aria-label` (with a title and tippy tooltip), not `aria-hidden`, sine the button does not have a textual label.\r\n\r\n(`aria-hidden` is only for icons on buttons that have a plain-text label too, e.g. in our gear menu).', 'comment_created': datetime.datetime(2021, 4, 20, 1, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 616275340, 'comment_body': '(The adjacent button is broken the same way; can you fix that in a prep commit?)', 'comment_created': datetime.datetime(2021, 4, 20, 1, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 621869077, 'comment_body': ""You don't need both `title` and a tooltip; additionally, when I hover over this button, nothing happens.\r\n\r\nIt's really important to test even tiny changes like this, because even though it's very simple, a rule of software is that essentially nothing works that you haven't tested :)"", 'comment_created': datetime.datetime(2021, 4, 28, 6, 58, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 621898609, 'comment_body': ""From https://github.com/zulip/zulip/pull/17045#discussion_r616275251, I assumed that we need both `title` and `data-tippy-content` attribute.\r\nAnd sorry for the result, actually, I cross-checked the changes and it was working fine for me; the reason that why it was not showing to you was that: since I added the `title` attribute to the `fa fa` icon and not to the `button` therefore it needed hovering exactly over the icon (hovering over the button and not over the icon doesn't give the result)."", 'comment_created': datetime.datetime(2021, 4, 28, 7, 41, 56, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 629022189, 'comment_body': ""I fixed several issues here:\r\n* Missing aria-label, which should always be present alongside title.\r\n* Invalid quoting within the `t` tag -- you need to use a different quote type.\r\n* The edit button should be before the delete button.\r\n\r\nI also notice there's a weird margin within the pencil icons we need to fix; will attempt a new commit to fix that."", 'comment_created': datetime.datetime(2021, 5, 10, 3, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 629022229, 'comment_body': 'The label `for` element needs to point to the ID it goes with.', 'comment_created': datetime.datetime(2021, 5, 10, 3, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 629028653, 'comment_body': ""These row edit changes are unnecessary; we'll live-update the row via `server_events_dispatch` like we do other UI.  I removed them and verified the UI still works."", 'comment_created': datetime.datetime(2021, 5, 10, 3, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 629035720, 'comment_body': 'Although the quoting looks weird, it isn’t actually a problem. `{{t ""Edit"" }}` is evaluated by Handlebars well before the outer quotes are parsed as HTML.', 'comment_created': datetime.datetime(2021, 5, 10, 4, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 629043454, 'comment_body': ""Yeah, but it confuses one's editor (etc.), and thus seemed worth fixing."", 'comment_created': datetime.datetime(2021, 5, 10, 4, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '8f290216efd56f471ffbf45fd074c22416bfae6e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43aee21dccc906af950eac9b7da60756dc02028d', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d9b5ffa92e9994f770522e5e5877086a2b262f4', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '831b7ca965c77103a31f0bf56e5b04bf527c368b', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
560212805,url preview: Update Zulip User-Agent.,"url preview: Update Zulip User-Agent.

Fixes #16970.",True,17104,https://api.github.com/repos/zulip/zulip/pulls/17104,https://github.com/zulip/zulip/pull/17104,closed,2,3,1,1,2,4,2,0,"[{'name': 'area: markdown'}, {'name': 'size: XS'}]",2021-01-22 21:10:27+00:00,2021-01-25 22:24:49+00:00,263662.0,"3 days, 1:14:22","[{'comment_id': 562930189, 'comment_body': 'We should also fix `+chat.zulip.org` to `+https://chat.zulip.org/` here.', 'comment_created': datetime.datetime(2021, 1, 22, 21, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 562930216, 'comment_body': 'What is this for?', 'comment_created': datetime.datetime(2021, 1, 22, 21, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 562933653, 'comment_body': ""I think I copy paste the same `response = requests.get(mark_sanitized(url), stream=True, headers=HEADERS, timeout=TIMEOUT)` at line number 91 and 51.\r\nI'll correct this."", 'comment_created': datetime.datetime(2021, 1, 22, 21, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 563006522, 'comment_body': 'Use `settings.ROOT_DOMAIN_URI` rather than hard-coding `https://`.', 'comment_created': datetime.datetime(2021, 1, 23, 2, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': '472011ab4771b2d88393dd29c497f82534e00d5e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
613892926,bots settings: Stop modal from getting closed when error is shown.,"This commit fixes the issue of the error message not getting displayed when the `Full name` field, in bots settings, is given a duplicate name of an already created bot with the same name.
<!-- What's this PR for?  (Just a link to an issue is fine.) -->
Fixes #18091.

**Testing plan:** <!-- How have you tested? -->
Added new test in the 2nd commit.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->

![bots settings modal](https://user-images.githubusercontent.com/67277428/114450320-7ce9fe00-9bf3-11eb-81b7-b4addd2f431a.png)

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,18109,https://api.github.com/repos/zulip/zulip/pulls/18109,https://github.com/zulip/zulip/pull/18109,closed,39,3,4,2,3,0,3,0,"[{'name': 'area: settings (user)'}, {'name': 'area: bots'}, {'name': 'size: M'}]",2021-04-12 19:35:02+00:00,2021-04-13 18:42:37+00:00,83255.0,23:07:35,[],"[{'commit_sha': 'ad54ef3a16eaf8533b86cb434d89c00b727ffa36', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9eef02b27aec94088618fbc47df7136414f07631', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
623970615,notifications: Add support for `no sound` option in `Notification sound`.,"This commit adds support for the `no sound` option in the dropdown menu of `Notification sound`. When this option is selected, no audible notification is sent to the user.

`no sound` will appear as the first option in the dropdown menu, since this is not categorized as playable audio.

This new option is added so that folks can disable audio notifications without losing their other notification configuration (like for PMs, mentions).


**Testing plan:** <!-- How have you tested? -->

A necessary test case is added for this new option.

Fixes #16090.",True,18274,https://api.github.com/repos/zulip/zulip/pulls/18274,https://github.com/zulip/zulip/pull/18274,closed,46,7,6,2,6,4,6,0,"[{'name': 'area: settings (user)'}, {'name': 'priority: high'}, {'name': 'area: notifications (messages)'}, {'name': 'size: L'}, {'name': 'new feature'}, {'name': 'release goal'}]",2021-04-27 04:30:38+00:00,2021-04-27 23:45:39+00:00,69301.0,19:15:01,"[{'comment_id': 621354867, 'comment_body': 'I\'m not sure this is the right label for this; I think `silent` or ""Disable sound"" might be more natural.  We should also tag the option label for translation.  @alya for thoughts.\r\n\r\n', 'comment_created': datetime.datetime(2021, 4, 27, 15, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 621417249, 'comment_body': ""Also, can you try adding a commit to this PR to capitalization the names of the sounds in the labels?  I've been meaning to do that.  (E.g. call `toUpperCase` for the label part)."", 'comment_created': datetime.datetime(2021, 4, 27, 17, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 621418021, 'comment_body': 'I would prefer a check based on `page_params.notification_sound`, not the state of the DOM, since that seems more like the source of truth here.', 'comment_created': datetime.datetime(2021, 4, 27, 17, 2, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 621518667, 'comment_body': 'How about ""None""?', 'comment_created': datetime.datetime(2021, 4, 27, 19, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'alya', 'type': 'User'}]","[{'commit_sha': 'b573964bfa8a8f61f8a99462743993a7094da4f6', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63e3d3dd36b528f6df095c532f4b316fd177fdec', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
638066295,markdown: Fix silent wildcard mentions bug.,"A message containing wildcard mention when quoted (which is turned into a silent mention) or message with silent wildcard mention notifies the users by sending desktop, sound, and missed message email notifications. This is clearly a bug which is fixed by this commit.

Fixes: #18354.

Added new tests for the same.",True,18426,https://api.github.com/repos/zulip/zulip/pulls/18426,https://github.com/zulip/zulip/pull/18426,closed,35,1,2,1,5,1,4,0,"[{'name': 'bug'}, {'name': 'priority: high'}, {'name': 'area: notifications (messages)'}, {'name': 'size: M'}]",2021-05-10 17:30:00+00:00,2021-05-10 19:20:56+00:00,6656.0,1:50:56,"[{'comment_id': 629544652, 'comment_body': 'Should I rather use:\r\n```.py\r\nfrom zerver.lib.mention import wildcards\r\n```\r\n?', 'comment_created': datetime.datetime(2021, 5, 10, 17, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '55f4996f16b803322b341a65c198ad0ab609868e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
534990424,linkifiers: Add joint validation for linkifier urls and patterns.,"This commit validates the linkifier urls and patterns together, and add
the following additional checks:

1. All groups in the pattern must be used in the url.
2. All groups in the url must be declared in the pattern.
3. Substituting all groups in the url must result in a valid url.

Fixes #16482.

We also allow substitutions in domain names now.


**Testing plan:** <!-- How have you tested? -->
New test cases are added to match the change.
",True,16860,https://api.github.com/repos/zulip/zulip/pulls/16860,https://github.com/zulip/zulip/pull/16860,closed,104,6,4,1,4,15,1,0,[{'name': 'size: XL'}],2020-12-09 08:03:19+00:00,2021-06-17 00:55:08+00:00,16390309.0,"189 days, 16:51:49","[{'comment_id': 539101951, 'comment_body': 'Be specific: `except orjson.JSONDecodeError`. But given that this is test code, it’s better not to handle this exception at all—if we get invalid JSON here, something has gone wrong and we *want* a stack trace.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539103218, 'comment_body': ""This can be `None`. Since you’re not expecting that, use `json['errors']` rather than `json.get('errors')`."", 'comment_created': datetime.datetime(2020, 12, 9, 8, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539106159, 'comment_body': '`json` is the wrong variable name for something we’ve just translated *out* of JSON.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539106853, 'comment_body': 'This loop takes quadratic time. Among the many ways to improve it, the simplest is replacing it with `sum(errors.values(), [])`.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539107698, 'comment_body': 'If you’re not mutating `expected_errors`, use the immutable `Sequence` type rather than `List`.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 35, 10, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539112625, 'comment_body': 'This is not correct in the presence of `%%` (which is how you embed a literal `%` in a format string).\r\n\r\nGroup names aren’t allowed to include `(` either.\r\n\r\nThere’s no point in using `re.compile` on a regex you’re throwing away after one use.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539112970, 'comment_body': 'PEP 8 style is just `if group_set`.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 43, 9, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539113320, 'comment_body': '`group_list = sorted(group_set)` is simpler.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539117805, 'comment_body': 'Use `""… %(name)r …""` instead of `""… \'%(name)s\' …""` for correct escaping.', 'comment_created': datetime.datetime(2020, 12, 9, 8, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 539133612, 'comment_body': 'If we want a stack trace then should I just write\r\n`json_content = orjson.loads(result.content)` ?', 'comment_created': datetime.datetime(2020, 12, 9, 9, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 539138931, 'comment_body': ""Okay this should be simply `errors = json_content['errors']` since we want a stack trace?"", 'comment_created': datetime.datetime(2020, 12, 9, 9, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 539174830, 'comment_body': '> This is not correct in the presence of `%%` (which is how you embed a literal `%` in a format string).\r\n\r\nCan you give an example so that I can understand this more better ?', 'comment_created': datetime.datetime(2020, 12, 9, 10, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 581554647, 'comment_body': '```pycon\r\n>>> ""Hello %(foo)s"" % {""foo"": ""bar""}\r\n\'Hello bar\'\r\n>>> ""Hello %%(foo)s"" % {""foo"": ""bar""}\r\n\'Hello %(foo)s\'\r\n>>> ""Hello %%%(foo)s"" % {""foo"": ""bar""}\r\n\'Hello %bar\'\r\n>>> ""Hello %%%%(foo)s"" % {""foo"": ""bar""}\r\n\'Hello %%(foo)s\'\r\n>>> ""Hello %%%%%(foo)s"" % {""foo"": ""bar""}\r\n\'Hello %%bar\'\r\n>>> ""Hello %(inv(alid)s"" % {""inv(alid"": ""bar""}\r\nTraceback (most recent call last):\r\n  File ""<stdin>"", line 1, in <module>\r\nValueError: incomplete format key\r\n```', 'comment_created': datetime.datetime(2021, 2, 24, 1, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 581555257, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 2, 24, 1, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 581555339, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 2, 24, 1, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}]","[{'commit_sha': '98f8d94b25296f854b478975ebf657b4446ed94d', 'committer_username': 'aero31aero', 'committer_name': 'Rohitt Vashishtha', 'committer_email': 'aero31aero@gmail.com', 'commit_date': datetime.datetime(2014, 7, 1, 4, 47, 19, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
646127200,markdown: Add support for user group silent mention and other followups.,"This will add support for user group silent mention and provides typeahead for them.

I see no apparent reason to support the typeahead for wildcard silent mentions. Therefore I've not added it.

Fixes: #11711.",True,18529,https://api.github.com/repos/zulip/zulip/pulls/18529,https://github.com/zulip/zulip/pull/18529,closed,165,45,7,8,6,7,4,0,"[{'name': 'bug'}, {'name': 'area: markdown'}, {'name': 'area: compose (misc)'}, {'name': 'size: XL'}]",2021-05-17 19:33:09+00:00,2021-05-20 18:43:04+00:00,256195.0,"2 days, 23:09:55","[{'comment_id': 634836318, 'comment_body': 'I think we want to rather than having the whole syntax be an if/else just have a variable `classes = ""user-mention""` that has ` silent` added to it for the silent case.  That way, we avoid duplicating the escaping logic (etc.), which would increase the risk of future bugs.', 'comment_created': datetime.datetime(2021, 5, 19, 0, 31, 10, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 635281148, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 5, 19, 14, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 635502251, 'comment_body': ""This is hard to read.  I think it'd be a lot better to just have a single `if (silently)` and set `group_name` or classes within that, than having 3 checks for silently in inline conditionals.  \r\n\r\n(The previous commit has the same issue; I'd rather use `let` with some variables than have some many `?` inline conditionals for the same condition)."", 'comment_created': datetime.datetime(2021, 5, 19, 18, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 635504056, 'comment_body': 'This regex seems likely wrong, in that you have a `.*` that could match a bunch of characters including another `><`, i.e. end up matching across multiple adjacent spans in a weird way\r\n\r\nIt appears the previous regex has the same bug; I think a `[^>]*` would work for the two `.*` blocks in the middle, so maybe do a commit fixing the existing instance and then fix this?', 'comment_created': datetime.datetime(2021, 5, 19, 18, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 635575251, 'comment_body': ""I initially did this, but I don't know why I thought I shouldn't expand the code :facepalm: and try to keep it compact.\r\nThanks! for explaining."", 'comment_created': datetime.datetime(2021, 5, 19, 20, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 635576410, 'comment_body': 'Fixed the regex for this block and the previous block.', 'comment_created': datetime.datetime(2021, 5, 19, 20, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 636375576, 'comment_body': 'I found it a lot more readable with this model, where we set all the parameters in each conditional, so I made that tweak and merged this.\r\n\r\nThanks @akshatdalton!', 'comment_created': datetime.datetime(2021, 5, 20, 18, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '13421a19695a95bf04db37069f1f03a3c280f9e9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d031ecf8fe2d0a46400e3289623cf75a92043ef', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bab65e82f99ef7fb4185a529726330728360fcd', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e50d18919114403906ee9700bdecae3982346edd', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf96d7eae8cf4f7bc6fac302af2cc3414c265dcf', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4891e7e4f10788099cd3780a3c0966c6d4f463a', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b636a9199bb52bfa089f162d25dd3b4558e670b0', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78b59fa75605bde0f210dd81c8f1b8fe399b85e8', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
646909038,refactor: Extract linkifier non-settings logic from `markdown.js`.,"- 1st commit extracts the linkifier non-settings logic from `markdown.js`.

- And the 2nd commit merges the `markdown_katex.js` test file with `markdown.js` test file.
We split them in the commit: https://github.com/zulip/zulip/commit/c50dbf82974cafc4eeb00c5d1fe86ab18e000374 because at that time, we thought markdown_katex was gonna require rewireproxy magic in the later commits. But we later removed the rewiremock dependency in the commit: https://github.com/zulip/zulip/commit/30c7108955d86d9b860ef6e746ef1e707dbfe62f.

   So now, we can safely merge the `markdown_katex.js` test file with the `markdown.js` test file.",True,18538,https://api.github.com/repos/zulip/zulip/pulls/18538,https://github.com/zulip/zulip/pull/18538,closed,200,194,8,2,2,1,1,0,[{'name': 'size: XL'}],2021-05-18 16:24:45+00:00,2021-05-19 18:59:28+00:00,95683.0,"1 day, 2:34:43","[{'comment_id': 634839174, 'comment_body': ""I think we want to call this `linkifiers.js`; when we add stream-level linkifiers in the future, we'll likely want them to be managed by the same file.  \r\n\r\n"", 'comment_created': datetime.datetime(2021, 5, 19, 0, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '60501a7a004562c4bd9954b6912a8cce4d91fc79', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34295498ea60c53449810c4da8297ed968d64d1e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
653671197,markdown: Fix shebang line eliminating behaviour of Codehilite.,"This patch is done to match the CommonMark rather than the original upstream Markdown. In the upstream Markdown, this function is used to determine the language of a code block from the shebang line. This shebang line is removed when shebang (with no path) is provided. This was known to create some problem for the users.

Documentation links: 
1. https://python-markdown.github.io/extensions/code_hilite/#shebang-no-path
2. https://github.com/Python-Markdown/markdown/blob/eacff473a2600902c200af8c88446af6c183203f/markdown/extensions/codehilite.py#L164-L180

Fixes: #18591.",True,18608,https://api.github.com/repos/zulip/zulip/pulls/18608,https://github.com/zulip/zulip/pull/18608,closed,70,2,2,1,6,0,1,0,[{'name': 'size: L'}],2021-05-26 12:05:51+00:00,2021-07-15 22:18:34+00:00,4356763.0,"50 days, 10:12:43",[],"[{'commit_sha': '3654f4e0e95405ae3c2f84f412e6c71b8c529eb8', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
660957181,settings: Make `MAX_MESSAGE_LENGTH` a server-level setting.,"This will offer users who are self-hosting to adjust this value. Moreover, this will help to reduce the overall time taken to test `test_markdown.py` (since this can be now overridden with `override_settings` Django decorator).

This is done as a prep commit for #18641.",True,18683,https://api.github.com/repos/zulip/zulip/pulls/18683,https://github.com/zulip/zulip/pull/18683,closed,14,11,8,1,1,0,1,0,[{'name': 'size: S'}],2021-06-03 14:32:12+00:00,2021-06-03 16:26:28+00:00,6856.0,1:54:16,[],"[{'commit_sha': '1793e6e3fd1432e7a8e81541d708ff16d061b7c6', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
665424895,Refactor: Use `responses` module to mock HTTP responses.,,True,18754,https://api.github.com/repos/zulip/zulip/pulls/18754,https://github.com/zulip/zulip/pull/18754,closed,145,146,5,4,2,2,1,0,[{'name': 'size: XL'}],2021-06-08 23:15:35+00:00,2021-06-09 19:25:34+00:00,72599.0,20:09:59,"[{'comment_id': 648547337, 'comment_body': '@alexmv FYI -- is this a change we should backport?', 'comment_created': datetime.datetime(2021, 6, 9, 18, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 648865980, 'comment_body': ""Yikes -- thanks for the catch!  This is reasonable but not urgent to backport -- there are no callsites that pass anything that'd end up in `kwargs`."", 'comment_created': datetime.datetime(2021, 6, 10, 5, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'alexmv', 'type': 'User'}]","[{'commit_sha': '1259f5a70eb3e06cd2c813ede59ce535ece71755', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bef712039053305eee2b91533b2ec9a1ee121b43', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cc6ff57db69ebd6b3b9fbae43170f4401b2a30e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '803e199063f170fbc9315aec502aab4430aeb7dc', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
668570732,test_push_notifications: Use `responses` module to mock HTTP responses.,,True,18811,https://api.github.com/repos/zulip/zulip/pulls/18811,https://github.com/zulip/zulip/pull/18811,closed,133,113,2,1,2,2,1,0,[{'name': 'size: XL'}],2021-06-11 21:20:00+00:00,2021-06-12 14:31:12+00:00,61872.0,17:11:12,"[{'comment_id': 650321297, 'comment_body': 'Can you move this to a new PR?  I ask mainly because the popover looks too narrow and thus probably needs some styling tweak.', 'comment_created': datetime.datetime(2021, 6, 12, 0, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 650405967, 'comment_body': '#18819', 'comment_created': datetime.datetime(2021, 6, 12, 15, 47, 6, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '02ffaefe436c8cf7421367c3c1472adff5d7f0ae', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
672148234,models: Update `group_match_regex` to correctly detect parameters in `url_format_string`.,"This is a follow-up for 98f8d94b25296f854b478975ebf657b4446ed94d.
For cases when `url_format_string` is like `https://example.com/%%(foo)s/%(bar)s`, `group_match_regex` should only detect `bar` as the intended parameter and not `foo`.

I've not added any new test for this. But this will clear the error in [this test](https://github.com/zulip/zulip/blob/8ce1fd1c50194cb7ef256480ca0e76afcd1e95af/zerver/tests/test_realm_linkifiers.py#L124-L130) when issue: #12323 will be resolved.

@andersk I hope this resolves the concern you raised in https://github.com/zulip/zulip/pull/16860#discussion_r539112625?
",True,18889,https://api.github.com/repos/zulip/zulip/pulls/18889,https://github.com/zulip/zulip/pull/18889,closed,1,1,1,1,1,0,1,0,[{'name': 'size: XS'}],2021-06-17 03:26:49+00:00,2021-06-17 22:33:36+00:00,68807.0,19:06:47,[],"[{'commit_sha': '6a98786a13aa8428bf22d470a50f70c4a1246c81', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
677202097,webhooks/slack_incoming: Update regex to correctly convert emphasis.,"This was a bug where we were converting `_text_` to` **text**`. For emphasis, we use the `*text*` format.


**Testing plan:** <!-- How have you tested? -->

A Test case is modified to check this conversion.
",True,18980,https://api.github.com/repos/zulip/zulip/pulls/18980,https://github.com/zulip/zulip/pull/18980,closed,3,3,3,1,1,0,1,0,[{'name': 'size: S'}],2021-06-24 15:15:22+00:00,2021-06-24 16:43:32+00:00,5290.0,1:28:10,[],"[{'commit_sha': 'cc22050bc5b794287fe7e458e3bb6202e94ebede', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
678091454,message_view: Add `resolve topic` button in message recipient bar.,"Now, one can (un)resolve the topic from 2 places:

1. Stream popovers.
2. Message recipient bars.

Fixes: #18988.",True,19011,https://api.github.com/repos/zulip/zulip/pulls/19011,https://github.com/zulip/zulip/pull/19011,closed,39,4,5,2,9,6,3,0,"[{'name': 'area: message-editing'}, {'name': 'priority: high'}, {'name': 'size: M'}]",2021-06-25 18:04:10+00:00,2021-07-05 23:58:31+00:00,885261.0,"10 days, 5:54:21","[{'comment_id': 659095257, 'comment_body': 'Let\'s call this ""RESOLVED TOPICS""; that\'ll be more greppable.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 48, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659095406, 'comment_body': 'This is great, but we probably want to do the refactoring to make this share code with the `stream_popovers.js` logic.\r\nI think structurally, if this function accepted a `message_id` and a topic, we could have the `stream_popover.js` code call it?', 'comment_created': datetime.datetime(2021, 6, 26, 0, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659095528, 'comment_body': ""Let's do a preparatory refactoring commit moving this to be exported as `message_edit.RESOLVED_TOPIC_PREFIX`, so that we don't end up with multiple copies of this definition."", 'comment_created': datetime.datetime(2021, 6, 26, 0, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659095665, 'comment_body': 'After playing with this, I think we want to migrate all of the `recipient_bar_icon` elements to use TippyJS tooltips for consistency with the rest of the message view UI.  Feel free to do that in a follow-up PR or extra commits in this PR series.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659095757, 'comment_body': 'Also, the labels should match what we use in the popover: ""Mark topic resolved"" (or whatever it was).  It\'s very important to use consistent terminology for a feature in user-facing UI.', 'comment_created': datetime.datetime(2021, 6, 26, 0, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 659095794, 'comment_body': '(Maybe it makes sense to do this as a series of preparatory refactoring commits).', 'comment_created': datetime.datetime(2021, 6, 26, 0, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '505502a993364d16667b01a2ec628df5ae43bf68', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f80419509ee43d4947b72987586343a24e3d7e80', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
684305491,tooltip: Improve tooltip placement for User sidebar.,See https://chat.zulip.org/#narrow/stream/9-issues/topic/.22Search.20people.22.20tooltip.20cut.20off.,True,19136,https://api.github.com/repos/zulip/zulip/pulls/19136,https://github.com/zulip/zulip/pull/19136,closed,4,4,3,2,1,0,0,0,[],2021-07-06 11:47:52+00:00,2021-07-06 22:26:53+00:00,38341.0,10:39:01,[],"[{'commit_sha': '9dcf5b74c421bbd32ce1748cd12749b989df2aeb', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e04fca9c632a16605a421aba312d03eadd999e45', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
685492166,composebox_typeahead: Open typeahead immediately when @ is entered.,"This change ensures that we pop up the typeahead when one
has entered just `@`. This will make clear to the user
about the @-mentions feature in Zulip.
This also makes us consistent with expectations from other
chatting apps like Slack, Discord, etc.

Added few test cases and modified the present ones.

Fixes: #19142.
",True,19160,https://api.github.com/repos/zulip/zulip/pulls/19160,https://github.com/zulip/zulip/pull/19160,closed,12,8,2,1,1,0,0,0,[],2021-07-07 20:31:18+00:00,2021-07-07 21:29:23+00:00,3485.0,0:58:05,[],"[{'commit_sha': '3ade74bdc03cf53b666a3345656b6083561bb1d5', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
686088262,recipient_row: Shift topic edit form code to the above of external link.,"When editing a topic name (and the topic name has some link
in it) through the recipient bar, the external link icon
overlaps with the stream name. Shifting the code now
ensures that the external link icon would appear to the
right of the topic edit form box.

Also see: https://chat.zulip.org/#narrow/stream/9-issues/topic/topic.20edit.20recipient.20bar



**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->

| Before | After |
| --- | --- |
| ![Screenshot from 2021-07-08 20-06-58](https://user-images.githubusercontent.com/67277428/124943429-1b86cf00-e02a-11eb-95ad-f6f543d2800f.png) | ![Screenshot from 2021-07-08 20-01-22](https://user-images.githubusercontent.com/67277428/124943467-23df0a00-e02a-11eb-85bf-2d2f6164e169.png) |


",True,19174,https://api.github.com/repos/zulip/zulip/pulls/19174,https://github.com/zulip/zulip/pull/19174,closed,4,4,1,1,1,0,0,0,[],2021-07-08 14:52:31+00:00,2021-07-08 19:39:02+00:00,17191.0,4:46:31,[],"[{'commit_sha': '3d37d1c81032a6981d8f326c3f69c1598a847923', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
686349061,topic_edit_form: Restyle topic edit save button with logo colours.,"Similar to what mentioned in 2e196fd5d396c621ab69f2f2a15f65f3fa5c2662
previous sea-green colour didn't meet the WCAG AA standard
guidelines for color contrast. This changes meets WCAG AAA
standard.
",True,19183,https://api.github.com/repos/zulip/zulip/pulls/19183,https://github.com/zulip/zulip/pull/19183,closed,1,21,3,1,1,0,0,0,[],2021-07-08 21:54:07+00:00,2021-07-09 00:45:42+00:00,10295.0,2:51:35,[],"[{'commit_sha': '36783863fee34c81655339ca0b62dce8dcdf7978', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
686364123,tooltip: Improve tooltip visibility for message control buttons.,"This change ensures that the tooltip doesn't hide by the
selected message blue border.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->

| Before | After |
| --- | --- |
| ![Screenshot from 2021-07-09 03-44-34](https://user-images.githubusercontent.com/67277428/124998316-d1bdd900-e069-11eb-8855-6c1abce73887.png) | ![Screenshot from 2021-07-09 03-43-52](https://user-images.githubusercontent.com/67277428/124998337-daaeaa80-e069-11eb-8726-1c5e39d281b3.png) |",True,19184,https://api.github.com/repos/zulip/zulip/pulls/19184,https://github.com/zulip/zulip/pull/19184,closed,3,0,1,1,1,0,0,0,[],2021-07-08 22:28:25+00:00,2021-07-09 00:41:23+00:00,7978.0,2:12:58,[],"[{'commit_sha': '55cf8d6e0152afaeb9fcaa7719c85e215756468f', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
687061559,recipient_bar: Change CSS of unresolve topic icon to that of resolve icon.,"It is very unlikely that one may want to unresolve
a topic. Topic resolving button should look the
same in whatever state it is.

See: https://chat.zulip.org/#narrow/stream/101-design/topic/closing.2Fsolving.20a.20topic.20.28.2311154.29/near/1228906",True,19204,https://api.github.com/repos/zulip/zulip/pulls/19204,https://github.com/zulip/zulip/pull/19204,closed,1,1,1,1,1,1,0,0,[],2021-07-09 22:07:32+00:00,2021-07-13 16:13:43+00:00,324371.0,"3 days, 18:06:11","[{'comment_id': 668889299, 'comment_body': 'Removing `on_hover_topic_unresolve` makes the click handler written for this widget no longer effective.  ', 'comment_created': datetime.datetime(2021, 7, 13, 15, 43, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '41dbe8ee6ba849f103b6ff2082e9760528969fb9', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
689200331,resolve topic: Add `is:resolved` search keyword/filtering support.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
Fixes: #18990.

**Testing plan:** <!-- How have you tested? -->

New test cases are added.",True,19230,https://api.github.com/repos/zulip/zulip/pulls/19230,https://github.com/zulip/zulip/pull/19230,closed,289,18,19,8,3,5,0,0,[],2021-07-13 16:08:23+00:00,2021-07-14 06:49:48+00:00,52885.0,14:41:25,"[{'comment_id': 668920016, 'comment_body': 'This logic intentionally used the `in` style because that would support additional flags that work like `starred` more easily.', 'comment_created': datetime.datetime(2021, 7, 13, 16, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 668920984, 'comment_body': ""Let's add `_sa` to the name of this function, since it's a SQLAlchemy function and that's the pattern we're using for them here."", 'comment_created': datetime.datetime(2021, 7, 13, 16, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 668921483, 'comment_body': ""I'd call this variable `resolved_topic_name` to make the test more readable."", 'comment_created': datetime.datetime(2021, 7, 13, 16, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 668921982, 'comment_body': ""I'd confirm the ID of the message matches the `anchor`."", 'comment_created': datetime.datetime(2021, 7, 13, 16, 22, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 669019211, 'comment_body': ""I've added the prep commit for: `assertTrue` -> `assert_length`. (https://github.com/zulip/zulip/pull/19233)"", 'comment_created': datetime.datetime(2021, 7, 13, 18, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '7ec406f39d3ed9e8f10f2be02093de8d1e5d56b1', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5c4d51ed2093296f2db059310ab6c87ce4d85b9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a45379a3099a7846b1117992be1d35c450352ee', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe9693c824e0a03b1762dec888abc510f026b48a', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '272901326cf9b2e4449355f598c701bac036fc12', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ba35d7fe2abdd657d5d434358f3b31c8cf1d01', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87295dbb8a7faa1aebd0b86ac0cdd65fc62ccf6b', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0764386bfcbeea2ae84879ac01d02a79a508baa', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
689329948,refactor: Use `assert_length` helper instead of `assertTrue/assertEqual`.,,True,19233,https://api.github.com/repos/zulip/zulip/pulls/19233,https://github.com/zulip/zulip/pull/19233,closed,41,31,15,4,1,0,0,0,[],2021-07-13 19:06:43+00:00,2021-07-13 20:03:38+00:00,3415.0,0:56:55,[],"[{'commit_sha': '45d34d75a0a21a6d12572dac8aa2077c4700ca73', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76577b6bad2a5172fe8f1c13052d77c919a8a82d', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd314fa245b21735aa3366fcaf54be104c3cbc729', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e12b8d764c12eda0e88a40c9616a2fa5dcfb7fb9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
694775579,"notification: Fix ""narrow to..."" link present above composebox.","Earlier copy to the link present above the composebox (which
appears when a message is sent outside the current narrow), it
used to provide the link to the home page which is fixed now.
Now, copy to the link gives the link of the narrow where the message
is sent.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->
https://chat.zulip.org/#narrow/stream/9-issues/topic/copying.20.22narrow.20to.2E.2E.2E.22.20link.20not.20working

**Testing plan:** <!-- How have you tested? -->
Tested manually.



<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,19345,https://api.github.com/repos/zulip/zulip/pulls/19345,https://github.com/zulip/zulip/pull/19345,closed,35,4,2,1,2,0,1,0,[{'name': 'size: M'}],2021-07-21 23:44:47+00:00,2021-08-07 16:51:05+00:00,1443978.0,"16 days, 17:06:18",[],"[{'commit_sha': '2eed88fd1c3c83402607acb16facc0c1d4594dd6', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
694991888,fenced_code: Add `process_contents` flag to de-duplicate code.,,True,19352,https://api.github.com/repos/zulip/zulip/pulls/19352,https://github.com/zulip/zulip/pull/19352,closed,17,27,1,1,0,0,1,0,[{'name': 'size: M'}],2021-07-22 09:02:59+00:00,2021-07-22 17:57:48+00:00,32089.0,8:54:49,[],"[{'commit_sha': '7d9e71be214c92135f001ba9cd1c8b2c768659c1', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
698206657,composebox_typeahead: Prevent default actions only after triggering the focus.,"In this case, we need to prevent the default actions
only after triggering the focus of the selected element.

This was known to cause a bug where after starting a new
topic, if one presses the tab key, then focus was not shifted
from the topic input box to the compose box. This commit fixes
that bug.

See: https://chat.zulip.org/#narrow/stream/9-issues/topic/tab.20key.20not.20working.20from.20topic.20input.20box/near/1235022.


**Testing plan:** <!-- How have you tested? -->

Tested manually on Chrome and Mozilla.
",True,19407,https://api.github.com/repos/zulip/zulip/pulls/19407,https://github.com/zulip/zulip/pull/19407,closed,4,5,1,2,2,0,1,0,[{'name': 'size: S'}],2021-07-27 21:41:58+00:00,2021-07-27 23:17:31+00:00,5733.0,1:35:33,[],"[{'commit_sha': '6f089d56009a0671958ec76897e400699c1579a6', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '250efb7d50518c06988a2f6d0ad6f1cf6519fc64', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
698224056,composebox_typeahead: Re-add comment to explain the need of `nextFocus` variable.,"This commit re-adds the comment to explain the need
of `nextFocus` variable which was deleted in
3b0694693b15ea862d41ff0959e28e71c4ecb3dc.",True,19408,https://api.github.com/repos/zulip/zulip/pulls/19408,https://github.com/zulip/zulip/pull/19408,closed,4,0,1,1,1,0,1,0,[{'name': 'size: XS'}],2021-07-27 22:19:09+00:00,2021-07-27 22:41:29+00:00,1340.0,0:22:20,[],"[{'commit_sha': '9003c19efa2e60e58ee756fd6b1348414850a296', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
545630468,markdown: Add support for online mentions.,"This commit adds support for online mentions, `@**online**/@**here**`. Users can mention all the other online users. This sends a desktop notification to the users who are subscribed to it.

Online mention policy is added so that this feature doesn't become spammy for other users.

Detailed test cases are added for the new flag: 'online_mentioned'.

Fixes #2183.",False,16964,https://api.github.com/repos/zulip/zulip/pulls/16964,https://github.com/zulip/zulip/pull/16964,open,897,71,41,3,7,3,4,0,"[{'name': 'area: markdown'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'new feature'}]",2020-12-25 20:49:47+00:00,,0.0,,"[{'comment_id': 581567110, 'comment_body': ""The migrations file changes in this PR aren't correct; see https://zulip.readthedocs.io/en/latest/subsystems/schema-migrations.html for how to renumber your migrations properly when rebasing (which I assume is what went wrong here)."", 'comment_created': datetime.datetime(2021, 2, 24, 2, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581567492, 'comment_body': ""We can't readily renumber the `is_private` bit to a different slot; instead, we always add new bits at the end of the bitword."", 'comment_created': datetime.datetime(2021, 2, 24, 2, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581567848, 'comment_body': ""Note also that it doesn't make sense to modify old migrations; the schema migrations docs should explain this, but if not, read about Django's migrations system.  The whole point is that migrations files are static once implemented so that you can apply a series of them to change the database from its original format from a previous version to the modern format."", 'comment_created': datetime.datetime(2021, 2, 24, 2, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '4c15941f8aa996907fb79a5fba26f4e4daa6e375', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86b17c691ad2bc7d4dc3089092859c5b1ead5fcf', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72951d5163a48ef0f8e9c36e136f6fd8ff3e89b6', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
546599679,markdown: Add `hl_lines` support to Markdown Processor.,"This commit adds the new `hl_lines` feature of CodeHilite which helps to tag certain lines of a codeblock to be highlighted for demonstration purposes.

Line numbers, say 'n1' and 'n2', can be tagged as hl_lines=""n1 n2"".
Index in codeblock starts from 1.

Fixes #2036.

**GIFs or screenshots:** 
## Source:
~~~
```ruby hl_lines=""1 3 5""
# Simple for loop using a range.
for i in (1..4)
  print i,"" ""
end
print ""\n""
```
~~~
## Result:
![Screenshot from 2020-12-30 15-39-24](https://user-images.githubusercontent.com/67277428/103344754-84a6ec00-4ab5-11eb-935b-ae5edf137994.png)",False,16984,https://api.github.com/repos/zulip/zulip/pulls/16984,https://github.com/zulip/zulip/pull/16984,open,119,7,8,2,16,13,4,0,"[{'name': 'area: markdown'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'new feature'}]",2020-12-29 19:03:12+00:00,,0.0,,"[{'comment_id': 581539595, 'comment_body': 'Can we add a test covering this?', 'comment_created': datetime.datetime(2021, 2, 24, 1, 43, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581540483, 'comment_body': ""Or if we think that's impossible, maybe we should make it a `raise AssertionError` instead?\r\n\r\nWe may also want to add a comment noting that the parser should have already confirmed that the `hl_lines` is input a string containing a list of digits of spaces.  Hmm, and maybe we should use a better variable name, e.g. `hl_lines_str` for contexts where it's a string, not a `List[int]`."", 'comment_created': datetime.datetime(2021, 2, 24, 1, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 582993417, 'comment_body': 'You’re catching the wrong exception; the `try` block can’t raise `AssertionError`.\r\n\r\nCan we use the upstream `markdown.extensions.codehilite.parse_hl_lines` directly?', 'comment_created': datetime.datetime(2021, 2, 25, 16, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 582998232, 'comment_body': 'Our documentation should use real words (“code highlighting” or ”line highlighting”).\r\n\r\nThis should probably be part of the previous section, not a separate section.', 'comment_created': datetime.datetime(2021, 2, 25, 16, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 583001775, 'comment_body': 'The logic of this regex is convoluted; the empty string ambiguously matches either alternative.', 'comment_created': datetime.datetime(2021, 2, 25, 16, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 583154322, 'comment_body': '@timabbott @andersk Should I write it as -\r\n```python\r\nexcept ValueError as e: # nocoverage\r\n  raise AssertionError(e)\r\n```\r\nor as -\r\n```python\r\nexcept ValueError:\r\n  return []\r\n```\r\nLatter is the upstream version.', 'comment_created': datetime.datetime(2021, 2, 25, 20, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 583156987, 'comment_body': '@andersk \r\nOk, I will update it as -\r\n```python\r\n    (\r\n        (\r\n            \\\\{?\\\\.?\r\n            (hl_lines=(?P<quot>""|\')\r\n                (?P<hl_lines>[0-9 ]*)(?P=quot)\r\n            )\r\n            \\\\}?\r\n        ) # hl_lines to emphasize certain lines of code\r\n        |\r\n        (\r\n            \\\\{?\\\\.?\r\n            (?P<header>\r\n                [^~`]*\r\n            )\r\n            \\\\}?\r\n        ) # header for features that use fenced block header syntax (like spoilers)\r\n    )\r\n```\r\nTo make it more explicate ?', 'comment_created': datetime.datetime(2021, 2, 25, 20, 39, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 583172886, 'comment_body': 'That’s even more convoluted. What are the extra `(`, `\\\\{?\\\\.?`, `(`, `)`, `\\\\}?`, `)`, `(`, `)` for?', 'comment_created': datetime.datetime(2021, 2, 25, 20, 52, 45, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 585562202, 'comment_body': 'Okay, may be I understood this wrong. Can you please give an example how: `the empty string ambiguously matches either alternative` ? Does that mean for the initial modified regex, it creates problem for the following code ? -\r\n```\r\n```python\r\ndef zulip():\r\n  print(""Zulip"")\r\n```\r\n\r\nThe regex:\r\n```\r\n(hl_lines=(?P<quot>""|\')(?P<hl_lines>[0-9 ]*)(?P=quot))?\r\n```\r\nis picked from the upstream [`markdown.extensions.codehilite._parseHeader`](https://github.com/Python-Markdown/markdown/blob/14c2fa92302084e4850e5323ed56721e43fbbdb9/markdown/extensions/codehilite.py#L195)', 'comment_created': datetime.datetime(2021, 3, 2, 13, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 588787210, 'comment_body': ""I think Anders' proposal was that we call the upstream function directly rather than copying it, but if that's not possible, I'd prefer to copy it exactly with a comment."", 'comment_created': datetime.datetime(2021, 3, 5, 23, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 588787468, 'comment_body': 'Also, `codehilite` refers to syntax highlighting, not line numbers.  So ""line highlighting"" as a subsection seems appropriate here.', 'comment_created': datetime.datetime(2021, 3, 5, 23, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 626991037, 'comment_body': ""Remove this; we don't need this advanced feature in the cheat sheet."", 'comment_created': datetime.datetime(2021, 5, 5, 23, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 626991133, 'comment_body': ""Let's move this to the new /help/code-blocks; and possibly it should just replace the existing example that has a language attached; we can showcase both features in a single example."", 'comment_created': datetime.datetime(2021, 5, 5, 23, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '85b9e36f8fab2423cf5e7c1c754e7ad784b5c0ad', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5cd9b3971ef7c5a444616ba6441242e1ee71679', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
552099657,message_edit: Fix unmute of topic when topic name is edited.,"When a user edits topic name then that topic is unmuted for the users who have muted it. This commit fixes such problem and ensures that `orig_topic_name` is removed from `MutedTopic` and new topic name is added to it.

Fixes #15210.",True,17031,https://api.github.com/repos/zulip/zulip/pulls/17031,https://github.com/zulip/zulip/pull/17031,closed,170,1,3,1,5,10,2,0,"[{'name': 'size: XL'}, {'name': 'release goal'}]",2021-01-09 08:50:12+00:00,2022-03-18 19:32:46+00:00,37449754.0,"433 days, 10:42:34","[{'comment_id': 557353669, 'comment_body': ""I feel it would be better to use the `do_mute_topic` and `do_unmute_topic` methods because-\r\n- they will handle all the event sending work\r\n- sending muted topic data in `update_messages` event seems a bit out of place\r\n- you could avoid making any frontend changes at all, since we already handle `muted_topics` events (which these functions will send) \r\n\r\n\r\nAlso, I feel this code-block can be optimized and made more readable --\r\n```python\r\nif topic_name is not None:\r\n        for user in users_to_be_notified:\r\n            if topic_is_muted(user, stream_id, orig_topic_name):\r\n                # do the muting and unmuting\r\n```\r\n(You could avoid the backend `get_users_muted_topic_data` helper!)\r\n\r\nAlso, I don't think this is the correct place for this code block. If I'm not wrong, placing this code here would mute the new topic even if it -\r\n1. Was moved to another stream? (I'm not sure if we want [that to happen](https://github.com/zulip/zulip/issues/15210#issuecomment-639156475))\r\n2. Only that single message was edited, and not the whole topic (see `propagate_mode`)\r\n\r\nI think this code belongs under some `if` statements."", 'comment_created': datetime.datetime(2021, 1, 14, 12, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 557353731, 'comment_body': 'For better performance, we [avoid doing](https://zulip.readthedocs.io/en/latest/contributing/code-style.html#userprofile-objects-get-client-objects-get-etc) direct `UserProfile.objects.get()` queries, and instead use the `get_user_profile_by_*` functions in `models.py`.', 'comment_created': datetime.datetime(2021, 1, 14, 12, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 557380650, 'comment_body': ""> I feel it would be better to use the `do_mute_topic` and `do_unmute_topic`\r\n\r\nCalling `do_mute_topic` and `do_unmute_topic` for each user would lead to calling `send_event` function for each of the users which can rather be avoided if `muted_topic` data is sent along with `users_to_be_notified` (in final `send_event` function call which will be ultimately called to edit topic/messages)\r\n\r\n> - sending muted topic data in `update_messages` event seems a bit out of place\r\n\r\n`muted topic data` of each user will be ultimately handled by [this part of the code](https://github.com/zulip/zulip/blob/08d716c74175a8b63bf8eb1080381c77f3f853c6/zerver/tornado/event_queue.py#L960-L965).\r\n\r\n> 3. you could avoid making any frontend changes at all, since we already handle `muted_topics` events (which these functions will send)\r\n\r\nIn that case, `muted_topic` event will be called twice, ultimately leading to repeated calls for some functions, at frontend, 2-3 times when `update_message` event will be sent.\r\n\r\n>  If I'm not wrong, placing this code here would mute the new topic even if it -\r\n> 1. Was moved to another stream? (I'm not sure if we want that to happen)\r\n\r\nIf a topic is moved to another stream then `get_users_muted_topic_data(orig_topic_name, stream_id)` function would take different `stream_id` as an argument, so that case will be easily avoided.\r\n\r\n> Only that single message was edited, and not the whole topic (see `propagate_mode`)\r\n\r\nI have tested this locally and it was working correctly."", 'comment_created': datetime.datetime(2021, 1, 14, 13, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 557383470, 'comment_body': 'Ahh I see, I will be update this, once this pr will recieve more reviews. :)', 'comment_created': datetime.datetime(2021, 1, 14, 13, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 557403464, 'comment_body': ""> muted topic data of each user will be ultimately handled by this part of the code.\r\n\r\nOh! I missed that, my bad. In any case, you could refactor the code as above, even if you don't use the `do_*` functions 🙂"", 'comment_created': datetime.datetime(2021, 1, 14, 13, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 581568940, 'comment_body': ""We should never fetch UserProfile objects in a loop like this, as it results in poor database performance.  I'm also not convinced you need it; shouldn't the ID be good enough for where we use these fields?"", 'comment_created': datetime.datetime(2021, 2, 24, 2, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 581569270, 'comment_body': 'Is this a totally new test, or a modification on an existing one?  If the latter, I\'d prefer that we just extent the existing test to cover the ""topic muting"" case with one of the users/topics rather than duplicating most of the test code.', 'comment_created': datetime.datetime(2021, 2, 24, 2, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 585584027, 'comment_body': 'Okay, maybe I can use `get_user_profile_by_id` function in `zerver.models.py` ?\r\n`ID` is not good enough as functions: `remove_topic_mute` and `add_topic_mute` require `UserProfile` instead of `ID`.', 'comment_created': datetime.datetime(2021, 3, 2, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 587184927, 'comment_body': ""Okay, I'll fix this."", 'comment_created': datetime.datetime(2021, 3, 4, 6, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 829587900, 'comment_body': 'No, `get_user_profile_by_id` does a cache query and then will do a database query on cache miss, so has the same problem. We should do a bulk fetch, e.g. by adding `select_related` to the query here.', 'comment_created': datetime.datetime(2022, 3, 17, 23, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '523cc2ebef038fe69bdd13a5ee18142971ac74b1', 'committer_username': 'timabbott', 'committer_name': 'Tim Abbott', 'committer_email': None, 'commit_date': datetime.datetime(2012, 11, 7, 21, 18, 39, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
578366717,compose: Fix message lost during server downtime.,"This commit fixes the bug: web app loses the messages sent during the server downtime.

Fixes #15692.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
Added new test case.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->


https://user-images.githubusercontent.com/67277428/108834488-40872200-75f4-11eb-8596-1d3a9f719ce1.mp4

You can skip to `3:45` when the localhost restarts.",False,17386,https://api.github.com/repos/zulip/zulip/pulls/17386,https://github.com/zulip/zulip/pull/17386,open,723,77,14,5,18,4,5,0,"[{'name': 'bug'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'area: compose (drafts/network/echo)'}]",2021-02-23 11:18:08+00:00,,0.0,,"[{'comment_id': 581448921, 'comment_body': 'fab64fd7b0e78d7464f91003fb7d49007a9478b7 appears to where this bit of `&&` logic is introduced.  I don\'t think I understand the reasoning behind why we want an || gate here, though -- maybe worth adding a comment above this?\r\n\r\nI **think** the idea is that if we\'re in the process of doing a reload, we guess the error could be related to that and do a reload -- but what does `error_type !== ""timeout""` mean?', 'comment_created': datetime.datetime(2021, 2, 23, 22, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 628859954, 'comment_body': 'The Page will not reload immediately after the connection is up again, so we need to do a quick manual reload.', 'comment_created': datetime.datetime(2021, 5, 9, 9, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 628911088, 'comment_body': ""I remember `endsWith` was not working here, so I've to use RegExp this way."", 'comment_created': datetime.datetime(2021, 5, 9, 16, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 629188715, 'comment_body': ""I'm not sure if this is the right idea to put this code here or in `compose.js`. If the latter is true, then I'll move this code and related tests to `compose.js`."", 'comment_created': datetime.datetime(2021, 5, 10, 8, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '810f8a888f9b93c4b71b87dfe4a16d305206b1cb', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2677c2fd79c4d44d8284b8244fee2a3a98a549e1', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7748c16570f392ef2fc3e0377c89afcfa93f618f', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7d4b639751050eb6259ad02fd3e3b4ff2c90d59', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5278d2398dbdf6eb17b8384e6127191d1d53d96', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
586086912,markdown: Re-enable backslash escape inline pattern.,"This commit re-enables backslash escape inline pattern.

Fixes #2401.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->
New test cases are added.",False,17511,https://api.github.com/repos/zulip/zulip/pulls/17511,https://github.com/zulip/zulip/pull/17511,open,256,51,6,4,25,8,7,0,"[{'name': 'bug'}, {'name': 'area: markdown'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'post release'}, {'name': 'buddy review'}, {'name': 'mentor review'}]",2021-03-06 15:49:11+00:00,,0.0,,"[{'comment_id': 594021034, 'comment_body': ""How did you pick 102?  Might be worth commenting on how that's done in python-markdown upstream."", 'comment_created': datetime.datetime(2021, 3, 15, 3, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 624560806, 'comment_body': 'Simpler:\r\n\r\n```python\r\nself.ESCAPED_CHARS = list(string.punctuation)\r\n```', 'comment_created': datetime.datetime(2021, 5, 1, 20, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 624561450, 'comment_body': 'We don’t need a custom escape function.\r\n\r\n```suggestion\r\n        return html.escape(super().unescape(m))\r\n```', 'comment_created': datetime.datetime(2021, 5, 1, 20, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 624563720, 'comment_body': 'This change seems wrong; this backslash belongs to TeX.\r\n\r\n#18342', 'comment_created': datetime.datetime(2021, 5, 1, 20, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 624563865, 'comment_body': 'This change also seems wrong; this backslash belongs to TeX.', 'comment_created': datetime.datetime(2021, 5, 1, 20, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 624564197, 'comment_body': 'I think this should not be renamed, as this still performs the operation that upstream calls “unescape”; it just also fixes a bug by adding a missing escape operation.', 'comment_created': datetime.datetime(2021, 5, 1, 20, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'andersk', 'type': 'User'}, {'comment_id': 635441951, 'comment_body': ""I don't think this change belongs in the Tex priority change commit."", 'comment_created': datetime.datetime(2021, 5, 19, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aero31aero', 'type': 'User'}, {'comment_id': 635445549, 'comment_body': ""I'll do a clean push, resolving all the conflicts."", 'comment_created': datetime.datetime(2021, 5, 19, 17, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '360f55e5bbbba3a4f33d5a9b62a72c49533aebb9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e3281f2dcb659215bd77f7db1fbc5a3c20ead9d', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb703457e94bf2b60f7281d990ef482023837d3f', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1a3999fd086bf930bb54f706c79bb4fc9414454', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
592398355,markdown: Improve Twitter card integration.,"This commit improves the current Twitter card and disables the rendering of media data (like photos, videos). Twitter logo and tweet 'created date' is added to the card.

Fixes #13303.

**Testing plan:** <!-- How have you tested? -->

Test cases are updated accordingly.

**GIFs or screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->
  
| Before | After |
| --- | --- |
| ![Screenshot from 2021-03-13 21-03-27](https://user-images.githubusercontent.com/67277428/111038093-34e98700-844d-11eb-9a5d-979e04524ac4.png) | ![Screenshot from 2021-03-13 21-03-55](https://user-images.githubusercontent.com/67277428/111038109-45016680-844d-11eb-98cb-20efc4feacdb.png) |
| ![Screenshot from 2021-03-13 21-02-31](https://user-images.githubusercontent.com/67277428/111038132-56e30980-844d-11eb-8371-92be1052b3d0.png) | ![Screenshot from 2021-03-13 21-04-23](https://user-images.githubusercontent.com/67277428/111038143-63fff880-844d-11eb-80f0-b5a73b65c2c9.png) |",False,17616,https://api.github.com/repos/zulip/zulip/pulls/17616,https://github.com/zulip/zulip/pull/17616,closed,78,17,3,1,7,9,3,0,"[{'name': 'area: markdown'}, {'name': 'size: L'}, {'name': 'has conflicts'}]",2021-03-13 17:38:04+00:00,2024-01-04 18:15:21+00:00,88735037.0,"1027 days, 0:37:17","[{'comment_id': 593985994, 'comment_body': ""I think it's a little confusing to change this function's semantics that way -- would it be clearer to just have an `append_text` function that does the append version?  I certainly would read `set_text` as an overwrite, not an append, if something was already there."", 'comment_created': datetime.datetime(2021, 3, 15, 0, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 593986121, 'comment_body': ""Can you show how this CSS renders tweets that were included in rendered markdown before this PR?  We'll want to make sure that we don't mangle the formatting of older messages."", 'comment_created': datetime.datetime(2021, 3, 15, 0, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 593986958, 'comment_body': ""The `static/images/logo` directory is meant for just the Zulip logo.  I'm not sure where something like this should go -- my understanding is would be a file that would break Zulip if it were deleted.\r\n\r\nJust to make sure I understand, I assume this is meant to be a copy of the Twitter logo to use for tweets without a user avatar or something?  I'm pretty reluctant to add something of that form, because it's end up being a file we can never move.\r\n\r\n@andersk ideas on how to manage this sort of thing?"", 'comment_created': datetime.datetime(2021, 3, 15, 0, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 593987153, 'comment_body': 'Oh, I see, no, this is used next to the timestamp to just indicate something is a tweet?\r\n\r\nCould we use https://fontawesome.com/v4.7.0/icon/twitter?  I guess might require a bit of care to arrange.', 'comment_created': datetime.datetime(2021, 3, 15, 0, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 596107002, 'comment_body': 'Okay, but that would probably make look the code messy, as each time, before making a call to any of those two functions, I need to check if `current_node.text` is None or not.\r\nProbably changing the name of the function (and description to what it does), `set_text` to `amend_text` or `add_text` would do the job ?', 'comment_created': datetime.datetime(2021, 3, 17, 15, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 596132653, 'comment_body': '| with no change | with change |\r\n| --- | --- |\r\n| ![Screenshot from 2021-03-17 20-58-52](https://user-images.githubusercontent.com/67277428/111493726-d92c4000-8763-11eb-9a0b-511d1ab92483.png) | ![Screenshot from 2021-03-17 20-58-32](https://user-images.githubusercontent.com/67277428/111493759-e0ebe480-8763-11eb-804d-fd2681465a0b.png) |\r\n', 'comment_created': datetime.datetime(2021, 3, 17, 15, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 599328520, 'comment_body': 'Yeah, or  `set_or_append` or `set_text(append_if_present=True)` could be OK -- just anything to make clear what the actual behavior is.', 'comment_created': datetime.datetime(2021, 3, 23, 7, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 599328653, 'comment_body': 'So a font size change for the date, right?  ', 'comment_created': datetime.datetime(2021, 3, 23, 7, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 599340527, 'comment_body': ""Yes, it's only for the date."", 'comment_created': datetime.datetime(2021, 3, 23, 7, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '03a1acf7673b8f5a01401e87190e12e2bdd18f48', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
600044445,registration: Add support to import user GitHub avatar.,"This PR is split into 2 commits:
* First one adds support to upload user avatar during Sign up.
* Second one extends that support and addresses issue #13746, to add support to import user GitHub avatar during Sign up.

Helper functions to handle uploaded file and upload an avatar from `avatar_url` fetched during the Preregistration process, are added.

Following are the screencasts of the different scenarios:

## Upload an avatar during the normal Sign up process.
https://user-images.githubusercontent.com/67277428/112376986-30558600-8d0b-11eb-83ed-5882b933f11e.mp4

## No avatar upload during the normal Sign up process.
https://user-images.githubusercontent.com/67277428/112377128-5da23400-8d0b-11eb-810f-571401df658b.mp4

## Use GitHub avatar during Sign up process.
https://user-images.githubusercontent.com/67277428/112377269-89251e80-8d0b-11eb-8d1c-8576374c6965.mp4

## In this case, the user opts to not use the GitHub avatar.
https://user-images.githubusercontent.com/67277428/112377344-a2c66600-8d0b-11eb-8ea2-66b980411ef3.mp4

## In this case, the user opts to upload an avatar instead of using the GitHub one.
https://user-images.githubusercontent.com/67277428/112377477-d1444100-8d0b-11eb-8905-e45c485727a7.mp4

## Here it's shown how it responds if multiple files are uploaded.
https://user-images.githubusercontent.com/67277428/112377612-fafd6800-8d0b-11eb-91f5-7477a0b00e3d.mp4

Test cases cover all the related area.

Fixes #13746.",False,17781,https://api.github.com/repos/zulip/zulip/pulls/17781,https://github.com/zulip/zulip/pull/17781,open,695,22,18,3,5,0,4,0,"[{'name': 'area: authentication'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'new feature'}]",2021-03-24 20:21:50+00:00,,0.0,,[],"[{'commit_sha': '8f61d611b4a64cc2c9d1bdf65539089f701504bb', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e76a4e8d24e9b120ef678f49e36ef811e873ebeb', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8097ee6624fe25606afd790ba5bb39affc3bab69', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
612624777,message-editing: Add support for `Copy` button when message is editable.,"This commit adds support for the `Copy and close` button in textarea when message editing is still enabled. Earlier a `Copy and close` button only appears if message editing time has passed. But now even though a message is editable or not, the `Copy and close` button would appear.

This will be particularly helpful for the users who want to copy their own message content and their realm setting: `Allow message editing` is set to: `Any time`.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->

https://chat.zulip.org/#narrow/stream/6-frontend/topic/Add.20copy.20and.20close.20button

**Testing plan:** <!-- How have you tested? -->

Tested locally with all possible settings.



<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",False,18064,https://api.github.com/repos/zulip/zulip/pulls/18064,https://github.com/zulip/zulip/pull/18064,open,9,6,3,1,4,0,2,0,"[{'name': 'size: S'}, {'name': 'has conflicts'}]",2021-04-09 17:35:47+00:00,,0.0,,[],"[{'commit_sha': '5773144573b2e9e3596f1e48321d3fd9072603e2', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
638499817,help: Update documentation to mute/unmute the topic.,"This commit adds documentation to mute/unmute the topic:

1. From the slashed bell icon (through Recent topics
or recipient bar).

2. From the Settings > Muted topics.",False,18431,https://api.github.com/repos/zulip/zulip/pulls/18431,https://github.com/zulip/zulip/pull/18431,closed,46,24,11,4,5,5,2,0,"[{'name': 'size: L'}, {'name': 'has conflicts'}]",2021-05-10 21:36:58+00:00,2023-04-26 23:06:32+00:00,61867774.0,"716 days, 1:29:34","[{'comment_id': 629704095, 'comment_body': ""`Click **Unmute** to unmute the topic that you wish to unmute under the ......` sounds a bit odd so I've added the above line."", 'comment_created': datetime.datetime(2021, 5, 10, 21, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 629769468, 'comment_body': 'This section is basically a duplicate of the ""See ..."" one below; I think we should need a better heading, maybe ""Browse and unmute muted topics""', 'comment_created': datetime.datetime(2021, 5, 11, 0, 36, 13, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 630435626, 'comment_body': ""I've merged this section as a `tip` in the next section since we can only unmute it from there. So that this can be kept separate from the section describing: `mute`/`unmute`."", 'comment_created': datetime.datetime(2021, 5, 11, 18, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 633508463, 'comment_body': ""I'm not sure `recipient bar` is something users would know about. But I'm not sure what else to use either. What do you think?"", 'comment_created': datetime.datetime(2021, 5, 17, 13, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'abhijeetbodas2001', 'type': 'User'}, {'comment_id': 633511977, 'comment_body': ""Yeah, agreed. If we don't have another proper term, then I think we should attach an example picture of the `recipient bar`."", 'comment_created': datetime.datetime(2021, 5, 17, 13, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '93151c80a3faa6b319d9fa11d8df1703fe023393', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '148c47ecbeabf63ea14d2a382c9bea0b6a810a61', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a2a6e14503293f4e20b3a40bdc8221ac0c32c5b', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4846e30fb7c04faeb8aa8ec506c6bcb0f17caa05', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
643561913,Fix unnecessary edit linkifier error display and use tippy tooltip instead of HTML title.,,False,18470,https://api.github.com/repos/zulip/zulip/pulls/18470,https://github.com/zulip/zulip/pull/18470,open,80,54,26,6,14,1,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-05-12 23:15:04+00:00,,0.0,,"[{'comment_id': 631813702, 'comment_body': 'Effect of removing `no-style`:\r\n| Before | After |\r\n| --- | --- |\r\n| ![Screenshot from 2021-05-13 18-59-27](https://user-images.githubusercontent.com/67277428/118132531-6b2b8e80-b41d-11eb-87b4-b7d7a7773e49.png) | ![Screenshot from 2021-05-13 18-51-03](https://user-images.githubusercontent.com/67277428/118132571-74b4f680-b41d-11eb-9f4f-1473127a8056.png) |\r\n\r\nThis makes this download button consistent with the download button present in [**Settings > Your bots**](https://chat.zulip.org/#settings/your-bots)\r\n![Screenshot from 2021-05-13 19-02-09](https://user-images.githubusercontent.com/67277428/118132919-d8d7ba80-b41d-11eb-994f-dd86439fb6e8.png)\r\n', 'comment_created': datetime.datetime(2021, 5, 13, 13, 34, 30, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '92ce619788fdd9ff0b39ccbea41180c97fd1c3f4', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36d8f6452bae177bb33e74b056eb8887b92efdb2', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a152f2c081b62f2ca2e2bdc69c8d14daa191370', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16223ddceec571c07cc4b71820133c125bb14349', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39bd5fc55a9e31fd45526f1a540153fb39823eb4', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94636fd82a9f0ff8043648ce3cbd15aff36a3c19', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
650675663,markdown: Don't convert emoticons present inside blockquote.,"I've explained the Backend and Frontend approach in the commit message. https://github.com/zulip/zulip/commit/62e87db30cedc881b7abda0445a5ce07d7a5bd2b

Fixes: #17789.",False,18577,https://api.github.com/repos/zulip/zulip/pulls/18577,https://github.com/zulip/zulip/pull/18577,open,77,34,4,3,2,7,4,0,"[{'name': 'area: markdown'}, {'name': 'area: emoji'}, {'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-05-22 19:30:48+00:00,,0.0,,"[{'comment_id': 637442382, 'comment_body': 'Any better suggestions for the variable names `ord0` and `ord1`, or they are fine?', 'comment_created': datetime.datetime(2021, 5, 22, 19, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 637603902, 'comment_body': ""I don't understand this code, so we could definitely do better.  Is the idea that these are the two characters of an emoticon?  What if one is made up of 3 characters?"", 'comment_created': datetime.datetime(2021, 5, 23, 21, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 637603986, 'comment_body': 'I feel like we could do this better by looking at the state of the parse tree, and just treating the ""emoticons"" data set as though the feature is disabled?', 'comment_created': datetime.datetime(2021, 5, 23, 21, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 637604210, 'comment_body': ""But we have all emoticons of 2 characters, right?\r\n\r\nRight above the code, I've added a comment that what does this code do."", 'comment_created': datetime.datetime(2021, 5, 23, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 637604646, 'comment_body': 'Do you mean I should just set `translate_emoticons = False` when we detect that emoticons are present inside the blockquote?\r\nDoing that would not let the emoticons present **outside** the blockquote to convert into an emoji.', 'comment_created': datetime.datetime(2021, 5, 23, 21, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 638390513, 'comment_body': ""We could easily add one that's `:-p` in the future, so we shouldn't bake in that assumption if we can avoid it."", 'comment_created': datetime.datetime(2021, 5, 25, 1, 26, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 638391410, 'comment_body': 'No, I mean something else.  I don\'t have a concrete plan, since it depends on the order of processing, but if we\'ve already processed the blockquote logic at the time this runs, we can inspect our parents in the parse tree to see if any are blockquote objects, and if so, include that case in the `return None` conditional below.\r\n\r\n```\r\n    def handleMatch(self, match: Match[str]) -> Optional[Element]:                                   \r\n        db_data = self.md.zulip_db_data                                                              \r\n        if db_data is None or not db_data[""translate_emoticons""]:                                    \r\n            return None                                                                              \r\n                                                                                                     \r\n        emoticon = match.group(""emoticon"")                                                           \r\n        translated = translate_emoticons(emoticon)                                                   \r\n        name = translated[1:-1]                                                                      \r\n        return make_emoji(name_to_codepoint[name], translated)                                       \r\n```\r\n\r\nIf this proves hard, we should pause on this project, because @andersk and I are planning to have a discussion about rewriting the markdown processor system to be a 2-phase process, where first we do a much less customized markdown pass that generates things like a `<mention>` XML element, and a second phase would process the resulting tree and add data details.  And that architecture might make this feature simple to implement (I don\'t think it\'s important enough to be worth a complicated patch)\r\n', 'comment_created': datetime.datetime(2021, 5, 25, 1, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '29ba75e81a6b4bb6a2bff5ed3ce278e7b9889b05', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab561ea0cf48fd23e3111167679280cf8434191', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e87db30cedc881b7abda0445a5ce07d7a5bd2b', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
658529116,markdown: Add Kroki integration to render diagrams from textual descriptions.,"I've asked here: https://gitter.im/kroki-project/community# that if Kroki provides any library/API to get all the diagram types. Unfortunately, they don't have any such explicit API to provide this data. But they are in favour of adding this feature, so in future, we can use that instead of hardcoding these diagram types. (They have provided: https://kroki.io/health, which is not for this purpose, and I think we should not use this to get the diagram types.)

I've tried testing all the examples provided at: https://kroki.io/#try. I noticed that most of them are working, but a few of them are returning `Error 500: OK`. So I've asked the same here: https://gitter.im/kroki-project/community#.
Otherwise, this is working fine.

Previous discussions:
1. https://chat.zulip.org/#narrow/stream/49-developmenthelp/topic/pull.20docker.20images.20and.20run.20in.20zulip.20vagrant.20file
2. https://chat.zulip.org/#narrow/stream/137-feedback/topic/Mermaid.20Js.20renderer.20support

Fixes: #16825.",False,18658,https://api.github.com/repos/zulip/zulip/pulls/18658,https://github.com/zulip/zulip/pull/18658,open,346,77,21,7,8,12,5,0,"[{'name': 'feedback wanted'}, {'name': 'area: markdown'}, {'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'new feature'}]",2021-05-31 21:47:09+00:00,,0.0,,"[{'comment_id': 642997527, 'comment_body': '`timeout` here is not decided.', 'comment_created': datetime.datetime(2021, 6, 1, 10, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 644400378, 'comment_body': ""Let's leave adding this to `prod_settings_template.py` for the end; for this commit:\r\n* You can set that URL in `dev_settings.py` and set `None` in `default_settings.py`, so that the feature is disabled except in the development environment, so that we can incrementally merge infrastructure commits without changing anything in production.\r\n* We should call it `KROKI_SERVER_URL`, in analogy to `JITSI_SERVER_URL`."", 'comment_created': datetime.datetime(2021, 6, 3, 0, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 644400553, 'comment_body': 'We should use the `responses` module for mocking HTTP responses, rather than a custom system.', 'comment_created': datetime.datetime(2021, 6, 3, 0, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 644400700, 'comment_body': 'These are very long lines; could we read these from a fixture file in `zerver/fixtures/kroki` instead of having them inline here?', 'comment_created': datetime.datetime(2021, 6, 3, 0, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 644400746, 'comment_body': ""I don't understand this comment."", 'comment_created': datetime.datetime(2021, 6, 3, 0, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 644401135, 'comment_body': 'Does it makes sense to do a preparatory refactor PR to move functions like this into `BaseHandler` or perhaps a new `ZulipBaseHandler` class?  It feels like most of the code of these are duplicated.', 'comment_created': datetime.datetime(2021, 6, 3, 0, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 644401417, 'comment_body': ""I'd like to see a test that more obviously shows the kroki full syntax being suggested."", 'comment_created': datetime.datetime(2021, 6, 3, 0, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 644401609, 'comment_body': ""Let's put the `Korki diagram blocks` option at the end of this list, since it's the most obscure."", 'comment_created': datetime.datetime(2021, 6, 3, 0, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 646162477, 'comment_body': ""Kroki cannot automatically guess the diagram type (when we don't provide it while making the POST request) -- hence it'll not generate an HTML string (the expected output clarifies the same).\r\nSame is mentioned [here](https://github.com/zulip/zulip/pull/18658/commits/6a69bb7f0ffa29975d60c4c94ac94925736d05d4#diff-1d6296c9693dd422d51234c92906d64a088f4c061f8ff75b4548b958c9904cc7R18-R20)."", 'comment_created': datetime.datetime(2021, 6, 6, 17, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 665798155, 'comment_body': ""This HTML looks like it's intended to be a complete webpage, not something embedded in another page.\r\n\r\nDoes `kroki` have an option to not do that?  If not, we should open an issue asking for them to do so."", 'comment_created': datetime.datetime(2021, 7, 8, 1, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 665799285, 'comment_body': ""So I'm worried about the security implications of including arbitrary SVGs in a Zulip message.  I wonder if we want to make this integration instead upload the returned SVG as a Zulip file upload and then link to it like any other inline image, rather than putting it into our message content.\r\n\r\n@andersk thoughts?  That process has somewhat involved infrastructure and is messy for message editing, so if there's a better way to restrict the XSS risk here, that'd be preferable."", 'comment_created': datetime.datetime(2021, 7, 8, 1, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 674594775, 'comment_body': ""I don't understand how this HTML is intended to be a complete webpage. We have the image in SVG format."", 'comment_created': datetime.datetime(2021, 7, 22, 8, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': 'a6040a381f3ddd207769249a8371e9449006992a', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a69bb7f0ffa29975d60c4c94ac94925736d05d4', 'committer_username': 'godlike786', 'committer_name': 'Kenny Kariappa', 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 15, 11, 28, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d43163cfe598ee463e6e2dd003882d4eaefd166', 'committer_username': 'godlike786', 'committer_name': 'Kenny Kariappa', 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 15, 11, 28, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b979c10b2aa667fd3d5765fa220092073227cc2f', 'committer_username': 'godlike786', 'committer_name': 'Kenny Kariappa', 'committer_email': None, 'commit_date': datetime.datetime(2021, 2, 15, 11, 28, 35, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae23ad4f1323954ece1d435303ce9d25d75a91e8', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d3f7049019712235ef7862cafed9b3a33c497b9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7246993fa5d142bc093b28d2a98ef191223d433f', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
668897028,drafts: Add hotkey hint to restore draft.,"- 1st commit adds hotkey hint to restore the draft.
- 2nd commit fixes tooltip CSS in draft controls (too narrow issue https://github.com/zulip/zulip/pull/18811#discussion_r650321297).
- In the 3rd commit, I have added the commit setting the tooltip placement to the top in the draft controls.

Not sure if we want to set the tooltip placement to the top, so I've kept it in a separate commit.

![Screenshot from 2021-06-12 16-12-31](https://user-images.githubusercontent.com/67277428/121781626-503a6e80-cbc3-11eb-9452-97ec1da4e23d.png) ![Screenshot from 2021-06-12 16-12-38](https://user-images.githubusercontent.com/67277428/121781629-57617c80-cbc3-11eb-8e98-4b834039be11.png)
",True,18819,https://api.github.com/repos/zulip/zulip/pulls/18819,https://github.com/zulip/zulip/pull/18819,closed,6,1,2,2,1,0,1,0,[{'name': 'size: S'}],2021-06-12 15:46:38+00:00,2021-11-10 20:56:43+00:00,13065005.0,"151 days, 5:10:05",[],"[{'commit_sha': '2b1cc006fadc0613ea414ccc83f0ac9d8b9c20d3', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9a2183fda09aa1c0632ab5c1482bed4996f5428', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
673723742,models: Add `render_format_string` field in `RealmFilter` model.,"Added some minor fixes following them I've added new changes to add the `render_format_string` field in the `RealmFilter` model. Then new changes are done in a series of commits; please do tell me if this needs some changes in the commit structure.

The new changes will help the user set the rendered text of the detected linkifier pattern if `render_format_string` is provided; else, the detected pattern text will be used to set the rendered text (like we do now). Please note that this still can't perform the Link Shortener task (Related issue: https://github.com/zulip/zulip/issues/17971) as I've not modified the linkifier pattern regex, which is used for validation purpose. I'll do so as part of my next commit, which will help to close the issue https://github.com/zulip/zulip/issues/17971.",False,18914,https://api.github.com/repos/zulip/zulip/pulls/18914,https://github.com/zulip/zulip/pull/18914,open,398,26,14,8,4,8,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-06-18 20:46:50+00:00,,0.0,,"[{'comment_id': 654671829, 'comment_body': 'I chose the `default=""""` and not `null=True` as this may create some issue when the linkifier data will be used for comparison purpose (@ frontend), or in other cases, this may cause some unexpected problems like errors are thrown (@ frontend).', 'comment_created': datetime.datetime(2021, 6, 18, 20, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 654704447, 'comment_body': ""It doesn't do anything to compile this inside a function -- it'll be recompiled every time you call it.  It could be reasonable to make this something compiled when the class is initialized."", 'comment_created': datetime.datetime(2021, 6, 18, 22, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 654706848, 'comment_body': 'Can you explain the reasoning more, perhaps with an example problem you\'d expect with `null=True`?\r\n\r\nOh, is the point just that """" is a simpler value to set in a web form?', 'comment_created': datetime.datetime(2021, 6, 18, 23, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 654707390, 'comment_body': 'I think most correctly, we should be changing the existing check to allow fields in the linkifier pattern that are not present in the linkifier but are present in render_format_string, i.e. be merging the two `found_group_set` values.', 'comment_created': datetime.datetime(2021, 6, 18, 23, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 654707434, 'comment_body': 'How did you select this validator string?', 'comment_created': datetime.datetime(2021, 6, 18, 23, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 654708311, 'comment_body': 'We probably need to put some unnecessary check at (when `null=True` is used):\r\n1. https://github.com/zulip/zulip/blob/4cff56a47c65d8f2a366cc948ebd2e2408c9a802/static/js/settings_linkifiers.js#L103-L104.\r\n2. https://github.com/zulip/zulip/blob/4cff56a47c65d8f2a366cc948ebd2e2408c9a802/static/js/settings_linkifiers.js#L30.\r\n\r\nHence I found that empty strings would be much better rather than providing unnecessary checks.', 'comment_created': datetime.datetime(2021, 6, 18, 23, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 654710178, 'comment_body': ""Since `render_format_string` and `url_format_string` will have the same format: `foo/%(id)s/bar` so I picked the validator string used by `url_format_string`:\r\nhttps://github.com/zulip/zulip/blob/8cd9fc7a7411b29cf1a007fa49cf1d543f77063c/zerver/models.py#L941\r\n\r\nA slight difference is that I've added `!` and `@` as the allowed characters. Since GitLab users may want to use it as `!1234` and for commits as `zulip/zulip@abcdefg`.\r\nAnd since it is not necessary to use all the detected groups in the linkifier `render_format_string`, I've used the `*` qualifier rather than the `+` qualifier."", 'comment_created': datetime.datetime(2021, 6, 18, 23, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 654712765, 'comment_body': ""To do that we need to change the current error message:\r\nhttps://github.com/zulip/zulip/blob/8cd9fc7a7411b29cf1a007fa49cf1d543f77063c/zerver/models.py#L985-L987\r\nto: `Group %(name)r is not present in linkifier pattern.` since in such case we can't tell that the missing `name` in linkifier pattern was present in `url_format_string` or `render_format_string`."", 'comment_created': datetime.datetime(2021, 6, 18, 23, 27, 44, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '7799e12080f2504cbdd5777c870664341314095d', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5734fdea6f1f3d39e7a3a5120f72ceea62632e7e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e42c0901fb5d092cae3a6e9aeb965b0d4891d368', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '120ffcbe647834b796351941d9145b7eb8c50281', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c640b3b21ce31134f88b316431b2a2b5d0579ae', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cea25f62db7933128dd2a3d6a42a17af31bae835', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1d3953d68cc86d4d8a54b777c980f7939b9ce8f', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '928fb383bf7bdf4f293737656423f0ba701d3634', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
696570925,[WIP] emoji: Populate `emoji_codes.json` with emojis in `emoji-datasource-google`.,"Fixes part of #19371.

Using `emoji-datasource-google`, I'm populating the `emoji_codes.json` file to fill the missing emojis.
I tried using it and found that some of them are working correctly while some are not:
| Actual | Expected |
| --- | --- |
| ![Screenshot from 2021-07-26 03-09-09](https://user-images.githubusercontent.com/67277428/126914681-a5b8f553-eee3-4036-a6ed-ca0c01be7140.png) | ![Screenshot from 2021-07-26 03-33-06](https://user-images.githubusercontent.com/67277428/126914828-363774aa-4280-4b81-8ccd-5309a40442aa.png) |

I can't figure out why some are not showing the correct emojis. Any idea?

",False,19386,https://api.github.com/repos/zulip/zulip/pulls/19386,https://github.com/zulip/zulip/pull/19386,closed,40,9,2,1,8,0,3,0,"[{'name': 'area: emoji'}, {'name': 'size: M'}, {'name': 'has conflicts'}]",2021-07-25 22:05:37+00:00,2024-07-21 20:41:12+00:00,94343735.0,"1091 days, 22:35:35",[],"[{'commit_sha': 'ce9ebc1c9b22bd34838fb4e6c4e4b7509e6a675b', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
702375839,filter: Filter out muted topics in `message_in_home`.,"Following the backend logic, here also we filter out
muted topics so that we don't display muted topics
in `All messages` view.

This commit will also act as a prep commit for #16943.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing plan:** <!-- How have you tested? -->

A new test case is added.",False,19479,https://api.github.com/repos/zulip/zulip/pulls/19479,https://github.com/zulip/zulip/pull/19479,closed,11,2,2,1,2,1,3,0,"[{'name': 'size: S'}, {'name': 'has conflicts'}, {'name': 'integration review'}]",2021-08-03 15:19:38+00:00,2023-10-05 22:54:31+00:00,68542493.0,"793 days, 7:34:53","[{'comment_id': 681867797, 'comment_body': 'Ahh, I have written this condition w.r.t. muted topic (should be negated).\r\nFixed!', 'comment_created': datetime.datetime(2021, 8, 3, 15, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': 'c9e5e9e65725f0ad5e98b9df02cbd0689361f8f3', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
705929780,[WIP] emoji: Update unicode emoji regex.,"This update is done through an external
dependency - rgi-emoji-regex-pattern.

This update was necessary via an external
dependency because normal unicode regex won't
match against complex unicode emojis, made up of
more than one codepoints, especially ZWJ sequence
emojis. In fact, this new dependency guarantees
to match any unicode emojis.

In further commit a similar JS-based dependency (regex)
will be added to address frontend unicode emoji regex.

Fixes: #11767.",False,19538,https://api.github.com/repos/zulip/zulip/pulls/19538,https://github.com/zulip/zulip/pull/19538,closed,75,37,11,2,6,0,3,0,"[{'name': 'area: emoji'}, {'name': 'size: XL'}, {'name': 'has conflicts'}]",2021-08-07 18:37:14+00:00,2023-08-05 21:50:40+00:00,62910806.0,"728 days, 3:13:26",[],"[{'commit_sha': '8694a8a412ea8226c4674593a4234a6d1e84d176', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e7c5903245f0c57c84d12f3092c18a90433e2e9', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
707651707,typeahead_helper: Update typeahead priority order logic for recipients.,"Check the comments for the updated logic.

This update was necessary as two users generally had
different typeahead list in stream-topic messages, like
for User1, he may have target_user (who is a recent sender)
in his typeahead list but for another User2, it may not
be the same. In most of these situations, users are most
likely to tag the recent senders.

Moreover, if a user types: @ - then wildcard mentions used
to appear on top. This was in some sense implied that
we want to encourage the users to use wildcard mentions
more often which is not true.

**Testing plan:** <!-- How have you tested? -->

Added/modified test cases.

",False,19554,https://api.github.com/repos/zulip/zulip/pulls/19554,https://github.com/zulip/zulip/pull/19554,open,397,54,6,2,8,0,3,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}, {'name': 'completion candidate'}]",2021-08-10 20:04:44+00:00,,0.0,,[],"[{'commit_sha': '0bf8b99d4618462399014148cee2d9be38c1c21b', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fb34e2f12893e9cc50fc95bf0e7ba936bcdc77a', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
711330783,filter: Show typeahead suggestions if search query has search filters.,"In message header search bar, users didn't use to get any typeahead
suggestions if a normal filter follows search filter.

E.g.: query => foo bar stream:D

In the above case, users didn't use to get any typeahead suggestions.
This was because we had set that the callers of 'parse' function can
assume that the 'search' operator is present in the last in the query.
Because of which `get_search_result` function (in search_suggestion.js)
didn't use to show any typeahead suggestions as it used to assume that
the latest typed query is for search filters.

Fixes part of #19435.

**Testing plan:** <!-- How have you tested? -->

Modified existing test cases.


",True,19566,https://api.github.com/repos/zulip/zulip/pulls/19566,https://github.com/zulip/zulip/pull/19566,closed,26,13,3,2,3,0,1,0,[{'name': 'size: M'}],2021-08-12 17:49:27+00:00,2021-11-30 00:20:29+00:00,9441062.0,"109 days, 6:31:02",[],"[{'commit_sha': '58190cf6803b05aceb7c88db1e3dcf5f6e1d651a', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5662ed01a1969e9d8e83a745643ad7f8adb7016', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91
656348972,markdown: Add missing attribute to Markdown stub.,"I'm a regular contributor @Zulip, and I've added a commit that overrides the [`_parseHeader` function](https://github.com/Python-Markdown/markdown/blob/3ea29f9d9b7d201269444dccedc0383065532b7e/markdown/extensions/codehilite.py#L164), and while working, I found that this attribute is missing here. (Related PR: https://github.com/zulip/zulip/pull/18608)

This attribute is defined here: https://github.com/Python-Markdown/markdown/blob/3ea29f9d9b7d201269444dccedc0383065532b7e/markdown/extensions/codehilite.py#L113.",True,5544,https://api.github.com/repos/python/typeshed/pulls/5544,https://github.com/python/typeshed/pull/5544,closed,4,1,1,4,4,7,0,0,[],2021-05-28 11:51:03+00:00,2021-05-29 17:40:07+00:00,107344.0,"1 day, 5:49:04","[{'comment_id': 641908889, 'comment_body': ""Seems like we should also add `**kwargs: Any` to `__init__`. The source code looks like this:\r\n\r\n```\r\n    def __init__(self, src, **options):\r\n        self.src = src\r\n        self.lang = options.pop('lang', None)\r\n        self.guess_lang = options.pop('guess_lang', True)\r\n        ...\r\n        self.options = options\r\n```\r\n\r\nAlso, in `__init__`, it's missing `*` between `src` and `linenums` to mark the rest of the arguments as keyword-only."", 'comment_created': datetime.datetime(2021, 5, 29, 8, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Akuli', 'type': 'User'}, {'comment_id': 641932019, 'comment_body': 'Good find!\r\nI guess we only need to add `*` between `src` and `linenums`.', 'comment_created': datetime.datetime(2021, 5, 29, 12, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 641959785, 'comment_body': ""It's still missing `**options: Any`, as you can pass in any options you want (and they go to `self.options`)."", 'comment_created': datetime.datetime(2021, 5, 29, 16, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Akuli', 'type': 'User'}, {'comment_id': 641961419, 'comment_body': 'Why do we want to add `**options: Any` when all the possible arguments that will be passed through `**options` are already defined here? :thinking: \r\nIf there are some custom arguments that we want to pass, how will they be used inside this method?', 'comment_created': datetime.datetime(2021, 5, 29, 17, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 641963555, 'comment_body': ""I've added the commit with this change.\r\nStill, I'd be happy if you could answer the above question. :)"", 'comment_created': datetime.datetime(2021, 5, 29, 17, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}, {'comment_id': 641964314, 'comment_body': ""Read the source code. It pops **some** things from the `options` dict, but everything that it doesn't pop goes to `self.options`."", 'comment_created': datetime.datetime(2021, 5, 29, 17, 35, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Akuli', 'type': 'User'}, {'comment_id': 641964571, 'comment_body': 'Okay, we can use the custom arguments using `self.options`.', 'comment_created': datetime.datetime(2021, 5, 29, 17, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'akshatdalton', 'type': 'User'}]","[{'commit_sha': '7cdfcb1f3b168760f8d3ccba281d2b7bf9489ac2', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb129f36532dd06579b6757502ea954daf66851', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92c1085c7f85d0eda4debadf74e163f7913113e2', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '395059293530e2734cbe01556f65b2312118463e', 'committer_username': 'akshatdalton', 'committer_name': 'Akshat', 'committer_email': 'akshat25iiit@gmail.com', 'commit_date': datetime.datetime(2020, 6, 22, 14, 13, 55, tzinfo=datetime.timezone.utc)}]",Akshat,67277428,akshat25iiit@gmail.com,User,,54,,114,91

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7616,21007,376,1133,60235,2483,28,806,"[{'id': 1481547884, 'number': 26532, 'closed': datetime.datetime(2023, 8, 30, 1, 16, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 18, 17, 43, tzinfo=datetime.timezone.utc), 'time_taken': 889109.0, 'time_delta': '10 days, 6:58:29', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 1479486761, 'number': 26517, 'closed': None, 'created': datetime.datetime(2023, 8, 17, 18, 18, 26, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 83, 'deletions': 16, 'state': 'open'}, {'id': 1463955036, 'number': 26429, 'closed': datetime.datetime(2023, 8, 15, 20, 18, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 5, 21, 22, 15, tzinfo=datetime.timezone.utc), 'time_taken': 860156.0, 'time_delta': '9 days, 22:55:56', 'additions': 37, 'deletions': 15, 'state': 'closed'}, {'id': 1415319534, 'number': 26165, 'closed': datetime.datetime(2023, 7, 2, 23, 18, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 30, 19, 37, 35, tzinfo=datetime.timezone.utc), 'time_taken': 186084.0, 'time_delta': '2 days, 3:41:24', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 1396832664, 'number': 26050, 'closed': datetime.datetime(2023, 7, 10, 20, 47, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 17, 16, 57, 56, tzinfo=datetime.timezone.utc), 'time_taken': 2000966.0, 'time_delta': '23 days, 3:49:26', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1377877489, 'number': 25885, 'closed': datetime.datetime(2023, 11, 27, 7, 30, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 4, 18, 26, 4, tzinfo=datetime.timezone.utc), 'time_taken': 15167057.0, 'time_delta': '175 days, 13:04:17', 'additions': 116, 'deletions': 0, 'state': 'closed'}, {'id': 1369449194, 'number': 25818, 'closed': datetime.datetime(2023, 8, 16, 0, 29, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 29, 18, 28, 13, tzinfo=datetime.timezone.utc), 'time_taken': 6760868.0, 'time_delta': '78 days, 6:01:08', 'additions': 76, 'deletions': 12, 'state': 'closed'}, {'id': 1356853266, 'number': 25677, 'closed': None, 'created': datetime.datetime(2023, 5, 19, 9, 15, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 409, 'deletions': 14, 'state': 'open'}, {'id': 711330783, 'number': 19566, 'closed': datetime.datetime(2021, 11, 30, 0, 20, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 17, 49, 27, tzinfo=datetime.timezone.utc), 'time_taken': 9441062.0, 'time_delta': '109 days, 6:31:02', 'additions': 26, 'deletions': 13, 'state': 'closed'}, {'id': 707651707, 'number': 19554, 'closed': None, 'created': datetime.datetime(2021, 8, 10, 20, 4, 44, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 397, 'deletions': 54, 'state': 'open'}, {'id': 705929780, 'number': 19538, 'closed': datetime.datetime(2023, 8, 5, 21, 50, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 7, 18, 37, 14, tzinfo=datetime.timezone.utc), 'time_taken': 62910806.0, 'time_delta': '728 days, 3:13:26', 'additions': 75, 'deletions': 37, 'state': 'closed'}, {'id': 702375839, 'number': 19479, 'closed': datetime.datetime(2023, 10, 5, 22, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 15, 19, 38, tzinfo=datetime.timezone.utc), 'time_taken': 68542493.0, 'time_delta': '793 days, 7:34:53', 'additions': 11, 'deletions': 2, 'state': 'closed'}, {'id': 698224056, 'number': 19408, 'closed': datetime.datetime(2021, 7, 27, 22, 41, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 22, 19, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1340.0, 'time_delta': '0:22:20', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 698206657, 'number': 19407, 'closed': datetime.datetime(2021, 7, 27, 23, 17, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 21, 41, 58, tzinfo=datetime.timezone.utc), 'time_taken': 5733.0, 'time_delta': '1:35:33', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 696570925, 'number': 19386, 'closed': datetime.datetime(2024, 7, 21, 20, 41, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 22, 5, 37, tzinfo=datetime.timezone.utc), 'time_taken': 94343735.0, 'time_delta': '1091 days, 22:35:35', 'additions': 40, 'deletions': 9, 'state': 'closed'}, {'id': 694991888, 'number': 19352, 'closed': datetime.datetime(2021, 7, 22, 17, 57, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 9, 2, 59, tzinfo=datetime.timezone.utc), 'time_taken': 32089.0, 'time_delta': '8:54:49', 'additions': 17, 'deletions': 27, 'state': 'closed'}, {'id': 694775579, 'number': 19345, 'closed': datetime.datetime(2021, 8, 7, 16, 51, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 23, 44, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1443978.0, 'time_delta': '16 days, 17:06:18', 'additions': 35, 'deletions': 4, 'state': 'closed'}, {'id': 689329948, 'number': 19233, 'closed': datetime.datetime(2021, 7, 13, 20, 3, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 19, 6, 43, tzinfo=datetime.timezone.utc), 'time_taken': 3415.0, 'time_delta': '0:56:55', 'additions': 41, 'deletions': 31, 'state': 'closed'}, {'id': 689200331, 'number': 19230, 'closed': datetime.datetime(2021, 7, 14, 6, 49, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 16, 8, 23, tzinfo=datetime.timezone.utc), 'time_taken': 52885.0, 'time_delta': '14:41:25', 'additions': 289, 'deletions': 18, 'state': 'closed'}, {'id': 687061559, 'number': 19204, 'closed': datetime.datetime(2021, 7, 13, 16, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 22, 7, 32, tzinfo=datetime.timezone.utc), 'time_taken': 324371.0, 'time_delta': '3 days, 18:06:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 686364123, 'number': 19184, 'closed': datetime.datetime(2021, 7, 9, 0, 41, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 22, 28, 25, tzinfo=datetime.timezone.utc), 'time_taken': 7978.0, 'time_delta': '2:12:58', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 686349061, 'number': 19183, 'closed': datetime.datetime(2021, 7, 9, 0, 45, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 21, 54, 7, tzinfo=datetime.timezone.utc), 'time_taken': 10295.0, 'time_delta': '2:51:35', 'additions': 1, 'deletions': 21, 'state': 'closed'}, {'id': 686088262, 'number': 19174, 'closed': datetime.datetime(2021, 7, 8, 19, 39, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 14, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 17191.0, 'time_delta': '4:46:31', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 685492166, 'number': 19160, 'closed': datetime.datetime(2021, 7, 7, 21, 29, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 20, 31, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3485.0, 'time_delta': '0:58:05', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 684305491, 'number': 19136, 'closed': datetime.datetime(2021, 7, 6, 22, 26, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 11, 47, 52, tzinfo=datetime.timezone.utc), 'time_taken': 38341.0, 'time_delta': '10:39:01', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 678091454, 'number': 19011, 'closed': datetime.datetime(2021, 7, 5, 23, 58, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 18, 4, 10, tzinfo=datetime.timezone.utc), 'time_taken': 885261.0, 'time_delta': '10 days, 5:54:21', 'additions': 39, 'deletions': 4, 'state': 'closed'}, {'id': 677202097, 'number': 18980, 'closed': datetime.datetime(2021, 6, 24, 16, 43, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 15, 15, 22, tzinfo=datetime.timezone.utc), 'time_taken': 5290.0, 'time_delta': '1:28:10', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 673723742, 'number': 18914, 'closed': None, 'created': datetime.datetime(2021, 6, 18, 20, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 398, 'deletions': 26, 'state': 'open'}, {'id': 672148234, 'number': 18889, 'closed': datetime.datetime(2021, 6, 17, 22, 33, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 3, 26, 49, tzinfo=datetime.timezone.utc), 'time_taken': 68807.0, 'time_delta': '19:06:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 669478119, 'number': 18831, 'closed': datetime.datetime(2021, 7, 13, 10, 18, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 11, 17, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2502048.0, 'time_delta': '28 days, 23:00:48', 'additions': 23, 'deletions': 6, 'state': 'closed'}, {'id': 668897028, 'number': 18819, 'closed': datetime.datetime(2021, 11, 10, 20, 56, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 15, 46, 38, tzinfo=datetime.timezone.utc), 'time_taken': 13065005.0, 'time_delta': '151 days, 5:10:05', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 668570732, 'number': 18811, 'closed': datetime.datetime(2021, 6, 12, 14, 31, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 21, 20, tzinfo=datetime.timezone.utc), 'time_taken': 61872.0, 'time_delta': '17:11:12', 'additions': 133, 'deletions': 113, 'state': 'closed'}, {'id': 665424895, 'number': 18754, 'closed': datetime.datetime(2021, 6, 9, 19, 25, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 23, 15, 35, tzinfo=datetime.timezone.utc), 'time_taken': 72599.0, 'time_delta': '20:09:59', 'additions': 145, 'deletions': 146, 'state': 'closed'}, {'id': 660957181, 'number': 18683, 'closed': datetime.datetime(2021, 6, 3, 16, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 14, 32, 12, tzinfo=datetime.timezone.utc), 'time_taken': 6856.0, 'time_delta': '1:54:16', 'additions': 14, 'deletions': 11, 'state': 'closed'}, {'id': 658529116, 'number': 18658, 'closed': None, 'created': datetime.datetime(2021, 5, 31, 21, 47, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 346, 'deletions': 77, 'state': 'open'}, {'id': 653671197, 'number': 18608, 'closed': datetime.datetime(2021, 7, 15, 22, 18, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 12, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 4356763.0, 'time_delta': '50 days, 10:12:43', 'additions': 70, 'deletions': 2, 'state': 'closed'}, {'id': 650675663, 'number': 18577, 'closed': None, 'created': datetime.datetime(2021, 5, 22, 19, 30, 48, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 77, 'deletions': 34, 'state': 'open'}, {'id': 646909038, 'number': 18538, 'closed': datetime.datetime(2021, 5, 19, 18, 59, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 18, 16, 24, 45, tzinfo=datetime.timezone.utc), 'time_taken': 95683.0, 'time_delta': '1 day, 2:34:43', 'additions': 200, 'deletions': 194, 'state': 'closed'}, {'id': 646127200, 'number': 18529, 'closed': datetime.datetime(2021, 5, 20, 18, 43, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 17, 19, 33, 9, tzinfo=datetime.timezone.utc), 'time_taken': 256195.0, 'time_delta': '2 days, 23:09:55', 'additions': 165, 'deletions': 45, 'state': 'closed'}, {'id': 643561913, 'number': 18470, 'closed': None, 'created': datetime.datetime(2021, 5, 12, 23, 15, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 80, 'deletions': 54, 'state': 'open'}, {'id': 638499817, 'number': 18431, 'closed': datetime.datetime(2023, 4, 26, 23, 6, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 10, 21, 36, 58, tzinfo=datetime.timezone.utc), 'time_taken': 61867774.0, 'time_delta': '716 days, 1:29:34', 'additions': 46, 'deletions': 24, 'state': 'closed'}, {'id': 638066295, 'number': 18426, 'closed': datetime.datetime(2021, 5, 10, 19, 20, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 10, 17, 30, tzinfo=datetime.timezone.utc), 'time_taken': 6656.0, 'time_delta': '1:50:56', 'additions': 35, 'deletions': 1, 'state': 'closed'}, {'id': 623970615, 'number': 18274, 'closed': datetime.datetime(2021, 4, 27, 23, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 4, 30, 38, tzinfo=datetime.timezone.utc), 'time_taken': 69301.0, 'time_delta': '19:15:01', 'additions': 46, 'deletions': 7, 'state': 'closed'}, {'id': 613892926, 'number': 18109, 'closed': datetime.datetime(2021, 4, 13, 18, 42, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 19, 35, 2, tzinfo=datetime.timezone.utc), 'time_taken': 83255.0, 'time_delta': '23:07:35', 'additions': 39, 'deletions': 3, 'state': 'closed'}, {'id': 613354909, 'number': 18102, 'closed': datetime.datetime(2021, 4, 24, 2, 11, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 7, 35, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1017326.0, 'time_delta': '11 days, 18:35:26', 'additions': 558, 'deletions': 2, 'state': 'closed'}, {'id': 612624777, 'number': 18064, 'closed': None, 'created': datetime.datetime(2021, 4, 9, 17, 35, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 9, 'deletions': 6, 'state': 'open'}, {'id': 608266027, 'number': 17963, 'closed': datetime.datetime(2021, 4, 2, 22, 9, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 21, 41, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1668.0, 'time_delta': '0:27:48', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 600044445, 'number': 17781, 'closed': None, 'created': datetime.datetime(2021, 3, 24, 20, 21, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 695, 'deletions': 22, 'state': 'open'}, {'id': 592398355, 'number': 17616, 'closed': datetime.datetime(2024, 1, 4, 18, 15, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 17, 38, 4, tzinfo=datetime.timezone.utc), 'time_taken': 88735037.0, 'time_delta': '1027 days, 0:37:17', 'additions': 78, 'deletions': 17, 'state': 'closed'}, {'id': 586086912, 'number': 17511, 'closed': None, 'created': datetime.datetime(2021, 3, 6, 15, 49, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 256, 'deletions': 51, 'state': 'open'}, {'id': 578366717, 'number': 17386, 'closed': None, 'created': datetime.datetime(2021, 2, 23, 11, 18, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 723, 'deletions': 77, 'state': 'open'}, {'id': 560212805, 'number': 17104, 'closed': datetime.datetime(2021, 1, 25, 22, 24, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 22, 21, 10, 27, tzinfo=datetime.timezone.utc), 'time_taken': 263662.0, 'time_delta': '3 days, 1:14:22', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 553660643, 'number': 17045, 'closed': datetime.datetime(2021, 5, 10, 3, 31, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 12, 18, 24, 50, tzinfo=datetime.timezone.utc), 'time_taken': 10141597.0, 'time_delta': '117 days, 9:06:37', 'additions': 220, 'deletions': 16, 'state': 'closed'}, {'id': 552099657, 'number': 17031, 'closed': datetime.datetime(2022, 3, 18, 19, 32, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 9, 8, 50, 12, tzinfo=datetime.timezone.utc), 'time_taken': 37449754.0, 'time_delta': '433 days, 10:42:34', 'additions': 170, 'deletions': 1, 'state': 'closed'}, {'id': 546599679, 'number': 16984, 'closed': None, 'created': datetime.datetime(2020, 12, 29, 19, 3, 12, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 119, 'deletions': 7, 'state': 'open'}, {'id': 545630468, 'number': 16964, 'closed': None, 'created': datetime.datetime(2020, 12, 25, 20, 49, 47, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 897, 'deletions': 71, 'state': 'open'}, {'id': 542898524, 'number': 16931, 'closed': datetime.datetime(2021, 1, 25, 22, 26, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 19, 8, 44, 40, tzinfo=datetime.timezone.utc), 'time_taken': 3246124.0, 'time_delta': '37 days, 13:42:04', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 541930089, 'number': 16916, 'closed': datetime.datetime(2021, 3, 25, 7, 41, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 17, 15, 11, 10, tzinfo=datetime.timezone.utc), 'time_taken': 8440204.0, 'time_delta': '97 days, 16:30:04', 'additions': 225, 'deletions': 2, 'state': 'closed'}, {'id': 536262983, 'number': 16871, 'closed': datetime.datetime(2021, 5, 3, 20, 7, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 10, 21, 17, 17, tzinfo=datetime.timezone.utc), 'time_taken': 12437428.0, 'time_delta': '143 days, 22:50:28', 'additions': 48, 'deletions': 8, 'state': 'closed'}, {'id': 534990424, 'number': 16860, 'closed': datetime.datetime(2021, 6, 17, 0, 55, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 9, 8, 3, 19, tzinfo=datetime.timezone.utc), 'time_taken': 16390309.0, 'time_delta': '189 days, 16:51:49', 'additions': 104, 'deletions': 6, 'state': 'closed'}, {'id': 521239752, 'number': 16748, 'closed': None, 'created': datetime.datetime(2020, 11, 15, 18, 41, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 172, 'deletions': 36, 'state': 'open'}, {'id': 515670070, 'number': 16708, 'closed': datetime.datetime(2020, 11, 6, 18, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 4, 22, 16, 37, tzinfo=datetime.timezone.utc), 'time_taken': 158181.0, 'time_delta': '1 day, 19:56:21', 'additions': 22, 'deletions': 1, 'state': 'closed'}, {'id': 513297835, 'number': 16665, 'closed': datetime.datetime(2020, 10, 30, 22, 22, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 30, 21, 39, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2631.0, 'time_delta': '0:43:51', 'additions': 50, 'deletions': 16, 'state': 'closed'}, {'id': 507155008, 'number': 16581, 'closed': datetime.datetime(2020, 10, 21, 18, 15, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 20, 23, 34, 55, tzinfo=datetime.timezone.utc), 'time_taken': 67242.0, 'time_delta': '18:40:42', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 502994541, 'number': 16530, 'closed': None, 'created': datetime.datetime(2020, 10, 13, 23, 49, 19, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 116, 'deletions': 4, 'state': 'open'}, {'id': 497162510, 'number': 16466, 'closed': datetime.datetime(2020, 10, 7, 0, 28, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 2, 22, 32, 19, tzinfo=datetime.timezone.utc), 'time_taken': 352544.0, 'time_delta': '4 days, 1:55:44', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 482530252, 'number': 16319, 'closed': datetime.datetime(2020, 10, 19, 19, 6, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 5, 58, 34, tzinfo=datetime.timezone.utc), 'time_taken': 3503260.0, 'time_delta': '40 days, 13:07:40', 'additions': 39, 'deletions': 2, 'state': 'closed'}, {'id': 475201550, 'number': 16220, 'closed': datetime.datetime(2020, 9, 1, 6, 0, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 6, 50, 23, tzinfo=datetime.timezone.utc), 'time_taken': 342602.0, 'time_delta': '3 days, 23:10:02', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 473630723, 'number': 16200, 'closed': datetime.datetime(2020, 8, 26, 13, 45, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 4, 9, 47, tzinfo=datetime.timezone.utc), 'time_taken': 34568.0, 'time_delta': '9:36:08', 'additions': 19, 'deletions': 1, 'state': 'closed'}]"
31696383,typeshed,python/typeshed,Python,1712,4237,73,1470,9500,284,10,98,"[{'id': 656348972, 'number': 5544, 'closed': datetime.datetime(2021, 5, 29, 17, 40, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 11, 51, 3, tzinfo=datetime.timezone.utc), 'time_taken': 107344.0, 'time_delta': '1 day, 5:49:04', 'additions': 4, 'deletions': 1, 'state': 'closed'}]"
