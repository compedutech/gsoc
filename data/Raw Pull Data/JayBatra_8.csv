pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
466680424,Use integer bucket sizes for chunk_store_index_lookups_per_query,"Currently, the variable registers a new Histogram using
default bucket sizes that have floating size as well {.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10
Since this variable measures quantities which is always a whole number,
the default buckets go unused and are not necessarily required.
This PR uses custom bucket for variable indexEntriesPerChunk with
sizes {1, 2, 4, 8, 16}

Signed-off-by: Jay Batra <jaybatra73@gmail.com>

<!--  Thanks for sending a pull request!  Before submitting:

1. Read our CONTRIBUTING.md guide
2. Rebase your PR if it gets out of sync with master
-->

**What this PR does**:

**Which issue(s) this PR fixes**:
Fixes #<issue number>

**Checklist**
- [ ] Tests updated
- [ ] Documentation added
- [ ] `CHANGELOG.md` updated - the order of entries should be `[CHANGE]`, `[FEATURE]`, `[ENHANCEMENT]`, `[BUGFIX]`
",True,3021,https://api.github.com/repos/cortexproject/cortex/pulls/3021,https://github.com/cortexproject/cortex/pull/3021,closed,2,1,2,3,1,4,1,0,[{'name': 'size/XS'}],2020-08-12 10:40:47+00:00,2020-08-28 12:35:18+00:00,1389271.0,"16 days, 1:54:31","[{'comment_id': 469245955, 'comment_body': ""When you write a CHANGELOG entry try to always express the change as understandeable from a user who has never seen Cortex internals. In this case it's better to mention the metric name.\r\n\r\n```suggestion\r\n* [CHANGE] The buckets for the `cortex_chunk_store_index_lookups_per_query` have been changed to 1, 2, 4, 8, 16. #3021\r\n```"", 'comment_created': datetime.datetime(2020, 8, 12, 13, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 469246256, 'comment_body': 'Note to myself. Default buckets are:\r\n`.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10`', 'comment_created': datetime.datetime(2020, 8, 12, 13, 9, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 469731172, 'comment_body': 'Thanks @pracucci . I will update this. :)', 'comment_created': datetime.datetime(2020, 8, 13, 6, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 471383235, 'comment_body': '```suggestion\r\n* [CHANGE] The buckets for the `cortex_chunk_store_index_lookups_per_query` metric have been changed to 1, 2, 4, 8, 16. #3021\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 10, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}]","[{'commit_sha': '2eb7911f8a532341467bbcbb315dd14f5bbc9187', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea6e46606e4fc6925f58b3b073e88b590ce094f4', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3c5708c8b6bceca778c7273fb1bf782de1720a0', 'committer_username': 'pstibrany', 'committer_name': 'Peter Štibraný', 'committer_email': None, 'commit_date': datetime.datetime(2011, 7, 5, 15, 10, 19, tzinfo=datetime.timezone.utc)}]",Jay Batra,24604293,,User,,44,,0,1
435347329, Add validation check for chunks and index in schema config ,"<!--  Thanks for sending a pull request!  Before submitting:

1. Read our CONTRIBUTING.md guide
2. Rebase your PR if it gets out of sync with master
-->

**What this PR does**:

This change would add a check for the presence of  chunks and index 
config in schema
Signed-off-by: Jay Batra jaybatra73@gmail.com

**Which issue(s) this PR fixes**:
Fixes #2731 

**Checklist**
- [x] Tests updated
- [ ] Documentation added
- [x] `CHANGELOG.md` updated - the order of entries should be `[CHANGE]`, `[FEATURE]`, `[ENHANCEMENT]`, `[BUGFIX]`
",True,2732,https://api.github.com/repos/cortexproject/cortex/pulls/2732,https://github.com/cortexproject/cortex/pull/2732,closed,117,3,3,4,7,21,1,0,[{'name': 'size/L'}],2020-06-16 16:54:53+00:00,2020-07-31 11:55:27+00:00,3870034.0,"44 days, 19:00:34","[{'comment_id': 442810571, 'comment_body': 'I think this is not correct. Even if obscure, as of today having an empty prefix for the chunk tables means that the table manager should not create such tables ([see code here](https://github.com/cortexproject/cortex/blob/311ab3eb147773ba52a07150cdf5511a3797e06b/pkg/chunk/table_manager.go#L415-L419)). This is a valid setting used by people storing chunks on a object storage.', 'comment_created': datetime.datetime(2020, 6, 19, 12, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 442810924, 'comment_body': 'I would be more clear.\r\n\r\n```suggestion\r\n\terrConfigIndexPrefixNotSet    = errors.New(""schema config for index is missing the \'prefix\' setting"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 12, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 442811567, 'comment_body': ""This is nit. Generally speaking, we try to preserve the rest of the codebase as is, without adding non-functional changes to blocks of that haven't changed."", 'comment_created': datetime.datetime(2020, 6, 19, 12, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 442812139, 'comment_body': 'We have `periodCfg.validate()` that should have the validation logic for the `PeriodConfig`. Is there any blocker to move this logic there?', 'comment_created': datetime.datetime(2020, 6, 19, 12, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 443099168, 'comment_body': '@pracucci  I agree, I learned it the hard way. My configuration was missing `chunks` section and all I was getting was `Table name empty error` which was most likely coming from table manager. After comparing  config file, provided by @bboreham I realized that I was missing this piece of information in my config file. So, I thought there should be a check for that as well. ', 'comment_created': datetime.datetime(2020, 6, 20, 4, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 443099214, 'comment_body': 'I will keep in mind about preserving the rest of the codebase.', 'comment_created': datetime.datetime(2020, 6, 20, 4, 7, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 443099479, 'comment_body': ""The `periodCfg.validate()` ultimately calls [createSchema](https://github.com/cortexproject/cortex/blob/master/pkg/chunk/schema_config.go#L148) function which validates the Period config for index and chunk. It validates by creating schema and fails if it fails. That's why I have put the check statement here."", 'comment_created': datetime.datetime(2020, 6, 20, 4, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 443125231, 'comment_body': ""So you need to narrow the check. There should only be a check if the chunk store intends to use tables.\r\nChunks can be stored in non-table store, like S3 or Swift.\r\nThis may simplify the changes to tests that you made; I don't think so many should be necessary."", 'comment_created': datetime.datetime(2020, 6, 20, 11, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 443333460, 'comment_body': 'ohh! okay. Looking deeper into the code.', 'comment_created': datetime.datetime(2020, 6, 22, 6, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 446124436, 'comment_body': 'Please move this to the top of the file.\r\n', 'comment_created': datetime.datetime(2020, 6, 26, 11, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 446232712, 'comment_body': ""I still believe this logic should belong to `PeriodConfig.Validate()`. Currently it does:\r\n\r\n```\r\nfunc (cfg PeriodConfig) validate() error {\r\n\t_, err := cfg.CreateSchema()\r\n\treturn err\r\n}\r\n```\r\n\r\nWhat you could do is:\r\n\r\n```\r\nfunc (cfg PeriodConfig) validate() error {\r\n\tif _, err := cfg.CreateSchema(); err != nil {\r\n\t    return err\r\n       }\r\n\r\n      // Then here you move the extra validation you're currently doing in validateChunks()\r\n}\r\n```"", 'comment_created': datetime.datetime(2020, 6, 26, 14, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 446235869, 'comment_body': '`""boltdb""`\xa0 is not an option for the chunk store. Should be removed from this.', 'comment_created': datetime.datetime(2020, 6, 26, 14, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 446474967, 'comment_body': '@bboreham Sure! Thanks\r\n', 'comment_created': datetime.datetime(2020, 6, 27, 2, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 446475032, 'comment_body': '@pracucci Thanks for the review. I will move this.', 'comment_created': datetime.datetime(2020, 6, 27, 2, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 451599431, 'comment_body': 'Please move this above, under the ""master / unreleased"" section.', 'comment_created': datetime.datetime(2020, 7, 8, 14, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 451599661, 'comment_body': '```suggestion\r\n* [BUGFIX] Fixed `Missing chunks and index config causing silent failure` Absence of chunks and index from schema config is not validated. #2732\r\n```', 'comment_created': datetime.datetime(2020, 7, 8, 14, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 451600589, 'comment_body': 'Could you remove `boltdb`, please?', 'comment_created': datetime.datetime(2020, 7, 8, 14, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 451999200, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 9, 6, 48, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 451999491, 'comment_body': 'My apologies, I removed the tests for BoltDb but forgot to remove it from the check list.', 'comment_created': datetime.datetime(2020, 7, 9, 6, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 452000608, 'comment_body': ""We're used to reference the PR number instead of the issue number:\r\n\r\n```suggestion\r\n* [BUGFIX] Fixed `Missing chunks and index config causing silent failure` Absence of chunks and index from schema config is not validated. #2732\r\n```"", 'comment_created': datetime.datetime(2020, 7, 9, 6, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 452002783, 'comment_body': '@pracucci Done :)', 'comment_created': datetime.datetime(2020, 7, 9, 6, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}]","[{'commit_sha': '96451391e723d14eec45dc68943f400a7f2b8999', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f2e19b42dd5c982274873c109261ac7df08f0bd', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cef04f40bc302289cd0da4496f861a80ef14188', 'committer_username': 'pracucci', 'committer_name': 'Marco Pracucci', 'committer_email': 'marco@pracucci.com', 'commit_date': datetime.datetime(2012, 5, 3, 9, 57, 32, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd78783c5f1fdb91166fcb21b8500cf14879a3824', 'committer_username': 'pracucci', 'committer_name': 'Marco Pracucci', 'committer_email': 'marco@pracucci.com', 'commit_date': datetime.datetime(2012, 5, 3, 9, 57, 32, tzinfo=datetime.timezone.utc)}]",Jay Batra,24604293,,User,,44,,0,1
464535000,Selectively disable Indexing of Labels,"<!--  Thanks for sending a pull request!  Before submitting:

1. Read our CONTRIBUTING.md guide
2. Rebase your PR if it gets out of sync with master
-->

**What this PR does**:
This PR introduces a new config under the **chunk_store** section called as **exclude labels**. These labels are skipped from the **lookup_series_from_matchers** function inside series_store. Hence reducing index lookups.

Signed-off-by: Jay Batra <jaybatra73@gmail.com>

**Which issue(s) this PR fixes**:
Fixes #2068

**Checklist**
- [x] Tests updated
- [ ] Documentation added
- [x] `CHANGELOG.md` updated - the order of entries should be `[CHANGE]`, `[FEATURE]`, `[ENHANCEMENT]`, `[BUGFIX]`
",False,2995,https://api.github.com/repos/cortexproject/cortex/pulls/2995,https://github.com/cortexproject/cortex/pull/2995,closed,492,36,10,50,3,42,2,0,"[{'name': 'stale'}, {'name': 'size/XL'}]",2020-08-07 10:47:05+00:00,2020-11-30 22:17:20+00:00,9977415.0,"115 days, 11:30:15","[{'comment_id': 476352873, 'comment_body': ""Put a comment on this line explaining what it's there for."", 'comment_created': datetime.datetime(2020, 8, 25, 10, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478261173, 'comment_body': ""why isn't this using the exclusions in `c.cfg.ExcludeLabels` ?"", 'comment_created': datetime.datetime(2020, 8, 27, 8, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478262029, 'comment_body': 'is this a repeat of `shouldSkip()` ?', 'comment_created': datetime.datetime(2020, 8, 27, 8, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478262520, 'comment_body': 'please clean up', 'comment_created': datetime.datetime(2020, 8, 27, 8, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478263087, 'comment_body': 'please clean up', 'comment_created': datetime.datetime(2020, 8, 27, 8, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478263439, 'comment_body': 'where does this get used?', 'comment_created': datetime.datetime(2020, 8, 27, 8, 56, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478324581, 'comment_body': 'Yeah! Fixing it.\r\n', 'comment_created': datetime.datetime(2020, 8, 27, 10, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347052, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347163, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347235, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347296, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478383842, 'comment_body': ""remove - doesn't belong in top-level config example.\r\nYou could give it as an example in a separate file, or in the docs"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478384220, 'comment_body': 'add blank line and comment above', 'comment_created': datetime.datetime(2020, 8, 27, 12, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478384712, 'comment_body': '?', 'comment_created': datetime.datetime(2020, 8, 27, 12, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478384893, 'comment_body': 'put a comment saying what is going on here', 'comment_created': datetime.datetime(2020, 8, 27, 12, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478385593, 'comment_body': ""might want to say it's copied from `TestChunkStore_Get()`"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478386420, 'comment_body': ""move closer to where it's used"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478388350, 'comment_body': 'comment that these numbers are lower than in `TestChunkStore_Get()`', 'comment_created': datetime.datetime(2020, 8, 27, 12, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478388886, 'comment_body': 'spurious change  - remove', 'comment_created': datetime.datetime(2020, 8, 27, 12, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478389060, 'comment_body': 'spurious change - remove', 'comment_created': datetime.datetime(2020, 8, 27, 12, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478389494, 'comment_body': 's/excludeLblCfg/excfg/ for consistency', 'comment_created': datetime.datetime(2020, 8, 27, 12, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478390104, 'comment_body': 'elide', 'comment_created': datetime.datetime(2020, 8, 27, 12, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478390421, 'comment_body': 'elide', 'comment_created': datetime.datetime(2020, 8, 27, 12, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478391360, 'comment_body': 'elide', 'comment_created': datetime.datetime(2020, 8, 27, 12, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478391560, 'comment_body': ""comment doesn't add much"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478391769, 'comment_body': 'CamelCase', 'comment_created': datetime.datetime(2020, 8, 27, 12, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478392740, 'comment_body': 'Just get series for metric if there are no matchers after exclusions', 'comment_created': datetime.datetime(2020, 8, 27, 12, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 479271916, 'comment_body': ""Please register the CLI flag for this in `StoreConfig.RegisterFlags()`. Since you're using a custom data structure, you may need to define the CLI flag interface for serialization/deserialization."", 'comment_created': datetime.datetime(2020, 8, 28, 13, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 479277940, 'comment_body': '@pracucci Thanks. I have a small doubt. How do I register a CLI flag for a string? The `12768 ` is userID in the following and is a key in itself. How do I register this type of variable?\r\n```\r\nexclude_labels:\r\n    12768:\r\n    - metric_name: go_gc_duration_seconds\r\n      label_name: instance\r\n    - metric_name: go_heap_size\r\n      label_name: job\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 28, 13, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479283828, 'comment_body': 'Unfortunately, your data structure is not CLI flag friendly.  You would have to define your own custom format and then parse it, but I agree this data structure looks quite complicate to be represented in a CLI flag.', 'comment_created': datetime.datetime(2020, 8, 28, 13, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 479292391, 'comment_body': 'Can you point me to an example of a custom format? I would sincerely appreciate it if I could use an example. Thanks in advance.\r\n', 'comment_created': datetime.datetime(2020, 8, 28, 13, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479294145, 'comment_body': 'Definitely! Look at `DurationList` defined in `pkg/storage/tsdb/config.go`.', 'comment_created': datetime.datetime(2020, 8, 28, 13, 33, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 479295865, 'comment_body': 'Thanks! 👍 ', 'comment_created': datetime.datetime(2020, 8, 28, 13, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479334457, 'comment_body': ""I think it's unreasonable to parse this structure as a CLI flag."", 'comment_created': datetime.datetime(2020, 8, 28, 14, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 479335737, 'comment_body': 'I agree! It is getting extremely complicated.', 'comment_created': datetime.datetime(2020, 8, 28, 14, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479337515, 'comment_body': 'I agree it\'s complicated.\r\n\r\n> doc:""hidden""\r\n\r\nThis will hide this config from the auto-generated config file reference because it expect a CLI flag for each config option. Just a fact to be aware.', 'comment_created': datetime.datetime(2020, 8, 28, 14, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 480165799, 'comment_body': '""counter"" is a bit generic; better to call this something like `matchersCount` or `nMatchers` ', 'comment_created': datetime.datetime(2020, 8, 31, 14, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 480166259, 'comment_body': ""I don't think the first part can be true without the second also being true, i.e. the first is redundant."", 'comment_created': datetime.datetime(2020, 8, 31, 14, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 480834591, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 9, 1, 5, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 480834695, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2020, 9, 1, 5, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 488899806, 'comment_body': ""I've just merged a PR to cut the CHANGELOG because of the upcoming `1.4.0` release. Could you rebase `master` and move your CHANGELOG entry to the top, under `## master / unreleased`, please?"", 'comment_created': datetime.datetime(2020, 9, 15, 19, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 489496803, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2020, 9, 16, 14, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}]","[{'commit_sha': '1858b4a57e8b290b46b8fb8033fbe7ef76e0be79', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa6a0e0ea2addbe5ba7db9071f3ee05dca4ecf8', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5a30e6203274111b99d41fc41e490d50bbe48c8', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba600b6304f3d84300d2d3b70d206a6ce7327f53', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95198ed9f9ddff2a4339c17924e921be90ffa0d', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '384218df5bf56d6ae7f45df4ec897c62eaa28cdc', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '252eff1a2a84c240e8a567778a6c740ac3b4753d', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab68a9fe418c5df8f573856b514c57846364c7a9', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b298bf592d11195b05ace4b28a550f0cea282d5', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ec979f903cd6c0e3a49f245cac447aa0c4d9ab', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c365a84b354f155b93e4460e19b6d654aa0cd9e9', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47f38dbeb9454b437360f554b8b0385bbb3afe87', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b800eced317cd2d3dabe0f5b6fa47984ebc14ef9', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68a8a52b9e589cad9df417914b4c1377a2a31fec', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6512c84104ae1eaad922c9b596f8c998d5cf637', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa7db6f5d810c342e9091286f73361f98c572c7', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e425439b4b89725105833b7e25b04918346cc881', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1291f85680980448517de3116dbaa3ca4615fe82', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc396b8a3614cae875f90e8c02489c5953cf46ab', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562f632e9c80250e98cfb53038f2a1c947aa1a78', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa89420c954eb0bb5cdb9302ca37fd7824ed113f', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1853f8de030be827ee22ebfab469a174aa512aa7', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a1126c4f25239f0f123cf8b466a1a26fd24bf99', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6fc62807a597d3be9aef79714c550fb0d6c8d9c', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fce3971710bf95c508cbd397068379667525aa2', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18a7e8e46f01c91be9c13607bd69b89933664961', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '865726c9a19e7279bc35f5c2d773cd3edaa896ac', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7e17f245a3a36fe1089659f6fd0b7790d6e5ef', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355caaceccd330c4a8dd2dbfce9b04ff68d47af1', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '787b5d6b4f5ac79af1fab7dff3351195a1798170', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67de78704c3ebd149d3c5087b4c4579ed5641b68', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8c1c91867c61bb23ab86eca9a4ca70dc54d66e5', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ebb66874a71d606b62cc76cfdbd482570d00986', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4545e736da25072633ada2395cee749cf3bb34b', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '859e9aa9b192dacdcce14f040ed06d9ed0b06562', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67fbff5b61bf66d93a42e5edd226703ccfced633', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '365b7e86ae265e7606977b776418a968d810d2e4', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb8744c0843b2a96dd9627e09a307fb1a395d46d', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3331291c0ce882413cd0ff9052287ca68ebf1229', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f39b194e4e5d88514a9bfb2aad71ab69a4f84dd', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35861d34b21d64378de7ea6c9ecfdc2dd6a8c068', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2398a49b23a9f98667f26f68646167f92082beaf', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335f6ee44ba66985b44e77980f02bfcc9c4c3efc', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa107f8baeb3517c60247d8511eee8d2ec6d0b3', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c64201ff6fd47450b3e0beef68f29c8cd02c3094', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e3f006bf7af9a655926c498ee287a14856789e', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1abb9344f1ba14cb7152b029fe83e413794ed4c', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dca28c7bc3d5cafdd72b036e584b7f0ff8b6e4ea', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99de0d47abde627109d40fd3d5c90db6dd2ac25c', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc45b6cb086eee1772971ecf4cab3606ce9f95ca', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}]",Jay Batra,24604293,,User,,44,,0,1
464535000,Selectively disable Indexing of Labels,"<!--  Thanks for sending a pull request!  Before submitting:

1. Read our CONTRIBUTING.md guide
2. Rebase your PR if it gets out of sync with master
-->

**What this PR does**:
This PR introduces a new config under the **chunk_store** section called as **exclude labels**. These labels are skipped from the **lookup_series_from_matchers** function inside series_store. Hence reducing index lookups.

Signed-off-by: Jay Batra <jaybatra73@gmail.com>

**Which issue(s) this PR fixes**:
Fixes #2068

**Checklist**
- [x] Tests updated
- [ ] Documentation added
- [x] `CHANGELOG.md` updated - the order of entries should be `[CHANGE]`, `[FEATURE]`, `[ENHANCEMENT]`, `[BUGFIX]`
",False,2995,https://api.github.com/repos/cortexproject/cortex/pulls/2995,https://github.com/cortexproject/cortex/pull/2995,closed,492,36,10,50,3,42,2,0,"[{'name': 'stale'}, {'name': 'size/XL'}]",2020-08-07 10:47:05+00:00,2020-11-30 22:17:20+00:00,9977415.0,"115 days, 11:30:15","[{'comment_id': 476352873, 'comment_body': ""Put a comment on this line explaining what it's there for."", 'comment_created': datetime.datetime(2020, 8, 25, 10, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478261173, 'comment_body': ""why isn't this using the exclusions in `c.cfg.ExcludeLabels` ?"", 'comment_created': datetime.datetime(2020, 8, 27, 8, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478262029, 'comment_body': 'is this a repeat of `shouldSkip()` ?', 'comment_created': datetime.datetime(2020, 8, 27, 8, 53, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478262520, 'comment_body': 'please clean up', 'comment_created': datetime.datetime(2020, 8, 27, 8, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478263087, 'comment_body': 'please clean up', 'comment_created': datetime.datetime(2020, 8, 27, 8, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478263439, 'comment_body': 'where does this get used?', 'comment_created': datetime.datetime(2020, 8, 27, 8, 56, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478324581, 'comment_body': 'Yeah! Fixing it.\r\n', 'comment_created': datetime.datetime(2020, 8, 27, 10, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347052, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347163, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347235, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478347296, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2020, 8, 27, 11, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 478383842, 'comment_body': ""remove - doesn't belong in top-level config example.\r\nYou could give it as an example in a separate file, or in the docs"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478384220, 'comment_body': 'add blank line and comment above', 'comment_created': datetime.datetime(2020, 8, 27, 12, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478384712, 'comment_body': '?', 'comment_created': datetime.datetime(2020, 8, 27, 12, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478384893, 'comment_body': 'put a comment saying what is going on here', 'comment_created': datetime.datetime(2020, 8, 27, 12, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478385593, 'comment_body': ""might want to say it's copied from `TestChunkStore_Get()`"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478386420, 'comment_body': ""move closer to where it's used"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478388350, 'comment_body': 'comment that these numbers are lower than in `TestChunkStore_Get()`', 'comment_created': datetime.datetime(2020, 8, 27, 12, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478388886, 'comment_body': 'spurious change  - remove', 'comment_created': datetime.datetime(2020, 8, 27, 12, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478389060, 'comment_body': 'spurious change - remove', 'comment_created': datetime.datetime(2020, 8, 27, 12, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478389494, 'comment_body': 's/excludeLblCfg/excfg/ for consistency', 'comment_created': datetime.datetime(2020, 8, 27, 12, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478390104, 'comment_body': 'elide', 'comment_created': datetime.datetime(2020, 8, 27, 12, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478390421, 'comment_body': 'elide', 'comment_created': datetime.datetime(2020, 8, 27, 12, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478391360, 'comment_body': 'elide', 'comment_created': datetime.datetime(2020, 8, 27, 12, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478391560, 'comment_body': ""comment doesn't add much"", 'comment_created': datetime.datetime(2020, 8, 27, 12, 46, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478391769, 'comment_body': 'CamelCase', 'comment_created': datetime.datetime(2020, 8, 27, 12, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 478392740, 'comment_body': 'Just get series for metric if there are no matchers after exclusions', 'comment_created': datetime.datetime(2020, 8, 27, 12, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 479271916, 'comment_body': ""Please register the CLI flag for this in `StoreConfig.RegisterFlags()`. Since you're using a custom data structure, you may need to define the CLI flag interface for serialization/deserialization."", 'comment_created': datetime.datetime(2020, 8, 28, 13, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 479277940, 'comment_body': '@pracucci Thanks. I have a small doubt. How do I register a CLI flag for a string? The `12768 ` is userID in the following and is a key in itself. How do I register this type of variable?\r\n```\r\nexclude_labels:\r\n    12768:\r\n    - metric_name: go_gc_duration_seconds\r\n      label_name: instance\r\n    - metric_name: go_heap_size\r\n      label_name: job\r\n\r\n```', 'comment_created': datetime.datetime(2020, 8, 28, 13, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479283828, 'comment_body': 'Unfortunately, your data structure is not CLI flag friendly.  You would have to define your own custom format and then parse it, but I agree this data structure looks quite complicate to be represented in a CLI flag.', 'comment_created': datetime.datetime(2020, 8, 28, 13, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 479292391, 'comment_body': 'Can you point me to an example of a custom format? I would sincerely appreciate it if I could use an example. Thanks in advance.\r\n', 'comment_created': datetime.datetime(2020, 8, 28, 13, 31, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479294145, 'comment_body': 'Definitely! Look at `DurationList` defined in `pkg/storage/tsdb/config.go`.', 'comment_created': datetime.datetime(2020, 8, 28, 13, 33, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 479295865, 'comment_body': 'Thanks! 👍 ', 'comment_created': datetime.datetime(2020, 8, 28, 13, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479334457, 'comment_body': ""I think it's unreasonable to parse this structure as a CLI flag."", 'comment_created': datetime.datetime(2020, 8, 28, 14, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 479335737, 'comment_body': 'I agree! It is getting extremely complicated.', 'comment_created': datetime.datetime(2020, 8, 28, 14, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 479337515, 'comment_body': 'I agree it\'s complicated.\r\n\r\n> doc:""hidden""\r\n\r\nThis will hide this config from the auto-generated config file reference because it expect a CLI flag for each config option. Just a fact to be aware.', 'comment_created': datetime.datetime(2020, 8, 28, 14, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 480165799, 'comment_body': '""counter"" is a bit generic; better to call this something like `matchersCount` or `nMatchers` ', 'comment_created': datetime.datetime(2020, 8, 31, 14, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 480166259, 'comment_body': ""I don't think the first part can be true without the second also being true, i.e. the first is redundant."", 'comment_created': datetime.datetime(2020, 8, 31, 14, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bboreham', 'type': 'User'}, {'comment_id': 480834591, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2020, 9, 1, 5, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 480834695, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2020, 9, 1, 5, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}, {'comment_id': 488899806, 'comment_body': ""I've just merged a PR to cut the CHANGELOG because of the upcoming `1.4.0` release. Could you rebase `master` and move your CHANGELOG entry to the top, under `## master / unreleased`, please?"", 'comment_created': datetime.datetime(2020, 9, 15, 19, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pracucci', 'type': 'User'}, {'comment_id': 489496803, 'comment_body': 'Done 👍 ', 'comment_created': datetime.datetime(2020, 9, 16, 14, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jaybatra26', 'type': 'User'}]","[{'commit_sha': '1858b4a57e8b290b46b8fb8033fbe7ef76e0be79', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa6a0e0ea2addbe5ba7db9071f3ee05dca4ecf8', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5a30e6203274111b99d41fc41e490d50bbe48c8', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba600b6304f3d84300d2d3b70d206a6ce7327f53', 'committer_username': 'bboreham', 'committer_name': 'Bryan Boreham', 'committer_email': 'bjboreham@gmail.com', 'commit_date': datetime.datetime(2014, 7, 10, 14, 28, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95198ed9f9ddff2a4339c17924e921be90ffa0d', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '384218df5bf56d6ae7f45df4ec897c62eaa28cdc', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '252eff1a2a84c240e8a567778a6c740ac3b4753d', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab68a9fe418c5df8f573856b514c57846364c7a9', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b298bf592d11195b05ace4b28a550f0cea282d5', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ec979f903cd6c0e3a49f245cac447aa0c4d9ab', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c365a84b354f155b93e4460e19b6d654aa0cd9e9', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47f38dbeb9454b437360f554b8b0385bbb3afe87', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b800eced317cd2d3dabe0f5b6fa47984ebc14ef9', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68a8a52b9e589cad9df417914b4c1377a2a31fec', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6512c84104ae1eaad922c9b596f8c998d5cf637', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa7db6f5d810c342e9091286f73361f98c572c7', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e425439b4b89725105833b7e25b04918346cc881', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1291f85680980448517de3116dbaa3ca4615fe82', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc396b8a3614cae875f90e8c02489c5953cf46ab', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562f632e9c80250e98cfb53038f2a1c947aa1a78', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa89420c954eb0bb5cdb9302ca37fd7824ed113f', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1853f8de030be827ee22ebfab469a174aa512aa7', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a1126c4f25239f0f123cf8b466a1a26fd24bf99', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6fc62807a597d3be9aef79714c550fb0d6c8d9c', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fce3971710bf95c508cbd397068379667525aa2', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18a7e8e46f01c91be9c13607bd69b89933664961', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '865726c9a19e7279bc35f5c2d773cd3edaa896ac', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7e17f245a3a36fe1089659f6fd0b7790d6e5ef', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355caaceccd330c4a8dd2dbfce9b04ff68d47af1', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '787b5d6b4f5ac79af1fab7dff3351195a1798170', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67de78704c3ebd149d3c5087b4c4579ed5641b68', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8c1c91867c61bb23ab86eca9a4ca70dc54d66e5', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ebb66874a71d606b62cc76cfdbd482570d00986', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4545e736da25072633ada2395cee749cf3bb34b', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '859e9aa9b192dacdcce14f040ed06d9ed0b06562', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67fbff5b61bf66d93a42e5edd226703ccfced633', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '365b7e86ae265e7606977b776418a968d810d2e4', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb8744c0843b2a96dd9627e09a307fb1a395d46d', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3331291c0ce882413cd0ff9052287ca68ebf1229', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f39b194e4e5d88514a9bfb2aad71ab69a4f84dd', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35861d34b21d64378de7ea6c9ecfdc2dd6a8c068', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2398a49b23a9f98667f26f68646167f92082beaf', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335f6ee44ba66985b44e77980f02bfcc9c4c3efc', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa107f8baeb3517c60247d8511eee8d2ec6d0b3', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c64201ff6fd47450b3e0beef68f29c8cd02c3094', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e3f006bf7af9a655926c498ee287a14856789e', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1abb9344f1ba14cb7152b029fe83e413794ed4c', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dca28c7bc3d5cafdd72b036e584b7f0ff8b6e4ea', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99de0d47abde627109d40fd3d5c90db6dd2ac25c', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc45b6cb086eee1772971ecf4cab3606ce9f95ca', 'committer_username': 'jaybatra26', 'committer_name': 'Jay Batra', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 16, 9, 24, 15, tzinfo=datetime.timezone.utc)}]",Jay Batra,24604293,,User,,44,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
67793333,cortex,cortexproject/cortex,Go,790,5422,111,303,5307,227,88,35,"[{'id': 491800646, 'number': 3230, 'closed': datetime.datetime(2020, 10, 15, 17, 2, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 23, 13, 55, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1912002.0, 'time_delta': '22 days, 3:06:42', 'additions': 93, 'deletions': 0, 'state': 'closed'}, {'id': 466680424, 'number': 3021, 'closed': datetime.datetime(2020, 8, 28, 12, 35, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 10, 40, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1389271.0, 'time_delta': '16 days, 1:54:31', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 464535000, 'number': 2995, 'closed': datetime.datetime(2020, 11, 30, 22, 17, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 10, 47, 5, tzinfo=datetime.timezone.utc), 'time_taken': 9977415.0, 'time_delta': '115 days, 11:30:15', 'additions': 492, 'deletions': 36, 'state': 'closed'}, {'id': 435635766, 'number': 2735, 'closed': datetime.datetime(2020, 10, 19, 9, 13, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 6, 39, 56, tzinfo=datetime.timezone.utc), 'time_taken': 10722820.0, 'time_delta': '124 days, 2:33:40', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 435347329, 'number': 2732, 'closed': datetime.datetime(2020, 7, 31, 11, 55, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 16, 54, 53, tzinfo=datetime.timezone.utc), 'time_taken': 3870034.0, 'time_delta': '44 days, 19:00:34', 'additions': 117, 'deletions': 3, 'state': 'closed'}, {'id': 411195445, 'number': 2545, 'closed': datetime.datetime(2020, 7, 18, 18, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 30, 6, 59, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6867450.0, 'time_delta': '79 days, 11:37:30', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 395139751, 'number': 2349, 'closed': datetime.datetime(2020, 4, 28, 13, 49, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 19, 5, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2659433.0, 'time_delta': '30 days, 18:43:53', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 390399200, 'number': 2289, 'closed': datetime.datetime(2020, 3, 20, 15, 27, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 12, 12, 52, tzinfo=datetime.timezone.utc), 'time_taken': 184507.0, 'time_delta': '2 days, 3:15:07', 'additions': 11, 'deletions': 11, 'state': 'closed'}, {'id': 383657178, 'number': 2209, 'closed': datetime.datetime(2020, 3, 19, 7, 49, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 4, 15, 48, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1267275.0, 'time_delta': '14 days, 16:01:15', 'additions': 130, 'deletions': 129, 'state': 'closed'}]"
