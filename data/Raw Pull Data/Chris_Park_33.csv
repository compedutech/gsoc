pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
973357703,GTFS: Reading and Writing ,"# Issue

Cleaning up a [ past PR ](https://github.com/valhalla/valhalla/pull/3660) that included past commits. 
Tests the ability to read and write GTFS files using the [just_gtfs](https://github.com/mapsme/just_gtfs/tree/cpp14) submodule. ",True,3665,https://api.github.com/repos/valhalla/valhalla/pulls/3665,https://github.com/valhalla/valhalla/pull/3665,closed,155,0,5,11,4,7,0,1,[],2022-06-21 09:58:46+00:00,2022-06-28 14:18:02+00:00,620356.0,"7 days, 4:19:16","[{'comment_id': 903722662, 'comment_body': 'should also probably have an example where its schedule based (ie exact_times == 1)', 'comment_created': datetime.datetime(2022, 6, 22, 13, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 903725207, 'comment_body': 'need one of type ""added"" and of type ""removed""\r\n', 'comment_created': datetime.datetime(2022, 6, 22, 13, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 906891135, 'comment_body': 'these are run from inside wherever your build folder is\r\n```suggestion\r\n  feed.write_agencies((""test/data/gtfs_test/""));\r\n```', 'comment_created': datetime.datetime(2022, 6, 27, 0, 8, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 906891496, 'comment_body': 'we shouldnt use macros for constants these should look like:\r\n\r\n`const std::string tripOneID = ""bar"";`', 'comment_created': datetime.datetime(2022, 6, 27, 0, 10, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 907113458, 'comment_body': 'let\'s focus on one thing per PR. this PR is only about proving we can read/write with `just_gtfs`. we did that in the tests. after we\'re happy with that, we\'ll merge and start the work on ""fetching"" tiles.', 'comment_created': datetime.datetime(2022, 6, 27, 8, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 907366767, 'comment_body': 'this should work if the cmake changes are correct (need to make changes in cmakelists in tests dir)\r\n```suggestion\r\n#include ""just_gtfs/just_gtfs.h""\r\n```', 'comment_created': datetime.datetime(2022, 6, 27, 13, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 907982677, 'comment_body': 'you can revert this file by doing `git checkout origin/master -- src/mjolnir/valhalla_fetch_transit.cc`', 'comment_created': datetime.datetime(2022, 6, 28, 2, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}]","[{'commit_sha': '79dd43c749a287c8cf43e05054af30c0efcca72e', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23e0a40b1db4a627147c4a20a32d967067a5d9f0', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0987644a7fcf0545d8e00b30ed6c2e807b2eabf9', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '826922f88be5395128f29a65da4d45ef69d7e07e', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '817d60bdf69d6581b7e643737fe2c37065cbba81', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7213a82adb68a7b39975e4c57d04a70b0c6dbf8f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66ff8febc0fb957413d739ede75e93e14eb17eac', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cc79d2a5b63d5fd7590588416c6432a2822157d', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de8cafa8fe9408e151d0d8235cca9db872899bf8', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56dbc9361956323a228607c290bb9aa9033afcf6', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a25616a5433dd88cec6e39dbd0dc3de2f7210fa', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}]",Chris Park,62950266,,User,,13,,16,15
982243135,GTFS: Transcoding to GraphTiles,"# Issue

fixes #3629 where we want to format the GTFS data into valhalla's tiles system and create protobuf files to connect them to the graph. Instead of fetching data from a third-party API, the goal is to load them from local GTFS files. 

The first task is to convert the `which_tiles` function that sorts the data spatially by unique tiles. 
",True,3669,https://api.github.com/repos/valhalla/valhalla/pulls/3669,https://github.com/valhalla/valhalla/pull/3669,closed,2535,1501,19,35,7,55,0,1,[],2022-06-29 07:58:17+00:00,2022-08-05 12:48:35+00:00,3214218.0,"37 days, 4:50:18","[{'comment_id': 931063248, 'comment_body': 'move this to the anonymous namespace', 'comment_created': datetime.datetime(2022, 7, 27, 13, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 931065319, 'comment_body': 'remove this comment', 'comment_created': datetime.datetime(2022, 7, 27, 13, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 931070090, 'comment_body': 'if dist_traveled already exists in gtfs data  just return it directly ', 'comment_created': datetime.datetime(2022, 7, 27, 13, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 931075051, 'comment_body': 'upcast target size (decltype) @kevinkreiser ', 'comment_created': datetime.datetime(2022, 7, 27, 13, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 931086748, 'comment_body': 'write some tests about frequency / schedule information', 'comment_created': datetime.datetime(2022, 7, 27, 13, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 931087777, 'comment_body': 'test for missing days / calendar exceptions ', 'comment_created': datetime.datetime(2022, 7, 27, 13, 49, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 931089803, 'comment_body': 'call the function without mutex', 'comment_created': datetime.datetime(2022, 7, 27, 13, 51, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935077201, 'comment_body': 'this should be in the private section. i hope we arent actually including this from any of our headers', 'comment_created': datetime.datetime(2022, 8, 2, 3, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935077743, 'comment_body': 'or wait, its already in mjolnir below.. why did we need it here again? i know we needed previously in the tests by why at the library level?', 'comment_created': datetime.datetime(2022, 8, 2, 3, 19, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935078478, 'comment_body': 'it seems like this file should be unchanged right? can you revert it and leave it untouched. once we have raw gtfs working properly we can completely delete it but it should probably live for a while yet, untouched', 'comment_created': datetime.datetime(2022, 8, 2, 3, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935079013, 'comment_body': 'please try to avoid whitespace only changes', 'comment_created': datetime.datetime(2022, 8, 2, 3, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935079082, 'comment_body': 'javadoc please', 'comment_created': datetime.datetime(2022, 8, 2, 3, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935079456, 'comment_body': 'javadoc is wrong', 'comment_created': datetime.datetime(2022, 8, 2, 3, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935079608, 'comment_body': 'why is this a list? if it can be a  vector or an unordered_set that is better', 'comment_created': datetime.datetime(2022, 8, 2, 3, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935080107, 'comment_body': 'we should add javadoc on these', 'comment_created': datetime.datetime(2022, 8, 2, 3, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935080293, 'comment_body': 'since we dont pass these around, cant we just move these to the cc file?', 'comment_created': datetime.datetime(2022, 8, 2, 3, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935095615, 'comment_body': 'I will have to change one thing from the file: removing `transitpbf.h` and including `ingest_transit.h` to not get build errors because the first file was removed and its functions were moved to the second file. However, I will revert back all other changes.   ', 'comment_created': datetime.datetime(2022, 8, 2, 4, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935108816, 'comment_body': ""It's because in line 625 -> the list is spliced and copied into the promises list. "", 'comment_created': datetime.datetime(2022, 8, 2, 4, 43, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935149349, 'comment_body': 'moved to convert_transit!', 'comment_created': datetime.datetime(2022, 8, 2, 6, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935270664, 'comment_body': 'Removed from this CMakeList - must have been a redundant include 😅 ', 'comment_created': datetime.datetime(2022, 8, 2, 8, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935271000, 'comment_body': 'documentation added!', 'comment_created': datetime.datetime(2022, 8, 2, 8, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935271312, 'comment_body': 'completed!', 'comment_created': datetime.datetime(2022, 8, 2, 8, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935348389, 'comment_body': 'Ah OK yeah changing includes is fine just revert the other diffs', 'comment_created': datetime.datetime(2022, 8, 2, 9, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935634154, 'comment_body': 'Yup, reverted all other edits', 'comment_created': datetime.datetime(2022, 8, 2, 14, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935644042, 'comment_body': ""so a while ago we disabled logging in the debug build because by default it logs way too much. then when we moved the guts from valhalla_convert_transit into the library, ~the file we added it to was part of -werror~ for some reason unused variables are treated as errors even if its not part of `sources_with_warnings` but either way variables that are only used for logs become errors (since the logs are ifdef'd out from the compilers perspective). we could actually avoid making this change and use the preprocessor to conditionally make those variables over in the source file. @nilsnolde what do you think about that? should we try to keep logging at NONE? i kind of like logging at INFO in case its useful in the build "", 'comment_created': datetime.datetime(2022, 8, 2, 14, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935662041, 'comment_body': 'does the code coverage warning about not hitting line 233 mean that the id is always stopOneID and never stopTwoID?', 'comment_created': datetime.datetime(2022, 8, 2, 14, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935667532, 'comment_body': 'Yup, this is expected - stopTwoID should be stored in `transit.stop_paris(1)`. \r\nHowever, `transit.stop_pairs(0) = stopTwoID` on my device, which made me realize that depending on threading, it might store the data in a different order. \r\nBut on the same device, the order should be the same. ', 'comment_created': datetime.datetime(2022, 8, 2, 14, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 935671142, 'comment_body': 'yeah i think we dont technically have to splice them together we could just move ranges out of vectors into another vector but honestly it doesnt matter. just ignore this comment :smile: ', 'comment_created': datetime.datetime(2022, 8, 2, 14, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935680061, 'comment_body': 'oh jeez for some reason i didnt see the `(0)` i thought that the loop just checked both but i see you check 0 and 1 separately in the loop, sorry about that!', 'comment_created': datetime.datetime(2022, 8, 2, 14, 38, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935686958, 'comment_body': 'actually it should be reproducable, if we set concurrency to 1 in the config (which i think it is..) only one thread will ever be there to pick of stuff to do in order. we dont randomize anything else on purpose do we?', 'comment_created': datetime.datetime(2022, 8, 2, 14, 44, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 935728590, 'comment_body': 'No, that is all for checking for randomness', 'comment_created': datetime.datetime(2022, 8, 2, 15, 20, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 936415348, 'comment_body': ""> for some reason unused variables are treated as errors even if its not part of sources_with_warnings\r\n\r\nwas it using the ccache files then for years I guess?\r\n\r\n> avoid making this change and use the preprocessor\r\n\r\nyep, if the impact of INFO logging is so huge on debug builds then let's do that. hope it's not too many other long untouched files needing that, but we'll see:)\r\n\r\ncan you add that to the PR @chris-jpark ?"", 'comment_created': datetime.datetime(2022, 8, 3, 8, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936420910, 'comment_body': ""there's no way this doesn't return a valid stop? think I'd still protect for it, not too much experience with GTFS real data but I'm sure they can be very messed up."", 'comment_created': datetime.datetime(2022, 8, 3, 9, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936421605, 'comment_body': 'nit: usually this project uses c++ casts, e.g. `std::static_cast<int>()`', 'comment_created': datetime.datetime(2022, 8, 3, 9, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936423168, 'comment_body': 'nit: can we move this to the top of the file? I do like it better when I know structs are always declared at the top of the file', 'comment_created': datetime.datetime(2022, 8, 3, 9, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936423674, 'comment_body': ""same here: can't be an invalid id?"", 'comment_created': datetime.datetime(2022, 8, 3, 9, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936425263, 'comment_body': ""I won't leave this comment with all occurrences but there's a lot more. in case you thought about it while developing and decided it's fine, never mind:)"", 'comment_created': datetime.datetime(2022, 8, 3, 9, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936436741, 'comment_body': ""right now I'd have no idea how this exe works before I look into the source, on error we don't print any usage. can do it in a follow-up PR as well, but we should use `cxxopts` here as well.. have a look here for copy/paste (almost):\r\nhttps://github.com/valhalla/valhalla/blob/gtfs-fetch-transit/src/valhalla_export_edges.cc/#L143-L185\r\n"", 'comment_created': datetime.datetime(2022, 8, 3, 9, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 936574195, 'comment_body': ""In `select_transit_tiles` I loop through the stop data from the feed, so all the stops should exist, but just in case the feed doesn't include stop_id, I just won't process the stop if it doesn't have an id. "", 'comment_created': datetime.datetime(2022, 8, 3, 11, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 936582823, 'comment_body': '👍 ', 'comment_created': datetime.datetime(2022, 8, 3, 12, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 936583911, 'comment_body': ""I'll be doing the same as above -> if there exists no id for the object (whether it be route, trip, etc...), I will filter it out so all occurrences of search by id have a valid result. "", 'comment_created': datetime.datetime(2022, 8, 3, 12, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 936643491, 'comment_body': 'yeah we just copied this from fetch transit  which doesnt use nice args its standard old c style stuff', 'comment_created': datetime.datetime(2022, 8, 3, 13, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937710448, 'comment_body': 'i think the impact of INFO isnt huge. and i just looked and release is using TRACE which is crazy (but makes sure to test all code paths). unless you are totally opposed i would keep INFO', 'comment_created': datetime.datetime(2022, 8, 4, 12, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937793944, 'comment_body': 'if we did the other executable with cxxopts we should probably do this one too. thankfully there are only what 2 arguments to parse, the config and a test file. should be quick!', 'comment_created': datetime.datetime(2022, 8, 4, 13, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937799588, 'comment_body': 'nothing is changed here really this is just moved from the executable and the include paths updated. we might have changed the signature slightly to make it use the config only to do its work. the cool thing here is that now that its in the library we will be testing it and test coverage will inevitably go up. what i can reason about though is why it goes down in this pr. the executable was untested before so i assume it was also a coverage hit before.. ', 'comment_created': datetime.datetime(2022, 8, 4, 13, 43, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937804591, 'comment_body': 'yeah i do think its impossible for this to get screwed up. the feedObject is populated by looping over all the stops in the feed as chris is saying. this is just going back on a second pass and pu lling out the rest of the info for the stop (once we know all the stops that will be in a tile)', 'comment_created': datetime.datetime(2022, 8, 4, 13, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937805230, 'comment_body': 'used in convert_transit i believe', 'comment_created': datetime.datetime(2022, 8, 4, 13, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937807961, 'comment_body': ""this will be our next problem. how to connect the stop to the regular graph :smile:  \r\n\r\nthe transitland integration works by  having them call valhalla/locate to get near by edges in the regular graph and then storing the most interesting one's way id on the transitland side. then when valhalla ingests transitlands data it can say oh yeah you think it should go to this way id, let me find edges with that way id and i'll connect it to that.\r\n\r\ninstead we will have to do what @xlqian did with bike share station integration and connect it ourselves. i think his work over there was execllent so i'm expecting better results and possibly the ability to reuse that code"", 'comment_created': datetime.datetime(2022, 8, 4, 13, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937813118, 'comment_body': 'i this is a value add from transitland: https://www.transit.land/documentation/datastore/stops#generated-platforms-and-egresses\r\n\r\nbasically if there is a complex station you want to know the entry and exit points of it to connect it to the road network. some feeds dont have this information and indeed some stations/stops are trivial (bus stop along the road for example). in those cases one can generate an in/egress (if the downstream consumer, valhalla) expects there to always be in/egress information. what we can do is look in convert transit to see how we actually use it as i dont remember off the top of my head. not important for now tbh', 'comment_created': datetime.datetime(2022, 8, 4, 13, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937815820, 'comment_body': 'i forget if this one is referenced from another item  (like route for example) or if we got it by looping over trips. if we got it by looping over the thing directly we dont need to check if its not there now but if its derived from another thing (ie joined from another table) then yeah we s hould check it.  any place that you skip something you should definitely put a LOG_WARN about what feed and what thing and what id was getting skipped', 'comment_created': datetime.datetime(2022, 8, 4, 13, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 937818738, 'comment_body': 'also can you mark anything similar to this where we arent sure yet or havent implemented it with a `// TODO:` so its easier to search for in the code', 'comment_created': datetime.datetime(2022, 8, 4, 13, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 938623934, 'comment_body': ""it's good to have it not positional, more in line with most of valhalla's executables"", 'comment_created': datetime.datetime(2022, 8, 5, 9, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 938629272, 'comment_body': 'Is it possible to implement non-positional without flags, as the command line for `valhalla_convert_transit` is `valhalla_config [target_directory] [test_file]`. `valhalla_ingest_transit` looks already non positional? ', 'comment_created': datetime.datetime(2022, 8, 5, 9, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chris-jpark', 'type': 'User'}, {'comment_id': 938670044, 'comment_body': 'we can leave `valhalla_convert_transit` for the next PR IMO.\r\n\r\nwe can then take the opportunity to change that a bit and make it more consistent with the other exes (`config` as optional, even though required, and `test_file` as positional). to clarify, every argument that\'s not named is called ""positional"", so the previous behavior was 2 positional arguments. \r\n\r\n`implement non-positional without flags`, not sure what that means :sweat_smile: ', 'comment_created': datetime.datetime(2022, 8, 5, 10, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nilsnolde', 'type': 'User'}, {'comment_id': 938771466, 'comment_body': 'in the next part we can change to get target from config and the test file can be a flag rather than positional', 'comment_created': datetime.datetime(2022, 8, 5, 12, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}]","[{'commit_sha': '6070d3366aee6bfdd44fb49c5374952aef3eb718', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f6e7b84c414184718f680581c004c55e2968e93', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd22a390177b0210be93611065b5e1bd6c56ea73f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72b70c555a2aa667a3ed029bc0f96fd5209e6e6c', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cff80614ae17a9819972a1ccc51ad1da6b954e6', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '354ae9775d0892f20e68c69dd4c3f856dc570882', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087619fac0810acee904cee7d24af1a2652fbd3a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44837067e4202c58caccfd7969cc653d69f5e09a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a511d9031eb4f9c7e7acb5319f906fa64d66c52', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0203f14f6e0af7ce1d6ef2256a1cf7ed270292f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34e694bef19836511f4c5d8433d9cb00293fa09d', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55761973bffececaecdbc4d0805b9b25f6dd4cbe', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ac6a8e1e0ac390afc56d1667f627f3e011cecf', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b122d5ff3cb865f849f9e030e6f01df3f658559f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98f26d77b4f8d8504c7fd1ac036d253f184bd288', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7df0f05018efc0030859e11b44f8f3dcec72ca85', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f1606683170de62205b0b987df055126ae7146', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609955590f8cc6e7482f21fa311ba2cea5649971', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6bbf78caf6bc8724714d55decd78d7f7c22b07e', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7683d908e6177f18510db77c84b233ba7c12a545', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5e5c4bf6c71c69eeae0d846208216e994e55e09', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b023dab860ce86f02583d12a8a416f660b3cfb9', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '965ffb4d23453bc6e73b089a9123bd58b6e9c866', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44d965176c581bbdb12a1f8906f652e3b7dc9e42', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd4e036600bf59a7011dc82c937cec04a1d3b4bd', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a278acf1b4699814a8dd57f344308f2e0ac16388', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '985ee444fcfc290d3d588e065829c26dcf247900', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ef06b3311a11c9d008147875c4e8efe26151071', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7131eeee37376de2d7f1e1545a64c48e6c9cb88', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00c235a8d8844b6f1f4e4cc87febd129ff959ef3', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'add8e029ac8fe7988f18ce95b32468d8b555cca0', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd98ea2c5b11dbf2dea2d6a03852a8eb75dae8d01', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dd7e2d5a6541fcc6d728b33fe12ad7d7d309100', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2235b691f1a4fe99acefbd671c3c137cba04a7e0', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24a5be1af7a686a23dbbdc46bf146d0453f9352a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}]",Chris Park,62950266,,User,,13,,16,15
1020209743,GTFS Support: Convert PBFs to Transit Tiles,"the basic gist of this pr:

- is a ton of clean up from the first couple prs
  - there were tons of spots where the id's were being converted from strings to integers but this is not really how the data is supposed to look
  - convert_transit had lots of places where it was incorrectly modifying the graphid to be level 4 (thought it was doing 2 + 1 but 
  - we already had 3 for the level so it was getting 4, which messed everything up)
  - also fixed the date time ingestion for the schedule information
  - lots of little changes to things like names and helper functions through out the library. maybe some are overkill please leave a comment if anyone feels strongly and we can remove
- this also fixes #3630 in that we've implemented a way to find the connections to the graph via a naive loki-like search algorithm (doesnt look in adjacent files and isnt that fast but who cares for now)
- it also allows you to put a lat lon or a way id to influence the place where a station will connect to the road network, at present there is no way to get this from gtfs but we could side load the data (simple csv file?) in the conversion process of gtfs to pbf tiles

In the end the graph is connected between level 3 and level 2 but there are some things that this PR does not do. in fact transit routing still doesnt work but its getting close. here are our next steps in semi-priority order (which i posted down below but feel would be better off in the PR description):

1. fix stitching in ingest_transit. for whatever reason the stitcher cant find the missing destination/origin for 1 of the stop pairs in the test. the result is we get a couple of logs that say we are bailing on one of the stop pairs. this is because the pair connects across the tile boundary (which is a great thing to test)
2. make sure convert transit can actually add the edges between stations (actually between stations platforms) so that you can actually route on a kRail or kBus edge
3. the routing algorithm doesnt work, says it cant find a transit station near by (shouldnt be the case we know the connection does work currently so perhaps). im hoping fixing the first 2 will make this one go away but i expect there to be more routing issues
4. fix the routing algorithms likely bugs due to the code being unexorcised for years
5. _______IF WE MADE IT HERE WE COULD SAY WE ARE IN BETA WITH CAVEATS_______
6. hierarchy builder is not fully robust to the presence of transit data, so currently we cant build hierarchies if we want to have transit data as well. this in itself wouldnt stop us from supporting transit but its definitely required to be fixed before transit can be considered fully functional again.
7. unit test multi feed imports and fix if broken
8. _______IF WE MADE IT HERE WE HAVE SOMETHING WE COULD SAY IS OUT OF BETA_______
9. transit connect edges are not always formed on both sides of the street network edge, this happens because we  currently dont look in adjacent tiles to find  the end nodes. ive put a bunch of hints in the code about what to do to fix this (and also get better matches for edges to connect stations to)
10. clean up the code in convert transit where we hook up the 3 transit node types and connect them to each other. i wrote a big todo in there
11. another group of  tasks to tackle adding transit to the graph after the graph is fully built as mentioned over in: https://github.com/valhalla/valhalla/issues/3806#issuecomment-1339231858

I can turn the above into issues that we can burn down 1 by 1. ",True,3700,https://api.github.com/repos/valhalla/valhalla/pulls/3700,https://github.com/valhalla/valhalla/pull/3700,closed,1009,669,28,80,9,12,0,0,[],2022-08-08 12:09:55+00:00,2023-01-31 19:40:43+00:00,15233448.0,"176 days, 7:30:48","[{'comment_id': 984480684, 'comment_body': 'we need to fix stuff like this', 'comment_created': datetime.datetime(2022, 9, 30, 11, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984480896, 'comment_body': 'and this', 'comment_created': datetime.datetime(2022, 9, 30, 11, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984481265, 'comment_body': 'and this', 'comment_created': datetime.datetime(2022, 9, 30, 11, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984482828, 'comment_body': 'if we dont do this the station is then not connected to the graph. we should at least log a warning in that case because it means people will not be able to get in or out at that station', 'comment_created': datetime.datetime(2022, 9, 30, 11, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984487749, 'comment_body': 'ok so outside of this function we changed it to loop over transit tile ids now (ie level 3) so we no longer need this\r\n\r\n    ', 'comment_created': datetime.datetime(2022, 9, 30, 11, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984489767, 'comment_body': 'the most portable and less confusing thing to do here would be\r\n```suggestion\r\n    PointLL base_ll = TileHierarchy::GetTransitLevel().tiles.Base(tile_id.tileid());\r\n```', 'comment_created': datetime.datetime(2022, 9, 30, 11, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984490126, 'comment_body': 'is this debug?', 'comment_created': datetime.datetime(2022, 9, 30, 11, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984490326, 'comment_body': 'nit:\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 9, 30, 11, 23, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984490801, 'comment_body': 'move this down to the bottom', 'comment_created': datetime.datetime(2022, 9, 30, 11, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984497516, 'comment_body': 'we need to check things like this. the api actually returns a copy here, not a reference. i think the compiler smooths this over for us but the reader of this code would make assumptions that wouldnt be true in this case.', 'comment_created': datetime.datetime(2022, 9, 30, 11, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}, {'comment_id': 984498589, 'comment_body': 'i know this didnt really change but this looks wrong. its using the same value as the start time', 'comment_created': datetime.datetime(2022, 9, 30, 11, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kevinkreiser', 'type': 'User'}]","[{'commit_sha': '6070d3366aee6bfdd44fb49c5374952aef3eb718', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f6e7b84c414184718f680581c004c55e2968e93', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd22a390177b0210be93611065b5e1bd6c56ea73f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72b70c555a2aa667a3ed029bc0f96fd5209e6e6c', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cff80614ae17a9819972a1ccc51ad1da6b954e6', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '354ae9775d0892f20e68c69dd4c3f856dc570882', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087619fac0810acee904cee7d24af1a2652fbd3a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44837067e4202c58caccfd7969cc653d69f5e09a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a511d9031eb4f9c7e7acb5319f906fa64d66c52', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0203f14f6e0af7ce1d6ef2256a1cf7ed270292f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34e694bef19836511f4c5d8433d9cb00293fa09d', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55761973bffececaecdbc4d0805b9b25f6dd4cbe', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5ac6a8e1e0ac390afc56d1667f627f3e011cecf', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b122d5ff3cb865f849f9e030e6f01df3f658559f', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98f26d77b4f8d8504c7fd1ac036d253f184bd288', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7df0f05018efc0030859e11b44f8f3dcec72ca85', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f1606683170de62205b0b987df055126ae7146', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '609955590f8cc6e7482f21fa311ba2cea5649971', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6bbf78caf6bc8724714d55decd78d7f7c22b07e', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7683d908e6177f18510db77c84b233ba7c12a545', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa5049d4854affead5d993c171318231951e6f1d', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9196de016e21a277bf7c053a3ae1989576989fb', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ec88f2adda80fc43e17db9b428340f1928b1bb1', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12ec907283a6be8380394c3f76236bf2ad56bfe7', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34b56eb0aec1a3c51efdde257825a44b53739b4c', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4b6c75d1ae5628f2121b11e04d2138177da61fe', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3241098d92f3c68f27f40c1aaaa23c6c757753e5', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00052770df5586f88324025b8617e6eb85096dc6', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4798c65fea585a04a0580018e26336831e8f346', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94ded97ea9de748a64a06f888674fb639a8a21f2', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e0778c86de68872a1529a94dd00cebe34818825', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e9bef5ebf601bd6abad5195677d277a2bd8689', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c17d1e050259c8fb1a9b99ef46e22dd7cf97fb24', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad6f1091887e96dd777d805486614d090d3e3242', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eee31d605519500664b519d9f54a0e8da6db36a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbb0bd8d61cb2260a7308764b70e20def5cd7d92', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4406c6cbc2182fa1cfab82cb0ee9734e4c7b20ab', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7ed5d7d4c529d181ce93abfdba6461a8624744b', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efa269e9bb19ebfae954b36a2538b6aeae29e238', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96554649e182ec95d411795dc80af8811376eb7a', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f03b91a6b4eb7eed72ae6488dda6715fec9d2da8', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c223282708fa1e8056abdcf281a752210177f66', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '900ba0e615c479cc719487b396c3693623f4379c', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cfe394061f8d0d17caabd4714be1fcb8c965b10', 'committer_username': 'chris-jpark', 'committer_name': 'Chris Park', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 31, 15, 10, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fa5a552f6bf94a684feda92d25db5589efcc080', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5908c51d0859753b12b3006f109a5f98b64f6ef', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbeaf21f77bcbd28e52928b1e8efd69648e72684', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a6450a7899a01676151d0241f8a6587b372e6b', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cde18df98ba87eb6abbf008773478b111fc45c33', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8449f78b64cf262e413e5aab699208097c810690', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aec4b0c88d612f0f8e5d114225bed75960b7f2e6', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2b16c471c9b184645e652877052166ba9ddab5b', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acb15110bde636867b860aaa8edfd740e6ec7a49', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aa354380297d4276f76c4073cebfd6a8af8a6b5', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38ccc7fbe44b2215a75fbc0f0a791e5ef2b85fce', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9c28baf84eba9d93a107e3f6da434fe4feeb606', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b685bc51e0897417ad7cbc99f4d0d73542fdada', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bf41b05f68779b461a1ff2f29497875e27157e0', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b97448874e912377f0e848544ff506b1c1341a1', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b74e3df72c507f3928dd4c9269113741e79e20b', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dbd2935f70d9ff65251c2fbecaa99f2a9ff39e1', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b41c03f2de85eb068eeb2bf4e17f0cdab305d659', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f95a6b92f7bc73a816fe1a8499352a33d399e8d2', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4cd44a75311d2c1863229f24431efb8fbff8d96', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c60b4ef15437b2e4349ddf06d1faa930f19c4f', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3672b0f5ab169570905eaf34756fbea94841dbc8', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60746f6ecb642b3d87407174ced9e169173bb452', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2446431f990c8f6119d4a359cd6dfd58bffa0dd1', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa216b69089dc0d384b509400e7fb14ebd379588', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '347d4834a5f41b4d88e86c58581468de36ab65d2', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aaf84e5a02eb32504a1d3ba30b88c623ce077cac', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c8279c9bd7fb74728935a9068181b0ee732aed1', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b35f0f8e7559ca30b3083d8257b6483ba667a1', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffce4da20fbdd00ec5ca0a5364dda8aab42acf75', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82b81f53b0a87b995abc328350b1d5734e165f00', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d1b32bd71bf47c565f23b17a231c06e4521036d', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fd761272d341802252e9aed376a1fec3e20a0ee', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '084995402211c93213574f51c0d100dcc96c7e8e', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195df3b430bc6cc86f5b051b8238c0f55e592f30', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a247226aefc4d0860dc72ac204e755dc1d362d4a', 'committer_username': 'kevinkreiser', 'committer_name': 'Kevin Kreiser', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 29, 15, 43, 6, tzinfo=datetime.timezone.utc)}]",Chris Park,62950266,,User,,13,,16,15

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
49978193,valhalla,valhalla/valhalla,C++,671,4395,104,218,14036,740,50,59,"[{'id': 1020209743, 'number': 3700, 'closed': datetime.datetime(2023, 1, 31, 19, 40, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 12, 9, 55, tzinfo=datetime.timezone.utc), 'time_taken': 15233448.0, 'time_delta': '176 days, 7:30:48', 'additions': 1009, 'deletions': 669, 'state': 'closed'}, {'id': 982243135, 'number': 3669, 'closed': datetime.datetime(2022, 8, 5, 12, 48, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 29, 7, 58, 17, tzinfo=datetime.timezone.utc), 'time_taken': 3214218.0, 'time_delta': '37 days, 4:50:18', 'additions': 2535, 'deletions': 1501, 'state': 'closed'}, {'id': 973357703, 'number': 3665, 'closed': datetime.datetime(2022, 6, 28, 14, 18, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 21, 9, 58, 46, tzinfo=datetime.timezone.utc), 'time_taken': 620356.0, 'time_delta': '7 days, 4:19:16', 'additions': 155, 'deletions': 0, 'state': 'closed'}, {'id': 971479166, 'number': 3660, 'closed': datetime.datetime(2022, 6, 21, 12, 58, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 12, 47, 9, tzinfo=datetime.timezone.utc), 'time_taken': 173470.0, 'time_delta': '2 days, 0:11:10', 'additions': 341, 'deletions': 19, 'state': 'closed'}, {'id': 912591761, 'number': 3597, 'closed': datetime.datetime(2022, 10, 5, 8, 4, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 19, 4, 7, tzinfo=datetime.timezone.utc), 'time_taken': 14615833.0, 'time_delta': '169 days, 3:57:13', 'additions': 91, 'deletions': 18, 'state': 'closed'}]"
