pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
439335842,Add Inference data example with circular variables,"## Description
This PR adds a new inference data example. It contains circular variables, which will be useful for testing the new features developed in my GSoC 2020 project.

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [X] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [X] Code style  correct (follows pylint and black guidelines)
- [X] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)",True,1265,https://api.github.com/repos/arviz-devs/arviz/pulls/1265,https://github.com/arviz-devs/arviz/pull/1265,closed,15,0,2,3,2,1,0,0,[],2020-06-24 17:06:31+00:00,2020-06-27 12:22:52+00:00,242181.0,"2 days, 19:16:21","[{'comment_id': 445702262, 'comment_body': 'maybe use example or dataset instead of object', 'comment_created': datetime.datetime(2020, 6, 25, 16, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}]","[{'commit_sha': '88feaa07ccda20399a4db32804739500b8f4aadd', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6075a161bc6196520aff4b08e851584151cabf11', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78eb23629bf3339794205ee3b59c843d2e9c4e17', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}]",Agustina Arroyuelo,8028618,agustinaarroyuelo@gmail.com,User,,17,,7,17
440145629,Add circular histogram and KDE plot,"## Description

This PR adds circular histogram and circular KDE plot.
Histogram example (matplotlib):
![kde_radians_degrees](https://user-images.githubusercontent.com/8028618/85760184-fa399600-b6e7-11ea-8dc0-45daac054085.png)

Histogram example (bokeh):
![bokeh_circ_hist](https://user-images.githubusercontent.com/8028618/86257478-fa2a1200-bb8f-11ea-90b5-5ae37ea2f894.png)


Although with this code you can get a circular KDE, there are a couple of things to improve in the KDE that will result in better behavior in a circular setting. We are planning to follow on Tomas Capretto's work on KDE. You can read the details in his [report](https://tcapretto.netlify.app/files/report/).

## Checklist
- [X] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [X] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [X] New features are properly documented (with an example if appropriate)?
- [x] Includes new or updated tests to cover the new feature
- [X] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)
",True,1266,https://api.github.com/repos/arviz-devs/arviz/pulls/1266,https://github.com/arviz-devs/arviz/pull/1266,closed,241,20,11,26,7,41,0,0,[],2020-06-25 16:57:02+00:00,2020-07-14 17:34:08+00:00,1643826.0,"19 days, 0:37:06","[{'comment_id': 445808327, 'comment_body': 'It is safer to let the user state if the values are degrees or radians, than trying to guess it.', 'comment_created': datetime.datetime(2020, 6, 25, 20, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 445812535, 'comment_body': 'This requires the user to have LaTeX installed, right? Should we use unicode instead? ', 'comment_created': datetime.datetime(2020, 6, 25, 20, 15, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 445812980, 'comment_body': 'same as before', 'comment_created': datetime.datetime(2020, 6, 25, 20, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 446388004, 'comment_body': 'No, it seems Latex is not needed.', 'comment_created': datetime.datetime(2020, 6, 26, 20, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447203812, 'comment_body': 'you evaluate `is_circular == ""degrees""` in line 134', 'comment_created': datetime.datetime(2020, 6, 29, 19, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447204928, 'comment_body': 'this is repeated many times, maybe you can computed only once, like you already do with offset', 'comment_created': datetime.datetime(2020, 6, 29, 19, 33, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447205092, 'comment_body': 'same as previous comment', 'comment_created': datetime.datetime(2020, 6, 29, 19, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447983081, 'comment_body': 'this should be\r\nstart_angle=start_angle[:-1],\r\nend_angle=start_angle[1:],', 'comment_created': datetime.datetime(2020, 6, 30, 21, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447984659, 'comment_body': 'instead of renaming variables here you may want to \r\n\r\nouter_radius, start_angle = np.histogram(np.asarray(values).flatten(), density=density, bins=bins)\r\n\r\njust use the name ""edges"" and ""hist"" (I think this may help to make the code easier to read, as probably most people is more used to what ""edges"" and ""hist"" means. But I do not have a strong opinion here.', 'comment_created': datetime.datetime(2020, 6, 30, 21, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447986236, 'comment_body': 'This could be\r\n\r\n`ticks = np.linspace(-np.pi, np.pi, len(labels), endpoint=False)`', 'comment_created': datetime.datetime(2020, 6, 30, 21, 20, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447987059, 'comment_body': 'and this could just be `start_angle=ticks`', 'comment_created': datetime.datetime(2020, 6, 30, 21, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 447988133, 'comment_body': 'do we need the 0.002 or could we just use `end_angle=ticks`?', 'comment_created': datetime.datetime(2020, 6, 30, 21, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 448539778, 'comment_body': 'I think this should still be 1265', 'comment_created': datetime.datetime(2020, 7, 1, 18, 21, 14, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448540391, 'comment_body': '```suggestion\r\n* Added `is_circular` argument to `plot_dist` and `plot_kde` allowing for a circular histogram (Matplotlib, Bokeh) or 1D KDE plot (Matplotlib). (#1266)\r\n```', 'comment_created': datetime.datetime(2020, 7, 1, 18, 22, 21, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448541545, 'comment_body': 'I think this behaves like `hist_kwargs.setdefault(""line_alpha"", 0)`? Have not checked though', 'comment_created': datetime.datetime(2020, 7, 1, 18, 24, 39, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448543280, 'comment_body': ""completely personal preference, I'd use `False` instead. Using `None` makes me think there is some rcParam down the line to be used as default"", 'comment_created': datetime.datetime(2020, 7, 1, 18, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448544596, 'comment_body': 'Is using `gca` instead of a new axes intended or a forgotten TODO from when bokeh was introduced? cc @ahartikainen @canyon289 @aloctavodia ', 'comment_created': datetime.datetime(2020, 7, 1, 18, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448546499, 'comment_body': 'same None vs False comment as above', 'comment_created': datetime.datetime(2020, 7, 1, 18, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448547851, 'comment_body': 'Based on numpydoc style I\'d recommend:\r\n\r\n```\r\nis_circular : {None, ""radians"", ""degrees""}, optional\r\n```\r\n\r\nor \r\n\r\n```\r\nis_circular : {None, ""radians"", ""degrees""}, default None\r\n```\r\n\r\n(maybe changing None with False depending on what you prefer based on comment above)\r\n', 'comment_created': datetime.datetime(2020, 7, 1, 18, 37, 22, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448548820, 'comment_body': 'I think using `bins = hist_kwargs.pop(""bins"", None)` will allow deleting the `setdefault` (see comment below)', 'comment_created': datetime.datetime(2020, 7, 1, 18, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448548937, 'comment_body': 'I think this could be removed', 'comment_created': datetime.datetime(2020, 7, 1, 18, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 448550310, 'comment_body': 'Also, should `True` be added to the set of options too?', 'comment_created': datetime.datetime(2020, 7, 1, 18, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 449716281, 'comment_body': ""Sorry to bug again on this. Thanks a lot for updating the docstring according to this, really appreciated. The docstring is great already, I would only add radians to the set and make `False` the first element (given that they are not ordered). Below there is the reasoning behind this suggestion. \r\n\r\nI am also learning numpydoc conventions and recommendations and in addition, ArviZ documentation is currently a mixture of different styles and conventions so it's hard to find good models of numpydoc style. I am trying to get new/updated arguments to use best practices hoping that with time the whole library will end up updated. \r\n\r\nIn this particular case, the comment is about numpydoc _recommendations_ and not _conventions_ so we should go with whatever makes the docs easier to understand to our users. Here is the transcript from [numpydoc docstring guide](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard)\r\n\r\n> When a parameter can only assume one of a fixed set of values, those values can be listed in braces, with the default appearing first:\r\n>\r\n>     order : {'C', 'F', 'A'}\r\n>         Description of `order`.\r\n\r\nwhich says nothing about combining this with optional arguments, the [pandas docstring guide](https://pandas.pydata.org/pandas-docs/stable/development/contributing_docstring.html#section-3-parameters) is more detailed:\r\n\r\n> In case where there are just a set of values allowed, list them in curly brackets and separated by commas (followed by a space). If the values are ordinal and they have an order, list them in this order. Otherwise, list the default value first, if there is one\r\n\r\nThey also use either the `..., optional` or `..., default XXX` pattern together with the set notation, the two options I mentioned in the previous comment. \r\n\r\nI am also trying to see how to improve our documentation on writing docs #meta so any suggestions about improvements (or directly PRs) to the [contributing guide](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md) or the [developer guide](https://arviz-devs.github.io/arviz/developer_guide.html) (still in a very early draft stage) are very welcome.\r\n\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2020, 7, 3, 22, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 450191176, 'comment_body': 'I think this is intended', 'comment_created': datetime.datetime(2020, 7, 6, 12, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 450452630, 'comment_body': 'This will remove `""line_alpha""` and if not found, set it to 0?\r\n\r\nWould this work?\r\n\r\n```suggestion\r\n    hist_kwargs.setdefault(""line_alpha"", 0)\r\n```', 'comment_created': datetime.datetime(2020, 7, 6, 20, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 450453060, 'comment_body': 'We are always showing a full circle plot?', 'comment_created': datetime.datetime(2020, 7, 6, 20, 8, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 450455325, 'comment_body': 'Will `gca` grab possibly old axis here? Have we created a new figure somewhere?', 'comment_created': datetime.datetime(2020, 7, 6, 20, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 450479515, 'comment_body': ""I think that's what everybody does (I know this is not a very good argument, haha)"", 'comment_created': datetime.datetime(2020, 7, 6, 21, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 450796226, 'comment_body': 'if present, `plt.gca` will grab old axes yes', 'comment_created': datetime.datetime(2020, 7, 7, 11, 31, 33, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453086564, 'comment_body': 'I believe this is considered a ""best practice"" with matplotlib, and a pattern they endorse.', 'comment_created': datetime.datetime(2020, 7, 10, 21, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ColCarroll', 'type': 'User'}, {'comment_id': 453111072, 'comment_body': ""In polar plots, isn't the y axis the radial one? could this be setting the radial ticks with x values?"", 'comment_created': datetime.datetime(2020, 7, 10, 22, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453111245, 'comment_body': '```suggestion\r\n        ax.set_ylim(0, 1.5 * n.max())\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 22, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453112070, 'comment_body': '```suggestion\r\n    is_circular : {False, True, ""radians"", ""degrees""}. Default False.\r\n        Select input type {""radians"", ""degrees""} for circular histogram or KDE plot. If True,\r\n        default input type is ""radians"".\r\n```\r\n\r\ncopied the awesome docstring from plot_dist here too :)', 'comment_created': datetime.datetime(2020, 7, 10, 22, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453112684, 'comment_body': 'I think this will skip _all_ tests in the file if bokeh is not installed. Maybe we should create a `test_plot_utils_bokeh`? similarly to what is done with `test_stats` and `test_utils`?', 'comment_created': datetime.datetime(2020, 7, 10, 22, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453117926, 'comment_body': 'Òr maybe a regular skipif? something similar to https://github.com/arviz-devs/arviz/blob/master/arviz/tests/external_tests/test_data_pystan.py#L22', 'comment_created': datetime.datetime(2020, 7, 10, 23, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453118394, 'comment_body': 'Just thought that maybe matplotlib default axes are okey and the issue was due to setting the yticks with `bins`', 'comment_created': datetime.datetime(2020, 7, 10, 23, 21, 21, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453201068, 'comment_body': 'thanks for spotting this!', 'comment_created': datetime.datetime(2020, 7, 11, 14, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'agustinaarroyuelo', 'type': 'User'}, {'comment_id': 453201179, 'comment_body': 'I used skipif, but I am not sure about the import statement placement. Let me know what you think', 'comment_created': datetime.datetime(2020, 7, 11, 14, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'agustinaarroyuelo', 'type': 'User'}, {'comment_id': 453208087, 'comment_body': ""I think this should not be removed as it will modify the behaviour of the plot, if it has to be skipped for circular plots I'd suggest a `elif not is_circular`"", 'comment_created': datetime.datetime(2020, 7, 11, 15, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453208657, 'comment_body': '```suggestion\r\n@pytest.mark.skipif(\r\n    not (bokeh_installed | running_on_ci()), reason=""test requires bokeh which is not installed"",\r\n)\r\ndef test_set_bokeh_circular_ticks_labels():\r\n    """"""Assert the axes returned after placing ticks and tick labels for circular plots.""""""\r\n    import bokeh.plotting as bkp\r\n\r\n```\r\n\r\nI think this will work and will skip only this test instead of the whole file. I have also moved the docstring back to below the function definition', 'comment_created': datetime.datetime(2020, 7, 11, 16, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 453224477, 'comment_body': 'I was quite shocked by the low coverage given that there are tests for everything, I was expecting something close to 100% diff coverage. I think the issue (and same happens with bokeh) is that the variables in the model are continuous, so the kde is plotted. I am not sure if it would be better to add a new test of divide the fixture into two so all combinations are tested', 'comment_created': datetime.datetime(2020, 7, 11, 19, 2, 5, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}]","[{'commit_sha': '6dc14caff461185e1a3528bf8c09a34fac97373c', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f82a7650eaf2dfbd4c33771366c5f662f600326e', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dab16c132dc6208fefa0381f3bf93367510ec5bc', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f81116987ed3ae72cb77e9cb4a6f0459f56dfb66', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '599825c95922f3fd77cdea52d9bb96fc5aea6b65', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1be37cc11d362dd8b5be32d3a18e7176fc2d323', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f02d645bc781056deb2d085258ee10503f36e6b', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f5b77d357b4c828d7e9936ce78596447a460efd', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8859fae670b31b4c335efb6a219cf49fe79bd0', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8db4dd548520909f226a1801d32fe2c790db082', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41056ff753e3ed5deb3b89060d673d668e3cc9d', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '680f36f97055813d61701b9b11109304a019ed1e', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506048ecc64eb34ef8609f8665bbe23ec2434a34', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5793399bf4f118eb3a2cb6d28d990f542e600be1', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '602060761a34626960e5451dade48e690b0cb56d', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c7670ae36501531e84eab8be90ae8c98904c305', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c42a3a574c7c66801b6a10e1c7519a337d87b0d', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b0a0a40a6a73cbf2b14dcd7075a4dfbaed00fa1', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a995127e42873d6f48574f9d981ea2a59eb0d74', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf306474e8a2fd395ab3e12e795be99c2a7030b', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97cdaca9c86627767e429545cd77ada8fd15be78', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd0f5c5243678bd1b82418e237a90c707d9710f', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42aa26a57a60505dfa0dcf585e1e1dde745e6aa8', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd97e1e03cf815c9ac30191b21753b7b6c9c16dd8', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e50f188c596dc65a116d961a13a45286509e69', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '583079ceb0e3ee339fe5371dc73770b1ebad76f9', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}]",Agustina Arroyuelo,8028618,agustinaarroyuelo@gmail.com,User,,17,,7,17
455086729,Adapt summary function to circular variables ,"## Description

In this PR I changed the `az.summary` function to display statistics for circular variables more neatly. It is related to issue #339. 

`torsionals = az.load_arviz_data('glycan_torsion_angles')`
`az.summary(torsionals, circ_var_names=['tors'])` 

outputs:

![sc_summary](https://user-images.githubusercontent.com/8028618/88214754-0e15e080-cc31-11ea-88b6-8844155870b2.PNG)

## Checklist
- [X] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [X] New features are properly documented (with an example if appropriate)?
- [X] Includes new or updated tests to cover the new feature
- [X] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)",True,1313,https://api.github.com/repos/arviz-devs/arviz/pulls/1313,https://github.com/arviz-devs/arviz/pull/1313,closed,35,16,3,8,5,4,0,0,[],2020-07-22 12:27:39+00:00,2020-07-24 13:18:26+00:00,175847.0,"2 days, 0:50:47","[{'comment_id': 458800801, 'comment_body': 'I think we should keep `include_circ` for now and raise a deprecation warning when used to ease transition', 'comment_created': datetime.datetime(2020, 7, 22, 13, 42, 21, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 459030396, 'comment_body': 'Whats 5 here? Would add comment for the magic number', 'comment_created': datetime.datetime(2020, 7, 22, 19, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 459394737, 'comment_body': '```suggestion\r\n        warnings.warn(\r\n            ""include_circ is deprecated and will be ignored. Use circ_var_names instead"", \r\n            DeprecationWarning\r\n        )\r\n```\r\n\r\nLet\'s hope black likes it', 'comment_created': datetime.datetime(2020, 7, 23, 11, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 459399354, 'comment_body': 'Agree about the comment. \r\nThe 5 is related to the ""stats"" columns, the diagnostics are computed the same for linear and circular variables. Actually, we have to think if the diagnostics also need to be changed for circular variables (not part of this PR).', 'comment_created': datetime.datetime(2020, 7, 23, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}]","[{'commit_sha': '68695ba045b9e567e62d5cf566e88718ae1df1ce', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44555a85ba72d83a64094f12a83c9f38ec70b21a', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4961f3a344b5cbcf6332f110faf639880f8fc627', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9af3ed7d9c6fcb578974e6aaa4339c2dab3136e1', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20bc4a3ccc3c5f3d5268e6cee5fcf6e83be48148', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4cc12312ce0afde0a7c85fac40ce18468b3ea3', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfd196e4385b44487748e418816bb8e4cc1ce383', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8f7ebddc1a99e9aafc11b931e6280b7964c3b4b', 'committer_username': 'aloctavodia', 'committer_name': 'Osvaldo A Martin', 'committer_email': 'aloctavodia@gmail.com', 'commit_date': datetime.datetime(2012, 1, 17, 18, 46, tzinfo=datetime.timezone.utc)}]",Agustina Arroyuelo,8028618,agustinaarroyuelo@gmail.com,User,,17,,7,17
462730368,Circular traceplot for matplotlib,"## Description

In this PR I am adding argument `circ_var_names ` to `plot_trace` in order to obtain a plot like this:

![traceplot_circ](https://user-images.githubusercontent.com/8028618/90248056-4a8ec380-de0e-11ea-9bfa-f3577c9ce826.png)




## Checklist
- [X] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [X] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [x] New features are properly documented (with an example if appropriate)?
- [x] Includes new or updated tests to cover the new feature
- [X] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)",True,1336,https://api.github.com/repos/arviz-devs/arviz/pulls/1336,https://github.com/arviz-devs/arviz/pull/1336,closed,252,168,6,10,1,10,0,0,[],2020-08-04 12:19:40+00:00,2020-08-14 13:33:07+00:00,868407.0,"10 days, 1:13:27","[{'comment_id': 466565973, 'comment_body': 'This should be string, or list of strings. the same as `var_names`', 'comment_created': datetime.datetime(2020, 8, 6, 17, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 466569352, 'comment_body': 'maybe this should be ""circ_var_units"" and defaults to radians. \r\n\r\nAdditionally. I am ok with having degrees or radians for now. But we may want to contemplate other options like allowing negative values, like going from -180 to 180 instead of from 0 to 360 (and the same for radians).', 'comment_created': datetime.datetime(2020, 8, 6, 17, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 466571555, 'comment_body': ""We should not use `tight_layout` as is not compatible with `constrained_layout=True` that is the arviz's default."", 'comment_created': datetime.datetime(2020, 8, 6, 17, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 466579604, 'comment_body': 'This mean circular variables will not have divergences?', 'comment_created': datetime.datetime(2020, 8, 6, 17, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 466581162, 'comment_body': 'The idy variable is introduced because axes can have only one projection so we can not mix polar and regular axes, right? So we need to create and access them as separated objects, right?', 'comment_created': datetime.datetime(2020, 8, 6, 17, 43, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 466582166, 'comment_body': 'why it is better to check `axes.figure` instead of just `axes`?\r\n', 'comment_created': datetime.datetime(2020, 8, 6, 17, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 466660138, 'comment_body': 'why would that work? axes is numpy array?\r\n\r\nBut, true `ax.figure` kind of test that mpl axis is created.', 'comment_created': datetime.datetime(2020, 8, 6, 20, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 466661820, 'comment_body': 'Yes, that is right', 'comment_created': datetime.datetime(2020, 8, 6, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'agustinaarroyuelo', 'type': 'User'}, {'comment_id': 467081484, 'comment_body': 'Hi, axes is not an np.array anymore. It is a matplotlib AxesSubplot object. ', 'comment_created': datetime.datetime(2020, 8, 7, 14, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'agustinaarroyuelo', 'type': 'User'}, {'comment_id': 467087346, 'comment_body': 'oh yes, this is traceplot 👍 ', 'comment_created': datetime.datetime(2020, 8, 7, 14, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}]","[{'commit_sha': '87b5de2cba02fb32cb13a4f019767c5370c2d445', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5087322d75692f9b8bcb0881be429dfcc5a3cd8', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90fe490bf215c4a7a698b93869140c0aa3c95ad6', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '512c359a92e05507881db55534ebbede89311876', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc926724965ba3340a5f8baebb9659069b6ba25b', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff88322564fae95674ead601ab592ccd1c7abf8a', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40723641b405f09a498f07acfa0c17287c1e010d', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '244f1c8cc208e5e1bbd05d9786d0958071b7f850', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e30ef3e87a056ce90bfa72f28527c1655feef9d1', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0764788b2b22863216784a91bc51e0104d64798', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}]",Agustina Arroyuelo,8028618,agustinaarroyuelo@gmail.com,User,,17,,7,17
471783568,Fix traceplot xticks,"## Description

The changes in this PR will address issue #1360 mainly by returning an array containning the entire figure. 

## Checklist
- [X] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [X] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)",True,1361,https://api.github.com/repos/arviz-devs/arviz/pulls/1361,https://github.com/arviz-devs/arviz/pull/1361,closed,54,46,4,4,1,1,0,0,[],2020-08-21 18:31:17+00:00,2020-08-27 11:15:34+00:00,492257.0,"5 days, 16:44:17","[{'comment_id': 477303627, 'comment_body': 'We should have a more descriptive sentence, maybe something like  ""Allow  `plot_trace` to return and accept axes"". Or maybe we can skip it as this is a fix to a change made during the current development cycle and not yet released.', 'comment_created': datetime.datetime(2020, 8, 26, 13, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}]","[{'commit_sha': 'b06f62c0f30f2e01a374044e68fcd5a512c10bfb', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce8ff151cc18d1b9f115250b8387e1cfab257780', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf528c3dd112958cd3c9900dcd7fc93c9b40906f', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c47a7ff18e6628e3b7d3ede4aa35c6418b953a9a', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}]",Agustina Arroyuelo,8028618,agustinaarroyuelo@gmail.com,User,,17,,7,17
471668663,Separation plot,"## Description

The [separation plot](https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1540-5907.2011.00525.x) is a really interesting and simple way for assessing a model's fit when the outcome is binary. After fitting, model predictions are sorted and represented as vertical lines. When adding a color scheme that identifies the positive and negative class, for a good fit, we should see most of the instances of the positive class on the right hand side of the plot. That is, where the highest valued predictions are located.

``` python
idata = az.load_arviz_data('classification10d')
ax = az.plot_separation(
    idata=idata, 
    y='outcome',
    y_hat_line=True,
    expected_events=True,
    figsize=(10, 1),
)
```

![separationplot](https://user-images.githubusercontent.com/8028618/91451713-11b20e00-e854-11ea-9cbf-f298a9d7ee1f.png)

~It would be great if you could suggest how to choose default colors for this plot. Finally, I would like to know your overall comments on this code.~

## Checklist
- [X] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [X] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [x] New features are properly documented (with an example if appropriate)?
- [x] Includes new or updated tests to cover the new feature
- [x] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)",True,1359,https://api.github.com/repos/arviz-devs/arviz/pulls/1359,https://github.com/arviz-devs/arviz/pull/1359,closed,423,0,10,14,2,14,0,0,[],2020-08-21 14:29:47+00:00,2020-09-02 11:25:02+00:00,1025715.0,"11 days, 20:55:15","[{'comment_id': 474775271, 'comment_body': 'Not sure about using a cmap. What about using a single color for both classes and an alpha value for the negative one? The default could be color=[""C0"", ""C0""] and alphas=[1, 0.3]', 'comment_created': datetime.datetime(2020, 8, 21, 15, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 474775981, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2020, 8, 21, 15, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 474776654, 'comment_body': 'Ideally we should have at least one example\r\n', 'comment_created': datetime.datetime(2020, 8, 21, 15, 39, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 477309500, 'comment_body': 'Great, we also need one example for the gallery', 'comment_created': datetime.datetime(2020, 8, 26, 13, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 477315080, 'comment_body': 'Probably this is a better default ""2a2eec""', 'comment_created': datetime.datetime(2020, 8, 26, 13, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 478148453, 'comment_body': '\r\n```suggestion\r\n    """"""Bokeh separation plot.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 5, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478154360, 'comment_body': '```suggestion\r\n            y_hat = idata.posterior_predictive[y_hat].mean(dim=(""chain"", ""draw"")).values\r\n```\r\n\r\nI\'d take advantage of the labeled dimensions to make the code more explicit', 'comment_created': datetime.datetime(2020, 8, 27, 5, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478156813, 'comment_body': 'I think this can be done in the general function and then the backend specific ones only get the arrays (plus maybe labels too?)', 'comment_created': datetime.datetime(2020, 8, 27, 5, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478158988, 'comment_body': 'should we set `color=""C0""` here and then convert to hex before passing it to the backend specific function? This is more a philosophical question about whether we want this behaviour than anything else.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478161204, 'comment_body': 'why gca instead of using ax? not sure how is this different from `ax.legend()` :sweat_smile: ', 'comment_created': datetime.datetime(2020, 8, 27, 6, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478165240, 'comment_body': '```suggestion\r\n        Additional keywords passed to :meth:`mpl:matplotlib.axes.Axes.bar` or :meth:`bokeh:bokeh.plotting.Figure.vbar` for separation plot.\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 6, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478166143, 'comment_body': '```suggestion\r\n    plot_separation\r\n    plot_trace\r\n```', 'comment_created': datetime.datetime(2020, 8, 27, 6, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 478340974, 'comment_body': 'Yeah, I think we want this everywhere, not only here. ', 'comment_created': datetime.datetime(2020, 8, 27, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aloctavodia', 'type': 'User'}, {'comment_id': 480479774, 'comment_body': ""maybe this could also go in the general function as it's not backend specific"", 'comment_created': datetime.datetime(2020, 8, 31, 23, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}]","[{'commit_sha': 'b8b2576157aec255955c4960f160152cdb532217', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847095289d5ba1b45b2ad3914a772820b0f46b9a', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c47cb436a94a1b9e0684358096ff0a5ab6b27aa4', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63fb226a193f0ed05a6d1a79645657bf8b56ac87', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9825389f56a984e9b7267daa34e3a69c81e49c12', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4cc963a40ac55ad446b4aecdd2e3c32388bf3da', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b1158e27d7441638799926ebdcf1faa7a928f8', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d6ac2d827f9ba53d367d52dcea77566e8462afb', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d3194f27fcc8a5b6fea17832f60114eab3620c6', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e652af489eacab14df69406cb73864a3f83f795', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca5423416f7a06d917278abddf7df7ae1eb3d3d2', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5a3c330ab39a0c58f63f9a63b3519c1d118f6d3', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b4f80ff3ff79cf7504fa02cdd5f5dd6768b0b7d', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb91fa1c336597a2598f58e8f9bc8c9c617f8bda', 'committer_username': 'agustinaarroyuelo', 'committer_name': 'Agustina Arroyuelo', 'committer_email': 'agustinaarroyuelo@gmail.com', 'commit_date': datetime.datetime(2014, 6, 30, 16, 30, 5, tzinfo=datetime.timezone.utc)}]",Agustina Arroyuelo,8028618,agustinaarroyuelo@gmail.com,User,,17,,7,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
39890704,arviz,arviz-devs/arviz,Python,394,1574,47,161,1557,179,7,9,"[{'id': 1096195746, 'number': 2145, 'closed': datetime.datetime(2022, 10, 22, 15, 12, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 22, 14, 37, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2109.0, 'time_delta': '0:35:09', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1096178201, 'number': 2144, 'closed': datetime.datetime(2022, 10, 22, 17, 56, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 22, 14, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 13842.0, 'time_delta': '3:50:42', 'additions': 27, 'deletions': 5, 'state': 'closed'}, {'id': 1096160008, 'number': 2143, 'closed': datetime.datetime(2022, 10, 22, 14, 15, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 22, 13, 25, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3002.0, 'time_delta': '0:50:02', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 1026703404, 'number': 2095, 'closed': datetime.datetime(2022, 10, 6, 6, 56, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 17, 48, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4453654.0, 'time_delta': '51 days, 13:07:34', 'additions': 69, 'deletions': 0, 'state': 'closed'}, {'id': 1019399650, 'number': 2085, 'closed': datetime.datetime(2022, 8, 8, 21, 34, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 6, 19, 9, 34, tzinfo=datetime.timezone.utc), 'time_taken': 181510.0, 'time_delta': '2 days, 2:25:10', 'additions': 1, 'deletions': 19, 'state': 'closed'}, {'id': 997749135, 'number': 2069, 'closed': datetime.datetime(2022, 7, 15, 14, 4, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 13, 16, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2904.0, 'time_delta': '0:48:24', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 649952767, 'number': 1701, 'closed': datetime.datetime(2021, 5, 25, 19, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 13, 10, 39, tzinfo=datetime.timezone.utc), 'time_taken': 369501.0, 'time_delta': '4 days, 6:38:21', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 625201870, 'number': 1681, 'closed': datetime.datetime(2021, 5, 5, 21, 4, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 28, 12, 56, 35, tzinfo=datetime.timezone.utc), 'time_taken': 634096.0, 'time_delta': '7 days, 8:08:16', 'additions': 29, 'deletions': 35, 'state': 'closed'}, {'id': 585695224, 'number': 1601, 'closed': datetime.datetime(2021, 3, 26, 14, 27, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 5, 15, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1810490.0, 'time_delta': '20 days, 22:54:50', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 583186797, 'number': 1593, 'closed': datetime.datetime(2021, 3, 5, 14, 28, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 16, 56, 34, tzinfo=datetime.timezone.utc), 'time_taken': 250334.0, 'time_delta': '2 days, 21:32:14', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 583151785, 'number': 1592, 'closed': datetime.datetime(2021, 3, 5, 14, 29, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 16, 7, 51, tzinfo=datetime.timezone.utc), 'time_taken': 253301.0, 'time_delta': '2 days, 22:21:41', 'additions': 40, 'deletions': 23, 'state': 'closed'}, {'id': 559891222, 'number': 1517, 'closed': datetime.datetime(2021, 1, 23, 8, 22, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 22, 11, 10, 36, tzinfo=datetime.timezone.utc), 'time_taken': 76289.0, 'time_delta': '21:11:29', 'additions': 12, 'deletions': 2, 'state': 'closed'}, {'id': 506910319, 'number': 1428, 'closed': datetime.datetime(2020, 10, 23, 14, 35, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 20, 15, 37, 54, tzinfo=datetime.timezone.utc), 'time_taken': 255462.0, 'time_delta': '2 days, 22:57:42', 'additions': 33, 'deletions': 18, 'state': 'closed'}, {'id': 471783568, 'number': 1361, 'closed': datetime.datetime(2020, 8, 27, 11, 15, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 18, 31, 17, tzinfo=datetime.timezone.utc), 'time_taken': 492257.0, 'time_delta': '5 days, 16:44:17', 'additions': 54, 'deletions': 46, 'state': 'closed'}, {'id': 471668663, 'number': 1359, 'closed': datetime.datetime(2020, 9, 2, 11, 25, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 14, 29, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1025715.0, 'time_delta': '11 days, 20:55:15', 'additions': 423, 'deletions': 0, 'state': 'closed'}, {'id': 462730368, 'number': 1336, 'closed': datetime.datetime(2020, 8, 14, 13, 33, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 12, 19, 40, tzinfo=datetime.timezone.utc), 'time_taken': 868407.0, 'time_delta': '10 days, 1:13:27', 'additions': 252, 'deletions': 168, 'state': 'closed'}, {'id': 455086729, 'number': 1313, 'closed': datetime.datetime(2020, 7, 24, 13, 18, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 12, 27, 39, tzinfo=datetime.timezone.utc), 'time_taken': 175847.0, 'time_delta': '2 days, 0:50:47', 'additions': 35, 'deletions': 16, 'state': 'closed'}, {'id': 440145629, 'number': 1266, 'closed': datetime.datetime(2020, 7, 14, 17, 34, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 16, 57, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1643826.0, 'time_delta': '19 days, 0:37:06', 'additions': 241, 'deletions': 20, 'state': 'closed'}, {'id': 439335842, 'number': 1265, 'closed': datetime.datetime(2020, 6, 27, 12, 22, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 17, 6, 31, tzinfo=datetime.timezone.utc), 'time_taken': 242181.0, 'time_delta': '2 days, 19:16:21', 'additions': 15, 'deletions': 0, 'state': 'closed'}, {'id': 439318518, 'number': 1264, 'closed': datetime.datetime(2020, 6, 24, 16, 32, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 16, 31, 3, tzinfo=datetime.timezone.utc), 'time_taken': 58.0, 'time_delta': '0:00:58', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 415764904, 'number': 1179, 'closed': datetime.datetime(2020, 5, 11, 18, 53, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 18, 58, 33, tzinfo=datetime.timezone.utc), 'time_taken': 86080.0, 'time_delta': '23:54:40', 'additions': 68, 'deletions': 22, 'state': 'closed'}, {'id': 410137742, 'number': 1167, 'closed': datetime.datetime(2020, 5, 4, 22, 58, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 28, 13, 59, 3, tzinfo=datetime.timezone.utc), 'time_taken': 550789.0, 'time_delta': '6 days, 8:59:49', 'additions': 54, 'deletions': 54, 'state': 'closed'}, {'id': 399886884, 'number': 1140, 'closed': datetime.datetime(2020, 4, 13, 12, 30, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 6, 20, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 576239.0, 'time_delta': '6 days, 16:03:59', 'additions': 117, 'deletions': 4, 'state': 'closed'}, {'id': 384940824, 'number': 1110, 'closed': datetime.datetime(2020, 3, 19, 11, 6, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 6, 17, 34, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1099915.0, 'time_delta': '12 days, 17:31:55', 'additions': 84, 'deletions': 27, 'state': 'closed'}, {'id': 376778376, 'number': 1079, 'closed': datetime.datetime(2020, 3, 5, 10, 28, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 18, 18, 50, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1352301.0, 'time_delta': '15 days, 15:38:21', 'additions': 425, 'deletions': 221, 'state': 'closed'}, {'id': 371886435, 'number': 1049, 'closed': datetime.datetime(2020, 2, 6, 20, 30, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 6, 13, 0, 11, tzinfo=datetime.timezone.utc), 'time_taken': 27042.0, 'time_delta': '7:30:42', 'additions': 24, 'deletions': 16, 'state': 'closed'}, {'id': 256818128, 'number': 601, 'closed': datetime.datetime(2019, 3, 3, 22, 31, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 2, 27, 19, 55, 55, tzinfo=datetime.timezone.utc), 'time_taken': 354926.0, 'time_delta': '4 days, 2:35:26', 'additions': 108, 'deletions': 0, 'state': 'closed'}, {'id': 187528752, 'number': 77, 'closed': datetime.datetime(2018, 5, 15, 14, 12, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 11, 17, 51, 51, tzinfo=datetime.timezone.utc), 'time_taken': 332444.0, 'time_delta': '3 days, 20:20:44', 'additions': 87, 'deletions': 0, 'state': 'closed'}, {'id': 184691370, 'number': 63, 'closed': datetime.datetime(2018, 4, 27, 19, 29, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 27, 18, 13, 14, tzinfo=datetime.timezone.utc), 'time_taken': 4566.0, 'time_delta': '1:16:06', 'additions': 160, 'deletions': 33, 'state': 'closed'}]"
