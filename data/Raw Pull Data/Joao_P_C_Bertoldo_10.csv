pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1468154287,metrics[0]: add per-image overlap (pimo)  [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Previously in https://github.com/openvinotoolkit/anomalib/pull/1220

## Per-Image Overlap (PImO)

Adding the metric Per-Image Overlap (PImO) and its area under the curve (AUC).

At each given threshold:
- X-axis: in-image FPR average on normal images (equivalent to the set FPR of normal images).
- Y-axis: Overlap between the class 'anomalous' in the ground truth and the predicted masks (in-image TPR).

I choose the vocabulary 'overlap' insted of TPR because it echoes with the Per-Region Overlap (PRO).

---

## binclf curve

The per-image overlap (tpr) needs the binary classification matrix curve (binclf curve), which has to be computed _per image_ , while they must share the thresholds (Since the x-axis (FPR) is shared).

You'll find a weird-looking funciton using itertools to compute thos binclf curves, which i found to be much faster on CPU than the two alternatives in torchmetrics (the latter mentioned in the former's doc) --  image below shows some WIP comparisons; a proper version on the way.

![image](https://github.com/openvinotoolkit/anomalib/assets/24547377/36ac8c2f-1fac-4ae5-aa78-ea9b5ca99a83)

However, there is a `tensor.cpu().numpy()` in there, and I only tested with tensors _already_ in the **C**PU. 
Perhaps when using tensors in the **G**PU that operation might make the fastest algorithm change?

- Fixes # (issue)

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [X] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",True,1247,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1247,https://github.com/openvinotoolkit/anomalib/pull/1247,closed,2122,1,12,40,7,17,2,0,"[{'name': 'Tests'}, {'name': 'Notebooks'}]",2023-08-09 08:12:39+00:00,2023-08-23 13:54:07+00:00,1230088.0,"14 days, 5:41:28","[{'comment_id': 1301386484, 'comment_body': 'Can this be `per_img` instead?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301387822, 'comment_body': 'Is it possible to name `PerImageBinClfCurve` something more explicit. BinClf may not be obvious initially. Do you think if `PerImageBinaryClassificationCurve` would be too verbose?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301391049, 'comment_body': 'is `common.py` needed? Could these be in `__init__.py`. Or alternatively, can this be a `utils.py`?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301392596, 'comment_body': 'Can you add doctoring and other headers as well?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 54, 12, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301442396, 'comment_body': 'License header. You could do this later on as well, since this is going into the feature branch.', 'comment_created': datetime.datetime(2023, 8, 22, 10, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301444968, 'comment_body': 'do you have any specific motivation why use named tuple instead of data class. I was just curious :)  Just preference or any other motivation?', 'comment_created': datetime.datetime(2023, 8, 22, 10, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301448152, 'comment_body': 'matching snake_case convention\r\n```suggestion\r\ndef _validate_per_img_rate_curves(curves: Tensor, nan_allowed: bool = False):\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 10, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301448545, 'comment_body': 'should we have this or keep it as is? Not sure\r\n```suggestion\r\ndef _validate_at_least_one_anomalous_image(image_classes: Tensor):\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 10, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301449217, 'comment_body': 'same as above, not sure.\r\n```suggestion\r\ndef _validate_at_least_one_normal_image(image_classes: Tensor):\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 10, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301621977, 'comment_body': ""I used `PerImageBinaryClassificationCurve` at first but it feels very wordy and some lines will become tough to read.\r\n`binclf` is what I found in torchmetrics so i copied them.\r\n\r\n`per_img` i think it's ok; put it in the list of refactors.\r\n"", 'comment_created': datetime.datetime(2023, 8, 22, 13, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301629704, 'comment_body': '> is `common.py` needed? Could these be in `__init__.py`. Or alternatively, can this be a `utils.py`?\r\n\r\nIn `__init__.py` it would create circular imports (in future PRs). \r\n\r\n`common.py` -> `utils.py` is fine IMO, but it will later have more things inside that are not really ""utils"". I\'ll add this to the refactors.', 'comment_created': datetime.datetime(2023, 8, 22, 13, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301631343, 'comment_body': ""> Can you add doctoring and other headers as well?\r\n\r\nSure. I'll add the docstrings, but what other headers specifically (apart from license)?"", 'comment_created': datetime.datetime(2023, 8, 22, 13, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301646590, 'comment_body': ""Yes and more or less. \r\n\r\nIt's possible to just unpack the things, like\r\n\r\n```python\r\n_, __, shared_fpr, tprs, image_classes = self.compute()\r\n```\r\n\r\nAlso it's just a tuple, I think it makes user code less dependent on in-`anomalib` classes. I tend to use it for this type of case where I actually just want to return many things but there are so many that it's easier to document it as a namedtuple. I noticed `scipy` does something similar (?).\r\n\r\nOtherwise I'm a big fan of dataclass : ) "", 'comment_created': datetime.datetime(2023, 8, 22, 13, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301655709, 'comment_body': 'refactor branch', 'comment_created': datetime.datetime(2023, 8, 22, 13, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301656673, 'comment_body': 'refactor branch', 'comment_created': datetime.datetime(2023, 8, 22, 13, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301656994, 'comment_body': 'refactor branch', 'comment_created': datetime.datetime(2023, 8, 22, 13, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301880361, 'comment_body': ""> > Can you add doctoring and other headers as well?\r\n> \r\n> Sure. I'll add the docstrings, but what other headers specifically (apart from license)?\r\n\r\nI reviewed and incremented module docstrings in a future PR.\r\n\r\nhttps://github.com/jpcbertoldo/anomalib/pull/10/commits/621f58e22db21f156243fa88627fc611dfdc6069"", 'comment_created': datetime.datetime(2023, 8, 22, 16, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'a67b35f938f0af38b0812cf4fff57d058c36717a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6376942a52d78232a47ff57c9d658d78704cb717', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd999729b90919cba0a0ec74309cd9c578e4a3044', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df9849a0c89d6326aa9f34f3a392a883c627d6e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b1606181e3c59ebf1e6acf704ee82a758cc8802', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cacb6533289e52cd70bcfb80bc439d1a56cd889a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b0bcd8d2c8db263102266a98cab4392207f0ba', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1476a565ee40b8f5a9a4342049d6bd0ef39e6dc1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5557db143c52314c18030a9057079e9416e31a7d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70f9d3799e353d4b05e75fd1be4f729be864255a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b05eddb58bdccf066c0644acdf49144949c4631', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c7444e5552241df0fbda8e41cbc89874b5ec604', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b844261e6637ed7992d8fe7062d351e9022f931c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784767fc2f19a8f354f152aba7f4338cb628118c', 'committer_username': 'ashwinvaidya17', 'committer_name': 'Ashwin Vaidya', 'committer_email': 'ashwin.vaidya@intel.com', 'commit_date': datetime.datetime(2016, 2, 14, 11, 55, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a46d03042b4564a2931000d0fa509a86afb08ee', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffc3f6001479d7471cfed7da9005e34605014eb', 'committer_username': 'djdameln', 'committer_name': 'Dick Ameln', 'committer_email': 'dick.ameln@intel.com', 'commit_date': datetime.datetime(2017, 2, 27, 16, 49, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62cd92e33d8cb9cdb004c249edbb01af5a04739', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ad1d4b1e8f634b72f788314275d3aea33815dd', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b639d492d890816aefaf734db879cf3efb5a016', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543db2b2aeb75a486f9a8d8a508fe1866e7f561d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8537c772eca265fde410204cc64167bdf6b9198', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb153b1955a2de57b60a8a47c803c01aa854bd5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0761655aa8f257e03f68bd34e602b017d87e0c0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6a5a6bcc970047a48b2fb5dfc11d694630188b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974d3bbd5e7901e633ebc0d8c1215bd35991f212', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff18324ac449b698d5113834c2093f4b114c1bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '241fb2efd013fe99202ed3bda6c194d1b775194a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c588fe21517677eb288afc083e3cb88894cb8d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77355a7a47fe18feb60e6ee6f87c08bf8da9629a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b67cede5ba0747a794a699dfc5f6f7b9b20ab2b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311a1e57f22dc865648b1ef39f857a4f3c32d98f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1eb805ae7a228002131e29c554aecb36f32491', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6516491bd0661d72d3ea55384acc1f836ed02f59', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55f84c87a7b78662d1bef663e78694b95fe7dbb8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596ebadb992d9e24ff09caf609473adbe7a9a371', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0327861c57ea6cba0746af6933166592f4c294f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b439e1575b0e52bd8b812a292bf84062e02d437d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a91ef0e3e73fc59e55e393696e9c1fe1125dc7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a5b91e0bab97f403ebec9c9fc58fff0cd94880', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d995e0c787d7e478ffc30040d1bbd82dbc24c09', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1486515059,metrics[1]: auc boxplot [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

This branch will use boxplots of per-image metrics to make it easier to analyze representative cases of the distribution of  values (1 model, 1 dataset).
 
- add plots that show the distribution of aupimo using a boxplot
- `_perimg_boxplot_stats` (made public in a later PR) will return a list of ""cases"" corresponding to the statistics visible in a boxplot (quartiles, median, mean, whiskers, and outliers) and the image (referenced by its index) closest to that statistic
- these special cases are further used combined with the PImO curves; instead of showing all the (10s~100s) of curves, only the special cases are highlighted

Example of boxplot and PImO curves from its ""special cases"":

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/18ad1daa-73bd-4303-a6c7-9e3873945824)

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
1. seaborn instead of matplotlib boxplot graphs (?)
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",True,1294,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1294,https://github.com/openvinotoolkit/anomalib/pull/1294,closed,770,367,7,61,2,1,2,0,"[{'name': 'Tests'}, {'name': 'Notebooks'}]",2023-08-23 14:14:51+00:00,2023-09-12 12:03:25+00:00,1720114.0,"19 days, 21:48:34","[{'comment_id': 1322765032, 'comment_body': '```suggestion\r\n        """"""Plot shared FPR vs Per-Image Overlap (PImO) curves (boxplot images only).\r\n        \r\n        The \'boxplot images\' are those from the boxplot of AUPImO values (see `AUPImO.boxplot_stats()`).\r\n        Integration range is shown when `self.ubound < 1`.\r\n        """"""\r\n```', 'comment_created': datetime.datetime(2023, 9, 12, 9, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}]","[{'commit_sha': 'a67b35f938f0af38b0812cf4fff57d058c36717a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6376942a52d78232a47ff57c9d658d78704cb717', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd999729b90919cba0a0ec74309cd9c578e4a3044', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df9849a0c89d6326aa9f34f3a392a883c627d6e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b1606181e3c59ebf1e6acf704ee82a758cc8802', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cacb6533289e52cd70bcfb80bc439d1a56cd889a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b0bcd8d2c8db263102266a98cab4392207f0ba', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1476a565ee40b8f5a9a4342049d6bd0ef39e6dc1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5557db143c52314c18030a9057079e9416e31a7d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70f9d3799e353d4b05e75fd1be4f729be864255a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b05eddb58bdccf066c0644acdf49144949c4631', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c7444e5552241df0fbda8e41cbc89874b5ec604', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b844261e6637ed7992d8fe7062d351e9022f931c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784767fc2f19a8f354f152aba7f4338cb628118c', 'committer_username': 'ashwinvaidya17', 'committer_name': 'Ashwin Vaidya', 'committer_email': 'ashwin.vaidya@intel.com', 'commit_date': datetime.datetime(2016, 2, 14, 11, 55, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a46d03042b4564a2931000d0fa509a86afb08ee', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffc3f6001479d7471cfed7da9005e34605014eb', 'committer_username': 'djdameln', 'committer_name': 'Dick Ameln', 'committer_email': 'dick.ameln@intel.com', 'commit_date': datetime.datetime(2017, 2, 27, 16, 49, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62cd92e33d8cb9cdb004c249edbb01af5a04739', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ad1d4b1e8f634b72f788314275d3aea33815dd', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b639d492d890816aefaf734db879cf3efb5a016', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543db2b2aeb75a486f9a8d8a508fe1866e7f561d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8537c772eca265fde410204cc64167bdf6b9198', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb153b1955a2de57b60a8a47c803c01aa854bd5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0761655aa8f257e03f68bd34e602b017d87e0c0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6a5a6bcc970047a48b2fb5dfc11d694630188b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974d3bbd5e7901e633ebc0d8c1215bd35991f212', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff18324ac449b698d5113834c2093f4b114c1bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '241fb2efd013fe99202ed3bda6c194d1b775194a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c588fe21517677eb288afc083e3cb88894cb8d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77355a7a47fe18feb60e6ee6f87c08bf8da9629a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b67cede5ba0747a794a699dfc5f6f7b9b20ab2b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311a1e57f22dc865648b1ef39f857a4f3c32d98f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1eb805ae7a228002131e29c554aecb36f32491', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6516491bd0661d72d3ea55384acc1f836ed02f59', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfd667b0eca8a5eaa79a48c3b18bbb0bd6b57fe3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a1520488eb5914d908c21bd700b3152aa1c7c6d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00227f0445fb154aa3a2193ec0c1a29d3b42438', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55f84c87a7b78662d1bef663e78694b95fe7dbb8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64d2aaa284dd9f1aacecbb6bf903ef2a457257b7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596ebadb992d9e24ff09caf609473adbe7a9a371', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c7be96ee841145b21302585728b3e75483c241', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0327861c57ea6cba0746af6933166592f4c294f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7abc78e3bec29760ee8267105a8aba8361f1a8bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b439e1575b0e52bd8b812a292bf84062e02d437d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05796d5f6263f490165ad060469b831f05715a50', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4e83dde669bd95b4c58bb34135d091bec61b18', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453c81f902911474dfcdb4e6639f99520b3584b4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e6990230a5fbcf643fe7da8ea7c224dd865095', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ca941803c17040b43e040efdcf7cd4c956bc8e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f68d53e3a20375d2c1bbf7ecae534c98e89d8a5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fea30d3160f8a0df25190001f8153964ef9ee01', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13753ec0b4989236188388e364e060d930ab341', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9043a496b1d197d8042233fd9cb9183e8da59096', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a91ef0e3e73fc59e55e393696e9c1fe1125dc7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a5b91e0bab97f403ebec9c9fc58fff0cd94880', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d995e0c787d7e478ffc30040d1bbd82dbc24c09', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68f885aec964e7e2ae1e5de3688f1feaca0ea1d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b57f8c326d2740a45919c32e9299c2ef84ec484', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f06ff64759bb6f96bd37e1dfe5df9c701fb3bd1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c502c6e3be3816b64559fc2be731822fae098184', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbef64794be8216c5ec4556e359cb0cdae8fa48d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7f093b38629e4569bc2ab57bd07eacd80b4c601', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468197114,metrics[1]: auc boxplot [GSoC 2023 @ OpenVINO] [moved to official repo],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

This branch will use boxplots of per-image metrics to make it easier to analyze representative cases of the distribution of  values (1 model, 1 dataset).
 
- add plots that show the distribution of aupimo using a boxplot
- `_perimg_boxplot_stats` (made public in a later PR) will return a list of ""cases"" corresponding to the statistics visible in a boxplot (quartiles, median, mean, whiskers, and outliers) and the image (referenced by its index) closest to that statistic
- these special cases are further used combined with the PImO curves; instead of showing all the (10s~100s) of curves, only the special cases are highlighted

Example of boxplot and PImO curves from its ""special cases"":

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/18ad1daa-73bd-4303-a6c7-9e3873945824)

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,5,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/5,https://github.com/jpcbertoldo/anomalib/pull/5,closed,767,365,7,19,1,3,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-09 08:44:05+00:00,2023-08-23 16:15:08+00:00,1236663.0,"14 days, 7:31:03","[{'comment_id': 1288156585, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1288156942, 'comment_body': '```suggestion\r\n        # even if the data is on GPU, this CPU-based method is faster\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 8, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1288159849, 'comment_body': '```suggestion\r\n        )\r\n        thresholds = thresholds.to(image_classes.device)\r\n        masks = masks.to(image_classes.device)\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 8, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'cfd667b0eca8a5eaa79a48c3b18bbb0bd6b57fe3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a1520488eb5914d908c21bd700b3152aa1c7c6d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00227f0445fb154aa3a2193ec0c1a29d3b42438', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64d2aaa284dd9f1aacecbb6bf903ef2a457257b7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c7be96ee841145b21302585728b3e75483c241', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7abc78e3bec29760ee8267105a8aba8361f1a8bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05796d5f6263f490165ad060469b831f05715a50', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4e83dde669bd95b4c58bb34135d091bec61b18', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453c81f902911474dfcdb4e6639f99520b3584b4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e6990230a5fbcf643fe7da8ea7c224dd865095', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ca941803c17040b43e040efdcf7cd4c956bc8e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f68d53e3a20375d2c1bbf7ecae534c98e89d8a5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fea30d3160f8a0df25190001f8153964ef9ee01', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13753ec0b4989236188388e364e060d930ab341', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9043a496b1d197d8042233fd9cb9183e8da59096', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68f885aec964e7e2ae1e5de3688f1feaca0ea1d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '103c22c53de74f08b32985ce213c97e6ee670cb6', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b57f8c326d2740a45919c32e9299c2ef84ec484', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f06ff64759bb6f96bd37e1dfe5df9c701fb3bd1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468219346,metrics[2]: add max fpr restriction [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

## Shared FPR Upper Bound

Add the possibility to define an Upper Bound (UB) (i.e. maximum value) of shared FPR level [1], which corresponds to a Lower Bound (LB) of anomaly score threshold. Example: `AUPImO(ubound=0.03)`. Then the AUC is only computed in the restricted range and normalized by its size.

[1] Remider: at a given anomaly score threshold, that is the average per-image FPR measured on normal images only.

Also add a functionality to create a highlight on the PImO curves to show the integration range. 

Example of PImO curves from the boxplot statistics (previous PR) with the integration range:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/be5e94a8-1b94-4ddd-906f-7b1e8c47c074)

## FPR helper plots

This PR further adds several utility plots to show how the shared FPR (X-axis) is built and how there is, in fact, a spread of  per-image FPR values. In other words, `ubound=0.03` does not guarantee that all normal images have a maximum FPR of `0.03`. Examples below.

1) Per-image FPR (indexed by the shared FPR in the X-axis): normal vs anomalous images

Note that FPR is defined on both types of images, but only normal ones (blue below) are used to build the shared FPR.

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/83ed1a84-65c0-44de-93c2-a439da7448c9)

2) Per-image FPR statistics (normal images only)

Beyond the mean, it is also possible to use other statistics on the per-image FPR. The plot below shows some examples indexed (X-axis) by the mean FPR (note that the 'mean' curve is the identity function).

The plot below shows, for instance, that PImO's X-axis itself is ""imperfect"" because it has a spread (gray zone). 
In other words, there is some level of uncertainty depeding on how many normal images there are in the test set (and on the model behavior, of course).

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/10588a38-6020-4026-bc85-b74a1976f48f)

The `max` curve might be exploited in the future to define the shared FPR, making PImO more strict.

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,6,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/6,https://github.com/jpcbertoldo/anomalib/pull/6,closed,784,19,6,10,1,3,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-09 08:59:44+00:00,2023-09-12 14:46:58+00:00,2958434.0,"34 days, 5:47:14",[],"[{'commit_sha': '2d13529b563c590b1aede6c3bd383ae9b2990361', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b95c62b1fab004cd23cef74d762a9b63907238d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f455067c59fc8750d6bed7a562a29d6d852927be', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e9a2e80b52f992426fc5a56644c5356df2f6a3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93a0040b4118c2397569fd7f45eec183e67f9f9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb2bac10bdc71505bfd6b224851be6b8f90d2d1e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '258e9b34c9b6029efcc8a199176719cb758676ab', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e730d35c722e9ef0961f0dc769df69f0563e2850', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d35fa6ec0ccc916c6cf6f6391d190fc2e2a1ec', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b481aaf77ee801ba193d6628771e50842e687335', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468240053,metrics[3]: add aulogpimo [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Define the **Log** PImO curve, the equivalent of PImO with the shared FPR (X-axis) in log scale. This has the effect of diminishing the importance of the TPR measured at high-FPR thresholds and give more weight to low-FPR thresholds.

All previous features (boxplot, curve plots, and bounds) are replicated for AULogPImO.

Example of LogPImO curves from the boxplot statistics:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/869d0eab-e86e-4124-bb52-6352e720b5f1)

Since the X-axis is in log scale, the AUC cannot be computed with the lower bound at zero, so it is mandatory, while the upper bound remains optional (100% by default).

AUC equation:

$$
    \int_{L}^{U} \text{TPR}( \text{FPR} ) d\text{log(FPR)} 
    = \int_{L}^{U} \text{TPR}( \text{FPR}  ) \text{FPR}^{-1}  d\text{FPR}
$$

Using the log scale makes the maximum AUC != 1 even when the shared FPR upper bound is 100%, so the final metric is normalized. 

Normalization constant:

$$
    C_{\text{normaliz.}} 
    = \int_{L}^{U} 1 \cdot \text{FPR}^{-1} d\text{FPR}
    =  log(U) - log(L) = log(U/L)
$$

The same happens with the reference score of a random model (i.e. no difference between the distributions of normal and anomalous scores); give the lower and upper bounds $L$ and $U$, its score is $\frac{U - L}{log(U / L)}$.

Minor refactor: metric classes no longer have `**kwargs` because it silently receives wrong arguments and does nothing, while it is not being actually exploited to control `Metric`.

---

Known issue: the plot functions in `AULogPImO` were not entirely encapsulated in a function. This was **corrected in the next PR**.

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,7,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/7,https://github.com/jpcbertoldo/anomalib/pull/7,closed,1015,212,8,16,1,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-09 09:14:19+00:00,2023-12-19 17:17:59+00:00,11433820.0,"132 days, 8:03:40",[],"[{'commit_sha': '91fb70c9a18874f6386514883508911eba5d4f24', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ed7781360f2c7a4b2243d2388c15c35e4cec2c2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39ae8fc16b93193c83e5747807a97ad30d90dd11', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbaa4f176127a3ca548831b42937fa335e543521', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '792133554e8638ff5f0d39e5d1190d71d2507f93', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8411d913d73409d9d756378c48536911093b2160', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '259947118507e2cef0ff32bd89aa589323707307', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b9e09fd777dfaba6b1e345510f225dfc0f6601a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020264fc6532e4d18d8c2e07da8f2e8d0a90275f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5b493f489542081df5e7f8851d08f8fefaa54fc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbafa59d121642e7e4fbc492deec21434acc0aa0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38777a4b623fa87de76597c6938e8e383a226d55', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '656b414628b24f16349ead1ff47ea0e5c7d5230e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc84aa5c3c564613fc0a3038f288c821a7c5e4b3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baff328bfe9ca04a310312e8d61825c9df9dfe7b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08a0be35e795ccd80c86f9733c2232fc4575298b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1480259401,metrics[4] save results [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

## Save & Load

Make it possible to save and load pimo curves and their aucs (`AUPImO` and `AULogPImO`).

`PImO` (parent class of the ""AU""s) will save all the returns (fprs, tprs, shared fpr, etc) in a dict of tensors in a `.pt` so the curves are fully recoverable. 

`AUPImO` and `AULogPImO` values (1 per image) are saved in a JSON file so it can be human readable, and they optionally save the curves with an automatic file name based on the JSON file's name.

## Minor refactor

From the previous PR:

> Known issue: the plot functions in AULogPImO were not entirely encapsulated in a function. This was corrected in the next PR.

Adress this and move the logic of the plots from `AULogPImO` to a functional interface (classes practically just pass the arguments).

--- 

# TODO

- [ ] prevent from saving when the metric is empty
- [ ] test above

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,9,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/9,https://github.com/jpcbertoldo/anomalib/pull/9,closed,1054,128,8,5,2,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-18 09:18:25+00:00,2023-09-05 17:30:38+00:00,1584733.0,"18 days, 8:12:13",[],"[{'commit_sha': 'baff328bfe9ca04a310312e8d61825c9df9dfe7b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95231cd9f25006cbd9cdd44876e783dbf644d2f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af90b253207266cc56e714bbb04ecf5ac8322daa', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101962e640acc4255cef0b66c1c094b579fbea3a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5cf4ffa1161eb8150b7e1a5e4edd7784f7de8c3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1483032278,metrics[5]: compare models [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Add utilities to compare two or more models on the same dataset with a per-image metric.

Two types of comparison are proposed: parametric (the metric values) and non-parametric (ranks, i.e. sorting of models).  For each method, there is a statistical test (respec., paired t-test and wilcoxon signed rank test) and a plot that visually explains the test.

Plots can eventually show multiple (>2) methods, but the statistical tests are performed pairwise. 
Results are read in a table with rows and columns are model names (`model1` and `model2`) sorted by their average score or rank. 

Statistical tests:
- Null hypothesis: methods are not significantly different.
- Alternative hypothesis: `method1` (row) > `method2` (column).
- Cell values are the ""confidence to reject the null hypothesis"" (`1 - pvalue`).

Example of **parametric** comparison (`AULogPImO`):

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/92bfc08b-91f7-4e74-9b1d-e2bd4dc9912d)

Example of **non-parametric** comparison from the parametric above:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/f32bc526-ee60-4510-bd1f-176e23080bb9)


---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,10,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/10,https://github.com/jpcbertoldo/anomalib/pull/10,closed,1024,34,7,12,1,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-21 14:47:50+00:00,2023-09-05 17:30:29+00:00,1305759.0,"15 days, 2:42:39",[],"[{'commit_sha': '6df11f663543e7034144957acf35eaef2d3cc011', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19401a14a6f3b1496591cab2144c5b61df1bbc02', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baf2586cba65955fd6aff81b3e8ea62af5665259', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c897f899e8e857571b32549a45736d2ed3b65961', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f440c993d9d1f844aa35ebfe6b5bfce093ad2c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab33bccdfbb4d36e6756ce92663f125865883d3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a76e6cd9d27c10909e6d4d71761b0573c4b9ef', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb0f42123da72186edc58e688d02a46951972da2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d0085be95b0ae683d11f9192fac23e968605b9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621f58e22db21f156243fa88627fc611dfdc6069', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '837fa7a43bfa5ae45a0014cb204949cd1aa5c9e2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee2cf55bbad9d0c13197c103259e2315f58ed1e7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1489604368,metrics[6]: heatmap visualization with bounds [GSoC 2023 @ OpenVINO] ,"## Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

## Changes

This will make it possible to have heat maps with normalization bounds given as an argument, which will used combined with the bounds from `AUPImO`.

It also modifies `superimpose_anomaly_map` to make the anomaly score map transparent wherever the scores are bellow the threshold lower bound (since they'd **never** be classified as `1`).

Example (white means ""above upper bound"", meaning it is **always** classified as `1`): 

![image](https://github.com/openvinotoolkit/anomalib/assets/24547377/c69a8a5a-4d67-45f2-ab03-668d45c31339)


<details>

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Documentation update

</details>

## Checklist

<details>

- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas (If applicable)
- [X] I have made corresponding changes to the documentation (If applicable)
- [X] I have added tests that prove my fix is effective or that my feature works (If applicable)

</details>
",False,11,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/11,https://github.com/jpcbertoldo/anomalib/pull/11,closed,833,619,7,9,1,1,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-25 11:49:43+00:00,2023-09-05 17:50:32+00:00,972049.0,"11 days, 6:00:49","[{'comment_id': 1305577469, 'comment_body': 'should these validations rather be somewhere else?', 'comment_created': datetime.datetime(2023, 8, 25, 12, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'c444bbe93d707d0415f226aa807dbc36c2d1d8e8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9617076bcfa7dbffae9939bc22aa77075dd17f7a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f018d7ccd8224ccd488f7341111fcbdbcbb19994', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b2c96e8942d40f674eef3c24d6db80778c38de0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f120e7a5cab6938b9aef9e5c0037976418e50019', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31d869f8cb66e34f34d1d4218193683bd96b53bf', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '104d53bea19737a645c7521eac6bd663543dd4de', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33eef64f42d28176c7996f482e05a8fc55447b15', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e1cd360d374f29e75c7cb30e685c282fe3c11f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468154287,metrics[0]: add per-image overlap (pimo)  [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Previously in https://github.com/openvinotoolkit/anomalib/pull/1220

## Per-Image Overlap (PImO)

Adding the metric Per-Image Overlap (PImO) and its area under the curve (AUC).

At each given threshold:
- X-axis: in-image FPR average on normal images (equivalent to the set FPR of normal images).
- Y-axis: Overlap between the class 'anomalous' in the ground truth and the predicted masks (in-image TPR).

I choose the vocabulary 'overlap' insted of TPR because it echoes with the Per-Region Overlap (PRO).

---

## binclf curve

The per-image overlap (tpr) needs the binary classification matrix curve (binclf curve), which has to be computed _per image_ , while they must share the thresholds (Since the x-axis (FPR) is shared).

You'll find a weird-looking funciton using itertools to compute thos binclf curves, which i found to be much faster on CPU than the two alternatives in torchmetrics (the latter mentioned in the former's doc) --  image below shows some WIP comparisons; a proper version on the way.

![image](https://github.com/openvinotoolkit/anomalib/assets/24547377/36ac8c2f-1fac-4ae5-aa78-ea9b5ca99a83)

However, there is a `tensor.cpu().numpy()` in there, and I only tested with tensors _already_ in the **C**PU. 
Perhaps when using tensors in the **G**PU that operation might make the fastest algorithm change?

- Fixes # (issue)

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [X] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",True,1247,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1247,https://github.com/openvinotoolkit/anomalib/pull/1247,closed,2122,1,12,40,7,17,2,0,"[{'name': 'Tests'}, {'name': 'Notebooks'}]",2023-08-09 08:12:39+00:00,2023-08-23 13:54:07+00:00,1230088.0,"14 days, 5:41:28","[{'comment_id': 1301386484, 'comment_body': 'Can this be `per_img` instead?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301387822, 'comment_body': 'Is it possible to name `PerImageBinClfCurve` something more explicit. BinClf may not be obvious initially. Do you think if `PerImageBinaryClassificationCurve` would be too verbose?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301391049, 'comment_body': 'is `common.py` needed? Could these be in `__init__.py`. Or alternatively, can this be a `utils.py`?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301392596, 'comment_body': 'Can you add doctoring and other headers as well?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 54, 12, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301442396, 'comment_body': 'License header. You could do this later on as well, since this is going into the feature branch.', 'comment_created': datetime.datetime(2023, 8, 22, 10, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301444968, 'comment_body': 'do you have any specific motivation why use named tuple instead of data class. I was just curious :)  Just preference or any other motivation?', 'comment_created': datetime.datetime(2023, 8, 22, 10, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301448152, 'comment_body': 'matching snake_case convention\r\n```suggestion\r\ndef _validate_per_img_rate_curves(curves: Tensor, nan_allowed: bool = False):\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 10, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301448545, 'comment_body': 'should we have this or keep it as is? Not sure\r\n```suggestion\r\ndef _validate_at_least_one_anomalous_image(image_classes: Tensor):\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 10, 38, 35, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301449217, 'comment_body': 'same as above, not sure.\r\n```suggestion\r\ndef _validate_at_least_one_normal_image(image_classes: Tensor):\r\n```', 'comment_created': datetime.datetime(2023, 8, 22, 10, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1301621977, 'comment_body': ""I used `PerImageBinaryClassificationCurve` at first but it feels very wordy and some lines will become tough to read.\r\n`binclf` is what I found in torchmetrics so i copied them.\r\n\r\n`per_img` i think it's ok; put it in the list of refactors.\r\n"", 'comment_created': datetime.datetime(2023, 8, 22, 13, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301629704, 'comment_body': '> is `common.py` needed? Could these be in `__init__.py`. Or alternatively, can this be a `utils.py`?\r\n\r\nIn `__init__.py` it would create circular imports (in future PRs). \r\n\r\n`common.py` -> `utils.py` is fine IMO, but it will later have more things inside that are not really ""utils"". I\'ll add this to the refactors.', 'comment_created': datetime.datetime(2023, 8, 22, 13, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301631343, 'comment_body': ""> Can you add doctoring and other headers as well?\r\n\r\nSure. I'll add the docstrings, but what other headers specifically (apart from license)?"", 'comment_created': datetime.datetime(2023, 8, 22, 13, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301646590, 'comment_body': ""Yes and more or less. \r\n\r\nIt's possible to just unpack the things, like\r\n\r\n```python\r\n_, __, shared_fpr, tprs, image_classes = self.compute()\r\n```\r\n\r\nAlso it's just a tuple, I think it makes user code less dependent on in-`anomalib` classes. I tend to use it for this type of case where I actually just want to return many things but there are so many that it's easier to document it as a namedtuple. I noticed `scipy` does something similar (?).\r\n\r\nOtherwise I'm a big fan of dataclass : ) "", 'comment_created': datetime.datetime(2023, 8, 22, 13, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301655709, 'comment_body': 'refactor branch', 'comment_created': datetime.datetime(2023, 8, 22, 13, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301656673, 'comment_body': 'refactor branch', 'comment_created': datetime.datetime(2023, 8, 22, 13, 32, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301656994, 'comment_body': 'refactor branch', 'comment_created': datetime.datetime(2023, 8, 22, 13, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1301880361, 'comment_body': ""> > Can you add doctoring and other headers as well?\r\n> \r\n> Sure. I'll add the docstrings, but what other headers specifically (apart from license)?\r\n\r\nI reviewed and incremented module docstrings in a future PR.\r\n\r\nhttps://github.com/jpcbertoldo/anomalib/pull/10/commits/621f58e22db21f156243fa88627fc611dfdc6069"", 'comment_created': datetime.datetime(2023, 8, 22, 16, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'a67b35f938f0af38b0812cf4fff57d058c36717a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6376942a52d78232a47ff57c9d658d78704cb717', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd999729b90919cba0a0ec74309cd9c578e4a3044', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df9849a0c89d6326aa9f34f3a392a883c627d6e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b1606181e3c59ebf1e6acf704ee82a758cc8802', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cacb6533289e52cd70bcfb80bc439d1a56cd889a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b0bcd8d2c8db263102266a98cab4392207f0ba', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1476a565ee40b8f5a9a4342049d6bd0ef39e6dc1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5557db143c52314c18030a9057079e9416e31a7d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70f9d3799e353d4b05e75fd1be4f729be864255a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b05eddb58bdccf066c0644acdf49144949c4631', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c7444e5552241df0fbda8e41cbc89874b5ec604', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b844261e6637ed7992d8fe7062d351e9022f931c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784767fc2f19a8f354f152aba7f4338cb628118c', 'committer_username': 'ashwinvaidya17', 'committer_name': 'Ashwin Vaidya', 'committer_email': 'ashwin.vaidya@intel.com', 'commit_date': datetime.datetime(2016, 2, 14, 11, 55, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a46d03042b4564a2931000d0fa509a86afb08ee', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffc3f6001479d7471cfed7da9005e34605014eb', 'committer_username': 'djdameln', 'committer_name': 'Dick Ameln', 'committer_email': 'dick.ameln@intel.com', 'commit_date': datetime.datetime(2017, 2, 27, 16, 49, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62cd92e33d8cb9cdb004c249edbb01af5a04739', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ad1d4b1e8f634b72f788314275d3aea33815dd', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b639d492d890816aefaf734db879cf3efb5a016', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543db2b2aeb75a486f9a8d8a508fe1866e7f561d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8537c772eca265fde410204cc64167bdf6b9198', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb153b1955a2de57b60a8a47c803c01aa854bd5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0761655aa8f257e03f68bd34e602b017d87e0c0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6a5a6bcc970047a48b2fb5dfc11d694630188b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974d3bbd5e7901e633ebc0d8c1215bd35991f212', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff18324ac449b698d5113834c2093f4b114c1bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '241fb2efd013fe99202ed3bda6c194d1b775194a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c588fe21517677eb288afc083e3cb88894cb8d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77355a7a47fe18feb60e6ee6f87c08bf8da9629a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b67cede5ba0747a794a699dfc5f6f7b9b20ab2b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311a1e57f22dc865648b1ef39f857a4f3c32d98f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1eb805ae7a228002131e29c554aecb36f32491', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6516491bd0661d72d3ea55384acc1f836ed02f59', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55f84c87a7b78662d1bef663e78694b95fe7dbb8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596ebadb992d9e24ff09caf609473adbe7a9a371', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0327861c57ea6cba0746af6933166592f4c294f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b439e1575b0e52bd8b812a292bf84062e02d437d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a91ef0e3e73fc59e55e393696e9c1fe1125dc7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a5b91e0bab97f403ebec9c9fc58fff0cd94880', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d995e0c787d7e478ffc30040d1bbd82dbc24c09', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1486515059,metrics[1]: auc boxplot [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

This branch will use boxplots of per-image metrics to make it easier to analyze representative cases of the distribution of  values (1 model, 1 dataset).
 
- add plots that show the distribution of aupimo using a boxplot
- `_perimg_boxplot_stats` (made public in a later PR) will return a list of ""cases"" corresponding to the statistics visible in a boxplot (quartiles, median, mean, whiskers, and outliers) and the image (referenced by its index) closest to that statistic
- these special cases are further used combined with the PImO curves; instead of showing all the (10s~100s) of curves, only the special cases are highlighted

Example of boxplot and PImO curves from its ""special cases"":

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/18ad1daa-73bd-4303-a6c7-9e3873945824)

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
1. seaborn instead of matplotlib boxplot graphs (?)
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",True,1294,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1294,https://github.com/openvinotoolkit/anomalib/pull/1294,closed,770,367,7,61,2,1,2,0,"[{'name': 'Tests'}, {'name': 'Notebooks'}]",2023-08-23 14:14:51+00:00,2023-09-12 12:03:25+00:00,1720114.0,"19 days, 21:48:34","[{'comment_id': 1322765032, 'comment_body': '```suggestion\r\n        """"""Plot shared FPR vs Per-Image Overlap (PImO) curves (boxplot images only).\r\n        \r\n        The \'boxplot images\' are those from the boxplot of AUPImO values (see `AUPImO.boxplot_stats()`).\r\n        Integration range is shown when `self.ubound < 1`.\r\n        """"""\r\n```', 'comment_created': datetime.datetime(2023, 9, 12, 9, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}]","[{'commit_sha': 'a67b35f938f0af38b0812cf4fff57d058c36717a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6376942a52d78232a47ff57c9d658d78704cb717', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd999729b90919cba0a0ec74309cd9c578e4a3044', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df9849a0c89d6326aa9f34f3a392a883c627d6e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b1606181e3c59ebf1e6acf704ee82a758cc8802', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cacb6533289e52cd70bcfb80bc439d1a56cd889a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b0bcd8d2c8db263102266a98cab4392207f0ba', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1476a565ee40b8f5a9a4342049d6bd0ef39e6dc1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5557db143c52314c18030a9057079e9416e31a7d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70f9d3799e353d4b05e75fd1be4f729be864255a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b05eddb58bdccf066c0644acdf49144949c4631', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c7444e5552241df0fbda8e41cbc89874b5ec604', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b844261e6637ed7992d8fe7062d351e9022f931c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784767fc2f19a8f354f152aba7f4338cb628118c', 'committer_username': 'ashwinvaidya17', 'committer_name': 'Ashwin Vaidya', 'committer_email': 'ashwin.vaidya@intel.com', 'commit_date': datetime.datetime(2016, 2, 14, 11, 55, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a46d03042b4564a2931000d0fa509a86afb08ee', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffc3f6001479d7471cfed7da9005e34605014eb', 'committer_username': 'djdameln', 'committer_name': 'Dick Ameln', 'committer_email': 'dick.ameln@intel.com', 'commit_date': datetime.datetime(2017, 2, 27, 16, 49, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62cd92e33d8cb9cdb004c249edbb01af5a04739', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ad1d4b1e8f634b72f788314275d3aea33815dd', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b639d492d890816aefaf734db879cf3efb5a016', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543db2b2aeb75a486f9a8d8a508fe1866e7f561d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8537c772eca265fde410204cc64167bdf6b9198', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb153b1955a2de57b60a8a47c803c01aa854bd5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0761655aa8f257e03f68bd34e602b017d87e0c0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6a5a6bcc970047a48b2fb5dfc11d694630188b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974d3bbd5e7901e633ebc0d8c1215bd35991f212', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff18324ac449b698d5113834c2093f4b114c1bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '241fb2efd013fe99202ed3bda6c194d1b775194a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c588fe21517677eb288afc083e3cb88894cb8d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77355a7a47fe18feb60e6ee6f87c08bf8da9629a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b67cede5ba0747a794a699dfc5f6f7b9b20ab2b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311a1e57f22dc865648b1ef39f857a4f3c32d98f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1eb805ae7a228002131e29c554aecb36f32491', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6516491bd0661d72d3ea55384acc1f836ed02f59', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfd667b0eca8a5eaa79a48c3b18bbb0bd6b57fe3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a1520488eb5914d908c21bd700b3152aa1c7c6d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00227f0445fb154aa3a2193ec0c1a29d3b42438', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55f84c87a7b78662d1bef663e78694b95fe7dbb8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64d2aaa284dd9f1aacecbb6bf903ef2a457257b7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596ebadb992d9e24ff09caf609473adbe7a9a371', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c7be96ee841145b21302585728b3e75483c241', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0327861c57ea6cba0746af6933166592f4c294f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7abc78e3bec29760ee8267105a8aba8361f1a8bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b439e1575b0e52bd8b812a292bf84062e02d437d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05796d5f6263f490165ad060469b831f05715a50', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4e83dde669bd95b4c58bb34135d091bec61b18', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453c81f902911474dfcdb4e6639f99520b3584b4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e6990230a5fbcf643fe7da8ea7c224dd865095', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ca941803c17040b43e040efdcf7cd4c956bc8e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f68d53e3a20375d2c1bbf7ecae534c98e89d8a5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fea30d3160f8a0df25190001f8153964ef9ee01', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13753ec0b4989236188388e364e060d930ab341', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9043a496b1d197d8042233fd9cb9183e8da59096', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a91ef0e3e73fc59e55e393696e9c1fe1125dc7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a5b91e0bab97f403ebec9c9fc58fff0cd94880', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d995e0c787d7e478ffc30040d1bbd82dbc24c09', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68f885aec964e7e2ae1e5de3688f1feaca0ea1d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b57f8c326d2740a45919c32e9299c2ef84ec484', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f06ff64759bb6f96bd37e1dfe5df9c701fb3bd1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c502c6e3be3816b64559fc2be731822fae098184', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbef64794be8216c5ec4556e359cb0cdae8fa48d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7f093b38629e4569bc2ab57bd07eacd80b4c601', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468197114,metrics[1]: auc boxplot [GSoC 2023 @ OpenVINO] [moved to official repo],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

This branch will use boxplots of per-image metrics to make it easier to analyze representative cases of the distribution of  values (1 model, 1 dataset).
 
- add plots that show the distribution of aupimo using a boxplot
- `_perimg_boxplot_stats` (made public in a later PR) will return a list of ""cases"" corresponding to the statistics visible in a boxplot (quartiles, median, mean, whiskers, and outliers) and the image (referenced by its index) closest to that statistic
- these special cases are further used combined with the PImO curves; instead of showing all the (10s~100s) of curves, only the special cases are highlighted

Example of boxplot and PImO curves from its ""special cases"":

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/18ad1daa-73bd-4303-a6c7-9e3873945824)

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,5,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/5,https://github.com/jpcbertoldo/anomalib/pull/5,closed,767,365,7,19,1,3,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-09 08:44:05+00:00,2023-08-23 16:15:08+00:00,1236663.0,"14 days, 7:31:03","[{'comment_id': 1288156585, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1288156942, 'comment_body': '```suggestion\r\n        # even if the data is on GPU, this CPU-based method is faster\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 8, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1288159849, 'comment_body': '```suggestion\r\n        )\r\n        thresholds = thresholds.to(image_classes.device)\r\n        masks = masks.to(image_classes.device)\r\n```', 'comment_created': datetime.datetime(2023, 8, 9, 8, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'cfd667b0eca8a5eaa79a48c3b18bbb0bd6b57fe3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a1520488eb5914d908c21bd700b3152aa1c7c6d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00227f0445fb154aa3a2193ec0c1a29d3b42438', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64d2aaa284dd9f1aacecbb6bf903ef2a457257b7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c7be96ee841145b21302585728b3e75483c241', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7abc78e3bec29760ee8267105a8aba8361f1a8bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05796d5f6263f490165ad060469b831f05715a50', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4e83dde669bd95b4c58bb34135d091bec61b18', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453c81f902911474dfcdb4e6639f99520b3584b4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e6990230a5fbcf643fe7da8ea7c224dd865095', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ca941803c17040b43e040efdcf7cd4c956bc8e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f68d53e3a20375d2c1bbf7ecae534c98e89d8a5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fea30d3160f8a0df25190001f8153964ef9ee01', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13753ec0b4989236188388e364e060d930ab341', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9043a496b1d197d8042233fd9cb9183e8da59096', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68f885aec964e7e2ae1e5de3688f1feaca0ea1d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '103c22c53de74f08b32985ce213c97e6ee670cb6', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b57f8c326d2740a45919c32e9299c2ef84ec484', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f06ff64759bb6f96bd37e1dfe5df9c701fb3bd1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1512275244,metrics[2]: add max fpr restriction [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Fork PR: https://github.com/jpcbertoldo/anomalib/pull/6

## Shared FPR Upper Bound

Add the possibility to define an Upper Bound (UB) (i.e. maximum value) of shared FPR level [1], which corresponds to a Lower Bound (LB) of anomaly score threshold. Example: `AUPImO(ubound=0.03)`. Then the AUC is only computed in the restricted range and normalized by its size.

[1] Remider: at a given anomaly score threshold, that is the average per-image FPR measured on normal images only.

Also add a functionality to create a highlight on the PImO curves to show the integration range. 

Example of PImO curves from the boxplot statistics (previous PR) with the integration range:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/be5e94a8-1b94-4ddd-906f-7b1e8c47c074)

## FPR helper plots

This PR further adds several utility plots to show how the shared FPR (X-axis) is built and how there is, in fact, a spread of  per-image FPR values. In other words, `ubound=0.03` does not guarantee that all normal images have a maximum FPR of `0.03`. Examples below.

1) Per-image FPR (indexed by the shared FPR in the X-axis): normal vs anomalous images

Note that FPR is defined on both types of images, but only normal ones (blue below) are used to build the shared FPR.

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/83ed1a84-65c0-44de-93c2-a439da7448c9)

2) Per-image FPR statistics (normal images only)

Beyond the mean, it is also possible to use other statistics on the per-image FPR. The plot below shows some examples indexed (X-axis) by the mean FPR (note that the 'mean' curve is the identity function).

The plot below shows, for instance, that PImO's X-axis itself is ""imperfect"" because it has a spread (gray zone). 
In other words, there is some level of uncertainty depeding on how many normal images there are in the test set (and on the model behavior, of course).

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/10588a38-6020-4026-bc85-b74a1976f48f)

The `max` curve might be exploited in the future to define the shared FPR, making PImO more strict.

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,1342,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1342,https://github.com/openvinotoolkit/anomalib/pull/1342,closed,788,22,6,73,2,14,2,0,"[{'name': 'Tests'}, {'name': 'Notebooks'}]",2023-09-12 14:46:12+00:00,2023-12-19 17:14:54+00:00,8476122.0,"98 days, 2:28:42","[{'comment_id': 1323169527, 'comment_body': 'Is this needed to be defined here? Looks like it is only used in L227. In terms of the readability, I have the feeling that it breaks the flow', 'comment_created': datetime.datetime(2023, 9, 12, 14, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323171618, 'comment_body': 'Rather than adding comments here, would it be possible to have a docstring?', 'comment_created': datetime.datetime(2023, 9, 12, 14, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323179384, 'comment_body': 'Name of these two functions might be a bit hard to understand. For example, what does `pim` refer to? Similarly, `th` is not clear neither. ', 'comment_created': datetime.datetime(2023, 9, 12, 15, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323244264, 'comment_body': '?\r\n```suggestion\r\n        # FPR upper bound is threshold lower bound\r\n```', 'comment_created': datetime.datetime(2023, 9, 12, 15, 46, 48, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323246373, 'comment_body': 'Just to improve the readability?\r\n```suggestion\r\n        thresh_idx_lbound = torch.argmin(torch.abs(shared_fpr - self.ubound))\r\n        thresh_lbound = thresholds[thresh_idx_lbound]\r\n```', 'comment_created': datetime.datetime(2023, 9, 12, 15, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323251984, 'comment_body': ""the name of the function didn't ring the bell throughout the code. To really understand what it does, I had to read the code and understand. I think it would be better if we can find a more descriptive name that describes what exactly it does."", 'comment_created': datetime.datetime(2023, 9, 12, 15, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323253005, 'comment_body': 'What does `pim` stand for here?', 'comment_created': datetime.datetime(2023, 9, 12, 15, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323255676, 'comment_body': '`img` and `image` are used interchangibly here. It would be more consistent to have something like this:\r\n```suggestion\r\n        for image_idx, image_cls in enumerate(image_classes)\r\n        # or for img_idx, img_cls in enumerate(image_classes)\r\n```', 'comment_created': datetime.datetime(2023, 9, 12, 15, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1323275455, 'comment_body': 'Also, would it be possible to have a function in which norm or norm-vs-anom could be an argument that the user sets? Like `plot_pimfpr_curves(..., normal_only=True` or something like that ', 'comment_created': datetime.datetime(2023, 9, 12, 16, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1339157800, 'comment_body': ""the intention was actually to make it easier to read :sweat_smile: because it's a little convoluted thing so i give it a name"", 'comment_created': datetime.datetime(2023, 9, 27, 20, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1339168428, 'comment_body': '`pim`  is ""per-image"" and `th` is ""threshold""\r\n\r\nyeah, just realized \'pim\' and \'perimg\' are inconsistent, i\'ll put it in the renaming list\r\n\r\n\'th\', however, i thought would be fine, and names become quite long with \'threhsold\'', 'comment_created': datetime.datetime(2023, 9, 27, 20, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1339173503, 'comment_body': '`_overlap_xaxis_range`?', 'comment_created': datetime.datetime(2023, 9, 27, 20, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1339177797, 'comment_body': ""> What does `pim` stand for here?\r\n\r\n`per-image`\r\n\r\n> Also, would it be possible to have a function in which norm or norm-vs-anom could be an argument that the user sets? Like `plot_pimfpr_curves(..., normal_only=True` or something like that\r\n\r\nI was exactly avoiding that to not encourage put everything in one :sweat_smile: . They're secondary functions, not an actual endpoint, so i prefered to keep them simpler and doing their own thing to avoid (eventual) interface complications."", 'comment_created': datetime.datetime(2023, 9, 27, 20, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1339180174, 'comment_body': 'Shall we add the changes\r\n\r\n- `thidx` by `thresh_idx`\r\n- `img`/`imgidx` by `image`/`image_idx`\r\n\r\nto the list of renames in the refactor?\r\n\r\nbecause more of these are coming up in the next PRs :grimacing: ', 'comment_created': datetime.datetime(2023, 9, 27, 20, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'a67b35f938f0af38b0812cf4fff57d058c36717a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6376942a52d78232a47ff57c9d658d78704cb717', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd999729b90919cba0a0ec74309cd9c578e4a3044', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3df9849a0c89d6326aa9f34f3a392a883c627d6e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b1606181e3c59ebf1e6acf704ee82a758cc8802', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cacb6533289e52cd70bcfb80bc439d1a56cd889a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b0bcd8d2c8db263102266a98cab4392207f0ba', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1476a565ee40b8f5a9a4342049d6bd0ef39e6dc1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5557db143c52314c18030a9057079e9416e31a7d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70f9d3799e353d4b05e75fd1be4f729be864255a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b05eddb58bdccf066c0644acdf49144949c4631', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c7444e5552241df0fbda8e41cbc89874b5ec604', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b844261e6637ed7992d8fe7062d351e9022f931c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '784767fc2f19a8f354f152aba7f4338cb628118c', 'committer_username': 'ashwinvaidya17', 'committer_name': 'Ashwin Vaidya', 'committer_email': 'ashwin.vaidya@intel.com', 'commit_date': datetime.datetime(2016, 2, 14, 11, 55, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a46d03042b4564a2931000d0fa509a86afb08ee', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ffc3f6001479d7471cfed7da9005e34605014eb', 'committer_username': 'djdameln', 'committer_name': 'Dick Ameln', 'committer_email': 'dick.ameln@intel.com', 'commit_date': datetime.datetime(2017, 2, 27, 16, 49, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62cd92e33d8cb9cdb004c249edbb01af5a04739', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09ad1d4b1e8f634b72f788314275d3aea33815dd', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b639d492d890816aefaf734db879cf3efb5a016', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '543db2b2aeb75a486f9a8d8a508fe1866e7f561d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8537c772eca265fde410204cc64167bdf6b9198', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb153b1955a2de57b60a8a47c803c01aa854bd5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0761655aa8f257e03f68bd34e602b017d87e0c0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba6a5a6bcc970047a48b2fb5dfc11d694630188b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '974d3bbd5e7901e633ebc0d8c1215bd35991f212', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff18324ac449b698d5113834c2093f4b114c1bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '241fb2efd013fe99202ed3bda6c194d1b775194a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8c588fe21517677eb288afc083e3cb88894cb8d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77355a7a47fe18feb60e6ee6f87c08bf8da9629a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b67cede5ba0747a794a699dfc5f6f7b9b20ab2b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311a1e57f22dc865648b1ef39f857a4f3c32d98f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1eb805ae7a228002131e29c554aecb36f32491', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6516491bd0661d72d3ea55384acc1f836ed02f59', 'committer_username': 'samet-akcay', 'committer_name': 'Samet Akcay', 'committer_email': 'samet.akcay@intel.com', 'commit_date': datetime.datetime(2016, 3, 1, 16, 59, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfd667b0eca8a5eaa79a48c3b18bbb0bd6b57fe3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a1520488eb5914d908c21bd700b3152aa1c7c6d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d13529b563c590b1aede6c3bd383ae9b2990361', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b95c62b1fab004cd23cef74d762a9b63907238d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00227f0445fb154aa3a2193ec0c1a29d3b42438', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55f84c87a7b78662d1bef663e78694b95fe7dbb8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64d2aaa284dd9f1aacecbb6bf903ef2a457257b7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596ebadb992d9e24ff09caf609473adbe7a9a371', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c7be96ee841145b21302585728b3e75483c241', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0327861c57ea6cba0746af6933166592f4c294f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7abc78e3bec29760ee8267105a8aba8361f1a8bc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b439e1575b0e52bd8b812a292bf84062e02d437d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05796d5f6263f490165ad060469b831f05715a50', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd4e83dde669bd95b4c58bb34135d091bec61b18', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453c81f902911474dfcdb4e6639f99520b3584b4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e6990230a5fbcf643fe7da8ea7c224dd865095', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ca941803c17040b43e040efdcf7cd4c956bc8e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f68d53e3a20375d2c1bbf7ecae534c98e89d8a5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fea30d3160f8a0df25190001f8153964ef9ee01', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f455067c59fc8750d6bed7a562a29d6d852927be', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13753ec0b4989236188388e364e060d930ab341', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e9a2e80b52f992426fc5a56644c5356df2f6a3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93a0040b4118c2397569fd7f45eec183e67f9f9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9043a496b1d197d8042233fd9cb9183e8da59096', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb2bac10bdc71505bfd6b224851be6b8f90d2d1e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '258e9b34c9b6029efcc8a199176719cb758676ab', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35a91ef0e3e73fc59e55e393696e9c1fe1125dc7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a5b91e0bab97f403ebec9c9fc58fff0cd94880', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d995e0c787d7e478ffc30040d1bbd82dbc24c09', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68f885aec964e7e2ae1e5de3688f1feaca0ea1d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e730d35c722e9ef0961f0dc769df69f0563e2850', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b57f8c326d2740a45919c32e9299c2ef84ec484', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f06ff64759bb6f96bd37e1dfe5df9c701fb3bd1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c502c6e3be3816b64559fc2be731822fae098184', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbef64794be8216c5ec4556e359cb0cdae8fa48d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d35fa6ec0ccc916c6cf6f6391d190fc2e2a1ec', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7f093b38629e4569bc2ab57bd07eacd80b4c601', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b481aaf77ee801ba193d6628771e50842e687335', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3071784d173f4e3a50d5f1f284c6a5143ef70c0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f1cfe8e1c553a4a71f740a083082e0e04c33ce', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468219346,metrics[2]: add max fpr restriction [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

## Shared FPR Upper Bound

Add the possibility to define an Upper Bound (UB) (i.e. maximum value) of shared FPR level [1], which corresponds to a Lower Bound (LB) of anomaly score threshold. Example: `AUPImO(ubound=0.03)`. Then the AUC is only computed in the restricted range and normalized by its size.

[1] Remider: at a given anomaly score threshold, that is the average per-image FPR measured on normal images only.

Also add a functionality to create a highlight on the PImO curves to show the integration range. 

Example of PImO curves from the boxplot statistics (previous PR) with the integration range:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/be5e94a8-1b94-4ddd-906f-7b1e8c47c074)

## FPR helper plots

This PR further adds several utility plots to show how the shared FPR (X-axis) is built and how there is, in fact, a spread of  per-image FPR values. In other words, `ubound=0.03` does not guarantee that all normal images have a maximum FPR of `0.03`. Examples below.

1) Per-image FPR (indexed by the shared FPR in the X-axis): normal vs anomalous images

Note that FPR is defined on both types of images, but only normal ones (blue below) are used to build the shared FPR.

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/83ed1a84-65c0-44de-93c2-a439da7448c9)

2) Per-image FPR statistics (normal images only)

Beyond the mean, it is also possible to use other statistics on the per-image FPR. The plot below shows some examples indexed (X-axis) by the mean FPR (note that the 'mean' curve is the identity function).

The plot below shows, for instance, that PImO's X-axis itself is ""imperfect"" because it has a spread (gray zone). 
In other words, there is some level of uncertainty depeding on how many normal images there are in the test set (and on the model behavior, of course).

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/10588a38-6020-4026-bc85-b74a1976f48f)

The `max` curve might be exploited in the future to define the shared FPR, making PImO more strict.

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,6,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/6,https://github.com/jpcbertoldo/anomalib/pull/6,closed,784,19,6,10,1,3,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-09 08:59:44+00:00,2023-09-12 14:46:58+00:00,2958434.0,"34 days, 5:47:14",[],"[{'commit_sha': '2d13529b563c590b1aede6c3bd383ae9b2990361', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b95c62b1fab004cd23cef74d762a9b63907238d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f455067c59fc8750d6bed7a562a29d6d852927be', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e9a2e80b52f992426fc5a56644c5356df2f6a3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93a0040b4118c2397569fd7f45eec183e67f9f9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb2bac10bdc71505bfd6b224851be6b8f90d2d1e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '258e9b34c9b6029efcc8a199176719cb758676ab', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e730d35c722e9ef0961f0dc769df69f0563e2850', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d35fa6ec0ccc916c6cf6f6391d190fc2e2a1ec', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b481aaf77ee801ba193d6628771e50842e687335', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1468240053,metrics[3]: add aulogpimo [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Define the **Log** PImO curve, the equivalent of PImO with the shared FPR (X-axis) in log scale. This has the effect of diminishing the importance of the TPR measured at high-FPR thresholds and give more weight to low-FPR thresholds.

All previous features (boxplot, curve plots, and bounds) are replicated for AULogPImO.

Example of LogPImO curves from the boxplot statistics:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/869d0eab-e86e-4124-bb52-6352e720b5f1)

Since the X-axis is in log scale, the AUC cannot be computed with the lower bound at zero, so it is mandatory, while the upper bound remains optional (100% by default).

AUC equation:

$$
    \int_{L}^{U} \text{TPR}( \text{FPR} ) d\text{log(FPR)} 
    = \int_{L}^{U} \text{TPR}( \text{FPR}  ) \text{FPR}^{-1}  d\text{FPR}
$$

Using the log scale makes the maximum AUC != 1 even when the shared FPR upper bound is 100%, so the final metric is normalized. 

Normalization constant:

$$
    C_{\text{normaliz.}} 
    = \int_{L}^{U} 1 \cdot \text{FPR}^{-1} d\text{FPR}
    =  log(U) - log(L) = log(U/L)
$$

The same happens with the reference score of a random model (i.e. no difference between the distributions of normal and anomalous scores); give the lower and upper bounds $L$ and $U$, its score is $\frac{U - L}{log(U / L)}$.

Minor refactor: metric classes no longer have `**kwargs` because it silently receives wrong arguments and does nothing, while it is not being actually exploited to control `Metric`.

---

Known issue: the plot functions in `AULogPImO` were not entirely encapsulated in a function. This was **corrected in the next PR**.

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,7,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/7,https://github.com/jpcbertoldo/anomalib/pull/7,closed,1015,212,8,16,1,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-09 09:14:19+00:00,2023-12-19 17:17:59+00:00,11433820.0,"132 days, 8:03:40",[],"[{'commit_sha': '91fb70c9a18874f6386514883508911eba5d4f24', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ed7781360f2c7a4b2243d2388c15c35e4cec2c2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39ae8fc16b93193c83e5747807a97ad30d90dd11', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbaa4f176127a3ca548831b42937fa335e543521', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '792133554e8638ff5f0d39e5d1190d71d2507f93', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8411d913d73409d9d756378c48536911093b2160', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '259947118507e2cef0ff32bd89aa589323707307', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b9e09fd777dfaba6b1e345510f225dfc0f6601a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020264fc6532e4d18d8c2e07da8f2e8d0a90275f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5b493f489542081df5e7f8851d08f8fefaa54fc', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbafa59d121642e7e4fbc492deec21434acc0aa0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38777a4b623fa87de76597c6938e8e383a226d55', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '656b414628b24f16349ead1ff47ea0e5c7d5230e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc84aa5c3c564613fc0a3038f288c821a7c5e4b3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baff328bfe9ca04a310312e8d61825c9df9dfe7b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08a0be35e795ccd80c86f9733c2232fc4575298b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1480259401,metrics[4] save results [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

## Save & Load

Make it possible to save and load pimo curves and their aucs (`AUPImO` and `AULogPImO`).

`PImO` (parent class of the ""AU""s) will save all the returns (fprs, tprs, shared fpr, etc) in a dict of tensors in a `.pt` so the curves are fully recoverable. 

`AUPImO` and `AULogPImO` values (1 per image) are saved in a JSON file so it can be human readable, and they optionally save the curves with an automatic file name based on the JSON file's name.

## Minor refactor

From the previous PR:

> Known issue: the plot functions in AULogPImO were not entirely encapsulated in a function. This was corrected in the next PR.

Adress this and move the logic of the plots from `AULogPImO` to a functional interface (classes practically just pass the arguments).

--- 

# TODO

- [ ] prevent from saving when the metric is empty
- [ ] test above

---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,9,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/9,https://github.com/jpcbertoldo/anomalib/pull/9,closed,1054,128,8,5,2,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-18 09:18:25+00:00,2023-09-05 17:30:38+00:00,1584733.0,"18 days, 8:12:13",[],"[{'commit_sha': 'baff328bfe9ca04a310312e8d61825c9df9dfe7b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95231cd9f25006cbd9cdd44876e783dbf644d2f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af90b253207266cc56e714bbb04ecf5ac8322daa', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101962e640acc4255cef0b66c1c094b579fbea3a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5cf4ffa1161eb8150b7e1a5e4edd7784f7de8c3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1483032278,metrics[5]: compare models [GSoC 2023 @ OpenVINO],"# Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

Add utilities to compare two or more models on the same dataset with a per-image metric.

Two types of comparison are proposed: parametric (the metric values) and non-parametric (ranks, i.e. sorting of models).  For each method, there is a statistical test (respec., paired t-test and wilcoxon signed rank test) and a plot that visually explains the test.

Plots can eventually show multiple (>2) methods, but the statistical tests are performed pairwise. 
Results are read in a table with rows and columns are model names (`model1` and `model2`) sorted by their average score or rank. 

Statistical tests:
- Null hypothesis: methods are not significantly different.
- Alternative hypothesis: `method1` (row) > `method2` (column).
- Cell values are the ""confidence to reject the null hypothesis"" (`1 - pvalue`).

Example of **parametric** comparison (`AULogPImO`):

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/92bfc08b-91f7-4e74-9b1d-e2bd4dc9912d)

Example of **non-parametric** comparison from the parametric above:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/f32bc526-ee60-4510-bd1f-176e23080bb9)


---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [X] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [X] I have added tests that prove my fix is effective or that my feature works
- [X] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,10,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/10,https://github.com/jpcbertoldo/anomalib/pull/10,closed,1024,34,7,12,1,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-21 14:47:50+00:00,2023-09-05 17:30:29+00:00,1305759.0,"15 days, 2:42:39",[],"[{'commit_sha': '6df11f663543e7034144957acf35eaef2d3cc011', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19401a14a6f3b1496591cab2144c5b61df1bbc02', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baf2586cba65955fd6aff81b3e8ea62af5665259', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c897f899e8e857571b32549a45736d2ed3b65961', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f440c993d9d1f844aa35ebfe6b5bfce093ad2c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab33bccdfbb4d36e6756ce92663f125865883d3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a76e6cd9d27c10909e6d4d71761b0573c4b9ef', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb0f42123da72186edc58e688d02a46951972da2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d0085be95b0ae683d11f9192fac23e968605b9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621f58e22db21f156243fa88627fc611dfdc6069', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '837fa7a43bfa5ae45a0014cb204949cd1aa5c9e2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee2cf55bbad9d0c13197c103259e2315f58ed1e7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1503222978,metrics[4 and 5 refactored] save results and compare models [GSoC23 cont'd],"# Description

This is a continuation of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88). 

Updated PRs at https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88?permalink_comment_id=4681988#gistcomment-4681988

---

Replaces https://github.com/jpcbertoldo/anomalib/pull/9 and https://github.com/jpcbertoldo/anomalib/pull/10 after a refactor on the `PImOResult`, which became a dataclass incorporating the save and load methods.

## Refactors 

### Return types

`PImOResult` becomes a dataclass holding all the information for pimo curves, and the aucs from AUPImO becomes an analogous `AUPImOResult`. 

### Others

- move demo notebooks to a common folder
- change some docstrings
- update the 1st notebook's text
- some validations
- From the previous PR:

> Known issue: the plot functions in AULogPImO were not entirely encapsulated in a function. This was corrected in the next PR.

Adress this and move the logic of the plots from `AULogPImO` to a functional interface (classes practically just pass the arguments).

## Save & Load

Make it possible to save and load pimo curves and their aucs.

`PImOResult` will save the curves' metadat (shared fpr type and bounds) all the returns (fprs, tprs, shared fpr, etc) in a dict of tensors in a `.pt` so the curves are fully recoverable. 

`AUPImOResult` will save the auc's metadata (shared fpr type, bounds, thresholds of the bounds) in a JSON file so it can be human readable.

## Compare models

Add utilities to compare two or more models on the same dataset with a per-image metric.

Two types of comparison are proposed: parametric (the metric values) and non-parametric (ranks, i.e. sorting of models).  For each method, there is a statistical test (respec., paired t-test and wilcoxon signed rank test) and a plot that visually explains the test.

Plots can eventually show multiple (>2) methods, but the statistical tests are performed pairwise. 
Results are read in a table with rows and columns are model names (`model1` and `model2`) sorted by their average score or rank. 

Statistical tests:
- Null hypothesis: methods are not significantly different.
- Alternative hypothesis: `method1` (row) > `method2` (column).
- Cell values are the ""confidence to reject the null hypothesis"" (`1 - pvalue`).

Example of **parametric** comparison (`AULogPImO`):

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/7f32557c-7fc3-4421-a33c-06c817b379d4)


Example of **non-parametric** comparison from the parametric above:

![image](https://github.com/jpcbertoldo/anomalib/assets/24547377/61eab870-93f8-4659-9ea4-cd787f4aebee)


---

List of refactors before merging feature branch: 
https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors

Adds from this PR

```
-
```

---

## Changes

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update

## Checklist

- [ ] My code follows the [pre-commit style and check guidelines](https://github.com/openvinotoolkit/anomalib/blob/main/CONTRIBUTING.md) of this project.
- [ ] I have performed a self-review of my code
- [ ] I have commented my code, particularly in hard-to-understand areas
- [ ] I have made corresponding changes to the documentation
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] New and existing tests pass locally with my changes
- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
",False,12,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/12,https://github.com/jpcbertoldo/anomalib/pull/12,closed,2571,441,11,27,1,0,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-09-05 17:26:37+00:00,2023-12-19 17:17:50+00:00,9071473.0,"104 days, 23:51:13",[],"[{'commit_sha': 'baff328bfe9ca04a310312e8d61825c9df9dfe7b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd95231cd9f25006cbd9cdd44876e783dbf644d2f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af90b253207266cc56e714bbb04ecf5ac8322daa', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101962e640acc4255cef0b66c1c094b579fbea3a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5cf4ffa1161eb8150b7e1a5e4edd7784f7de8c3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6df11f663543e7034144957acf35eaef2d3cc011', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19401a14a6f3b1496591cab2144c5b61df1bbc02', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baf2586cba65955fd6aff81b3e8ea62af5665259', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c897f899e8e857571b32549a45736d2ed3b65961', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20f440c993d9d1f844aa35ebfe6b5bfce093ad2c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab33bccdfbb4d36e6756ce92663f125865883d3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a76e6cd9d27c10909e6d4d71761b0573c4b9ef', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb0f42123da72186edc58e688d02a46951972da2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48d0085be95b0ae683d11f9192fac23e968605b9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621f58e22db21f156243fa88627fc611dfdc6069', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '837fa7a43bfa5ae45a0014cb204949cd1aa5c9e2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee2cf55bbad9d0c13197c103259e2315f58ed1e7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c444bbe93d707d0415f226aa807dbc36c2d1d8e8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9617076bcfa7dbffae9939bc22aa77075dd17f7a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f018d7ccd8224ccd488f7341111fcbdbcbb19994', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b2c96e8942d40f674eef3c24d6db80778c38de0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f120e7a5cab6938b9aef9e5c0037976418e50019', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31d869f8cb66e34f34d1d4218193683bd96b53bf', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '104d53bea19737a645c7521eac6bd663543dd4de', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33eef64f42d28176c7996f482e05a8fc55447b15', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e1cd360d374f29e75c7cb30e685c282fe3c11f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e696b6907fbe90c91a61d8a390257f6ef0c7980', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1489604368,metrics[6]: heatmap visualization with bounds [GSoC 2023 @ OpenVINO] ,"## Description

This is part of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88).

## Changes

This will make it possible to have heat maps with normalization bounds given as an argument, which will used combined with the bounds from `AUPImO`.

It also modifies `superimpose_anomaly_map` to make the anomaly score map transparent wherever the scores are bellow the threshold lower bound (since they'd **never** be classified as `1`).

Example (white means ""above upper bound"", meaning it is **always** classified as `1`): 

![image](https://github.com/openvinotoolkit/anomalib/assets/24547377/c69a8a5a-4d67-45f2-ab03-668d45c31339)


<details>

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Documentation update

</details>

## Checklist

<details>

- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas (If applicable)
- [X] I have made corresponding changes to the documentation (If applicable)
- [X] I have added tests that prove my fix is effective or that my feature works (If applicable)

</details>
",False,11,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/11,https://github.com/jpcbertoldo/anomalib/pull/11,closed,833,619,7,9,1,1,2,0,"[{'name': 'Notebooks'}, {'name': 'Tests'}]",2023-08-25 11:49:43+00:00,2023-09-05 17:50:32+00:00,972049.0,"11 days, 6:00:49","[{'comment_id': 1305577469, 'comment_body': 'should these validations rather be somewhere else?', 'comment_created': datetime.datetime(2023, 8, 25, 12, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'c444bbe93d707d0415f226aa807dbc36c2d1d8e8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9617076bcfa7dbffae9939bc22aa77075dd17f7a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f018d7ccd8224ccd488f7341111fcbdbcbb19994', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b2c96e8942d40f674eef3c24d6db80778c38de0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f120e7a5cab6938b9aef9e5c0037976418e50019', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31d869f8cb66e34f34d1d4218193683bd96b53bf', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '104d53bea19737a645c7521eac6bd663543dd4de', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33eef64f42d28176c7996f482e05a8fc55447b15', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e1cd360d374f29e75c7cb30e685c282fe3c11f4', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1503251541,metrics[6]: heatmap visualization with bounds [GSoC23 cont'd],"## Description

This is a continuation of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88). 

Updated PRs at https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88?permalink_comment_id=4681988#gistcomment-4681988

---

Replaces https://github.com/jpcbertoldo/anomalib/pull/11

## Changes

This will make it possible to have heat maps with normalization bounds given as an argument, which will used combined with the bounds from `AUPImO`.

It also modifies `superimpose_anomaly_map` to make the anomaly score map transparent wherever the scores are bellow the threshold lower bound (since they'd **never** be classified as `1`).

Example (white means ""above upper bound"", meaning it is **always** classified as `1`): 

![image](https://github.com/openvinotoolkit/anomalib/assets/24547377/c69a8a5a-4d67-45f2-ab03-668d45c31339)


<details>

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] Refactor (non-breaking change which refactors the code base)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Documentation update

</details>

## Checklist

<details>

- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas (If applicable)
- [X] I have made corresponding changes to the documentation (If applicable)
- [X] I have added tests that prove my fix is effective or that my feature works (If applicable)

</details>
",False,13,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/13,https://github.com/jpcbertoldo/anomalib/pull/13,closed,289,21,3,5,1,0,1,0,[{'name': 'Tests'}],2023-09-05 17:49:33+00:00,2023-12-19 17:17:42+00:00,9070089.0,"104 days, 23:28:09",[],"[{'commit_sha': 'fe1910a702baf576ee127d4c6c044899fa9f8475', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48b1ba96e705d7762b55f3a71491105dbf5d177f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92481bd01bae35cf1221d9be1984a5fe21e026eb', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7782ef7c8cbbf7abc3edf903767e3d9666acedd3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba2d8402993f3883c89e31e00cca5b1af09d60f2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1504236038,metrics[7]: speedup binclf with numba [GSoC23 cont'd],"## Description

This is a continuation of [Anomaly Segmentation Metrics for Anomalib — GSoC 2023 @ OpenVINO](https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88). 

Updated PRs at https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88?permalink_comment_id=4681988#gistcomment-4681988

---

Accelerate the computation of binary classification curves per image by using numba.

The functions 

`_binclf_curve_numba` (for one image)
`_binclf_curves_numba_parallel` (for many images)

are respectively equivalent to

- `__binclf_curves_ndarray_itertools` (for one image)
- `_binclf_curves_ndarray_itertools` (for many images)
> ATTENTION: new requirement `numba`!

## Changes

<details>
<summary>Describe the changes you made</summary>

- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] Refactor (non-breaking change which refactors the code base)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Documentation update

</details>

## Checklist

<details>
<summary>Ensure that you followed the following</summary>

- [ ] I have added a summary of my changes to the [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) (not for minor changes, docs and tests).
- [X] I have performed a self-review of my code
- [X] I have commented my code, particularly in hard-to-understand areas (If applicable)
- [X] I have made corresponding changes to the documentation (If applicable)
- [X] I have added tests that prove my fix is effective or that my feature works (If applicable)

</details>
",False,14,https://api.github.com/repos/jpcbertoldo/anomalib/pulls/14,https://github.com/jpcbertoldo/anomalib/pull/14,closed,202,13,5,3,1,0,2,0,"[{'name': 'Dependencies'}, {'name': 'Tests'}]",2023-09-06 08:59:22+00:00,2023-12-19 17:17:35+00:00,9015493.0,"104 days, 8:18:13",[],"[{'commit_sha': '94d4ea22bf87f4c8725cdff2d2f793c4fc36922e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5c319b8ce50c6fb292471c5ddf82597a8048aab', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45799b355aaeca6d669184b02c150132a9f7508f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20
1719310409,PIMO,"## 📝 Description

Replace https://github.com/openvinotoolkit/anomalib/pull/1557, which replaces the PRs from https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88 .

Implements refactors from https://github.com/jpcbertoldo/anomalib/blob/metrics/refactors/src/anomalib/utils/metrics/perimg/.refactors .

arxiv: https://arxiv.org/abs/2401.01984
medium post: https://medium.com/p/c653ac30e802
GSoC deliverable: https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88

Closes #1728 1728

## ✨ Changes

Select what type of change your PR is:

- [ ] 🐞 Bug fix (non-breaking change which fixes an issue)
- [ ] 🔨 Refactor (non-breaking change which refactors the code base)
- [X] 🚀 New feature (non-breaking change which adds functionality)
- [ ] 💥 Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] 📚 Documentation update
- [ ] 🔒 Security update

## ✅ Checklist

Before you submit your pull request, please make sure you have completed the following steps:

- [ ] 📋 **I have summarized my changes in the** [CHANGELOG](https://github.com/openvinotoolkit/anomalib/blob/main/CHANGELOG.md) and followed the guidelines for my type of change (skip for minor changes, documentation updates, and test enhancements).
- [ ] 📚 I have made the necessary updates to the documentation (if applicable).
- [ ] 🧪 I have written tests that support my changes and prove that my fix is effective or my feature works (if applicable).

For more information about code review checklists, see the [Code Review Checklist](../docs/source/markdown/guides/developer/code_review_checklist.md).
",False,1726,https://api.github.com/repos/openvinotoolkit/anomalib/pulls/1726,https://github.com/openvinotoolkit/anomalib/pull/1726,open,4974,2,18,61,11,53,1,0,[{'name': 'Feature'}],2024-02-09 12:56:03+00:00,,0.0,,"[{'comment_id': 1484288893, 'comment_body': '@ashwinvaidya17 \r\n> Can we avoid this? Last I checked `__future__.annotations` does not behave well with jsonargparse\r\n\r\ni thought it was necessary for the annotations like `range: tuple[float, float]`, is it not?', 'comment_created': datetime.datetime(2024, 2, 9, 13, 0, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484289674, 'comment_body': ""@ashwinvaidya17 \r\n> What's the convention behind naming files starting with `_`?\r\n\r\nit's similar to the _ attributes inside a module\r\n\r\na function _func in module.py is supposed to be used within the module scope, right?\r\n\r\nsimilarly, the _validate is private to per_image/, so it can be used across other modules inside the subpackage per_image but not out of it"", 'comment_created': datetime.datetime(2024, 2, 9, 13, 0, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484290878, 'comment_body': '@ashwinvaidya17 \r\n> Maybe we can move this method in data.utils.\r\n\r\ni am trying to avoid things out of per_image for the sake of synchronizing the standalone repo more easily\r\ncould we eventually put this in a list of ""refactors for later""?', 'comment_created': datetime.datetime(2024, 2, 9, 13, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484292745, 'comment_body': '@ashwinvaidya17 \r\n> same here and maybe we can rename it to validate_path_are_files. A bit verbose but improves readibility imo.\r\n\r\nso the idea of the _validate module is to have short names because the ""validate"" part is common to all the methods; the functions are always called with _validate.file_paths() to make the ""validate"" show up\r\n\r\nsounds logical?\r\n', 'comment_created': datetime.datetime(2024, 2, 9, 13, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484293615, 'comment_body': ""@ashwinvaidya17 \r\n> What's the advantage of using this over enums?\r\n\r\ni just wanted to avoid enums for the sake of simplicity, yet i wanted to put these contants together for consistency\r\nshould i switch to enum or is that ok?"", 'comment_created': datetime.datetime(2024, 2, 9, 13, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484297101, 'comment_body': '@ashwinvaidya17 \r\n> What\'s the advantage of using both logger.warning and warnings.warn. What happens if we want to pipe the warnings to a file and keep the console empty? A file handler can be passed to the logging module in such a scenario.\r\n\r\ntbh i didnt know what was the right policy here 😳\r\ni put both cuz i was sure you\'d find and tell me what to do :P hehe\r\n\r\nso should i use the logger?\r\n\r\non a side note: warnings.warn allows one to make this raise an exception with warnings.filterwarnings(""error"");\r\nmaybe that could be interesting?\r\n\r\nfor context: this warning is due to having too few points to integrate the AUC curve, which may result in unprecise AUC values', 'comment_created': datetime.datetime(2024, 2, 9, 13, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484298049, 'comment_body': ""\r\n@ashwinvaidya17 \r\n> Do you think we should capture these in a dataclass?\r\n\r\nthere is a dataclass for the torch interface but not for the numpy interface\r\ni couldnt figure out a nice, maintainable way to make the two versions\r\nperhaps we can discuss this in a call? i'll explain better and maybe you'll know a good solution"", 'comment_created': datetime.datetime(2024, 2, 9, 13, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1484383965, 'comment_body': 'this is a good idea, but we might need to double check with GSoC guidelines in regards to code ownership. ', 'comment_created': datetime.datetime(2024, 2, 9, 14, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'samet-akcay', 'type': 'User'}, {'comment_id': 1485584768, 'comment_body': 'So, (i think) i re-figured out why i used this. \r\nIn the other file, the class `AUPIMOResult` has annotations using the class itself (eg `from_pimoresult(...) -> AUPIMOResult:`) and apparently the linter didnt like it, but adding `__future__.annotations` solves it.\r\nNow, idk if this is a good justification. What do you prefer to do about this?\r\n', 'comment_created': datetime.datetime(2024, 2, 11, 12, 27, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1504264286, 'comment_body': 'Our minimum python version is 3.10. I think we can safely omit `__future__.annotations`', 'comment_created': datetime.datetime(2024, 2, 27, 13, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601548615, 'comment_body': 'Are we allowed to release MIT licensed work under Apache license?', 'comment_created': datetime.datetime(2024, 5, 15, 12, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601550708, 'comment_body': 'We now only use pyproject.toml but this comment might be relevant there as well. Maybe we need to make this requirement part of optional depencencies. There is an open issue requesting smaller core size. ', 'comment_created': datetime.datetime(2024, 5, 15, 12, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601552947, 'comment_body': ""What's the rationale behind the import statement here?"", 'comment_created': datetime.datetime(2024, 5, 15, 12, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601559360, 'comment_body': ""Let's remove `__future__` across the code. It is not relevant anymore"", 'comment_created': datetime.datetime(2024, 5, 15, 12, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601564573, 'comment_body': 'Yeah I understand that it is already a large PR but it might be a good idea to sync with `src/anomalib/data/utils/path.py`. We already have utils that perform similar checks', 'comment_created': datetime.datetime(2024, 5, 15, 12, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601574286, 'comment_body': ""Super picky comment but I'd be in favour of naming it to something like `is_num_threshs_gte2`"", 'comment_created': datetime.datetime(2024, 5, 15, 12, 41, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601575586, 'comment_body': 'Same with the others. I am in favour of sticking to a single naming convention. Like `is_`', 'comment_created': datetime.datetime(2024, 5, 15, 12, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601581762, 'comment_body': ""Yeah I get what you mean but I feel a lot of methods defined here might be useful across the repo as well. Like the `same_shape` and `is_tensor`. But It might be too much work and too many changed files. We can address it in another PR but it would be nice to then add a TODO at the top of the file and create an issue for it so that we don't forget to revisit it later."", 'comment_created': datetime.datetime(2024, 5, 15, 12, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601601770, 'comment_body': ""General question for the methods in this class. I can see that torch tensors are converted to ndarrays and then converted back to tensors. What's the performance difference between direct torch computation vs numba? And I can see that numba operations are used only when numba is available. So when it is not available we will end up with numpy ops. What's the performance hit due to this? If I am in favor of pruning extra libraries if the gain is marginal. Torch supports multiple backends so a pure pytorch operation will enable users to utilize their accelerators (cuda, ipex).\r\nWhat do you guys think? @samet-akcay @djdameln "", 'comment_created': datetime.datetime(2024, 5, 15, 13, 0, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601618748, 'comment_body': 'With risk of sounding dogmatic, I am in favour of switching to enums. The mental model in my head for dataclasses is to store data, and for enums is for switching. From what I see, this is used for switching. Also, it is easy to validate enums by just wrapping the some passed value with enum type.\r\n<img width=""283"" alt=""image"" src=""https://github.com/openvinotoolkit/anomalib/assets/17232914/66e23aa4-4781-4b75-9aff-411d5f43c20d"">\r\nTake line 196 for example.\r\n`algorithm: str = BinclfAlgorithm.NUMBA`\r\nI understand the objective behind this but I would rather go with\r\n```python\r\nclass BinclfAlgorithm(Enum):\r\n   ...\r\n```\r\n\r\n```python\r\n    algorithm: BinclfAlgorithm | str = BinclfAlgorithm.NUMBA,\r\n) -> ndarray:\r\n    algorithm =  BinclfAlgorithm(algorithm)\r\n```\r\nthis has the same desired effect as validate', 'comment_created': datetime.datetime(2024, 5, 15, 13, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601631905, 'comment_body': 'Is this intentional?', 'comment_created': datetime.datetime(2024, 5, 15, 13, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601636431, 'comment_body': 'Should we call it python or numpy?', 'comment_created': datetime.datetime(2024, 5, 15, 13, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601684679, 'comment_body': ""Maybe I missed something but the only difference between this and the non-numba method is the decorator. This way we might be able to reduce the file count. Maybe you can use a generic decorator that uses numba's jit when it is available\r\n```python\r\nfrom anomalib.utils.exceptions import try_import\r\nimport numpy as np\r\n\r\ndef numba_accelerate(func):\r\n    if try_import('numba'):\r\n        from numba import jit\r\n        return jit(nopython=True)(func)\r\n    else:\r\n        return func\r\n\r\n@numba_accelerate\r\ndef add(a:np.ndarray, b: np.ndarray):\r\n    return a + b\r\n```\r\nThis is a quick something I tried. Feel free to polish it"", 'comment_created': datetime.datetime(2024, 5, 15, 13, 46, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601688794, 'comment_body': ""Let's stick to `logger.warning`"", 'comment_created': datetime.datetime(2024, 5, 15, 13, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1601691089, 'comment_body': ""Let's leave it as is for now. We are planning on refactoring both the inferencers."", 'comment_created': datetime.datetime(2024, 5, 15, 13, 49, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1615732841, 'comment_body': '@samet-akcay do you know?\r\n', 'comment_created': datetime.datetime(2024, 5, 27, 8, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1615734902, 'comment_body': 'how should i do that? like create another optional install in the `setup.py`?', 'comment_created': datetime.datetime(2024, 5, 27, 8, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1615737489, 'comment_body': 'if imports break, then you know specifically which one(s) instead of breaking the whole test file\r\ni saw this practice somewhere else, but i can drop it if you prefer\r\n', 'comment_created': datetime.datetime(2024, 5, 27, 9, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1615756117, 'comment_body': ""i tested all these variants back then\r\nnumba gives a good improvement, it is not neglectable\r\nas for the tensor-ndarray-tensor conversion, it is also faster than using only torch\r\n\r\n(from what i saw few months ago in the code and my own tests)\r\ntorchmetrics has two methods for computing this (both with cuda available)\r\nA)  a fast one that computes the curves with all thresholds possible (ie all score values seen)\r\nB) a slower one that takes pre-defined threholds\r\n\r\npimo needs B because all images are evaluated at the same thresholds\r\nin that case, the methods here (even without numba) are faster because torch's and torchmetrics' stuff dont deal with computing same thresholds on instance-scoped binary classification matrices\r\n\r\ni can find detailed results from my test again, but just for a reference (in the paper)\r\n\r\n![image](https://github.com/openvinotoolkit/anomalib/assets/24547377/f704818d-7366-414b-9181-f25052f00d73)\r\n\r\nthat numba method (+ the tensor-ndarray conversion + just-in-time compilation) is beating torchmetrics AUROC on GPU"", 'comment_created': datetime.datetime(2024, 5, 27, 9, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1615760055, 'comment_body': 'it is, the documentation is built programatically from the the other function because this is just a wrapper\r\ni wasnt sure how this would interact with the documentation builder tho\r\ni wanted to avoid repeating documentation to avoid mistakes', 'comment_created': datetime.datetime(2024, 5, 27, 9, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1615768882, 'comment_body': 'the logic is that the low level operations (that make it faster) (L153-L157) are just python-native operations, not even numpy\r\nand both versions use numpy in a way or another', 'comment_created': datetime.datetime(2024, 5, 27, 9, 24, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1615777225, 'comment_body': ""not really\r\nthe python version has `itertools.takewhile` and this one has an actual while loop\r\nmany things are not recognized by or not compatible with numba's compiler (eg `itertools.takewhile`)\r\nin general, numba is a bit sensitve, it's very easy to break it so that kind of solution is generally not a great idea\r\ni made sure (eg validations and in the higher level functions) that this one does work bc it gives good improvements"", 'comment_created': datetime.datetime(2024, 5, 27, 9, 28, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1617136812, 'comment_body': 'for the record: https://github.com/openvinotoolkit/anomalib/issues/2093', 'comment_created': datetime.datetime(2024, 5, 28, 12, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1617260117, 'comment_body': 'i reverted this to usual imports on top of the file', 'comment_created': datetime.datetime(2024, 5, 28, 13, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1617285749, 'comment_body': 'i reverted this ', 'comment_created': datetime.datetime(2024, 5, 28, 13, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1654656428, 'comment_body': 'To be consistent with the rest of the repo, I would avoid adding an author tag to the header. Plus, it might get flagged in the code scans.', 'comment_created': datetime.datetime(2024, 6, 26, 11, 42, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654661175, 'comment_body': ""Since the files in this folder are the same as the linked github repo, we need to include these in `third-party-programs.txt`. To be consistent with the rest of the repo and the contribution guideline, we can't add author tag in the header. I would recommend adding an entry similar to `https://github.com/openvinotoolkit/anomalib/blob/main/third-party-programs.txt#L18`. It mentions the files and the license of the original repo. In this case that is `MIT` "", 'comment_created': datetime.datetime(2024, 6, 26, 11, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1654663073, 'comment_body': 'I am still on the fence regarding the numba requirement. While it is a good feature to have, it increases complexity. I would recommend dropping it from Anomalib. Any user who wants to use it can refer to the original repo. Any thoughts @samet-akcay @djdameln ?', 'comment_created': datetime.datetime(2024, 6, 26, 11, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ashwinvaidya17', 'type': 'User'}, {'comment_id': 1662352093, 'comment_body': 'Do we need an enum for this if there is only one possible value?', 'comment_created': datetime.datetime(2024, 7, 2, 11, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1662359247, 'comment_body': 'These validation checks are also performed in the `pimo_curves` function in `pimo_numpy`, so maybe they could be removed here.', 'comment_created': datetime.datetime(2024, 7, 2, 11, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1662681604, 'comment_body': 'Not sure if this would be the best place to define this, as PIMO is the only module that uses Numba', 'comment_created': datetime.datetime(2024, 7, 2, 14, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1662746647, 'comment_body': ""I'm also a bit hesitant to add the numba requirement. I can see the benefit that it brings, but at the same time it adds an unnecessary dependency and it increases the complexity of the code. Without Numba we could have a pure pytorch implementation of the metric, which would be much cleaner and more in line with the rest of the library."", 'comment_created': datetime.datetime(2024, 7, 2, 15, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1668681182, 'comment_body': 'this is kind of a heritage from old experiments where there was another possible value\r\nbut i kept it because this value shows in the `.yaml` file where the scores are saved\r\nwe can remove it from everywhere if that makes more sense', 'comment_created': datetime.datetime(2024, 7, 8, 13, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1668685274, 'comment_body': '```suggestion\r\n    anomaly_maps_array = anomaly_maps.detach().cpu().numpy()\r\n    masks_array = masks.detach().cpu().numpy()\r\n```', 'comment_created': datetime.datetime(2024, 7, 8, 13, 55, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1668686426, 'comment_body': 'done', 'comment_created': datetime.datetime(2024, 7, 8, 13, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1668688406, 'comment_body': ""i dont personally dont see the difference, it's kind of arbitrary, no?\r\nshould i move it there?"", 'comment_created': datetime.datetime(2024, 7, 8, 13, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1668700142, 'comment_body': 'the pytorch-only was slower than the one with numpy (which is slower than numba)\r\ni see this is becoming a long issue, i can just drop numba, but can you confirm this is the decision to make? (just to avoid going back later)', 'comment_created': datetime.datetime(2024, 7, 8, 14, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1670542527, 'comment_body': 'I would be in favor of removing it. If we extend the metric with more possible values in the future we can always bring it back', 'comment_created': datetime.datetime(2024, 7, 9, 13, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1671817370, 'comment_body': ""@jpcbertoldo would it be possible to use the pytorch-only implementation by default, and use the Numba implementation if the user has Numba installed in their environment? This way we don't force casual users to install another dependency, and advanced users who care more about speed can install Numba to speed up the computation. We could log a warning to notify the users that the computation can be made faster by installing Numba."", 'comment_created': datetime.datetime(2024, 7, 10, 8, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'djdameln', 'type': 'User'}, {'comment_id': 1725203202, 'comment_body': 'moved it', 'comment_created': datetime.datetime(2024, 8, 21, 14, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1725285999, 'comment_body': 'done', 'comment_created': datetime.datetime(2024, 8, 21, 15, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1725291661, 'comment_body': 'i am resolving this one because it is a duplicate of https://github.com/openvinotoolkit/anomalib/pull/1726#discussion_r1654663073', 'comment_created': datetime.datetime(2024, 8, 21, 15, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}, {'comment_id': 1725301705, 'comment_body': '@djdameln this is already the case\r\n\r\nthis https://github.com/openvinotoolkit/anomalib/blob/440bf2f5f32c2a9230485a6df11ce3b026efa306/src/anomalib/metrics/per_image/binclf_curve_numpy.py#L23-L32 is checking if numba is installed and only importing the the numba-dependent version if it is the case\r\n\r\nand this part https://github.com/openvinotoolkit/anomalib/blob/440bf2f5f32c2a9230485a6df11ce3b026efa306/src/anomalib/metrics/per_image/binclf_curve_numpy.py#L229-L239  is doing this version routing (with or without numba)\r\n\r\nthe installation of numba is already optional as well and it requires ""opt-in"" from the user: https://github.com/openvinotoolkit/anomalib/blob/440bf2f5f32c2a9230485a6df11ce3b026efa306/pyproject.toml#L87\r\n\r\n@ashwinvaidya17 do you think that is ok like this?', 'comment_created': datetime.datetime(2024, 8, 21, 15, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jpcbertoldo', 'type': 'User'}]","[{'commit_sha': 'c3944eb2024613f83245fa3f13ebdad78a4ccd13', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b61c47fbee429989420b25269f3679d0ac0c7e7a', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6006b44fa3969f7bee7b2093dac0804979d7da7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '101d646005b3095a2516723dcf2ec6103080b752', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62d54801a6eff8bbb935dfd5c8b599fbc21abb51', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f0b4248a12749b5e5e03764d7051e6021a8bc8e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df211e9e9a0b1f621141c7681dcd944c5786414', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e74226eacaf43c6a108a1afaf42e931c52d339f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283d704401b6d0a33f4b780dd0b5a9638a4742fd', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bc3c06332eb93c4881e4c33914ee015e4d0d170', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c864b540bbbf7142ba9a6dbc6b5d3bc5931adeb3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d1060c97cddaf537869c5d27929b8576339fb9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfc287eb7e90b895a9be24b97f84cc0a2803b2e2', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60483fc5b1d1c75ca1ac8570566bef5d48350b7c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bfe3da330d4061ef978e03e56fcb849f9cc2c7d', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a7398b7d0b29272137b27b0a384213ad0e84945', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '403b4ae41d7894ad73d789094452bfa3de86da97', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b12fb86520d356ac49d2be421f64e2b9f8f5deef', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7e5439348a7fd27d6a6ca767b03eaa951493f3c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3808de890118442855bb9a44267e337b62fdd1f8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfa8dc3be5434ee981268dd73613a1d7c9acb05f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cefa2c0ac0a04755043d830ecd91b8e707826c8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adc14fd79257eada31770ff3c953ad199b325dfd', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c30c4eafb528f2db24bcfb1fcc7dee8c2b7e4278', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408fb2bdd45b79424fb2a942b53b93af02475d15', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c6eb27675e92ecb787b12c5c7cf5c43c310221', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '980c972a5931440495e0cfa42c5a6ef690c2bae5', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a052f6abe33a21d1e36e1c937ef79385d90a24a3', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dabba4a6df5ec95fd6bf570b51b0f1e980bd8f49', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '215847b41f748d92f58a0ef14f8239b4fd492d09', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6404fcfa0dcac31b9c3d0264b127bf873c65250', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14c97fa2841e1e175e634c9b4fb45bbbbf4bf9db', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bc3b2b0433f0e12c4e37dde9e4141647714a20e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8e0ddf55b385427c87022082fa1b9fa93f9a9cb', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '943c1a78bd213265c5bd6c13b56b90989900eae7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e565d1e52fd1c584b20ffbc74ea3a5fbb9fe3b9', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '103b6dbbddf3b071fb0feaa35f4f7a04bf463a80', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08b85ef460073c68afae25772769219059b031a1', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '616576824df247f065b11865a90634d4b7fb150b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbdf8b601fd39a749410770d8e977fe39c9a1991', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55890491728194f6820a26fc7a0ee3d76d8cbcf', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '581b35b74b7343afe4027201db45e9e21876ecf8', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5837c0d835751f2ca129d90ecd4539d31ad1971f', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68a30aa25256eaca9b50122adfb51c6fc6b3b38e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4071ad86c0e7d1ad606b4f0e188db83c448c76e', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f65040d5893ba51f670b77dd654fba00f204754', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d0863fc6554d6081e6f826b7daba71fa2f44ed0', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdd797af676a103cb39d57ff838cf28e5b32ed07', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '012e8e2c26051eb3fba8b1a780b2d80a56935b59', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f11b4a969de83b6d58ed5746c5f20521df6fa242', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa448f2a144b4ca4d2263b354682864e54470c77', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd0bd50a70f8257fee16714eef768d5c67cdc2ae', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c92a6a9b5b7c37d2e260450566238f8b75759b9c', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1cde9ce5b48b140b21a654ec3695acc8597de346', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be9732f883b218b8cce3790b4f5a978113a16e53', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bef47120496d4947217f4d9a94a8e228217c601', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '440bf2f5f32c2a9230485a6df11ce3b026efa306', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '937a515e053e2921876ed25652d21f04fa36fcee', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c037ec0a6e7f2708f6f5a34c759a58b085a16a7', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718257c27cab772fa1f4118c92fff7d03534bb35', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27a38dad4a01e7da45dde9d71b2f3dcf6909260b', 'committer_username': 'jpcbertoldo', 'committer_name': 'Joao P C Bertoldo', 'committer_email': None, 'commit_date': datetime.datetime(2016, 12, 13, 14, 32, 47, tzinfo=datetime.timezone.utc)}]",Joao P C Bertoldo,24547377,,User,,30,,35,20

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
423775360,anomalib,openvinotoolkit/anomalib,Python,646,3583,38,80,669,142,7,31,"[{'id': 1719310409, 'number': 1726, 'closed': None, 'created': datetime.datetime(2024, 2, 9, 12, 56, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 4974, 'deletions': 2, 'state': 'open'}, {'id': 1650304071, 'number': 1557, 'closed': datetime.datetime(2024, 1, 24, 12, 19, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 12, 41, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3109072.0, 'time_delta': '35 days, 23:37:52', 'additions': 5012, 'deletions': 0, 'state': 'closed'}, {'id': 1650280890, 'number': 1556, 'closed': datetime.datetime(2023, 12, 19, 12, 27, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 12, 25, 30, tzinfo=datetime.timezone.utc), 'time_taken': 129.0, 'time_delta': '0:02:09', 'additions': 6909, 'deletions': 48, 'state': 'closed'}, {'id': 1533026388, 'number': 1376, 'closed': None, 'created': datetime.datetime(2023, 9, 27, 20, 4, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 21, 'deletions': 14, 'state': 'open'}, {'id': 1531964119, 'number': 1372, 'closed': datetime.datetime(2023, 9, 27, 8, 56, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 27, 8, 55, 35, tzinfo=datetime.timezone.utc), 'time_taken': 54.0, 'time_delta': '0:00:54', 'additions': 8894, 'deletions': 48, 'state': 'closed'}, {'id': 1512275244, 'number': 1342, 'closed': datetime.datetime(2023, 12, 19, 17, 14, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 14, 46, 12, tzinfo=datetime.timezone.utc), 'time_taken': 8476122.0, 'time_delta': '98 days, 2:28:42', 'additions': 788, 'deletions': 22, 'state': 'closed'}, {'id': 1510529760, 'number': 1335, 'closed': datetime.datetime(2023, 9, 11, 16, 4, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 11, 15, 5, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3526.0, 'time_delta': '0:58:46', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 1486515059, 'number': 1294, 'closed': datetime.datetime(2023, 9, 12, 12, 3, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 14, 14, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1720114.0, 'time_delta': '19 days, 21:48:34', 'additions': 770, 'deletions': 367, 'state': 'closed'}, {'id': 1468154287, 'number': 1247, 'closed': datetime.datetime(2023, 8, 23, 13, 54, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 8, 12, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1230088.0, 'time_delta': '14 days, 5:41:28', 'additions': 2122, 'deletions': 1, 'state': 'closed'}, {'id': 1452808339, 'number': 1220, 'closed': datetime.datetime(2023, 8, 9, 8, 12, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 27, 21, 51, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1074057.0, 'time_delta': '12 days, 10:20:57', 'additions': 2034, 'deletions': 68, 'state': 'closed'}, {'id': 1222984671, 'number': 877, 'closed': datetime.datetime(2023, 1, 31, 15, 14, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 9, 34, 30, tzinfo=datetime.timezone.utc), 'time_taken': 20373.0, 'time_delta': '5:39:33', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1121267862, 'number': 711, 'closed': datetime.datetime(2022, 11, 18, 13, 51, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 14, 12, 12, 11, tzinfo=datetime.timezone.utc), 'time_taken': 351535.0, 'time_delta': '4 days, 1:38:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1114532791, 'number': 700, 'closed': datetime.datetime(2022, 11, 21, 9, 25, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 8, 14, 44, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1104060.0, 'time_delta': '12 days, 18:41:00', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1114172912, 'number': 695, 'closed': datetime.datetime(2022, 11, 9, 4, 53, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 8, 10, 41, 50, tzinfo=datetime.timezone.utc), 'time_taken': 65486.0, 'time_delta': '18:11:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1111565063, 'number': 688, 'closed': datetime.datetime(2022, 11, 8, 12, 29, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 5, 9, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 269646.0, 'time_delta': '3 days, 2:54:06', 'additions': 335, 'deletions': 50, 'state': 'closed'}, {'id': 1106111041, 'number': 664, 'closed': datetime.datetime(2022, 11, 8, 14, 7, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 1, 26, 7, tzinfo=datetime.timezone.utc), 'time_taken': 650456.0, 'time_delta': '7 days, 12:40:56', 'additions': 115, 'deletions': 12, 'state': 'closed'}, {'id': 1106106412, 'number': 663, 'closed': datetime.datetime(2022, 11, 1, 1, 22, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 1, 18, 34, tzinfo=datetime.timezone.utc), 'time_taken': 260.0, 'time_delta': '0:04:20', 'additions': 86, 'deletions': 10, 'state': 'closed'}, {'id': 1106049990, 'number': 661, 'closed': datetime.datetime(2022, 11, 8, 5, 36, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 31, 23, 46, 8, tzinfo=datetime.timezone.utc), 'time_taken': 625803.0, 'time_delta': '7 days, 5:50:03', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 1106033345, 'number': 660, 'closed': datetime.datetime(2022, 11, 7, 11, 57, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 31, 23, 19, 26, tzinfo=datetime.timezone.utc), 'time_taken': 563894.0, 'time_delta': '6 days, 12:38:14', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 1059684048, 'number': 564, 'closed': datetime.datetime(2022, 9, 22, 10, 51, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 19, 1, 4, 58, tzinfo=datetime.timezone.utc), 'time_taken': 294412.0, 'time_delta': '3 days, 9:46:52', 'additions': 163, 'deletions': 59, 'state': 'closed'}, {'id': 1052492000, 'number': 553, 'closed': datetime.datetime(2023, 4, 5, 14, 44, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 11, 12, 25, 24, tzinfo=datetime.timezone.utc), 'time_taken': 17806768.0, 'time_delta': '206 days, 2:19:28', 'additions': 6991, 'deletions': 2817, 'state': 'closed'}, {'id': 1048390495, 'number': 544, 'closed': datetime.datetime(2022, 9, 26, 8, 36, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 7, 7, 46, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1644615.0, 'time_delta': '19 days, 0:50:15', 'additions': 73, 'deletions': 0, 'state': 'closed'}, {'id': 1045125067, 'number': 538, 'closed': datetime.datetime(2022, 9, 11, 12, 27, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 17, 5, 15, tzinfo=datetime.timezone.utc), 'time_taken': 760961.0, 'time_delta': '8 days, 19:22:41', 'additions': 2830, 'deletions': 28, 'state': 'closed'}]"
527637015,anomalib,jpcbertoldo/anomalib,Python,1,0,0,35,395,1,19,1,"[{'id': 1650310023, 'number': 15, 'closed': None, 'created': datetime.datetime(2023, 12, 19, 12, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6909, 'deletions': 48, 'state': 'open'}, {'id': 1504236038, 'number': 14, 'closed': datetime.datetime(2023, 12, 19, 17, 17, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 6, 8, 59, 22, tzinfo=datetime.timezone.utc), 'time_taken': 9015493.0, 'time_delta': '104 days, 8:18:13', 'additions': 202, 'deletions': 13, 'state': 'closed'}, {'id': 1503251541, 'number': 13, 'closed': datetime.datetime(2023, 12, 19, 17, 17, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 17, 49, 33, tzinfo=datetime.timezone.utc), 'time_taken': 9070089.0, 'time_delta': '104 days, 23:28:09', 'additions': 289, 'deletions': 21, 'state': 'closed'}, {'id': 1503222978, 'number': 12, 'closed': datetime.datetime(2023, 12, 19, 17, 17, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 17, 26, 37, tzinfo=datetime.timezone.utc), 'time_taken': 9071473.0, 'time_delta': '104 days, 23:51:13', 'additions': 2571, 'deletions': 441, 'state': 'closed'}, {'id': 1489604368, 'number': 11, 'closed': datetime.datetime(2023, 9, 5, 17, 50, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 11, 49, 43, tzinfo=datetime.timezone.utc), 'time_taken': 972049.0, 'time_delta': '11 days, 6:00:49', 'additions': 833, 'deletions': 619, 'state': 'closed'}, {'id': 1483032278, 'number': 10, 'closed': datetime.datetime(2023, 9, 5, 17, 30, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 21, 14, 47, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1305759.0, 'time_delta': '15 days, 2:42:39', 'additions': 1024, 'deletions': 34, 'state': 'closed'}, {'id': 1480259401, 'number': 9, 'closed': datetime.datetime(2023, 9, 5, 17, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 18, 9, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1584733.0, 'time_delta': '18 days, 8:12:13', 'additions': 1054, 'deletions': 128, 'state': 'closed'}, {'id': 1480256526, 'number': 8, 'closed': datetime.datetime(2023, 8, 18, 9, 17, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 18, 9, 17, tzinfo=datetime.timezone.utc), 'time_taken': 33.0, 'time_delta': '0:00:33', 'additions': 11690, 'deletions': 1868, 'state': 'closed'}, {'id': 1468240053, 'number': 7, 'closed': datetime.datetime(2023, 12, 19, 17, 17, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 9, 14, 19, tzinfo=datetime.timezone.utc), 'time_taken': 11433820.0, 'time_delta': '132 days, 8:03:40', 'additions': 1015, 'deletions': 212, 'state': 'closed'}, {'id': 1468219346, 'number': 6, 'closed': datetime.datetime(2023, 9, 12, 14, 46, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 8, 59, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2958434.0, 'time_delta': '34 days, 5:47:14', 'additions': 784, 'deletions': 19, 'state': 'closed'}, {'id': 1468197114, 'number': 5, 'closed': datetime.datetime(2023, 8, 23, 16, 15, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 8, 44, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1236663.0, 'time_delta': '14 days, 7:31:03', 'additions': 767, 'deletions': 365, 'state': 'closed'}, {'id': 1468163285, 'number': 4, 'closed': datetime.datetime(2023, 8, 9, 8, 37, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 8, 19, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1083.0, 'time_delta': '0:18:03', 'additions': 1012, 'deletions': 276, 'state': 'closed'}, {'id': 1465934702, 'number': 3, 'closed': datetime.datetime(2023, 8, 9, 8, 11, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 21, 26, 38, tzinfo=datetime.timezone.utc), 'time_taken': 125066.0, 'time_delta': '1 day, 10:44:26', 'additions': 1819, 'deletions': 623, 'state': 'closed'}, {'id': 1458469843, 'number': 2, 'closed': datetime.datetime(2023, 8, 9, 8, 10, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 16, 58, 46, tzinfo=datetime.timezone.utc), 'time_taken': 659526.0, 'time_delta': '7 days, 15:12:06', 'additions': 708, 'deletions': 64, 'state': 'closed'}, {'id': 1458465741, 'number': 1, 'closed': datetime.datetime(2023, 8, 1, 16, 57, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 16, 55, 26, tzinfo=datetime.timezone.utc), 'time_taken': 114.0, 'time_delta': '0:01:54', 'additions': 9360, 'deletions': 1782, 'state': 'closed'}]"
