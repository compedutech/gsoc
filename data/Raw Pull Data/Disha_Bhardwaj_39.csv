pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1400384902,feat: Omnichannel Verification Visitor,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

<!-- Your Pull Request name should start with one of the following tags
  feat: Adding a new feature
  refactor: A code change that doesn't change behavior (it doesn't add anything and doesn't fix anything)
  fix: For bug fixes that affect the end-user
  chore: For small tasks
  docs: For documentation
  ci: For updating CI configuration
  test: For adding tests
  i18n: For updating any translations
  regression: Issues created/reported/fixed during the development phase. kind of problem that never existed in production and that we don't need to list in a changelog for the end user
-->

<!-- Checklist!!! If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. 
  - I have read the Contributing Guide - https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat doc
  - I have signed the CLA - https://cla-assistant.io/RocketChat/Rocket.Chat
  - Lint and unit tests pass locally with my changes
  - I have added tests that prove my fix is effective or that my feature works (if applicable)
  - I have added necessary documentation (if applicable)
  - Any dependent changes have been merged and published in downstream modules
-->

## Proposed changes (including videos or screenshots)
Implemented visitor's email update, OTP generation, and verification

https://github.com/RocketChat/Rocket.Chat/assets/67470541/c6504c72-7d7e-49df-9041-c117ac43b486


<!-- CHANGELOG -->
<!--
  Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request.
  If it fixes a bug or resolves a feature request, be sure to link to that issue below.
  This description will appear in the release notes if we accept the contribution.
-->

<!-- END CHANGELOG -->

## Issue(s)
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## Steps to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->
1. Go to omnichannel, join an open room
2. Click on verify user button from quick action buttons.

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,29590,https://api.github.com/repos/RocketChat/Rocket.Chat/pulls/29590,https://github.com/RocketChat/Rocket.Chat/pull/29590,closed,547,8,29,37,2,45,0,0,[],2023-06-20 19:12:52+00:00,2023-08-14 13:19:23+00:00,4730791.0,"54 days, 18:06:31","[{'comment_id': 1236283394, 'comment_body': ':eyes: These seem to be an unrelated changeset', 'comment_created': datetime.datetime(2023, 6, 21, 5, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236284577, 'comment_body': ""same here. Let's not add any changeset on PRs targetted to the feature branch. We'll add the main changeset within the final PR from feature branch"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236288543, 'comment_body': '1) There\'s a typo here\n2) This prop holds a finite number of string values like `isListeningToOTP`, so let\'s type it accordingly. Enums should be a good fit here\n3) Pls move this to ""IOmnichannelGenericRoom""', 'comment_created': datetime.datetime(2023, 6, 21, 5, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236291747, 'comment_body': 'Can there be more than one verification code at a time in this array? If not we can then we can destructure it ', 'comment_created': datetime.datetime(2023, 6, 21, 5, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236294781, 'comment_body': 'Are these changes relevent? I feel they are leftovers from a merge', 'comment_created': datetime.datetime(2023, 6, 21, 5, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236298159, 'comment_body': ""Meteor methods have been deprecated.Instead it's recommended to use API endpoints"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236298750, 'comment_body': '\n```suggestion\n```', 'comment_created': datetime.datetime(2023, 6, 21, 5, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236301172, 'comment_body': 'Are these changes relevant to this task? If not, then please exclude them', 'comment_created': datetime.datetime(2023, 6, 21, 5, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236302292, 'comment_body': 'Same goes here:\n\n> Are these changes relevant to this task? If not, then please exclude them', 'comment_created': datetime.datetime(2023, 6, 21, 5, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236309451, 'comment_body': ""\n```suggestion\n\tconst visitor = await LivechatVisitors.findOneById(visitorRoomId, { projection: { visitorEmails: 1 }});\n```\nSince you only need email's prop, so let's only load it to memory"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236321095, 'comment_body': ""Does this translation work? Assume we have a translated string in another language, let's say in Hindi, then would this be translated to Hindi?"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236327751, 'comment_body': 'Time to complete this TODO ;)', 'comment_created': datetime.datetime(2023, 6, 21, 5, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236334875, 'comment_body': ""For checking if it's an omnichannel room, you can use -> `isOmnichannelRoom(room)` helper"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236341525, 'comment_body': ""\n```suggestion\n\t\t_id: 'initiate-livechat-verification-process',\n```\n"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236381680, 'comment_body': 'I recommend looking into [internal services](https://developer.rocket.chat/open-source-projects/server/server-architecture#internal-services) to better organize this code. My suggestion would be to create a new internal service [here](https://github.com/RocketChat/Rocket.Chat/tree/develop/apps/meteor/server/services) - something like.. `omnichannel-verification` and add all the logic here there. ', 'comment_created': datetime.datetime(2023, 6, 21, 5, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236390518, 'comment_body': 'This overrides existing data on these props. Imagine if this room has some previous tags, then those would be overriden. \n\nHow about if we create a new method to LivechatRooms model to only update ""verificationStatus"" prop', 'comment_created': datetime.datetime(2023, 6, 21, 5, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236392013, 'comment_body': ""Like I mentioned before, let's move this to an API"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236408801, 'comment_body': ""We'll also need to handle the case where admin's have not yet setup their email server. In such case we should keep the verification button disabled until the admin has setup the from emails"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236413248, 'comment_body': 'This can also be moved to an internal service', 'comment_created': datetime.datetime(2023, 6, 21, 5, 54, 53, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236414223, 'comment_body': 'And this too can be moved to a service', 'comment_created': datetime.datetime(2023, 6, 21, 5, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236416536, 'comment_body': 'Please use the logger module instead of console logs', 'comment_created': datetime.datetime(2023, 6, 21, 5, 56, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236419079, 'comment_body': ""\n```suggestion\n\t\tthrow new Error('error-invalid-user');\n```\n\nNo need to use Meteor.Error. We can the normal error object which is more simplyfied. Just make sure the error string (i.e. 'error-invalid-user') has a valid translation within en.i18n.json file"", 'comment_created': datetime.datetime(2023, 6, 21, 5, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236420572, 'comment_body': '\n```suggestion\n```', 'comment_created': datetime.datetime(2023, 6, 21, 6, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236421046, 'comment_body': ""let's switch to using logger package"", 'comment_created': datetime.datetime(2023, 6, 21, 6, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1236422087, 'comment_body': '\n```suggestion\n```', 'comment_created': datetime.datetime(2023, 6, 21, 6, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251544344, 'comment_body': 'Instead of creating this new callback, I think we can re-use the existing ""afterSaveMessage"" callback and check from these room conditions over there', 'comment_created': datetime.datetime(2023, 7, 4, 6, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251555042, 'comment_body': '\n```suggestion\n\tunverified = \'unverified\',\n```\nWDYT about renaming this state? Also wouldn\'t this also have ""Verified"" state?', 'comment_created': datetime.datetime(2023, 7, 4, 6, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251566661, 'comment_body': ""Let's revisit this. After giving this an another look, I see some potential issues if we store the status of verification on Visitor level. A visitor can start multiple chats at the same time and there can be a case where the visitor only completes the verification on one of the chat's. In this case, we should only show the room where the visitor has completed the verification as an verified room. Rest of the opened chats should still be considered unverified.\n\nLet me know your thoughts on this or have further questions"", 'comment_created': datetime.datetime(2023, 7, 4, 6, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251567534, 'comment_body': ""Same comment applies here as well -> https://github.com/RocketChat/Rocket.Chat/pull/29590#discussion_r1251566661 \nLet's move this to room level as well"", 'comment_created': datetime.datetime(2023, 7, 4, 6, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251572439, 'comment_body': 'We can move the logic to generate OTP and expiration time to a helper function and make this function more readable', 'comment_created': datetime.datetime(2023, 7, 4, 6, 50, 47, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251574046, 'comment_body': '\n```suggestion\n\t\tconst visitor = await LivechatVisitors.findOneById(visitorId, {\n\t\t\tprojection: {\n\t\t\t\tvisitorEmails: 1,\n\t\t\t},\n\t\t});\n```\n\nWe can make use of projection to only query the fields that we require in the memory during runtime', 'comment_created': datetime.datetime(2023, 7, 4, 6, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251574959, 'comment_body': 'Please ensure that you remove this and this would leak the codes', 'comment_created': datetime.datetime(2023, 7, 4, 6, 53, 33, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251575513, 'comment_body': 'This seems like a great place to use `Promise.all()`', 'comment_created': datetime.datetime(2023, 7, 4, 6, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251579657, 'comment_body': '\n```suggestion\n```', 'comment_created': datetime.datetime(2023, 7, 4, 6, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251590801, 'comment_body': ""I won't recommend using useEffect for checking verification status as it can lead to unknown states due to re-rendering. Instead we can make use of Tanstack's useQuery() to fetch visitor info from visitors.info. \nPS: Considering my other suggestion in regards to storing the verification status on Room level, you might have to fetch this info from an another endpoint"", 'comment_created': datetime.datetime(2023, 7, 4, 7, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1251592017, 'comment_body': 'Can we move this to the service as well?', 'comment_created': datetime.datetime(2023, 7, 4, 7, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1266235690, 'comment_body': ""\n```suggestion\n\t\tif (room.verificationStatus === RoomVerificationState.isListeningToEmail) {\n```\nLet's use the enum we had for this"", 'comment_created': datetime.datetime(2023, 7, 18, 5, 19, 46, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1266235794, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 7, 18, 5, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1266237603, 'comment_body': '?', 'comment_created': datetime.datetime(2023, 7, 18, 5, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1266240880, 'comment_body': ""A small suggesion: Let's try to group all the fields we're adding for this feature and also include a comment mentioning that they are being used for this particular feature. This would go a long way in helping any beginers get started"", 'comment_created': datetime.datetime(2023, 7, 18, 5, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1266241391, 'comment_body': ""\n```suggestion\n\t\tthis.logger = new Logger('Omni-Verfication');\n```"", 'comment_created': datetime.datetime(2023, 7, 18, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1273827663, 'comment_body': ""Sorry if I'm missing something here but wouldn't there always be a single verification code at a time? If so, then Y are we storing this as an array and not a simple object?"", 'comment_created': datetime.datetime(2023, 7, 25, 16, 43, 35, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}]","[{'commit_sha': 'f3fbebb2431d2736086abeee14aa00dc28259a44', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57e85b8a3faa14cdb7575332eeebb2e254a983c2', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd757913ae5c69736ecfd04110683382882aca531', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c34d44eaeb3bc9cb80b3aad4efa5b7827bf73dd6', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '082ef11d03335c1900234eb5d9762a8830878b9f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3542cd589b99b58ee103cb168bccc04ed8b026de', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b82d79f2fe11df6eb768d669513b711d95efed3', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7006f6bfb50a79edb0e83f0d698f6a2e9112ec4b', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cead4b9583c21f3218d3059e0532c23791088b5', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a159cb383ca1f9987a89305ac4ea4bd1089a1f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f5bb53e616461ab6813abdca14a9178180f7440', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4ea4cfdcd58eb3fa5e420f5db4134cfbf9e36d0', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '832d49602474d93a6773bc6f7dc436c73d15a990', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68d6283106ecfcc852ef72ca540fed9ebeb81fe', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b82d7c9499148c37d076f55f8a17972c7173ad', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96817833f501547d74f178c73c7d8172a39aa09d', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d2d11942dced7bd78c7cfcfc7b3277946ec884', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f889cc6358ec1c6a95208404424c71a4cfefaba', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6686ac4c1168d7a7b6cab1f7287a019c97e8e4fe', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7a27123c93b7fd20d93d4ae128d82cb2eb28dd', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bb96cef0411c42ef9ab9924b65d8dbc55fece92', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c4ddd790a765cfd505021e3fee8f659dd14066', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '226316c367588ecc569bf727caab2a04dae861e7', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2eefd6b12a04c595810ad43f5a09cd3045446d5', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ed77423bce3ef64ed12a237c7022e919b96db95', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a0a74c726c0288c62f003dc1d586954229f489e', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '184888ab26fe28d05d1d987e850da37cc7db8a9e', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5954c73e88bf87d8716bf170742786678adf5231', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61a64615f806d6f94a6f4530a3b30e1d403ea0dc', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e98ded547caf20a780f58b5210caa410c68652', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5305682ffe8fc3e4b5d927f4d0879614a1679751', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cb7ddc902cf6b3f56718cf913ee9762d0caa610', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef936ef124b768d53fda60ffb456ec749c7b7ee4', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb0a39db921988c301a369bc2215f936eb55b38a', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c7973b4bfe9d2bd112cfeddd6db2ee05cd67b6f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5dcdeb5dac0fa9b83ca7f3a127766a52f55be47', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51ed20244c08b62fb5b67f4e50cc44aca689fa50', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}]",Disha Bhardwaj,67470541,,User,,25,,4,11
1477991364,feat: Omnichannel verification for omnichannel apps and livechat widget,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

<!-- Your Pull Request name should start with one of the following tags
  feat: Adding a new feature
  refactor: A code change that doesn't change behavior (it doesn't add anything and doesn't fix anything)
  fix: For bug fixes that affect the end-user
  chore: For small tasks
  docs: For documentation
  ci: For updating CI configuration
  test: For adding tests
  i18n: For updating any translations
  regression: Issues created/reported/fixed during the development phase. kind of problem that never existed in production and that we don't need to list in a changelog for the end user
-->

<!-- Checklist!!! If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. 
  - I have read the Contributing Guide - https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat doc
  - I have signed the CLA - https://cla-assistant.io/RocketChat/Rocket.Chat
  - Lint and unit tests pass locally with my changes
  - I have added tests that prove my fix is effective or that my feature works (if applicable)
  - I have added necessary documentation (if applicable)
  - Any dependent changes have been merged and published in downstream modules
-->

## Proposed changes (including videos or screenshots)
Introduced manual omnichannel verification for omnichannel apps and livechat widget, along with 'Resend OTP' feature and automated chat closure upon repeated incorrect input.

![image](https://github.com/RocketChat/Rocket.Chat/assets/67470541/ca35f952-76ef-4557-af1f-7c5962076951)

Livechat widget
![image](https://github.com/RocketChat/Rocket.Chat/assets/67470541/6a44a491-fb20-4de4-9d33-bc7cb27cfd14)


## Issue(s)
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## Steps to test or reproduce
1. Go to omnichannel, join an open room 
2. Click on verify user button from quick action buttons.
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,30105,https://api.github.com/repos/RocketChat/Rocket.Chat/pulls/30105,https://github.com/RocketChat/Rocket.Chat/pull/30105,closed,170,77,7,50,2,8,1,0,[{'name': 'gsoc-project'}],2023-08-16 19:45:40+00:00,2023-08-25 07:30:52+00:00,733512.0,"8 days, 11:45:12","[{'comment_id': 1299613644, 'comment_body': ""```suggestion\r\n\t\t\t\t\t} else {\r\n```\r\nI believe we'd need to make this an else since there can be other non-app related channels like SMS where we'd need to send these messages"", 'comment_created': datetime.datetime(2023, 8, 21, 5, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299641341, 'comment_body': 'Missing translation', 'comment_created': datetime.datetime(2023, 8, 21, 5, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299648632, 'comment_body': 'This should be outside promise.all since we should only send the confirmation message once all the operations in these promise is a success. ', 'comment_created': datetime.datetime(2023, 8, 21, 6, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299649320, 'comment_body': ""\n```suggestion\n                ...[\n\t\t\t\t\temailCode && _isWrongOTP\n\t\t\t\t\t\t? emailCode.map(({ code }) => LivechatRooms.removeEmailCodeByRoomIdAndCode(room._id, code))\n\t\t\t\t\t\t: Promise.resolve(),\n\t\t\t\t],\n```\nDidn't like this pattern tbh of Promise.all inside another promise.all. How about something like this?"", 'comment_created': datetime.datetime(2023, 8, 21, 6, 9, 28, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299649657, 'comment_body': '\n```suggestion\n\t\t\t} else {\n```', 'comment_created': datetime.datetime(2023, 8, 21, 6, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299649793, 'comment_body': 'same here', 'comment_created': datetime.datetime(2023, 8, 21, 6, 10, 7, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1303844508, 'comment_body': ""We can cache this in-memory so we don't have to make a DB call for every message. Here's a reference for similar pattern -> https://github.com/RocketChat/Rocket.Chat/blob/a19d5d54b2e1872816d9d3111099d48d1abef4ea/apps/meteor/ee/app/livechat-enterprise/server/hooks/afterInquiryQueued.ts#L8"", 'comment_created': datetime.datetime(2023, 8, 24, 6, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1303846277, 'comment_body': '```suggestion\r\n```\r\n\r\nI was recommending removing this and moving it after promise.all', 'comment_created': datetime.datetime(2023, 8, 24, 6, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}]","[{'commit_sha': 'f3fbebb2431d2736086abeee14aa00dc28259a44', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57e85b8a3faa14cdb7575332eeebb2e254a983c2', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd757913ae5c69736ecfd04110683382882aca531', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c34d44eaeb3bc9cb80b3aad4efa5b7827bf73dd6', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '082ef11d03335c1900234eb5d9762a8830878b9f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3542cd589b99b58ee103cb168bccc04ed8b026de', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b82d79f2fe11df6eb768d669513b711d95efed3', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7006f6bfb50a79edb0e83f0d698f6a2e9112ec4b', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cead4b9583c21f3218d3059e0532c23791088b5', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44a159cb383ca1f9987a89305ac4ea4bd1089a1f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f5bb53e616461ab6813abdca14a9178180f7440', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4ea4cfdcd58eb3fa5e420f5db4134cfbf9e36d0', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '832d49602474d93a6773bc6f7dc436c73d15a990', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd68d6283106ecfcc852ef72ca540fed9ebeb81fe', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90b82d7c9499148c37d076f55f8a17972c7173ad', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96817833f501547d74f178c73c7d8172a39aa09d', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d2d11942dced7bd78c7cfcfc7b3277946ec884', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f889cc6358ec1c6a95208404424c71a4cfefaba', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6686ac4c1168d7a7b6cab1f7287a019c97e8e4fe', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7a27123c93b7fd20d93d4ae128d82cb2eb28dd', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bb96cef0411c42ef9ab9924b65d8dbc55fece92', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64c4ddd790a765cfd505021e3fee8f659dd14066', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '226316c367588ecc569bf727caab2a04dae861e7', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2eefd6b12a04c595810ad43f5a09cd3045446d5', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ed77423bce3ef64ed12a237c7022e919b96db95', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a0a74c726c0288c62f003dc1d586954229f489e', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '184888ab26fe28d05d1d987e850da37cc7db8a9e', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5954c73e88bf87d8716bf170742786678adf5231', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61a64615f806d6f94a6f4530a3b30e1d403ea0dc', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14e98ded547caf20a780f58b5210caa410c68652', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5305682ffe8fc3e4b5d927f4d0879614a1679751', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cb7ddc902cf6b3f56718cf913ee9762d0caa610', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef936ef124b768d53fda60ffb456ec749c7b7ee4', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb0a39db921988c301a369bc2215f936eb55b38a', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c7973b4bfe9d2bd112cfeddd6db2ee05cd67b6f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5dcdeb5dac0fa9b83ca7f3a127766a52f55be47', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02aacf6b7804a9b2664789dfee49c5ae4bd30139', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9247770c86fa8015e396845b2b81fe74117333a', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0a5ef51364a218488914548cdb970f199378106', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f989f868e6e572bbb1f171b7359137e4ed58e60f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '252b5c28132fd7a1082310b3a65fd89ce88c89b2', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8837db406244317fcc156b359bd188283ed10cda', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd3f8e4fd16485fd938d084d86b88d26d8c3eb04', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88670c62f3c37f118b35fb6b14de2d4e6775eb28', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92b86e182961bca4288b1ade0f5ff55ebefa6692', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e45e08d7df8d5ed155e14b70c2bbc7891cedbdd', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a99b4602a96855d10fbc89a2d377fef831dcb17b', 'committer_username': 'murtaza98', 'committer_name': 'Murtaza Patrawala', 'committer_email': None, 'commit_date': datetime.datetime(2017, 11, 30, 13, 20, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97a9dedd4c4fcf03181ef17c885249adeb201318', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63888c62c3793c1646a42626ee96370c3b712d4f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22c306376aca76a25782d2e426e3ae5b650e42a4', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}]",Disha Bhardwaj,67470541,,User,,25,,4,11
1481512982,feat: Hide chat console during verification process in Omnichannel rooms,"
## Proposed changes (including videos or screenshots)
During the omnichannel verification process, the chat console will be concealed, and in its place, a message footer will be presented. This footer will include a ""Cancel Verification"" button.

https://github.com/RocketChat/Rocket.Chat/assets/67470541/e44efbe7-2c70-424c-b580-47f499a05d00


## Issue(s)
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## Steps to test or reproduce
1. Go to omnichannel, join an open room
2. Click on verify user button from quick action buttons.

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,30123,https://api.github.com/repos/RocketChat/Rocket.Chat/pulls/30123,https://github.com/RocketChat/Rocket.Chat/pull/30123,closed,98,15,7,5,2,7,0,0,[],2023-08-19 16:04:22+00:00,2023-08-23 13:48:14+00:00,337432.0,"3 days, 21:43:52","[{'comment_id': 1299572053, 'comment_body': 'Is it possible to make this a red considering it falls under danger action?', 'comment_created': datetime.datetime(2023, 8, 21, 3, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299572271, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 3, 54, 32, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1299577838, 'comment_body': 'Instead of spreading all the endpoints created for this verification feature across multiple files, how about we group all of them together and put them in a single file?', 'comment_created': datetime.datetime(2023, 8, 21, 4, 2, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1300900504, 'comment_body': ""Could you check if we really need to do this override within this generic component? My understanding is that since `props.danger` is added after primary, it'd take precedence over primary and the button would be displayed as red."", 'comment_created': datetime.datetime(2023, 8, 22, 4, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1300900886, 'comment_body': 'Just tested this locally with the old code and just ""danger"" prop set and found it working as expected', 'comment_created': datetime.datetime(2023, 8, 22, 4, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1300994101, 'comment_body': 'It didn’t worked out for me so that’s why I tried this one. ', 'comment_created': datetime.datetime(2023, 8, 22, 5, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bhardwajdisha', 'type': 'User'}, {'comment_id': 1301555737, 'comment_body': ""That's odd! Let's debug this on our call today"", 'comment_created': datetime.datetime(2023, 8, 22, 12, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}]","[{'commit_sha': '0b9c66c7d7150d4c4f976ba0c9f5de2c74ccbf4d', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3976da2d6850c03f4ae3ebbe4b72e898ca99821f', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '938f592031f40215bb26d757ed4c95936c24f647', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a6a940278b8cd7393843f9cc3227403ebee9bc6', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca75dfa2e3970b504183676b8298b12b03274392', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}]",Disha Bhardwaj,67470541,,User,,25,,4,11
1512610105,feat: Automate omnichannel verification process,"
## Proposed changes (including videos or screenshots)
Implemented a new setting that enables administrators to automate the verification process for Omnichannel conversations. This ensures that user verification takes place prior to engaging with agents.

https://github.com/RocketChat/Rocket.Chat/assets/67470541/f058ade6-897c-4c40-a762-5a28e50cdbe8

-09.mp4…
<!-- END CHANGELOG -->

## Issue(s)
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## Steps to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->
1. Enable setting 'Livechat_automate_verification_process' : Settings>Omnichannel>Livechat_automate_verification_process
2.  Go to livechat widget/app.
3. Initiate a new conversation

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,30368,https://api.github.com/repos/RocketChat/Rocket.Chat/pulls/30368,https://github.com/RocketChat/Rocket.Chat/pull/30368,closed,162,6,14,3,2,4,0,0,[],2023-09-12 18:34:34+00:00,2023-09-14 13:45:33+00:00,155459.0,"1 day, 19:10:59","[{'comment_id': 1324016742, 'comment_body': ""```suggestion\r\n\t\t\tconst username = bot?.username || 'rocket.cat';\r\n```\r\nIsn't this the default username for the bot?"", 'comment_created': datetime.datetime(2023, 9, 13, 6, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1324020633, 'comment_body': 'Aren\'t these props nested under ""projection""? Like this:\r\n```\r\nLivechatRooms.findOneById<Pick<ILivechatRoom, \'_id\' | \'v\' | ....>(roomId, {\r\n\t\t\tprojection: {\r\n\t\t\t\t_id: 1,\r\n\t\t\t\tv: 1,\r\n\t\t\t\tservedBy: 1,\r\n\t\t\t\topen: 1,\r\n\t\t\t\tdepartmentId: 1,\r\n\t\t\t}\r\n\t\t});\r\n```', 'comment_created': datetime.datetime(2023, 9, 13, 6, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1324021330, 'comment_body': 'Please convert this to an error code which can be translated on UI', 'comment_created': datetime.datetime(2023, 9, 13, 6, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}, {'comment_id': 1324021981, 'comment_body': ""```suggestion\r\n\ttransferChatAfterVerificationProcess(roomId: IRoom['_id']): Promise<void>;\r\n```\r\nSmall typo"", 'comment_created': datetime.datetime(2023, 9, 13, 6, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'murtaza98', 'type': 'User'}]","[{'commit_sha': '6d787f48457d9eabddfc6af2996185cfe1229397', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c6a843bf8bb6755c2806e0cb3559afbc59c54a9', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc5c95ca141b6f00a1a9d51adf6b87509e4cb8c3', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}]",Disha Bhardwaj,67470541,,User,,25,,4,11
1518901268,feat: Verification check filter for Omnichannel rooms,"## Proposed changes (including videos or screenshots)
Implemented a verification check filter to sort chats based on the room's verification status.

https://github.com/RocketChat/Rocket.Chat/assets/67470541/7ed12fca-898c-402e-bbb9-d73e4ffff8d6

<!-- CHANGELOG -->
<!--
  Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request.
  If it fixes a bug or resolves a feature request, be sure to link to that issue below.
  This description will appear in the release notes if we accept the contribution.
-->

<!-- END CHANGELOG -->

## Issue(s)
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## Steps to test or reproduce
1. Go to /omnichannel/current
2. Filter the chats according to the categories available in the ""Verification Check"" dropdown section.
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,30420,https://api.github.com/repos/RocketChat/Rocket.Chat/pulls/30420,https://github.com/RocketChat/Rocket.Chat/pull/30420,closed,53,9,9,6,2,0,0,0,[],2023-09-18 06:35:49+00:00,2023-09-18 12:49:45+00:00,22436.0,6:13:56,[],"[{'commit_sha': '6d787f48457d9eabddfc6af2996185cfe1229397', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c6a843bf8bb6755c2806e0cb3559afbc59c54a9', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc5c95ca141b6f00a1a9d51adf6b87509e4cb8c3', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13f435d6701093d3e0a789c60d80f728861ae19e', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b49aff1f58408027c51c0a6b0249c5f310816e1', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08fe147031a60a34da7487a7670e614783096d80', 'committer_username': 'bhardwajdisha', 'committer_name': 'Disha Bhardwaj', 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 26, 13, 37, 52, tzinfo=datetime.timezone.utc)}]",Disha Bhardwaj,67470541,,User,,25,,4,11

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
35866694,Rocket.Chat,RocketChat/Rocket.Chat,TypeScript,10225,39792,881,1005,25975,3100,951,595,"[{'id': 1527620959, 'number': 30481, 'closed': datetime.datetime(2023, 9, 26, 4, 38, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 24, 6, 55, 10, tzinfo=datetime.timezone.utc), 'time_taken': 164588.0, 'time_delta': '1 day, 21:43:08', 'additions': 18797, 'deletions': 7622, 'state': 'closed'}, {'id': 1518901268, 'number': 30420, 'closed': datetime.datetime(2023, 9, 18, 12, 49, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 18, 6, 35, 49, tzinfo=datetime.timezone.utc), 'time_taken': 22436.0, 'time_delta': '6:13:56', 'additions': 53, 'deletions': 9, 'state': 'closed'}, {'id': 1512610105, 'number': 30368, 'closed': datetime.datetime(2023, 9, 14, 13, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 18, 34, 34, tzinfo=datetime.timezone.utc), 'time_taken': 155459.0, 'time_delta': '1 day, 19:10:59', 'additions': 162, 'deletions': 6, 'state': 'closed'}, {'id': 1481512982, 'number': 30123, 'closed': datetime.datetime(2023, 8, 23, 13, 48, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 16, 4, 22, tzinfo=datetime.timezone.utc), 'time_taken': 337432.0, 'time_delta': '3 days, 21:43:52', 'additions': 98, 'deletions': 15, 'state': 'closed'}, {'id': 1477991364, 'number': 30105, 'closed': datetime.datetime(2023, 8, 25, 7, 30, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 19, 45, 40, tzinfo=datetime.timezone.utc), 'time_taken': 733512.0, 'time_delta': '8 days, 11:45:12', 'additions': 170, 'deletions': 77, 'state': 'closed'}, {'id': 1400384902, 'number': 29590, 'closed': datetime.datetime(2023, 8, 14, 13, 19, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 19, 12, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4730791.0, 'time_delta': '54 days, 18:06:31', 'additions': 547, 'deletions': 8, 'state': 'closed'}, {'id': 1285505384, 'number': 28544, 'closed': None, 'created': datetime.datetime(2023, 3, 22, 9, 19, 14, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 414, 'deletions': 42, 'state': 'open'}, {'id': 1273826460, 'number': 28402, 'closed': None, 'created': datetime.datetime(2023, 3, 13, 19, 11, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 8, 'deletions': 2, 'state': 'open'}, {'id': 1265224332, 'number': 28302, 'closed': datetime.datetime(2023, 3, 15, 20, 32, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 21, 51, 44, tzinfo=datetime.timezone.utc), 'time_taken': 772874.0, 'time_delta': '8 days, 22:41:14', 'additions': 1, 'deletions': 4, 'state': 'closed'}, {'id': 1265124043, 'number': 28301, 'closed': datetime.datetime(2023, 7, 20, 20, 26, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 20, 23, 7, tzinfo=datetime.timezone.utc), 'time_taken': 11750602.0, 'time_delta': '136 days, 0:03:22', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 1264481645, 'number': 28293, 'closed': datetime.datetime(2023, 3, 15, 13, 3, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 13, 26, 2, tzinfo=datetime.timezone.utc), 'time_taken': 776253.0, 'time_delta': '8 days, 23:37:33', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 1263557665, 'number': 28285, 'closed': datetime.datetime(2023, 3, 10, 13, 43, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 5, 21, 55, 56, tzinfo=datetime.timezone.utc), 'time_taken': 402443.0, 'time_delta': '4 days, 15:47:23', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1263027692, 'number': 28276, 'closed': datetime.datetime(2023, 3, 14, 2, 5, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 10, 13, 15, tzinfo=datetime.timezone.utc), 'time_taken': 834726.0, 'time_delta': '9 days, 15:52:06', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1262974704, 'number': 28272, 'closed': datetime.datetime(2023, 3, 6, 13, 6, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 6, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 195146.0, 'time_delta': '2 days, 6:12:26', 'additions': 5, 'deletions': 0, 'state': 'closed'}]"
