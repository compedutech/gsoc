pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1377093613,[WIP] Implement Github Actions CI/CD Pipeline,"## Purpose

This project aims to stabilize the project and its code repository as there are multiple dependencies so, this will also help in reducing problems and blockers while setting up this project locally and also setting up the pipeline and checks for the PR to be merged into the master.

## Abstract

### Graphspace dependency issues
Resolve blockers and issues while setting up GraphSpace locally and running this project for eg. upgrading versions of some libraries, resolving requirements.txt file by adding all remaining libraries, installation issues, etc.

### Create a Dockerfile
Creating a docker file for this project which provides a suitable environment for running this project with all required dependencies. Create a docker-compose file that helps us to run this project in Github action workflows and create this image and also helps us to run this locally with minimal setup.

### Setup GitHub Actions
Set up the workflow for the GitHub actions which will provide a suitable environment for running this project and no PR can be merged without the jobs and checks being successful in the workflow. On every pull request and for every commit in the PR, the GitHub actions should trigger all the workflows and jobs written for this project.

## Support Added   

### Run Graphspace Locally with Postgres & Elasticsearch using the docker-compose file

![download](https://github.com/Murali-group/GraphSpace/assets/60398112/53af69d1-226b-4aa1-a523-a8be1a5c1c59)

### Added a Deploy workflow to succesfully deploy the Docker image to AWS ECR Instance 

![cicd](https://github.com/Murali-group/GraphSpace/assets/60398112/ff13d2bf-d0bb-4635-998a-ad388034547b)

![ECR_Deploy](https://github.com/Murali-group/GraphSpace/assets/60398112/9ca465df-f401-46bb-879a-96b36538845d)

### Other Workflows

#### 1) Deploy Image to Dockerhub as soon as something gets merged to master branch

![Dockerhub_deploy](https://github.com/Murali-group/GraphSpace/assets/60398112/55a7f513-100c-47eb-9365-c5dc0d6d000b)

#### 2) Issue Labeler: labels issue as soon as somebody creates an issue (labels issue with the issue description) 

![Issue_labeler](https://github.com/Murali-group/GraphSpace/assets/60398112/15e17d44-26d1-4ad7-93c3-dedce41067e5)


#### 3) Pull_Request Labeler: Labels PR with the no of lines and branch name head 

![PR_labeler](https://github.com/Murali-group/GraphSpace/assets/60398112/76702e1f-3810-4d95-b6a9-922ca92d255a)

#### 4) Adds Reviewer as soon as somebody creates a Pull Request on the repository

![Reviwers](https://github.com/Murali-group/GraphSpace/assets/60398112/ffff64bf-c0fe-4e67-86b0-7bdcf440d6ad)

#### 5) Trivy Scanner to scan docker image and print out the results 

![Trivy_Scanner](https://github.com/Murali-group/GraphSpace/assets/60398112/fd45d065-4dc0-42aa-92fd-015c2550b6c3)
",False,465,https://api.github.com/repos/Murali-group/GraphSpace/pulls/465,https://github.com/Murali-group/GraphSpace/pull/465,open,370,10,21,20,0,9,0,0,[],2023-06-03 16:10:41+00:00,,0.0,,"[{'comment_id': 1233063746, 'comment_body': 'it should run on every commit and only publish image if its merged', 'comment_created': datetime.datetime(2023, 6, 17, 13, 34, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285067419, 'comment_body': 'Put comments in steps', 'comment_created': datetime.datetime(2023, 8, 5, 14, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285067512, 'comment_body': 'Explain jobs and steps for future understanding', 'comment_created': datetime.datetime(2023, 8, 5, 14, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285067618, 'comment_body': 'Comments ', 'comment_created': datetime.datetime(2023, 8, 5, 14, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285067758, 'comment_body': 'Put some prefixes that will help in future to distinguish images like gs- or rc- etc', 'comment_created': datetime.datetime(2023, 8, 5, 14, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285067817, 'comment_body': 'Put some prefixes that will help in future to distinguish images like gs- or rc- etc same like above', 'comment_created': datetime.datetime(2023, 8, 5, 14, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285068203, 'comment_body': 'Comment its temporary until all library versions upgraded, currently we have to forcefully put the version', 'comment_created': datetime.datetime(2023, 8, 5, 14, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285068383, 'comment_body': 'Put comment why we using libxml or libxslt etc so in future easy to get context', 'comment_created': datetime.datetime(2023, 8, 5, 14, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}, {'comment_id': 1285068843, 'comment_body': 'Remove this in future', 'comment_created': datetime.datetime(2023, 8, 5, 14, 41, 51, tzinfo=datetime.timezone.utc), 'commenter': 'yash170106065', 'type': 'User'}]","[{'commit_sha': 'efa207d588dea968e214f27bbabf8f0a350db756', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e258f1e97e910740c8f095bcaa59d2418afff5f5', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b93870bb7eb66119eea9466a78793bc0236d00d', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd29202467559c5dac951ef1b52514019ad2919fe', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efee21fe712fcaa4a9c80f407da656ecea53b97b', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cfc7b083de25bc9a6c92dbc3948403022af0869', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d1336bc8c867b830db6220eb57b55413391b6be', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9249d895276a8aab1dff11d00c6a310fd1e908ee', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ce6e9b562ab5577f98ae94e07cde1234312796', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc653d8708dfc3445045bca907e8e4b6b2b17ac4', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20fa48532659bc1a2c0fd044397a3127f6cb695a', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acf602bfb5635936b86c5cf696e97945f6afabca', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c5b156a2b6b99f7dbda6b3fb55a19ef2cef598e', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2910aba7dd0ec06746ffea49ff953653b488c1b5', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8155996effe8746fb5e1d6309cc99a278eaa3ae', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95d2d234e75e2d67cc92b3964a36f3e60088bfa9', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a41879e3002a0b982b983a506828a47738982c38', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ca29189eac33f9f6054a32cdf0e508cd12eeec5', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f4cb0f2936371559cfe009efdbb117ffe6ca36d', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55c98122f85eb4f7490785517680f94f74aae00d', 'committer_username': 'maheshkasabe', 'committer_name': 'Mahesh Kasbe', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 28, 16, 3, 2, tzinfo=datetime.timezone.utc)}]",Mahesh Kasbe,60398112,,User,,75,,3,16

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
26179496,GraphSpace,Murali-group/GraphSpace,Python,41,30,14,28,1116,104,23,22,"[{'id': 1464209334, 'number': 466, 'closed': datetime.datetime(2023, 8, 6, 17, 1, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 6, 17, 1, 26, tzinfo=datetime.timezone.utc), 'time_taken': 32.0, 'time_delta': '0:00:32', 'additions': 294, 'deletions': 4, 'state': 'closed'}, {'id': 1377093613, 'number': 465, 'closed': None, 'created': datetime.datetime(2023, 6, 3, 16, 10, 41, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 370, 'deletions': 10, 'state': 'open'}, {'id': 1374168232, 'number': 464, 'closed': datetime.datetime(2023, 6, 3, 14, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 14, 5, 20, tzinfo=datetime.timezone.utc), 'time_taken': 175924.0, 'time_delta': '2 days, 0:52:04', 'additions': 7, 'deletions': 4, 'state': 'closed'}]"
