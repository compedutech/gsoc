pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1026417933,Seeding new repository,"# ðŸŽ‰ New feature

New package implementation of https://github.com/gazebosim/gz-sim/pull/1582

Depends on https://github.com/gazebosim/gz-cmake/pull/262

## Summary
This pull request is regarding my GSoC project, which you can visit [here](https://community.gazebosim.org/t/gsoc-2022-tools-for-creating-new-ignition-projects/1321/10). The idea is to create an ignition subcommand that can create a template ignition package based on the user's demands.

 Gazebo Package Create provides a subcommand that creates various template repositories based on users' requirements. The tool uses Embedded Ruby files to create various templates. You can get a list of currently supported arguments at [tutorials](https://github.com/harshmahesheka/gz_pkg_create/blob/main/TUTORIALS.md).

Other than this my other contribution on which this pr depends is CMake Macros for helping in the creation of new gazebo packages. You can find the code and details of that [here](https://github.com/gazebosim/gz-cmake/pull/262) .

## Test it
Build this repo with its dependencies and run ign pkg_create --help to see various options.

## Checklist
- [x] Signed all commits for DCO
- [ ] Added tests
- [x] Added example and/or tutorial
- [x] Updated documentation (as needed)
- [ ] Updated migration guide (as needed)
- [ ] Consider updating Python bindings (if the library has them)
- [ ] `codecheck` passed (See [contributing](https://gazebosim.org/docs/all/contributing#contributing-code))
- [ ] All tests passed (See [test coverage](https://gazebosim.org/docs/all/contributing#test-coverage))
- [ ] While waiting for a review on your PR, please help review [another open pull request](https://github.com/pulls?q=is%3Aopen+is%3Apr+user%3Agazebosim+archived%3Afalse+) to support the maintainers

**Note to maintainers**: Remember to use **Squash-Merge** and edit the commit message to match the pull request summary while retaining `Signed-off-by` messages.",True,1,https://api.github.com/repos/gazebosim/gz_pkg_create/pulls/1,https://github.com/gazebosim/gz_pkg_create/pull/1,closed,2323,0,24,9,1,23,0,0,[],2022-08-15 12:43:38+00:00,2022-08-31 14:56:40+00:00,1390382.0,"16 days, 2:13:02","[{'comment_id': 947587963, 'comment_body': ""We don't need to use 'dl' as we aren't loading any C++."", 'comment_created': datetime.datetime(2022, 8, 17, 8, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 947589712, 'comment_body': 'These will eventually become gz macros.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 947599793, 'comment_body': 'Fiddle is also a library only used when loading ruby plugins.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 947602625, 'comment_body': 'This bit is hard coded, why not have a separate config? For instance in the templates folder have a file called `template.yaml` inside this we could have somthing like:\r\n```\r\ninit-with-example-systems:\r\n  - include_files: [""executables/random_points.cc"", ....]\r\nament_package:\r\n  - include_files: [""file_x"", ""file_y""...]\r\nsome_other_future_config:\r\n  - ... \r\n```\r\nThen when its an erb file we run it through a struct.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 947607664, 'comment_body': 'Hmm maybe we should explore a GEM file as an alternative if we have time.', 'comment_created': datetime.datetime(2022, 8, 17, 8, 30, 17, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 947608015, 'comment_body': 'Knit: newline at EOF', 'comment_created': datetime.datetime(2022, 8, 17, 8, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 947608736, 'comment_body': 'TODO: we need to handle the change for garden where everything is `gz-`', 'comment_created': datetime.datetime(2022, 8, 17, 8, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 952360121, 'comment_body': 'Done\r\n', 'comment_created': datetime.datetime(2022, 8, 23, 9, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952360253, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 23, 9, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952361416, 'comment_body': 'Sure,once we finish this in fortress we can see for that', 'comment_created': datetime.datetime(2022, 8, 23, 9, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952361634, 'comment_body': 'Done\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 23, 9, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952362023, 'comment_body': 'We will migrate it once we finish it for fortress', 'comment_created': datetime.datetime(2022, 8, 23, 9, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952363485, 'comment_body': 'It will be pretty much same thing, for new options we will have to add that variable everywhere\r\n', 'comment_created': datetime.datetime(2022, 8, 23, 9, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952363887, 'comment_body': 'We can look into it after this, I guess?\r\n', 'comment_created': datetime.datetime(2022, 8, 23, 9, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 952370244, 'comment_body': 'No it will not. Having a yaml file allows for separation of concern and generalises the tool. Having someone hard code these values and expecting them to go and fix them is a nightmare for a maintainer.', 'comment_created': datetime.datetime(2022, 8, 23, 9, 21, 38, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 955693411, 'comment_body': 'Knit: newline at eof.', 'comment_created': datetime.datetime(2022, 8, 26, 6, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 955700224, 'comment_body': 'Can these paths be moved to the config...', 'comment_created': datetime.datetime(2022, 8, 26, 6, 28, 28, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 955703080, 'comment_body': 'This is now at gazebo-tooling if Im not wrong. https://github.com/gazebo-tooling/gazebodistro', 'comment_created': datetime.datetime(2022, 8, 26, 6, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 955704017, 'comment_body': 'Any place where you are adding a string in code is considered hard-coding and should only be used as alast resort. I recommend specifying these files in the config itself.', 'comment_created': datetime.datetime(2022, 8, 26, 6, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 959209625, 'comment_body': 'Add youself and remember newline at end of file.', 'comment_created': datetime.datetime(2022, 8, 31, 6, 38, 46, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 959209808, 'comment_body': 'Newline at end of file', 'comment_created': datetime.datetime(2022, 8, 31, 6, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arjo129', 'type': 'User'}, {'comment_id': 959214574, 'comment_body': 'Ok', 'comment_created': datetime.datetime(2022, 8, 31, 6, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}, {'comment_id': 959218715, 'comment_body': 'Added', 'comment_created': datetime.datetime(2022, 8, 31, 6, 51, 55, tzinfo=datetime.timezone.utc), 'commenter': 'harshmahesheka', 'type': 'User'}]","[{'commit_sha': '7aca0abd3c863966600ecb2b8160c6ff9594a6a8', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbb03591a3fa791f79ce5fdda6d5ed511b6dcc0c', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1abfadc1d774a7595795f6a660778b59105a336e', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef24a8a9c6580639bb569a2f7e9e44cde2e3d9a8', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '524d1f0e202da6f7731a1eb9ab1b6845be221528', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdec1308d51931d82b1c4bfdb1fe36198e215250', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9159141f5842a597442e5dac6c4949bddd72533', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '358beac577eeff5a46339e0222b66f1edec80019', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d1bc8df8336de4707a967b4528b3aa7cf0ad33d', 'committer_username': 'harshmahesheka', 'committer_name': 'Harsh Mahesheka', 'committer_email': 'harsh.mahesheka.eee20@iitbhu.ac.in', 'commit_date': datetime.datetime(2021, 2, 3, 18, 36, 29, tzinfo=datetime.timezone.utc)}]",Harsh Mahesheka,78502324,harsh.mahesheka.eee20@iitbhu.ac.in,User,,24,,2,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
523245355,gz_pkg_create,gazebosim/gz_pkg_create,Ruby,2,1,5,2,2,1,1,1,"[{'id': 1075133737, 'number': 2, 'closed': None, 'created': datetime.datetime(2022, 10, 3, 19, 59, 56, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 68, 'deletions': 26, 'state': 'open'}, {'id': 1026417933, 'number': 1, 'closed': datetime.datetime(2022, 8, 31, 14, 56, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 12, 43, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1390382.0, 'time_delta': '16 days, 2:13:02', 'additions': 2323, 'deletions': 0, 'state': 'closed'}]"
