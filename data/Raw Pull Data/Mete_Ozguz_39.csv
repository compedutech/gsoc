pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1008586454,Add subcommands annotate and merge,"Merge part added/implemented to the genome-nexus-annotation-pipeline from https://github.com/genome-nexus/annotation-tools project

In order to do this. Subcommands added. Help outputs updated accordingly.

When **-h** passed as cli arguments help screen of annotate and merge will be printed
When **annotate -h** passed as cli arguments, help screen of annotate will be printed
When **merge-h** passed as cli arguments, help screen of merge will be printed
When subcommand is omitted, the default behavior is  annotate.


",True,204,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/204,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/204,closed,909,87,26,1,2,1,1,0,[{'name': 'enhancement'}],2022-07-26 14:17:12+00:00,2022-08-16 17:45:47+00:00,1826915.0,"21 days, 3:28:35","[{'comment_id': 947069077, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 17, 34, 11, tzinfo=datetime.timezone.utc), 'commenter': 'inodb', 'type': 'User'}]","[{'commit_sha': '71116e7496c1c07098fbcb8796397633342a2a98', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1031799585,Document CMD Help,CLI documentation with examples and verbosity,True,219,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/219,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/219,closed,130,14,1,1,0,0,0,0,[],2022-08-20 14:53:53+00:00,2022-08-23 17:15:07+00:00,267674.0,"3 days, 2:21:14",[],"[{'commit_sha': 'd51a5576d2cc050c07ea8be466e4336223e6e26e', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
973753779,Output format,"A possible solution for the issue #194

There are lots of empty columns in the output file. You will be able to use option-format option to supply an output format.
As an example, you can create a file with the following line:

Hugo_Symbol,Entrez_Gene_Id,Center,NCBI_Build,Chromosome

the application will only output these columns + any other column/s required by the application.
Order is preserved.

Currently, it only supports commas as the separator. You can use any number of spaces you like...
",True,198,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/198,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/198,closed,167,17,7,3,1,0,1,0,[{'name': 'enhancement'}],2022-06-21 15:48:45+00:00,2022-08-09 17:47:06+00:00,4240701.0,"49 days, 1:58:21",[],"[{'commit_sha': '5f30f5b07e803d4f46cac5f4e58b0b76987d18e1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b79f777f672a75af7a566498f1f2b9bdf7187194', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52d9d7760cf314c35e07c7cb41358983db8e35f9', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1027832306,Add tests for output formats,"tests added for

- minal
- tcga
- custom output format file",True,213,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/213,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/213,closed,175,0,5,2,0,0,1,0,[{'name': 'test'}],2022-08-16 16:19:42+00:00,2022-08-16 17:18:59+00:00,3557.0,0:59:17,[],"[{'commit_sha': '573750651d64d3b624946fa3d43db195d5fd0077', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50798b16d0ca2a12a7c96a4e2f0f142b265e2708', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1027832306,Add tests for output formats,"tests added for

- minal
- tcga
- custom output format file",True,213,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/213,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/213,closed,175,0,5,2,0,0,1,0,[{'name': 'test'}],2022-08-16 16:19:42+00:00,2022-08-16 17:18:59+00:00,3557.0,0:59:17,[],"[{'commit_sha': '573750651d64d3b624946fa3d43db195d5fd0077', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50798b16d0ca2a12a7c96a4e2f0f142b265e2708', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1027832306,Add tests for output formats,"tests added for

- minal
- tcga
- custom output format file",True,213,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/213,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/213,closed,175,0,5,2,0,0,1,0,[{'name': 'test'}],2022-08-16 16:19:42+00:00,2022-08-16 17:18:59+00:00,3557.0,0:59:17,[],"[{'commit_sha': '573750651d64d3b624946fa3d43db195d5fd0077', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50798b16d0ca2a12a7c96a4e2f0f142b265e2708', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1031830270,Rename tcga to extended,,True,220,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/220,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/220,closed,9,9,5,1,0,0,0,0,[],2022-08-20 16:47:41+00:00,2022-08-23 17:12:08+00:00,260667.0,"3 days, 0:24:27",[],"[{'commit_sha': '3965d1513b6cb1dffe303e242b0af6ec9b6982b4', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1033413227,Fix custom file formatting,loading custom file formatting from file was missing,True,222,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/222,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/222,closed,46,3,4,1,0,0,1,0,[{'name': 'bug'}],2022-08-22 22:23:49+00:00,2022-08-23 17:17:55+00:00,68046.0,18:54:06,[],"[{'commit_sha': '98115a0153873e4a9d85e7e45130bd3092caf174', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1033292383,Metering,"I have added average response time to the summary

```
Annotation Summary:
	Records with ambiguous SNP and INDEL allele changes:  0

	Failed annotations summary:  3 total failed annotations
		Records with HGVSp null variant classification:  3
		Records that failed due to other unknown reason: 0

	Average Response Time:  0.010 sec.
```

",True,221,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/221,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/221,closed,107,4,4,3,3,0,1,0,[{'name': 'enhancement'}],2022-08-22 20:10:35+00:00,2022-08-29 21:39:04+00:00,610109.0,"7 days, 1:28:29",[],"[{'commit_sha': '235ce4744036ba2793ecf9039fcaa238afe086b0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f186b0d6bb232b63da3d25d0fee8e00bcc2c997e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '671c8c5d9e34638e3261971b6a119175f38cd521', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
971491291,Maf file validation,"Checks hard requirements of the MAF file. In other words, it searches for these column names: Chromosome, Start_Position, End_Position, Reference_Allele. It then checks if either `Tumor_Seq_Allele1` or `Tumor_Seq_Allele2` are present",True,196,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/196,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/196,closed,123,6,3,2,1,0,1,0,[{'name': 'enhancement'}],2022-06-19 13:48:14+00:00,2022-07-19 17:08:57+00:00,2604043.0,"30 days, 3:20:43",[],"[{'commit_sha': 'e249f470261b42cb5a0a68783ab94dec27783df5', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef7863503595a4b090563d7d53650ebd9d770b50', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1008917020,Add tests for MutationRecordProcessor,Unit tests for MutationRecordProcessor,True,207,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/207,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/207,closed,66,4,2,1,0,0,0,0,[],2022-07-26 20:05:36+00:00,2022-08-02 17:34:17+00:00,595721.0,"6 days, 21:28:41",[],"[{'commit_sha': 'c3b15741889b24db71bed12545921c7f0decaf5b', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
989086577,Convert config.yml to unit tests,Fix https://github.com/genome-nexus/genome-nexus-annotation-pipeline/issues/202. vcf2maf test not yet implemented completely,True,200,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/200,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/200,closed,794,123,20,3,2,0,1,0,[{'name': 'test'}],2022-07-06 17:23:09+00:00,2022-08-08 21:33:27+00:00,2866218.0,"33 days, 4:10:18",[],"[{'commit_sha': '1a5dd658db4c059d5ba4dca8815e083d6e0d4a23', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71b2d508ba441c3a048a0c4cbd09723d35478dea', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f857ec2564f67c41608b2977f74e811605417ae', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
989086577,Convert config.yml to unit tests,Fix https://github.com/genome-nexus/genome-nexus-annotation-pipeline/issues/202. vcf2maf test not yet implemented completely,True,200,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/200,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/200,closed,794,123,20,3,2,0,1,0,[{'name': 'test'}],2022-07-06 17:23:09+00:00,2022-08-08 21:33:27+00:00,2866218.0,"33 days, 4:10:18",[],"[{'commit_sha': '1a5dd658db4c059d5ba4dca8815e083d6e0d4a23', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71b2d508ba441c3a048a0c4cbd09723d35478dea', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f857ec2564f67c41608b2977f74e811605417ae', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
989086577,Convert config.yml to unit tests,Fix https://github.com/genome-nexus/genome-nexus-annotation-pipeline/issues/202. vcf2maf test not yet implemented completely,True,200,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/200,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/200,closed,794,123,20,3,2,0,1,0,[{'name': 'test'}],2022-07-06 17:23:09+00:00,2022-08-08 21:33:27+00:00,2866218.0,"33 days, 4:10:18",[],"[{'commit_sha': '1a5dd658db4c059d5ba4dca8815e083d6e0d4a23', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71b2d508ba441c3a048a0c4cbd09723d35478dea', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f857ec2564f67c41608b2977f74e811605417ae', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
987562476,Replace log4j imports with slf4j,Unify the logging interface. This is consistent with: https://github.com/cBioPortal/cbioportal/pull/9338,True,199,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/199,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/199,closed,23,15,8,2,0,0,1,0,[{'name': 'enhancement'}],2022-07-05 15:20:14+00:00,2022-07-19 17:35:45+00:00,1217731.0,"14 days, 2:15:31",[],"[{'commit_sha': '248d297be375a76e3062e328a0f1a04e9b75fe7b', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13d93c84baf683ac4f409aca2aabec07b2b73731', 'committer_username': 'inodb', 'committer_name': 'Ino de Bruijn', 'committer_email': 'ino@ino.bio', 'commit_date': datetime.datetime(2012, 1, 16, 15, 8, 30, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1008922728,Replace apache.lo4j with slf4j,Logger of DefaultLineCallbackHandler.java updated,True,208,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/208,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/208,closed,3,2,1,1,0,0,1,0,[{'name': 'enhancement'}],2022-07-26 20:13:07+00:00,2022-08-02 17:18:15+00:00,594308.0,"6 days, 21:05:08",[],"[{'commit_sha': '44288aa014deced50c3704ac98bfd2b58e5ae1ef', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1027837143,Use post method as default,"By default, it uses the post method with a postIntervalSize of 100 
In order to use the get method you have to set postIntervalSize to 1
It improved the duration of total test cases by more than 50%",True,214,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/214,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/214,closed,109,34,8,1,0,0,1,0,[{'name': 'enhancement'}],2022-08-16 16:24:49+00:00,2022-08-23 17:14:14+00:00,607765.0,"7 days, 0:49:25",[],"[{'commit_sha': '5d24b3f1250c1a83ff3d3370b0fb5eebee4177b0', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
971477387,Unwanted logs while file loading,"Fixes related to #193 
Logs are reserved for the devs.
Unnecessary merging removed.
Additional javadoc.",True,195,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/195,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/195,closed,89,11,3,1,0,0,1,0,[{'name': 'enhancement'}],2022-06-19 12:37:38+00:00,2022-08-02 17:28:46+00:00,3819068.0,"44 days, 4:51:08",[],"[{'commit_sha': 'cd803aa84b2cec103dc643b1c7e6a922f72e450e', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1029066822,Fix redundant exception and help prints,"With the addition of subcommands and throwing an exception when no subcommand is found, I started to see some redundant exception prints. Throw causes redundant help prints too.

This pull request fixes the issue",True,217,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/217,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/217,closed,29,19,2,1,0,0,1,0,[{'name': 'bug'}],2022-08-17 16:34:50+00:00,2022-08-17 16:41:34+00:00,404.0,0:06:44,[],"[{'commit_sha': '0e7a1f34c77cad02faf003e80a29832a15985cca', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1042566078,Rmadupuri tests,fix for the number 4 of #223,True,224,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/224,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/224,closed,62,60,8,5,0,0,1,0,[{'name': 'bug'}],2022-08-31 15:47:33+00:00,2022-09-01 17:46:26+00:00,93533.0,"1 day, 1:58:53",[],"[{'commit_sha': '103cd0eec121c34898ce3c3d761e0e3a5c818c6c', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '930277d9a1c9d6bbdb8c7b0f9bb99f1163e8543e', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19bd20ffa4e53e5d4bbe4ee5898a278fd266d21d', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96e608ed76ee772e788976e137bb7652788ea6ad', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77827e435fcad2cd3bc7b8bec73790de3829a5b3', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1051303116,Remove spring persistence and improve runtime by increasing default chunk size,"- Removing spring persistence b/c it's not used
- By increasing default chunk size of the writer (so not the post body size), we are able to achieve ~50% runtime improvement
",True,227,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/227,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/227,closed,1,83,1,1,0,1,1,0,[{'name': 'enhancement'}],2022-09-09 09:02:09+00:00,2022-09-20 17:19:07+00:00,980218.0,"11 days, 8:16:58","[{'comment_id': 975624139, 'comment_body': 'note to self: this chunk size is related to the reader (so not post interval size)', 'comment_created': datetime.datetime(2022, 9, 20, 17, 11, 51, tzinfo=datetime.timezone.utc), 'commenter': 'inodb', 'type': 'User'}]","[{'commit_sha': '788e04cc7569f719ed103561d80308dd5ce622f6', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1045717881,Big File Handling,"All the necessary changes to handle big files

**NOTE:** the code is experimental, and this PR shouldn't be approved",False,226,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/226,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/226,closed,942,3582,38,7,3,35,1,0,[{'name': 'enhancement'}],2022-09-04 14:23:04+00:00,2022-09-20 17:38:39+00:00,1394135.0,"16 days, 3:15:35","[{'comment_id': 966290562, 'comment_body': 'This needs to be tested on a deployment with a local VEP container running. (https://github.com/genome-nexus/genome-nexus-vep). The parallelism scale up may overload a local server or lead to errors.', 'comment_created': datetime.datetime(2022, 9, 8, 18, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966292804, 'comment_body': 'If this fixes the MongoDB connection error messages in the logs, great!', 'comment_created': datetime.datetime(2022, 9, 8, 18, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966297656, 'comment_body': 'does this include the .trim() functionality from the old line 65? Also are null fields converted to empty string?', 'comment_created': datetime.datetime(2022, 9, 8, 18, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966300962, 'comment_body': 'maybe detailed timing information should go into the logs instead?', 'comment_created': datetime.datetime(2022, 9, 8, 18, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966310860, 'comment_body': ""I'm vaguely confused about these null tokenizer cases and the testing we are doing here. If someone went to the trouble of testing the null tokenizer case, it must have been something they thought might fail. Maybe some comment about why there is no failure risk for whatever case this covered would be good."", 'comment_created': datetime.datetime(2022, 9, 8, 18, 45, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966312473, 'comment_body': 'a test which shows that the minimal field set can pass the mapper makes sense ... why is this dropped?', 'comment_created': datetime.datetime(2022, 9, 8, 18, 47, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966314318, 'comment_body': '👍 ', 'comment_created': datetime.datetime(2022, 9, 8, 18, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966317101, 'comment_body': 'what java9 constructs are we including in this? I think we are in the process of updating/standardizing onto java 1.13, so maybe this is ok, but we may need to update our java installations on our import pipeline build server:\r\n$ java -version\r\nopenjdk version ""1.8.0_302""\r\nOpenJDK Runtime Environment (build 1.8.0_302-b08)\r\nOpenJDK 64-Bit Server VM (build 25.302-b08, mixed mode)', 'comment_created': datetime.datetime(2022, 9, 8, 18, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966319162, 'comment_body': '?', 'comment_created': datetime.datetime(2022, 9, 8, 18, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966320739, 'comment_body': 'each step above is kept separate, so split this into two, using a conditional if statement as well (rather than trinary operator)', 'comment_created': datetime.datetime(2022, 9, 8, 18, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966322832, 'comment_body': 'good ... adding the test about IfPopulated sounds right. Do we need to set Annotation_Status to ""FAILED"" at some point if it is not populated?', 'comment_created': datetime.datetime(2022, 9, 8, 19, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966327316, 'comment_body': ""some fields seem dropped here .. maybe they are rescinded anyway? I don't remember using BAM_FILE in a long time for instance."", 'comment_created': datetime.datetime(2022, 9, 8, 19, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966328307, 'comment_body': 'I appreciate all of the style/whitespace standardization', 'comment_created': datetime.datetime(2022, 9, 8, 19, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966330466, 'comment_body': '👍 killing dead code', 'comment_created': datetime.datetime(2022, 9, 8, 19, 10, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966333343, 'comment_body': 'maybe ""Zachary Heins, Mete Ozguz"" ?  In general I don\'t bother with @author lines myself and needing to maintain them seems kind of a waste.', 'comment_created': datetime.datetime(2022, 9, 8, 19, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966337314, 'comment_body': 'so we no longer extend MutationRecord ... instead we include MutationRecord as a data member in this class. That seems ok; it seems like we would never really intend to use an AnnotatedRecord object in a place where a MutationRecord was expected.', 'comment_created': datetime.datetime(2022, 9, 8, 19, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966339101, 'comment_body': 'The ""setIfPopulated"" method seems useful. However, it does wrap business logic into the model class. It always feels ""wrong"" to me to write unit tests against model classes, but we probably should unit test this functionality. (test the behavior of null values, empty values, and repeated columns). If the same column header occurs twice what is the expected behavior? It seems like this code would ignore the first instance, use the second, and not throw any exception. A test for repeat columns may belong in the file parser rather than here. I mention it because previously the AnnotatedRecord constructor to a defined list of field values where repeats were not possible.\r\n\r\nI guess another way to construct this object would be to pass in a Map<String, String> object with all of the values to be set. But if doing things that way I would instead return this class to be a vanilla POJO, and put the converter code (which takes a Map<String, String> or takes individual field/value pairs) into a utility/factory class which could have clear business logic unit tests.', 'comment_created': datetime.datetime(2022, 9, 8, 19, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966351947, 'comment_body': 'What was this? Did we ever rely on ""NOT_ATTEMPTED"" as an actual value coming out of the annotation effort? We seem to be dropping it silently here.', 'comment_created': datetime.datetime(2022, 9, 8, 19, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966354065, 'comment_body': 'This seems dangerous. Maybe @ao508 can comment here ... I know that we put effort into getting certain columns to always come out first / in the leftmost positions. These prioritized columns were needed for followup processing steps in our import pipeline. Returning the keySet() seems like we will get arbitrary column order in the output.', 'comment_created': datetime.datetime(2022, 9, 8, 19, 38, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966362322, 'comment_body': 'springframework.util.Assert will raise IllegalArgumentException if these tests fail. This can be caught with catch(Exception e), so long running annotation efforts can recover by skipping events / samples when necessary. This is a kind of RuntimeException. So this is ok. Note to self : this is not the java assert statement (which causes some of the AssertionError crashes which interfere with our annotation attempts)', 'comment_created': datetime.datetime(2022, 9, 8, 19, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966364849, 'comment_body': ""this functionality implements parsing logic ... determining the cut points for extracting substrings corresponding to various field values. My preferred approach (I'm not insisting on this) would be to keep the model class as a POJO and separate this parsing logic into a separate utility class where unit tests could be isolated."", 'comment_created': datetime.datetime(2022, 9, 8, 19, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966371502, 'comment_body': 'Here, rather than storing the fields separately we are storing a raw string which represents the record. It does not feel like we are modeling the data here .. because in this representation there are no assumptions about fields which are expected, must be present or may be optional, or any other semantics. This model could be used for any tab-delimited file format (like CNA or whatever) and it does not document to the programmer what the expectations are. With this code I could not come to the MutationRecord.java file in order to see what ""belongs"" in a MutationRecord easily. I\'m not sure what else to say here ... this is big departure from our normal approach of having the model class be a representation of the expected elements of the object being modeled. We should probably discuss this.', 'comment_created': datetime.datetime(2022, 9, 8, 20, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966373890, 'comment_body': 'same comment as above .. this seems to present the headers in an arbitrary order.', 'comment_created': datetime.datetime(2022, 9, 8, 20, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966374855, 'comment_body': ""This doesn't seem right ... we should not be commenting out the entire unit test class ... if we want to delete it we should delete it [but I would ask why it was being deleted]."", 'comment_created': datetime.datetime(2022, 9, 8, 20, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966382905, 'comment_body': 'I have questioned the change of the MutationRecord model above. The semantic change so that the class represents an amorphous tab delimited record with no constraints on the fields present (or their data types / allowable values) would mean a drastic change to the unit tests obviously. Maybe the unit tests which were/are present here can point us at some of the constraints which we used to have and which are being dropped. I never did like the ""additionalFields"" part of our modeling. I thought that was mushy and unstructured. So getting rid of the weirdness of having an ""everything else"" set of values is a good thing. But I\'m personally uncomfortable with the idea of making all the fields become additionalFields and having no core at all.', 'comment_created': datetime.datetime(2022, 9, 8, 20, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966383762, 'comment_body': 'I thought we chose to maintain the databaseAnnotator functionality ... Maybe @ao508 can comment.', 'comment_created': datetime.datetime(2022, 9, 8, 20, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'sheridancbio', 'type': 'User'}, {'comment_id': 966925808, 'comment_body': '@sheridancbio @inodb unfortunately, there is no parallelism inside the annotation job. MutationRecordReader loads and annotates all the records in one go inside its open method. **Actually, it is the chunk size that single-handedly creeples the runtime!** \r\n\r\nChunk size defines the size of the item list passed to the write method of MutationRecordWriter. It directly impacts the output performance of the FlatFileItemWriter.\r\n\r\nYou can easily test this using PR #228 using the file and the tests below:\r\n\r\n[pog570_bcgsc_2020_data_mutations_100K.txt](https://github.com/genome-nexus/genome-nexus-annotation-pipeline/files/9534750/pog570_bcgsc_2020_data_mutations_100K.txt)\r\n\r\nOPTIONS:\r\n-r --filename pog570_bcgsc_2020_data_mutations_100K.txt --output-filename pog570_bcgsc_2020_data_mutations_100K.out.txt --isoform-override uniprot --post-interval-size 10000\r\n\r\nTEST1  @Value(""${chunk:10}"") \r\nTEST2  @Value(""${chunk:10000000}"")\r\n\r\non my machine test1 takes ~300sec while test2 takes ~200sec ', 'comment_created': datetime.datetime(2022, 9, 9, 10, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 966948075, 'comment_body': 'No trim functionality here. So far I didn\'t face any extra space issues yet but yeah it would be better if it is added back.\r\nThis piece of code is used before writing to the file so yes if the field is null it will be written as """" instead of ""null""', 'comment_created': datetime.datetime(2022, 9, 9, 11, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 966950113, 'comment_body': 'yeah it should be removed', 'comment_created': datetime.datetime(2022, 9, 9, 11, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 966959521, 'comment_body': ""thanks for pointing this out. I don't remove names until I rewrote the class completely in which case I did"", 'comment_created': datetime.datetime(2022, 9, 9, 11, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 966972845, 'comment_body': 'What I am seeing is that MutationRecord is just for representing the input file and AnnotatedRecord is just for the output file. \r\n\r\nI keep the same logic and made that AnnotatedRecord holds only additional header data & data for overwriting', 'comment_created': datetime.datetime(2022, 9, 9, 11, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 966977306, 'comment_body': 'Yes, it is a silent drop. I wonder do you ever see NOT_ATTEMPTED in an output file? If no, removing this can be a new git issue.', 'comment_created': datetime.datetime(2022, 9, 9, 11, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 966993702, 'comment_body': 'Yeah, I second that approach too. I already did it on my local machine. At least the cut points ops... Keeping the static header inside the class is much cleaner and makes life easier.', 'comment_created': datetime.datetime(2022, 9, 9, 12, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 967018984, 'comment_body': '@sheridancbio @inodb (I will simply use Record for both AnnotationRecord and MutationRecord) \r\nI also didn\'t like it the first time I saw it then I saw all the other reflection operations in order to populate these Records. All other ugly getters setters... While MRecord is using ternary operators for getters, ARecord uses none...\r\n\r\nThese classes should model the \'minimum\' set of headers but instead, they use a lot of ""unnecessary"" fields... \r\nAnother big inefficiency is that each MutationRecord objects create and use the exact same headers (minimum size of 35). Wasteful...\r\n\r\nDo we use any constraint checking or field validation? Most probably none ... Additionally, any constraint or validation could be easily added to these new classes\r\n\r\nIn conclusion, in future, I believe you should use something like these classes in order \r\n- to better reflect the dynamic nature of data\r\n- to get rid of reflective calls\r\n- to have a cleaner code\r\n- to improve efficiency ( I am sure this commit could be improved further because this is just my first attempt )\r\n- to get rid of empty columns almost automatically\r\n', 'comment_created': datetime.datetime(2022, 9, 9, 12, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}, {'comment_id': 967021709, 'comment_body': 'If it is in use somewhere. Could you please give more info', 'comment_created': datetime.datetime(2022, 9, 9, 12, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ozguzMete', 'type': 'User'}]","[{'commit_sha': '9e9aecff098111f1e5b108e4a84aca71e4ded429', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffab84915c0c5211f21d4b9d276afea3f71348c2', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e98be55c8c106716c00f300f26afcaa6ced62b45', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1333d4446d319f196318f44e12b950b2206b953', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '379697a7de9e861a289326fa089e24b731cb3e46', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bdaed72a306a2cd09c948e7700bb84c7725a60b', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0be35f51030b0feb41a2fc2594fbebcf086a32a', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1015237464,Add split-output option,This option creates two additional files for failed and successful annotations.,False,209,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/209,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/209,open,436,52,14,1,5,1,0,0,[],2022-08-02 15:04:03+00:00,,0.0,,"[{'comment_id': 947066358, 'comment_body': '```suggestion\r\n            .addOption(""s"", ""dump-failed"", false, ""Write failed annotations into an additional file <output-filename>.FAILED"" )\r\n```', 'comment_created': datetime.datetime(2022, 8, 16, 17, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'inodb', 'type': 'User'}]","[{'commit_sha': '327e277e46c68d14eea7644ca500249152215c30', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1
1051384658,Fix total runtime,"The total runtime added to AnnotationSummaryStatistics returns incorrect results hence the related print method isn't invoked near the end of the application.
I have fixed it by ""moving"" it to the main.",True,228,https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline/pulls/228,https://github.com/genome-nexus/genome-nexus-annotation-pipeline/pull/228,closed,11,20,2,1,0,0,1,0,[{'name': 'bug'}],2022-09-09 10:16:09+00:00,2022-09-20 17:07:04+00:00,975055.0,"11 days, 6:50:55",[],"[{'commit_sha': 'c873281c15a369dbc5ee9e9bfe51c4eada954513', 'committer_username': 'ozguzMete', 'committer_name': 'Mete Ozguz', 'committer_email': 'ozguz.mete@gmail.com', 'commit_date': datetime.datetime(2014, 6, 8, 16, 40, 14, tzinfo=datetime.timezone.utc)}]",Mete Ozguz,7831425,ozguz.mete@gmail.com,User,,32,,4,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
63366911,genome-nexus-annotation-pipeline,genome-nexus/genome-nexus-annotation-pipeline,Java,27,8,10,23,325,49,19,9,"[{'id': 1052330774, 'number': 229, 'closed': datetime.datetime(2022, 9, 20, 17, 19, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 10, 21, 1, 50, tzinfo=datetime.timezone.utc), 'time_taken': 850669.0, 'time_delta': '9 days, 20:17:49', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1051384658, 'number': 228, 'closed': datetime.datetime(2022, 9, 20, 17, 7, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 9, 10, 16, 9, tzinfo=datetime.timezone.utc), 'time_taken': 975055.0, 'time_delta': '11 days, 6:50:55', 'additions': 11, 'deletions': 20, 'state': 'closed'}, {'id': 1051303116, 'number': 227, 'closed': datetime.datetime(2022, 9, 20, 17, 19, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 9, 9, 2, 9, tzinfo=datetime.timezone.utc), 'time_taken': 980218.0, 'time_delta': '11 days, 8:16:58', 'additions': 1, 'deletions': 83, 'state': 'closed'}, {'id': 1045717881, 'number': 226, 'closed': datetime.datetime(2022, 9, 20, 17, 38, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 4, 14, 23, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1394135.0, 'time_delta': '16 days, 3:15:35', 'additions': 942, 'deletions': 3582, 'state': 'closed'}, {'id': 1042566078, 'number': 224, 'closed': datetime.datetime(2022, 9, 1, 17, 46, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 31, 15, 47, 33, tzinfo=datetime.timezone.utc), 'time_taken': 93533.0, 'time_delta': '1 day, 1:58:53', 'additions': 62, 'deletions': 60, 'state': 'closed'}, {'id': 1033413227, 'number': 222, 'closed': datetime.datetime(2022, 8, 23, 17, 17, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 22, 23, 49, tzinfo=datetime.timezone.utc), 'time_taken': 68046.0, 'time_delta': '18:54:06', 'additions': 46, 'deletions': 3, 'state': 'closed'}, {'id': 1033292383, 'number': 221, 'closed': datetime.datetime(2022, 8, 29, 21, 39, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 22, 20, 10, 35, tzinfo=datetime.timezone.utc), 'time_taken': 610109.0, 'time_delta': '7 days, 1:28:29', 'additions': 107, 'deletions': 4, 'state': 'closed'}, {'id': 1031830270, 'number': 220, 'closed': datetime.datetime(2022, 8, 23, 17, 12, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 16, 47, 41, tzinfo=datetime.timezone.utc), 'time_taken': 260667.0, 'time_delta': '3 days, 0:24:27', 'additions': 9, 'deletions': 9, 'state': 'closed'}, {'id': 1031799585, 'number': 219, 'closed': datetime.datetime(2022, 8, 23, 17, 15, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 14, 53, 53, tzinfo=datetime.timezone.utc), 'time_taken': 267674.0, 'time_delta': '3 days, 2:21:14', 'additions': 130, 'deletions': 14, 'state': 'closed'}, {'id': 1029066822, 'number': 217, 'closed': datetime.datetime(2022, 8, 17, 16, 41, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 16, 34, 50, tzinfo=datetime.timezone.utc), 'time_taken': 404.0, 'time_delta': '0:06:44', 'additions': 29, 'deletions': 19, 'state': 'closed'}, {'id': 1027837143, 'number': 214, 'closed': datetime.datetime(2022, 8, 23, 17, 14, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 16, 24, 49, tzinfo=datetime.timezone.utc), 'time_taken': 607765.0, 'time_delta': '7 days, 0:49:25', 'additions': 109, 'deletions': 34, 'state': 'closed'}, {'id': 1027832306, 'number': 213, 'closed': datetime.datetime(2022, 8, 16, 17, 18, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 16, 19, 42, tzinfo=datetime.timezone.utc), 'time_taken': 3557.0, 'time_delta': '0:59:17', 'additions': 175, 'deletions': 0, 'state': 'closed'}, {'id': 1024152657, 'number': 211, 'closed': datetime.datetime(2022, 9, 1, 17, 47, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 17, 53, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1814046.0, 'time_delta': '20 days, 23:54:06', 'additions': 118, 'deletions': 159, 'state': 'closed'}, {'id': 1015237464, 'number': 209, 'closed': None, 'created': datetime.datetime(2022, 8, 2, 15, 4, 3, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 436, 'deletions': 52, 'state': 'open'}, {'id': 1008922728, 'number': 208, 'closed': datetime.datetime(2022, 8, 2, 17, 18, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 20, 13, 7, tzinfo=datetime.timezone.utc), 'time_taken': 594308.0, 'time_delta': '6 days, 21:05:08', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 1008917020, 'number': 207, 'closed': datetime.datetime(2022, 8, 2, 17, 34, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 20, 5, 36, tzinfo=datetime.timezone.utc), 'time_taken': 595721.0, 'time_delta': '6 days, 21:28:41', 'additions': 66, 'deletions': 4, 'state': 'closed'}, {'id': 1008586454, 'number': 204, 'closed': datetime.datetime(2022, 8, 16, 17, 45, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 14, 17, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1826915.0, 'time_delta': '21 days, 3:28:35', 'additions': 909, 'deletions': 87, 'state': 'closed'}, {'id': 989086577, 'number': 200, 'closed': datetime.datetime(2022, 8, 8, 21, 33, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 17, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2866218.0, 'time_delta': '33 days, 4:10:18', 'additions': 794, 'deletions': 123, 'state': 'closed'}, {'id': 987562476, 'number': 199, 'closed': datetime.datetime(2022, 7, 19, 17, 35, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 15, 20, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1217731.0, 'time_delta': '14 days, 2:15:31', 'additions': 23, 'deletions': 15, 'state': 'closed'}, {'id': 973753779, 'number': 198, 'closed': datetime.datetime(2022, 8, 9, 17, 47, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 21, 15, 48, 45, tzinfo=datetime.timezone.utc), 'time_taken': 4240701.0, 'time_delta': '49 days, 1:58:21', 'additions': 167, 'deletions': 17, 'state': 'closed'}, {'id': 971491291, 'number': 196, 'closed': datetime.datetime(2022, 7, 19, 17, 8, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 13, 48, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2604043.0, 'time_delta': '30 days, 3:20:43', 'additions': 123, 'deletions': 6, 'state': 'closed'}, {'id': 971477387, 'number': 195, 'closed': datetime.datetime(2022, 8, 2, 17, 28, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 19, 12, 37, 38, tzinfo=datetime.timezone.utc), 'time_taken': 3819068.0, 'time_delta': '44 days, 4:51:08', 'additions': 89, 'deletions': 11, 'state': 'closed'}]"
