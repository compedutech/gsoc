pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
650146126,add additive noise downstream test for diffeqflux,"Test case from: https://discourse.julialang.org/t/diffeqflux-sosra2-algorithm-backsolveadjoint-gives-an-error/61237
and solved via https://github.com/SciML/DiffEqNoiseProcess.jl/pull/93 .
I added an `@ time ` for `LambaEM()` and `SOSRA()`. The `SOSRA` seems to take very long..
",True,415,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/415,https://github.com/SciML/SciMLSensitivity.jl/pull/415,closed,194,123,1,3,0,0,0,0,[],2021-05-21 16:58:44+00:00,2021-05-22 12:33:03+00:00,70459.0,19:34:19,[],"[{'commit_sha': '2068427aaa510b1a432b257570041f967955458e', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '422c877cac1f9790e3a1cfcd93fcaae595f4ddfe', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf24eab0880c8a5d1f2d561add00c38973d6b31', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
656792632,DiscreteCallback fixes,"This PR fixes several issues related to continuous adjoints and (discrete) callbacks.

- The computation of the vjp for the event needs the Jacobian with respect to the state *before* the event. Therefore, I added another field `uleft` to `TrackedAffect`.
- We shouldn't use a `+=` as written in Eq.(13) in https://arxiv.org/abs/1905.10403. The operation must be: `λ .= dλ` to match our definition for an event at time tau (I'll need to add the update for callbacks that change the parameter as well in a follow up.) 
- In `InterpolatingAdjoint`, we need to take the right limit (`continuity=:right`) when computing `y`. Otherwise, we ""jump"" over the discontinuity and compute a false loss function value.
- Similarly the  `out_and_ts()` makes sure that we compute the loss function with respect to the correct `u` values (regarding e.g. the left and right limit and the order of the time values).  Another problem with the discrete callbacks was that it only worked if the callback time is contained in the saving times. 
- Before, we had two `cur_time[]` Ref values. This is also problematic for selecting the appropriate u values within the direct `_concrete_solve_adjoint` interface. We are now back at a single Ref shared between the loss callbacks for the ""standard"" saving times and the ""callback"" times, respectively. The difference between the two `ReverseLossCallback` is given by the times at which the `PresetTimeCallback` ultimately is triggered.  
- I extended the test suite quite a bit.",True,416,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/416,https://github.com/SciML/SciMLSensitivity.jl/pull/416,closed,610,578,6,3,0,2,0,0,[],2021-05-28 16:52:56+00:00,2021-05-28 19:35:20+00:00,9744.0,2:42:24,"[{'comment_id': 641696904, 'comment_body': 'if ts is right to left, right, else left?', 'comment_created': datetime.datetime(2021, 5, 28, 17, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 641775681, 'comment_body': 'ts always left, duplicate_times always right, but duplicate_times left and right if not contained in ts. ', 'comment_created': datetime.datetime(2021, 5, 28, 19, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}]","[{'commit_sha': '1afd6bc1e63192cffc0c34f5835df672d3e5ffb0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7151f6609808ec7b602c66b52db168d0c8863ef0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e19cd45bbec2ccc0e5e3ca11741bb1b3650ad148', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
661798382,allow for changes of `p` in callbacks,"To handle changes in `p`, one needs to add an additional vjp. That consists of `grad` (gradient of the loss function with respect to the parameter) as the vector and the Jacobian of the callback function with respect to the parameters before the callback. Slightly abusing the `vecjacobian!` interface, we may use:
```julia
function wp(dp,p,u,t)
    fakeinteg = FakeIntegrator([x for x in u],[x for x in p],t)
    cb.affect!.affect!(fakeinteg)
    dp .= fakeinteg.p
end

fakeSp = CallbackSensitivityFunction(wp,sensealg,S.diffcache,integrator.sol.prob)
#vjp with Jacobin given by dw/dp before event and vector given by grad
vecjacobian!(dgrad, integrator.p, grad, y, integrator.t, fakeSp;
                                  dgrad=nothing, dy=nothing)
grad .= dgrad       
```

For `QuadratureAdjoint`, we need to accumulate/update the grads during the integration for `p` when duplicate times are reached. (There is still an error in the current version of the code as `dp` doesn't come out correctly..)
For `InterpolatingAdjoint` with  checkpointing,  one needs to do a check if a callback might have occured in a given time interval. If that is the case we need to search for the left-most callback time and use the associated stored left-limit of the callback for the checkpointed solution. 

I have not yet figured out how `ReverseDiffAdjoint` could be made compatible with 
```julia
affect!(integrator) = (integrator.p .= 2*integrator.p .- 0.5)
```
.. it fails with ""TrackedArrays do not support `setindex`"". It works with 
```julia
affect!(integrator) = (integrator.p = 2*integrator.p .- 0.5) # no inplace
```
though. For `integrator.u` it works both ways. Could someone point me to the trick? ",True,417,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/417,https://github.com/SciML/SciMLSensitivity.jl/pull/417,closed,134,36,6,4,3,0,0,0,[],2021-06-04 14:07:56+00:00,2021-06-06 17:48:53+00:00,186057.0,"2 days, 3:40:57",[],"[{'commit_sha': 'd8eada5f35f2e1e4c5c1bdc0e5d552f70359738d', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '590b7a411d951f1441d0a1459122a0adc079c0c6', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bace3b216a8b91c2727dffe957485ae049a1ea75', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b97c409fbaac9026d7a3d1dab1c2f138b6c0f2a5', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
663525183,fix for using the correct uleft/pleft in continuous callback,"For `ContinuousCallbacks`, one needs to be careful if uleft (pleft) should be applied from the tracked `affect` or `affect_neg` .

There are (at least) two remaining issues (for follow ups?):
- `ReverseDiffAdjoint()` only works if `save_everystep=false`. Otherwise a `TrackedArray` doesn't support `setindex!` error is thrown.
- Still one extra term in the callback vjp is missing. (I'll check this next.)",True,418,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/418,https://github.com/SciML/SciMLSensitivity.jl/pull/418,closed,56,27,2,1,0,0,0,0,[],2021-06-07 12:38:13+00:00,2021-06-07 14:18:11+00:00,5998.0,1:39:58,[],"[{'commit_sha': '6e7ccad9ef86b9258e35fea57009c5e983b2678f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
663902516,fix broadcasting error on steady state adjoint,"Fixes the broadcasting error on CPU: https://github.com/SciML/DiffEqFlux.jl/issues/567#issuecomment-855819416

I haven't tested yet if that also fixes the GPU error. @QiyaoWei 


 
",True,419,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/419,https://github.com/SciML/SciMLSensitivity.jl/pull/419,closed,1,2,2,3,4,1,0,0,[],2021-06-07 20:46:59+00:00,2021-06-08 16:30:43+00:00,71024.0,19:43:44,"[{'comment_id': 646931706, 'comment_body': ""```suggestion\r\n  copyto!(vec(λ), diffcache.J'\\vec(diffcache.dg_val')) # use linsolve here\r\n```"", 'comment_created': datetime.datetime(2021, 6, 7, 20, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '7745f0e2ae8e1c8b54291a7e77b3e96868f9cbb5', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02b6b123ea72fab64de86b8f1dfac1db1157e129', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69e3dd2cdb203ea4a6c7d11dba014bd999b18e42', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
667382269,Forward Least Squares Shadowing (LSS),"Implements the (original) LSS method in forward mode due to Qiqi Wang et al. https://arxiv.org/abs/1204.0159.
I followed their [python repository](https://github.com/qiqi/lssode ) for different solving/windowing options.

It's quite a memory intense method. Partly, this could probably be solved by wrapping `sparse` around some of the matrices used in the shadowing problem. It's inherently a block diagonal structure, so we are sure that the matrices will always be sparse even if, e.g., the Jacobian is not sparse. On the other side there is `NILSS` which avoids the computations of the Jacobian entirely.. 

I didn't implemented the  `concrete_solve` dispatch yet. Also the `adjoint` mode needs to be added. 

Related issue: #102 ",True,420,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/420,https://github.com/SciML/SciMLSensitivity.jl/pull/420,closed,497,3,7,7,3,6,0,0,[],2021-06-10 20:41:21+00:00,2021-06-12 02:28:47+00:00,107246.0,"1 day, 5:47:26","[{'comment_id': 649527016, 'comment_body': ""This code is making many assumptions that `u` is an `AbstractVector`. I think that's fine, but we should probably get an issue open about this limitation as something to address in the future."", 'comment_created': datetime.datetime(2021, 6, 10, 20, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 649527802, 'comment_body': ""Smat is constant in the loop right? Then you will want to hoist out `_Smat = lu(Smat)` so it's only factorized once."", 'comment_created': datetime.datetime(2021, 6, 10, 20, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 649530089, 'comment_body': 'yep, Smat is constant. Sounds good!', 'comment_created': datetime.datetime(2021, 6, 10, 21, 2, 12, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 649531967, 'comment_body': 'we could probably in concrete_solve add a `! u isa AbstractVector && error`  to avoid unforeseen issues (in addition).', 'comment_created': datetime.datetime(2021, 6, 10, 21, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 649537782, 'comment_body': 'is the name`solve` problematic? \r\nhttps://github.com/SciML/DiffEqSensitivity.jl/pull/420/checks?check_run_id=2797420128', 'comment_created': datetime.datetime(2021, 6, 10, 21, 15, 38, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 649541188, 'comment_body': ""Yeah, throw a nice error message before the user gets a worse one. It's always a good idea in these scenarios."", 'comment_created': datetime.datetime(2021, 6, 10, 21, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': 'd2c597c2a5ccd32d137719e206c576f7cda8626d', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2feec8f6a8693b16fcb15adf17d4446daa745a35', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '323a1baca0387f8e9408c25de6b5a8eb70932d21', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ed60eaad7042d4db1dda172e19b7bfc5b6a06a', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a82f542c6492724dc14a6446bf48c93df18c852a', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ec668b90a8cc9f35c26281966360c973a830e0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85539e8934bc1c8d02239fdd24d8f03b4783e791', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
669442671,Adjoint-mode for the LSS method,"Implements the adjoint mode wrt #420 . Parameter-dependence in the loss function is now explicitly tested as well. I am not sure if windowing would work the same way, so I implemented only the time-dilation option. 

(see related issue: #102)",True,422,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/422,https://github.com/SciML/SciMLSensitivity.jl/pull/422,closed,218,30,4,3,2,5,0,0,[],2021-06-14 10:23:58+00:00,2021-06-14 12:57:50+00:00,9232.0,2:33:52,"[{'comment_id': 650829215, 'comment_body': 'pre-caching the Smat factorization here?', 'comment_created': datetime.datetime(2021, 6, 14, 10, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 650830825, 'comment_body': 'Should this go to `AdjointLSSProblem` then? In this case `Smat\\b` is only called once.', 'comment_created': datetime.datetime(2021, 6, 14, 10, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 650831711, 'comment_body': 'yeah, just `lu!(Smat)` before saving it.', 'comment_created': datetime.datetime(2021, 6, 14, 10, 32, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 650870391, 'comment_body': ""is this the same as forward LSS? If it's not, we should probably get that updated. I forgot about `lu!` for that 😅 "", 'comment_created': datetime.datetime(2021, 6, 14, 11, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 650879753, 'comment_body': 'yup I updated it for both. `lu!(Smat)` just returned the `LU` decomposition though (i.e., `Smat` stayed the same), so I went for removing `Smat` from the `LSSSchur` struct and instead added a field storing the LU decomposition to the respective LSSProblem.', 'comment_created': datetime.datetime(2021, 6, 14, 11, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}]","[{'commit_sha': 'acdf211d313b4bd36f6a9efd3aecb349817fb9d0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c761f13b1f36a0ad648f6f95b2b202094c4b19a', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01c15e54772e26eb8b293e5ff211b7c775f336e0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
669891874,Concrete_solve dispatch for LSS methods,`_concrete_solve_adjoint` version for #420 and #422. The minus sign convention for `dg` should be consistent with that used in the other adjoints (`BacksolveAdjoint()` etc.).,True,423,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/423,https://github.com/SciML/SciMLSensitivity.jl/pull/423,closed,403,59,5,8,8,3,0,0,[],2021-06-14 21:34:28+00:00,2021-06-16 08:41:27+00:00,126419.0,"1 day, 11:06:59","[{'comment_id': 651523520, 'comment_body': 'why testing on the lower level?', 'comment_created': datetime.datetime(2021, 6, 15, 7, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 651564522, 'comment_body': 'yeah, probably  `__solve` should be renamed https://github.com/SciML/DiffEqSensitivity.jl/blob/79a727b409799025f0c05c20be75f228f6d2505f/src/lss.jl#L296. There is no higher level `solve(LSSProblem)` at the moment. `__solve` is the equivalent to `adjoint_sensitivities()` for an `AdjointODEProblem`.  I had it as `solve()` before and changed it in https://github.com/SciML/DiffEqSensitivity.jl/pull/420/commits/85539e8934bc1c8d02239fdd24d8f03b4783e791 (associated comment: https://github.com/SciML/DiffEqSensitivity.jl/pull/420#discussion_r649537782 ) because of the error I got. ', 'comment_created': datetime.datetime(2021, 6, 15, 8, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 651676936, 'comment_body': ""I included this test as broken. In the way we currently implement `t0skip` and `t1skip` following https://github.com/qiqi/lssode/blob/master/lssode.py the forward and adjoint LSS method using time dilation are not identical if `t0skip!=0` or `t1skip!=0`.  Note that https://github.com/qiqi/lssode/blob/c3570facc986adb3bd27999f6bc42b9df1190279/lssode.py#L366 doesn't use the skipping at all and always proceeds with all times in the adjoint mode."", 'comment_created': datetime.datetime(2021, 6, 15, 10, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}]","[{'commit_sha': '0e6a1f5d7c47a3671d4b529c0c3d31204d68531c', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9e42770a401b592db6812c1dc6a60907ac992c9', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afbb0c1930613b360d0d07c3c10b181811eb32db', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5471dcbbb6366c4bc67f66427ffb1c31dceb95ce', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '723d945ec0e07a5afc50a58af62d60f0f71147a0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b35febda2a6578d99974bda3aba2ed92911b45c', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e79adf602b6be5342c122cd69d52aba3933bb00', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08ed09b18163e45d91c40d0a7e23db8b70668019', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
681950970,Non-Intrusive Least Square Shadowing (NILSS),"Implements the NILSS algorithm introduced in https://arxiv.org/abs/1611.00880 with a (manual) segmentation routine that takes the number of segments and steps on each segment. Code is based on https://github.com/nishaChandramoorthy/energies and https://github.com/niangxiu/nilss .

It has a new overload for `ForwardDiff()` which solves an augmented vector for `vstar` (1 x inhomogenous equation in the paper, i.e., standard forward sensitivity) and `w` (number of unstable components x homogenous equations) . 

Related issue: #102 ",True,437,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/437,https://github.com/SciML/SciMLSensitivity.jl/pull/437,closed,608,5,6,6,0,3,0,0,[],2021-07-01 15:14:02+00:00,2021-07-01 16:38:19+00:00,5057.0,1:24:17,"[{'comment_id': 662436142, 'comment_body': 'what are these?', 'comment_created': datetime.datetime(2021, 7, 1, 16, 30, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 662439984, 'comment_body': 'They allow us to pass the renormalized input values of the sensitivity. For example, `v0` starts at `zeros(numindvar)`. After the first segment, the qr decomposition is used to renormalize the sensitivity. Then we want to pass that as the initial condition (for the next segment).', 'comment_created': datetime.datetime(2021, 7, 1, 16, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 662440671, 'comment_body': 'oh I see.', 'comment_created': datetime.datetime(2021, 7, 1, 16, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '55a0c2ab9406a897568cff85e2d1f47c5c5f536a', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0232fc7f9855845d47ce87e055cc0bb7e3531a33', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cf1d602f5ff90f386c6ccb6802b02b55b22e7d2', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58bca4651751d1767b79d672c1632425fe48045d', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9951e815e2206d0cca0acc1c83067609a36dd4be', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '921aa4e9acc159297efa2ab5b55cc868f829c82f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
684476791,[WIP] concrete_solve for NILSS ,"It currently fails for me because of https://github.com/SciML/SciMLBase.jl/pull/78/files#diff-a5ad781cd45a87e5f6d2d2c4c6c7fa870e1aa8c50f58bc2f6016f898a20d9b11R20, i.e.,

In the new

 `augment(A::DiffEqArray, sol::AbstractODESolution)`

function in SciMLBase, an error is throw:

```type NILSSForwardSensitivityFunction has no field syms```

(
That function is called when computing the forward sensitivities
https://github.com/SciML/DiffEqSensitivity.jl/blob/8f8753b9fda0300b76a68a22b7f86ee0b7eda635/src/nilss.jl#L245
)",True,442,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/442,https://github.com/SciML/SciMLSensitivity.jl/pull/442,closed,38,13,4,3,5,2,0,0,[],2021-07-06 15:27:46+00:00,2021-07-10 12:24:29+00:00,334603.0,"3 days, 20:56:43","[{'comment_id': 667333306, 'comment_body': 'This is actually going to give an allocation. Can you do a short PR to make that `_dgdu .= -dg_val[1]`?', 'comment_created': datetime.datetime(2021, 7, 10, 12, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 667333308, 'comment_body': 'same here.', 'comment_created': datetime.datetime(2021, 7, 10, 12, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '89896d7e801dc97a73cfe85164644e2d0831f028', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb52086af0fa4acbc26ec802a8ef48415595601', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a50c5acacef3c54046a723421144ce4ac025d0c', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
687188524,remove allocation in NILSS,see #442 ,True,443,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/443,https://github.com/SciML/SciMLSensitivity.jl/pull/443,closed,2,2,1,3,1,2,0,0,[],2021-07-10 14:08:34+00:00,2021-07-10 18:33:24+00:00,15890.0,4:24:50,"[{'comment_id': 667355373, 'comment_body': '```suggestion\r\n        @. _dgdu = -dg_val[1]\r\n```', 'comment_created': datetime.datetime(2021, 7, 10, 15, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 667355379, 'comment_body': '```suggestion\r\n        @. _dgdu = -dg_val\r\n```', 'comment_created': datetime.datetime(2021, 7, 10, 15, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '3e2694f4076bfb94d64009be0e3cdc14609e93ea', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bc4e98a99fcb9c5cb0ac19a8546f28bf511335f', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '437c513878e8e81665996b0335c687a51cb261ce', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
687190701,Handle additional callback case,"This fixes the broken tests for the case when the callback doesn't change the parameters but depends on it, e.g., in

`affect!(integrator) = (integrator.u .+= integrator.p[2]//8*sin.(integrator.u))`

`QuadratureAdjoint()` is a bit nasty to fix here because I think one needs the value of the adjoint \lambda before the loss function is applied on it. However, this value is not necessarily the left or right `continuity` limit of the adjoint solution. In this first attempt, I tried to subtract it manually for the additional vjp.  ",True,444,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/444,https://github.com/SciML/SciMLSensitivity.jl/pull/444,closed,38,8,4,3,2,0,0,0,[],2021-07-10 14:25:42+00:00,2021-07-10 22:44:22+00:00,29920.0,8:18:40,[],"[{'commit_sha': 'ecc0a6bbe16c815a46761879fce1a7dc97e93630', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aeefc794b4c2f379f74792a94b0f291817db79c', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ee7565349deb45a5ec7f78c6fe5bc40db7452b', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
688204227,State-dependent Continuous Callbacks for BacksolveAdjoint,"The update rule is given by the implicit function theorem. We need to compute Eqs. (9) and (12) in https://arxiv.org/abs/2011.03902 (I checked those terms), i.e., essentially an additional term that depends on the loss and the condition (and derivatives of both) must be added to the gradient of the loss function. 

Some details wrt what I have so far:
- we need to adjust the loss function gradient only for implicitly defined events that enter *directly* into the loss function. That is, no correction is needed in the case of `save_positions=(false,false)` or if slices exclude the saved states (like in `abs2(_sol[1, end] - target)`). 
- if `save_positions=(true,true)`, we must adjust `λ` before and after the vjp handling of the affect function. To select the proper loss gradient we need to pass the `cur_time` Ref from the loss function callback(s) also to the reverse callback.
- The event condition needs to be differentiated with respect to `u` and `t`. Therefore, `sensealg` should also be passed to the reverse callback (e.g., for the choice between AD and FiniteDiff).
- The `ImplicitCorrection` struct holds all values that are necessary to differentiate the condition and extract the loss gradient value. It is `mutable` because `cur_time` is not known yet when `TrackedAffect` is defined. `cur_time`  is then re-set, once the reverse callback is constructed.

I haven't looked closely into `InterpolatingAdjoint()` yet. I just tried to fix extraction errors (such as reduction over empty collection, ..) for the use of a `DiscreteCallback` vs  a `ContinuousCallback` . I think it will still need some fine-tuning wrt. `checkpoints`, `tstops`, `dg`, etc. 

One problem which I however already noticed is that while for a `DiscreteCallback` the separation for the events work, the `ContinuousCallback` was triggered twice. I'll look into this.

related issues: #383 #374 ",True,445,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/445,https://github.com/SciML/SciMLSensitivity.jl/pull/445,closed,528,111,10,16,3,2,0,0,[],2021-07-12 21:52:05+00:00,2021-08-13 18:44:23+00:00,2753538.0,"31 days, 20:52:18","[{'comment_id': 688420406, 'comment_body': '```suggestion\r\nif GROUP == ""Callbacks""\r\n    activate_downstream_env()\r\n    @time @safetestset ""Callbacks with Adjoints"" begin include(""callbacks.jl"") end\r\nend\r\n\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 10, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 688468135, 'comment_body': '```suggestion\r\nif GROUP == ""Callbacks""\r\n    @time @safetestset ""Callbacks with Adjoints"" begin include(""callbacks.jl"") end\r\nend\r\n\r\n```', 'comment_created': datetime.datetime(2021, 8, 13, 12, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': 'c032214a81e09cec0e6c041f1b41358e7e53cfd9', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c9682ee156e09dce52c7f142552009c667de2a4', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90e35511d7d5ad6191c4b6e2dcc353a8aebccbf8', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9786f858690d6a4bfe943b708678f717cc84b8e7', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da5f20fa9ecc881c44c2d54cf2a9fc1dce071dfc', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7b03a8120aea92e4e0fedfec291bb88ad3cf42d', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df4b403fe719c5996c3814f56e0206e8186bc582', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3854593b9680e627e101e77618fd1def6c79bf53', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '020c8c13781bfb15afcf68105f48599ae4c83b8f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '294261c3cb03956ffd3f7badaf1ee160f70be244', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efa1ab90a292e13a77327a07601ac280db7c3206', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0643170a3412cb6d684ac9f6b9711beda1c6bb6', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db04c8c01aa1dc93f01eb2ed39ad44f577568478', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd379b7afa5d74cec4308f4c366cd81914a472e17', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f329963570a566d4192d0f17f2a85f2be8a1398e', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '244023edb54b83bf58a4ea3efa2fc65af324cc0b', 'committer_username': 'ChrisRackauckas', 'committer_name': 'Christopher Rackauckas', 'committer_email': 'accounts@chrisrackauckas.com', 'commit_date': datetime.datetime(2012, 6, 4, 7, 19, 50, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
713390838,QuadratureAdjoint() for ContinuousCallback,"There are at least two options in `QuadratureAdjoint()` which are more difficult to support than in `BacksolveAdjoint()` 

- when one doesn't save the event time, the loop for the parameter gradients https://github.com/SciML/DiffEqSensitivity.jl/blob/b2d33c3e62fd8571e0d0028360f8534352c2af59/src/quadrature_adjoint.jl#L268 misses the necessary update. So we would need to run a check if there was an additional saved point in the adjoint which is not in `t`, push that into `t`, and check in the loop for those values. 
- terminating via `terminate!(integrator)` would also need some fixes because for `QuadratureAdjoint()` https://github.com/SciML/DiffEqSensitivity.jl/blob/b2d33c3e62fd8571e0d0028360f8534352c2af59/src/concrete_solve.jl#L128 provides a wrong time range if the full simulation time interval is not a multiple of `saveat`. (same for `InterpolatingAdjoint()`)

related issue: #374 ",True,474,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/474,https://github.com/SciML/SciMLSensitivity.jl/pull/474,closed,53,33,4,4,3,0,0,0,[],2021-08-16 12:23:08+00:00,2021-08-16 22:00:44+00:00,34656.0,9:37:36,[],"[{'commit_sha': '90f5e3bbfbfee6513d8d13fd83a2546c2140564a', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee4392ecdf9a749aca3b8077a3ee1ee12ddc7d37', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5eb80d6ce580dc8df049fc75e1e2192ea77ad094', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d941560e11cf54ae9aae6dd76e715908cf2d9ba', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
714078835,More tests for Neural ODEs with callbacks for different sensitivity algorithms,"This PR adds a test for `BacksolveAdjoint`, `InterpolatingAdjoint` and `QuadratureAdjoint` from https://github.com/SciML/DiffEqSensitivity.jl/issues/197 

Loss output for all algorithms:
```julia
13.929286083714693
11.849176349830037
9.946054506950405
8.221470597258575
6.675859697280678
5.308361230539284
4.116633668709657
3.0966739306017637
2.242654788367606
1.5467979034558708
0.9993040573034259
0.5883646361848607
0.30027807239489784
0.11969027365741683
0.029968076083835476
0.013699527219842533
0.053296103886046005
0.13165329839494805
0.23281191530403883
0.34255707381692163
```",True,475,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/475,https://github.com/SciML/SciMLSensitivity.jl/pull/475,closed,55,0,2,2,0,0,0,0,[],2021-08-17 09:38:22+00:00,2021-08-17 18:40:05+00:00,32503.0,9:01:43,[],"[{'commit_sha': '7a176837e188f00d47f07dad969d9563ea27ffe9', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0e37c4d1d06cdd16e32828068795730e9ddcf54', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
715760124,Support for PeriodicCallbacks in continuous adjoint methods,"Based on https://github.com/SciML/DiffEqCallbacks.jl/pull/102. 
Test case from: https://github.com/SciML/DiffEqSensitivity.jl/issues/407.

Note that I have changed the `save_start` and `save_positions` kwargs. I think that's more save for the callback handling. (However, I checked that `BacksolveAdjoint` and `ReverseDiffAdjoint` return the same result also for the original settings). Maybe there is still a small off-by-one error or changed execution order because the loss function for `InterpolatingAdjoint` and `QuadratureAdjoint`  is not exactly the same (but that could be just a tolerance issue .. and if it's not a tolerance issue, it is likely only related to saving in `_concrete_solve_adjoint` and not to the specific use of a `PeriodicCallback`).

```
38.587074f0
sensealg = ReverseDiffAdjoint()
31.935623f0
26.12166f0
21.145079f0
16.97131f0
13.536215f0
10.7556305f0
8.533596f0
6.7727137f0
5.3836746f0
4.2899213f0
3.428428f0
2.748733f0
2.2112525f0
1.7854321f0
1.4479604f0
1.1811781f0
0.9717165f0
0.809344f0
0.6860603f0
0.5953894f0
0.5318741f0
0.49072734f0
0.46763307f0
0.45864388f0
0.46015087f0
  
38.587074f0
sensealg = BacksolveAdjoint{0, true, Val{:central}, Bool, Bool}(true, true, true, false)
31.935625f0
26.12166f0
21.145075f0
16.9713f0
13.536214f0
10.755643f0
8.533596f0
6.7727175f0
5.383675f0
4.2899218f0
3.4284294f0
2.7487326f0
2.2112508f0
1.785431f0
1.4479609f0
1.1811768f0
0.97171664f0
0.80934304f0
0.68605965f0
0.59538954f0
0.53187424f0
0.49072796f0
0.46763346f0
0.45864394f0
0.46015087f0
  
38.587074f0
sensealg = InterpolatingAdjoint{0, true, Val{:central}, Bool, Bool}(true, false, true, false)
31.935625f0
26.121649f0
21.145008f0
16.971302f0
13.536384f0
10.755996f0
8.534129f0
6.7733884f0
5.3843994f0
4.290658f0
3.4291556f0
2.7494423f0
2.2119744f0
1.7862142f0
1.4488423f0
1.182192f0
0.9728826f0
0.8106657f0
0.6875203f0
0.59695727f0
0.53351104f0
0.492396f0
0.4693049f0
0.46029696f0
0.46177426f0
  
38.587074f0
sensealg = QuadratureAdjoint{0, true, Val{:central}, Bool}(true, 1.0e-6, 0.001, false)
31.935623f0
26.121656f0
21.145063f0
16.971312f0
13.536315f0
10.75587f0
8.533963f0
6.7731924f0
5.3842216f0
4.29048f0
3.4289286f0
2.7491155f0
2.2114804f0
1.785486f0
1.4478502f0
1.1809379f0
0.9713796f0
0.8089509f0
0.6856412f0
0.59497136f0
0.53147495f0
0.4903584f0
0.46730024f0
0.4583467f0
0.4598891f0
```",True,476,https://api.github.com/repos/SciML/SciMLSensitivity.jl/pulls/476,https://github.com/SciML/SciMLSensitivity.jl/pull/476,closed,99,6,5,2,0,0,0,0,[],2021-08-19 09:24:19+00:00,2021-08-19 15:41:37+00:00,22638.0,6:17:18,[],"[{'commit_sha': '20b6e502d6ba3ff0df05141bb460778bf2525b57', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08ab18f2b565143daae295a6059d33655b2edc26', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
634817320,"Fixes gradient, Jacobian, Hessian, and vjp tests","Current test status:
```julia
Test Summary:              | Pass  Fail  Error  Total
AbstractDifferentiation.jl |  103     1      1    105
  FiniteDifferences        |  103     1      1    105
    Derivative             |   12                  12
    Gradient               |   18                  18
    Jacobian               |   18                  18
    Hessian                |   30                  30
    jvp                    |    7     1      1      9
    j′vp                   |   18                  18
```
There are basically two fixes:
- FiniteDifferences mutates the input `x` to compute the gradients, so the value was computed wrongly. 
- when the identity was an `AbstractMatrix` it didn't loop over its columns but vectorized the entire matrix which lead to a dimension error. 

It remains to fix the jvp case.
```julia
test_fdm_jvp(fdm_backend1) # passes
test_fdm_jvp(fdm_backend2) # fails
test_fdm_jvp(fdm_backend3) # fails
```

For example, in `fdm_backend2`
```julia
v = (rand(length(xvec)), rand(length(yvec)))
pf1 = AD.pushforward_function(fdm_backend2, fjac, xvec, yvec)(v) 
```
results in a *single* output vector instead of a *tuple of two*  output vectors.
",True,2,https://api.github.com/repos/JuliaDiff/AbstractDifferentiation.jl/pulls/2,https://github.com/JuliaDiff/AbstractDifferentiation.jl/pull/2,closed,514,37,3,15,2,21,0,0,[],2021-05-08 19:31:13+00:00,2021-08-02 13:12:55+00:00,7407702.0,"85 days, 17:41:42","[{'comment_id': 628876530, 'comment_body': '```suggestion\r\n    if lowest(ab) isa AbstractFiniteDifference\r\n```', 'comment_created': datetime.datetime(2021, 5, 9, 11, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 652538179, 'comment_body': ""I don't think we should support multiplication if the derivative returns a tuple. This part of the code can be simplified."", 'comment_created': datetime.datetime(2021, 6, 16, 9, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 652539019, 'comment_body': 'Why is `xs` sometimes a tuple and sometimes not?', 'comment_created': datetime.datetime(2021, 6, 16, 9, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 652628030, 'comment_body': 'I wanted to support:\r\n `AD.LazyJacobian(fdm_backend, x->fjac(x, yvec), xvec)`\r\nwhere `xs` is then only a vector `xvec` and not `(xvec, )`.', 'comment_created': datetime.datetime(2021, 6, 16, 12, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 652631332, 'comment_body': ""Don't we want to support functions like `fder(x, y) = exp(y) * x + y * log(x)` for the LazyOperators as well?"", 'comment_created': datetime.datetime(2021, 6, 16, 12, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 653463715, 'comment_body': 'Hmm I guess we could.', 'comment_created': datetime.datetime(2021, 6, 17, 11, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653464214, 'comment_body': 'I see.', 'comment_created': datetime.datetime(2021, 6, 17, 11, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653466392, 'comment_body': 'why are we calling `vec`?', 'comment_created': datetime.datetime(2021, 6, 17, 11, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653467529, 'comment_body': 'unnecessary outer parenthesis', 'comment_created': datetime.datetime(2021, 6, 17, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653469864, 'comment_body': 'nitpick: inconsistent line formatting', 'comment_created': datetime.datetime(2021, 6, 17, 11, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653470662, 'comment_body': ""I don't think this does the right thing if `ys` is a matrix."", 'comment_created': datetime.datetime(2021, 6, 17, 11, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653474368, 'comment_body': 'how is this function different from the general fallback?', 'comment_created': datetime.datetime(2021, 6, 17, 11, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653474899, 'comment_body': 'can we combine this with the general fallback?', 'comment_created': datetime.datetime(2021, 6, 17, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653480564, 'comment_body': ""Could you please comment this part? It's not clear to me what's happening here."", 'comment_created': datetime.datetime(2021, 6, 17, 11, 35, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 653486331, 'comment_body': 'Could you explain this part?', 'comment_created': datetime.datetime(2021, 6, 17, 11, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 660964855, 'comment_body': 'Should we throw an error in that case or fix that manually by putting a `vec`?  I now combined  these `AbstractArray` specializations with the general fallback. They were just differing by stuff like `(y,)`.', 'comment_created': datetime.datetime(2021, 6, 29, 21, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 660965684, 'comment_body': 'good idea! See my comment above as well -- When I started I thought it makes sense to dispatch them all separately because of these tiny differences between Arrays, Tuples, and Numbers as input but it really leads to much more code and gets less readable..\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 29, 21, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 660967290, 'comment_body': 'nice catch -- was unnecessary here. I think I initially added it because of the `adjoint` with the pullback.', 'comment_created': datetime.datetime(2021, 6, 29, 21, 13, 18, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 660971887, 'comment_body': 'This is related to the comment above: https://github.com/JuliaDiff/AbstractDifferentiation.jl/pull/2#issuecomment-839138438 . \r\n\r\nThe resulting error traces back to the following: When we use: `v = (rand(length(xvec)), rand(length(yvec)))` with our `FDMBackend2` as the vector that we\'d like to pushforward through a  function `fvec(x,y)` that takes two inputs `x` and `y`, we get out an output that corresponds to the directional derivative with ""`v[1]` as the direction"" along x *and* ""`v[2]` as the direction"" along y. The other backends however interprete the `v` as change `x` along the direction `v[1]` while keeping `y` fix and  change `y` in the direction `v[2]` while keeping `x` fix.', 'comment_created': datetime.datetime(2021, 6, 29, 21, 21, 42, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 660976120, 'comment_body': ""This was the fix I added for the computation of the Hessian. `identity_like` and `cols` look as follows in that case:\r\n```julia\r\nidentity_like = ([1.0 0.0 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0; 0.0 0.0 1.0 0.0 0.0; 0.0 0.0 0.0 1.0 0.0; 0.0 0.0 0.0 0.0 1.0],)\r\nidentity_like[1] = [1.0 0.0 0.0 0.0 0.0; 0.0 1.0 0.0 0.0 0.0; 0.0 0.0 1.0 0.0 0.0; 0.0 0.0 0.0 1.0 0.0; 0.0 0.0 0.0 0.0 1.0]\r\ncols = [1.0, 0.0, 0.0, 0.0, 0.0]\r\ncols = [0.0, 1.0, 0.0, 0.0, 0.0]\r\ncols = [0.0, 0.0, 1.0, 0.0, 0.0]\r\ncols = [0.0, 0.0, 0.0, 1.0, 0.0]\r\ncols = [0.0, 0.0, 0.0, 0.0, 1.0]\r\n```\r\nso it was mainly to fix the input/output for the additional `pushforward` that is used. I'll need to check in a bit more detail if one can simplify that function a bit more. IIRC without that function I got dimension errors in the jvp of FiniteDifferences.jl because it would have pushed forward matrices like `identity_like[1]` instead of the columns.  "", 'comment_created': datetime.datetime(2021, 6, 29, 21, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 660979015, 'comment_body': "" but I think you are right that this needs some additional care.. I think the current version will break down once we'd like to compute a tuple of Hessians."", 'comment_created': datetime.datetime(2021, 6, 29, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}]","[{'commit_sha': '512fd2d5691ce10a530c4df64c0ed258dd27b1f1', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'caa72e1e6a7a33c8271bf4067b7b41ba51add397', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a763e3693fdf9e14c25dde454121730e45a2158', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6f48045fe9c4babf4efdbf9b2f977bf9cd51d98', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed5c4ef256eee0ba7e50400ab708f1f37f833db', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2991b8a5f7854664212d90c590e7798816b767aa', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddf2863ba89c7809b50ff8da21136b16ba3db913', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4269f83b99d52f80886384c52ad3496081d4512d', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '959fa013026b59e9c3fa1c622d366e376f7bdc8f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5102f01cfe90e660eafdbe190ae89e867e56f049', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6941f5ccfcc6c4726ebbec6dc051bd6c30d7848e', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c744f923cd48780fd123c75359bb230abe164737', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c0a147a47ed40df4b9157610a3bb6a2760a3412', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48af1083ad9e7e5e41397ad332b0278dd8c7add5', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f1538d8154c40e53d8bea0aae2198932b40250', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
701468532,add ForwardDiff and Zygote,,True,3,https://api.github.com/repos/JuliaDiff/AbstractDifferentiation.jl/pulls/3,https://github.com/JuliaDiff/AbstractDifferentiation.jl/pull/3,closed,494,293,3,8,4,12,0,0,[],2021-08-02 13:27:57+00:00,2021-08-28 12:53:57+00:00,2244360.0,"25 days, 23:26:00","[{'comment_id': 686139277, 'comment_body': 'Should we change `xs...` to `xs::AbstractVector`?', 'comment_created': datetime.datetime(2021, 8, 10, 16, 36, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686139398, 'comment_body': 'or just `x`', 'comment_created': datetime.datetime(2021, 8, 10, 16, 36, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686139800, 'comment_body': 'same comment in this function', 'comment_created': datetime.datetime(2021, 8, 10, 16, 36, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686139959, 'comment_body': 'and in this function', 'comment_created': datetime.datetime(2021, 8, 10, 16, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686140133, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 8, 10, 16, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686140307, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 8, 10, 16, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686141095, 'comment_body': 'why are we doing this?', 'comment_created': datetime.datetime(2021, 8, 10, 16, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686143460, 'comment_body': 'I am not sure if we should be using tuples at all for Hessians', 'comment_created': datetime.datetime(2021, 8, 10, 16, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mohamed82008', 'type': 'User'}, {'comment_id': 686605691, 'comment_body': ""So for Hessians, you would like to return just the `matrix` and not `(matrix,)` in all cases? I had a slight preference towards returning a tuple because then AD always returns a tuple.. but if we will never include a generalization of the Hessian, it's probably fine to return `matrix`.... should I change it? "", 'comment_created': datetime.datetime(2021, 8, 11, 8, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 686643957, 'comment_body': 'sounds good. There is one tiny downside: \r\nif `x` is not a tuple, we need to write:\r\n`value = primalvalue(ab, v, f, (x,))`\r\nor define additional dispatches for `primalvalue`.\r\n', 'comment_created': datetime.datetime(2021, 8, 11, 9, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 686656591, 'comment_body': 'For the `FDMBackend`s, there was no issue, e.g.,\r\n```julia\r\nfhess = x -> fgrad(x, yvec)\r\nhess1 = AD.hessian(fdm_backend2, fhess, xvec)\r\n```\r\nworks fine with a tuple as output of the gradient function. However, for ForwardDiff\r\n```julia\r\nstruct ForwardDiffBackend2 <: AD.AbstractForwardMode end\r\nconst forwarddiff_backend2 = ForwardDiffBackend2()\r\nAD.@primitive function pushforward_function(ab::ForwardDiffBackend2, f, xs...)\r\n    # jvp = f\'(x)*v, i.e., differentiate f(x + h*v) wrt h at 0\r\n    return function (vs)\r\n        if xs isa Tuple\r\n            @assert length(xs) <= 2\r\n            if length(xs) == 1\r\n                (ForwardDiff.derivative(h->f(xs[1]+h*vs[1]),0),)\r\n            else\r\n                ForwardDiff.derivative(h->f(xs[1]+h*vs[1], xs[2]+h*vs[2]),0)\r\n            end\r\n        else\r\n            ForwardDiff.derivative(h->f(xs+h*vs),0)\r\n        end\r\n    end\r\nend\r\nAD.primalvalue(::ForwardDiffBackend2, ::Any, f, xs) = ForwardDiff.value.(f(xs...))\r\nhess1 = AD.hessian(forwarddiff_backend2, fhess, xvec)\r\n```\r\nan error is thrown:\r\n```\r\nERROR: LoadError: MethodError: no method matching extract_derivative(::Type{ForwardDiff.Tag{var""#22#29""{Tuple{Vector{Float64}}, AbstractDifferentiation.var""#127#128""{ForwardDiffBackend2, var""#107#108""}, Tuple{Vector{Float64}}}, Int64}}, ::Tuple{Base.ReshapedArray{ForwardDiff.Dual{ForwardDiff.Tag{var""#22#29""{Tuple{Vector{Float64}}, AbstractDifferentiation.var""#127#128""{ForwardDiffBackend2, var""#107#108""}, Tuple{Vector{Float64}}}, Int64}, Float64, 1}, 1, Adjoint{ForwardDiff.Dual{ForwardDiff.Tag{var""#22#29""{Tuple{Vector{Float64}}, AbstractDifferentiation.var""#127#128""{ForwardDiffBackend2, var""#107#108""}, Tuple{Vector{Float64}}}, Int64}, Float64, 1}, Matrix{ForwardDiff.Dual{ForwardDiff.Tag{var""#22#29""{Tuple{Vector{Float64}}, AbstractDifferentiation.var""#127#128""{ForwardDiffBackend2, var""#107#108""}, Tuple{Vector{Float64}}}, Int64}, Float64, 1}}}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}})\r\nClosest candidates are:\r\n  extract_derivative(::Type{T}, ::ForwardDiff.Dual) where T at /Users/frank/.julia/packages/ForwardDiff/QOqCN/src/derivative.jl:81\r\n  extract_derivative(::Type{T}, ::Real) where T at /Users/frank/.julia/packages/ForwardDiff/QOqCN/src/derivative.jl:82\r\n  extract_derivative(::Type{T}, ::AbstractArray) where T at /Users/frank/.julia/packages/ForwardDiff/QOqCN/src/derivative.jl:83\r\nStacktrace:\r\n```\r\nsince all options were working when vectors are returned, I included those g[1].', 'comment_created': datetime.datetime(2021, 8, 11, 9, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 686667373, 'comment_body': 'that one was an old artefact. I removed it.', 'comment_created': datetime.datetime(2021, 8, 11, 9, 38, 19, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}]","[{'commit_sha': '60ef4528d0cf1b19122c2376f1982631dc0cad61', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0c489aeb89d2c35eac3e97f2a4e7f288f7e09a3', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0135125db9214bb9bd2ab47897a496c2fd115e45', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28da613bd379e67ddfb1eb357dbe6a55adca6c0f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d0f27e65a920a5a922ddbfb6c3595ea27c4f9ef', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eca9fda2975acae9976d2dee23537f6648da93d9', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96b1a263c4e0c2d9492dac20b89b0d145be5ae60', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c384a1b840e8fa9b02ca7bd9695b1782073154a4', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
657645211,Fix discrete reverse mode for some standard controllers,Fixes `ReverseDiffAdjoint` example at https://diffeqflux.sciml.ai/dev/examples/bouncing_ball/,True,1424,https://api.github.com/repos/SciML/OrdinaryDiffEq.jl/pulls/1424,https://github.com/SciML/OrdinaryDiffEq.jl/pull/1424,closed,67,26,5,7,4,20,0,0,[],2021-05-30 09:11:11+00:00,2021-06-01 13:47:41+00:00,189390.0,"2 days, 4:36:30","[{'comment_id': 642385388, 'comment_body': 'The Jacobian of the previous example was zero.  So I changed to the bouncing ball case.', 'comment_created': datetime.datetime(2021, 5, 31, 10, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 642390272, 'comment_body': ""I don't get the 1<->2 swap."", 'comment_created': datetime.datetime(2021, 5, 31, 10, 32, 41, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 642480655, 'comment_body': '🤷 ', 'comment_created': datetime.datetime(2021, 5, 31, 13, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642482514, 'comment_body': 'Sounds good.', 'comment_created': datetime.datetime(2021, 5, 31, 13, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642528291, 'comment_body': '@ChrisRackauckas are the remaining `DiffEqBase.value(EEst)` and  `DiffEqBase.value(qold)` ok?\r\nOr do they need to be set somewhere else? E.g. in https://github.com/SciML/OrdinaryDiffEq.jl/blob/e50ebf5c2c7b9ee8bdf079919add78851796d8f5/src/solve.jl#L394', 'comment_created': datetime.datetime(2021, 5, 31, 14, 27, 42, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 642537083, 'comment_body': ""Just never convert to `QT` and then `DiffEqBase.value` on those won't be necessary."", 'comment_created': datetime.datetime(2021, 5, 31, 14, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642680521, 'comment_body': 'Can you double check this works on the other controllers too?', 'comment_created': datetime.datetime(2021, 5, 31, 21, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642689984, 'comment_body': 'The `IController` and the `PIController` are fine. The tests for\r\n```\r\ng5 = Zygote.gradient(θ->test_f2(θ,ReverseDiffAdjoint(), PIDController(1/18. , 1/9., 1/18.)), p)\r\n```\r\nerrors:\r\n```julia\r\njulia> Zygote.gradient(θ->test_f2(θ,ReverseDiffAdjoint(), PIDController(1/18. , 1/9., 1/18.)), p)\r\nintegrator.t = TrackedReal<GFL>(0.4517539514526256, 0.0, KaQ, ---)\r\nbounced.\r\nERROR: BoundsError: attempt to access 0-element Vector{Any} at index []\r\nStacktrace:\r\n  [1] throw_boundserror(A::Vector{Any}, I::Tuple{})\r\n    @ Base ./abstractarray.jl:651\r\n  [2] checkbounds\r\n    @ ./abstractarray.jl:616 [inlined]\r\n  [3] _getindex\r\n    @ ./abstractarray.jl:1196 [inlined]\r\n  [4] getindex\r\n    @ ./abstractarray.jl:1170 [inlined]\r\n  [5] macro expansion\r\n    @ ~/.julia/packages/Zygote/i1R8y/src/lib/lib.jl:298 [inlined]\r\n  [6] (::Zygote.Jnew{MVector{3, Float64}, Vector{Any}, false})(Δ::Nothing)\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/lib/lib.jl:292\r\n  [7] #1723#back\r\n    @ ~/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59 [inlined]\r\n  [8] Pullback\r\n    @ ~/.julia/packages/StaticArrays/ECfU2/src/MArray.jl:30 [inlined]\r\n  [9] (::typeof(∂(MVector{3, Float64})))(Δ::Nothing)\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [10] Pullback\r\n    @ ~/.julia/packages/StaticArrays/ECfU2/src/convert.jl:4 [inlined]\r\n [11] Pullback\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/integrators/controllers.jl:241 [inlined]\r\n [12] (::typeof(∂(#PIDController#511)))(Δ::Nothing)\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [13] Pullback\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/integrators/controllers.jl:239 [inlined]\r\n [14] (::typeof(∂(PIDController)))(Δ::Nothing)\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [15] Pullback\r\n    @ ./none:1 [inlined]\r\n [16] (::typeof(∂(#81)))(Δ::Float64)\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [17] (::Zygote.var""#41#42""{typeof(∂(#81))})(Δ::Float64)\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface.jl:41\r\n [18] gradient(f::Function, args::Vector{Float64})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface.jl:59\r\n [19] top-level scope\r\n    @ none:1\r\n```\r\nI don\'t imediately see why it doens\'t work though https://github.com/SciML/OrdinaryDiffEq.jl/blob/e50ebf5c2c7b9ee8bdf079919add78851796d8f5/src/integrators/controllers.jl#L241.', 'comment_created': datetime.datetime(2021, 5, 31, 22, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 642690657, 'comment_body': 'the forward solution works:\r\n```julia\r\nsolve(prob,Tsit5(),controller=PIDController(1/18. , 1/9., 1/18.),\r\n  abstol=1e-14,reltol=1e-14,callback=cb,save_everystep=false)\r\n```\r\nHowever, both \r\n```\r\nZygote.gradient(θ->test_f2(θ,ReverseDiffAdjoint(), PIDController(1/18. , 1/9., 1/18.)), p)\r\nZygote.gradient(θ->test_f2(θ,ForwardDiffSensitivity(), PIDController(1/18. , 1/9., 1/18.)), p)\r\n```\r\nfail with the error reported above.', 'comment_created': datetime.datetime(2021, 5, 31, 22, 12, 14, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 642692723, 'comment_body': 'The indentation is not consistent.', 'comment_created': datetime.datetime(2021, 5, 31, 22, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 642693313, 'comment_body': 'Should DelayDiffEq mirror this?', 'comment_created': datetime.datetime(2021, 5, 31, 22, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 642694524, 'comment_body': 'Why do you need to call `Array` and just to get the last element?', 'comment_created': datetime.datetime(2021, 5, 31, 22, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'YingboMa', 'type': 'User'}, {'comment_id': 642699095, 'comment_body': 'It probably needs to.', 'comment_created': datetime.datetime(2021, 5, 31, 23, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642699136, 'comment_body': 'StochasticDiffEq / StochasticDelayDiffEq too.', 'comment_created': datetime.datetime(2021, 5, 31, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642699181, 'comment_body': ""you don't."", 'comment_created': datetime.datetime(2021, 5, 31, 23, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 642833960, 'comment_body': 'I changed it to `u[end][end]`.', 'comment_created': datetime.datetime(2021, 6, 1, 7, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 643027251, 'comment_body': 'how is PID failing? Also test PredictiveController (with Rosenbrock?)', 'comment_created': datetime.datetime(2021, 6, 1, 11, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 643061626, 'comment_body': 'Which algs are possible with PredictiveController? The cache needs the nlsolver. I found `RKC()` but that one aborts even in the forward solution with \r\n```julia\r\n┌ Warning: Interrupted. Larger maxiters is needed.\r\n└ @ SciMLBase ~/.julia/packages/SciMLBase/grNUR/src/integrator_interface.jl:331\r\n```', 'comment_created': datetime.datetime(2021, 6, 1, 12, 36, 15, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 643064039, 'comment_body': 'TRBDF2? Rosenbrock23?', 'comment_created': datetime.datetime(2021, 6, 1, 12, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 643069957, 'comment_body': '```\r\nsolve(prob,Rosenbrock23(),controller=OrdinaryDiffEq.PredictiveController(),\r\n  abstol=1e-14,reltol=1e-14,callback=cb,save_everystep=false)\r\n```\r\nresults in \r\n```\r\nERROR: type Rosenbrock23Cache has no field nlsolver\r\nStacktrace:\r\n  [1] getproperty(x::OrdinaryDiffEq.Rosenbrock23Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Matrix{Float64}, OrdinaryDiffEq.Rosenbrock23Tableau{Float64}, SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, DefaultLinSolve, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{Float64}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, Float64}, Float64, 1}}}, f::Symbol)\r\n    @ Base ./Base.jl:33\r\n  [2] macro expansion\r\n    @ ~/.julia/packages/UnPack/EkESO/src/UnPack.jl:100 [inlined]\r\n  [3] stepsize_controller!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/integrators/controllers.jl:363 [inlined]\r\n  [4] stepsize_controller!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/integrators/controllers.jl:5 [inlined]\r\n  [5] _loopfooter!(integrator::OrdinaryDiffEq.ODEIntegrator{Rosenbrock23{0, true, DefaultLinSolve, DataType}, true, Vector{Float64}, Nothing, Float64, Vector{Float64}, Float64, Float64, Float64, Float64, Vector{Vector{Float64}}, ODESolution{Float64, 2, Vector{Vector{Float64}}, Nothing, Nothing, Vector{Float64}, Vector{Vector{Vector{Float64}}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, Rosenbrock23{0, true, DefaultLinSolve, DataType}, OrdinaryDiffEq.InterpolationData{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Vector{Float64}}, Vector{Float64}, Vector{Vector{Vector{Float64}}}, OrdinaryDiffEq.Rosenbrock23Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Matrix{Float64}, OrdinaryDiffEq.Rosenbrock23Tableau{Float64}, SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, DefaultLinSolve, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{Float64}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, Float64}, Float64, 1}}}}, DiffEqBase.DEStats}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.Rosenbrock23Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Matrix{Float64}, OrdinaryDiffEq.Rosenbrock23Tableau{Float64}, SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, DefaultLinSolve, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{Float64}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, Float64}, Float64, 1}}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, Float64, OrdinaryDiffEq.PredictiveController, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Nothing, CallbackSet{Tuple{ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryMinHeap{Float64}, DataStructures.BinaryMinHeap{Float64}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Vector{Float64}, Float64, Nothing, OrdinaryDiffEq.DefaultInit})\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/integrators/integrator_utils.jl:188\r\n  [6] loopfooter!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/integrators/integrator_utils.jl:168 [inlined]\r\n  [7] solve!(integrator::OrdinaryDiffEq.ODEIntegrator{Rosenbrock23{0, true, DefaultLinSolve, DataType}, true, Vector{Float64}, Nothing, Float64, Vector{Float64}, Float64, Float64, Float64, Float64, Vector{Vector{Float64}}, ODESolution{Float64, 2, Vector{Vector{Float64}}, Nothing, Nothing, Vector{Float64}, Vector{Vector{Vector{Float64}}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, Rosenbrock23{0, true, DefaultLinSolve, DataType}, OrdinaryDiffEq.InterpolationData{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Vector{Float64}}, Vector{Float64}, Vector{Vector{Vector{Float64}}}, OrdinaryDiffEq.Rosenbrock23Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Matrix{Float64}, OrdinaryDiffEq.Rosenbrock23Tableau{Float64}, SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, DefaultLinSolve, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{Float64}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, Float64}, Float64, 1}}}}, DiffEqBase.DEStats}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.Rosenbrock23Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Matrix{Float64}, OrdinaryDiffEq.Rosenbrock23Tableau{Float64}, SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, DefaultLinSolve, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Float64, Vector{Float64}}, Float64}, Float64, 2}}, Vector{Float64}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.TimeGradientWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Float64}, Vector{Float64}}, Float64}, Float64, 1}}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, Float64, OrdinaryDiffEq.PredictiveController, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Nothing, CallbackSet{Tuple{ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryMinHeap{Float64}, DataStructures.BinaryMinHeap{Float64}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Vector{Float64}, Float64, Nothing, OrdinaryDiffEq.DefaultInit})\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/solve.jl:489\r\n  [8] __solve(::ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, ::Rosenbrock23{0, true, DefaultLinSolve, DataType}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:controller, :abstol, :reltol, :callback, :save_everystep), Tuple{OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}})\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/solve.jl:5\r\n  [9] #solve_call#56\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:61 [inlined]\r\n [10] #solve_up#58\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:82 [inlined]\r\n [11] #solve#57\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:70 [inlined]\r\n [12] top-level scope\r\n    @ none:1\r\n```\r\n\r\n\r\nTRBDF2 works forward. For the gradients it fails with:\r\n```julia\r\nERROR: MethodError: convert(::Type{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, ::ReverseDiff.TrackedReal{Float64, Float64, Nothing}) is ambiguous. Candidates:\r\n  convert(::Type{R}, t::T) where {R<:Real, T<:ReverseDiff.TrackedReal} in ReverseDiff at /Users/frank/.julia/packages/ReverseDiff/E4Tzn/src/tracked.jl:260\r\n  convert(::Type{ForwardDiff.Dual{T, V, N}}, x::Number) where {T, V, N} in ForwardDiff at /Users/frank/.julia/packages/ForwardDiff/QOqCN/src/dual.jl:371\r\n  convert(::Type{T}, x::Number) where T<:Number in Base at number.jl:7\r\n  convert(::Type{ForwardDiff.Dual{T, V, N}}, x) where {T, V, N} in ForwardDiff at /Users/frank/.julia/packages/ForwardDiff/QOqCN/src/dual.jl:370\r\nPossible fix, define\r\n  convert(::Type{ForwardDiff.Dual{T, V, N}}, ::T) where {T, V, N, T<:ReverseDiff.TrackedReal}\r\nStacktrace:\r\n  [1] setindex!(A::Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, x::ReverseDiff.TrackedReal{Float64, Float64, Nothing}, i1::Int64)\r\n    @ Base ./array.jl:839\r\n  [2] f(du::Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, u::Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, p::ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, t::ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}})\r\n    @ Main ~/.julia/dev/OrdinaryDiffEq/test/integrators/autodiff_events.jl:7\r\n  [3] (::ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing})(::Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, ::Vararg{Any, N} where N)\r\n    @ SciMLBase ~/.julia/packages/SciMLBase/grNUR/src/scimlfunctions.jl:334\r\n  [4] (::SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}})(du1::Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, uprev::Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}})\r\n    @ SciMLBase ~/.julia/packages/SciMLBase/grNUR/src/function_wrappers.jl:15\r\n  [5] forwarddiff_color_jacobian!(J::Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, f::SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, x::Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, jac_cache::SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing})\r\n    @ SparseDiffTools ~/.julia/packages/SparseDiffTools/HWfTE/src/differentiation/compute_jacobian_ad.jl:278\r\n  [6] jacobian!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/derivative_wrappers.jl:99 [inlined]\r\n  [7] calc_J!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/derivative_utils.jl:114 [inlined]\r\n  [8] calc_W!(W::Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, integrator::OrdinaryDiffEq.ODEIntegrator{TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Float64, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, ODESolution{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Nothing, Nothing, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, ODEProblem{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Tuple{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, true, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, OrdinaryDiffEq.InterpolationData{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}}, DiffEqBase.DEStats}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.PredictiveController, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Nothing, CallbackSet{Tuple{ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, OrdinaryDiffEq.DefaultInit}, nlsolver::OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}, cache::OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, dtgamma::ReverseDiff.TrackedReal{Float64, Float64, Nothing}, repeat_step::Bool, W_transform::Bool)\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/derivative_utils.jl:467\r\n  [9] update_W!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/derivative_utils.jl:538 [inlined]\r\n [10] nlsolve!(nlsolver::OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}, integrator::OrdinaryDiffEq.ODEIntegrator{TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Float64, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, ODESolution{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Nothing, Nothing, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, ODEProblem{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Tuple{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, true, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, OrdinaryDiffEq.InterpolationData{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}}, DiffEqBase.DEStats}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.PredictiveController, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Nothing, CallbackSet{Tuple{ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, OrdinaryDiffEq.DefaultInit}, cache::OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, repeat_step::Bool)\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/nlsolve/nlsolve.jl:19\r\n [11] perform_step!(integrator::OrdinaryDiffEq.ODEIntegrator{TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Float64, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, ODESolution{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Nothing, Nothing, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, ODEProblem{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Tuple{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, true, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, OrdinaryDiffEq.InterpolationData{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}}, DiffEqBase.DEStats}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.PredictiveController, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Nothing, CallbackSet{Tuple{ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, OrdinaryDiffEq.DefaultInit}, cache::OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, repeat_step::Bool)\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/perform_step/sdirk_perform_step.jl:406\r\n [12] perform_step!\r\n    @ ~/.julia/dev/OrdinaryDiffEq/src/perform_step/sdirk_perform_step.jl:387 [inlined]\r\n [13] solve!(integrator::OrdinaryDiffEq.ODEIntegrator{TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Float64, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, ODESolution{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Nothing, Nothing, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, ODEProblem{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Tuple{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, true, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, OrdinaryDiffEq.InterpolationData{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}}}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}}, DiffEqBase.DEStats}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, OrdinaryDiffEq.TRBDF2Cache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.TRBDF2Tableau{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, OrdinaryDiffEq.NLSolver{NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, true, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.NLNewtonCache{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, Matrix{ReverseDiff.TrackedReal{Float64, Float64, Nothing}}, SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, SparseDiffTools.ForwardColorJacCache{Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{SciMLBase.UJacobianWrapper{ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, 2}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Vector{Vector{Tuple{Bool, Bool}}}, UnitRange{Int64}, Nothing}, DefaultLinSolve}}}, OrdinaryDiffEq.DEOptions{Float64, Float64, Float64, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, OrdinaryDiffEq.PredictiveController, typeof(DiffEqBase.ODE_DEFAULT_NORM), typeof(LinearAlgebra.opnorm), Nothing, CallbackSet{Tuple{ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}}, Tuple{}}, typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, DataStructures.BinaryMinHeap{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Nothing, Nothing, Int64, Tuple{}, Tuple{}, Tuple{}}, Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, Nothing, OrdinaryDiffEq.DefaultInit})\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/solve.jl:488\r\n [14] __solve(::ODEProblem{Vector{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, Tuple{ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}, ReverseDiff.TrackedReal{Float64, Float64, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}}, true, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, ::TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:controller, :abstol, :reltol, :callback, :save_everystep), Tuple{OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}})\r\n    @ OrdinaryDiffEq ~/.julia/dev/OrdinaryDiffEq/src/solve.jl:5\r\n [15] #solve_call#56\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:61 [inlined]\r\n [16] #solve_up#58\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:82 [inlined]\r\n [17] #solve#57\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:70 [inlined]\r\n [18] (::DiffEqSensitivity.var""#reversediff_adjoint_forwardpass#206""{Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:controller, :abstol, :reltol, :callback, :save_everystep), Tuple{OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, ReverseDiffAdjoint, Tuple{}})(_u0::ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, _p::ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}})\r\n    @ DiffEqSensitivity ~/.julia/dev/DiffEqSensitivity/src/concrete_solve.jl:396\r\n [19] ReverseDiff.GradientTape(f::Function, input::Tuple{Vector{Float64}, Vector{Float64}}, cfg::ReverseDiff.GradientConfig{Tuple{ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}}})\r\n    @ ReverseDiff ~/.julia/packages/ReverseDiff/E4Tzn/src/api/tape.jl:207\r\n [20] GradientTape\r\n    @ ~/.julia/packages/ReverseDiff/E4Tzn/src/api/tape.jl:204 [inlined]\r\n [21] _concrete_solve_adjoint(::ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, ::TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType}, ::ReverseDiffAdjoint, ::Vector{Float64}, ::Vector{Float64}; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:controller, :abstol, :reltol, :callback, :save_everystep), Tuple{OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}})\r\n    @ DiffEqSensitivity ~/.julia/dev/DiffEqSensitivity/src/concrete_solve.jl:406\r\n [22] #_solve_adjoint#81\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:329 [inlined]\r\n [23] #adjoint#72\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:293 [inlined]\r\n [24] _pullback(__context__::Zygote.Context, #unused#::DiffEqBase.var""#solve_up##kw"", kw::NamedTuple{(:controller, :abstol, :reltol, :callback, :save_everystep), Tuple{OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}, 319::typeof(DiffEqBase.solve_up), prob::ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, sensealg::ReverseDiffAdjoint, u0::Vector{Float64}, p::Vector{Float64}, args::TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType})\r\n    @ DiffEqBase ~/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:63\r\n [25] _apply(::Function, ::Vararg{Any, N} where N)\r\n    @ Core ./boot.jl:804\r\n [26] adjoint\r\n    @ ~/.julia/packages/Zygote/i1R8y/src/lib/lib.jl:191 [inlined]\r\n [27] _pullback\r\n    @ ~/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:57 [inlined]\r\n [28] _pullback\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:70 [inlined]\r\n [29] _pullback(::Zygote.Context, ::DiffEqBase.var""##solve#57"", ::ReverseDiffAdjoint, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol, Any, NTuple{5, Symbol}, NamedTuple{(:controller, :abstol, :reltol, :callback, :save_everystep), Tuple{OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}}, ::typeof(solve), ::ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, ::TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [30] _apply(::Function, ::Vararg{Any, N} where N)\r\n    @ Core ./boot.jl:804\r\n [31] adjoint\r\n    @ ~/.julia/packages/Zygote/i1R8y/src/lib/lib.jl:191 [inlined]\r\n [32] _pullback\r\n    @ ~/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:57 [inlined]\r\n [33] _pullback\r\n    @ ~/.julia/packages/DiffEqBase/lULzQ/src/solve.jl:68 [inlined]\r\n [34] _pullback(::Zygote.Context, ::CommonSolve.var""#solve##kw"", ::NamedTuple{(:sensealg, :controller, :abstol, :reltol, :callback, :save_everystep), Tuple{ReverseDiffAdjoint, OrdinaryDiffEq.PredictiveController, Float64, Float64, ContinuousCallback{typeof(condition), typeof(affect!), typeof(affect!), typeof(DiffEqBase.INITIALIZE_DEFAULT), typeof(DiffEqBase.FINALIZE_DEFAULT), Float64, Int64, Nothing, Int64}, Bool}}, ::typeof(solve), ::ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, typeof(f), LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardODEProblem}, ::TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [35] _pullback\r\n    @ ~/.julia/dev/OrdinaryDiffEq/test/integrators/autodiff_events.jl:39 [inlined]\r\n [36] _pullback(::Zygote.Context, ::typeof(test_f2), ::Vector{Float64}, ::ReverseDiffAdjoint, ::OrdinaryDiffEq.PredictiveController, ::TRBDF2{0, true, DefaultLinSolve, NLNewton{Rational{Int64}, Rational{Int64}, Rational{Int64}}, DataType})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [37] _pullback\r\n    @ ./none:1 [inlined]\r\n [38] _pullback(ctx::Zygote.Context, f::var""#125#126"", args::Vector{Float64})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface2.jl:0\r\n [39] _pullback(f::Function, args::Vector{Float64})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface.jl:34\r\n [40] pullback(f::Function, args::Vector{Float64})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface.jl:40\r\n [41] gradient(f::Function, args::Vector{Float64})\r\n    @ Zygote ~/.julia/packages/Zygote/i1R8y/src/compiler/interface.jl:58\r\n [42] top-level scope\r\n    @ none:1\r\n\r\n```\r\n(it works with ForwardDiffSensitivity() though.)\r\n', 'comment_created': datetime.datetime(2021, 6, 1, 12, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}]","[{'commit_sha': '765020100b0bd20f5e2802b40d946ccedcd708b0', 'committer_username': 'Vaibhavdixit02', 'committer_name': 'Vaibhav Kumar Dixit', 'committer_email': 'vaibhavyashdixit@gmail.com', 'commit_date': datetime.datetime(2016, 10, 29, 8, 54, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd30cb473c2e395c5e7612fbb11e916997e0ceac6', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9775f2988186217e8be79b55d82112b710bcbf0', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e9c0f612b498eb1a1dfb798c31e232886ac5e6e', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3311a7806eb1cb475bc9084a182eb15e66db2fdb', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aadaf00afc2106807fad436d4d6a5b0b730dbbc', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e6306e05973f29cd6f0ec46b01dd4186b45f5b8', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",Vaibhav Kumar Dixit,23134958,vaibhavyashdixit@gmail.com,User,,121,,231,145
715261971,introduce a PeriodicCallbackAffect struct,"Potentially (I haven't tried it yet because I'm not sure if this introduces other problems) we could solve `FakeIntegrator` issues like https://github.com/SciML/DiffEqSensitivity.jl/issues/407 by explicitly introducing structs for the `affect!` function.

Then we could use a dispatch on a `get_affect!(cb.affect!)` function in DiffEqSensitivity to avoid the ""full affect"" function and use the ""user affect"" function `f` instead.",True,102,https://api.github.com/repos/SciML/DiffEqCallbacks.jl/pulls/102,https://github.com/SciML/DiffEqCallbacks.jl/pull/102,closed,39,21,3,1,1,0,0,0,[],2021-08-18 16:52:34+00:00,2021-08-18 21:20:32+00:00,16078.0,4:27:58,[],"[{'commit_sha': '63fff605b822d968641a24f05b03e98d49c6d598', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
660107752,convert `alg.tspan` to type of prob.u0,fixes Float32 vs Float64 type error in https://github.com/SciML/DiffEqFlux.jl/issues/567.,True,31,https://api.github.com/repos/SciML/SteadyStateDiffEq.jl/pulls/31,https://github.com/SciML/SteadyStateDiffEq.jl/pull/31,closed,34,1,2,1,0,0,0,0,[],2021-06-02 14:13:50+00:00,2021-06-02 14:23:38+00:00,588.0,0:09:48,[],"[{'commit_sha': '73561556486a15f42f767dbed24c5dbc0c5dd67d', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
716269309,do not differentiate through the construction of BitArray,"Based on @oxinabox 's reply here: https://github.com/SciML/DiffEqFlux.jl/issues/502#issuecomment-902023817 .

This solves also the issues with the callback construction in https://github.com/SciML/DiffEqFlux.jl/issues/502.

Does it need a test? Should I maybe add one from https://github.com/SciML/DiffEqFlux.jl/issues/502#issuecomment-902015247 in here: https://github.com/JuliaDiff/ChainRules.jl/blob/master/test/rulesets/Base/array.jl ?",True,506,https://api.github.com/repos/JuliaDiff/ChainRules.jl/pulls/506,https://github.com/JuliaDiff/ChainRules.jl/pull/506,closed,2,1,2,3,3,6,0,0,[],2021-08-19 21:18:41+00:00,2021-08-19 22:04:10+00:00,2729.0,0:45:29,"[{'comment_id': 692516121, 'comment_body': 'Minor change.\nThose is a feature not a bug fix\n\n\n```suggestion\nversion = ""1.10.0""\n```\n', 'comment_created': datetime.datetime(2021, 8, 19, 22, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 692728891, 'comment_body': ""Is there a reason we didn't splat this?\r\n```julia\r\n@non_differentiable BitArray(::Any...)\r\n```"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mzgubic', 'type': 'User'}, {'comment_id': 692773162, 'comment_body': ""Doesn't it only have 1 constructor?\nI didn't actually check "", 'comment_created': datetime.datetime(2021, 8, 20, 8, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'oxinabox', 'type': 'User'}, {'comment_id': 692790366, 'comment_body': '```julia\r\njulia> methods(BitArray)\r\n# 6 methods for type constructor:\r\n[1] BitArray(::UndefInitializer, dims::Integer...) in Base at bitarray.jl:69\r\n[2] BitArray(::UndefInitializer, dims::Tuple{Vararg{Integer, N}}) where N in Base at bitarray.jl:71\r\n[3] BitArray(x::BitArray) in Base at bitarray.jl:543\r\n[4] BitArray(A::AbstractArray{var""#s79"", N} where var""#s79"") where N in Base at bitarray.jl:503\r\n[5] (::Type{T})(x::T) where T<:BitArray in Base at bitarray.jl:542\r\n[6] BitArray(itr) in Base at bitarray.jl:574\r\n```\r\nthere seems to be more', 'comment_created': datetime.datetime(2021, 8, 20, 9, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mzgubic', 'type': 'User'}, {'comment_id': 692850120, 'comment_body': 'Should I make another PR?', 'comment_created': datetime.datetime(2021, 8, 20, 10, 43, 3, tzinfo=datetime.timezone.utc), 'commenter': 'frankschae', 'type': 'User'}, {'comment_id': 692850910, 'comment_body': 'Please do, that would be great, thanks!', 'comment_created': datetime.datetime(2021, 8, 20, 10, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mzgubic', 'type': 'User'}]","[{'commit_sha': '8b0e08b796f7b5c9431088a87f87f3cd369c584a', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97bdeb0f74dde20c5a827b231a4a5fe61e200d5f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61db84a36929ff072a2a83a88bede37cf603900d', 'committer_username': 'oxinabox', 'committer_name': 'Frames White', 'committer_email': 'me@oxinabox.net', 'commit_date': datetime.datetime(2013, 7, 31, 8, 12, 4, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
716641971,use splatting in BitArray,According to @mzgubic suggestion from https://github.com/JuliaDiff/ChainRules.jl/pull/506 .,True,508,https://api.github.com/repos/JuliaDiff/ChainRules.jl/pulls/508,https://github.com/JuliaDiff/ChainRules.jl/pull/508,closed,2,2,2,4,5,1,0,0,[],2021-08-20 10:57:17+00:00,2021-08-20 17:23:04+00:00,23147.0,6:25:47,"[{'comment_id': 692866914, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 20, 11, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mzgubic', 'type': 'User'}]","[{'commit_sha': 'e4fa699cc13e03c162755d1f089586de22d8c39e', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a76675b524b5ce9b1eed93bcdd72b7e94266c2e6', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26120209ce32479845362fc90a30faf33f75cb16', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f91596b0ef2a4320e073577ccaa783ef07cb6a87', 'committer_username': 'mzgubic', 'committer_name': 'Miha Zgubic', 'committer_email': None, 'commit_date': datetime.datetime(2015, 10, 20, 10, 12, 34, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
677278876,allow solvers to use Noise Grid with SVectors,"For the MitosisStochasticDiffEq JuliaCon example https://github.com/mschauer/MitosisStochasticDiffEq.jl/pull/62, we currently have a few workarounds which basically just avoid inplace mutations with `NoiseGrid` when using SVectors. Wouldn't it make sense to make this a default? ",True,94,https://api.github.com/repos/SciML/DiffEqNoiseProcess.jl/pulls/94,https://github.com/SciML/DiffEqNoiseProcess.jl/pull/94,closed,1,1,1,2,1,0,0,0,[],2021-06-24 16:50:06+00:00,2021-06-24 20:31:42+00:00,13296.0,3:41:36,[],"[{'commit_sha': '6797e9e476c4af6b9a7610763642eece3dad2d93', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c65f756ed4d02f01de510d63fd131246f3ef3f', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
697753297,Remove Ihat2 matrix from weak solvers,"see https://github.com/SciML/StochasticDiffEq.jl/issues/427 

`NON2` is the only method that doesn't exclusively access individual elements of the matrix `Ihat2` but instead it also contains matmuls of `g` with rows of `Ihat2`.  ",True,428,https://api.github.com/repos/SciML/StochasticDiffEq.jl/pulls/428,https://github.com/SciML/StochasticDiffEq.jl/pull/428,closed,163,204,4,4,0,0,0,0,[],2021-07-27 10:56:30+00:00,2021-07-27 16:48:41+00:00,21131.0,5:52:11,[],"[{'commit_sha': 'd82e38b4103d6eae1a9287844bb496dd5ac79dca', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dc1ebb0b3e7bfab1071ec3d1f56009af9481224', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16fce61f85d04af6e181ce4791a56242f6417ae', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39895abfba5eabaee63d080bddf00067e4928885', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
706498554,Small typo on plot page,,True,490,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/490,https://github.com/SciML/DiffEqDocs.jl/pull/490,closed,2,2,1,1,0,0,0,0,[],2021-08-09 12:59:58+00:00,2021-08-09 14:07:39+00:00,4061.0,1:07:41,[],"[{'commit_sha': '87df3d8177f6516d74c5414fa61a8d78c50fc609', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71
713499752,Add docs for shadowing methods,"first draft. Should `ForwardLSSProblem`, `AdjointLSSProblem`, and `NILSSProblem` be described in more detail?",True,492,https://api.github.com/repos/SciML/DiffEqDocs.jl/pulls/492,https://github.com/SciML/DiffEqDocs.jl/pull/492,closed,84,0,1,2,0,1,0,0,[],2021-08-16 14:42:37+00:00,2021-08-16 15:14:24+00:00,1907.0,0:31:47,"[{'comment_id': 689601569, 'comment_body': 'mention these in the big list above as well, and mention that they are expanded in this section.', 'comment_created': datetime.datetime(2021, 8, 16, 14, 44, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}]","[{'commit_sha': '3f40a8ae3e041c73352a126c61f1e7ae7927c3a8', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a797ed63ad46c8e6d668e0f081d191dcc4876ce3', 'committer_username': 'frankschae', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2018, 8, 8, 7, 53, 23, tzinfo=datetime.timezone.utc)}]",,42201748,,User,,32,,37,71

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
72665210,SciMLSensitivity.jl,SciML/SciMLSensitivity.jl,Julia,70,328,19,53,3297,100,28,7,"[{'id': 1492542855, 'number': 887, 'closed': datetime.datetime(2023, 9, 16, 1, 44, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 28, 18, 47, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1580239.0, 'time_delta': '18 days, 6:57:19', 'additions': 44, 'deletions': 9, 'state': 'closed'}, {'id': 1460618635, 'number': 857, 'closed': datetime.datetime(2023, 8, 8, 15, 42, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 3, 0, 59, 44, tzinfo=datetime.timezone.utc), 'time_taken': 484972.0, 'time_delta': '5 days, 14:42:52', 'additions': 27, 'deletions': 15, 'state': 'closed'}, {'id': 1444778133, 'number': 853, 'closed': datetime.datetime(2023, 7, 31, 6, 19, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 21, 17, 11, 29, tzinfo=datetime.timezone.utc), 'time_taken': 824886.0, 'time_delta': '9 days, 13:08:06', 'additions': 3629, 'deletions': 3421, 'state': 'closed'}, {'id': 1189834370, 'number': 763, 'closed': datetime.datetime(2023, 1, 9, 15, 51, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 8, 14, 2, 39, tzinfo=datetime.timezone.utc), 'time_taken': 92949.0, 'time_delta': '1 day, 1:49:09', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1189411673, 'number': 762, 'closed': datetime.datetime(2023, 1, 10, 21, 39, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 7, 17, 35, 28, tzinfo=datetime.timezone.utc), 'time_taken': 273829.0, 'time_delta': '3 days, 4:03:49', 'additions': 324, 'deletions': 200, 'state': 'closed'}, {'id': 1101924969, 'number': 747, 'closed': datetime.datetime(2022, 11, 16, 19, 33, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 27, 16, 7, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1740358.0, 'time_delta': '20 days, 3:25:58', 'additions': 197, 'deletions': 100, 'state': 'closed'}, {'id': 1061924591, 'number': 732, 'closed': datetime.datetime(2023, 1, 6, 13, 20, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 18, 14, 40, tzinfo=datetime.timezone.utc), 'time_taken': 9313532.0, 'time_delta': '107 days, 19:05:32', 'additions': 96, 'deletions': 39, 'state': 'closed'}, {'id': 1055145870, 'number': 731, 'closed': datetime.datetime(2022, 9, 15, 3, 33, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 13, 20, 18, 51, tzinfo=datetime.timezone.utc), 'time_taken': 112494.0, 'time_delta': '1 day, 7:14:54', 'additions': 107, 'deletions': 22, 'state': 'closed'}, {'id': 1053741475, 'number': 730, 'closed': datetime.datetime(2022, 9, 14, 4, 42, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 12, 18, 39, 4, tzinfo=datetime.timezone.utc), 'time_taken': 122621.0, 'time_delta': '1 day, 10:03:41', 'additions': 58, 'deletions': 2, 'state': 'closed'}, {'id': 1016774823, 'number': 703, 'closed': datetime.datetime(2022, 8, 5, 4, 14, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 20, 23, 55, tzinfo=datetime.timezone.utc), 'time_taken': 114612.0, 'time_delta': '1 day, 7:50:12', 'additions': 67, 'deletions': 12, 'state': 'closed'}, {'id': 1002858472, 'number': 692, 'closed': datetime.datetime(2022, 7, 21, 1, 10, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 19, 58, 40, tzinfo=datetime.timezone.utc), 'time_taken': 18727.0, 'time_delta': '5:12:07', 'additions': 249, 'deletions': 86, 'state': 'closed'}, {'id': 999739091, 'number': 690, 'closed': datetime.datetime(2022, 7, 19, 4, 38, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 18, 16, 32, tzinfo=datetime.timezone.utc), 'time_taken': 37330.0, 'time_delta': '10:22:10', 'additions': 197, 'deletions': 45, 'state': 'closed'}, {'id': 993338804, 'number': 687, 'closed': datetime.datetime(2022, 7, 12, 0, 23, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 11, 16, 56, 3, tzinfo=datetime.timezone.utc), 'time_taken': 26845.0, 'time_delta': '7:27:25', 'additions': 63, 'deletions': 3, 'state': 'closed'}, {'id': 992028546, 'number': 684, 'closed': datetime.datetime(2022, 7, 10, 4, 30, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 8, 20, 46, 32, tzinfo=datetime.timezone.utc), 'time_taken': 114228.0, 'time_delta': '1 day, 7:43:48', 'additions': 61, 'deletions': 13, 'state': 'closed'}, {'id': 980491078, 'number': 675, 'closed': datetime.datetime(2022, 7, 6, 20, 26, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 20, 13, 20, tzinfo=datetime.timezone.utc), 'time_taken': 778400.0, 'time_delta': '9 days, 0:13:20', 'additions': 996, 'deletions': 698, 'state': 'closed'}, {'id': 977418672, 'number': 662, 'closed': datetime.datetime(2022, 6, 25, 8, 51, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 16, 59, 20, tzinfo=datetime.timezone.utc), 'time_taken': 143559.0, 'time_delta': '1 day, 15:52:39', 'additions': 126, 'deletions': 147, 'state': 'closed'}, {'id': 975747255, 'number': 657, 'closed': datetime.datetime(2022, 6, 25, 8, 41, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 20, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 216327.0, 'time_delta': '2 days, 12:05:27', 'additions': 688, 'deletions': 570, 'state': 'closed'}, {'id': 966112477, 'number': 621, 'closed': datetime.datetime(2022, 6, 13, 19, 57, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 13, 19, 34, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1370.0, 'time_delta': '0:22:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 964307272, 'number': 606, 'closed': datetime.datetime(2022, 6, 11, 2, 40, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 16, 3, 10, tzinfo=datetime.timezone.utc), 'time_taken': 38220.0, 'time_delta': '10:37:00', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 960930866, 'number': 602, 'closed': datetime.datetime(2022, 6, 9, 21, 59, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 7, 21, 37, 55, tzinfo=datetime.timezone.utc), 'time_taken': 174086.0, 'time_delta': '2 days, 0:21:26', 'additions': 198, 'deletions': 69, 'state': 'closed'}, {'id': 959332705, 'number': 600, 'closed': datetime.datetime(2022, 6, 7, 0, 59, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 6, 16, 57, 4, tzinfo=datetime.timezone.utc), 'time_taken': 28935.0, 'time_delta': '8:02:15', 'additions': 716, 'deletions': 677, 'state': 'closed'}, {'id': 954162210, 'number': 589, 'closed': datetime.datetime(2022, 6, 1, 16, 17, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 1, 15, 22, 53, tzinfo=datetime.timezone.utc), 'time_taken': 3282.0, 'time_delta': '0:54:42', 'additions': 119, 'deletions': 32, 'state': 'closed'}, {'id': 952502423, 'number': 588, 'closed': datetime.datetime(2022, 6, 1, 13, 11, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 31, 22, 59, 33, tzinfo=datetime.timezone.utc), 'time_taken': 51137.0, 'time_delta': '14:12:17', 'additions': 189, 'deletions': 112, 'state': 'closed'}, {'id': 951282590, 'number': 587, 'closed': datetime.datetime(2022, 5, 30, 21, 33, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 30, 19, 43, 24, tzinfo=datetime.timezone.utc), 'time_taken': 6599.0, 'time_delta': '1:49:59', 'additions': 48, 'deletions': 14, 'state': 'closed'}, {'id': 949608422, 'number': 580, 'closed': datetime.datetime(2022, 6, 5, 11, 0, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 18, 13, 2, tzinfo=datetime.timezone.utc), 'time_taken': 751648.0, 'time_delta': '8 days, 16:47:28', 'additions': 24, 'deletions': 11, 'state': 'closed'}, {'id': 908824096, 'number': 570, 'closed': datetime.datetime(2022, 5, 10, 6, 27, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 13, 11, 34, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2314421.0, 'time_delta': '26 days, 18:53:41', 'additions': 156, 'deletions': 117, 'state': 'closed'}, {'id': 898703775, 'number': 565, 'closed': datetime.datetime(2022, 6, 7, 13, 12, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 4, 8, 14, 21, tzinfo=datetime.timezone.utc), 'time_taken': 5547476.0, 'time_delta': '64 days, 4:57:56', 'additions': 28, 'deletions': 17, 'state': 'closed'}, {'id': 861213032, 'number': 557, 'closed': datetime.datetime(2022, 3, 1, 14, 39, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 23, 9, 39, 53, tzinfo=datetime.timezone.utc), 'time_taken': 536381.0, 'time_delta': '6 days, 4:59:41', 'additions': 201, 'deletions': 162, 'state': 'closed'}, {'id': 817068848, 'number': 536, 'closed': datetime.datetime(2022, 1, 10, 3, 35, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 9, 16, 36, 31, tzinfo=datetime.timezone.utc), 'time_taken': 39524.0, 'time_delta': '10:58:44', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 770937857, 'number': 507, 'closed': datetime.datetime(2022, 2, 3, 22, 58, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 22, 41, 33, tzinfo=datetime.timezone.utc), 'time_taken': 8122615.0, 'time_delta': '94 days, 0:16:55', 'additions': 204, 'deletions': 59, 'state': 'closed'}, {'id': 764874528, 'number': 505, 'closed': datetime.datetime(2021, 10, 26, 16, 48, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 24, 13, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 184623.0, 'time_delta': '2 days, 3:17:03', 'additions': 26, 'deletions': 5, 'state': 'closed'}, {'id': 743635710, 'number': 496, 'closed': datetime.datetime(2021, 10, 12, 11, 42, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 27, 16, 34, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1278505.0, 'time_delta': '14 days, 19:08:25', 'additions': 76, 'deletions': 2, 'state': 'closed'}, {'id': 726759245, 'number': 488, 'closed': datetime.datetime(2021, 9, 12, 11, 55, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 3, 12, 15, 36, tzinfo=datetime.timezone.utc), 'time_taken': 776415.0, 'time_delta': '8 days, 23:40:15', 'additions': 670, 'deletions': 17, 'state': 'closed'}, {'id': 722453959, 'number': 486, 'closed': datetime.datetime(2021, 8, 30, 23, 5, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 30, 12, 39, 46, tzinfo=datetime.timezone.utc), 'time_taken': 37562.0, 'time_delta': '10:26:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 715760124, 'number': 476, 'closed': datetime.datetime(2021, 8, 19, 15, 41, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 9, 24, 19, tzinfo=datetime.timezone.utc), 'time_taken': 22638.0, 'time_delta': '6:17:18', 'additions': 99, 'deletions': 6, 'state': 'closed'}, {'id': 714078835, 'number': 475, 'closed': datetime.datetime(2021, 8, 17, 18, 40, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 9, 38, 22, tzinfo=datetime.timezone.utc), 'time_taken': 32503.0, 'time_delta': '9:01:43', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 713390838, 'number': 474, 'closed': datetime.datetime(2021, 8, 16, 22, 0, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 12, 23, 8, tzinfo=datetime.timezone.utc), 'time_taken': 34656.0, 'time_delta': '9:37:36', 'additions': 53, 'deletions': 33, 'state': 'closed'}, {'id': 688204227, 'number': 445, 'closed': datetime.datetime(2021, 8, 13, 18, 44, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 21, 52, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2753538.0, 'time_delta': '31 days, 20:52:18', 'additions': 528, 'deletions': 111, 'state': 'closed'}, {'id': 687190701, 'number': 444, 'closed': datetime.datetime(2021, 7, 10, 22, 44, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 14, 25, 42, tzinfo=datetime.timezone.utc), 'time_taken': 29920.0, 'time_delta': '8:18:40', 'additions': 38, 'deletions': 8, 'state': 'closed'}, {'id': 687188524, 'number': 443, 'closed': datetime.datetime(2021, 7, 10, 18, 33, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 14, 8, 34, tzinfo=datetime.timezone.utc), 'time_taken': 15890.0, 'time_delta': '4:24:50', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 684476791, 'number': 442, 'closed': datetime.datetime(2021, 7, 10, 12, 24, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 15, 27, 46, tzinfo=datetime.timezone.utc), 'time_taken': 334603.0, 'time_delta': '3 days, 20:56:43', 'additions': 38, 'deletions': 13, 'state': 'closed'}, {'id': 681950970, 'number': 437, 'closed': datetime.datetime(2021, 7, 1, 16, 38, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 15, 14, 2, tzinfo=datetime.timezone.utc), 'time_taken': 5057.0, 'time_delta': '1:24:17', 'additions': 608, 'deletions': 5, 'state': 'closed'}, {'id': 669891874, 'number': 423, 'closed': datetime.datetime(2021, 6, 16, 8, 41, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 21, 34, 28, tzinfo=datetime.timezone.utc), 'time_taken': 126419.0, 'time_delta': '1 day, 11:06:59', 'additions': 403, 'deletions': 59, 'state': 'closed'}, {'id': 669442671, 'number': 422, 'closed': datetime.datetime(2021, 6, 14, 12, 57, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 10, 23, 58, tzinfo=datetime.timezone.utc), 'time_taken': 9232.0, 'time_delta': '2:33:52', 'additions': 218, 'deletions': 30, 'state': 'closed'}, {'id': 667382269, 'number': 420, 'closed': datetime.datetime(2021, 6, 12, 2, 28, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 20, 41, 21, tzinfo=datetime.timezone.utc), 'time_taken': 107246.0, 'time_delta': '1 day, 5:47:26', 'additions': 497, 'deletions': 3, 'state': 'closed'}, {'id': 663902516, 'number': 419, 'closed': datetime.datetime(2021, 6, 8, 16, 30, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 20, 46, 59, tzinfo=datetime.timezone.utc), 'time_taken': 71024.0, 'time_delta': '19:43:44', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 663525183, 'number': 418, 'closed': datetime.datetime(2021, 6, 7, 14, 18, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 12, 38, 13, tzinfo=datetime.timezone.utc), 'time_taken': 5998.0, 'time_delta': '1:39:58', 'additions': 56, 'deletions': 27, 'state': 'closed'}, {'id': 661798382, 'number': 417, 'closed': datetime.datetime(2021, 6, 6, 17, 48, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 14, 7, 56, tzinfo=datetime.timezone.utc), 'time_taken': 186057.0, 'time_delta': '2 days, 3:40:57', 'additions': 134, 'deletions': 36, 'state': 'closed'}, {'id': 656792632, 'number': 416, 'closed': datetime.datetime(2021, 5, 28, 19, 35, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 16, 52, 56, tzinfo=datetime.timezone.utc), 'time_taken': 9744.0, 'time_delta': '2:42:24', 'additions': 610, 'deletions': 578, 'state': 'closed'}, {'id': 650146126, 'number': 415, 'closed': datetime.datetime(2021, 5, 22, 12, 33, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 16, 58, 44, tzinfo=datetime.timezone.utc), 'time_taken': 70459.0, 'time_delta': '19:34:19', 'additions': 194, 'deletions': 123, 'state': 'closed'}, {'id': 602660454, 'number': 401, 'closed': datetime.datetime(2021, 3, 30, 23, 44, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 10, 52, 51, tzinfo=datetime.timezone.utc), 'time_taken': 132678.0, 'time_delta': '1 day, 12:51:18', 'additions': 1057, 'deletions': 145, 'state': 'closed'}, {'id': 559073598, 'number': 381, 'closed': datetime.datetime(2021, 1, 21, 13, 15, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 21, 10, 53, tzinfo=datetime.timezone.utc), 'time_taken': 8573.0, 'time_delta': '2:22:53', 'additions': 180, 'deletions': 6, 'state': 'closed'}, {'id': 458714783, 'number': 317, 'closed': datetime.datetime(2020, 11, 17, 12, 37, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 21, 30, 5, tzinfo=datetime.timezone.utc), 'time_taken': 9558442.0, 'time_delta': '110 days, 15:07:22', 'additions': 800, 'deletions': 8, 'state': 'closed'}, {'id': 449773339, 'number': 305, 'closed': datetime.datetime(2020, 7, 25, 21, 50, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 22, 25, 46, tzinfo=datetime.timezone.utc), 'time_taken': 861876.0, 'time_delta': '9 days, 23:24:36', 'additions': 386, 'deletions': 99, 'state': 'closed'}, {'id': 449525348, 'number': 303, 'closed': datetime.datetime(2020, 7, 15, 15, 18, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 14, 37, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2488.0, 'time_delta': '0:41:28', 'additions': 56, 'deletions': 6, 'state': 'closed'}, {'id': 448217044, 'number': 299, 'closed': datetime.datetime(2020, 7, 15, 15, 32, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 12, 15, 19, tzinfo=datetime.timezone.utc), 'time_taken': 184613.0, 'time_delta': '2 days, 3:16:53', 'additions': 5, 'deletions': 6, 'state': 'closed'}, {'id': 447673925, 'number': 298, 'closed': datetime.datetime(2020, 7, 11, 2, 5, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 22, 50, 40, tzinfo=datetime.timezone.utc), 'time_taken': 11674.0, 'time_delta': '3:14:34', 'additions': 56, 'deletions': 0, 'state': 'closed'}, {'id': 446193341, 'number': 295, 'closed': datetime.datetime(2020, 7, 10, 11, 44, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 11, 54, 56, tzinfo=datetime.timezone.utc), 'time_taken': 172184.0, 'time_delta': '1 day, 23:49:44', 'additions': 699, 'deletions': 230, 'state': 'closed'}, {'id': 431752050, 'number': 275, 'closed': datetime.datetime(2020, 6, 10, 20, 49, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 12, 18, 20, tzinfo=datetime.timezone.utc), 'time_taken': 117093.0, 'time_delta': '1 day, 8:31:33', 'additions': 619, 'deletions': 102, 'state': 'closed'}, {'id': 426237696, 'number': 268, 'closed': datetime.datetime(2020, 6, 2, 13, 23, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 22, 0, 53, tzinfo=datetime.timezone.utc), 'time_taken': 55374.0, 'time_delta': '15:22:54', 'additions': 55, 'deletions': 8, 'state': 'closed'}, {'id': 425607958, 'number': 265, 'closed': datetime.datetime(2020, 5, 31, 14, 24, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 31, 12, 56, 21, tzinfo=datetime.timezone.utc), 'time_taken': 5280.0, 'time_delta': '1:28:00', 'additions': 342, 'deletions': 193, 'state': 'closed'}, {'id': 422905722, 'number': 260, 'closed': datetime.datetime(2020, 5, 28, 20, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 25, 21, 46, 3, tzinfo=datetime.timezone.utc), 'time_taken': 254660.0, 'time_delta': '2 days, 22:44:20', 'additions': 190, 'deletions': 21, 'state': 'closed'}, {'id': 422451778, 'number': 258, 'closed': datetime.datetime(2020, 5, 25, 12, 37, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 24, 18, 33, tzinfo=datetime.timezone.utc), 'time_taken': 65083.0, 'time_delta': '18:04:43', 'additions': 72, 'deletions': 0, 'state': 'closed'}, {'id': 422393698, 'number': 256, 'closed': datetime.datetime(2020, 5, 24, 15, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 24, 10, 33, 51, tzinfo=datetime.timezone.utc), 'time_taken': 17649.0, 'time_delta': '4:54:09', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 419028018, 'number': 242, 'closed': datetime.datetime(2020, 5, 24, 8, 5, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 16, 21, 56, 45, tzinfo=datetime.timezone.utc), 'time_taken': 641322.0, 'time_delta': '7 days, 10:08:42', 'additions': 358, 'deletions': 37, 'state': 'closed'}, {'id': 414100437, 'number': 237, 'closed': datetime.datetime(2020, 5, 12, 18, 55, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 6, 13, 34, 44, tzinfo=datetime.timezone.utc), 'time_taken': 537644.0, 'time_delta': '6 days, 5:20:44', 'additions': 98, 'deletions': 8, 'state': 'closed'}, {'id': 408638490, 'number': 235, 'closed': datetime.datetime(2020, 5, 5, 20, 50, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 24, 16, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 967393.0, 'time_delta': '11 days, 4:43:13', 'additions': 358, 'deletions': 28, 'state': 'closed'}]"
336473211,AbstractDifferentiation.jl,JuliaDiff/AbstractDifferentiation.jl,Julia,18,135,14,12,104,44,10,7,"[{'id': 739635901, 'number': 9, 'closed': datetime.datetime(2021, 9, 22, 3, 14, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 21, 21, 41, tzinfo=datetime.timezone.utc), 'time_taken': 20014.0, 'time_delta': '5:33:34', 'additions': 48, 'deletions': 48, 'state': 'closed'}, {'id': 701468532, 'number': 3, 'closed': datetime.datetime(2021, 8, 28, 12, 53, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 13, 27, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2244360.0, 'time_delta': '25 days, 23:26:00', 'additions': 494, 'deletions': 293, 'state': 'closed'}, {'id': 634817320, 'number': 2, 'closed': datetime.datetime(2021, 8, 2, 13, 12, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 8, 19, 31, 13, tzinfo=datetime.timezone.utc), 'time_taken': 7407702.0, 'time_delta': '85 days, 17:41:42', 'additions': 514, 'deletions': 37, 'state': 'closed'}]"
71651195,OrdinaryDiffEq.jl,SciML/OrdinaryDiffEq.jl,Julia,199,526,19,141,8635,339,58,42,"[{'id': 370854130, 'number': 1027, 'closed': datetime.datetime(2020, 2, 6, 14, 35, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 4, 14, 1, 51, tzinfo=datetime.timezone.utc), 'time_taken': 174839.0, 'time_delta': '2 days, 0:33:59', 'additions': 202, 'deletions': 2, 'state': 'closed'}]"
78188062,DiffEqCallbacks.jl,SciML/DiffEqCallbacks.jl,Julia,46,87,4,47,598,24,4,5,"[{'id': 715261971, 'number': 102, 'closed': datetime.datetime(2021, 8, 18, 21, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 16, 52, 34, tzinfo=datetime.timezone.utc), 'time_taken': 16078.0, 'time_delta': '4:27:58', 'additions': 39, 'deletions': 21, 'state': 'closed'}]"
88697907,SteadyStateDiffEq.jl,SciML/SteadyStateDiffEq.jl,Julia,22,30,7,25,226,5,1,0,"[{'id': 660107752, 'number': 31, 'closed': datetime.datetime(2021, 6, 2, 14, 23, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 14, 13, 50, tzinfo=datetime.timezone.utc), 'time_taken': 588.0, 'time_delta': '0:09:48', 'additions': 34, 'deletions': 1, 'state': 'closed'}]"
157899791,ChainRules.jl,JuliaDiff/ChainRules.jl,Julia,87,431,20,67,1202,130,53,37,"[{'id': 716641971, 'number': 508, 'closed': datetime.datetime(2021, 8, 20, 17, 23, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 10, 57, 17, tzinfo=datetime.timezone.utc), 'time_taken': 23147.0, 'time_delta': '6:25:47', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 716269309, 'number': 506, 'closed': datetime.datetime(2021, 8, 19, 22, 4, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 21, 18, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2729.0, 'time_delta': '0:45:29', 'additions': 2, 'deletions': 1, 'state': 'closed'}]"
88799203,DiffEqNoiseProcess.jl,SciML/DiffEqNoiseProcess.jl,Julia,29,63,7,35,676,17,8,5,"[{'id': 1773097970, 'number': 198, 'closed': None, 'created': datetime.datetime(2024, 3, 14, 22, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 9, 'deletions': 0, 'state': 'open'}, {'id': 1715931320, 'number': 192, 'closed': datetime.datetime(2024, 2, 8, 7, 28, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 7, 15, 40, 59, tzinfo=datetime.timezone.utc), 'time_taken': 56854.0, 'time_delta': '15:47:34', 'additions': 34, 'deletions': 8, 'state': 'closed'}, {'id': 1374412822, 'number': 153, 'closed': datetime.datetime(2023, 6, 2, 0, 26, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 16, 23, 22, tzinfo=datetime.timezone.utc), 'time_taken': 29016.0, 'time_delta': '8:03:36', 'additions': 13, 'deletions': 11, 'state': 'closed'}, {'id': 1191523277, 'number': 141, 'closed': datetime.datetime(2023, 1, 10, 22, 45, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 22, 11, 41, tzinfo=datetime.timezone.utc), 'time_taken': 88445.0, 'time_delta': '1 day, 0:34:05', 'additions': 101, 'deletions': 53, 'state': 'closed'}, {'id': 1189651829, 'number': 139, 'closed': datetime.datetime(2023, 1, 8, 16, 6, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 8, 2, 55, 17, tzinfo=datetime.timezone.utc), 'time_taken': 47451.0, 'time_delta': '13:10:51', 'additions': 159, 'deletions': 159, 'state': 'closed'}, {'id': 1019133440, 'number': 111, 'closed': datetime.datetime(2022, 8, 6, 1, 25, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 21, 58, 18, tzinfo=datetime.timezone.utc), 'time_taken': 12403.0, 'time_delta': '3:26:43', 'additions': 29, 'deletions': 18, 'state': 'closed'}, {'id': 1017871929, 'number': 109, 'closed': datetime.datetime(2022, 8, 5, 15, 38, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 18, 3, 34, tzinfo=datetime.timezone.utc), 'time_taken': 77725.0, 'time_delta': '21:35:25', 'additions': 17, 'deletions': 31, 'state': 'closed'}, {'id': 1012046768, 'number': 108, 'closed': datetime.datetime(2022, 7, 30, 20, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 14, 31, 40, tzinfo=datetime.timezone.utc), 'time_taken': 106611.0, 'time_delta': '1 day, 5:36:51', 'additions': 4845, 'deletions': 4643, 'state': 'closed'}, {'id': 799212629, 'number': 98, 'closed': datetime.datetime(2021, 12, 9, 21, 47, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 9, 21, 8, 58, tzinfo=datetime.timezone.utc), 'time_taken': 2338.0, 'time_delta': '0:38:58', 'additions': 9, 'deletions': 6, 'state': 'closed'}, {'id': 677278876, 'number': 94, 'closed': datetime.datetime(2021, 6, 24, 20, 31, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 16, 50, 6, tzinfo=datetime.timezone.utc), 'time_taken': 13296.0, 'time_delta': '3:41:36', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 649406074, 'number': 93, 'closed': datetime.datetime(2021, 5, 21, 13, 0, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 20, 20, 15, 20, tzinfo=datetime.timezone.utc), 'time_taken': 60294.0, 'time_delta': '16:44:54', 'additions': 136, 'deletions': 31, 'state': 'closed'}, {'id': 633402207, 'number': 92, 'closed': datetime.datetime(2021, 5, 8, 19, 18, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 20, 35, 19, tzinfo=datetime.timezone.utc), 'time_taken': 81818.0, 'time_delta': '22:43:38', 'additions': 64, 'deletions': 17, 'state': 'closed'}, {'id': 604538095, 'number': 89, 'closed': datetime.datetime(2021, 3, 30, 22, 29, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 30, 22, 18, 16, tzinfo=datetime.timezone.utc), 'time_taken': 695.0, 'time_delta': '0:11:35', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 602657105, 'number': 88, 'closed': datetime.datetime(2021, 3, 29, 11, 11, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 10, 47, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1415.0, 'time_delta': '0:23:35', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 601676013, 'number': 87, 'closed': datetime.datetime(2021, 3, 29, 11, 11, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 14, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 245890.0, 'time_delta': '2 days, 20:18:10', 'additions': 198, 'deletions': 0, 'state': 'closed'}, {'id': 572592539, 'number': 86, 'closed': datetime.datetime(2021, 2, 12, 18, 18, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 15, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 10348.0, 'time_delta': '2:52:28', 'additions': 1216, 'deletions': 2, 'state': 'closed'}, {'id': 569558449, 'number': 84, 'closed': datetime.datetime(2021, 2, 8, 17, 36, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 8, 15, 29, 33, tzinfo=datetime.timezone.utc), 'time_taken': 7645.0, 'time_delta': '2:07:25', 'additions': 70, 'deletions': 12, 'state': 'closed'}, {'id': 509473239, 'number': 65, 'closed': datetime.datetime(2020, 10, 25, 20, 7, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 24, 18, 22, 30, tzinfo=datetime.timezone.utc), 'time_taken': 92671.0, 'time_delta': '1 day, 1:44:31', 'additions': 568, 'deletions': 22, 'state': 'closed'}, {'id': 489246260, 'number': 63, 'closed': datetime.datetime(2020, 9, 25, 10, 46, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 18, 11, 10, 35, tzinfo=datetime.timezone.utc), 'time_taken': 603334.0, 'time_delta': '6 days, 23:35:34', 'additions': 83, 'deletions': 11, 'state': 'closed'}, {'id': 471843782, 'number': 62, 'closed': datetime.datetime(2020, 8, 24, 15, 50, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 20, 34, 12, tzinfo=datetime.timezone.utc), 'time_taken': 242163.0, 'time_delta': '2 days, 19:16:03', 'additions': 301, 'deletions': 108, 'state': 'closed'}, {'id': 451395730, 'number': 57, 'closed': datetime.datetime(2020, 7, 22, 12, 53, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 19, 34, 13, tzinfo=datetime.timezone.utc), 'time_taken': 407975.0, 'time_delta': '4 days, 17:19:35', 'additions': 250, 'deletions': 57, 'state': 'closed'}, {'id': 448146870, 'number': 56, 'closed': datetime.datetime(2020, 7, 13, 10, 27, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 9, 56, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1845.0, 'time_delta': '0:30:45', 'additions': 50, 'deletions': 5, 'state': 'closed'}, {'id': 444047270, 'number': 55, 'closed': datetime.datetime(2020, 7, 4, 9, 27, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 13, 2, 45, tzinfo=datetime.timezone.utc), 'time_taken': 73469.0, 'time_delta': '20:24:29', 'additions': 63, 'deletions': 1, 'state': 'closed'}, {'id': 439300262, 'number': 54, 'closed': datetime.datetime(2020, 6, 24, 16, 0, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 15, 56, 53, tzinfo=datetime.timezone.utc), 'time_taken': 243.0, 'time_delta': '0:04:03', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 438173253, 'number': 53, 'closed': datetime.datetime(2020, 6, 23, 21, 33, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 20, 56, 40, tzinfo=datetime.timezone.utc), 'time_taken': 88614.0, 'time_delta': '1 day, 0:36:54', 'additions': 71, 'deletions': 43, 'state': 'closed'}, {'id': 423197048, 'number': 51, 'closed': datetime.datetime(2020, 5, 31, 14, 40, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 26, 13, 12, 28, tzinfo=datetime.timezone.utc), 'time_taken': 437289.0, 'time_delta': '5 days, 1:28:09', 'additions': 235, 'deletions': 39, 'state': 'closed'}, {'id': 420369297, 'number': 49, 'closed': datetime.datetime(2020, 5, 20, 1, 32, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 21, 14, 44, tzinfo=datetime.timezone.utc), 'time_taken': 15485.0, 'time_delta': '4:18:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 420241392, 'number': 48, 'closed': datetime.datetime(2020, 5, 19, 17, 4, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 16, 48, 23, tzinfo=datetime.timezone.utc), 'time_taken': 991.0, 'time_delta': '0:16:31', 'additions': 37, 'deletions': 31, 'state': 'closed'}]"
71645359,StochasticDiffEq.jl,SciML/StochasticDiffEq.jl,Julia,65,241,15,54,2279,100,15,10,"[{'id': 1940729078, 'number': 571, 'closed': None, 'created': datetime.datetime(2024, 6, 26, 19, 27, 44, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 693, 'deletions': 2, 'state': 'open'}, {'id': 1262665164, 'number': 522, 'closed': None, 'created': datetime.datetime(2023, 3, 3, 21, 58, 7, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6, 'deletions': 1, 'state': 'open'}, {'id': 1012336148, 'number': 489, 'closed': datetime.datetime(2022, 8, 5, 19, 21, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 20, 43, 5, tzinfo=datetime.timezone.utc), 'time_taken': 599914.0, 'time_delta': '6 days, 22:38:34', 'additions': 246, 'deletions': 111, 'state': 'closed'}, {'id': 1000231138, 'number': 483, 'closed': datetime.datetime(2022, 7, 20, 19, 54, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 19, 2, 27, 40, tzinfo=datetime.timezone.utc), 'time_taken': 149223.0, 'time_delta': '1 day, 17:27:03', 'additions': 178, 'deletions': 139, 'state': 'closed'}, {'id': 841676576, 'number': 459, 'closed': datetime.datetime(2022, 2, 20, 23, 21, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 12, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1162178.0, 'time_delta': '13 days, 10:49:38', 'additions': 262, 'deletions': 798, 'state': 'closed'}, {'id': 697753297, 'number': 428, 'closed': datetime.datetime(2021, 7, 27, 16, 48, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 10, 56, 30, tzinfo=datetime.timezone.utc), 'time_taken': 21131.0, 'time_delta': '5:52:11', 'additions': 163, 'deletions': 204, 'state': 'closed'}, {'id': 602655991, 'number': 409, 'closed': datetime.datetime(2021, 3, 30, 19, 31, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 29, 10, 45, 46, tzinfo=datetime.timezone.utc), 'time_taken': 117921.0, 'time_delta': '1 day, 8:45:21', 'additions': 292, 'deletions': 185, 'state': 'closed'}, {'id': 552742941, 'number': 383, 'closed': datetime.datetime(2021, 1, 19, 19, 16, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 11, 13, 30, 8, tzinfo=datetime.timezone.utc), 'time_taken': 711986.0, 'time_delta': '8 days, 5:46:26', 'additions': 228, 'deletions': 57, 'state': 'closed'}, {'id': 488583276, 'number': 360, 'closed': datetime.datetime(2020, 9, 17, 14, 52, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 17, 10, 58, tzinfo=datetime.timezone.utc), 'time_taken': 14044.0, 'time_delta': '3:54:04', 'additions': 599, 'deletions': 727, 'state': 'closed'}, {'id': 466361754, 'number': 348, 'closed': datetime.datetime(2020, 8, 11, 22, 18, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 21, 20, 58, tzinfo=datetime.timezone.utc), 'time_taken': 3436.0, 'time_delta': '0:57:16', 'additions': 776, 'deletions': 92, 'state': 'closed'}, {'id': 465534973, 'number': 347, 'closed': datetime.datetime(2020, 9, 4, 17, 28, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 14, 25, 51, tzinfo=datetime.timezone.utc), 'time_taken': 2170933.0, 'time_delta': '25 days, 3:02:13', 'additions': 760, 'deletions': 240, 'state': 'closed'}, {'id': 457292058, 'number': 343, 'closed': datetime.datetime(2020, 7, 28, 18, 14, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 17, 10, 24, tzinfo=datetime.timezone.utc), 'time_taken': 90252.0, 'time_delta': '1 day, 1:04:12', 'additions': 503, 'deletions': 4, 'state': 'closed'}, {'id': 456227229, 'number': 342, 'closed': datetime.datetime(2020, 7, 25, 0, 13, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 11, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 47031.0, 'time_delta': '13:03:51', 'additions': 662, 'deletions': 0, 'state': 'closed'}, {'id': 452060988, 'number': 340, 'closed': datetime.datetime(2020, 7, 22, 12, 58, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 18, 7, 18, tzinfo=datetime.timezone.utc), 'time_taken': 327062.0, 'time_delta': '3 days, 18:51:02', 'additions': 18, 'deletions': 5, 'state': 'closed'}, {'id': 447653817, 'number': 338, 'closed': datetime.datetime(2020, 7, 11, 2, 7, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 21, 34, 59, tzinfo=datetime.timezone.utc), 'time_taken': 16360.0, 'time_delta': '4:32:40', 'additions': 82, 'deletions': 0, 'state': 'closed'}, {'id': 441080531, 'number': 337, 'closed': datetime.datetime(2020, 7, 15, 11, 36, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 16, 28, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1451316.0, 'time_delta': '16 days, 19:08:36', 'additions': 883, 'deletions': 47, 'state': 'closed'}, {'id': 438832964, 'number': 334, 'closed': datetime.datetime(2020, 6, 24, 21, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 21, 31, 31, tzinfo=datetime.timezone.utc), 'time_taken': 85529.0, 'time_delta': '23:45:29', 'additions': 700, 'deletions': 5, 'state': 'closed'}, {'id': 436123583, 'number': 333, 'closed': datetime.datetime(2020, 6, 18, 11, 56, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 22, 14, 25, tzinfo=datetime.timezone.utc), 'time_taken': 49321.0, 'time_delta': '13:42:01', 'additions': 1178, 'deletions': 4, 'state': 'closed'}, {'id': 435809455, 'number': 332, 'closed': datetime.datetime(2020, 7, 13, 5, 30, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 12, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2222369.0, 'time_delta': '25 days, 17:19:29', 'additions': 952, 'deletions': 323, 'state': 'closed'}, {'id': 435482467, 'number': 331, 'closed': datetime.datetime(2020, 6, 17, 12, 8, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 21, 43, 57, tzinfo=datetime.timezone.utc), 'time_taken': 51862.0, 'time_delta': '14:24:22', 'additions': 337, 'deletions': 20, 'state': 'closed'}, {'id': 432683664, 'number': 329, 'closed': datetime.datetime(2020, 6, 11, 7, 46, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 20, 30, 24, tzinfo=datetime.timezone.utc), 'time_taken': 40539.0, 'time_delta': '11:15:39', 'additions': 409, 'deletions': 56, 'state': 'closed'}, {'id': 432451951, 'number': 328, 'closed': datetime.datetime(2020, 6, 10, 20, 3, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 13, 22, 3, tzinfo=datetime.timezone.utc), 'time_taken': 24106.0, 'time_delta': '6:41:46', 'additions': 1148, 'deletions': 9, 'state': 'closed'}, {'id': 432032357, 'number': 327, 'closed': datetime.datetime(2020, 6, 9, 20, 9, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 19, 59, tzinfo=datetime.timezone.utc), 'time_taken': 617.0, 'time_delta': '0:10:17', 'additions': 88, 'deletions': 102, 'state': 'closed'}, {'id': 419974054, 'number': 317, 'closed': datetime.datetime(2020, 5, 19, 19, 33, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 19, 8, 52, 38, tzinfo=datetime.timezone.utc), 'time_taken': 38425.0, 'time_delta': '10:40:25', 'additions': 28, 'deletions': 12, 'state': 'closed'}, {'id': 419378883, 'number': 305, 'closed': datetime.datetime(2020, 5, 18, 14, 54, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 9, 35, 37, tzinfo=datetime.timezone.utc), 'time_taken': 19114.0, 'time_delta': '5:18:34', 'additions': 18, 'deletions': 1, 'state': 'closed'}, {'id': 416141194, 'number': 289, 'closed': datetime.datetime(2020, 5, 21, 22, 1, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 14, 28, 14, tzinfo=datetime.timezone.utc), 'time_taken': 891173.0, 'time_delta': '10 days, 7:32:53', 'additions': 220, 'deletions': 70, 'state': 'closed'}, {'id': 415756991, 'number': 288, 'closed': None, 'created': datetime.datetime(2020, 5, 10, 17, 57, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 38, 'deletions': 16, 'state': 'open'}, {'id': 404593247, 'number': 285, 'closed': datetime.datetime(2020, 4, 24, 16, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 18, 29, 24, tzinfo=datetime.timezone.utc), 'time_taken': 682994.0, 'time_delta': '7 days, 21:43:14', 'additions': 374, 'deletions': 22, 'state': 'closed'}, {'id': 399711208, 'number': 281, 'closed': datetime.datetime(2020, 4, 6, 15, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 6, 15, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 849.0, 'time_delta': '0:14:09', 'additions': 1404, 'deletions': 42, 'state': 'closed'}, {'id': 382452120, 'number': 273, 'closed': datetime.datetime(2020, 3, 2, 19, 16, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 2, 15, 35, 33, tzinfo=datetime.timezone.utc), 'time_taken': 13244.0, 'time_delta': '3:40:44', 'additions': 27, 'deletions': 6, 'state': 'closed'}, {'id': 382026018, 'number': 272, 'closed': datetime.datetime(2020, 3, 1, 13, 10, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 1, 10, 27, 58, tzinfo=datetime.timezone.utc), 'time_taken': 9763.0, 'time_delta': '2:42:43', 'additions': 6, 'deletions': 3, 'state': 'closed'}, {'id': 381862576, 'number': 270, 'closed': datetime.datetime(2020, 2, 29, 17, 12, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 29, 14, 58, 23, tzinfo=datetime.timezone.utc), 'time_taken': 8022.0, 'time_delta': '2:13:42', 'additions': 76, 'deletions': 0, 'state': 'closed'}, {'id': 380992488, 'number': 269, 'closed': datetime.datetime(2020, 4, 3, 2, 2, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 27, 18, 0, 9, tzinfo=datetime.timezone.utc), 'time_taken': 3052963.0, 'time_delta': '35 days, 8:02:43', 'additions': 659, 'deletions': 6, 'state': 'closed'}]"
72511713,DiffEqDocs.jl,SciML/DiffEqDocs.jl,Julia,239,270,15,196,2367,28,8,6,"[{'id': 1305226275, 'number': 669, 'closed': datetime.datetime(2023, 4, 7, 16, 44, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 20, 14, 11, tzinfo=datetime.timezone.utc), 'time_taken': 73832.0, 'time_delta': '20:30:32', 'additions': 68, 'deletions': 0, 'state': 'closed'}, {'id': 901735735, 'number': 544, 'closed': datetime.datetime(2022, 4, 6, 19, 9, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 16, 55, 7, tzinfo=datetime.timezone.utc), 'time_taken': 8064.0, 'time_delta': '2:14:24', 'additions': 49, 'deletions': 7, 'state': 'closed'}, {'id': 857040339, 'number': 536, 'closed': datetime.datetime(2022, 2, 21, 14, 24, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 13, 29, 21, tzinfo=datetime.timezone.utc), 'time_taken': 262506.0, 'time_delta': '3 days, 0:55:06', 'additions': 32, 'deletions': 15, 'state': 'closed'}, {'id': 843151406, 'number': 534, 'closed': datetime.datetime(2022, 2, 8, 20, 18, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 19, 6, 56, tzinfo=datetime.timezone.utc), 'time_taken': 4269.0, 'time_delta': '1:11:09', 'additions': 31, 'deletions': 14, 'state': 'closed'}, {'id': 713499752, 'number': 492, 'closed': datetime.datetime(2021, 8, 16, 15, 14, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 14, 42, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1907.0, 'time_delta': '0:31:47', 'additions': 84, 'deletions': 0, 'state': 'closed'}, {'id': 706498554, 'number': 490, 'closed': datetime.datetime(2021, 8, 9, 14, 7, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 12, 59, 58, tzinfo=datetime.timezone.utc), 'time_taken': 4061.0, 'time_delta': '1:07:41', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 513601126, 'number': 416, 'closed': datetime.datetime(2020, 11, 1, 11, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 1, 11, 5, 43, tzinfo=datetime.timezone.utc), 'time_taken': 77.0, 'time_delta': '0:01:17', 'additions': 54, 'deletions': 2, 'state': 'closed'}, {'id': 456632538, 'number': 386, 'closed': datetime.datetime(2020, 7, 25, 16, 34, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 16, 1, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1979.0, 'time_delta': '0:32:59', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 456613092, 'number': 385, 'closed': datetime.datetime(2020, 7, 25, 13, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 13, 3, 51, tzinfo=datetime.timezone.utc), 'time_taken': 237.0, 'time_delta': '0:03:57', 'additions': 42, 'deletions': 6, 'state': 'closed'}, {'id': 416191681, 'number': 358, 'closed': datetime.datetime(2020, 5, 11, 18, 18, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 15, 51, 46, tzinfo=datetime.timezone.utc), 'time_taken': 8806.0, 'time_delta': '2:26:46', 'additions': 17, 'deletions': 0, 'state': 'closed'}]"
