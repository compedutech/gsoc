pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1377907094,Add setup for doxygen documentation,Signed-off-by: <krishnanarayanan132002@gmail.com> Krishna Narayanan,True,87,https://api.github.com/repos/compiler-research/CppInterOp/pulls/87,https://github.com/compiler-research/CppInterOp/pull/87,closed,2960,0,18,1,1,4,0,0,[],2023-06-04 19:53:49+00:00,2023-06-20 13:32:47+00:00,1359538.0,"15 days, 17:38:58","[{'comment_id': 1221128888, 'comment_body': '```suggestion\r\noption(INTEROP_INCLUDE_DOCS ""Generate build targets for the CppInterOp docs."")\r\noption(INTEROP_ENABLE_DOXYGEN ""Use doxygen to generate CppInterOp interal API documentation."")\r\noption(INTEROP_ENABLE_SPHINX ""Use sphinx to generage CppInterOp user documentation"")\r\n```', 'comment_created': datetime.datetime(2023, 6, 7, 8, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1237642878, 'comment_body': 'Why is this commented out?\r\nAnd also, `html_extra_path` directory probably should not contain `index.html` file. Otherwise,\r\nreadthedocs will get confused which page should be used when visiting the website root.', 'comment_created': datetime.datetime(2023, 6, 21, 20, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'parth-07', 'type': 'User'}, {'comment_id': 1238169359, 'comment_body': 'In my next patch to fix the issue of doxygen, I have added the ```html_extra_path``` https://github.com/compiler-research/CppInterOp/compare/main...Krishna-13-cyber:CppInterOp:CppInterOp-Doxygen-Implementation#diff-85933aa74a2d66c3e4dcdf7a9ad8397f5a7971080d34ef1108296a7c6b69e7e3R54 but still the issue persists .\r\nThe index.html for sphinx is being used as website root as we can see the output. The build directory of doxygen which consists of index.html is implicitly generated by default, so are you suggesting to modify the config to remove the index generation?\r\n\r\nCurrent Status including the  ```html_extra_path```:\r\nhttps://readthedocs.org/projects/cppinterop-docs/builds/21074694/\r\n', 'comment_created': datetime.datetime(2023, 6, 22, 8, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}, {'comment_id': 1240898297, 'comment_body': ""I am suggesting to make the `html_extra_path` to something like, `INTEROP_ROOT + '/build/docs'`. This way we can\r\naccess internal documentation at `${WebsiteRoot}/doxygen/html`, and `index.html` of sphinx and doxygen will not conflict with each other."", 'comment_created': datetime.datetime(2023, 6, 24, 16, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'parth-07', 'type': 'User'}]","[{'commit_sha': '5f8c5748f090be374b03205a13142d21a0b37564', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1412154227,Update documentation setup configuration,,True,99,https://api.github.com/repos/compiler-research/CppInterOp/pulls/99,https://github.com/compiler-research/CppInterOp/pull/99,closed,60,12,5,1,19,3,0,0,[],2023-06-28 18:33:47+00:00,2023-07-12 17:26:28+00:00,1205561.0,"13 days, 22:52:41","[{'comment_id': 1249329660, 'comment_body': 'I think this change can be reverted now.', 'comment_created': datetime.datetime(2023, 7, 2, 7, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'parth-07', 'type': 'User'}, {'comment_id': 1249329801, 'comment_body': 'This can be reverted as well.', 'comment_created': datetime.datetime(2023, 7, 2, 7, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'parth-07', 'type': 'User'}, {'comment_id': 1260807645, 'comment_body': 'We should probably use compiler-research.', 'comment_created': datetime.datetime(2023, 7, 12, 8, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}]","[{'commit_sha': '94d1c7fd1431dc5a20a0b26233d4765b98b52d99', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1418396139,Add contents for CppInterOp Documentation,,True,105,https://api.github.com/repos/compiler-research/CppInterOp/pulls/105,https://github.com/compiler-research/CppInterOp/pull/105,closed,319,28,6,1,1,16,0,0,[],2023-07-03 16:31:49+00:00,2023-08-01 22:20:50+00:00,2526541.0,"29 days, 5:49:01","[{'comment_id': 1260813838, 'comment_body': 'Can you break at 80 cols?', 'comment_created': datetime.datetime(2023, 7, 12, 8, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260814425, 'comment_body': 'That seems to be bash, shell where the token for comments is `#`.', 'comment_created': datetime.datetime(2023, 7, 12, 8, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260814794, 'comment_body': '```suggestion\r\nCppInterOp. If you are just getting started with CppInterop, then this is the\r\n```', 'comment_created': datetime.datetime(2023, 7, 12, 8, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260814926, 'comment_body': '```suggestion\r\nbest place to start. You may want to skim some sections on the first read. \r\n```', 'comment_created': datetime.datetime(2023, 7, 12, 8, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260815538, 'comment_body': '```suggestion\r\n**libclangInterOp.so** which resides in the CppInterOp/build/lib/.\r\n```', 'comment_created': datetime.datetime(2023, 7, 12, 8, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260816076, 'comment_body': 'Is that the name of the library?', 'comment_created': datetime.datetime(2023, 7, 12, 8, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260816311, 'comment_body': 'Why an extra dash here?', 'comment_created': datetime.datetime(2023, 7, 12, 8, 40, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260817165, 'comment_body': '```suggestion\r\n**Note:: This example library shown below is to illustrate the concept on which \r\n```', 'comment_created': datetime.datetime(2023, 7, 12, 8, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1260822368, 'comment_body': '@wlav, could you take a look and give feedback on our documentation intent to capture the cppyy/python interop use case as motivation for CppInterOp?', 'comment_created': datetime.datetime(2023, 7, 12, 8, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1261350616, 'comment_body': '? What specific piece of text needs commenting?', 'comment_created': datetime.datetime(2023, 7, 12, 15, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wlav', 'type': 'User'}, {'comment_id': 1261497268, 'comment_body': ""@wlav, basically this file: `docs/tutorials.rst`. I'd like to make sure we are not making some unreasonable claim."", 'comment_created': datetime.datetime(2023, 7, 12, 17, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1266583345, 'comment_body': 'Where are Clang_Parse and such defined? Should we not show how the header file looks like at least?', 'comment_created': datetime.datetime(2023, 7, 18, 10, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1269684849, 'comment_body': '```suggestion\r\n.. code-block:: cpp\r\n```\r\n\r\nThen replace # with //', 'comment_created': datetime.datetime(2023, 7, 20, 16, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1269743823, 'comment_body': 'No, thatâ€™s python. ', 'comment_created': datetime.datetime(2023, 7, 20, 17, 8, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1269744027, 'comment_body': 'Likewise. ', 'comment_created': datetime.datetime(2023, 7, 20, 17, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1278225945, 'comment_body': ""```suggestion\r\nThis tutorial emphasizes on the abilities and usage of CppInterOp. Let's get\r\n```\r\n\r\nCan you please reread *very carefully* the entire set of documentation. I do not expect to continue fixing such details as it seems that we have not paid enough attention at that point. Please make sure it does not have any obvious issues before asking for a review."", 'comment_created': datetime.datetime(2023, 7, 29, 3, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}]","[{'commit_sha': 'd497777a30379e69f54d6e3be72605ee9041fe81', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1464544673,Add C-C++ Interoperability tutorial in CppInterOp docs,,True,121,https://api.github.com/repos/compiler-research/CppInterOp/pulls/121,https://github.com/compiler-research/CppInterOp/pull/121,closed,121,1,1,1,1,6,0,0,[],2023-08-07 04:46:25+00:00,2023-08-12 17:17:16+00:00,477051.0,"5 days, 12:30:51","[{'comment_id': 1292364639, 'comment_body': '```suggestion\r\n`T` is initialized to zero, used to store the declaration of the type ""T"" used for\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 16, 15, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1292364711, 'comment_body': '```suggestion\r\nThis snippet checks command-line arguments were provided by the `argc` arguments.\r\nWe take the first argument (`argv[1]`), parse it, then take the second argument\r\n(`argv[2]`) using **Clang_LookupName**, and reassigns **InstantiationArgs** to the third\r\nargument (`argv[3]`). In the else case, we decide to go with the ""A"".\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 16, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1292364744, 'comment_body': '```suggestion\r\nThe code proceeds to instantiate the template `B::callme` with the given\r\ntype, using the **Clang_InstantiateTemplate** function from the\r\nlibrary. The instantiated template is stored in the **Instantiation**.\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 16, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1292364932, 'comment_body': '```suggestion\r\nA function pointer **callme_fn_ptr** is declared with a type `fn_def` that represents\r\nthe function taking a `void*` argument and returning void. The result of\r\n**Clang_GetFunctionAddress** is casted by the function pointer.\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 16, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1292364990, 'comment_body': '```suggestion\r\nThe code then creates an object of type `A` using **Clang_CreateObject**, and the\r\npointer to this object is stored in `NewA`.\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 16, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1292365015, 'comment_body': '```suggestion\r\nThen the function pointer `callme_fn_ptr` is called with the `NewA`, which\r\ncalls the member function `B::callme` with the instantiated type. Thus, the instantiation\r\nhappens with type `A` and we get the below result.\r\n```', 'comment_created': datetime.datetime(2023, 8, 12, 16, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}]","[{'commit_sha': '4835e8985c195c449dd3b78cf5ceb14205da3eeb', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1472766528,Update docs with detailings in usage of CppInterOp,#120 Address the issue mentioned,True,134,https://api.github.com/repos/compiler-research/CppInterOp/pulls/134,https://github.com/compiler-research/CppInterOp/pull/134,closed,28,0,1,1,1,0,0,0,[],2023-08-12 09:41:08+00:00,2023-08-14 11:17:16+00:00,178568.0,"2 days, 1:36:08",[],"[{'commit_sha': 'f32acf0230179ca3b59ebc6ef8b03eadb2c8ceba', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1425985343,Add Xeus-clang-repl documentation,This PR adds doxygen and sphinx documentation for xeus-clang-repl.,True,33,https://api.github.com/repos/compiler-research/xeus-clang-repl/pulls/33,https://github.com/compiler-research/xeus-clang-repl/pull/33,closed,2966,2,22,1,0,5,0,0,[],2023-07-08 16:02:12+00:00,2023-08-08 18:23:26+00:00,2686874.0,"31 days, 2:21:14","[{'comment_id': 1285856294, 'comment_body': 'Can we bring this back?', 'comment_created': datetime.datetime(2023, 8, 7, 13, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1285861145, 'comment_body': 'All underscoring lines seem off by one.', 'comment_created': datetime.datetime(2023, 8, 7, 13, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1285861429, 'comment_body': '```suggestion\r\n***\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 13, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1285862156, 'comment_body': 'Can we avoid hardcoding this `llvm-14` version.', 'comment_created': datetime.datetime(2023, 8, 7, 13, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1285915260, 'comment_body': 'We are fetching llvm-14(dev, tools) for the doc builds to take place. Therefore we can keep the specific llvm-versions for cmake checks.', 'comment_created': datetime.datetime(2023, 8, 7, 14, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}]","[{'commit_sha': 'b860267f1a3c447561ed80da70a506690058f26f', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1457742898,Update README,,True,34,https://api.github.com/repos/compiler-research/xeus-clang-repl/pulls/34,https://github.com/compiler-research/xeus-clang-repl/pull/34,closed,85,0,1,3,0,1,0,0,[],2023-08-01 09:38:48+00:00,2023-08-04 16:18:22+00:00,283174.0,"3 days, 6:39:34","[{'comment_id': 1280603340, 'comment_body': 'That seems off by one space.', 'comment_created': datetime.datetime(2023, 8, 1, 13, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}]","[{'commit_sha': '7fe1cf4c553c466d3339dd3377db5437ad86e6b0', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e4aaba22e64fe2b472c3fe1c486e5251c6e20fb', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba23877f70d25350620458f9665b5f241077fef', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1467317521,Add technical content for xeus-clang-repl docs,,True,35,https://api.github.com/repos/compiler-research/xeus-clang-repl/pulls/35,https://github.com/compiler-research/xeus-clang-repl/pull/35,closed,214,5,7,3,0,0,0,0,[],2023-08-08 18:14:11+00:00,2023-08-23 09:03:31+00:00,1262960.0,"14 days, 14:49:20",[],"[{'commit_sha': '3da465054379786249a1a208a0ad929dc6c6c881', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07005029d3604b4eb2a6a3f26b093d78fd23a335', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd40727b497730d2fbcee486d433631d961efc259', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1484268574,Update xeus-cpp documentation setup,,True,13,https://api.github.com/repos/compiler-research/xeus-cpp/pulls/13,https://github.com/compiler-research/xeus-cpp/pull/13,closed,3117,505,33,1,6,3,0,0,[],2023-08-22 08:30:53+00:00,2023-08-23 09:31:19+00:00,90026.0,"1 day, 1:00:26","[{'comment_id': 1301384652, 'comment_body': 'Why `find_package(argparse ...)` is not sufficient?', 'comment_created': datetime.datetime(2023, 8, 22, 9, 49, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}, {'comment_id': 1301407618, 'comment_body': 'Yes,\r\nI tried fetching cppargparse as well argparse from conda but it did\'nt find the dependency,\r\n```\r\nResolvePackageNotFound: \r\n  - cpp-argparse\r\n ```\r\n  leading to the following error\r\n  ```\r\n  Could not find a package configuration file provided by ""argparse"" with any\r\n  of the following names:\r\n\r\n    argparseConfig.cmake\r\n    argparse-config.cmake\r\n```\r\n  ', 'comment_created': datetime.datetime(2023, 8, 22, 10, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}, {'comment_id': 1302725418, 'comment_body': 'Please remove that commented out code.', 'comment_created': datetime.datetime(2023, 8, 23, 9, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}]","[{'commit_sha': '3b6d1ee45336cda947d02c3c086dbf600d57d4d1', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1412973867,Update readthedocs configuration file,Build Status and Preview: https://readthedocs.org/projects/xeus-cpp-docs/builds/21147633/,True,12,https://api.github.com/repos/compiler-research/xeus-cpp/pulls/12,https://github.com/compiler-research/xeus-cpp/pull/12,closed,10,4,4,5,0,6,0,0,[],2023-06-29 08:56:50+00:00,2023-08-09 08:46:20+00:00,3541770.0,"40 days, 23:49:30","[{'comment_id': 1248557719, 'comment_body': 'I think we should still keep the doxygen/breathe setup that we have in e.g. xeus-cling!', 'comment_created': datetime.datetime(2023, 7, 1, 6, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'SylvainCorlay', 'type': 'User'}, {'comment_id': 1248730369, 'comment_body': ""> I think we should still keep the doxygen/breathe setup that we have in e.g. xeus-cling!\r\n\r\nHi Sylvain,\r\nI was unable to import the breathe setup when I was testing.\r\n```Could not import extension breathe (exception: No module named 'breathe')```\r\n\r\nI am using the command for build:\r\n``` make html``` in xeus-cpp/docs/\r\n\r\nWhen I link it in.readthedocs.yaml to environment.yml where we have the breathe dependency, it again shows importing error,\r\n```\r\nversion: 2\r\n\r\nsphinx:\r\n  configuration: docs/source/conf.py\r\n  builder: html\r\n\r\nconda:\r\n  environment: docs/environment.yml\r\n  ```\r\nPlease let me know if I am on the right path!\r\nThanks.\r\n"", 'comment_created': datetime.datetime(2023, 7, 1, 9, 29, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}, {'comment_id': 1264902635, 'comment_body': 'Hi Sylvain,\r\nPinging you for this reviewal!\r\n', 'comment_created': datetime.datetime(2023, 7, 17, 5, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}, {'comment_id': 1274905497, 'comment_body': 'Hi @SylvainCorlay,\r\nSorry, pinging you for this reviewal!', 'comment_created': datetime.datetime(2023, 7, 26, 12, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}, {'comment_id': 1277920917, 'comment_body': ""Hi @SylvainCorlay,\r\nI am working on the docs setup for xeus-clang-repl but I am unsuccessful due to the issues below,\r\nI was not able to ping you in the xeus-clang-repl (PR thread) due to some Github restrictions so I am pinging you in this thread itself!\r\n\r\nSo basically I had used cpp-zmq at the initial stage for xeus-clang-repl but they have updated to xeus-zmq for the implementation.\r\nNow, I am using the conda-forge setup,\r\nWhen I use xeus-zmq in my dependency list, with version 1.1.0 it doesn't turn out well in the readthedocs setup as it's not able to fetch the xeus=1.1.0, (https://readthedocs.org/api/v2/build/21405750.txt)\r\nI am using xeus-zmq in my Cmakelists via find_package, and it gives me the xeus-zmq.config not found, (package not found).\r\nI tried using pkgconfig for getting the xeus-zmq in Cmakelists via pkg_check_modules, not sure whether the right way of getting xeus-zmq like the the way we get zeromq.\r\nPlease let me know the right way to get the dependencies for xeus-clang-repl via conda-forge\r\nPR:https://github.com/compiler-research/xeus-clang-repl/pull/33\r\n\r\nThanks!"", 'comment_created': datetime.datetime(2023, 7, 28, 17, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Krishna-13-cyber', 'type': 'User'}, {'comment_id': 1288156894, 'comment_body': ""It looks like this is resolved now. Let's merge it to make sure that we have a configuration file v2 before the deadline of readthedocs."", 'comment_created': datetime.datetime(2023, 8, 9, 8, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vgvassilev', 'type': 'User'}]","[{'commit_sha': '26c51335da5a77c2811f6c913c3f481a8fd3c4f9', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b62ce07f1a4c60a8049d6f9b94672bbcc43aa5f', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e757c2cfdcb0801fffe4aab3d69b50c77425bc75', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22c955c30f606f74e34a31bad1ccb079cac33e35', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f2a985446dc9996ebc34ad8527d2a45ac268ee2', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20
1457742776,Update readthedocs configuration,"As we have support up-to Clang-16, I have updated the build setup for readthedocs configuration.
The builder image are not used nowdays, I have updated it with latest build os versions.",True,610,https://api.github.com/repos/vgvassilev/clad/pulls/610,https://github.com/vgvassilev/clad/pull/610,closed,11,9,3,1,1,0,0,0,[],2023-08-01 09:38:42+00:00,2023-08-04 16:20:22+00:00,283300.0,"3 days, 6:41:40",[],"[{'commit_sha': 'fc5764f4fbfeff704d0316ed3ea2d1614bee0f68', 'committer_username': 'Krishna-13-cyber', 'committer_name': 'Krishna Narayanan', 'committer_email': None, 'commit_date': datetime.datetime(2021, 5, 24, 13, 34, 55, tzinfo=datetime.timezone.utc)}]",Krishna Narayanan,84722531,,User,,46,,21,20

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
592883459,CppInterOp,compiler-research/CppInterOp,C++,21,36,8,13,414,38,10,15,"[{'id': 1665263800, 'number': 178, 'closed': None, 'created': datetime.datetime(2024, 1, 4, 20, 32, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 71, 'deletions': 2, 'state': 'open'}, {'id': 1490993235, 'number': 137, 'closed': datetime.datetime(2024, 1, 4, 20, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 27, 15, 12, 14, tzinfo=datetime.timezone.utc), 'time_taken': 11251104.0, 'time_delta': '130 days, 5:18:24', 'additions': 3083, 'deletions': 1116, 'state': 'closed'}, {'id': 1472766528, 'number': 134, 'closed': datetime.datetime(2023, 8, 14, 11, 17, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 12, 9, 41, 8, tzinfo=datetime.timezone.utc), 'time_taken': 178568.0, 'time_delta': '2 days, 1:36:08', 'additions': 28, 'deletions': 0, 'state': 'closed'}, {'id': 1464544673, 'number': 121, 'closed': datetime.datetime(2023, 8, 12, 17, 17, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 4, 46, 25, tzinfo=datetime.timezone.utc), 'time_taken': 477051.0, 'time_delta': '5 days, 12:30:51', 'additions': 121, 'deletions': 1, 'state': 'closed'}, {'id': 1457743066, 'number': 118, 'closed': datetime.datetime(2023, 8, 6, 7, 45, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 9, 38, 55, tzinfo=datetime.timezone.utc), 'time_taken': 425176.0, 'time_delta': '4 days, 22:06:16', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1418396139, 'number': 105, 'closed': datetime.datetime(2023, 8, 1, 22, 20, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 3, 16, 31, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2526541.0, 'time_delta': '29 days, 5:49:01', 'additions': 319, 'deletions': 28, 'state': 'closed'}, {'id': 1412154227, 'number': 99, 'closed': datetime.datetime(2023, 7, 12, 17, 26, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 18, 33, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1205561.0, 'time_delta': '13 days, 22:52:41', 'additions': 60, 'deletions': 12, 'state': 'closed'}, {'id': 1377907094, 'number': 87, 'closed': datetime.datetime(2023, 6, 20, 13, 32, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 4, 19, 53, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1359538.0, 'time_delta': '15 days, 17:38:58', 'additions': 2960, 'deletions': 0, 'state': 'closed'}]"
523819582,xeus-clang-repl,compiler-research/xeus-clang-repl,Jupyter Notebook,14,33,8,7,95,14,1,2,"[{'id': 1467317521, 'number': 35, 'closed': datetime.datetime(2023, 8, 23, 9, 3, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 18, 14, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1262960.0, 'time_delta': '14 days, 14:49:20', 'additions': 214, 'deletions': 5, 'state': 'closed'}, {'id': 1457742898, 'number': 34, 'closed': datetime.datetime(2023, 8, 4, 16, 18, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 9, 38, 48, tzinfo=datetime.timezone.utc), 'time_taken': 283174.0, 'time_delta': '3 days, 6:39:34', 'additions': 85, 'deletions': 0, 'state': 'closed'}, {'id': 1425985343, 'number': 33, 'closed': datetime.datetime(2023, 8, 8, 18, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 16, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2686874.0, 'time_delta': '31 days, 2:21:14', 'additions': 2966, 'deletions': 2, 'state': 'closed'}]"
623395860,xeus-cpp,compiler-research/xeus-cpp,Jupyter Notebook,24,17,9,14,131,15,3,8,"[{'id': 1609680241, 'number': 20, 'closed': datetime.datetime(2024, 2, 5, 23, 44, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 20, 19, 16, 7, tzinfo=datetime.timezone.utc), 'time_taken': 6668904.0, 'time_delta': '77 days, 4:28:24', 'additions': 510, 'deletions': 3003, 'state': 'closed'}, {'id': 1484268574, 'number': 13, 'closed': datetime.datetime(2023, 8, 23, 9, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 22, 8, 30, 53, tzinfo=datetime.timezone.utc), 'time_taken': 90026.0, 'time_delta': '1 day, 1:00:26', 'additions': 3117, 'deletions': 505, 'state': 'closed'}, {'id': 1412973867, 'number': 12, 'closed': datetime.datetime(2023, 8, 9, 8, 46, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 8, 56, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3541770.0, 'time_delta': '40 days, 23:49:30', 'additions': 10, 'deletions': 4, 'state': 'closed'}]"
17050358,clad,vgvassilev/clad,C++,115,275,18,47,1160,162,10,32,"[{'id': 1738796073, 'number': 782, 'closed': datetime.datetime(2024, 2, 28, 6, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 22, 12, 14, 25, tzinfo=datetime.timezone.utc), 'time_taken': 497966.0, 'time_delta': '5 days, 18:19:26', 'additions': 86, 'deletions': 1, 'state': 'closed'}, {'id': 1457742776, 'number': 610, 'closed': datetime.datetime(2023, 8, 4, 16, 20, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 9, 38, 42, tzinfo=datetime.timezone.utc), 'time_taken': 283300.0, 'time_delta': '3 days, 6:41:40', 'additions': 11, 'deletions': 9, 'state': 'closed'}]"
