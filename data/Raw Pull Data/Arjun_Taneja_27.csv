pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
665087508,High Contrast Overhaul,"The aim is to introduce two new High Contrast themes (Black and White) ~under a new ""Accessibility"" page under the ""Appearance"" tab in ""Preferences"" menu.~

That design has since been scrapped. The new design requires me to have the Accessibility settings under the ""Appearance"" tab itself, accessible through an ""Enable High-Contrast"" CheckBox. This design makes more sense since it also shares a lot of settings between itself and the ""Appearance"" page.

Find the changes at: Edit -> Preferences -> Appearance ~[-> Accessibility]~

Putting up in Draft form because this PR will require multiple commits. This will also allow mentors and maintainers to follow along with my progress and advise/review accordingly.


<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8280,https://api.github.com/repos/musescore/MuseScore/pulls/8280,https://github.com/musescore/MuseScore/pull/8280,closed,588,105,31,9,8,100,0,0,[],2021-06-08 16:51:13+00:00,2021-08-05 19:14:42+00:00,5019809.0,"58 days, 2:23:29","[{'comment_id': 650432153, 'comment_body': 'Very unimportant thing, but it would be nice if you could move this line to the other preferences pages.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 14, 3, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650433155, 'comment_body': 'I would go for a more descriptive name like `titleLabel`.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650433394, 'comment_body': ""These two changes seem unnecessary...\r\nAlso, it's generally preferred to use camelCase, so this one would be <code>rounded**R**adio**B**utton</code>."", 'comment_created': datetime.datetime(2021, 6, 12, 20, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434407, 'comment_body': '`size_t` vs `int` is always a nasty problem... I think I would prefer to do it like\r\n```cpp\r\n    for (size_t i = 0; i < hcThemes.size(); ++i) {\r\n         if (hcThemes[i].codeKey == (uiConfiguration()->currentTheme()).codeKey) {\r\n             return static_cast<int>(i);\r\n         }\r\n     }\r\n```', 'comment_created': datetime.datetime(2021, 6, 12, 20, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434600, 'comment_body': 'The parentheses around `(uiConfiguration()->currentTheme())` seem not necessary.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434834, 'comment_body': 'I see code like this at multiple places. How about adding inline functions in uitypes.h? Like this:\r\n```cpp\r\ninline std::vector<ThemeCode> generalThemeCodes()\r\n{\r\n    return {\r\n        LIGHT_THEME_CODE,\r\n        DARK_THEME_CODE\r\n    };\r\n}\r\n\r\ninline std::vector<ThemeCode> highContrastThemeCodes()\r\n{\r\n    return {\r\n        HIGH_CONTRAST_BLACK_THEME_CODE,\r\n        HIGH_CONTRAST_WHITE_THEME_CODE\r\n    };\r\n}\r\n```\r\nAnd when we start to use `std::vector<ThemeCode>` so often, you could also add \r\n```cpp\r\nusing ThemeCodeList = std::vector<ThemeCode>;\r\n```\r\n\r\nThis would also optimize, where you need only the themeCode and not necessarily the theme itself.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650435190, 'comment_body': ""We tend to put comments above the thing that they are describing. So it's better to move them above the variable. We often use this style: `//! NOTE ...`\r\n```cpp\r\n    //! NOTE Only search in High Contrast themes\r\n    ThemeList hcThemes;\r\n```"", 'comment_created': datetime.datetime(2021, 6, 12, 20, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650436392, 'comment_body': 'Please, remove this line', 'comment_created': datetime.datetime(2021, 6, 12, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437246, 'comment_body': 'Same thing about the comment.', 'comment_created': datetime.datetime(2021, 6, 12, 21, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437251, 'comment_body': 'Please put this comment above the method (it describes what the method does).', 'comment_created': datetime.datetime(2021, 6, 12, 21, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437489, 'comment_body': 'One space before the comment is enough ðŸ˜‰', 'comment_created': datetime.datetime(2021, 6, 12, 21, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437781, 'comment_body': 'I would suggest changing this method to the following:\r\n```objective-C++\r\nThemeCode MacOSPlatformTheme::themeCode() const\r\n{\r\n    if (isSystemHighContrast()) {\r\n        if (isSystemDarkMode()) {\r\n            return HIGH_CONTRAST_BLACK_THEME_CODE;\r\n        }\r\n\r\n        return HIGH_CONTRAST_WHITE_THEME_CODE;\r\n    }\r\n\r\n    if (isSystemDarkMode()) {\r\n        return DARK_THEME_CODE;\r\n    }\r\n\r\n    return LIGHT_THEME_CODE;\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 6, 12, 21, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650439026, 'comment_body': ""This is probably a mistake of the person before you. Maybe that's me ðŸ˜…\r\nThis should be `strokeColor` anyway, so you can just change the value and don't need the other changes in this file.\r\n\r\n(Note that the `overrideDefaultColors` property would not have been necessary; you could just have one property `normalStateBorderColor` with a default value of `ui.theme.buttonColor`.)"", 'comment_created': datetime.datetime(2021, 6, 12, 21, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650439485, 'comment_body': 'I guess you wanted to do:\r\n```qml\r\nColumn {\r\n    // [some anchors things here]\r\n    spacing: 12\r\n\r\n    Repeater {\r\n         model: ...\r\n         ...\r\n    }\r\n}\r\n```\r\n\r\nOr:\r\n```qml\r\nListView {\r\n    interactive: false\r\n    height: contentHeight // If necessary\r\n    ...\r\n}', 'comment_created': datetime.datetime(2021, 6, 12, 21, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441581, 'comment_body': 'Because there are now two theme pages, the theme can change while the change is not initiated by the model. That is perfectly fine, but it does mean that you need to subscribe to theme changes and emit the `themesChanged` signal also when the theme is changed ""externally"". \r\n\r\nThis can be done by using `uiConfiguration()->currentThemeChanged().onNotify(...)`. (To see examples, just search for `onNotify`.)\r\nYou need to call this in a new `load()` method (example: `CanvasPreferencesModel`). \r\n\r\nIn order to be able to subscribe for `onNotify`, the model class need to be `async::Asyncable`, and therefore you need to include this header.\r\n(All this goes for both the AppearancePreferencesModel and the AccessibilityPreferencesModel.)', 'comment_created': datetime.datetime(2021, 6, 12, 22, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441639, 'comment_body': 'I don\'t really like changing the x and y properties of an item... and the `-8` is a ""magic number"" (edit: as you also mentioned yourself already ðŸ™‚).\r\nYou can fix the alignment by doing\r\n```\r\n    StyledTextLabel {\r\n        ...\r\n        anchors.verticalCenter: parent.verticalCenter\r\n    }\r\n```\r\n(Bonus: a <code>Column*Layout*</code> centers its items automatically. But when there are no other big advantages of using a `Layout`, using a plain `Column` is better.)', 'comment_created': datetime.datetime(2021, 6, 12, 22, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441770, 'comment_body': 'Unnecessary change', 'comment_created': datetime.datetime(2021, 6, 12, 22, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650442494, 'comment_body': 'American vs British: in code, we tend to use American, so in this case `Colors`. For the British users, it gets ""translated"" into British by `qsTrc`.', 'comment_created': datetime.datetime(2021, 6, 12, 22, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652218583, 'comment_body': ""Done!\r\nI knew this was very out of place, and I couldn't figure out how to re-order the files (the only way I found was to sort them alphabetically, and that would've messed up the ordering even more) when I had it open in Qt Creator.\r\nI ended up modifying it using VS Code instead, as that showed me the raw code."", 'comment_created': datetime.datetime(2021, 6, 15, 23, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652220455, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652248776, 'comment_body': 'These are indeed very unnecessary.\r\nThese changes were made to go hand in hand with others that I had made while trying out some things, and I forgot to clean up after my little experiments ðŸ˜… \r\nFixed!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652251098, 'comment_body': 'Done!\r\nI copied this part of the code from `appearancepreferencesmodel.cpp`\r\nShould I make this change over there too?', 'comment_created': datetime.datetime(2021, 6, 15, 23, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652251695, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652259486, 'comment_body': 'I don\'t think adding those inline functions in `uitypes.h` would be of much help...\r\nThere aren\'t many moments in the logic where I need just the ThemeCodes of the themes, and I\'m afraid that introducing more and more variables with the word ""theme"" will decrease code comprehension (it was already hard keeping track of all the ""Theme"" related variables and what they do ðŸ˜… )\r\n\r\n> ```using ThemeCodeList = std::vector<ThemeCode>;```\r\n\r\nFrom what I understand, adding this bit of code will replace my `if (theme.codeKey == HIGH_CONTRAST_BLACK_THEME_CODE || theme.codeKey == HIGH_CONTRAST_WHITE_THEME_CODE)` statement, and allow me to directly use a for loop to iterate over the desired themes based on their CodeKey inside this vector.\r\n\r\nHowever, I still want to raise the same point that creating more variables will be confusing later on. I think it is more expressive and direct the way it currently is. I have used that loop twice in the code, but if you feel that it is still redundant, or if I find that I need to use it more than twice, I can shift that logic to a private function in the same file and call that wherever I need for a bit more tidiness :)\r\n\r\n(Also, something very similar to what you suggested already exists in uitypes.h i.e. `using ThemeList = std::vector<ThemeInfo>;`\r\nThis is logically very different of course, but very similar in naming)', 'comment_created': datetime.datetime(2021, 6, 16, 0, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652261472, 'comment_body': 'That said though, I see what you mean when you say that this would optimize certain areas of the code. ðŸ¤” ', 'comment_created': datetime.datetime(2021, 6, 16, 0, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652261689, 'comment_body': 'Undestood!\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 0, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652268128, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652268631, 'comment_body': 'Also Fixed.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652269802, 'comment_body': 'Removed the comment entirely.\r\nThe name of the function is self-explanatory.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652271154, 'comment_body': 'Understood! ðŸ˜… \r\nFixed.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652272538, 'comment_body': 'Fixed and Replaced!', 'comment_created': datetime.datetime(2021, 6, 16, 1, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652276037, 'comment_body': 'Understood!\r\nRemoved the changes I had to make :)', 'comment_created': datetime.datetime(2021, 6, 16, 1, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652280654, 'comment_body': ""I am going to be experimenting more between ListView and Repeater because the spacing still isn't exactly what I want on that page..."", 'comment_created': datetime.datetime(2021, 6, 16, 1, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652286616, 'comment_body': 'Understood!\r\nThis fixed the spacing right up, no need for the ""Magic Number"" anymore :)', 'comment_created': datetime.datetime(2021, 6, 16, 1, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652287121, 'comment_body': 'Again, a result of my experiments and me forgetting to clean up afterwards. :(\r\nFixed.', 'comment_created': datetime.datetime(2021, 6, 16, 1, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652287734, 'comment_body': 'Ahhh I see...\r\nAlso fixed.', 'comment_created': datetime.datetime(2021, 6, 16, 1, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652576177, 'comment_body': 'Yeah, good idea!', 'comment_created': datetime.datetime(2021, 6, 16, 10, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652580341, 'comment_body': ""Good to know: Repeater does not manage the layout of its items. It only fills its parent, with one item for each entry in its model. So you need to put it inside (for example) a column to make it work. \nAnd it's very okay to use nested columns to work with different spacings!"", 'comment_created': datetime.datetime(2021, 6, 16, 10, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652675725, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652676418, 'comment_body': 'Thanks for this Casper!\r\nI tried this and it fixed the spacing issue right up :)', 'comment_created': datetime.datetime(2021, 6, 16, 13, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652740565, 'comment_body': ""If we use consistent naming, then I think it should not be too complicated. a `Theme` is a struct with all the information for a theme, a `ThemeCode` is only a key for a theme. That's doable, isn't it? \r\nBut I agree that things become unclear when the naming is not consistent. For example, `uiConfiguration()->setCurrentTheme(...)` takes a `ThemeCode`, so it is named wrongly. Feel free to adjust that. \r\n\r\nWith a function for getting `highContrastThemeCodes`, you could simplify for example `AccessibilityPreferencesModel::setCurrentThemeIndex` like this:\r\n```cpp\r\nvoid AccessibilityPreferencesModel::setCurrentThemeIndex(int index)\r\n{\r\n    ThemeCodeList hcThemeCodes = highContrastThemeCodes();\r\n    if (index < 0 || index >= static_cast<int>(hcThemeCodes.size())) {\r\n        return;\r\n    }\r\n\r\n    if (hcThemeCodes[index] == uiConfiguration()->currentThemeCodeKey) {\r\n        return;\r\n    }\r\n\r\n    uiConfiguration()->setCurrentTheme(hcThemes[index].codeKey);\r\n    emit themesChanged();\r\n}\r\n```\r\nAlso `AccessibilityPreferencesModel::currentThemeIndex()` and the corresponding methods of AppearancePreferencesModel can be simplified. "", 'comment_created': datetime.datetime(2021, 6, 16, 14, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 655144674, 'comment_body': ""Thanks for the help Casper!\r\nI've got this working now :) "", 'comment_created': datetime.datetime(2021, 6, 21, 7, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 672273590, 'comment_body': 'I have implemented something akin to this in this form:\r\n```c++\r\nbool UiTheme::isCurrentThemeHighContrast() const\r\n{\r\n    return configuration()->currentTheme().codeKey == HIGH_CONTRAST_BLACK_THEME_CODE\r\n           || configuration()->currentTheme().codeKey == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n}\r\n\r\nbool UiTheme::isCurrentThemeGeneral() const\r\n{\r\n    return configuration()->currentTheme().codeKey == LIGHT_THEME_CODE || configuration()->currentTheme().codeKey == DARK_THEME_CODE;\r\n}\r\n```\r\n\r\nThis is different from what you were suggesting, since the use-cases are different, but this still saves me a lot of time whenever i need a particular feature active only for certain themes. :)', 'comment_created': datetime.datetime(2021, 7, 19, 12, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 676427059, 'comment_body': 'You missed qsTrc here', 'comment_created': datetime.datetime(2021, 7, 26, 9, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676431278, 'comment_body': 'Please, remove the empty line', 'comment_created': datetime.datetime(2021, 7, 26, 9, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676432112, 'comment_body': 'Better to create a private readonly property and reuse it:\r\n\r\nQObject {\r\nid: prv\r\n\r\nreadonly property int spacing: 24\r\n}\r\n\r\n...\r\n\r\nColumn {\r\nspacing: prv.spacing\r\n}', 'comment_created': datetime.datetime(2021, 7, 26, 9, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676432576, 'comment_body': 'Please, remove the empty line', 'comment_created': datetime.datetime(2021, 7, 26, 9, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676451391, 'comment_body': 'Better to create some enum and use it instead of text from UI', 'comment_created': datetime.datetime(2021, 7, 26, 9, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676452855, 'comment_body': 'Better to simplify this method like this (the same for isCurrentThemeGeneral):\r\n\r\nstatic const QStringList contrastThemes {\r\nHIGH_CONTRAST_BLACK_THEME_CODE,\r\nHIGH_CONTRAST_WHITE_THEME_CODE\r\n};\r\n\r\nreturn contrastThemes.contais(currentThemeCode());', 'comment_created': datetime.datetime(2021, 7, 26, 9, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676453261, 'comment_body': 'It seems you missed break here', 'comment_created': datetime.datetime(2021, 7, 26, 9, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676456334, 'comment_body': 'Could you please explain the purpose of this method (same for loadLastUsedHighContrastTheme)?', 'comment_created': datetime.datetime(2021, 7, 26, 9, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676459123, 'comment_body': 'UPD: seems like isCurrentThemeHighContrast and isCurrentThemeGeneral were copy-pasted in several places. Better to use UiConfiguration::isCurrentThemeHighContrast() (and UiConfiguration::isCurrentThemeGeneral()) and apply my suggested fixes there', 'comment_created': datetime.datetime(2021, 7, 26, 9, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676460682, 'comment_body': 'Better to remove all commented code', 'comment_created': datetime.datetime(2021, 7, 26, 9, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676461005, 'comment_body': 'Please, remove this', 'comment_created': datetime.datetime(2021, 7, 26, 9, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676464276, 'comment_body': 'Could you explain the reason for this change?', 'comment_created': datetime.datetime(2021, 7, 26, 10, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676465880, 'comment_body': ""I don't quite understand why you don't use ui.theme here. Could you please explain?"", 'comment_created': datetime.datetime(2021, 7, 26, 10, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 680877187, 'comment_body': 'I did!\r\nFixed :)\r\n', 'comment_created': datetime.datetime(2021, 8, 2, 11, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680893861, 'comment_body': 'Missed that one!\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 11, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680898863, 'comment_body': 'Understood!\r\nShould i also make this change for `firstColumnWidth` declared in the same file? i.e. declare it inside the QtObject and refer to it as `prv.firstColumnWidth`?', 'comment_created': datetime.datetime(2021, 8, 2, 11, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680927441, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 12, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680935290, 'comment_body': 'Ah, Apologies. \r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 12, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680939640, 'comment_body': 'Ah, this.\r\nThe background rectangle for the Dropdown popup (specifically for High-Contrast themes) needed an encompassing border, which is only visible with padding.\r\n\r\nI think a more appropriate value would be `ui.theme.borderWidth`, so that the extra space only shows up for High-Contrast themes and not the General Light/Dark ones.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681417570, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681431184, 'comment_body': 'Apologies, rookie mistake.\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681440578, 'comment_body': 'These methods are called upon checking/unchecking the ""Enable High-Contrast"" checkbox.\r\nWhenever i switch between the modes (General/High-Contrast) (by checking/unchecking the checkbox), the active theme would be whatever theme i last used in that category. I think this adds a little touch of convenience when switching between themes, both for the user who may have customized a theme in both categories perhaps, and for the developer who may be testing features/differences between a general and HC theme.\r\n\r\nfor example,\r\n1. I have the Dark theme active\r\n2. I then check the high-contrast checkbox, and i will get defaulted to the HC-Black theme (only when switching to HC-Mode for the *first* time)\r\n3. I switch to the HC-White theme instead, because it looks cool\r\n4. I uncheck the checkbox, and am taken back to whichever general theme I used last, which in this case was Dark theme\r\n5. Upon checking the box again, I would have the HC-White theme active again, since that is the theme i used last in the HC Category\r\n\r\nThe last used General/HC Theme values are stored in `UI_PREVIOUS_GENERAL_THEME` and `UI_PREVIOUS_HIGH_CONTRAST_THEME` Keys respectively, in `uiconfiguration.cpp`.\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 5, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681462229, 'comment_body': 'From what i understand, you\'re asking about the ""Disabled Text"" property, right?\r\n\r\nAs of right now, the Disabled Text property isn\'t tied to anything i.e. changing the colors of that property doesn\'t really do anything.\r\nFrom what i\'ve been able to decipher, we don\'t have a standard way of referencing ""Disabled"" items. However, Each Item in QML has an `enabled` property and QWidget has an `enabled` member. Perhaps i need to create a new Theme variable (much like the ones in the `ThemeStyleKey` enum in `uitypes.h`), and then connect it across all UI elements to have a color for disabled properties ðŸ¤” .\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 6, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681502874, 'comment_body': '>Should i also make this change for firstColumnWidth declared in the same file?\r\n\r\nYes, you can move this property to prv too', 'comment_created': datetime.datetime(2021, 8, 3, 7, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681510972, 'comment_body': 'Yes, better to replace this magic number with ui.theme.borderWidth', 'comment_created': datetime.datetime(2021, 8, 3, 7, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681519492, 'comment_body': '>From what i understand, you\'re asking about the ""Disabled Text"" property, right?\r\n\r\nYes, right\r\n\r\n>Perhaps i need to create a new Theme variable (much like the ones in the ThemeStyleKey enum in uitypes.h)\r\n\r\nIt would be great', 'comment_created': datetime.datetime(2021, 8, 3, 7, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681523778, 'comment_body': 'I believe you can use isCurrentThemeHighContrast directly in qml (after marking it as Q_INVOKABLE). You can remove  enableHighContrastChecked after those changes', 'comment_created': datetime.datetime(2021, 8, 3, 7, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681773826, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 13, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681774704, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 13, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681791508, 'comment_body': ""Understood!\r\nAs of now, I'm working on the navCtrl borders (nearly done, will post an update within the next few hours). \r\nThis isn't as high of a priority as score-page color inversion is, so i've decided to hold off on fixing this for a little longer, or until i can finish the score inversion feature."", 'comment_created': datetime.datetime(2021, 8, 3, 14, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681901341, 'comment_body': 'I apologize, for i don\'t know how to properly implement an enum in this case. But i understand why using text from UI is just bad practice.\r\n\r\nShould i create a new `propertyKey` variable in `UiColorsSection.qml` like so:\r\n```\r\nmodel: [\r\n                { textRole: ""Accent Color:"", colorRole: ui.theme.accentColor, propertyKey: 0 },\r\n                { textRole: ""Text and Icons:"", colorRole: ui.theme.fontPrimaryColor, propertyKey: 1},\r\n                { textRole: ""Disabled Text:"", colorRole: ""#000000"", propertyKey: 2},\r\n                { textRole: ""Border Color:"", colorRole: ui.theme.strokeColor, propertyKey: 3}\r\n            ]\r\n```\r\n\r\nand then change the if/else-if ladder in `appearancepreferencesmodel.cpp` to a `switch()` statement like so:\r\n```\r\nswitch(propertyKey)\r\n{\r\n    case 0: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::ACCENT_COLOR, Val(newColor)); \r\n        break;\r\n    \r\n    case 1: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::FONT_PRIMARY_COLOR, Val(newColor)); \r\n        break;\r\n    \r\n    case 2: return; //because a common way to refer to disabled items/text isn\'t fully implemented yet\r\n    \r\n    case 3: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::STROKE_COLOR, Val(newColor)); \r\n        break;\r\n\r\n    default: qDebug(""Setting not Found!"");    \r\n```\r\n\r\n\r\nAgain, I\'m suggesting this because i do not fully understand the enum approach.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 5, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681915362, 'comment_body': 'You can declare an enum in appearancepreferencesmodel.h (see navigationpanel.h for example):\r\n\r\n<img width=""778"" alt=""Screenshot 2021-08-03 at 18 15 30"" src=""https://user-images.githubusercontent.com/67867444/128050700-0f02581b-329f-4331-a46c-9e2fcfea6ff5.png"">\r\n\r\nLike this:\r\n\r\nColorType {\r\nAccentColor,\r\nTextAndIconsColor,\r\n...\r\n}\r\nQ_ENUM(ColorType)\r\n\r\nYou can use this enum in both qml and cpp', 'comment_created': datetime.datetime(2021, 8, 3, 16, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681916195, 'comment_body': 'So, your function will look like this:\r\n\r\nQ_INVOKABLE void setNewColor(const QColor& newColor, ColorType colorType)', 'comment_created': datetime.datetime(2021, 8, 3, 16, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681919658, 'comment_body': 'And in QML you access the enum values like \r\n```qml\r\nAppearancePreferencesModel.AccentColor\r\nAppearancePreferencesModel.TextAndIconsColor\r\n```\r\nYou need to use AppearancePreferencesModel instead of the name of the enum in C++. This is by the design of Qt.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 682394520, 'comment_body': '> Better to simplify this method like this\r\n\r\nThis is how the code was turning out to be. \r\n\r\n```c++\r\nbool UiConfiguration::isCurrentThemeHighContrast() const\r\n{\r\n    static const QStringList highContrastThemes {\r\n        QString::fromStdString(HIGH_CONTRAST_BLACK_THEME_CODE),\r\n        QString::fromStdString(HIGH_CONTRAST_WHITE_THEME_CODE)\r\n    };\r\n\r\n    return highContrastThemes.contains(QString::fromStdString(currentThemeCodeKey()));\r\n}\r\n```\r\n\r\nTo try to reduce the overheads and conversions, i tried to implement it in a way that used `std::string` itself, and came up with this:\r\n```c++\r\nstatic const std::vector<std::string> highContrastThemes {\r\n        HIGH_CONTRAST_BLACK_THEME_CODE,\r\n        HIGH_CONTRAST_WHITE_THEME_CODE\r\n    };\r\n    \r\n    if(std::find(highContrastThemes.begin(), highContrastThemes.end(), currentThemeCodeKey()) != highContrastThemes.end())\r\n    {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n```\r\n\r\nShould i go with this instead?', 'comment_created': datetime.datetime(2021, 8, 4, 8, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683112849, 'comment_body': 'Understood!\r\nEnum implemented, and is working properly :).\r\nThank you for the tip Casper!', 'comment_created': datetime.datetime(2021, 8, 5, 4, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683178313, 'comment_body': 'I have removed `isCurrentThemeHighContrast()` from `appearancepreferencesmodel.cpp` completely, as suggested. `isCurrentThemeHighContrast()` and `isCurrentThemeGeneral()` now lie in `uiconfiguration.cpp`. This is what `enableHighContrastChecked()` looks like now:\r\n```c++\r\nbool AppearancePreferencesModel::enableHighContrastChecked()\r\n{\r\n    return uiConfiguration()->isCurrentThemeHighContrast();\r\n}\r\n```\r\nI need the Q_INVOKABLE function (i.e. `enableHighContrastChecked()`) inside AppearancePreferencesModel class for it to work, which is why i can\'t remove it from here. (unless there is a way to use Q_INVOKABLE functions from different files?)\r\n\r\nFrom what I understand, `uiconfiguration.cpp` file represents the lowest ""ModelData"" layer, and it sends data up to `uitheme.cpp` and other files i.e. the ""ViewModel"" layer. I think using a function directly in QML from `uiconfiguration.cpp` will mess up this layering system.\r\n ', 'comment_created': datetime.datetime(2021, 8, 5, 6, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683192932, 'comment_body': 'In this case, I more like the first implementation for this method :) We can just slightly improve it:\r\n\r\nThemeCode currentThemeCode = uiConfiguration()->currentTheme().codeKey;\r\nreturn currentThemeCode == HIGH_CONTRAST_BLACK_THEME_CODE || currentThemeCode == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 7, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 683198268, 'comment_body': '>From what I understand, uiconfiguration.cpp file represents the lowest ""ModelData"" layer, and it sends data up to uitheme.cpp and other files i.e. the ""ViewModel"" layer. I think using a function directly in QML from uiconfiguration.cpp will mess up this layering system.\r\n\r\n\r\nYes, you are absolutely right :) \r\n\r\nThere were 2 different isCurrentThemeHighContrast (one in the model, and another in the configuration) and separately enableHighContrastChecked that just called isCurrentThemeHighContrast of the model\r\n\r\nYour suggested solution is good: we will have Q_INVOKABLE enableHighContrastChecked in the model and isCurrentThemeHighContrast in the configuration', 'comment_created': datetime.datetime(2021, 8, 5, 7, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 683361171, 'comment_body': '> In this case, I more like the first implementation for this method :)\r\n\r\nYou mean the original implementation, I believe?\r\n\r\nSince this function has now found a new happy home in `uiconfiguration.cpp`, this is what it looks like now, after all suggested changes:\r\n```c++\r\nbool UiConfiguration::isCurrentThemeGeneral() const\r\n{\r\n    ThemeCode currentThemeCode = currentThemeCodeKey();\r\n\r\n    return currentThemeCode == DARK_THEME_CODE || currentThemeCode == LIGHT_THEME_CODE;\r\n}\r\n```\r\n\r\nand\r\n\r\n```c++\r\nbool UiConfiguration::isCurrentThemeHighContrast() const\r\n{\r\n    ThemeCode currentThemeCode = currentThemeCodeKey();\r\n\r\n    return currentThemeCode == HIGH_CONTRAST_BLACK_THEME_CODE || currentThemeCode == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n}\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 11, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683439708, 'comment_body': ""Understood!\r\nI've made the appropriate changes :)"", 'comment_created': datetime.datetime(2021, 8, 5, 13, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683507310, 'comment_body': '`""Program start""`, US spelling and Sentence case', 'comment_created': datetime.datetime(2021, 8, 5, 14, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683508112, 'comment_body': 'Sentence case, not Title Case\r\n(But yes, our policy there just changed recently)', 'comment_created': datetime.datetime(2021, 8, 5, 14, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509129, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 8, 5, 14, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509316, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 8, 5, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509589, 'comment_body': 'same for these 4', 'comment_created': datetime.datetime(2021, 8, 5, 14, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683510346, 'comment_body': 'No need to shout ;-), a normal sentence works here too', 'comment_created': datetime.datetime(2021, 8, 5, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683515615, 'comment_body': 'just remove the default case', 'comment_created': datetime.datetime(2021, 8, 5, 14, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 683520545, 'comment_body': 'True, has the added benefit of a compiler warning if a new colorType gets added but not dealt with here', 'comment_created': datetime.datetime(2021, 8, 5, 14, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683663226, 'comment_body': 'Converted to `""Program start""`\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 5, 17, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683664096, 'comment_body': 'Converted to `""Enable high-contrast""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683664707, 'comment_body': 'Converted to `""Reset theme to default""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683665328, 'comment_body': 'Converted to `""UI colors""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683666298, 'comment_body': 'Converted to `""Accent color:""`, `""Text and icons:""`, `""Disabled text:""`, `""Border color:""`\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 5, 17, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683667108, 'comment_body': 'Ah, apologies ðŸ˜… \r\nConverted to `""Invalid ColorType Received.""`\r\nFixed\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683671473, 'comment_body': ""I'd still say it's even better to remove the `default:` entirely. At the moment, it is not needed, and without it, as Jojo says, the compiler will warn when somebody adds a new case to the enum and forgets to handle that case here."", 'comment_created': datetime.datetime(2021, 8, 5, 17, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 683672995, 'comment_body': 'Ah understood\r\nI will remove the default case entirely.\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}]","[{'commit_sha': '91b6df775a732d29e3c0a9d13f80289778b5f583', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8461e132218ba8a289c4f98f6c63dc83a6c200ca', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a57d722526a3aa5a67ab5f4597e882a00cfac028', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3adf495b42327d405a6cc94f3bfe42cd6b9656f0', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10b787d82d1c3cac13d78f9c36592285204d1423', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f7e80f12d15a5b2efa21107860af4d7764e1b0b', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b994272b4f3ef9ca4073bb9d4aca31388a674cad', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a55c2c0f1f5168e84852e89971ce45b7a31f66', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceadb4f52d1a1c000ff190e23036a7b4746604c7', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
705445879,Navigation Control Border Re-Implementation ,"Resolves: #8442

All elements supporting Navigation Control now draw the border rectangle on the outside. 
There were a total of 5 different elements i.e. 
* `Dropdown`: (it works for the main Dropdown item, but the items inside it are very close together. I have implemented this in such a way that the borders for the popup elements are drawn on the inside). 
* `DockPanelTab` : The borders are being drawn on the inside, again because of lack of space.
* `InstrumentsTreeItemDelegate` : Borders on the inside, same reason. 
* `PaletteTree` : This file uses `ListItemBlank` as a delegate to draw its children. I've done it in such a way such that only this instance of `ListItemBlank` 's borders get drawn on the inside.
* `Expandable Blank` : Same thing

The borders for these are drawn on the inside, in a way that it does not interfere with the High-Contrast borders; i.e. the HC 1px border + the 2px navCtrl border will combine to make a single 3px border on the inside (the innermost being the HC border, followed by the navCtrl one).

For a demonstration, Navigate to DevTools -> KeyNav. (Please make sure that you are in Light mode. The colors for the elements in that page are hard-coded and don't work well with other themes)

This PR does not modify the existing Navigation Control logic for elements, just the way the borders are drawn around them.

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [ ] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8806,https://api.github.com/repos/musescore/MuseScore/pulls/8806,https://github.com/musescore/MuseScore/pull/8806,closed,164,75,29,3,1,6,0,0,[],2021-08-06 12:28:14+00:00,2021-08-09 07:36:02+00:00,241668.0,"2 days, 19:07:48","[{'comment_id': 684213300, 'comment_body': 'I believe you need to create a separate component (NavigatioBorder) and reuse it instead of copy-pasting this code in all controls', 'comment_created': datetime.datetime(2021, 8, 6, 12, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 684216745, 'comment_body': 'Better to get this value from the current theme to avoid the magic number', 'comment_created': datetime.datetime(2021, 8, 6, 13, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 684219219, 'comment_body': ""Yes that\r\nI'm going to make it into a theme variable.\r\nThat will allow us to have different navigation border widths for different themes, which might come in handy"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684240186, 'comment_body': 'Understood!', 'comment_created': datetime.datetime(2021, 8, 6, 13, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684258017, 'comment_body': 'Done :)\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 13, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684692136, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 8, 0, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}]","[{'commit_sha': '883868732cdfcf8e45084ca74cbca7e8a765e730', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af89b6204aa9df83f15c871af02483aa49900e7e', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceed9679fd2f798ab53a20a5f0f85756b25ba0df', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
716508611,Score-Page Color Inversion,"Resolves: #8909 & adds additional features

This is an additional feature to the newly added High-Contrast themes of MuseScore (as part of my Google Summer of Code project) wherein the user is given the ability to invert the colors of the Score-Page from within the Edit -> Preferences -> Appearance tab.

From the Appearance tab, Toggle High-Contrast mode, and there will be a new ""Invert score colors"" checkbox under the ""UI colors"" Category.

Behavior:
* Checking the ""Invert score colors"" checkbox will set the color of the foreground (or paper color) to black, and the color of the notes/clefs/staff/text/time-signatures etc. to a very slightly dulled white (255,255,255,200).
* Un-checking the score inversion checkbox restores previous settings i.e. foreground color, note color etc.
* While Score Inversion is active, the ability to modify the page color is taken away from the user so as to maintain proper visibility and avoid very mismatched score/page color combinations. The Page Color settings stop receiving mouse and keyboard events and are rendered at 0.6 opacity, indicating that they are indeed disabled.
* While Score Inversion is active, If the user was to toggle between High-Contrast/General themes, the score-color/page-color would respond accordingly, wherein switching to a general theme will restore previously used ""normal"" score-color/paper-color values, since the inversion feature is only reserved for High-Contrast mode.

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8886,https://api.github.com/repos/musescore/MuseScore/pulls/8886,https://github.com/musescore/MuseScore/pull/8886,closed,128,12,15,10,9,34,0,0,[],2021-08-20 07:27:18+00:00,2021-09-10 15:38:42+00:00,1843884.0,"21 days, 8:11:24","[{'comment_id': 692731237, 'comment_body': 'these were all perfectly indented before', 'comment_created': datetime.datetime(2021, 8, 20, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692731690, 'comment_body': ""why only those and not any of the others in that block?\r\nShould be either all or none. I'M for none"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692732245, 'comment_body': ""That is a problem with my Uncrustify file. (possibly caused by having an older version?)\r\nI encounter the same problem in `uitypes.h` where i have to disable Uncrustify and manually reset some lines to whatever the codestyle approves. I'll do it here too :)"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 692732969, 'comment_body': 'code style issue', 'comment_created': datetime.datetime(2021, 8, 20, 7, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692733242, 'comment_body': 'code style issue', 'comment_created': datetime.datetime(2021, 8, 20, 7, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 697991004, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2021, 8, 29, 10, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697992376, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 8, 29, 10, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697992581, 'comment_body': 'This function has been removed in the latest master i believe', 'comment_created': datetime.datetime(2021, 8, 29, 10, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697993221, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 8, 29, 10, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697997521, 'comment_body': 'A rebase would show, I guess.\r\nIt is needed anyhow.\r\nAnd indeed element.cpp is one of the conflicting files.', 'comment_created': datetime.datetime(2021, 8, 29, 11, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 698298571, 'comment_body': ""Wouldn't that just be `Color::black`?\r\nSee also #8928"", 'comment_created': datetime.datetime(2021, 8, 30, 8, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 698299350, 'comment_body': ""Wouldn't that just be `Color::white`? Or `QColor::white`?\r\nSee also #8928"", 'comment_created': datetime.datetime(2021, 8, 30, 8, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 701487462, 'comment_body': 'This is QColor though, rather than mu::draw::Color.', 'comment_created': datetime.datetime(2021, 9, 2, 23, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 701599577, 'comment_body': 'OK, then `QColor::black`', 'comment_created': datetime.datetime(2021, 9, 3, 5, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702717378, 'comment_body': 'There is no such thing as `QColor::black`\r\nThere is only a `QColor::black()`, which returns the black part of the color from the Cmyk coloring system.\r\n\r\nI have instead used `QColorConstants::Black`. Is that okay?', 'comment_created': datetime.datetime(2021, 9, 6, 8, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 702720510, 'comment_body': 'Used `QColorConstants::White` instead.', 'comment_created': datetime.datetime(2021, 9, 6, 8, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 702734469, 'comment_body': ""after this line, your alias doesn't work anymore because you rewrite to a fixed value(just bool, no binding)\r\nproperty alias scoreInversionChecked: scoreInversionEnable.checked\r\n\r\nqml should request about value changed and no more. The model will change the local value and emit a signal about data changed, the view will update the state by alias. But the model can also cancel data changing, then the data of model and of view are different because the view already changed value(checked = !checked).\r\n\r\nYou can see how I fixed it for highContrastEnabled"", 'comment_created': datetime.datetime(2021, 9, 6, 9, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 702735957, 'comment_body': 'better rename to scoreInversionEnabled', 'comment_created': datetime.datetime(2021, 9, 6, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 702762457, 'comment_body': 'IMHO yes.', 'comment_created': datetime.datetime(2021, 9, 6, 9, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702762558, 'comment_body': 'Yup, thats what I meant anyway ;-)', 'comment_created': datetime.datetime(2021, 9, 6, 9, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 703296369, 'comment_body': 'It would be better to return a full opacity off-white colour:\r\n\r\n```c++\r\nreturn mu::draw::Color(160, 160, 160, 255);\r\n```\r\n\r\nAlpha transparency affects performance because the program has to calculate the colour of pixels behind each object instead of just ignoring those pixels. Using a full opacity colour also prevents the colour changing when you have multiple semi-transparent objects on top of each other.', 'comment_created': datetime.datetime(2021, 9, 7, 8, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703299122, 'comment_body': 'Is this intentional? Looks like you are replacing a calculated value with a ""magic number"".', 'comment_created': datetime.datetime(2021, 9, 7, 8, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703302214, 'comment_body': '```c++\r\nreturn QColor(102, 102, 102, 0);\r\n```', 'comment_created': datetime.datetime(2021, 9, 7, 8, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703368913, 'comment_body': 'Ah yes this is intentional, since borderWidth is 1 for HC themes and 0 for general ones.\r\nThe border width around group boxes in the styles dialog needs to be 1 for general themes as well and not just the high contrast ones. \r\nPerhaps a more appropriate line would be:\r\n```c++\r\ndrawRoundedRect(painter, option->rect, 3, QBrush(""#03000000""), QPen(strokeColor(), configuration()->isHighContrast() ? borderWidth() : 1));\r\n```\r\nThis would also account for further changes to High-Contrast borderWidth should someone choose to modify those values...', 'comment_created': datetime.datetime(2021, 9, 7, 10, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703438977, 'comment_body': 'Ah I see what you mean\r\n\r\nI have removed the `checked = !checked` line, and made the alias a bool property. The `onClicked` function now looks like this:\r\n```c++\r\nonClicked: {\r\n            root.scoreInversionRequested(!checked)\r\n        }\r\n```\r\nThe system is now almost identical to the High Contrast checkbox.', 'comment_created': datetime.datetime(2021, 9, 7, 11, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703468937, 'comment_body': 'Fixed\r\n', 'comment_created': datetime.datetime(2021, 9, 7, 12, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703472580, 'comment_body': ""Ahh I never would've thought of this!\r\nUnderstood and fixed!"", 'comment_created': datetime.datetime(2021, 9, 7, 12, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703473961, 'comment_body': '~Also fixed~\r\n\r\nNow that i think about it, (0, 0, 0, 102) just has the alpha channel passed to it, and this is part of the `borderColor()` function, so it just acts on a few pixels on the border of each score page.\r\n\r\nPerhaps this should be left as is? as i assume this acts just as a ""shadow"" around the score-page?\r\n\r\nI should also mention that this value was already in the code before I messed around with it...\r\n\r\nAlso, Wouldn\'t your suggested color (102, 102, 102, 0) be fully transparent?', 'comment_created': datetime.datetime(2021, 9, 7, 12, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703929315, 'comment_body': '> Wouldn\'t your suggested color (102, 102, 102, 0) be fully transparent?\r\n\r\nOops yes! I just swapped the values (i.e. did the reverse of [this](https://github.com/musescore/MuseScore/pull/8886#discussion_r703296369)) but of course the alpha always needs to be 255 to remain full opacity.\r\n\r\n> Perhaps this should be left as is? as i assume this acts just as a ""shadow"" around the score-page?\r\n\r\nYes, if it is really just a shadow then it needs to use alpha transparency, so you can ignore my comment! I thought this might be a dark colour used for the score background or something.', 'comment_created': datetime.datetime(2021, 9, 8, 0, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703935859, 'comment_body': 'If the intent is *""follow `borderWidth()` where possible but the element must always have a border""* then I think this would be preferable:\r\n\r\n```qml\r\nborderWidth() > 1 ? borderWidth() : 1\r\n```\r\n\r\nOr even better:\r\n\r\n```qml\r\nMath.max(borderWidth(), 1)\r\n```\r\n\r\nI think I saw a few other place where you might want to do something similar.\r\n\r\nIt\'s best not to use High Contrast as a way to check for a non-zero border because we might have more themes in the future with different border sizes, or make the border size configurable outside of the High Contrast theme, etc.', 'comment_created': datetime.datetime(2021, 9, 8, 0, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 705224109, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2021, 9, 9, 11, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 705291058, 'comment_body': 'this extra line cause the code style check to fail', 'comment_created': datetime.datetime(2021, 9, 9, 12, 41, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 705292047, 'comment_body': 'Yes, fixed already :)', 'comment_created': datetime.datetime(2021, 9, 9, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 705293568, 'comment_body': 'You were quicxker in fixing that I in reporting ;-)', 'comment_created': datetime.datetime(2021, 9, 9, 12, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}]","[{'commit_sha': '63cda41faefe9f1a795e517ffd40355c410dc96c', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f68028e4a9e50ee6f5fbde403a5ab96633fe9c6e', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7daae303c371a0baf1eeb3dfb16e7fedaf60fda6', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f74036d6c20da401bdbacd4ac6134736fda661f', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fab0a46755982998a21c3197c10bf2fb368a8eab', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '925115afee7031bc059dab69d314624b0fe97823', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f0c9b823dfa09f008751de8ef3a808180ff81e4', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5ff01f8c9cdb89e0c57913a748d810edc7be0d2', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '583d7e3cea336333a94aeda14d5ac6c9c598ffb0', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38518931317fa6b643f665f50d6f0527673cbb89', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
665087508,High Contrast Overhaul,"The aim is to introduce two new High Contrast themes (Black and White) ~under a new ""Accessibility"" page under the ""Appearance"" tab in ""Preferences"" menu.~

That design has since been scrapped. The new design requires me to have the Accessibility settings under the ""Appearance"" tab itself, accessible through an ""Enable High-Contrast"" CheckBox. This design makes more sense since it also shares a lot of settings between itself and the ""Appearance"" page.

Find the changes at: Edit -> Preferences -> Appearance ~[-> Accessibility]~

Putting up in Draft form because this PR will require multiple commits. This will also allow mentors and maintainers to follow along with my progress and advise/review accordingly.


<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8280,https://api.github.com/repos/musescore/MuseScore/pulls/8280,https://github.com/musescore/MuseScore/pull/8280,closed,588,105,31,9,8,100,0,0,[],2021-06-08 16:51:13+00:00,2021-08-05 19:14:42+00:00,5019809.0,"58 days, 2:23:29","[{'comment_id': 650432153, 'comment_body': 'Very unimportant thing, but it would be nice if you could move this line to the other preferences pages.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 14, 3, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650433155, 'comment_body': 'I would go for a more descriptive name like `titleLabel`.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650433394, 'comment_body': ""These two changes seem unnecessary...\r\nAlso, it's generally preferred to use camelCase, so this one would be <code>rounded**R**adio**B**utton</code>."", 'comment_created': datetime.datetime(2021, 6, 12, 20, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434407, 'comment_body': '`size_t` vs `int` is always a nasty problem... I think I would prefer to do it like\r\n```cpp\r\n    for (size_t i = 0; i < hcThemes.size(); ++i) {\r\n         if (hcThemes[i].codeKey == (uiConfiguration()->currentTheme()).codeKey) {\r\n             return static_cast<int>(i);\r\n         }\r\n     }\r\n```', 'comment_created': datetime.datetime(2021, 6, 12, 20, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434600, 'comment_body': 'The parentheses around `(uiConfiguration()->currentTheme())` seem not necessary.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434834, 'comment_body': 'I see code like this at multiple places. How about adding inline functions in uitypes.h? Like this:\r\n```cpp\r\ninline std::vector<ThemeCode> generalThemeCodes()\r\n{\r\n    return {\r\n        LIGHT_THEME_CODE,\r\n        DARK_THEME_CODE\r\n    };\r\n}\r\n\r\ninline std::vector<ThemeCode> highContrastThemeCodes()\r\n{\r\n    return {\r\n        HIGH_CONTRAST_BLACK_THEME_CODE,\r\n        HIGH_CONTRAST_WHITE_THEME_CODE\r\n    };\r\n}\r\n```\r\nAnd when we start to use `std::vector<ThemeCode>` so often, you could also add \r\n```cpp\r\nusing ThemeCodeList = std::vector<ThemeCode>;\r\n```\r\n\r\nThis would also optimize, where you need only the themeCode and not necessarily the theme itself.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650435190, 'comment_body': ""We tend to put comments above the thing that they are describing. So it's better to move them above the variable. We often use this style: `//! NOTE ...`\r\n```cpp\r\n    //! NOTE Only search in High Contrast themes\r\n    ThemeList hcThemes;\r\n```"", 'comment_created': datetime.datetime(2021, 6, 12, 20, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650436392, 'comment_body': 'Please, remove this line', 'comment_created': datetime.datetime(2021, 6, 12, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437246, 'comment_body': 'Same thing about the comment.', 'comment_created': datetime.datetime(2021, 6, 12, 21, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437251, 'comment_body': 'Please put this comment above the method (it describes what the method does).', 'comment_created': datetime.datetime(2021, 6, 12, 21, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437489, 'comment_body': 'One space before the comment is enough ðŸ˜‰', 'comment_created': datetime.datetime(2021, 6, 12, 21, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437781, 'comment_body': 'I would suggest changing this method to the following:\r\n```objective-C++\r\nThemeCode MacOSPlatformTheme::themeCode() const\r\n{\r\n    if (isSystemHighContrast()) {\r\n        if (isSystemDarkMode()) {\r\n            return HIGH_CONTRAST_BLACK_THEME_CODE;\r\n        }\r\n\r\n        return HIGH_CONTRAST_WHITE_THEME_CODE;\r\n    }\r\n\r\n    if (isSystemDarkMode()) {\r\n        return DARK_THEME_CODE;\r\n    }\r\n\r\n    return LIGHT_THEME_CODE;\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 6, 12, 21, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650439026, 'comment_body': ""This is probably a mistake of the person before you. Maybe that's me ðŸ˜…\r\nThis should be `strokeColor` anyway, so you can just change the value and don't need the other changes in this file.\r\n\r\n(Note that the `overrideDefaultColors` property would not have been necessary; you could just have one property `normalStateBorderColor` with a default value of `ui.theme.buttonColor`.)"", 'comment_created': datetime.datetime(2021, 6, 12, 21, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650439485, 'comment_body': 'I guess you wanted to do:\r\n```qml\r\nColumn {\r\n    // [some anchors things here]\r\n    spacing: 12\r\n\r\n    Repeater {\r\n         model: ...\r\n         ...\r\n    }\r\n}\r\n```\r\n\r\nOr:\r\n```qml\r\nListView {\r\n    interactive: false\r\n    height: contentHeight // If necessary\r\n    ...\r\n}', 'comment_created': datetime.datetime(2021, 6, 12, 21, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441581, 'comment_body': 'Because there are now two theme pages, the theme can change while the change is not initiated by the model. That is perfectly fine, but it does mean that you need to subscribe to theme changes and emit the `themesChanged` signal also when the theme is changed ""externally"". \r\n\r\nThis can be done by using `uiConfiguration()->currentThemeChanged().onNotify(...)`. (To see examples, just search for `onNotify`.)\r\nYou need to call this in a new `load()` method (example: `CanvasPreferencesModel`). \r\n\r\nIn order to be able to subscribe for `onNotify`, the model class need to be `async::Asyncable`, and therefore you need to include this header.\r\n(All this goes for both the AppearancePreferencesModel and the AccessibilityPreferencesModel.)', 'comment_created': datetime.datetime(2021, 6, 12, 22, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441639, 'comment_body': 'I don\'t really like changing the x and y properties of an item... and the `-8` is a ""magic number"" (edit: as you also mentioned yourself already ðŸ™‚).\r\nYou can fix the alignment by doing\r\n```\r\n    StyledTextLabel {\r\n        ...\r\n        anchors.verticalCenter: parent.verticalCenter\r\n    }\r\n```\r\n(Bonus: a <code>Column*Layout*</code> centers its items automatically. But when there are no other big advantages of using a `Layout`, using a plain `Column` is better.)', 'comment_created': datetime.datetime(2021, 6, 12, 22, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441770, 'comment_body': 'Unnecessary change', 'comment_created': datetime.datetime(2021, 6, 12, 22, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650442494, 'comment_body': 'American vs British: in code, we tend to use American, so in this case `Colors`. For the British users, it gets ""translated"" into British by `qsTrc`.', 'comment_created': datetime.datetime(2021, 6, 12, 22, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652218583, 'comment_body': ""Done!\r\nI knew this was very out of place, and I couldn't figure out how to re-order the files (the only way I found was to sort them alphabetically, and that would've messed up the ordering even more) when I had it open in Qt Creator.\r\nI ended up modifying it using VS Code instead, as that showed me the raw code."", 'comment_created': datetime.datetime(2021, 6, 15, 23, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652220455, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652248776, 'comment_body': 'These are indeed very unnecessary.\r\nThese changes were made to go hand in hand with others that I had made while trying out some things, and I forgot to clean up after my little experiments ðŸ˜… \r\nFixed!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652251098, 'comment_body': 'Done!\r\nI copied this part of the code from `appearancepreferencesmodel.cpp`\r\nShould I make this change over there too?', 'comment_created': datetime.datetime(2021, 6, 15, 23, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652251695, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652259486, 'comment_body': 'I don\'t think adding those inline functions in `uitypes.h` would be of much help...\r\nThere aren\'t many moments in the logic where I need just the ThemeCodes of the themes, and I\'m afraid that introducing more and more variables with the word ""theme"" will decrease code comprehension (it was already hard keeping track of all the ""Theme"" related variables and what they do ðŸ˜… )\r\n\r\n> ```using ThemeCodeList = std::vector<ThemeCode>;```\r\n\r\nFrom what I understand, adding this bit of code will replace my `if (theme.codeKey == HIGH_CONTRAST_BLACK_THEME_CODE || theme.codeKey == HIGH_CONTRAST_WHITE_THEME_CODE)` statement, and allow me to directly use a for loop to iterate over the desired themes based on their CodeKey inside this vector.\r\n\r\nHowever, I still want to raise the same point that creating more variables will be confusing later on. I think it is more expressive and direct the way it currently is. I have used that loop twice in the code, but if you feel that it is still redundant, or if I find that I need to use it more than twice, I can shift that logic to a private function in the same file and call that wherever I need for a bit more tidiness :)\r\n\r\n(Also, something very similar to what you suggested already exists in uitypes.h i.e. `using ThemeList = std::vector<ThemeInfo>;`\r\nThis is logically very different of course, but very similar in naming)', 'comment_created': datetime.datetime(2021, 6, 16, 0, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652261472, 'comment_body': 'That said though, I see what you mean when you say that this would optimize certain areas of the code. ðŸ¤” ', 'comment_created': datetime.datetime(2021, 6, 16, 0, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652261689, 'comment_body': 'Undestood!\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 0, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652268128, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652268631, 'comment_body': 'Also Fixed.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652269802, 'comment_body': 'Removed the comment entirely.\r\nThe name of the function is self-explanatory.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652271154, 'comment_body': 'Understood! ðŸ˜… \r\nFixed.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652272538, 'comment_body': 'Fixed and Replaced!', 'comment_created': datetime.datetime(2021, 6, 16, 1, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652276037, 'comment_body': 'Understood!\r\nRemoved the changes I had to make :)', 'comment_created': datetime.datetime(2021, 6, 16, 1, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652280654, 'comment_body': ""I am going to be experimenting more between ListView and Repeater because the spacing still isn't exactly what I want on that page..."", 'comment_created': datetime.datetime(2021, 6, 16, 1, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652286616, 'comment_body': 'Understood!\r\nThis fixed the spacing right up, no need for the ""Magic Number"" anymore :)', 'comment_created': datetime.datetime(2021, 6, 16, 1, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652287121, 'comment_body': 'Again, a result of my experiments and me forgetting to clean up afterwards. :(\r\nFixed.', 'comment_created': datetime.datetime(2021, 6, 16, 1, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652287734, 'comment_body': 'Ahhh I see...\r\nAlso fixed.', 'comment_created': datetime.datetime(2021, 6, 16, 1, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652576177, 'comment_body': 'Yeah, good idea!', 'comment_created': datetime.datetime(2021, 6, 16, 10, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652580341, 'comment_body': ""Good to know: Repeater does not manage the layout of its items. It only fills its parent, with one item for each entry in its model. So you need to put it inside (for example) a column to make it work. \nAnd it's very okay to use nested columns to work with different spacings!"", 'comment_created': datetime.datetime(2021, 6, 16, 10, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652675725, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652676418, 'comment_body': 'Thanks for this Casper!\r\nI tried this and it fixed the spacing issue right up :)', 'comment_created': datetime.datetime(2021, 6, 16, 13, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652740565, 'comment_body': ""If we use consistent naming, then I think it should not be too complicated. a `Theme` is a struct with all the information for a theme, a `ThemeCode` is only a key for a theme. That's doable, isn't it? \r\nBut I agree that things become unclear when the naming is not consistent. For example, `uiConfiguration()->setCurrentTheme(...)` takes a `ThemeCode`, so it is named wrongly. Feel free to adjust that. \r\n\r\nWith a function for getting `highContrastThemeCodes`, you could simplify for example `AccessibilityPreferencesModel::setCurrentThemeIndex` like this:\r\n```cpp\r\nvoid AccessibilityPreferencesModel::setCurrentThemeIndex(int index)\r\n{\r\n    ThemeCodeList hcThemeCodes = highContrastThemeCodes();\r\n    if (index < 0 || index >= static_cast<int>(hcThemeCodes.size())) {\r\n        return;\r\n    }\r\n\r\n    if (hcThemeCodes[index] == uiConfiguration()->currentThemeCodeKey) {\r\n        return;\r\n    }\r\n\r\n    uiConfiguration()->setCurrentTheme(hcThemes[index].codeKey);\r\n    emit themesChanged();\r\n}\r\n```\r\nAlso `AccessibilityPreferencesModel::currentThemeIndex()` and the corresponding methods of AppearancePreferencesModel can be simplified. "", 'comment_created': datetime.datetime(2021, 6, 16, 14, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 655144674, 'comment_body': ""Thanks for the help Casper!\r\nI've got this working now :) "", 'comment_created': datetime.datetime(2021, 6, 21, 7, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 672273590, 'comment_body': 'I have implemented something akin to this in this form:\r\n```c++\r\nbool UiTheme::isCurrentThemeHighContrast() const\r\n{\r\n    return configuration()->currentTheme().codeKey == HIGH_CONTRAST_BLACK_THEME_CODE\r\n           || configuration()->currentTheme().codeKey == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n}\r\n\r\nbool UiTheme::isCurrentThemeGeneral() const\r\n{\r\n    return configuration()->currentTheme().codeKey == LIGHT_THEME_CODE || configuration()->currentTheme().codeKey == DARK_THEME_CODE;\r\n}\r\n```\r\n\r\nThis is different from what you were suggesting, since the use-cases are different, but this still saves me a lot of time whenever i need a particular feature active only for certain themes. :)', 'comment_created': datetime.datetime(2021, 7, 19, 12, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 676427059, 'comment_body': 'You missed qsTrc here', 'comment_created': datetime.datetime(2021, 7, 26, 9, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676431278, 'comment_body': 'Please, remove the empty line', 'comment_created': datetime.datetime(2021, 7, 26, 9, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676432112, 'comment_body': 'Better to create a private readonly property and reuse it:\r\n\r\nQObject {\r\nid: prv\r\n\r\nreadonly property int spacing: 24\r\n}\r\n\r\n...\r\n\r\nColumn {\r\nspacing: prv.spacing\r\n}', 'comment_created': datetime.datetime(2021, 7, 26, 9, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676432576, 'comment_body': 'Please, remove the empty line', 'comment_created': datetime.datetime(2021, 7, 26, 9, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676451391, 'comment_body': 'Better to create some enum and use it instead of text from UI', 'comment_created': datetime.datetime(2021, 7, 26, 9, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676452855, 'comment_body': 'Better to simplify this method like this (the same for isCurrentThemeGeneral):\r\n\r\nstatic const QStringList contrastThemes {\r\nHIGH_CONTRAST_BLACK_THEME_CODE,\r\nHIGH_CONTRAST_WHITE_THEME_CODE\r\n};\r\n\r\nreturn contrastThemes.contais(currentThemeCode());', 'comment_created': datetime.datetime(2021, 7, 26, 9, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676453261, 'comment_body': 'It seems you missed break here', 'comment_created': datetime.datetime(2021, 7, 26, 9, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676456334, 'comment_body': 'Could you please explain the purpose of this method (same for loadLastUsedHighContrastTheme)?', 'comment_created': datetime.datetime(2021, 7, 26, 9, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676459123, 'comment_body': 'UPD: seems like isCurrentThemeHighContrast and isCurrentThemeGeneral were copy-pasted in several places. Better to use UiConfiguration::isCurrentThemeHighContrast() (and UiConfiguration::isCurrentThemeGeneral()) and apply my suggested fixes there', 'comment_created': datetime.datetime(2021, 7, 26, 9, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676460682, 'comment_body': 'Better to remove all commented code', 'comment_created': datetime.datetime(2021, 7, 26, 9, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676461005, 'comment_body': 'Please, remove this', 'comment_created': datetime.datetime(2021, 7, 26, 9, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676464276, 'comment_body': 'Could you explain the reason for this change?', 'comment_created': datetime.datetime(2021, 7, 26, 10, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676465880, 'comment_body': ""I don't quite understand why you don't use ui.theme here. Could you please explain?"", 'comment_created': datetime.datetime(2021, 7, 26, 10, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 680877187, 'comment_body': 'I did!\r\nFixed :)\r\n', 'comment_created': datetime.datetime(2021, 8, 2, 11, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680893861, 'comment_body': 'Missed that one!\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 11, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680898863, 'comment_body': 'Understood!\r\nShould i also make this change for `firstColumnWidth` declared in the same file? i.e. declare it inside the QtObject and refer to it as `prv.firstColumnWidth`?', 'comment_created': datetime.datetime(2021, 8, 2, 11, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680927441, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 12, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680935290, 'comment_body': 'Ah, Apologies. \r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 12, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680939640, 'comment_body': 'Ah, this.\r\nThe background rectangle for the Dropdown popup (specifically for High-Contrast themes) needed an encompassing border, which is only visible with padding.\r\n\r\nI think a more appropriate value would be `ui.theme.borderWidth`, so that the extra space only shows up for High-Contrast themes and not the General Light/Dark ones.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681417570, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681431184, 'comment_body': 'Apologies, rookie mistake.\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681440578, 'comment_body': 'These methods are called upon checking/unchecking the ""Enable High-Contrast"" checkbox.\r\nWhenever i switch between the modes (General/High-Contrast) (by checking/unchecking the checkbox), the active theme would be whatever theme i last used in that category. I think this adds a little touch of convenience when switching between themes, both for the user who may have customized a theme in both categories perhaps, and for the developer who may be testing features/differences between a general and HC theme.\r\n\r\nfor example,\r\n1. I have the Dark theme active\r\n2. I then check the high-contrast checkbox, and i will get defaulted to the HC-Black theme (only when switching to HC-Mode for the *first* time)\r\n3. I switch to the HC-White theme instead, because it looks cool\r\n4. I uncheck the checkbox, and am taken back to whichever general theme I used last, which in this case was Dark theme\r\n5. Upon checking the box again, I would have the HC-White theme active again, since that is the theme i used last in the HC Category\r\n\r\nThe last used General/HC Theme values are stored in `UI_PREVIOUS_GENERAL_THEME` and `UI_PREVIOUS_HIGH_CONTRAST_THEME` Keys respectively, in `uiconfiguration.cpp`.\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 5, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681462229, 'comment_body': 'From what i understand, you\'re asking about the ""Disabled Text"" property, right?\r\n\r\nAs of right now, the Disabled Text property isn\'t tied to anything i.e. changing the colors of that property doesn\'t really do anything.\r\nFrom what i\'ve been able to decipher, we don\'t have a standard way of referencing ""Disabled"" items. However, Each Item in QML has an `enabled` property and QWidget has an `enabled` member. Perhaps i need to create a new Theme variable (much like the ones in the `ThemeStyleKey` enum in `uitypes.h`), and then connect it across all UI elements to have a color for disabled properties ðŸ¤” .\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 6, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681502874, 'comment_body': '>Should i also make this change for firstColumnWidth declared in the same file?\r\n\r\nYes, you can move this property to prv too', 'comment_created': datetime.datetime(2021, 8, 3, 7, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681510972, 'comment_body': 'Yes, better to replace this magic number with ui.theme.borderWidth', 'comment_created': datetime.datetime(2021, 8, 3, 7, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681519492, 'comment_body': '>From what i understand, you\'re asking about the ""Disabled Text"" property, right?\r\n\r\nYes, right\r\n\r\n>Perhaps i need to create a new Theme variable (much like the ones in the ThemeStyleKey enum in uitypes.h)\r\n\r\nIt would be great', 'comment_created': datetime.datetime(2021, 8, 3, 7, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681523778, 'comment_body': 'I believe you can use isCurrentThemeHighContrast directly in qml (after marking it as Q_INVOKABLE). You can remove  enableHighContrastChecked after those changes', 'comment_created': datetime.datetime(2021, 8, 3, 7, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681773826, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 13, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681774704, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 13, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681791508, 'comment_body': ""Understood!\r\nAs of now, I'm working on the navCtrl borders (nearly done, will post an update within the next few hours). \r\nThis isn't as high of a priority as score-page color inversion is, so i've decided to hold off on fixing this for a little longer, or until i can finish the score inversion feature."", 'comment_created': datetime.datetime(2021, 8, 3, 14, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681901341, 'comment_body': 'I apologize, for i don\'t know how to properly implement an enum in this case. But i understand why using text from UI is just bad practice.\r\n\r\nShould i create a new `propertyKey` variable in `UiColorsSection.qml` like so:\r\n```\r\nmodel: [\r\n                { textRole: ""Accent Color:"", colorRole: ui.theme.accentColor, propertyKey: 0 },\r\n                { textRole: ""Text and Icons:"", colorRole: ui.theme.fontPrimaryColor, propertyKey: 1},\r\n                { textRole: ""Disabled Text:"", colorRole: ""#000000"", propertyKey: 2},\r\n                { textRole: ""Border Color:"", colorRole: ui.theme.strokeColor, propertyKey: 3}\r\n            ]\r\n```\r\n\r\nand then change the if/else-if ladder in `appearancepreferencesmodel.cpp` to a `switch()` statement like so:\r\n```\r\nswitch(propertyKey)\r\n{\r\n    case 0: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::ACCENT_COLOR, Val(newColor)); \r\n        break;\r\n    \r\n    case 1: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::FONT_PRIMARY_COLOR, Val(newColor)); \r\n        break;\r\n    \r\n    case 2: return; //because a common way to refer to disabled items/text isn\'t fully implemented yet\r\n    \r\n    case 3: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::STROKE_COLOR, Val(newColor)); \r\n        break;\r\n\r\n    default: qDebug(""Setting not Found!"");    \r\n```\r\n\r\n\r\nAgain, I\'m suggesting this because i do not fully understand the enum approach.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 5, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681915362, 'comment_body': 'You can declare an enum in appearancepreferencesmodel.h (see navigationpanel.h for example):\r\n\r\n<img width=""778"" alt=""Screenshot 2021-08-03 at 18 15 30"" src=""https://user-images.githubusercontent.com/67867444/128050700-0f02581b-329f-4331-a46c-9e2fcfea6ff5.png"">\r\n\r\nLike this:\r\n\r\nColorType {\r\nAccentColor,\r\nTextAndIconsColor,\r\n...\r\n}\r\nQ_ENUM(ColorType)\r\n\r\nYou can use this enum in both qml and cpp', 'comment_created': datetime.datetime(2021, 8, 3, 16, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681916195, 'comment_body': 'So, your function will look like this:\r\n\r\nQ_INVOKABLE void setNewColor(const QColor& newColor, ColorType colorType)', 'comment_created': datetime.datetime(2021, 8, 3, 16, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681919658, 'comment_body': 'And in QML you access the enum values like \r\n```qml\r\nAppearancePreferencesModel.AccentColor\r\nAppearancePreferencesModel.TextAndIconsColor\r\n```\r\nYou need to use AppearancePreferencesModel instead of the name of the enum in C++. This is by the design of Qt.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 682394520, 'comment_body': '> Better to simplify this method like this\r\n\r\nThis is how the code was turning out to be. \r\n\r\n```c++\r\nbool UiConfiguration::isCurrentThemeHighContrast() const\r\n{\r\n    static const QStringList highContrastThemes {\r\n        QString::fromStdString(HIGH_CONTRAST_BLACK_THEME_CODE),\r\n        QString::fromStdString(HIGH_CONTRAST_WHITE_THEME_CODE)\r\n    };\r\n\r\n    return highContrastThemes.contains(QString::fromStdString(currentThemeCodeKey()));\r\n}\r\n```\r\n\r\nTo try to reduce the overheads and conversions, i tried to implement it in a way that used `std::string` itself, and came up with this:\r\n```c++\r\nstatic const std::vector<std::string> highContrastThemes {\r\n        HIGH_CONTRAST_BLACK_THEME_CODE,\r\n        HIGH_CONTRAST_WHITE_THEME_CODE\r\n    };\r\n    \r\n    if(std::find(highContrastThemes.begin(), highContrastThemes.end(), currentThemeCodeKey()) != highContrastThemes.end())\r\n    {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n```\r\n\r\nShould i go with this instead?', 'comment_created': datetime.datetime(2021, 8, 4, 8, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683112849, 'comment_body': 'Understood!\r\nEnum implemented, and is working properly :).\r\nThank you for the tip Casper!', 'comment_created': datetime.datetime(2021, 8, 5, 4, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683178313, 'comment_body': 'I have removed `isCurrentThemeHighContrast()` from `appearancepreferencesmodel.cpp` completely, as suggested. `isCurrentThemeHighContrast()` and `isCurrentThemeGeneral()` now lie in `uiconfiguration.cpp`. This is what `enableHighContrastChecked()` looks like now:\r\n```c++\r\nbool AppearancePreferencesModel::enableHighContrastChecked()\r\n{\r\n    return uiConfiguration()->isCurrentThemeHighContrast();\r\n}\r\n```\r\nI need the Q_INVOKABLE function (i.e. `enableHighContrastChecked()`) inside AppearancePreferencesModel class for it to work, which is why i can\'t remove it from here. (unless there is a way to use Q_INVOKABLE functions from different files?)\r\n\r\nFrom what I understand, `uiconfiguration.cpp` file represents the lowest ""ModelData"" layer, and it sends data up to `uitheme.cpp` and other files i.e. the ""ViewModel"" layer. I think using a function directly in QML from `uiconfiguration.cpp` will mess up this layering system.\r\n ', 'comment_created': datetime.datetime(2021, 8, 5, 6, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683192932, 'comment_body': 'In this case, I more like the first implementation for this method :) We can just slightly improve it:\r\n\r\nThemeCode currentThemeCode = uiConfiguration()->currentTheme().codeKey;\r\nreturn currentThemeCode == HIGH_CONTRAST_BLACK_THEME_CODE || currentThemeCode == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 7, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 683198268, 'comment_body': '>From what I understand, uiconfiguration.cpp file represents the lowest ""ModelData"" layer, and it sends data up to uitheme.cpp and other files i.e. the ""ViewModel"" layer. I think using a function directly in QML from uiconfiguration.cpp will mess up this layering system.\r\n\r\n\r\nYes, you are absolutely right :) \r\n\r\nThere were 2 different isCurrentThemeHighContrast (one in the model, and another in the configuration) and separately enableHighContrastChecked that just called isCurrentThemeHighContrast of the model\r\n\r\nYour suggested solution is good: we will have Q_INVOKABLE enableHighContrastChecked in the model and isCurrentThemeHighContrast in the configuration', 'comment_created': datetime.datetime(2021, 8, 5, 7, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 683361171, 'comment_body': '> In this case, I more like the first implementation for this method :)\r\n\r\nYou mean the original implementation, I believe?\r\n\r\nSince this function has now found a new happy home in `uiconfiguration.cpp`, this is what it looks like now, after all suggested changes:\r\n```c++\r\nbool UiConfiguration::isCurrentThemeGeneral() const\r\n{\r\n    ThemeCode currentThemeCode = currentThemeCodeKey();\r\n\r\n    return currentThemeCode == DARK_THEME_CODE || currentThemeCode == LIGHT_THEME_CODE;\r\n}\r\n```\r\n\r\nand\r\n\r\n```c++\r\nbool UiConfiguration::isCurrentThemeHighContrast() const\r\n{\r\n    ThemeCode currentThemeCode = currentThemeCodeKey();\r\n\r\n    return currentThemeCode == HIGH_CONTRAST_BLACK_THEME_CODE || currentThemeCode == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n}\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 11, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683439708, 'comment_body': ""Understood!\r\nI've made the appropriate changes :)"", 'comment_created': datetime.datetime(2021, 8, 5, 13, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683507310, 'comment_body': '`""Program start""`, US spelling and Sentence case', 'comment_created': datetime.datetime(2021, 8, 5, 14, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683508112, 'comment_body': 'Sentence case, not Title Case\r\n(But yes, our policy there just changed recently)', 'comment_created': datetime.datetime(2021, 8, 5, 14, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509129, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 8, 5, 14, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509316, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 8, 5, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509589, 'comment_body': 'same for these 4', 'comment_created': datetime.datetime(2021, 8, 5, 14, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683510346, 'comment_body': 'No need to shout ;-), a normal sentence works here too', 'comment_created': datetime.datetime(2021, 8, 5, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683515615, 'comment_body': 'just remove the default case', 'comment_created': datetime.datetime(2021, 8, 5, 14, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 683520545, 'comment_body': 'True, has the added benefit of a compiler warning if a new colorType gets added but not dealt with here', 'comment_created': datetime.datetime(2021, 8, 5, 14, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683663226, 'comment_body': 'Converted to `""Program start""`\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 5, 17, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683664096, 'comment_body': 'Converted to `""Enable high-contrast""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683664707, 'comment_body': 'Converted to `""Reset theme to default""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683665328, 'comment_body': 'Converted to `""UI colors""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683666298, 'comment_body': 'Converted to `""Accent color:""`, `""Text and icons:""`, `""Disabled text:""`, `""Border color:""`\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 5, 17, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683667108, 'comment_body': 'Ah, apologies ðŸ˜… \r\nConverted to `""Invalid ColorType Received.""`\r\nFixed\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683671473, 'comment_body': ""I'd still say it's even better to remove the `default:` entirely. At the moment, it is not needed, and without it, as Jojo says, the compiler will warn when somebody adds a new case to the enum and forgets to handle that case here."", 'comment_created': datetime.datetime(2021, 8, 5, 17, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 683672995, 'comment_body': 'Ah understood\r\nI will remove the default case entirely.\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}]","[{'commit_sha': '91b6df775a732d29e3c0a9d13f80289778b5f583', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8461e132218ba8a289c4f98f6c63dc83a6c200ca', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a57d722526a3aa5a67ab5f4597e882a00cfac028', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3adf495b42327d405a6cc94f3bfe42cd6b9656f0', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10b787d82d1c3cac13d78f9c36592285204d1423', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f7e80f12d15a5b2efa21107860af4d7764e1b0b', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b994272b4f3ef9ca4073bb9d4aca31388a674cad', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a55c2c0f1f5168e84852e89971ce45b7a31f66', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceadb4f52d1a1c000ff190e23036a7b4746604c7', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
705445879,Navigation Control Border Re-Implementation ,"Resolves: #8442

All elements supporting Navigation Control now draw the border rectangle on the outside. 
There were a total of 5 different elements i.e. 
* `Dropdown`: (it works for the main Dropdown item, but the items inside it are very close together. I have implemented this in such a way that the borders for the popup elements are drawn on the inside). 
* `DockPanelTab` : The borders are being drawn on the inside, again because of lack of space.
* `InstrumentsTreeItemDelegate` : Borders on the inside, same reason. 
* `PaletteTree` : This file uses `ListItemBlank` as a delegate to draw its children. I've done it in such a way such that only this instance of `ListItemBlank` 's borders get drawn on the inside.
* `Expandable Blank` : Same thing

The borders for these are drawn on the inside, in a way that it does not interfere with the High-Contrast borders; i.e. the HC 1px border + the 2px navCtrl border will combine to make a single 3px border on the inside (the innermost being the HC border, followed by the navCtrl one).

For a demonstration, Navigate to DevTools -> KeyNav. (Please make sure that you are in Light mode. The colors for the elements in that page are hard-coded and don't work well with other themes)

This PR does not modify the existing Navigation Control logic for elements, just the way the borders are drawn around them.

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [ ] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8806,https://api.github.com/repos/musescore/MuseScore/pulls/8806,https://github.com/musescore/MuseScore/pull/8806,closed,164,75,29,3,1,6,0,0,[],2021-08-06 12:28:14+00:00,2021-08-09 07:36:02+00:00,241668.0,"2 days, 19:07:48","[{'comment_id': 684213300, 'comment_body': 'I believe you need to create a separate component (NavigatioBorder) and reuse it instead of copy-pasting this code in all controls', 'comment_created': datetime.datetime(2021, 8, 6, 12, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 684216745, 'comment_body': 'Better to get this value from the current theme to avoid the magic number', 'comment_created': datetime.datetime(2021, 8, 6, 13, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 684219219, 'comment_body': ""Yes that\r\nI'm going to make it into a theme variable.\r\nThat will allow us to have different navigation border widths for different themes, which might come in handy"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684240186, 'comment_body': 'Understood!', 'comment_created': datetime.datetime(2021, 8, 6, 13, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684258017, 'comment_body': 'Done :)\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 13, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684692136, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 8, 0, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}]","[{'commit_sha': '883868732cdfcf8e45084ca74cbca7e8a765e730', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af89b6204aa9df83f15c871af02483aa49900e7e', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceed9679fd2f798ab53a20a5f0f85756b25ba0df', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
716508611,Score-Page Color Inversion,"Resolves: #8909 & adds additional features

This is an additional feature to the newly added High-Contrast themes of MuseScore (as part of my Google Summer of Code project) wherein the user is given the ability to invert the colors of the Score-Page from within the Edit -> Preferences -> Appearance tab.

From the Appearance tab, Toggle High-Contrast mode, and there will be a new ""Invert score colors"" checkbox under the ""UI colors"" Category.

Behavior:
* Checking the ""Invert score colors"" checkbox will set the color of the foreground (or paper color) to black, and the color of the notes/clefs/staff/text/time-signatures etc. to a very slightly dulled white (255,255,255,200).
* Un-checking the score inversion checkbox restores previous settings i.e. foreground color, note color etc.
* While Score Inversion is active, the ability to modify the page color is taken away from the user so as to maintain proper visibility and avoid very mismatched score/page color combinations. The Page Color settings stop receiving mouse and keyboard events and are rendered at 0.6 opacity, indicating that they are indeed disabled.
* While Score Inversion is active, If the user was to toggle between High-Contrast/General themes, the score-color/page-color would respond accordingly, wherein switching to a general theme will restore previously used ""normal"" score-color/paper-color values, since the inversion feature is only reserved for High-Contrast mode.

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8886,https://api.github.com/repos/musescore/MuseScore/pulls/8886,https://github.com/musescore/MuseScore/pull/8886,closed,128,12,15,10,9,34,0,0,[],2021-08-20 07:27:18+00:00,2021-09-10 15:38:42+00:00,1843884.0,"21 days, 8:11:24","[{'comment_id': 692731237, 'comment_body': 'these were all perfectly indented before', 'comment_created': datetime.datetime(2021, 8, 20, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692731690, 'comment_body': ""why only those and not any of the others in that block?\r\nShould be either all or none. I'M for none"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692732245, 'comment_body': ""That is a problem with my Uncrustify file. (possibly caused by having an older version?)\r\nI encounter the same problem in `uitypes.h` where i have to disable Uncrustify and manually reset some lines to whatever the codestyle approves. I'll do it here too :)"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 692732969, 'comment_body': 'code style issue', 'comment_created': datetime.datetime(2021, 8, 20, 7, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692733242, 'comment_body': 'code style issue', 'comment_created': datetime.datetime(2021, 8, 20, 7, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 697991004, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2021, 8, 29, 10, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697992376, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 8, 29, 10, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697992581, 'comment_body': 'This function has been removed in the latest master i believe', 'comment_created': datetime.datetime(2021, 8, 29, 10, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697993221, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 8, 29, 10, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697997521, 'comment_body': 'A rebase would show, I guess.\r\nIt is needed anyhow.\r\nAnd indeed element.cpp is one of the conflicting files.', 'comment_created': datetime.datetime(2021, 8, 29, 11, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 698298571, 'comment_body': ""Wouldn't that just be `Color::black`?\r\nSee also #8928"", 'comment_created': datetime.datetime(2021, 8, 30, 8, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 698299350, 'comment_body': ""Wouldn't that just be `Color::white`? Or `QColor::white`?\r\nSee also #8928"", 'comment_created': datetime.datetime(2021, 8, 30, 8, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 701487462, 'comment_body': 'This is QColor though, rather than mu::draw::Color.', 'comment_created': datetime.datetime(2021, 9, 2, 23, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 701599577, 'comment_body': 'OK, then `QColor::black`', 'comment_created': datetime.datetime(2021, 9, 3, 5, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702717378, 'comment_body': 'There is no such thing as `QColor::black`\r\nThere is only a `QColor::black()`, which returns the black part of the color from the Cmyk coloring system.\r\n\r\nI have instead used `QColorConstants::Black`. Is that okay?', 'comment_created': datetime.datetime(2021, 9, 6, 8, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 702720510, 'comment_body': 'Used `QColorConstants::White` instead.', 'comment_created': datetime.datetime(2021, 9, 6, 8, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 702734469, 'comment_body': ""after this line, your alias doesn't work anymore because you rewrite to a fixed value(just bool, no binding)\r\nproperty alias scoreInversionChecked: scoreInversionEnable.checked\r\n\r\nqml should request about value changed and no more. The model will change the local value and emit a signal about data changed, the view will update the state by alias. But the model can also cancel data changing, then the data of model and of view are different because the view already changed value(checked = !checked).\r\n\r\nYou can see how I fixed it for highContrastEnabled"", 'comment_created': datetime.datetime(2021, 9, 6, 9, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 702735957, 'comment_body': 'better rename to scoreInversionEnabled', 'comment_created': datetime.datetime(2021, 9, 6, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 702762457, 'comment_body': 'IMHO yes.', 'comment_created': datetime.datetime(2021, 9, 6, 9, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702762558, 'comment_body': 'Yup, thats what I meant anyway ;-)', 'comment_created': datetime.datetime(2021, 9, 6, 9, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 703296369, 'comment_body': 'It would be better to return a full opacity off-white colour:\r\n\r\n```c++\r\nreturn mu::draw::Color(160, 160, 160, 255);\r\n```\r\n\r\nAlpha transparency affects performance because the program has to calculate the colour of pixels behind each object instead of just ignoring those pixels. Using a full opacity colour also prevents the colour changing when you have multiple semi-transparent objects on top of each other.', 'comment_created': datetime.datetime(2021, 9, 7, 8, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703299122, 'comment_body': 'Is this intentional? Looks like you are replacing a calculated value with a ""magic number"".', 'comment_created': datetime.datetime(2021, 9, 7, 8, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703302214, 'comment_body': '```c++\r\nreturn QColor(102, 102, 102, 0);\r\n```', 'comment_created': datetime.datetime(2021, 9, 7, 8, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703368913, 'comment_body': 'Ah yes this is intentional, since borderWidth is 1 for HC themes and 0 for general ones.\r\nThe border width around group boxes in the styles dialog needs to be 1 for general themes as well and not just the high contrast ones. \r\nPerhaps a more appropriate line would be:\r\n```c++\r\ndrawRoundedRect(painter, option->rect, 3, QBrush(""#03000000""), QPen(strokeColor(), configuration()->isHighContrast() ? borderWidth() : 1));\r\n```\r\nThis would also account for further changes to High-Contrast borderWidth should someone choose to modify those values...', 'comment_created': datetime.datetime(2021, 9, 7, 10, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703438977, 'comment_body': 'Ah I see what you mean\r\n\r\nI have removed the `checked = !checked` line, and made the alias a bool property. The `onClicked` function now looks like this:\r\n```c++\r\nonClicked: {\r\n            root.scoreInversionRequested(!checked)\r\n        }\r\n```\r\nThe system is now almost identical to the High Contrast checkbox.', 'comment_created': datetime.datetime(2021, 9, 7, 11, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703468937, 'comment_body': 'Fixed\r\n', 'comment_created': datetime.datetime(2021, 9, 7, 12, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703472580, 'comment_body': ""Ahh I never would've thought of this!\r\nUnderstood and fixed!"", 'comment_created': datetime.datetime(2021, 9, 7, 12, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703473961, 'comment_body': '~Also fixed~\r\n\r\nNow that i think about it, (0, 0, 0, 102) just has the alpha channel passed to it, and this is part of the `borderColor()` function, so it just acts on a few pixels on the border of each score page.\r\n\r\nPerhaps this should be left as is? as i assume this acts just as a ""shadow"" around the score-page?\r\n\r\nI should also mention that this value was already in the code before I messed around with it...\r\n\r\nAlso, Wouldn\'t your suggested color (102, 102, 102, 0) be fully transparent?', 'comment_created': datetime.datetime(2021, 9, 7, 12, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703929315, 'comment_body': '> Wouldn\'t your suggested color (102, 102, 102, 0) be fully transparent?\r\n\r\nOops yes! I just swapped the values (i.e. did the reverse of [this](https://github.com/musescore/MuseScore/pull/8886#discussion_r703296369)) but of course the alpha always needs to be 255 to remain full opacity.\r\n\r\n> Perhaps this should be left as is? as i assume this acts just as a ""shadow"" around the score-page?\r\n\r\nYes, if it is really just a shadow then it needs to use alpha transparency, so you can ignore my comment! I thought this might be a dark colour used for the score background or something.', 'comment_created': datetime.datetime(2021, 9, 8, 0, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703935859, 'comment_body': 'If the intent is *""follow `borderWidth()` where possible but the element must always have a border""* then I think this would be preferable:\r\n\r\n```qml\r\nborderWidth() > 1 ? borderWidth() : 1\r\n```\r\n\r\nOr even better:\r\n\r\n```qml\r\nMath.max(borderWidth(), 1)\r\n```\r\n\r\nI think I saw a few other place where you might want to do something similar.\r\n\r\nIt\'s best not to use High Contrast as a way to check for a non-zero border because we might have more themes in the future with different border sizes, or make the border size configurable outside of the High Contrast theme, etc.', 'comment_created': datetime.datetime(2021, 9, 8, 0, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 705224109, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2021, 9, 9, 11, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 705291058, 'comment_body': 'this extra line cause the code style check to fail', 'comment_created': datetime.datetime(2021, 9, 9, 12, 41, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 705292047, 'comment_body': 'Yes, fixed already :)', 'comment_created': datetime.datetime(2021, 9, 9, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 705293568, 'comment_body': 'You were quicxker in fixing that I in reporting ;-)', 'comment_created': datetime.datetime(2021, 9, 9, 12, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}]","[{'commit_sha': '63cda41faefe9f1a795e517ffd40355c410dc96c', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f68028e4a9e50ee6f5fbde403a5ab96633fe9c6e', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7daae303c371a0baf1eeb3dfb16e7fedaf60fda6', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f74036d6c20da401bdbacd4ac6134736fda661f', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fab0a46755982998a21c3197c10bf2fb368a8eab', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '925115afee7031bc059dab69d314624b0fe97823', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f0c9b823dfa09f008751de8ef3a808180ff81e4', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5ff01f8c9cdb89e0c57913a748d810edc7be0d2', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '583d7e3cea336333a94aeda14d5ac6c9c598ffb0', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38518931317fa6b643f665f50d6f0527673cbb89', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
665087508,High Contrast Overhaul,"The aim is to introduce two new High Contrast themes (Black and White) ~under a new ""Accessibility"" page under the ""Appearance"" tab in ""Preferences"" menu.~

That design has since been scrapped. The new design requires me to have the Accessibility settings under the ""Appearance"" tab itself, accessible through an ""Enable High-Contrast"" CheckBox. This design makes more sense since it also shares a lot of settings between itself and the ""Appearance"" page.

Find the changes at: Edit -> Preferences -> Appearance ~[-> Accessibility]~

Putting up in Draft form because this PR will require multiple commits. This will also allow mentors and maintainers to follow along with my progress and advise/review accordingly.


<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8280,https://api.github.com/repos/musescore/MuseScore/pulls/8280,https://github.com/musescore/MuseScore/pull/8280,closed,588,105,31,9,8,100,0,0,[],2021-06-08 16:51:13+00:00,2021-08-05 19:14:42+00:00,5019809.0,"58 days, 2:23:29","[{'comment_id': 650432153, 'comment_body': 'Very unimportant thing, but it would be nice if you could move this line to the other preferences pages.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 14, 3, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650433155, 'comment_body': 'I would go for a more descriptive name like `titleLabel`.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650433394, 'comment_body': ""These two changes seem unnecessary...\r\nAlso, it's generally preferred to use camelCase, so this one would be <code>rounded**R**adio**B**utton</code>."", 'comment_created': datetime.datetime(2021, 6, 12, 20, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434407, 'comment_body': '`size_t` vs `int` is always a nasty problem... I think I would prefer to do it like\r\n```cpp\r\n    for (size_t i = 0; i < hcThemes.size(); ++i) {\r\n         if (hcThemes[i].codeKey == (uiConfiguration()->currentTheme()).codeKey) {\r\n             return static_cast<int>(i);\r\n         }\r\n     }\r\n```', 'comment_created': datetime.datetime(2021, 6, 12, 20, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434600, 'comment_body': 'The parentheses around `(uiConfiguration()->currentTheme())` seem not necessary.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650434834, 'comment_body': 'I see code like this at multiple places. How about adding inline functions in uitypes.h? Like this:\r\n```cpp\r\ninline std::vector<ThemeCode> generalThemeCodes()\r\n{\r\n    return {\r\n        LIGHT_THEME_CODE,\r\n        DARK_THEME_CODE\r\n    };\r\n}\r\n\r\ninline std::vector<ThemeCode> highContrastThemeCodes()\r\n{\r\n    return {\r\n        HIGH_CONTRAST_BLACK_THEME_CODE,\r\n        HIGH_CONTRAST_WHITE_THEME_CODE\r\n    };\r\n}\r\n```\r\nAnd when we start to use `std::vector<ThemeCode>` so often, you could also add \r\n```cpp\r\nusing ThemeCodeList = std::vector<ThemeCode>;\r\n```\r\n\r\nThis would also optimize, where you need only the themeCode and not necessarily the theme itself.', 'comment_created': datetime.datetime(2021, 6, 12, 20, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650435190, 'comment_body': ""We tend to put comments above the thing that they are describing. So it's better to move them above the variable. We often use this style: `//! NOTE ...`\r\n```cpp\r\n    //! NOTE Only search in High Contrast themes\r\n    ThemeList hcThemes;\r\n```"", 'comment_created': datetime.datetime(2021, 6, 12, 20, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650436392, 'comment_body': 'Please, remove this line', 'comment_created': datetime.datetime(2021, 6, 12, 21, 6, 16, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437246, 'comment_body': 'Same thing about the comment.', 'comment_created': datetime.datetime(2021, 6, 12, 21, 16, 21, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437251, 'comment_body': 'Please put this comment above the method (it describes what the method does).', 'comment_created': datetime.datetime(2021, 6, 12, 21, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437489, 'comment_body': 'One space before the comment is enough ðŸ˜‰', 'comment_created': datetime.datetime(2021, 6, 12, 21, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650437781, 'comment_body': 'I would suggest changing this method to the following:\r\n```objective-C++\r\nThemeCode MacOSPlatformTheme::themeCode() const\r\n{\r\n    if (isSystemHighContrast()) {\r\n        if (isSystemDarkMode()) {\r\n            return HIGH_CONTRAST_BLACK_THEME_CODE;\r\n        }\r\n\r\n        return HIGH_CONTRAST_WHITE_THEME_CODE;\r\n    }\r\n\r\n    if (isSystemDarkMode()) {\r\n        return DARK_THEME_CODE;\r\n    }\r\n\r\n    return LIGHT_THEME_CODE;\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 6, 12, 21, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650439026, 'comment_body': ""This is probably a mistake of the person before you. Maybe that's me ðŸ˜…\r\nThis should be `strokeColor` anyway, so you can just change the value and don't need the other changes in this file.\r\n\r\n(Note that the `overrideDefaultColors` property would not have been necessary; you could just have one property `normalStateBorderColor` with a default value of `ui.theme.buttonColor`.)"", 'comment_created': datetime.datetime(2021, 6, 12, 21, 40, 39, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650439485, 'comment_body': 'I guess you wanted to do:\r\n```qml\r\nColumn {\r\n    // [some anchors things here]\r\n    spacing: 12\r\n\r\n    Repeater {\r\n         model: ...\r\n         ...\r\n    }\r\n}\r\n```\r\n\r\nOr:\r\n```qml\r\nListView {\r\n    interactive: false\r\n    height: contentHeight // If necessary\r\n    ...\r\n}', 'comment_created': datetime.datetime(2021, 6, 12, 21, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441581, 'comment_body': 'Because there are now two theme pages, the theme can change while the change is not initiated by the model. That is perfectly fine, but it does mean that you need to subscribe to theme changes and emit the `themesChanged` signal also when the theme is changed ""externally"". \r\n\r\nThis can be done by using `uiConfiguration()->currentThemeChanged().onNotify(...)`. (To see examples, just search for `onNotify`.)\r\nYou need to call this in a new `load()` method (example: `CanvasPreferencesModel`). \r\n\r\nIn order to be able to subscribe for `onNotify`, the model class need to be `async::Asyncable`, and therefore you need to include this header.\r\n(All this goes for both the AppearancePreferencesModel and the AccessibilityPreferencesModel.)', 'comment_created': datetime.datetime(2021, 6, 12, 22, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441639, 'comment_body': 'I don\'t really like changing the x and y properties of an item... and the `-8` is a ""magic number"" (edit: as you also mentioned yourself already ðŸ™‚).\r\nYou can fix the alignment by doing\r\n```\r\n    StyledTextLabel {\r\n        ...\r\n        anchors.verticalCenter: parent.verticalCenter\r\n    }\r\n```\r\n(Bonus: a <code>Column*Layout*</code> centers its items automatically. But when there are no other big advantages of using a `Layout`, using a plain `Column` is better.)', 'comment_created': datetime.datetime(2021, 6, 12, 22, 15, 28, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650441770, 'comment_body': 'Unnecessary change', 'comment_created': datetime.datetime(2021, 6, 12, 22, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 650442494, 'comment_body': 'American vs British: in code, we tend to use American, so in this case `Colors`. For the British users, it gets ""translated"" into British by `qsTrc`.', 'comment_created': datetime.datetime(2021, 6, 12, 22, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652218583, 'comment_body': ""Done!\r\nI knew this was very out of place, and I couldn't figure out how to re-order the files (the only way I found was to sort them alphabetically, and that would've messed up the ordering even more) when I had it open in Qt Creator.\r\nI ended up modifying it using VS Code instead, as that showed me the raw code."", 'comment_created': datetime.datetime(2021, 6, 15, 23, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652220455, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652248776, 'comment_body': 'These are indeed very unnecessary.\r\nThese changes were made to go hand in hand with others that I had made while trying out some things, and I forgot to clean up after my little experiments ðŸ˜… \r\nFixed!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652251098, 'comment_body': 'Done!\r\nI copied this part of the code from `appearancepreferencesmodel.cpp`\r\nShould I make this change over there too?', 'comment_created': datetime.datetime(2021, 6, 15, 23, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652251695, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 56, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652259486, 'comment_body': 'I don\'t think adding those inline functions in `uitypes.h` would be of much help...\r\nThere aren\'t many moments in the logic where I need just the ThemeCodes of the themes, and I\'m afraid that introducing more and more variables with the word ""theme"" will decrease code comprehension (it was already hard keeping track of all the ""Theme"" related variables and what they do ðŸ˜… )\r\n\r\n> ```using ThemeCodeList = std::vector<ThemeCode>;```\r\n\r\nFrom what I understand, adding this bit of code will replace my `if (theme.codeKey == HIGH_CONTRAST_BLACK_THEME_CODE || theme.codeKey == HIGH_CONTRAST_WHITE_THEME_CODE)` statement, and allow me to directly use a for loop to iterate over the desired themes based on their CodeKey inside this vector.\r\n\r\nHowever, I still want to raise the same point that creating more variables will be confusing later on. I think it is more expressive and direct the way it currently is. I have used that loop twice in the code, but if you feel that it is still redundant, or if I find that I need to use it more than twice, I can shift that logic to a private function in the same file and call that wherever I need for a bit more tidiness :)\r\n\r\n(Also, something very similar to what you suggested already exists in uitypes.h i.e. `using ThemeList = std::vector<ThemeInfo>;`\r\nThis is logically very different of course, but very similar in naming)', 'comment_created': datetime.datetime(2021, 6, 16, 0, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652261472, 'comment_body': 'That said though, I see what you mean when you say that this would optimize certain areas of the code. ðŸ¤” ', 'comment_created': datetime.datetime(2021, 6, 16, 0, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652261689, 'comment_body': 'Undestood!\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 0, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652268128, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652268631, 'comment_body': 'Also Fixed.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652269802, 'comment_body': 'Removed the comment entirely.\r\nThe name of the function is self-explanatory.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652271154, 'comment_body': 'Understood! ðŸ˜… \r\nFixed.', 'comment_created': datetime.datetime(2021, 6, 16, 0, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652272538, 'comment_body': 'Fixed and Replaced!', 'comment_created': datetime.datetime(2021, 6, 16, 1, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652276037, 'comment_body': 'Understood!\r\nRemoved the changes I had to make :)', 'comment_created': datetime.datetime(2021, 6, 16, 1, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652280654, 'comment_body': ""I am going to be experimenting more between ListView and Repeater because the spacing still isn't exactly what I want on that page..."", 'comment_created': datetime.datetime(2021, 6, 16, 1, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652286616, 'comment_body': 'Understood!\r\nThis fixed the spacing right up, no need for the ""Magic Number"" anymore :)', 'comment_created': datetime.datetime(2021, 6, 16, 1, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652287121, 'comment_body': 'Again, a result of my experiments and me forgetting to clean up afterwards. :(\r\nFixed.', 'comment_created': datetime.datetime(2021, 6, 16, 1, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652287734, 'comment_body': 'Ahhh I see...\r\nAlso fixed.', 'comment_created': datetime.datetime(2021, 6, 16, 1, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652576177, 'comment_body': 'Yeah, good idea!', 'comment_created': datetime.datetime(2021, 6, 16, 10, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652580341, 'comment_body': ""Good to know: Repeater does not manage the layout of its items. It only fills its parent, with one item for each entry in its model. So you need to put it inside (for example) a column to make it work. \nAnd it's very okay to use nested columns to work with different spacings!"", 'comment_created': datetime.datetime(2021, 6, 16, 10, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 652675725, 'comment_body': 'Done!\r\n', 'comment_created': datetime.datetime(2021, 6, 16, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652676418, 'comment_body': 'Thanks for this Casper!\r\nI tried this and it fixed the spacing issue right up :)', 'comment_created': datetime.datetime(2021, 6, 16, 13, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 652740565, 'comment_body': ""If we use consistent naming, then I think it should not be too complicated. a `Theme` is a struct with all the information for a theme, a `ThemeCode` is only a key for a theme. That's doable, isn't it? \r\nBut I agree that things become unclear when the naming is not consistent. For example, `uiConfiguration()->setCurrentTheme(...)` takes a `ThemeCode`, so it is named wrongly. Feel free to adjust that. \r\n\r\nWith a function for getting `highContrastThemeCodes`, you could simplify for example `AccessibilityPreferencesModel::setCurrentThemeIndex` like this:\r\n```cpp\r\nvoid AccessibilityPreferencesModel::setCurrentThemeIndex(int index)\r\n{\r\n    ThemeCodeList hcThemeCodes = highContrastThemeCodes();\r\n    if (index < 0 || index >= static_cast<int>(hcThemeCodes.size())) {\r\n        return;\r\n    }\r\n\r\n    if (hcThemeCodes[index] == uiConfiguration()->currentThemeCodeKey) {\r\n        return;\r\n    }\r\n\r\n    uiConfiguration()->setCurrentTheme(hcThemes[index].codeKey);\r\n    emit themesChanged();\r\n}\r\n```\r\nAlso `AccessibilityPreferencesModel::currentThemeIndex()` and the corresponding methods of AppearancePreferencesModel can be simplified. "", 'comment_created': datetime.datetime(2021, 6, 16, 14, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 655144674, 'comment_body': ""Thanks for the help Casper!\r\nI've got this working now :) "", 'comment_created': datetime.datetime(2021, 6, 21, 7, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 672273590, 'comment_body': 'I have implemented something akin to this in this form:\r\n```c++\r\nbool UiTheme::isCurrentThemeHighContrast() const\r\n{\r\n    return configuration()->currentTheme().codeKey == HIGH_CONTRAST_BLACK_THEME_CODE\r\n           || configuration()->currentTheme().codeKey == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n}\r\n\r\nbool UiTheme::isCurrentThemeGeneral() const\r\n{\r\n    return configuration()->currentTheme().codeKey == LIGHT_THEME_CODE || configuration()->currentTheme().codeKey == DARK_THEME_CODE;\r\n}\r\n```\r\n\r\nThis is different from what you were suggesting, since the use-cases are different, but this still saves me a lot of time whenever i need a particular feature active only for certain themes. :)', 'comment_created': datetime.datetime(2021, 7, 19, 12, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 676427059, 'comment_body': 'You missed qsTrc here', 'comment_created': datetime.datetime(2021, 7, 26, 9, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676431278, 'comment_body': 'Please, remove the empty line', 'comment_created': datetime.datetime(2021, 7, 26, 9, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676432112, 'comment_body': 'Better to create a private readonly property and reuse it:\r\n\r\nQObject {\r\nid: prv\r\n\r\nreadonly property int spacing: 24\r\n}\r\n\r\n...\r\n\r\nColumn {\r\nspacing: prv.spacing\r\n}', 'comment_created': datetime.datetime(2021, 7, 26, 9, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676432576, 'comment_body': 'Please, remove the empty line', 'comment_created': datetime.datetime(2021, 7, 26, 9, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676451391, 'comment_body': 'Better to create some enum and use it instead of text from UI', 'comment_created': datetime.datetime(2021, 7, 26, 9, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676452855, 'comment_body': 'Better to simplify this method like this (the same for isCurrentThemeGeneral):\r\n\r\nstatic const QStringList contrastThemes {\r\nHIGH_CONTRAST_BLACK_THEME_CODE,\r\nHIGH_CONTRAST_WHITE_THEME_CODE\r\n};\r\n\r\nreturn contrastThemes.contais(currentThemeCode());', 'comment_created': datetime.datetime(2021, 7, 26, 9, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676453261, 'comment_body': 'It seems you missed break here', 'comment_created': datetime.datetime(2021, 7, 26, 9, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676456334, 'comment_body': 'Could you please explain the purpose of this method (same for loadLastUsedHighContrastTheme)?', 'comment_created': datetime.datetime(2021, 7, 26, 9, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676459123, 'comment_body': 'UPD: seems like isCurrentThemeHighContrast and isCurrentThemeGeneral were copy-pasted in several places. Better to use UiConfiguration::isCurrentThemeHighContrast() (and UiConfiguration::isCurrentThemeGeneral()) and apply my suggested fixes there', 'comment_created': datetime.datetime(2021, 7, 26, 9, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676460682, 'comment_body': 'Better to remove all commented code', 'comment_created': datetime.datetime(2021, 7, 26, 9, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676461005, 'comment_body': 'Please, remove this', 'comment_created': datetime.datetime(2021, 7, 26, 9, 58, 4, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676464276, 'comment_body': 'Could you explain the reason for this change?', 'comment_created': datetime.datetime(2021, 7, 26, 10, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 676465880, 'comment_body': ""I don't quite understand why you don't use ui.theme here. Could you please explain?"", 'comment_created': datetime.datetime(2021, 7, 26, 10, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 680877187, 'comment_body': 'I did!\r\nFixed :)\r\n', 'comment_created': datetime.datetime(2021, 8, 2, 11, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680893861, 'comment_body': 'Missed that one!\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 11, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680898863, 'comment_body': 'Understood!\r\nShould i also make this change for `firstColumnWidth` declared in the same file? i.e. declare it inside the QtObject and refer to it as `prv.firstColumnWidth`?', 'comment_created': datetime.datetime(2021, 8, 2, 11, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680927441, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 12, 26, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680935290, 'comment_body': 'Ah, Apologies. \r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 2, 12, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 680939640, 'comment_body': 'Ah, this.\r\nThe background rectangle for the Dropdown popup (specifically for High-Contrast themes) needed an encompassing border, which is only visible with padding.\r\n\r\nI think a more appropriate value would be `ui.theme.borderWidth`, so that the extra space only shows up for High-Contrast themes and not the General Light/Dark ones.', 'comment_created': datetime.datetime(2021, 8, 2, 12, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681417570, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681431184, 'comment_body': 'Apologies, rookie mistake.\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 4, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681440578, 'comment_body': 'These methods are called upon checking/unchecking the ""Enable High-Contrast"" checkbox.\r\nWhenever i switch between the modes (General/High-Contrast) (by checking/unchecking the checkbox), the active theme would be whatever theme i last used in that category. I think this adds a little touch of convenience when switching between themes, both for the user who may have customized a theme in both categories perhaps, and for the developer who may be testing features/differences between a general and HC theme.\r\n\r\nfor example,\r\n1. I have the Dark theme active\r\n2. I then check the high-contrast checkbox, and i will get defaulted to the HC-Black theme (only when switching to HC-Mode for the *first* time)\r\n3. I switch to the HC-White theme instead, because it looks cool\r\n4. I uncheck the checkbox, and am taken back to whichever general theme I used last, which in this case was Dark theme\r\n5. Upon checking the box again, I would have the HC-White theme active again, since that is the theme i used last in the HC Category\r\n\r\nThe last used General/HC Theme values are stored in `UI_PREVIOUS_GENERAL_THEME` and `UI_PREVIOUS_HIGH_CONTRAST_THEME` Keys respectively, in `uiconfiguration.cpp`.\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 5, 15, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681462229, 'comment_body': 'From what i understand, you\'re asking about the ""Disabled Text"" property, right?\r\n\r\nAs of right now, the Disabled Text property isn\'t tied to anything i.e. changing the colors of that property doesn\'t really do anything.\r\nFrom what i\'ve been able to decipher, we don\'t have a standard way of referencing ""Disabled"" items. However, Each Item in QML has an `enabled` property and QWidget has an `enabled` member. Perhaps i need to create a new Theme variable (much like the ones in the `ThemeStyleKey` enum in `uitypes.h`), and then connect it across all UI elements to have a color for disabled properties ðŸ¤” .\r\n', 'comment_created': datetime.datetime(2021, 8, 3, 6, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681502874, 'comment_body': '>Should i also make this change for firstColumnWidth declared in the same file?\r\n\r\nYes, you can move this property to prv too', 'comment_created': datetime.datetime(2021, 8, 3, 7, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681510972, 'comment_body': 'Yes, better to replace this magic number with ui.theme.borderWidth', 'comment_created': datetime.datetime(2021, 8, 3, 7, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681519492, 'comment_body': '>From what i understand, you\'re asking about the ""Disabled Text"" property, right?\r\n\r\nYes, right\r\n\r\n>Perhaps i need to create a new Theme variable (much like the ones in the ThemeStyleKey enum in uitypes.h)\r\n\r\nIt would be great', 'comment_created': datetime.datetime(2021, 8, 3, 7, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681523778, 'comment_body': 'I believe you can use isCurrentThemeHighContrast directly in qml (after marking it as Q_INVOKABLE). You can remove  enableHighContrastChecked after those changes', 'comment_created': datetime.datetime(2021, 8, 3, 7, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681773826, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 13, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681774704, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 3, 13, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681791508, 'comment_body': ""Understood!\r\nAs of now, I'm working on the navCtrl borders (nearly done, will post an update within the next few hours). \r\nThis isn't as high of a priority as score-page color inversion is, so i've decided to hold off on fixing this for a little longer, or until i can finish the score inversion feature."", 'comment_created': datetime.datetime(2021, 8, 3, 14, 4, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681901341, 'comment_body': 'I apologize, for i don\'t know how to properly implement an enum in this case. But i understand why using text from UI is just bad practice.\r\n\r\nShould i create a new `propertyKey` variable in `UiColorsSection.qml` like so:\r\n```\r\nmodel: [\r\n                { textRole: ""Accent Color:"", colorRole: ui.theme.accentColor, propertyKey: 0 },\r\n                { textRole: ""Text and Icons:"", colorRole: ui.theme.fontPrimaryColor, propertyKey: 1},\r\n                { textRole: ""Disabled Text:"", colorRole: ""#000000"", propertyKey: 2},\r\n                { textRole: ""Border Color:"", colorRole: ui.theme.strokeColor, propertyKey: 3}\r\n            ]\r\n```\r\n\r\nand then change the if/else-if ladder in `appearancepreferencesmodel.cpp` to a `switch()` statement like so:\r\n```\r\nswitch(propertyKey)\r\n{\r\n    case 0: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::ACCENT_COLOR, Val(newColor)); \r\n        break;\r\n    \r\n    case 1: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::FONT_PRIMARY_COLOR, Val(newColor)); \r\n        break;\r\n    \r\n    case 2: return; //because a common way to refer to disabled items/text isn\'t fully implemented yet\r\n    \r\n    case 3: uiConfiguration()->setCurrentThemeStyleValue(ThemeStyleKey::STROKE_COLOR, Val(newColor)); \r\n        break;\r\n\r\n    default: qDebug(""Setting not Found!"");    \r\n```\r\n\r\n\r\nAgain, I\'m suggesting this because i do not fully understand the enum approach.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 5, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 681915362, 'comment_body': 'You can declare an enum in appearancepreferencesmodel.h (see navigationpanel.h for example):\r\n\r\n<img width=""778"" alt=""Screenshot 2021-08-03 at 18 15 30"" src=""https://user-images.githubusercontent.com/67867444/128050700-0f02581b-329f-4331-a46c-9e2fcfea6ff5.png"">\r\n\r\nLike this:\r\n\r\nColorType {\r\nAccentColor,\r\nTextAndIconsColor,\r\n...\r\n}\r\nQ_ENUM(ColorType)\r\n\r\nYou can use this enum in both qml and cpp', 'comment_created': datetime.datetime(2021, 8, 3, 16, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681916195, 'comment_body': 'So, your function will look like this:\r\n\r\nQ_INVOKABLE void setNewColor(const QColor& newColor, ColorType colorType)', 'comment_created': datetime.datetime(2021, 8, 3, 16, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 681919658, 'comment_body': 'And in QML you access the enum values like \r\n```qml\r\nAppearancePreferencesModel.AccentColor\r\nAppearancePreferencesModel.TextAndIconsColor\r\n```\r\nYou need to use AppearancePreferencesModel instead of the name of the enum in C++. This is by the design of Qt.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 682394520, 'comment_body': '> Better to simplify this method like this\r\n\r\nThis is how the code was turning out to be. \r\n\r\n```c++\r\nbool UiConfiguration::isCurrentThemeHighContrast() const\r\n{\r\n    static const QStringList highContrastThemes {\r\n        QString::fromStdString(HIGH_CONTRAST_BLACK_THEME_CODE),\r\n        QString::fromStdString(HIGH_CONTRAST_WHITE_THEME_CODE)\r\n    };\r\n\r\n    return highContrastThemes.contains(QString::fromStdString(currentThemeCodeKey()));\r\n}\r\n```\r\n\r\nTo try to reduce the overheads and conversions, i tried to implement it in a way that used `std::string` itself, and came up with this:\r\n```c++\r\nstatic const std::vector<std::string> highContrastThemes {\r\n        HIGH_CONTRAST_BLACK_THEME_CODE,\r\n        HIGH_CONTRAST_WHITE_THEME_CODE\r\n    };\r\n    \r\n    if(std::find(highContrastThemes.begin(), highContrastThemes.end(), currentThemeCodeKey()) != highContrastThemes.end())\r\n    {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n```\r\n\r\nShould i go with this instead?', 'comment_created': datetime.datetime(2021, 8, 4, 8, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683112849, 'comment_body': 'Understood!\r\nEnum implemented, and is working properly :).\r\nThank you for the tip Casper!', 'comment_created': datetime.datetime(2021, 8, 5, 4, 6, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683178313, 'comment_body': 'I have removed `isCurrentThemeHighContrast()` from `appearancepreferencesmodel.cpp` completely, as suggested. `isCurrentThemeHighContrast()` and `isCurrentThemeGeneral()` now lie in `uiconfiguration.cpp`. This is what `enableHighContrastChecked()` looks like now:\r\n```c++\r\nbool AppearancePreferencesModel::enableHighContrastChecked()\r\n{\r\n    return uiConfiguration()->isCurrentThemeHighContrast();\r\n}\r\n```\r\nI need the Q_INVOKABLE function (i.e. `enableHighContrastChecked()`) inside AppearancePreferencesModel class for it to work, which is why i can\'t remove it from here. (unless there is a way to use Q_INVOKABLE functions from different files?)\r\n\r\nFrom what I understand, `uiconfiguration.cpp` file represents the lowest ""ModelData"" layer, and it sends data up to `uitheme.cpp` and other files i.e. the ""ViewModel"" layer. I think using a function directly in QML from `uiconfiguration.cpp` will mess up this layering system.\r\n ', 'comment_created': datetime.datetime(2021, 8, 5, 6, 54, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683192932, 'comment_body': 'In this case, I more like the first implementation for this method :) We can just slightly improve it:\r\n\r\nThemeCode currentThemeCode = uiConfiguration()->currentTheme().codeKey;\r\nreturn currentThemeCode == HIGH_CONTRAST_BLACK_THEME_CODE || currentThemeCode == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 7, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 683198268, 'comment_body': '>From what I understand, uiconfiguration.cpp file represents the lowest ""ModelData"" layer, and it sends data up to uitheme.cpp and other files i.e. the ""ViewModel"" layer. I think using a function directly in QML from uiconfiguration.cpp will mess up this layering system.\r\n\r\n\r\nYes, you are absolutely right :) \r\n\r\nThere were 2 different isCurrentThemeHighContrast (one in the model, and another in the configuration) and separately enableHighContrastChecked that just called isCurrentThemeHighContrast of the model\r\n\r\nYour suggested solution is good: we will have Q_INVOKABLE enableHighContrastChecked in the model and isCurrentThemeHighContrast in the configuration', 'comment_created': datetime.datetime(2021, 8, 5, 7, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 683361171, 'comment_body': '> In this case, I more like the first implementation for this method :)\r\n\r\nYou mean the original implementation, I believe?\r\n\r\nSince this function has now found a new happy home in `uiconfiguration.cpp`, this is what it looks like now, after all suggested changes:\r\n```c++\r\nbool UiConfiguration::isCurrentThemeGeneral() const\r\n{\r\n    ThemeCode currentThemeCode = currentThemeCodeKey();\r\n\r\n    return currentThemeCode == DARK_THEME_CODE || currentThemeCode == LIGHT_THEME_CODE;\r\n}\r\n```\r\n\r\nand\r\n\r\n```c++\r\nbool UiConfiguration::isCurrentThemeHighContrast() const\r\n{\r\n    ThemeCode currentThemeCode = currentThemeCodeKey();\r\n\r\n    return currentThemeCode == HIGH_CONTRAST_BLACK_THEME_CODE || currentThemeCode == HIGH_CONTRAST_WHITE_THEME_CODE;\r\n}\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 11, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683439708, 'comment_body': ""Understood!\r\nI've made the appropriate changes :)"", 'comment_created': datetime.datetime(2021, 8, 5, 13, 13, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683507310, 'comment_body': '`""Program start""`, US spelling and Sentence case', 'comment_created': datetime.datetime(2021, 8, 5, 14, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683508112, 'comment_body': 'Sentence case, not Title Case\r\n(But yes, our policy there just changed recently)', 'comment_created': datetime.datetime(2021, 8, 5, 14, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509129, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 8, 5, 14, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509316, 'comment_body': 'same', 'comment_created': datetime.datetime(2021, 8, 5, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683509589, 'comment_body': 'same for these 4', 'comment_created': datetime.datetime(2021, 8, 5, 14, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683510346, 'comment_body': 'No need to shout ;-), a normal sentence works here too', 'comment_created': datetime.datetime(2021, 8, 5, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683515615, 'comment_body': 'just remove the default case', 'comment_created': datetime.datetime(2021, 8, 5, 14, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 683520545, 'comment_body': 'True, has the added benefit of a compiler warning if a new colorType gets added but not dealt with here', 'comment_created': datetime.datetime(2021, 8, 5, 14, 42, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 683663226, 'comment_body': 'Converted to `""Program start""`\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 5, 17, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683664096, 'comment_body': 'Converted to `""Enable high-contrast""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683664707, 'comment_body': 'Converted to `""Reset theme to default""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683665328, 'comment_body': 'Converted to `""UI colors""`\r\nFixed.', 'comment_created': datetime.datetime(2021, 8, 5, 17, 47, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683666298, 'comment_body': 'Converted to `""Accent color:""`, `""Text and icons:""`, `""Disabled text:""`, `""Border color:""`\r\nFixed :)', 'comment_created': datetime.datetime(2021, 8, 5, 17, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683667108, 'comment_body': 'Ah, apologies ðŸ˜… \r\nConverted to `""Invalid ColorType Received.""`\r\nFixed\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 49, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 683671473, 'comment_body': ""I'd still say it's even better to remove the `default:` entirely. At the moment, it is not needed, and without it, as Jojo says, the compiler will warn when somebody adds a new case to the enum and forgets to handle that case here."", 'comment_created': datetime.datetime(2021, 8, 5, 17, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 683672995, 'comment_body': 'Ah understood\r\nI will remove the default case entirely.\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 17, 58, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}]","[{'commit_sha': '91b6df775a732d29e3c0a9d13f80289778b5f583', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8461e132218ba8a289c4f98f6c63dc83a6c200ca', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a57d722526a3aa5a67ab5f4597e882a00cfac028', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3adf495b42327d405a6cc94f3bfe42cd6b9656f0', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10b787d82d1c3cac13d78f9c36592285204d1423', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f7e80f12d15a5b2efa21107860af4d7764e1b0b', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b994272b4f3ef9ca4073bb9d4aca31388a674cad', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a55c2c0f1f5168e84852e89971ce45b7a31f66', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceadb4f52d1a1c000ff190e23036a7b4746604c7', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
705445879,Navigation Control Border Re-Implementation ,"Resolves: #8442

All elements supporting Navigation Control now draw the border rectangle on the outside. 
There were a total of 5 different elements i.e. 
* `Dropdown`: (it works for the main Dropdown item, but the items inside it are very close together. I have implemented this in such a way that the borders for the popup elements are drawn on the inside). 
* `DockPanelTab` : The borders are being drawn on the inside, again because of lack of space.
* `InstrumentsTreeItemDelegate` : Borders on the inside, same reason. 
* `PaletteTree` : This file uses `ListItemBlank` as a delegate to draw its children. I've done it in such a way such that only this instance of `ListItemBlank` 's borders get drawn on the inside.
* `Expandable Blank` : Same thing

The borders for these are drawn on the inside, in a way that it does not interfere with the High-Contrast borders; i.e. the HC 1px border + the 2px navCtrl border will combine to make a single 3px border on the inside (the innermost being the HC border, followed by the navCtrl one).

For a demonstration, Navigate to DevTools -> KeyNav. (Please make sure that you are in Light mode. The colors for the elements in that page are hard-coded and don't work well with other themes)

This PR does not modify the existing Navigation Control logic for elements, just the way the borders are drawn around them.

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [ ] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8806,https://api.github.com/repos/musescore/MuseScore/pulls/8806,https://github.com/musescore/MuseScore/pull/8806,closed,164,75,29,3,1,6,0,0,[],2021-08-06 12:28:14+00:00,2021-08-09 07:36:02+00:00,241668.0,"2 days, 19:07:48","[{'comment_id': 684213300, 'comment_body': 'I believe you need to create a separate component (NavigatioBorder) and reuse it instead of copy-pasting this code in all controls', 'comment_created': datetime.datetime(2021, 8, 6, 12, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 684216745, 'comment_body': 'Better to get this value from the current theme to avoid the magic number', 'comment_created': datetime.datetime(2021, 8, 6, 13, 1, 20, tzinfo=datetime.timezone.utc), 'commenter': 'RomanPudashkin', 'type': 'User'}, {'comment_id': 684219219, 'comment_body': ""Yes that\r\nI'm going to make it into a theme variable.\r\nThat will allow us to have different navigation border widths for different themes, which might come in handy"", 'comment_created': datetime.datetime(2021, 8, 6, 13, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684240186, 'comment_body': 'Understood!', 'comment_created': datetime.datetime(2021, 8, 6, 13, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684258017, 'comment_body': 'Done :)\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 13, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 684692136, 'comment_body': 'Fixed :)', 'comment_created': datetime.datetime(2021, 8, 8, 0, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}]","[{'commit_sha': '883868732cdfcf8e45084ca74cbca7e8a765e730', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af89b6204aa9df83f15c871af02483aa49900e7e', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceed9679fd2f798ab53a20a5f0f85756b25ba0df', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16
716508611,Score-Page Color Inversion,"Resolves: #8909 & adds additional features

This is an additional feature to the newly added High-Contrast themes of MuseScore (as part of my Google Summer of Code project) wherein the user is given the ability to invert the colors of the Score-Page from within the Edit -> Preferences -> Appearance tab.

From the Appearance tab, Toggle High-Contrast mode, and there will be a new ""Invert score colors"" checkbox under the ""UI colors"" Category.

Behavior:
* Checking the ""Invert score colors"" checkbox will set the color of the foreground (or paper color) to black, and the color of the notes/clefs/staff/text/time-signatures etc. to a very slightly dulled white (255,255,255,200).
* Un-checking the score inversion checkbox restores previous settings i.e. foreground color, note color etc.
* While Score Inversion is active, the ability to modify the page color is taken away from the user so as to maintain proper visibility and avoid very mismatched score/page color combinations. The Page Color settings stop receiving mouse and keyboard events and are rendered at 0.6 opacity, indicating that they are indeed disabled.
* While Score Inversion is active, If the user was to toggle between High-Contrast/General themes, the score-color/page-color would respond accordingly, wherein switching to a general theme will restore previously used ""normal"" score-color/paper-color values, since the inversion feature is only reserved for High-Contrast mode.

<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",True,8886,https://api.github.com/repos/musescore/MuseScore/pulls/8886,https://github.com/musescore/MuseScore/pull/8886,closed,128,12,15,10,9,34,0,0,[],2021-08-20 07:27:18+00:00,2021-09-10 15:38:42+00:00,1843884.0,"21 days, 8:11:24","[{'comment_id': 692731237, 'comment_body': 'these were all perfectly indented before', 'comment_created': datetime.datetime(2021, 8, 20, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692731690, 'comment_body': ""why only those and not any of the others in that block?\r\nShould be either all or none. I'M for none"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692732245, 'comment_body': ""That is a problem with my Uncrustify file. (possibly caused by having an older version?)\r\nI encounter the same problem in `uitypes.h` where i have to disable Uncrustify and manually reset some lines to whatever the codestyle approves. I'll do it here too :)"", 'comment_created': datetime.datetime(2021, 8, 20, 7, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 692732969, 'comment_body': 'code style issue', 'comment_created': datetime.datetime(2021, 8, 20, 7, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 692733242, 'comment_body': 'code style issue', 'comment_created': datetime.datetime(2021, 8, 20, 7, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 697991004, 'comment_body': 'fixed\r\n', 'comment_created': datetime.datetime(2021, 8, 29, 10, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697992376, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 8, 29, 10, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697992581, 'comment_body': 'This function has been removed in the latest master i believe', 'comment_created': datetime.datetime(2021, 8, 29, 10, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697993221, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 8, 29, 10, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 697997521, 'comment_body': 'A rebase would show, I guess.\r\nIt is needed anyhow.\r\nAnd indeed element.cpp is one of the conflicting files.', 'comment_created': datetime.datetime(2021, 8, 29, 11, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 698298571, 'comment_body': ""Wouldn't that just be `Color::black`?\r\nSee also #8928"", 'comment_created': datetime.datetime(2021, 8, 30, 8, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 698299350, 'comment_body': ""Wouldn't that just be `Color::white`? Or `QColor::white`?\r\nSee also #8928"", 'comment_created': datetime.datetime(2021, 8, 30, 8, 34, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 701487462, 'comment_body': 'This is QColor though, rather than mu::draw::Color.', 'comment_created': datetime.datetime(2021, 9, 2, 23, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 701599577, 'comment_body': 'OK, then `QColor::black`', 'comment_created': datetime.datetime(2021, 9, 3, 5, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702717378, 'comment_body': 'There is no such thing as `QColor::black`\r\nThere is only a `QColor::black()`, which returns the black part of the color from the Cmyk coloring system.\r\n\r\nI have instead used `QColorConstants::Black`. Is that okay?', 'comment_created': datetime.datetime(2021, 9, 6, 8, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 702720510, 'comment_body': 'Used `QColorConstants::White` instead.', 'comment_created': datetime.datetime(2021, 9, 6, 8, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 702734469, 'comment_body': ""after this line, your alias doesn't work anymore because you rewrite to a fixed value(just bool, no binding)\r\nproperty alias scoreInversionChecked: scoreInversionEnable.checked\r\n\r\nqml should request about value changed and no more. The model will change the local value and emit a signal about data changed, the view will update the state by alias. But the model can also cancel data changing, then the data of model and of view are different because the view already changed value(checked = !checked).\r\n\r\nYou can see how I fixed it for highContrastEnabled"", 'comment_created': datetime.datetime(2021, 9, 6, 9, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 702735957, 'comment_body': 'better rename to scoreInversionEnabled', 'comment_created': datetime.datetime(2021, 9, 6, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Eism', 'type': 'User'}, {'comment_id': 702762457, 'comment_body': 'IMHO yes.', 'comment_created': datetime.datetime(2021, 9, 6, 9, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702762558, 'comment_body': 'Yup, thats what I meant anyway ;-)', 'comment_created': datetime.datetime(2021, 9, 6, 9, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 703296369, 'comment_body': 'It would be better to return a full opacity off-white colour:\r\n\r\n```c++\r\nreturn mu::draw::Color(160, 160, 160, 255);\r\n```\r\n\r\nAlpha transparency affects performance because the program has to calculate the colour of pixels behind each object instead of just ignoring those pixels. Using a full opacity colour also prevents the colour changing when you have multiple semi-transparent objects on top of each other.', 'comment_created': datetime.datetime(2021, 9, 7, 8, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703299122, 'comment_body': 'Is this intentional? Looks like you are replacing a calculated value with a ""magic number"".', 'comment_created': datetime.datetime(2021, 9, 7, 8, 32, 54, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703302214, 'comment_body': '```c++\r\nreturn QColor(102, 102, 102, 0);\r\n```', 'comment_created': datetime.datetime(2021, 9, 7, 8, 37, 3, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703368913, 'comment_body': 'Ah yes this is intentional, since borderWidth is 1 for HC themes and 0 for general ones.\r\nThe border width around group boxes in the styles dialog needs to be 1 for general themes as well and not just the high contrast ones. \r\nPerhaps a more appropriate line would be:\r\n```c++\r\ndrawRoundedRect(painter, option->rect, 3, QBrush(""#03000000""), QPen(strokeColor(), configuration()->isHighContrast() ? borderWidth() : 1));\r\n```\r\nThis would also account for further changes to High-Contrast borderWidth should someone choose to modify those values...', 'comment_created': datetime.datetime(2021, 9, 7, 10, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703438977, 'comment_body': 'Ah I see what you mean\r\n\r\nI have removed the `checked = !checked` line, and made the alias a bool property. The `onClicked` function now looks like this:\r\n```c++\r\nonClicked: {\r\n            root.scoreInversionRequested(!checked)\r\n        }\r\n```\r\nThe system is now almost identical to the High Contrast checkbox.', 'comment_created': datetime.datetime(2021, 9, 7, 11, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703468937, 'comment_body': 'Fixed\r\n', 'comment_created': datetime.datetime(2021, 9, 7, 12, 33, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703472580, 'comment_body': ""Ahh I never would've thought of this!\r\nUnderstood and fixed!"", 'comment_created': datetime.datetime(2021, 9, 7, 12, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703473961, 'comment_body': '~Also fixed~\r\n\r\nNow that i think about it, (0, 0, 0, 102) just has the alpha channel passed to it, and this is part of the `borderColor()` function, so it just acts on a few pixels on the border of each score page.\r\n\r\nPerhaps this should be left as is? as i assume this acts just as a ""shadow"" around the score-page?\r\n\r\nI should also mention that this value was already in the code before I messed around with it...\r\n\r\nAlso, Wouldn\'t your suggested color (102, 102, 102, 0) be fully transparent?', 'comment_created': datetime.datetime(2021, 9, 7, 12, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 703929315, 'comment_body': '> Wouldn\'t your suggested color (102, 102, 102, 0) be fully transparent?\r\n\r\nOops yes! I just swapped the values (i.e. did the reverse of [this](https://github.com/musescore/MuseScore/pull/8886#discussion_r703296369)) but of course the alpha always needs to be 255 to remain full opacity.\r\n\r\n> Perhaps this should be left as is? as i assume this acts just as a ""shadow"" around the score-page?\r\n\r\nYes, if it is really just a shadow then it needs to use alpha transparency, so you can ignore my comment! I thought this might be a dark colour used for the score background or something.', 'comment_created': datetime.datetime(2021, 9, 8, 0, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 703935859, 'comment_body': 'If the intent is *""follow `borderWidth()` where possible but the element must always have a border""* then I think this would be preferable:\r\n\r\n```qml\r\nborderWidth() > 1 ? borderWidth() : 1\r\n```\r\n\r\nOr even better:\r\n\r\n```qml\r\nMath.max(borderWidth(), 1)\r\n```\r\n\r\nI think I saw a few other place where you might want to do something similar.\r\n\r\nIt\'s best not to use High Contrast as a way to check for a non-zero border because we might have more themes in the future with different border sizes, or make the border size configurable outside of the High Contrast theme, etc.', 'comment_created': datetime.datetime(2021, 9, 8, 0, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}, {'comment_id': 705224109, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2021, 9, 9, 11, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 705291058, 'comment_body': 'this extra line cause the code style check to fail', 'comment_created': datetime.datetime(2021, 9, 9, 12, 41, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 705292047, 'comment_body': 'Yes, fixed already :)', 'comment_created': datetime.datetime(2021, 9, 9, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ArjunBoi', 'type': 'User'}, {'comment_id': 705293568, 'comment_body': 'You were quicxker in fixing that I in reporting ;-)', 'comment_created': datetime.datetime(2021, 9, 9, 12, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}]","[{'commit_sha': '63cda41faefe9f1a795e517ffd40355c410dc96c', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f68028e4a9e50ee6f5fbde403a5ab96633fe9c6e', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7daae303c371a0baf1eeb3dfb16e7fedaf60fda6', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f74036d6c20da401bdbacd4ac6134736fda661f', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fab0a46755982998a21c3197c10bf2fb368a8eab', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '925115afee7031bc059dab69d314624b0fe97823', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f0c9b823dfa09f008751de8ef3a808180ff81e4', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5ff01f8c9cdb89e0c57913a748d810edc7be0d2', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '583d7e3cea336333a94aeda14d5ac6c9c598ffb0', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38518931317fa6b643f665f50d6f0527673cbb89', 'committer_username': 'ArjunBoi', 'committer_name': 'Arjun Taneja', 'committer_email': None, 'commit_date': datetime.datetime(2020, 10, 2, 13, 2, 13, tzinfo=datetime.timezone.utc)}]",Arjun Taneja,72261568,,User,,9,,15,16

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4454793,MuseScore,musescore/MuseScore,C++,2585,11998,240,428,37297,2736,111,134,"[{'id': 727364120, 'number': 9031, 'closed': datetime.datetime(2021, 9, 5, 9, 54, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 5, 8, 57, 55, tzinfo=datetime.timezone.utc), 'time_taken': 3424.0, 'time_delta': '0:57:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 716508611, 'number': 8886, 'closed': datetime.datetime(2021, 9, 10, 15, 38, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 7, 27, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1843884.0, 'time_delta': '21 days, 8:11:24', 'additions': 128, 'deletions': 12, 'state': 'closed'}, {'id': 705445879, 'number': 8806, 'closed': datetime.datetime(2021, 8, 9, 7, 36, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 12, 28, 14, tzinfo=datetime.timezone.utc), 'time_taken': 241668.0, 'time_delta': '2 days, 19:07:48', 'additions': 164, 'deletions': 75, 'state': 'closed'}, {'id': 665087508, 'number': 8280, 'closed': datetime.datetime(2021, 8, 5, 19, 14, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 16, 51, 13, tzinfo=datetime.timezone.utc), 'time_taken': 5019809.0, 'time_delta': '58 days, 2:23:29', 'additions': 588, 'deletions': 105, 'state': 'closed'}, {'id': 614637365, 'number': 7951, 'closed': datetime.datetime(2021, 4, 13, 17, 58, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 17, 26, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1910.0, 'time_delta': '0:31:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 602056627, 'number': 7807, 'closed': datetime.datetime(2022, 7, 16, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 27, 12, 10, 51, tzinfo=datetime.timezone.utc), 'time_taken': 41132469.0, 'time_delta': '476 days, 1:41:09', 'additions': 135, 'deletions': 129, 'state': 'closed'}]"
