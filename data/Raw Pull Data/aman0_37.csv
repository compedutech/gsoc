pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1391617372,feat: add JAX as Computation Backend ,"Integrating JAX as a computation backend in Docarray similar to Pytorch, Tensorflow, and Numpy

- [x] `JaxArray` typing implementation
- [x] `JaxArray` typing unit tests
- [x] `JaxCompBackend` methods implementation
- [x] `JaxCompBackend` basic tests
- [x] `DocVec` working
- [x] Integration tests
- [x] function annotations and commenting
- [x] docs updations

```python

from docarray import BaseDoc
from docarray.typing import JaxArray
import jax.numpy as jnp


class MyDoc(BaseDoc):
    arr: JaxArray
    image_arr: JaxArray[3, 224, 224]
    square_crop: JaxArray[3, 'x', 'x']
    random_image: JaxArray[3, ...]  # first dimension is fixed, can have arbitrary shape


# create a document with tensors
doc = MyDoc(
    arr=jnp.zeros((128,)),
    image_arr=jnp.zeros((3, 224, 224)),
    square_crop=jnp.zeros((3, 64, 64)),
    random_image=jnp.zeros((3, 128, 256)),
)
assert doc.image_arr.shape == (3, 224, 224)

# automatic shape conversion
doc = MyDoc(
    arr=np.zeros((128,)),
    image_arr=np.zeros((224, 224, 3)),  # will reshape to (3, 224, 224)
    square_crop=np.zeros((3, 128, 128)),
    random_image=np.zeros((3, 64, 128)),
)
assert doc.image_arr.shape == (3, 224, 224)
``` ",True,1646,https://api.github.com/repos/docarray/docarray/pulls/1646,https://github.com/docarray/docarray/pull/1646,closed,2169,60,34,26,6,15,0,1,[],2023-06-14 03:49:43+00:00,2023-07-18 08:12:14+00:00,2953351.0,"34 days, 4:22:31","[{'comment_id': 1238524847, 'comment_body': 'if not needed, just remove the import', 'comment_created': datetime.datetime(2023, 6, 22, 13, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'JoanFM', 'type': 'User'}, {'comment_id': 1238525300, 'comment_body': 'why is this needed?', 'comment_created': datetime.datetime(2023, 6, 22, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'JoanFM', 'type': 'User'}, {'comment_id': 1252641386, 'comment_body': '\n```suggestion\ndef is_jax_available():\n```\n\nlets rename it to this', 'comment_created': datetime.datetime(2023, 7, 5, 7, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'samsja', 'type': 'User'}, {'comment_id': 1252643440, 'comment_body': 'can you add as well an `extra` section that install jax ?\n\nit is right below this line.\n\nAnd you need to add it to the all section as well', 'comment_created': datetime.datetime(2023, 7, 5, 7, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'samsja', 'type': 'User'}, {'comment_id': 1263798950, 'comment_body': '```suggestion\r\n        """"""Provide a compatible value that represents None in JAX.""""""\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263807051, 'comment_body': '```suggestion\r\n            Returns the k smallest values in `values` along with their indices.\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263807441, 'comment_body': '```suggestion\r\n            Can also be used to retrieve the k largest values,\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263808074, 'comment_body': '```suggestion\r\n                Both are of shape (n_queries, k)\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263834231, 'comment_body': '```suggestion\r\n        :param eps: a small jitter to avoid dividing by zero\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263834511, 'comment_body': '```suggestion\r\n            :param eps: a small jitter to avoid dividing by zero\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263835012, 'comment_body': '```suggestion\r\n            :param eps: a small jitter to avoid dividing by zero\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263837732, 'comment_body': '```suggestion\r\n        Return the original ndarray without making a copy in memory.\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 14, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263838329, 'comment_body': '```suggestion\r\n        The original view remains intact and is still a Document `JaxArray`\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 15, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263838919, 'comment_body': '```suggestion\r\n        but the return object is a pure `np.ndarray` and both objects share\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 15, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}, {'comment_id': 1263839681, 'comment_body': '```suggestion\r\n        the same underlying memory.\r\n```', 'comment_created': datetime.datetime(2023, 7, 14, 15, 1, 28, tzinfo=datetime.timezone.utc), 'commenter': 'scott-martens', 'type': 'User'}]","[{'commit_sha': '3ea813eaef93eaf51c4f1a8bd16d20f11f95a583', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825daf51b2d408fa5e9c934b410b0252c0ef98fd', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd11322960a091cee6135cd49678b5f95d87c1de', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc4a698f5bff3d55f3e96e1c56f52fb7a83917a5', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb64d4fbec932d373a4686a3a85a94d2b5af33ca', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd57a656050ee4834ee19170c97aabdf196c30b1d', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49b3764b24ea2331aa3f4735d7918add4f69593a', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23589d6aec79abad11cb5fd4d62926b32d643ba1', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8793822ddd92814ed735ad984e6b5b9bb5b59b0a', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aff2ff68b1f489899cc48e1ba9d09613634bbd2b', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d6f45f76fb4231b74a481d33c77a08db6e30a0b', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3072cea18a1aa3f5e8f05c46aed132ba6949cef4', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0a7d89cd351a635b35b7c1aedb5a800e5d353f6', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f9a399f0d37db658e6b7331bf062af37fd8eb6b', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b81d65dc7fff8aa650c7af1fa57668b29db140', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '963c1b3c5c07a3198faf7c3b8d00b7670d287391', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f571e2f4bf6ce02d3fe0302ab08d454c202efc5', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c03d37c0e676b39487a8220abe9ba6b9dd19beee', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b64b31f02a3dd835e2e79b95a4edf15873ba72c3', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a354548e6c596cb2c814ecab690787e3487fe9', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e2762afcdf8a73a0d1ae6a4308b48bfd8c23127', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67dce6dd399ca83db1f39a2098bd5ca61a2853e6', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b3cf04c5407ce752e6cba682c614ca4b1538fa2', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe883eaad8b9027df58f64f7b0ed02f293273da', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6d7fe4eab9bee412aec2baf90e2748cec37baea', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06afa37c315f0a188a624dd4a0cf320bf22e2884', 'committer_username': 'agaraman0', 'committer_name': 'Aman Agarwal', 'committer_email': 'agaraman0@gmail.com', 'commit_date': datetime.datetime(2017, 6, 25, 10, 2, 16, tzinfo=datetime.timezone.utc)}]",Aman Agarwal,29687692,agaraman0@gmail.com,User,,91,,128,21

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
438303578,docarray,docarray/docarray,Python,227,2891,43,75,1460,94,165,27,"[{'id': 1391617372, 'number': 1646, 'closed': datetime.datetime(2023, 7, 18, 8, 12, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 3, 49, 43, tzinfo=datetime.timezone.utc), 'time_taken': 2953351.0, 'time_delta': '34 days, 4:22:31', 'additions': 2169, 'deletions': 60, 'state': 'closed'}, {'id': 1362774829, 'number': 1568, 'closed': datetime.datetime(2023, 6, 7, 8, 27, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 24, 9, 54, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1204378.0, 'time_delta': '13 days, 22:32:58', 'additions': 21, 'deletions': 2, 'state': 'closed'}, {'id': 1326520041, 'number': 1447, 'closed': datetime.datetime(2023, 5, 31, 16, 40, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 25, 5, 43, 48, tzinfo=datetime.timezone.utc), 'time_taken': 3149781.0, 'time_delta': '36 days, 10:56:21', 'additions': 20, 'deletions': 1, 'state': 'closed'}, {'id': 1320991008, 'number': 1427, 'closed': datetime.datetime(2023, 4, 26, 9, 14, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 20, 7, 14, 13, tzinfo=datetime.timezone.utc), 'time_taken': 525604.0, 'time_delta': '6 days, 2:00:04', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1306570657, 'number': 1347, 'closed': datetime.datetime(2023, 4, 11, 11, 33, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 8, 19, 52, 46, tzinfo=datetime.timezone.utc), 'time_taken': 229269.0, 'time_delta': '2 days, 15:41:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1299203666, 'number': 1325, 'closed': datetime.datetime(2023, 4, 5, 7, 32, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 2, 20, 11, 55, tzinfo=datetime.timezone.utc), 'time_taken': 213613.0, 'time_delta': '2 days, 11:20:13', 'additions': 34, 'deletions': 1, 'state': 'closed'}, {'id': 1294373832, 'number': 1306, 'closed': datetime.datetime(2023, 3, 29, 16, 48, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 29, 10, 32, 5, tzinfo=datetime.timezone.utc), 'time_taken': 22607.0, 'time_delta': '6:16:47', 'additions': 44, 'deletions': 0, 'state': 'closed'}, {'id': 1290270214, 'number': 1291, 'closed': datetime.datetime(2023, 3, 27, 8, 4, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 26, 8, 14, tzinfo=datetime.timezone.utc), 'time_taken': 85820.0, 'time_delta': '23:50:20', 'additions': 48, 'deletions': 1, 'state': 'closed'}, {'id': 1278599842, 'number': 1248, 'closed': datetime.datetime(2023, 3, 30, 7, 8, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 13, 36, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1186364.0, 'time_delta': '13 days, 17:32:44', 'additions': 1005, 'deletions': 0, 'state': 'closed'}, {'id': 1272390261, 'number': 1225, 'closed': datetime.datetime(2023, 3, 30, 10, 49, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 12, 17, 49, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1529969.0, 'time_delta': '17 days, 16:59:29', 'additions': 72, 'deletions': 0, 'state': 'closed'}, {'id': 1252849204, 'number': 1171, 'closed': datetime.datetime(2023, 2, 24, 9, 56, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 24, 8, 29, 49, tzinfo=datetime.timezone.utc), 'time_taken': 5195.0, 'time_delta': '1:26:35', 'additions': 24, 'deletions': 21, 'state': 'closed'}, {'id': 1252295156, 'number': 1170, 'closed': datetime.datetime(2023, 2, 24, 9, 42, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 23, 21, 18, 56, tzinfo=datetime.timezone.utc), 'time_taken': 44633.0, 'time_delta': '12:23:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
