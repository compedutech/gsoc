pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
687842886,Role Based Access Control,"# Google Summer of Code 2021 Wrap-up

## Objectives

- [x] Role-Based Access Control System
  - [x] To remove the old attribute-based control system.
  - [x] To implement a role-based access control system.
  - [x] To come up with a new structure for the routes file and migrate old routes to new formats.
  - [x] To cover all routes defined in the application under a control system without explicit declarations.
  - [x] To provision dynamic roles in the system which can be configured/defined as per needs.
  - [x] To load the definitions about the roles in the system via a database in place of static files.
  - [x] To create a responsive and dynamic admin panel in React to configure the rules in real time.
  - [x] To declare APIs that allow the admin to configure the portal in real time.
- [ ] Caching database calls
  - [x] To research a method that works consistently with all functions with minimum changes.
  - [x] To write a robust library (discussed later) to dynamically cache any given function.
  - [x] To future proof the library by extending support for typescript if migration/upgrade happens.
  - [x] Robust testing of the caching library to ensure consistent results.
  - [ ] **Decide which functions are to be cached**
- [x] Objectives completed which were originally not part of the proposal
  - [x] Break the codebase into modules/services that deal with specific functionality.
  - [x] Streamlined use of environment variables in the application.
  - [x] Single point configuration for databases and roles services.
  - [x] Refactor a major part of the main application.
  - [x] Wrote documentation for parts of the project that were not under the scope of the proposal.
  - [x] Established a new code style based on Airbnb's guide.
  - [x] Fixed almost all critical linting issues.
  - [x] Published a standalone library on NPM for caching that can be used in other projects as well.
- [x] [pull request](https://github.com/camicroscope/Caracal/pull/119)

---

# Role Bases system

> Services Logging their details at runtime
> ![https://i.imgur.com/WXgHA7D.png](https://i.imgur.com/WXgHA7D.png)

> Role definitons
> ![https://i.imgur.com/naJAKUf.png](https://i.imgur.com/naJAKUf.png)

> Default role definitions: changes done here are hardcoded into the application, and are automatically seeded into the database at runtime. This allows deploying the same codebase to multiple clusters with similar configurations, even if all are running on different databases. use case: different branches of a pathology lab
> ![https://i.imgur.com/oLGcB6x.png](https://i.imgur.com/oLGcB6x.png)
> note the hierarchy in the roles that are implemented. Each higher role automatically gets all rights of a lower one.

> Documentation: all services written have extensive documentation that should aid developers working on the project.
> ![https://i.imgur.com/lTBnOUj.png](https://i.imgur.com/lTBnOUj.png)

> Middleware: since the routes are bound to the application during runtime based on the configurations defined in routes.json, middleware is used to enforce the rights access.
> ![https://i.imgur.com/gFnieXr.png](https://i.imgur.com/gFnieXr.png)

## APIS

- to read roles data
  > GET /api/roles
  > ![https://i.imgur.com/00zSTlP.png](https://i.imgur.com/00zSTlP.png)
- to write roles data
  > POST /api/roles
  > ![https://i.imgur.com/iycGiIu.png](https://i.imgur.com/iycGiIu.png)


# Architecture

There has been a fundamental change in the way the application is structured. Even when I was limited on time, I have tried to club together similar functionality in form of modules or services (located in /services). This allows easy testing and a single point of contact for all operations. Earlier there was a lot of redundancy in the codebase, which is now removed as all calls are made to a single service and code is not duplicated.

# Dependency

In order for the cache system to work, a new dependency of redis had to be added. The changes in the deployment will be needed to include a redis container for the cache service.

**Note**
- full GSoC documentation is [here](https://github.com/YashKumarVerma/gsoc) which includes the cache module as well as the admin interface.",False,119,https://api.github.com/repos/camicroscope/Caracal/pulls/119,https://github.com/camicroscope/Caracal/pull/119,open,7990,2837,43,30,1,1,0,0,[],2021-07-12 13:24:42+00:00,,0.0,,"[{'comment_id': 749867988, 'comment_body': '```suggestion\r\n```\r\n(or the entire file?)', 'comment_created': datetime.datetime(2021, 11, 16, 3, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'birm', 'type': 'User'}]","[{'commit_sha': 'c21726af022bf0093f85631ca92431d167a77982', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca7c39369c65870e8a631131b954cae28c151992', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182268f6e998fcd77aebb351fbdb001c55f84a2b', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '372a915d79fe1d88fca94f986c0c60d9200a1434', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f51afa16c1268078d86314777bb590703535dcf', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8949a921057dedc4e0005ef6234a0fb088e263c3', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52d10aadf72936c6a5c31375f746fa1d13c88000', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '850d9885c6f64935c56a079cfb41f2cf6f06ce34', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7345e0190ee7e3ef58fa0b6e5eef8830f8b2816d', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86f89ab614ee651c8047434fa8da4af5e63f6f24', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36f17346326d9bc6e05c0044c2960f78cadc7f9a', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '495a14be41e2d008dfe990e514489d5ca32558d6', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '520775b8d3b7053ecac99be9df761a63863a16a4', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eca4141341530528536a690ba128902db75987ef', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3510ea3f069bce00b91992c7c9663f7bc523cf43', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6bc2842c4b56264e35b06421ee929a462695ace', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61d34ee32974c288972561148f712d85bac33d3a', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db37a258910aa439e5b746fd83b1d057a3eea9aa', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1589fec3fa43fafa7ddb9504f2c9f7221641630b', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '199781b827ddc2e0ebd2460e6a47d687d2adb663', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dec5002139cce92888d1ed215cfbed144b403d92', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bfec22026cb8c13c045a5885e92db2745438d13', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ced6faf1c52a212d9f49c49e109cad403838c8f', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d9c1f7055de7fd7a883fb8554365558c636b875', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514ba593187850d1934bf23ee897011a434d926c', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c66c90f0d2c1b6639f35e31be5a2d237530e959', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc6c44e1ff73918149ad6c2ee7438e9dd1c95b4e', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30d63876df2d5ae9b663a51d4a6e36f6b43aeb9e', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba53028fdf84f8e0f40de04dd31f4787c1cdcbc3', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac697ba46e783ecaf410efb371260db236f31797', 'committer_username': 'YashKumarVerma', 'committer_name': 'Yash Kumar Verma', 'committer_email': 'yk.verma2000@gmail.com', 'commit_date': datetime.datetime(2015, 8, 29, 17, 42, 31, tzinfo=datetime.timezone.utc)}]",Yash Kumar Verma,14032427,yk.verma2000@gmail.com,User,,229,,124,402

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
226370258,Caracal,camicroscope/Caracal,JavaScript,96,15,6,15,411,26,19,9,"[{'id': 687842886, 'number': 119, 'closed': None, 'created': datetime.datetime(2021, 7, 12, 13, 24, 42, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 7990, 'deletions': 2837, 'state': 'open'}, {'id': 683115321, 'number': 118, 'closed': datetime.datetime(2021, 7, 22, 3, 8, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 4, 59, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1548508.0, 'time_delta': '17 days, 22:08:28', 'additions': 1149, 'deletions': 464, 'state': 'closed'}, {'id': 677200986, 'number': 112, 'closed': datetime.datetime(2021, 6, 29, 16, 11, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 15, 14, tzinfo=datetime.timezone.utc), 'time_taken': 435429.0, 'time_delta': '5 days, 0:57:09', 'additions': 4281, 'deletions': 30, 'state': 'closed'}, {'id': 635935092, 'number': 106, 'closed': datetime.datetime(2021, 5, 14, 20, 11, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 14, 40, 32, tzinfo=datetime.timezone.utc), 'time_taken': 451861.0, 'time_delta': '5 days, 5:31:01', 'additions': 177, 'deletions': 7, 'state': 'closed'}, {'id': 628404611, 'number': 98, 'closed': datetime.datetime(2021, 5, 7, 15, 45, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 10, 5, 42, tzinfo=datetime.timezone.utc), 'time_taken': 538807.0, 'time_delta': '6 days, 5:40:07', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 613409855, 'number': 93, 'closed': datetime.datetime(2021, 4, 13, 19, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 12, 8, 43, 43, tzinfo=datetime.timezone.utc), 'time_taken': 123483.0, 'time_delta': '1 day, 10:18:03', 'additions': 148, 'deletions': 0, 'state': 'closed'}, {'id': 601403643, 'number': 90, 'closed': datetime.datetime(2021, 4, 19, 17, 9, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 8, 16, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2105622.0, 'time_delta': '24 days, 8:53:42', 'additions': 553, 'deletions': 296, 'state': 'closed'}, {'id': 600500745, 'number': 86, 'closed': None, 'created': datetime.datetime(2021, 3, 25, 7, 26, 34, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1916, 'deletions': 1958, 'state': 'open'}, {'id': 598933900, 'number': 85, 'closed': datetime.datetime(2021, 3, 24, 15, 10, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 14, 59, 27, tzinfo=datetime.timezone.utc), 'time_taken': 87052.0, 'time_delta': '1 day, 0:10:52', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 598545099, 'number': 79, 'closed': datetime.datetime(2021, 5, 24, 8, 30, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 5, 2, 37, tzinfo=datetime.timezone.utc), 'time_taken': 5369285.0, 'time_delta': '62 days, 3:28:05', 'additions': 479, 'deletions': 66, 'state': 'closed'}, {'id': 598522795, 'number': 78, 'closed': datetime.datetime(2021, 3, 23, 5, 4, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 3, 53, 26, tzinfo=datetime.timezone.utc), 'time_taken': 4240.0, 'time_delta': '1:10:40', 'additions': 4039, 'deletions': 75, 'state': 'closed'}, {'id': 598513920, 'number': 77, 'closed': datetime.datetime(2021, 3, 23, 7, 40, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 3, 26, 8, tzinfo=datetime.timezone.utc), 'time_taken': 15238.0, 'time_delta': '4:13:58', 'additions': 0, 'deletions': 33, 'state': 'closed'}, {'id': 590066830, 'number': 75, 'closed': datetime.datetime(2021, 3, 14, 6, 33, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 19, 33, 6, tzinfo=datetime.timezone.utc), 'time_taken': 298830.0, 'time_delta': '3 days, 11:00:30', 'additions': 3617, 'deletions': 14, 'state': 'closed'}, {'id': 589976472, 'number': 72, 'closed': datetime.datetime(2021, 3, 10, 18, 21, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 18, 7, 18, tzinfo=datetime.timezone.utc), 'time_taken': 851.0, 'time_delta': '0:14:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
