pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
663920942,CASSANDRA-16789: Add TTL support to nodetool snapshots,,False,1046,https://api.github.com/repos/apache/cassandra/pulls/1046,https://github.com/apache/cassandra/pull/1046,closed,2068,212,29,1,0,50,0,0,[],2021-06-07 21:21:05+00:00,2021-08-26 18:01:51+00:00,6900046.0,"79 days, 20:40:46","[{'comment_id': 647774922, 'comment_body': 'I believe this might be all changed by Instant API just by ""Instant.now()""\r\nhttps://docs.oracle.com/javase/tutorial/datetime/iso/instant.html\r\n\r\n        Duration ttl = Duration.ofMinutes(5);\r\n        Instant now = Instant.now();\r\n        String createdAt = now.toString();\r\n        String expireAt = now.plus(ttl).toString();\r\n\r\nParsing it back is just `Instant.parse(string)`\r\n\r\n`Instant.now()` has UTC az zone by default.', 'comment_created': datetime.datetime(2021, 6, 8, 20, 35, 40, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 647777120, 'comment_body': '""a TTL"", missing space', 'comment_created': datetime.datetime(2021, 6, 8, 20, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 647778704, 'comment_body': 'I think this is just enough:\r\n\r\n        if (ttl.toMinutes() < 1)\r\n            throw  ...', 'comment_created': datetime.datetime(2021, 6, 8, 20, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 647779872, 'comment_body': '@pauloricardomg told me to use this class:\r\nhttps://github.com/apache/cassandra/blob/trunk/src/java/org/apache/cassandra/cql3/Duration.java\r\n\r\nIt does not supply such method.', 'comment_created': datetime.datetime(2021, 6, 8, 20, 43, 59, tzinfo=datetime.timezone.utc), 'commenter': 'fibersel', 'type': 'User'}, {'comment_id': 649990446, 'comment_body': '+1 to using Instant.', 'comment_created': datetime.datetime(2021, 6, 11, 13, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 650041842, 'comment_body': 'not necessary comment block (or comment that method which follows properly)', 'comment_created': datetime.datetime(2021, 6, 11, 14, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 650044102, 'comment_body': '@fibersel should not this be rewritten to new Duration class? Just asking ....', 'comment_created': datetime.datetime(2021, 6, 11, 14, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 650058078, 'comment_body': ""double check again if it's bigger than 1 minute"", 'comment_created': datetime.datetime(2021, 6, 11, 15, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 650059408, 'comment_body': 'test nodetool snapshot with crazy ttl will fail and another test that ttl < 1 minute fails', 'comment_created': datetime.datetime(2021, 6, 11, 15, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 652787934, 'comment_body': '@fibersel yes, here, please check it is bigger than 1 minute', 'comment_created': datetime.datetime(2021, 6, 16, 15, 11, 58, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 652788796, 'comment_body': '@fibersel @pauloricardomg maybe this should not throw IOException anymore in case ttl is lower than 1 minute but I am not sure we can just change the signature of this method like that ...', 'comment_created': datetime.datetime(2021, 6, 16, 15, 12, 51, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 652791586, 'comment_body': 'If we throw IllegalArgumentException, that is runtime exception so all good ... ', 'comment_created': datetime.datetime(2021, 6, 16, 15, 15, 53, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 666856631, 'comment_body': 'Wrap with runtime exception.', 'comment_created': datetime.datetime(2021, 7, 9, 10, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666857077, 'comment_body': 'extract `created_at` field name to constant on `SnapshotDetails`', 'comment_created': datetime.datetime(2021, 7, 9, 10, 45, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666857140, 'comment_body': 'extract `expires_at` field name to constant on `SnapshotDetails`', 'comment_created': datetime.datetime(2021, 7, 9, 10, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666857695, 'comment_body': ""no need to use variable since it's used in a single place"", 'comment_created': datetime.datetime(2021, 7, 9, 10, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666874204, 'comment_body': ""Don't do file operations inside constructors. Read the manifest outside before constructing `SnapshotDetails`."", 'comment_created': datetime.datetime(2021, 7, 9, 11, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666884542, 'comment_body': '@smiklosovic can you resolve this?', 'comment_created': datetime.datetime(2021, 7, 9, 11, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666886094, 'comment_body': ""Let's rename this to `activeTtlSnapshots` to show that only contains snapshots with ttls."", 'comment_created': datetime.datetime(2021, 7, 9, 11, 40, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666886878, 'comment_body': ""Let's rename this to `addTtlSnapshot` to show that only contains snapshots with ttls.\r\nAlso please add an assertion in the first line of the method to reflect this: `assert ttl != null`."", 'comment_created': datetime.datetime(2021, 7, 9, 11, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 666889326, 'comment_body': 'Let\'s make the delay configurable: `Integer.getInteger(""cassandra.ttl_snapshot_cleanup_period_seconds"", 60)`', 'comment_created': datetime.datetime(2021, 7, 9, 11, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 667021320, 'comment_body': '@fibersel would you please address this?', 'comment_created': datetime.datetime(2021, 7, 9, 15, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667032411, 'comment_body': '@fibersel as discussed in the ticket already, I think this call is not deterministic and it should be addressed. We should have a deterministic way to get a manifest for particular SnapshotDetails.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667034319, 'comment_body': 'plus any implementation of file reading should actually treat exceptions somehow and they should not be ignored like below in order to make it production ready.\r\n\r\n@fibersel btw I noticed that you are using this formatting "".parse((String)manifest.get(...)"".\r\n\r\nThere should be a space there like this: "".parse((String) manifest). It applies to more places in this PR.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667037628, 'comment_body': '@fibersel if you extract the parsing of manifest file outside as advised by Paulo, I would actually do it in such a way that that SnapshotDetails would accept two more parameters - expiresAt and createdAt - in other words, the parser itself would give me this information comfortably so I do not need to deal with that in this constructor. There should not be any complicated logic in SnapshotDetails except some simple getters / setters. This should be mostly just a POJO.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667041465, 'comment_body': '@fibersel I think this might ideally also accept just expiresAt and createdAt parameters in order to avoid the parsing of file with all its complexities and it would be just simple stuff.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667042555, 'comment_body': '@fibersel would you move this member on top of the class among the other ones please? It should not be here, put seemingly randomly.', 'comment_created': datetime.datetime(2021, 7, 9, 15, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667043543, 'comment_body': '@fibersel would you be more descriptive? At least ""starting cleanup of expired snapshots"".', 'comment_created': datetime.datetime(2021, 7, 9, 15, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667044975, 'comment_body': '@pauloricardomg should not this be a configuration parameter in cassandra.yaml?', 'comment_created': datetime.datetime(2021, 7, 9, 15, 43, 12, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667047119, 'comment_body': '@fibersel , again, ideally should accept just createdAt and expiresAt', 'comment_created': datetime.datetime(2021, 7, 9, 15, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667048692, 'comment_body': '@pauloricardomg  @fibersel this is interesting  ... so what happens when I create a snapshot called ""a"" on a table ""k1.t1"" and then a snapshot called ""a"" on ""k1.t2""? In both scenarios, is not it true that this would put ""k1.a"" into the map, effectively overwriting the previous one? We might uniquely identify it in connection with table name like ""k1.t1.a"" and ""k1.t2.a"".', 'comment_created': datetime.datetime(2021, 7, 9, 15, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 667552589, 'comment_body': ""Normally this parameter should not be tuned, so I prefer to avoid adding unnecessary parameters to `cassandra.yaml` unless it's a commonly used parameter. I prefer to start as a system property, and if people feel the need we can later promote it to a `cassandra.yaml` configuration."", 'comment_created': datetime.datetime(2021, 7, 11, 23, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 667555878, 'comment_body': '+1 to using `ks.table.tag` to uniquely identify a snapshot. We will need to implement `ColumnFamilyStor.clearSnapshot` to be able to use this method during snapshot cleanup instead of `Keyspace.clearSnapshot` which does keyspace-level cleanup.', 'comment_created': datetime.datetime(2021, 7, 12, 0, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 676615433, 'comment_body': 'should return Collection<TableSnapshotDetails> to avoid leaking implementation details outside `SnapshotManager` class', 'comment_created': datetime.datetime(2021, 7, 26, 13, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 677375921, 'comment_body': 'no longer needed, please remove', 'comment_created': datetime.datetime(2021, 7, 27, 11, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 677376294, 'comment_body': 'add space after `serialization`', 'comment_created': datetime.datetime(2021, 7, 27, 11, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 678392449, 'comment_body': 'I dont like this method located here. This class should be more or less just a simple POJO, no logic.', 'comment_created': datetime.datetime(2021, 7, 28, 15, 5, 33, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 678392704, 'comment_body': 'remove this empty line', 'comment_created': datetime.datetime(2021, 7, 28, 15, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}, {'comment_id': 678450203, 'comment_body': ""This makes it easier to test that `deleteSnapshot` is being called during `SnapshotManager.clearExpiredSnapshots` with mocks without relying on external classes, keeping the module self-contained. I don't see any good reason to remove it but I'd be happy to hear your arguments in favor of removing."", 'comment_created': datetime.datetime(2021, 7, 28, 16, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 681135584, 'comment_body': 'no need to specify dependency twice, also fix indentation', 'comment_created': datetime.datetime(2021, 8, 2, 17, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 681135926, 'comment_body': 'remove unnecessary `snapshotDirs`', 'comment_created': datetime.datetime(2021, 8, 2, 17, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 681143716, 'comment_body': 'Move test to `SnapshotsTTLTest` and remove this class to keep only the other one.', 'comment_created': datetime.datetime(2021, 8, 2, 17, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 682876021, 'comment_body': 'remove unnecessary space', 'comment_created': datetime.datetime(2021, 8, 4, 18, 52, 59, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 682876279, 'comment_body': 'change default cleanup period to 60 seconds', 'comment_created': datetime.datetime(2021, 8, 4, 18, 53, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 682987478, 'comment_body': 'move bracket to next line', 'comment_created': datetime.datetime(2021, 8, 4, 21, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 683001278, 'comment_body': 'remove modifications to this file', 'comment_created': datetime.datetime(2021, 8, 4, 22, 28, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 687996667, 'comment_body': 'no need to specify version here', 'comment_created': datetime.datetime(2021, 8, 12, 18, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 688008090, 'comment_body': 'please address this', 'comment_created': datetime.datetime(2021, 8, 12, 19, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 688030826, 'comment_body': 'please address this', 'comment_created': datetime.datetime(2021, 8, 12, 19, 37, 2, tzinfo=datetime.timezone.utc), 'commenter': 'pauloricardomg', 'type': 'User'}, {'comment_id': 693024351, 'comment_body': '@pauloricardomg  please move this at the top', 'comment_created': datetime.datetime(2021, 8, 20, 15, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'smiklosovic', 'type': 'User'}]","[{'commit_sha': '212264f592bca483885c31363e29361712a3eba8', 'committer_username': 'fibersel', 'committer_name': 'Abi Palagashvili', 'committer_email': None, 'commit_date': datetime.datetime(2018, 2, 22, 19, 24, 4, tzinfo=datetime.timezone.utc)}]",Abi Palagashvili,36743974,,User,,37,,14,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
206424,cassandra,apache/cassandra,Java,3587,8662,442,580,30083,537,19,537,"[{'id': 709687912, 'number': 1135, 'closed': datetime.datetime(2022, 6, 17, 7, 57, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 21, 47, 15, tzinfo=datetime.timezone.utc), 'time_taken': 26734244.0, 'time_delta': '309 days, 10:10:44', 'additions': 16, 'deletions': 2, 'state': 'closed'}, {'id': 663920942, 'number': 1046, 'closed': datetime.datetime(2021, 8, 26, 18, 1, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 21, 21, 5, tzinfo=datetime.timezone.utc), 'time_taken': 6900046.0, 'time_delta': '79 days, 20:40:46', 'additions': 2068, 'deletions': 212, 'state': 'closed'}, {'id': 663568138, 'number': 1044, 'closed': datetime.datetime(2022, 10, 22, 11, 49, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 13, 30, 13, tzinfo=datetime.timezone.utc), 'time_taken': 43366753.0, 'time_delta': '501 days, 22:19:13', 'additions': 21, 'deletions': 3, 'state': 'closed'}, {'id': 608621409, 'number': 952, 'closed': datetime.datetime(2022, 3, 16, 15, 19, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 22, 31, 53, tzinfo=datetime.timezone.utc), 'time_taken': 29868464.0, 'time_delta': '345 days, 16:47:44', 'additions': 11, 'deletions': 2, 'state': 'closed'}]"
