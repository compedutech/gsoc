pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
934846884,Chore: Migrate ActionSheets to `react-native-bottom-sheet` and make them dynamic,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

## Proposed changes
<!-- Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue below. -->

* Migrated ActionSheets to [react-native-bottom-sheet](https://gorhom.github.io/react-native-bottom-sheet/) .
* Updated the logic to render other components like modals in the Action Sheet.

## Issue(s)	
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## How to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->

#### Pay attention on these tests for landscape and tablets (action sheet should be center aligned there)
- Hold message to show action sheet and make sure it's working
- Go to Members and tap on a member. The action sheet should be working.
- Tap `+` on Messagebox to open the action sheet and make sure it's working.
- Example of calling ActionSheet with some custom component :
```
const styles = StyleSheet.create({
			heading: {
				color: 'white',
				fontSize: 20,
				textAlign: 'center'
			},
			buttonsContainer: {
				flexDirection: 'row',
				justifyContent: 'center'
			},
			button: {
				width: 150,
				marginHorizontal: 20
			},
			input: {
				marginVertical: 20,
				color: 'gray',
				fontSize: 16,
				lineHeight: 20,
				padding: 8,
				marginHorizontal: 35,
				backgroundColor: colors.bodyText
			}
		});
		showActionSheet({
			children: (
				<View>
					<Text style={styles.heading}>Some custom component</Text>
					<BottomSheetTextInput style={styles.input} placeholder='Enter some text' />
					<View style={styles.buttonsContainer}>
						<Button
							title='Cancel'
							type='secondary'
							style={styles.button}
							backgroundColor={colors.dangerColor}
							theme={theme}
						/>
						<Button
							title='Save'
							type='primary'
							style={styles.button}
							backgroundColor={colors.successColor}
							theme={theme}
						/>
					</View>
				</View>
			),
			snaps: ['30%']
		});
```
![image](https://user-images.githubusercontent.com/77742477/168393049-cc6d6597-a554-4a85-b043-ae5d06f47f19.png)


## Screenshots

https://user-images.githubusercontent.com/77742477/168103080-c82017c8-9029-4c44-96c8-ee49fcdf02e9.mp4

Rendering custom component inside ActionSheet :

https://user-images.githubusercontent.com/77742477/168123492-9492fb0a-a5b3-4322-9570-f24441106c82.mp4


## Types of changes
<!-- What types of changes does your code introduce to Rocket.Chat? -->
<!-- Put an `x` in the boxes that apply -->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [ ] Improvement (non-breaking change which improves a current function)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Documentation update (if none of the other choices apply)

## Checklist
<!-- Put an `x` in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. -->

- [X] I have read the [CONTRIBUTING](https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat) doc
- [X] I have signed the [CLA](https://cla-assistant.io/RocketChat/Rocket.Chat.ReactNative)
- [X] Lint and unit tests pass locally with my changes
- [ ] I have added tests that prove my fix is effective or that my feature works (if applicable)
- [ ] I have added necessary documentation (if applicable)
- [ ] Any dependent changes have been merged and published in downstream modules

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,4193,https://api.github.com/repos/RocketChat/Rocket.Chat.ReactNative/pulls/4193,https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4193,closed,139,153,7,8,1,4,0,0,[],2022-05-12 13:36:21+00:00,2022-05-19 16:53:46+00:00,616645.0,"7 days, 3:17:25","[{'comment_id': 872629244, 'comment_body': '![image](https://user-images.githubusercontent.com/804994/168337358-32d33eeb-e992-4f1b-997a-182732b614c8.png)\r\nIt should be centralized. You can test it on tablets as well.', 'comment_created': datetime.datetime(2022, 5, 13, 17, 34, 9, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 872630966, 'comment_body': ""We could simplify this logic by using [useBottomSheetDynamicSnapPoints])(https://gorhom.github.io/react-native-bottom-sheet/hooks#usebottomsheetdynamicsnappoints).\r\nThis code here is working (your proposal too), but it's using lots of static info.\r\nMaybe we could use that hook, remove this complex logic from our component and only say our snaps are `['50%', 'CONTENT_HEIGHT']`"", 'comment_created': datetime.datetime(2022, 5, 13, 17, 36, 33, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 872634890, 'comment_body': ""The expected UX is not to scroll on the FlatList, but to move the whole action sheet.\r\nOn this video, you can see it's scrolling if I touch inside and I need to scroll from the handle to actually scroll the action sheet.\r\n\r\nhttps://user-images.githubusercontent.com/804994/168338394-0b3ae8b2-56e0-4bbe-a936-54074d23c0ca.mp4\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2022, 5, 13, 17, 41, 42, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 872967698, 'comment_body': 'Done\r\n\r\n![Screenshot_1652526699](https://user-images.githubusercontent.com/77742477/168423304-7decd8a6-1c47-4167-9af9-a948d4258e0e.png)\r\n', 'comment_created': datetime.datetime(2022, 5, 14, 11, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}]","[{'commit_sha': '5f2d09f684219df900e56b91667ab8c8ea17d5b9', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d0871e5ec469bbc99305e8bbb1d92bef4717669', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c74dc9969d9b22931f8338c36cfa98a5bba8add', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1c2842bc3bfb772d00b3bb23534f2025b2d698b', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '838364cda1700b754d73930017fe2d741d685462', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2347be163238864c061addfb831e7ed7691d5df3', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86336d3b82eb8b19776e3c786f6e3f53fc2648cd', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fd2154de37d1d9dc03a16636ce50f60f83edc8c', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}]",Danish Ahmed Mirza,77742477,,User,,25,,37,31
989116649,[NEW] Redesign `ReactionsList` and migrate to bottom sheet,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

## Proposed changes
<!-- Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue below. -->
* Redesigned `ReactionsList` component which was previously rendered as `Reactions Modal` and migrate it to bottom sheet.

## Issue(s)	
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## How to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->
* Long press on reactions below a message and see if the reactions list work as expected.

## Screenshots

|Before|After|
|-------|------|
|![reactions-list-before](https://user-images.githubusercontent.com/77742477/177613809-62e2b9e5-f312-43f6-9f22-e624692aa696.png)|![new reactions-list](https://user-images.githubusercontent.com/77742477/177613827-161ffe70-2932-4353-b146-013319b2dd9d.png)|


## Types of changes
<!-- What types of changes does your code introduce to Rocket.Chat? -->
<!-- Put an `x` in the boxes that apply -->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [ ] Improvement (non-breaking change which improves a current function)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Documentation update (if none of the other choices apply)

## Checklist
<!-- Put an `x` in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. -->

- [X] I have read the [CONTRIBUTING](https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat) doc
- [X] I have signed the [CLA](https://cla-assistant.io/RocketChat/Rocket.Chat.ReactNative)
- [X] Lint and unit tests pass locally with my changes
- [ ] I have added tests that prove my fix is effective or that my feature works (if applicable)
- [ ] I have added necessary documentation (if applicable)
- [ ] Any dependent changes have been merged and published in downstream modules

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",True,4346,https://api.github.com/repos/RocketChat/Rocket.Chat.ReactNative/pulls/4346,https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4346,closed,167,184,6,3,0,27,0,0,[],2022-07-06 17:59:52+00:00,2022-08-03 16:32:17+00:00,2413945.0,"27 days, 22:32:25","[{'comment_id': 920078889, 'comment_body': 'Why do we need this?', 'comment_created': datetime.datetime(2022, 7, 13, 13, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920080434, 'comment_body': 'Prettier was supposed to fix this indentation.\r\nCan you run `yarn prettier-lint`?\r\nIt should open the objects there like `tabBarItem`', 'comment_created': datetime.datetime(2022, 7, 13, 13, 29, 51, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920081989, 'comment_body': ""We shouldn't use `TouchableOpacity` anymore.\r\nYou can either go the `Pressable` or to a gesture handler component."", 'comment_created': datetime.datetime(2022, 7, 13, 13, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920084025, 'comment_body': ""Unless you're memoizing the function props here, `React.memo` is only making the performance worse.\r\nWe shouldn't add it until we actually need it and measure the benefits.\r\nApply the same logic to other memos you're introducing here."", 'comment_created': datetime.datetime(2022, 7, 13, 13, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920090962, 'comment_body': 'Bad naming imo.\r\nThey aren\'t `fields` thinking on the usual approach and they aren\'t ""shared"".\r\nAlso it\'s too far from the naming context for this component.\r\nFor me, as a reviewer who\'s reading your code for the first time, `shared fields` doesn\'t make any sense and if the component gets more complex over time, we\'ll have to refactor this naming because of the lack of semantic.\r\n\r\nIn these cases, it\'s `common` or `base` is more usual.\r\nSomething like `IReactionsListBase` would make more sense.', 'comment_created': datetime.datetime(2022, 7, 13, 13, 39, 17, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920092032, 'comment_body': 'Does it work for dark themes?\r\nShould we use the opacity from `colors.ts`?', 'comment_created': datetime.datetime(2022, 7, 13, 13, 40, 13, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920104279, 'comment_body': 'While `...props` makes the code shorter and easier to read while writing, it makes it unpredictable and harder to maintain over time.\r\nIf the component has too many props and/or the prop drilling is going to happen, use React.Context instead.', 'comment_created': datetime.datetime(2022, 7, 13, 13, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920104870, 'comment_body': 'This extra View is probably unnecessary.', 'comment_created': datetime.datetime(2022, 7, 13, 13, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920107306, 'comment_body': ""I wonder if this `index` is actually working as expected.\r\nUsually we shouldn't rely on the `index` of a map to do our logic.\r\nIf it's going to work after a whole re-render, for example.\r\nCan't you avoid it by using the emoji instead?"", 'comment_created': datetime.datetime(2022, 7, 13, 13, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920110284, 'comment_body': ""Can you make it 36, so it's a multiple of 4?"", 'comment_created': datetime.datetime(2022, 7, 13, 13, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920113615, 'comment_body': ""It's going to recalculate on every re-render, but it only relies on the usernames' length.\r\nYou can memoize it with `useMemo`, so it only re-runs it when the usernames change."", 'comment_created': datetime.datetime(2022, 7, 13, 13, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920173327, 'comment_body': 'This prevents horizontal swipe gesture to trigger the bottom sheet.  \r\nhttps://github.com/gorhom/react-native-bottom-sheet/issues/372#issuecomment-808793366 ', 'comment_created': datetime.datetime(2022, 7, 13, 14, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 922698598, 'comment_body': 'Yes it works for the dark themes as well.', 'comment_created': datetime.datetime(2022, 7, 16, 16, 41, 46, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 922699304, 'comment_body': ""I'm not sure how you want to memoize this using usernames as `reactions` is an array in which each element is an object containing id, emoji and usernames array. It won't help until `reactions` array itself is memoized, right? Am I missing any point?"", 'comment_created': datetime.datetime(2022, 7, 16, 16, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 926008747, 'comment_body': 'Why was it necessary to add this? Have you validated if it impacts in other places?', 'comment_created': datetime.datetime(2022, 7, 20, 20, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926010625, 'comment_body': 'You have to add a key when the component is being rendered via map.\r\nhttps://reactjs.org/docs/lists-and-keys.html#keys', 'comment_created': datetime.datetime(2022, 7, 20, 20, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926012240, 'comment_body': '```suggestion\r\nstyle={[styles.tabLine, { backgroundColor: active ? colors.tintColor : colors.separatorColor, height: active ? 2 : 1 }]}\r\n```\r\nCreate a helper variable to verify this.\r\n\r\nexample:\r\n`const active = activeTab === index;`\r\n', 'comment_created': datetime.datetime(2022, 7, 20, 20, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926017693, 'comment_body': 'In this case, the best approach to the layout is to follow that of slack itself.\r\nWith the tab covering the entire view space.\r\nIn its implementation, if it has only two or three items, it remains as if it were a cut list.\r\n\r\nOn Slack: https://i.ibb.co/7yLVbb5/Screenshot-2022-07-20-17-16-13-999-com-Slack.jpg\r\nYour implementation: https://i.ibb.co/WBpswsp/Screen-Shot-2022-07-20-at-17-16-00.png', 'comment_created': datetime.datetime(2022, 7, 20, 20, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926018781, 'comment_body': '```suggestion\r\n\t\t\t\trenderItem={({ item }) => (\r\n```\r\nthis is not necessary as its type is inferred.', 'comment_created': datetime.datetime(2022, 7, 20, 20, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926020554, 'comment_body': 'Why are these styles outside the stylesheet?', 'comment_created': datetime.datetime(2022, 7, 20, 20, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926022073, 'comment_body': 'Another thing, are you sure this prop accepts color as a parameter?', 'comment_created': datetime.datetime(2022, 7, 20, 20, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926024252, 'comment_body': ""Sure there would need to be a pressable here?\r\nWouldn't a TouchableOpacity already solve the problem?"", 'comment_created': datetime.datetime(2022, 7, 20, 20, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926031226, 'comment_body': ""Do you know if there is a way to improve the gesture of this?\r\nOn ios it's pretty bad to use, the scroll doesn't work properly."", 'comment_created': datetime.datetime(2022, 7, 20, 20, 34, 2, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 926829201, 'comment_body': 'I was told in the above reviews to not use TouchableOpacity anymore https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4346#discussion_r920081989', 'comment_created': datetime.datetime(2022, 7, 21, 15, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 926830939, 'comment_body': 'Sorry that was by mistake.\r\nYes `color` is an acceptable prop as the standard emojis are rendered as text.', 'comment_created': datetime.datetime(2022, 7, 21, 15, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 927829490, 'comment_body': ""Without adding this, bottom sheet gestures didn't work (Couldn't change snap). \r\n\r\nEdit: I actually found a better way of fixing this."", 'comment_created': datetime.datetime(2022, 7, 22, 16, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 931357358, 'comment_body': ""The use memo here doesn't really have any important impact, since this is the parent component, the one that renders several times is the child, this function is only executed once when assembling the whole component."", 'comment_created': datetime.datetime(2022, 7, 27, 18, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}]","[{'commit_sha': '65bd63aae0aa02a6440931de6891371a2159b08e', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fd06a8f3586a54347480b56467e64077cf8c552', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4597b042e7bbe3bc0f13ff0fa30c8d03491bc1af', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}]",Danish Ahmed Mirza,77742477,,User,,25,,37,31
1017816719,[IMPROVE] Add `All` tab in Reactions List,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

## Proposed changes
<!-- Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue below. -->
* Added an `All` tab in Reactions list where we can view all the reactions together

## Issue(s)	
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## How to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->

## Screenshots

![image](https://user-images.githubusercontent.com/77742477/182909578-a7564084-bdcf-44e1-a7a3-0dba6478c92a.png)


## Types of changes
<!-- What types of changes does your code introduce to Rocket.Chat? -->
<!-- Put an `x` in the boxes that apply -->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [X] Improvement (non-breaking change which improves a current function)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Documentation update (if none of the other choices apply)

## Checklist
<!-- Put an `x` in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. -->

- [X] I have read the [CONTRIBUTING](https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat) doc
- [X] I have signed the [CLA](https://cla-assistant.io/RocketChat/Rocket.Chat.ReactNative)
- [X] Lint and unit tests pass locally with my changes
- [x] I have added tests that prove my fix is effective or that my feature works (if applicable)
- [ ] I have added necessary documentation (if applicable)
- [ ] Any dependent changes have been merged and published in downstream modules

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
[NATIVE-108]

[NATIVE-108]: https://rocketchat.atlassian.net/browse/NATIVE-108?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",True,4409,https://api.github.com/repos/RocketChat/Rocket.Chat.ReactNative/pulls/4409,https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4409,closed,523,162,16,26,0,14,0,0,[],2022-08-04 17:06:53+00:00,2022-09-29 19:42:04+00:00,4847711.0,"56 days, 2:35:11","[{'comment_id': 942918457, 'comment_body': ""The idea of `useRealName` is to:\r\n- if true, show the full name of the user. John Doe.\r\n- If false, show their username. john.doe.\r\n\r\nIt's not supposed to show more info."", 'comment_created': datetime.datetime(2022, 8, 10, 21, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 942919176, 'comment_body': ""It's not considering `useRealName` and it's prioritizing `item.name`.\r\nIf `false`, the workspace admin wants to render usernames everywhere."", 'comment_created': datetime.datetime(2022, 8, 10, 21, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 942919750, 'comment_body': 'You should not run I18n for indexes.', 'comment_created': datetime.datetime(2022, 8, 10, 21, 25, 32, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 943182149, 'comment_body': 'I was planning on displaying the UserItem similar to the one used in other places in the app when `useRealName` is on:\r\n![image](https://user-images.githubusercontent.com/77742477/184085613-69c54e7e-9513-409a-9433-f71970545e0e.png)\r\n\r\nBut okay, I got the point. I can just replace the `username` with `fname` if `useRealName` is enabled.', 'comment_created': datetime.datetime(2022, 8, 11, 7, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 943183613, 'comment_body': 'But `item.name` is present only when `useRealName` is enabled on the server. Names array would be empty otherwise and it will render just the username. I can change the logic if you want.', 'comment_created': datetime.datetime(2022, 8, 11, 7, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 955255723, 'comment_body': ""It's 18% on Figma instead of calculated. Can you try that instead?"", 'comment_created': datetime.datetime(2022, 8, 25, 17, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955334133, 'comment_body': 'But it\'ll look like this: \r\n\r\n* <img width=""354"" alt=""Screenshot 2022-08-26 at 12 43 49 AM"" src=""https://user-images.githubusercontent.com/77742477/186749528-563bdc0e-7924-4846-8971-fdfea468e239.png"">\r\n\r\ninstead of \r\n* <img width=""359"" alt=""Screenshot 2022-08-26 at 12 41 12 AM"" src=""https://user-images.githubusercontent.com/77742477/186749551-5a303cea-15d6-4655-81ae-71f13be18c70.png"">\r\n\r\nIMO, the second design looks better. I can change it to the other one if you want. Anyways I\'ve fixed the tab width issue on landscape.\r\n', 'comment_created': datetime.datetime(2022, 8, 25, 19, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 960828771, 'comment_body': ""After I react, it doesn't apply use real name anymore\r\n\r\nhttps://user-images.githubusercontent.com/804994/187958874-470ec04e-a409-4b68-97f6-d2370b9e5329.mp4\r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 1, 15, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960831493, 'comment_body': ""I'm missing this fallback you did here https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4409/files#diff-e10dc1c26472d290df8dbc8947c55998127479dc23b34bb77c00c4d8e4505947R36"", 'comment_created': datetime.datetime(2022, 9, 1, 15, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960860184, 'comment_body': ""Well isn't [this](https://github.com/RocketChat/Rocket.Chat.ReactNative/blob/fbd5cf414b281d069f385d9dada0456bfaeb7ed7/app/containers/ReactionsList/AllTab.tsx#L41) the same thing? I mean, `username` will be used if `useRealName`is false or the `name` is not available."", 'comment_created': datetime.datetime(2022, 9, 1, 16, 21, 53, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 960892070, 'comment_body': 'Can you send me a screenshot?', 'comment_created': datetime.datetime(2022, 9, 1, 16, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 961108292, 'comment_body': '* When `useRealName` is false : \r\n<img width=""360"" alt=""Screenshot 2022-09-02 at 2 41 47 AM"" src=""https://user-images.githubusercontent.com/77742477/188013978-4cf8de6c-9ac6-4b3c-8b73-d86e1924f4d4.png"">\r\n\r\n* When `useRealName` is true :\r\n<img width=""358"" alt=""Screenshot 2022-09-02 at 2 44 40 AM"" src=""https://user-images.githubusercontent.com/77742477/188014472-a960b04c-b38f-4445-952f-9bdfe55582d2.png"">\r\n', 'comment_created': datetime.datetime(2022, 9, 1, 21, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 961661139, 'comment_body': ""I'm afraid you didn't get it.\r\nRemember we discussed the migration from `useRealName = false only` to the usage of real name?\r\nWe might get cases where we'll need to show `Full Name and username reacted` at the same time.\r\nThat logic happens on other tabs, but not on `All`."", 'comment_created': datetime.datetime(2022, 9, 2, 13, 7, 41, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 961697648, 'comment_body': 'I could reproduce this on web app as well so probably an issue with the API.', 'comment_created': datetime.datetime(2022, 9, 2, 13, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}]","[{'commit_sha': 'e2553d409347f251de10161e064c1e1e35286f1c', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ae31b1ac0e8306ad42073c99860212e8634762f', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3797933f6d2a99922f2dec37e50550fbec6da431', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1debafa587433f04280a1fa6d0a2b4e55de8af9e', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f17c6cb69b175282f5778eb4fc5e479f34aeae', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5bfbc2114158b7c115fbc514c8389dc88099fe3', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2adbfcb9c31db74112f1e8d52a2e86c8bc1fd556', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '501bfca4b166c4f5f05fc1d4415f094a13288dfe', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a891a406783c92c4e3293c10e7a71d5da8d58b3', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4e50bd4dd9c141153ac3d8aa456f29b73d81c3', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cde3ec7de5bd750649e01935e6d9691075545887', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc8e85b92919d10d2ec9a85a81e41de18ac822e5', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e3346a551362fdb688a19d7a16b43d2067358a', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e2a0e8df75c66c3cddeee4582694eeaf5aa2805', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75afd5d646a6af7e08bb7e55a2a9e73de5be02bd', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbd5cf414b281d069f385d9dada0456bfaeb7ed7', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51602c6c80a929194c8b82fca5689da83ea03bfd', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea30a99de570cdeb43b834951cd6e83fbd928744', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f2e955f6896e576339b2578be68209af2dc0f5f', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c06e66b65c515597ebb530edb673ccdbcfeee2ca', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '746d8a566d8196f1c4bd77b6154c03dd13ebb8b8', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fba798f9dafef75056df4e9a99b449803612907c', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21bf21618aec66892498d33d1923f2f2ec04a407', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f87973561a752c6ab41953a09cb3cf684380a3', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efc03af24afba605ff9481392a82123dfa6c38c6', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc599c5739f3cca6ec6490e49c8d20c57a17a097', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}]",Danish Ahmed Mirza,77742477,,User,,25,,37,31
981580059,[IMPROVE] Redesign emoji picker,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

## Proposed changes
<!-- Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue below. -->

* Migrated `EmojiPicker` to hooks.
* Revamped `EmojiPicker` component. Added functionality to `search` and `delete` emojis.

## Issue(s)	
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## How to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->
**Note:** We have a default emojis list on some places and they are composed of `['clap', 'thumbsup', 'heart_eyes', 'grinning', 'thinking', 'smiley']`
![image](https://user-images.githubusercontent.com/804994/197009898-f44ceb0b-98a4-4e22-86c4-a5a6761be3bd.png)
Once the user starts selecting emojis, the app starts to replace this default list with this `frequently used` emojis.

### Add emoji to message composer from emoji keyboard
- Tap on emoji button on left side of message composer to open emoji picker
  - select an emoji from custom emojis tab (rocket icon)
  - select an emoji from frequently used tab (clock icon) (it's based on emojis you previously selected)
  - select a normal emoji from any other tab

### Add emoji to message composer from emoji keyboard's search (clear cache before running this test)
- With emoji keyboard open, tap on search on bottom left
   - search should display default emojis at first. Select one of them and they should appear on the composer.
   - Close the search, open it again and the emoji you selected should appear first on the list (now as a frequently used)
   - Search for a custom emoji and select it
   - Search for a normal emoji and select it
   - Close the search, open it again and the list should be based on the emojis you selected

### Add emoji to message composer from autocomplete
- Focus on message composer and type `:` to open emoji autocomplete
- Select a normal and a custom one

### React a message from message actions (clear cache before this one)
- Long press on a message and it should show default emojis on the header of the bottom sheet
- Select one of them and the message should be reacted with it
- Open it again and the emoji should now appear first on the list

### React a message from reaction picker
- Long press on a message and tap on the `""smile emoji +""`  on the top right of the bottom sheet. It should open the reaction picker. Then select an emoji to react.
![image](https://user-images.githubusercontent.com/804994/197011838-514cc723-6e0c-4906-8d7b-2625e86d3ed5.png)
- On the right side of the reaction, the same icon above should appear to add another reaction. Tap on it to open the reaction picker.
- Same drill as the other tests. Try frequently used, custom emojis and the normal ones.
- Also try the search.

### Remove reaction
- Remove a reaction of a custom emoji
- Remove a reaction of a normal emoji

### Others
- Run these tests on tablets
- Check for any visual regression on avatars and markdowns

## Screenshots

|Before|After|
|-------|------|
|![emoji-picker-before1](https://user-images.githubusercontent.com/77742477/176219578-0f625744-9b9c-442b-8b83-ab5059652faf.png)|![new emoji-picker-after1](https://user-images.githubusercontent.com/77742477/179016851-0883e028-0567-4481-a89c-a16d4d13a20f.png)|
|![emoji-picker-before2](https://user-images.githubusercontent.com/77742477/176220101-45df01e8-2194-48db-acb1-5fa5386a40f0.png)|![emoji-picker-after2](https://user-images.githubusercontent.com/77742477/179017800-b36c4f9b-2354-4233-a1d7-e7f260ef719f.png)|
|![reaction-picker-before](https://user-images.githubusercontent.com/77742477/176639575-b7ea2eaf-0f88-407d-a688-156fa07c4dec.png)|![reaction-picker-after1](https://user-images.githubusercontent.com/77742477/179018235-129be146-4229-4673-bcb7-0c8a2b46e052.png)|

* ## Searching emojis:
![reaction-picker-after2](https://user-images.githubusercontent.com/77742477/179021106-37451481-bb84-4ba1-930e-e4bb622aed2c.png) ![reaction-picker-search](https://user-images.githubusercontent.com/77742477/179021116-910d60d9-8cf9-42cf-ae5e-805f48118a82.png)


https://user-images.githubusercontent.com/77742477/179019484-7d9cec0e-30ba-494b-9e94-78c846931d97.mp4


## Types of changes
<!-- What types of changes does your code introduce to Rocket.Chat? -->
<!-- Put an `x` in the boxes that apply -->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [ ] Improvement (non-breaking change which improves a current function)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Documentation update (if none of the other choices apply)

## Checklist
<!-- Put an `x` in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. -->

- [X] I have read the [CONTRIBUTING](https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat) doc
- [X] I have signed the [CLA](https://cla-assistant.io/RocketChat/Rocket.Chat.ReactNative)
- [X] Lint and unit tests pass locally with my changes
- [ ] I have added tests that prove my fix is effective or that my feature works (if applicable)
- [ ] I have added necessary documentation (if applicable)
- [ ] Any dependent changes have been merged and published in downstream modules

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
[NATIVE-109]

[NATIVE-109]: https://rocketchat.atlassian.net/browse/NATIVE-109?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",True,4328,https://api.github.com/repos/RocketChat/Rocket.Chat.ReactNative/pulls/4328,https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4328,closed,1160,827,71,97,5,92,0,0,[],2022-06-28 15:38:23+00:00,2022-10-21 18:27:56+00:00,9946173.0,"115 days, 2:49:33","[{'comment_id': 910257304, 'comment_body': '```suggestion\r\n\t\t\tkeyExtractor={item => item && item.isCustom ? item.content : item.name}\r\n```', 'comment_created': datetime.datetime(2022, 6, 29, 18, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 910259573, 'comment_body': '```suggestion\r\n\t\t\t\t\tonPress={() => goToPage?.(i)}\r\n```', 'comment_created': datetime.datetime(2022, 6, 29, 18, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 910260428, 'comment_body': '```suggestion\r\n\t\t\t\t\t<View style={activeTab === i ? [styles.activeTabLine, { backgroundColor: colors.tintColor }] : styles.tabLine} />\r\n```', 'comment_created': datetime.datetime(2022, 6, 29, 18, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 910262502, 'comment_body': ""keyExtractor doesn't work with objects"", 'comment_created': datetime.datetime(2022, 6, 29, 18, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 910375347, 'comment_body': ""This won't work for now as the non-custom emojis are plain strings."", 'comment_created': datetime.datetime(2022, 6, 29, 20, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 920127834, 'comment_body': ""Same as the comment I left on the other PR.\r\n`React.memo` is possibly making the performance worse here.\r\n`onEmojiSelected` might change over re-renders and it's an inline function, which is going to passed as a forever changing prop.\r\nIf that's true, the component is always re-rendering anyway :)"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 10, 20, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920129185, 'comment_body': 'Can you get rid of this `TouchableOpacity`?', 'comment_created': datetime.datetime(2022, 7, 13, 14, 11, 27, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920150091, 'comment_body': ""We should turn this into a component.\r\nThe way you're using (`renderEmoji()`), is a function and not a component, so React is not aware of it, it doesn't know what to expect as the result and so it needs to re-evaluate it every time.\r\nAs a component (`<EmojiSomething />`), React will be able to reconcile it, making use of the props appropriately.\r\n"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920153246, 'comment_body': 'Can you explain?', 'comment_created': datetime.datetime(2022, 7, 13, 14, 31, 20, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920154207, 'comment_body': 'These opacities are probably not working as expected on darker themes.', 'comment_created': datetime.datetime(2022, 7, 13, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920155177, 'comment_body': ""It's 24 on Figma"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920156047, 'comment_body': 'Same as the other memos', 'comment_created': datetime.datetime(2022, 7, 13, 14, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920159459, 'comment_body': 'While as a Class Component, `constructor()` is triggered only once before the component actually mounting, as a Function Component everything is triggered on render all the time.\r\nWe should evaluate this and maybe turn it either into a custom hook or make use of `useMemo`', 'comment_created': datetime.datetime(2022, 7, 13, 14, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920160958, 'comment_body': 'Can you turn this into a custom hook?\r\nYou would extract most of this logic away from the component.', 'comment_created': datetime.datetime(2022, 7, 13, 14, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920162053, 'comment_body': ""It's 44 on Figma"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920162928, 'comment_body': '44', 'comment_created': datetime.datetime(2022, 7, 13, 14, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 920163965, 'comment_body': ""Don't we have a smarter way of doing it?"", 'comment_created': datetime.datetime(2022, 7, 13, 14, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924723833, 'comment_body': 'Why would we use different button components here?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924726249, 'comment_body': ""This is where you're calling Footer.\r\n```jsx\r\n<Footer\r\n\tonSearchPressed={() => onItemClicked(EventTypes.SEARCH_PRESSED)}\r\n\tonBackspacePressed={() => onItemClicked(EventTypes.BACKSPACE_PRESSED)}\r\n/>\r\n```\r\n\r\nInline functions impact on React.memo https://dev.to/karthick30/common-react-performance-mistakes-ac4"", 'comment_created': datetime.datetime(2022, 7, 19, 16, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924726781, 'comment_body': 'Can you use the same colors of Messagebox?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924729076, 'comment_body': 'We should reuse the logic from MessageActions, which suggests common emojis in case frequently used list is empty', 'comment_created': datetime.datetime(2022, 7, 19, 16, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924731614, 'comment_body': 'This is a lot different from Figma.', 'comment_created': datetime.datetime(2022, 7, 19, 16, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924732163, 'comment_body': 'When are you using gesture handler and when pressable?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924732660, 'comment_body': 'Can you type?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924895311, 'comment_body': ""Don't use memo as default https://felixgerschau.com/react-performance-react-memo/"", 'comment_created': datetime.datetime(2022, 7, 19, 19, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924896174, 'comment_body': 'Do we need to recreate this every time or it could be a constant?', 'comment_created': datetime.datetime(2022, 7, 19, 19, 45, 13, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924901563, 'comment_body': 'Unexpected behavior.\r\n\r\nhttps://user-images.githubusercontent.com/804994/179836485-2525f011-f35d-4e36-99fc-57af78b5e651.mp4\r\n\r\n', 'comment_created': datetime.datetime(2022, 7, 19, 19, 52, 27, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924903045, 'comment_body': ""On hardware back press, it should close this.\r\nInstead it's popping the screen.\r\n\r\nhttps://user-images.githubusercontent.com/804994/179836644-a951d9ef-826a-43f8-8efa-2c0854518446.mp4\r\n\r\n"", 'comment_created': datetime.datetime(2022, 7, 19, 19, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924904868, 'comment_body': 'It should close autocomplete\r\n![Screenshot_20220719-165557_ DEBUG  RocketChat Experimental](https://user-images.githubusercontent.com/804994/179837235-bb74d995-b284-45c5-a591-cccbd5c37c19.jpg)\r\n.', 'comment_created': datetime.datetime(2022, 7, 19, 19, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924905330, 'comment_body': 'theme', 'comment_created': datetime.datetime(2022, 7, 19, 19, 57, 17, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924906135, 'comment_body': ""It shouldn't be an array."", 'comment_created': datetime.datetime(2022, 7, 19, 19, 58, 21, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 924914294, 'comment_body': 'Change it to a normal if, please.', 'comment_created': datetime.datetime(2022, 7, 19, 20, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 931498419, 'comment_body': ""```suggestion\r\n\t\t\tkeyExtractor={item => item.name}\r\n```\r\nThis here doesn't make sense, given that supposedly there will always be an emoji here and this emoji always having a name is easier like this:"", 'comment_created': datetime.datetime(2022, 7, 27, 19, 15, 55, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931500454, 'comment_body': ""```suggestion\r\nconst list = ['clock', 'rocket', 'emoji' ...];\r\n```\r\nIsn't it easier to correct the names here and make a map from this list?"", 'comment_created': datetime.datetime(2022, 7, 27, 19, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931502737, 'comment_body': 'This method is being called before being initialized.\r\nNot really a problem, but the default is set first then use.', 'comment_created': datetime.datetime(2022, 7, 27, 19, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931503743, 'comment_body': '```suggestion\r\n\t\t\t\t_addFrequentlyUsed({ content: emoji, isCustom: false });\r\n```\r\nremove the upper line', 'comment_created': datetime.datetime(2022, 7, 27, 19, 23, 7, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931509543, 'comment_body': '```suggestion\r\nconst EmojiSearchBar = React.forwardRef<TextInput, IEmojiSearchBarProps>(\r\n```', 'comment_created': datetime.datetime(2022, 7, 27, 19, 30, 39, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931511041, 'comment_body': 'This function is being used in more than one place, it is better to hook it in a separate file.', 'comment_created': datetime.datetime(2022, 7, 27, 19, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931512277, 'comment_body': ""Wouldn't it be better to put this logic inside the emoji hook?"", 'comment_created': datetime.datetime(2022, 7, 27, 19, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931513550, 'comment_body': 'This component was better to use memo or create it out of this component, because every re-render it will be created again.', 'comment_created': datetime.datetime(2022, 7, 27, 19, 35, 59, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 931518246, 'comment_body': 'This react.memo will not work properly, even more so since message is a giant object.', 'comment_created': datetime.datetime(2022, 7, 27, 19, 41, 16, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 933219958, 'comment_body': ""I thought of doing so but this logic doesn't have any relation with frequently used emojis, also we don't want this behavior at other place so maybe it would not make sense to merge the login IMO. "", 'comment_created': datetime.datetime(2022, 7, 29, 12, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 933483383, 'comment_body': 'Actually item here is not an object all the time. For non-custom emojis, item is a string and hence this logic.', 'comment_created': datetime.datetime(2022, 7, 29, 17, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 933779897, 'comment_body': ""Using category name ('custom', 'people' ...) instead of icon name ('rocker', 'emoji' ...) makes more sense IMO. Also we'll have to change the keys in `./emoji.ts` to these icon names."", 'comment_created': datetime.datetime(2022, 7, 30, 9, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 950510933, 'comment_body': ""It won't work, because `allCustomEmojis` is the dependency, but it's a non-primitive value.\r\nIt can't be compared.\r\n\r\nThis might fix what you expect\r\n```tsx\r\nconst allCustomEmojis: ICustomEmojis = useAppSelector(state => state.customEmojis, shallowEqual);\r\n```"", 'comment_created': datetime.datetime(2022, 8, 19, 19, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950511273, 'comment_body': '```suggestion\r\n\tconst addFrequentlyUsed = async (emoji: IEmoji) => {\r\n```\r\n\r\nCan you remove the `_` and the `protectedFunction`?', 'comment_created': datetime.datetime(2022, 8, 19, 19, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950511917, 'comment_body': 'Can you type this properly?', 'comment_created': datetime.datetime(2022, 8, 19, 19, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950513443, 'comment_body': ""Hooks always on top https://reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\r\n\r\nAlso, you're not using Prettier yet.\r\nPlease do it."", 'comment_created': datetime.datetime(2022, 8, 19, 19, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950513953, 'comment_body': 'Can you reuse this from MessageActions?\r\nIt could be a constant outside of both components.', 'comment_created': datetime.datetime(2022, 8, 19, 19, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950515227, 'comment_body': '40', 'comment_created': datetime.datetime(2022, 8, 19, 19, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950515329, 'comment_body': '4', 'comment_created': datetime.datetime(2022, 8, 19, 19, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950515755, 'comment_body': 'Avoid nested components', 'comment_created': datetime.datetime(2022, 8, 19, 19, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950516841, 'comment_body': ""You're on the correct path, but still not quite right.\r\nYour custom hooks is already returning the data you need.\r\nYou don't need an extra `useEffect` with `loaded` as dependency.\r\n\r\nJust use `loaded` and `frequentlyUsed` to render what you need."", 'comment_created': datetime.datetime(2022, 8, 19, 19, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 950517819, 'comment_body': 'https://tkdodo.eu/blog/avoiding-use-effect-with-callback-refs', 'comment_created': datetime.datetime(2022, 8, 19, 19, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955259483, 'comment_body': 'Although it works, this is a hack.\r\nInstead you can just use `useDimensions` and the component is going to re-render with the new value.', 'comment_created': datetime.datetime(2022, 8, 25, 17, 49, 1, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955260401, 'comment_body': 'If emoji is an object, memo is not going to do anything.', 'comment_created': datetime.datetime(2022, 8, 25, 17, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955278202, 'comment_body': 'Are you going to fix this?', 'comment_created': datetime.datetime(2022, 8, 25, 18, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955278600, 'comment_body': ""Using emojis from this list isn't updating frequently used"", 'comment_created': datetime.datetime(2022, 8, 25, 18, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955279619, 'comment_body': '![image](https://user-images.githubusercontent.com/804994/186738885-eedcb39f-f8b0-499a-b997-eb426062ce4e.png)\r\n', 'comment_created': datetime.datetime(2022, 8, 25, 18, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955280765, 'comment_body': 'Remove all static inline styles like this one', 'comment_created': datetime.datetime(2022, 8, 25, 18, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955282973, 'comment_body': 'Emojis are very small this way.\r\nWe should aim for sizes closer to 44x44.\r\nUsually, that is going to render 7~8 emojis per row.\r\nJust pay attention to how landscape and tablets behave.', 'comment_created': datetime.datetime(2022, 8, 25, 18, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 955439281, 'comment_body': 'Tried this but it was still complaining about `cannot change the number of columns on the fly` so I kept it this way.', 'comment_created': datetime.datetime(2022, 8, 25, 21, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 960839690, 'comment_body': 'You do you need `[[]]`?', 'comment_created': datetime.datetime(2022, 9, 1, 16, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960843186, 'comment_body': 'Either move this function to outside of the hook or inside `useEffect`', 'comment_created': datetime.datetime(2022, 9, 1, 16, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960845182, 'comment_body': ""I'm missing an answer here.\r\nWhy did you resolve the conversation?"", 'comment_created': datetime.datetime(2022, 9, 1, 16, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960847327, 'comment_body': ""You changed the logic here.\r\nIt used to be shortname vs custom.\r\nWhat's the difference now?"", 'comment_created': datetime.datetime(2022, 9, 1, 16, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960894812, 'comment_body': 'What happened here?', 'comment_created': datetime.datetime(2022, 9, 1, 16, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960895742, 'comment_body': ""I'm seeing you using `IEmoji | string` everywhere.\r\nYou should evaluate the correct type and work on a unification."", 'comment_created': datetime.datetime(2022, 9, 1, 16, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960896412, 'comment_body': '```suggestion\r\n\t\t<View style={styles.emojiContainer} key={key} testID={`searched-emoji-${key}`}>\r\n```', 'comment_created': datetime.datetime(2022, 9, 1, 16, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960897430, 'comment_body': ""We should unify `Emoji` component.\r\nI don't see why we should create a fragmentation for this one."", 'comment_created': datetime.datetime(2022, 9, 1, 16, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960898259, 'comment_body': 'What happened here?', 'comment_created': datetime.datetime(2022, 9, 1, 16, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960899603, 'comment_body': ""Are these styles following Figma strictly?\r\nI'm seeing several values not using multiples of 4 rule."", 'comment_created': datetime.datetime(2022, 9, 1, 16, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960900419, 'comment_body': ""You should never use debounce like this on a function component.\r\nIt won't work, because they're going to get recreated on every render."", 'comment_created': datetime.datetime(2022, 9, 1, 17, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960901725, 'comment_body': 'Not multiple of 4', 'comment_created': datetime.datetime(2022, 9, 1, 17, 1, 45, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960910977, 'comment_body': 'I did add the `shallowEqual` as you suggested. Did I miss anything?', 'comment_created': datetime.datetime(2022, 9, 1, 17, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 960911773, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2022, 9, 1, 17, 13, 22, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 960915722, 'comment_body': '40 seemed too large on android. I attached a screenshot but probably missed adding the comment. \r\n<img width=""359"" alt=""Screenshot 2022-09-01 at 10 46 27 PM"" src=""https://user-images.githubusercontent.com/77742477/187974000-ff13c197-825a-40fd-9d55-172f0f700be7.png"">\r\n\r\nI\'ll do it if you think it looks fine.', 'comment_created': datetime.datetime(2022, 9, 1, 17, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 960975225, 'comment_body': '24', 'comment_created': datetime.datetime(2022, 9, 1, 18, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960975844, 'comment_body': ""It's 36 on Figma. Can we try that? I'm ok with 32 if you want or even the same size as the other ones."", 'comment_created': datetime.datetime(2022, 9, 1, 18, 23, 33, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 960985407, 'comment_body': '32 looks good to me.', 'comment_created': datetime.datetime(2022, 9, 1, 18, 35, 45, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 961086881, 'comment_body': 'Now that `IEmoji` is either a string or an object, this logic should make more sense.', 'comment_created': datetime.datetime(2022, 9, 1, 20, 47, 19, tzinfo=datetime.timezone.utc), 'commenter': 'try-catch-stack', 'type': 'User'}, {'comment_id': 998699960, 'comment_body': ""I didn't get why server URL isn't on the snapshots anymore, but it's working on Storybook."", 'comment_created': datetime.datetime(2022, 10, 18, 20, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998702180, 'comment_body': 'Somehow FastImage started to appear on these snapshots', 'comment_created': datetime.datetime(2022, 10, 18, 20, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998734399, 'comment_body': ""In most of these snapshots, the change is FastImage wasn't rendered properly inside of Storyshots"", 'comment_created': datetime.datetime(2022, 10, 18, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998734841, 'comment_body': 'On others, the FastImage is rendered but without server', 'comment_created': datetime.datetime(2022, 10, 18, 21, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998738240, 'comment_body': 'EMOJI_BUTTON_SIZE', 'comment_created': datetime.datetime(2022, 10, 18, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998738291, 'comment_body': 'EMOJI_BUTTON_SIZE', 'comment_created': datetime.datetime(2022, 10, 18, 21, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998738321, 'comment_body': 'EMOJI_BUTTON_SIZE', 'comment_created': datetime.datetime(2022, 10, 18, 21, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998740423, 'comment_body': 'Missing ptbr', 'comment_created': datetime.datetime(2022, 10, 18, 21, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 998741164, 'comment_body': 'TGetCustomEmoji', 'comment_created': datetime.datetime(2022, 10, 18, 21, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'diegolmello', 'type': 'User'}, {'comment_id': 1001801499, 'comment_body': 'Here we are with the function being declared as a const and inside the render as an anonymous function, I think the best thing would be to declare it directly.', 'comment_created': datetime.datetime(2022, 10, 21, 13, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}, {'comment_id': 1001850872, 'comment_body': ""Since we're working on the file, I think it's worth removing the theme in the places it's being used."", 'comment_created': datetime.datetime(2022, 10, 21, 14, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'GleidsonDaniel', 'type': 'User'}]","[{'commit_sha': 'e4e977446d7d3f3beaa9c9e704df14174046bfa6', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72205e2a183ce1a235f30cd89e012c001349d0ac', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ca529c7cd402373ea54af6c6e4ebe6eb6d38289', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd44cba1b13496bb9021933e1acaaca7ab0f7b735', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39ca0aff83b91de19b4f14ba6ff6543758e5a67a', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5b57223cecf1c963916c07d87be116aad801ef7', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a3bcc8fd188f69bef0a9fd8463f0799a6cd1b0d', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a45aed0f981453ef992aaf1101e7cdd892f75e9', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cba4752da6a1396e4af3528964ce15394a111b13', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c16c65b9335b01d2b7165f5547d514793b0369f0', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58703e79686530736fc80d816355a2ee6163f12c', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c91b53d43de5655f5bcf88f37bb6b197ef26b8b', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d62f6404f766104f80acae5b78f9f939742edf5', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4333726bc01b715f91a2e59842f651c915ae7bb4', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e156234859ce1e04b49e48102f192be9c72f6751', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97333029e1f7f26e6b92ecbbca8be573af6d3e47', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '185ecafd849b747a5918acaac523932f615a54c9', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b722a6f590870dc42cce49ec96231f1744c886ce', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a51b473feb956f7430b2120eefef18d53a2e7c26', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5524d1bd3cbe18e495873d02550a497dde7ade12', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5180445b36dd98403dcadd1ee3e6cd24d9f06d1', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bbf783793fb5cea1570e2f3bdc5b42c087d1fd2', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e83d634d029a5f7015c68b0743be50e5ef69dc', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13a2bb8f9bdcdd766ab73e95f5acf74799f30e5e', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9007432d439e2c3fd18f965769af7a22e379d550', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94c0598b76158dbcd9ec5c77243d9f7e82b802a7', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15e3a15379dcffc1ab0fdac0fdb7a94a82a94a88', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '179a2edc544e51886426a6b5cf431eb4cd30ce93', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '693277d2573e79e8cb3bb8228d80624d5de16ea8', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2977f8594f88addd229f9660346413639eebbb3b', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fe1008c3e97175a274c19f6afd895b9e3ed7755', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d035eef54a5839a32da30be7e5b93b03ff5122a', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbdac59d9ee3b021d74c71e24bb478aa17cdfec4', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029c6a619c6cb7a1f4696997a2ac37816ef012d1', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '24dd939d334058174426361bd0d3e85c8a4d8e65', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '872aa89724a66266b4df379b1737d75f6c926b1f', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '071e4fbda3070c05af78125744ef6300c6d4d923', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5793dda576f96fe56cbd83bd6e145010b35472b', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2267046da86a6e295cb60943137d43a2aad0ec7f', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b48b71b410b67ec9d5b227d78a36885cf18c45a', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e32b5b7b2eb0cc5791edaf399fff4e82eb00ecf', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab51bb2fd97a70f6b323e05e7410c776fff208c9', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863e2b2c6596a87c315be2c57844f36ed9f62fd2', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bc27ae7886b7479e0aa41db6801b30af3ec8066', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb584cd995640695de466142b42c644acca5d191', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32f362e8982524f02b47c455a7b18b4a107dda3d', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8532c8daace3f36ce1a6037f063f6890bbcd341', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c4b57303a6d46ac7d42c02d026cb755f818ea64', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36df31fea27a6355ceaeca4a051ab5ac9b6c56b5', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba036d0d49809b050dc0439ec586b64ea445dc0e', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e0ae846b86948fbb283613187207ca2d3f146ea', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41d5686128bee2ffe551f8a8e685e7c304aee0da', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0676f04608a783b8505a0e7dd725b652c6c19e7', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30520b152dfa1b51a2099e6566755ea602feff39', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7c20acb3ceadbe8ad4724fd1e0b4b97940ebe4f', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd967ddf5b2d85442698620c46eddb6f9af7d1800', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b86a598059f205919ba77054df8924c9d0752d78', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd83eedb66920f18b88547a10586edb177c84fd29', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f208ae16dba1cc458fffd7dbb0dd5294bce6022', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05944cc91369e0c8aeb67d40e99a4bd9962d15ec', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0932cbf98c4923b77eb703ed4b4b5aa2227db451', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbf82de6bf11cee87dfc375ad1a4b7b5b3d8742b', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bf95a5c2d22d5c9d7d7a0ded2b70d822fe227dd', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10afd5f3b7233dbc87b091911e400232b4d0dae2', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6676e2f3d65ee13a48df8b386984bca0a2c42c7a', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d86742def95a16d6a87126f23bfa23854b77896', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dcab63dfb0701eda8a6d2ad625ab359338aec28', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7675e87a4668de6260ccb83690ca0b2e9c06598', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a021e9ea72afbd04b5885a51209d4da14e88b8', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '495cae6edbaf3cb43444c9d36eb650b04c927eaf', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcb22d0992060b6e656e3cc683458d8c92fece94', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78715280215c85daf52d4e387c895c257666ee28', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0ce95e9e1161d0f70532dd953bcb1892b4af369', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b09dd53f1c8f445de232fd6bec6f5290a29bd87f', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c491ead905c15c06306a97726291b21a298b7ea', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f4ac9962b45a861a1b8db98a08ebe95e009e59', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bca533bd9c023ca44a9da7360273247f7eaddb32', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fbda48c2ac249c1314c79c2b7f59c687130ad10', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4b3d8a8bbe8c1564f4c3b9ef806f2e0f074bf91', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adf9474e33835213ef5da3fd92a571ff3485fdb3', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bf9e76822a4236f3e9dc13e7860749851bf7812', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1674957e3f88109e9d1c6a2ba2de3727e92465e', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fa7e490c1531f8fbe07eea9a528f82800496fd0', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a174a8ff203f207c79ac85d03d8e69e8c66171e', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66cd1224197b9a8349a58b13fa56fd7d34506606', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ea1051e94a13541fd3b167ca3f6feded800e6e5', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '566a25a8a0975d2d08d0f79221856cb4496edb73', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '707b133d82e20a4be801c5f418cedd29dc2466a5', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a8176b65add7b655653c0a05b999b54d96b60f', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0397a806db0375ee2eb02412922c03aa9981416', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '532fb3c055e6782855c4d88d7c59eaf95acac479', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08f85c413a8b4373aee94d4b7f7b9005574c481a', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa11e8f25ce229bdbbc00c96fbf8661c7063ca6', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be81f691cf337ac9184ea72bd1c3c695bc84fd09', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4031dc4bb43e329b5d3a124adf41050aa681fcd0', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd58c0c3a641146c0a21263fd4487c8804e5928b9', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebce52873775618405a984eb0df19a9f52c711e', 'committer_username': 'diegolmello', 'committer_name': 'Diego Mello', 'committer_email': 'diegolmello@gmail.com', 'commit_date': datetime.datetime(2011, 5, 23, 11, 34, 31, tzinfo=datetime.timezone.utc)}]",Danish Ahmed Mirza,77742477,,User,,25,,37,31
1028024345,[IMPROVE] Migrate to `react-native-tab-view`,"<!-- This is a pull request template, you do not need to uncomment or remove the comments, they won't show up in the PR text. -->

## Proposed changes
<!-- Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue below. -->

* Migrate away from [`react-native-scrollable-tab-view`](https://github.com/ptomasroos/react-native-scrollable-tab-view) and use [`react-native-tab-view`](https://github.com/satya164/react-native-tab-view) in the EmojiPicker
* This PR is based on https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4328

## Issue(s)	
<!-- Link the issues being closed by or related to this PR. For example, you can use #594 if this PR closes issue number 594 -->

## How to test or reproduce
<!-- Mention how you would reproduce the bug if not mentioned on the issue page already. Also mention which screens are going to have the changes if applicable -->

## Screenshots

## Types of changes
<!-- What types of changes does your code introduce to Rocket.Chat? -->
<!-- Put an `x` in the boxes that apply -->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [X] Improvement (non-breaking change which improves a current function)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Documentation update (if none of the other choices apply)

## Checklist
<!-- Put an `x` in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code. -->

- [X] I have read the [CONTRIBUTING](https://github.com/RocketChat/Rocket.Chat/blob/develop/.github/CONTRIBUTING.md#contributing-to-rocketchat) doc
- [X] I have signed the [CLA](https://cla-assistant.io/RocketChat/Rocket.Chat.ReactNative)
- [X] Lint and unit tests pass locally with my changes
- [ ] I have added tests that prove my fix is effective or that my feature works (if applicable)
- [ ] I have added necessary documentation (if applicable)
- [ ] Any dependent changes have been merged and published in downstream modules

## Further comments
<!-- If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc... -->
",False,4440,https://api.github.com/repos/RocketChat/Rocket.Chat.ReactNative/pulls/4440,https://github.com/RocketChat/Rocket.Chat.ReactNative/pull/4440,open,1000,495,26,26,1,0,0,0,[],2022-08-16 20:03:30+00:00,,0.0,,[],"[{'commit_sha': '597a6836e6e6709df035a06873c76927896805f3', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '349c56ba4519c4d0d7627e5475a7ce489ac044f4', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ea57553455a3177f51f625e045ca9cf6730d408', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99db6d824d758e3399a7bcd9d0a40c32d2815a6c', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e44c3d1ffdedf985b11914c05c2a6a98681a5a8b', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9164cf0f19e561a78d70f3b0e67965a0e5c866e', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '036066cd9a16f9024c326859c77749a201f53798', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de9036edebfa881b866ea603c378a8741ba9f737', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05d8769463147e2a4049a1780221477ed2cb9dd', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28f869a80cd18be8027bf509960a001120524fd7', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4bc6a078f9855361a547a8ebc125cc53ed1ea01', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c130c0b0bff327ab62f9628b41558d976931ef4', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e014777c9e676b0bfb57ade6c0e8e0d161332762', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64afe08fe6924141289d20ccc8e60a3090f84c34', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10f074eb028d9807f1117f84e01582bd5e129cb2', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d64b262cf010747456596182f47b23c18246d7e', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '086b98f8fb7f2b91eaafb178485eee4737c2fb4d', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37ac1316185bf69547979c3c3ab4c67b2614db4c', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c43029bf0dc6f520129d0a511e6932c4b43d9b8', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9fa16977e6e95e06b089abbf587b927303f3001', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83f0edefcccbd730ea2a759a5d950db4b6bac826', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8390a4c582d45ae4384441caede174f24115f3b5', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f51a3c5dfdf54e2f73e4e42939bf9ae08fbfd81', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359171ed0364d12b86605dc4108daac12e92564f', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1658c146a035f1e947dec28b3700a080976a3c7', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c73429ff8f3d1d13aa4d3f5aa39f5f6cf0c9437', 'committer_username': 'try-catch-stack', 'committer_name': 'Danish Ahmed Mirza', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 20, 16, 8, 42, tzinfo=datetime.timezone.utc)}]",Danish Ahmed Mirza,77742477,,User,,25,,37,31

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
99262683,Rocket.Chat.ReactNative,RocketChat/Rocket.Chat.ReactNative,TypeScript,1148,1962,68,119,2774,290,176,112,"[{'id': 1028024345, 'number': 4440, 'closed': None, 'created': datetime.datetime(2022, 8, 16, 20, 3, 30, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1000, 'deletions': 495, 'state': 'open'}, {'id': 1017816719, 'number': 4409, 'closed': datetime.datetime(2022, 9, 29, 19, 42, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 17, 6, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4847711.0, 'time_delta': '56 days, 2:35:11', 'additions': 523, 'deletions': 162, 'state': 'closed'}, {'id': 989116649, 'number': 4346, 'closed': datetime.datetime(2022, 8, 3, 16, 32, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 17, 59, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2413945.0, 'time_delta': '27 days, 22:32:25', 'additions': 167, 'deletions': 184, 'state': 'closed'}, {'id': 981580059, 'number': 4328, 'closed': datetime.datetime(2022, 10, 21, 18, 27, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 15, 38, 23, tzinfo=datetime.timezone.utc), 'time_taken': 9946173.0, 'time_delta': '115 days, 2:49:33', 'additions': 1160, 'deletions': 827, 'state': 'closed'}, {'id': 966043538, 'number': 4302, 'closed': None, 'created': datetime.datetime(2022, 6, 13, 18, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 202, 'deletions': 48, 'state': 'open'}, {'id': 956296552, 'number': 4266, 'closed': None, 'created': datetime.datetime(2022, 6, 2, 19, 50, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 100, 'deletions': 22, 'state': 'open'}, {'id': 951200517, 'number': 4255, 'closed': datetime.datetime(2022, 7, 13, 19, 31, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 30, 17, 15, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3809777.0, 'time_delta': '44 days, 2:16:17', 'additions': 232, 'deletions': 212, 'state': 'closed'}, {'id': 948458331, 'number': 4223, 'closed': datetime.datetime(2022, 5, 26, 18, 13, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 16, 32, 57, tzinfo=datetime.timezone.utc), 'time_taken': 6037.0, 'time_delta': '1:40:37', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 948320703, 'number': 4221, 'closed': datetime.datetime(2022, 6, 23, 20, 19, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 14, 16, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2441009.0, 'time_delta': '28 days, 6:03:29', 'additions': 128, 'deletions': 432, 'state': 'closed'}, {'id': 939562611, 'number': 4204, 'closed': datetime.datetime(2022, 6, 10, 20, 33, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 6, 35, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2037495.0, 'time_delta': '23 days, 13:58:15', 'additions': 434, 'deletions': 101, 'state': 'closed'}, {'id': 934846884, 'number': 4193, 'closed': datetime.datetime(2022, 5, 19, 16, 53, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 12, 13, 36, 21, tzinfo=datetime.timezone.utc), 'time_taken': 616645.0, 'time_delta': '7 days, 3:17:25', 'additions': 139, 'deletions': 153, 'state': 'closed'}, {'id': 922338419, 'number': 4139, 'closed': datetime.datetime(2022, 6, 6, 15, 33, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 28, 20, 55, 48, tzinfo=datetime.timezone.utc), 'time_taken': 3350268.0, 'time_delta': '38 days, 18:37:48', 'additions': 103, 'deletions': 114, 'state': 'closed'}, {'id': 917300026, 'number': 4108, 'closed': datetime.datetime(2022, 5, 23, 18, 5, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 23, 21, 27, 20, tzinfo=datetime.timezone.utc), 'time_taken': 2579861.0, 'time_delta': '29 days, 20:37:41', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 914129228, 'number': 4073, 'closed': datetime.datetime(2022, 5, 3, 20, 15, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 20, 11, 57, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1153037.0, 'time_delta': '13 days, 8:17:17', 'additions': 55, 'deletions': 122, 'state': 'closed'}, {'id': 913821177, 'number': 4071, 'closed': datetime.datetime(2022, 5, 20, 16, 37, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 20, 6, 11, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2629603.0, 'time_delta': '30 days, 10:26:43', 'additions': 177, 'deletions': 114, 'state': 'closed'}, {'id': 901570960, 'number': 4024, 'closed': datetime.datetime(2022, 6, 6, 13, 23, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 6, 14, 17, 58, tzinfo=datetime.timezone.utc), 'time_taken': 5267152.0, 'time_delta': '60 days, 23:05:52', 'additions': 345, 'deletions': 345, 'state': 'closed'}, {'id': 881475673, 'number': 3910, 'closed': datetime.datetime(2022, 4, 13, 21, 31, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 16, 15, 12, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2441933.0, 'time_delta': '28 days, 6:18:53', 'additions': 497, 'deletions': 527, 'state': 'closed'}, {'id': 876088068, 'number': 3876, 'closed': datetime.datetime(2022, 5, 25, 18, 39, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 7, 30, 17, tzinfo=datetime.timezone.utc), 'time_taken': 6606535.0, 'time_delta': '76 days, 11:08:55', 'additions': 339, 'deletions': 9, 'state': 'closed'}, {'id': 870596657, 'number': 3810, 'closed': datetime.datetime(2022, 3, 7, 17, 55, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 3, 13, 34, 18, tzinfo=datetime.timezone.utc), 'time_taken': 361262.0, 'time_delta': '4 days, 4:21:02', 'additions': 298, 'deletions': 3540, 'state': 'closed'}, {'id': 865763642, 'number': 3784, 'closed': None, 'created': datetime.datetime(2022, 2, 27, 6, 45, 26, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3, 'deletions': 4, 'state': 'open'}, {'id': 858673293, 'number': 3762, 'closed': datetime.datetime(2022, 6, 3, 20, 7, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 19, 19, 11, 28, tzinfo=datetime.timezone.utc), 'time_taken': 8988973.0, 'time_delta': '104 days, 0:56:13', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 848093081, 'number': 3722, 'closed': datetime.datetime(2022, 6, 21, 19, 35, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 21, 32, 23, tzinfo=datetime.timezone.utc), 'time_taken': 11225009.0, 'time_delta': '129 days, 22:03:29', 'additions': 4, 'deletions': 15, 'state': 'closed'}, {'id': 845616723, 'number': 3713, 'closed': None, 'created': datetime.datetime(2022, 2, 10, 16, 46, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2, 'deletions': 2, 'state': 'open'}, {'id': 843149715, 'number': 3696, 'closed': datetime.datetime(2022, 3, 15, 19, 33, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 19, 4, 47, tzinfo=datetime.timezone.utc), 'time_taken': 3025737.0, 'time_delta': '35 days, 0:28:57', 'additions': 62, 'deletions': 1, 'state': 'closed'}, {'id': 842632272, 'number': 3694, 'closed': datetime.datetime(2022, 2, 8, 12, 47, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 10, 15, 20, tzinfo=datetime.timezone.utc), 'time_taken': 9123.0, 'time_delta': '2:32:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 842169387, 'number': 3693, 'closed': datetime.datetime(2022, 2, 8, 12, 7, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 21, 13, 14, tzinfo=datetime.timezone.utc), 'time_taken': 53637.0, 'time_delta': '14:53:57', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 840557473, 'number': 3690, 'closed': None, 'created': datetime.datetime(2022, 2, 4, 19, 42, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 16, 'deletions': 3, 'state': 'open'}, {'id': 840083960, 'number': 3689, 'closed': datetime.datetime(2022, 6, 2, 19, 53, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 4, 9, 43, 2, tzinfo=datetime.timezone.utc), 'time_taken': 10231823.0, 'time_delta': '118 days, 10:10:23', 'additions': 85, 'deletions': 9, 'state': 'closed'}, {'id': 835191923, 'number': 3670, 'closed': datetime.datetime(2022, 5, 21, 10, 26, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 29, 19, 7, 30, tzinfo=datetime.timezone.utc), 'time_taken': 9645565.0, 'time_delta': '111 days, 15:19:25', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 832417802, 'number': 3653, 'closed': datetime.datetime(2022, 3, 15, 20, 57, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 26, 13, 19, 55, tzinfo=datetime.timezone.utc), 'time_taken': 4174683.0, 'time_delta': '48 days, 7:38:03', 'additions': 129, 'deletions': 9, 'state': 'closed'}, {'id': 831697147, 'number': 3651, 'closed': datetime.datetime(2022, 5, 17, 20, 19, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 25, 17, 22, 8, tzinfo=datetime.timezone.utc), 'time_taken': 9687429.0, 'time_delta': '112 days, 2:57:09', 'additions': 28, 'deletions': 2, 'state': 'closed'}, {'id': 830263001, 'number': 3645, 'closed': datetime.datetime(2022, 2, 7, 18, 14, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 24, 11, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1235592.0, 'time_delta': '14 days, 7:13:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 828538343, 'number': 3643, 'closed': None, 'created': datetime.datetime(2022, 1, 21, 13, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 47, 'deletions': 25, 'state': 'open'}, {'id': 828228822, 'number': 3641, 'closed': datetime.datetime(2022, 2, 10, 16, 45, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 21, 6, 56, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1763323.0, 'time_delta': '20 days, 9:48:43', 'additions': 120, 'deletions': 521, 'state': 'closed'}, {'id': 827928079, 'number': 3640, 'closed': datetime.datetime(2022, 1, 21, 6, 54, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 20, 21, 8, 3, tzinfo=datetime.timezone.utc), 'time_taken': 35183.0, 'time_delta': '9:46:23', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 817042761, 'number': 3591, 'closed': datetime.datetime(2022, 1, 17, 14, 31, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 9, 14, 8, 11, tzinfo=datetime.timezone.utc), 'time_taken': 692585.0, 'time_delta': '8 days, 0:23:05', 'additions': 24, 'deletions': 2, 'state': 'closed'}]"
