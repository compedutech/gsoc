pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
415139374,FINERACT-822 Integrate Error Prone to Fineract,"## Description
Describe the changes made and why they were made. Ignore if these details are present on the associated Jira ticket: https://issues.apache.org/jira/browse/FINERACT-822

## Checklist
Please make sure these boxes are checked before submitting your pull request - thanks!

- [x] Commit message starts with the issue number from https://issues.apache.org/jira/projects/FINERACT/. Ex: FINERACT-646 Pockets API.

- [ ] Coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions have been followed.

- [ ] API documentation at https://github.com/apache/fineract/blob/develop/api-docs/apiLive.htm has been updated with details of any API changes.

- [ ] Integration tests have been created/updated for verifying the changes made.

- [ ] All Integrations tests are passing with the new commits.

- [ ] Submission is not a ""code dump"".  (Large changes can be made ""in repository"" via a branch.  Ask on the list.)

Our guidelines for code reviews is at https://cwiki.apache.org/confluence/display/FINERACT/Code+Review+Guide
",True,830,https://api.github.com/repos/apache/fineract/pulls/830,https://github.com/apache/fineract/pull/830,closed,113,12,9,1,23,20,0,0,[],2020-05-08 09:24:15+00:00,2020-05-28 18:40:37+00:00,1761382.0,"20 days, 9:16:22","[{'comment_id': 422529704, 'comment_body': '@vorburger concerning org.apache.fineract.notification.domain.Notification.setActor(Long) error prone picked this up locally', 'comment_created': datetime.datetime(2020, 5, 9, 18, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 422531950, 'comment_body': ""@percyashu nice! FYI I've also fixed this in #858 ..."", 'comment_created': datetime.datetime(2020, 5, 9, 18, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 426038837, 'comment_body': '@vorburger not sure the of the right format that was supposed to be on methods I added @SuppressWarnings(""MisuedWeekYear"") please see https://errorprone.info/bugpattern/MisusedWeekYear\r\n', 'comment_created': datetime.datetime(2020, 5, 15, 20, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 426582785, 'comment_body': '@vorburger or @awasum this looks like a test any idea why they are missing @Test.', 'comment_created': datetime.datetime(2020, 5, 18, 12, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 427647609, 'comment_body': '@percyashu I suppose someone just ""forgot"" to add `@Test` ? \r\n\r\nWhat I suggest you do is do add `@Test` for all these cases (instead of `@SuppressWarnings(""JUnit4TestNotRun"")`), and try running them. If they fail, slap an `@Ignore` on those that do fail - and then subsequently but in a later separate PR see if you can fix them (or someone else can do that, as part of future work to review all ignored tests). Sounds like a plan?', 'comment_created': datetime.datetime(2020, 5, 19, 23, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429558765, 'comment_body': ""wait waaaaat... why are we regressing on FINERACT-959 to progress with FINERACT-822? That doesn't seem right, to me - and worth a discussion...  :smiling_imp: I suspect that you may be doing this because Error Prone gives warnings? IMHO we should either fix them all, as part of this - or change EP's config to shut up about particular ones which are obviously wrong (similar to what I have done in another project, have you seen the link in FINERACT-822)...  How many are there?"", 'comment_created': datetime.datetime(2020, 5, 23, 16, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429558904, 'comment_body': '```suggestion\r\n    errorprone ""com.google.errorprone:error_prone_core:2.3.4""\r\n```', 'comment_created': datetime.datetime(2020, 5, 23, 16, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429559026, 'comment_body': ""this seems a bit suspicious to me - so this test if failing, but you are just making the response expect a validation error? Shouldn't we... fix this test, if we re-enable it, instead of cheating to get the test to pass? Re-enabling these tests could be done in a separate PR before this one, if you like (but don't have to)."", 'comment_created': datetime.datetime(2020, 5, 23, 16, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429559066, 'comment_body': 'can you raise a JIRA for the failure and then link it here using `@Ignore // TODO FINERACT-123` syntax?', 'comment_created': datetime.datetime(2020, 5, 23, 16, 18, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429559210, 'comment_body': ""this seems suspicious - are you sure suppressing this is correct, and not actually hiding a real bug? (I haven't had a closer look, I'm hoping you'll do that...) If you are completely sure, then each `@SuppressWarnings` should have an inline comment with a reasonably detailed explanation why that is the right thing to do."", 'comment_created': datetime.datetime(2020, 5, 23, 16, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429559344, 'comment_body': ""whoa whoa - slow down, the point is to FIX all problems - not to introduce a tool that tells us about problems, and then just make the tool shut up! I have not looked closely, but just a quick glance at https://errorprone.info/bugpattern/NullTernary makes it seem to me like this is trying to telly us about a real bug? As above, if it's definitely a false positive, then put a detailed analysis explanation in an inline comment..."", 'comment_created': datetime.datetime(2020, 5, 23, 16, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429565613, 'comment_body': '@vorburger thanks for the link I will configure error prone to help with the 1000 warnings. ', 'comment_created': datetime.datetime(2020, 5, 23, 17, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 429565622, 'comment_body': 'Ok will do those in seperate Pr.', 'comment_created': datetime.datetime(2020, 5, 23, 17, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 429565630, 'comment_body': 'OK will do', 'comment_created': datetime.datetime(2020, 5, 23, 17, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 429565765, 'comment_body': 'Will look more into those remaining two remaining errors and provide if it is necessary to use the @SuppressWarnings.', 'comment_created': datetime.datetime(2020, 5, 23, 17, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 430886565, 'comment_body': 'I see that you have added these so you can enable them and fix gradually rather than fixing the errors at once? Make sure you look at the issues rules you are disabling so that we dont miss catching some critical problems in the system.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 33, 48, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 431565330, 'comment_body': 'Yep these are default warning checks and will be removed from this list in separate PR', 'comment_created': datetime.datetime(2020, 5, 28, 3, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 431969800, 'comment_body': 'Lets not forget to enable some of the important rules you have disable here in future PRs.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 431970882, 'comment_body': 'if I understand you correctly, you want to chop this up into multiple PRs by enabling/uncommenting one or a few rules at a time and fixing them?', 'comment_created': datetime.datetime(2020, 5, 28, 16, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 431971357, 'comment_body': 'Yeah', 'comment_created': datetime.datetime(2020, 5, 28, 16, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}]","[{'commit_sha': 'e32cbe77e42038c878d3aac220c65b2b5816d812', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
425259103,FINERACT-822 Enable Warnings CompareToZero,FINERACT-822,True,951,https://api.github.com/repos/apache/fineract/pulls/951,https://github.com/apache/fineract/pull/951,closed,153,155,29,1,4,5,0,0,[],2020-05-29 18:26:55+00:00,2020-06-01 10:43:51+00:00,231416.0,"2 days, 16:16:56","[{'comment_id': 432905225, 'comment_body': 'Just curious of this change, @percyashu can you please tell why they mean the same thing?', 'comment_created': datetime.datetime(2020, 5, 31, 3, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'thesmallstar', 'type': 'User'}, {'comment_id': 432913542, 'comment_body': ' Always comparing to 0 is the safest use of the return value when using compareTo since the magnitude of the value return is not certain but the sign is. See https://errorprone.info/bugpattern/CompareToZero', 'comment_created': datetime.datetime(2020, 5, 31, 6, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 433130044, 'comment_body': 'This is actually ""fun""... I also had to read https://errorprone.info/bugpattern/CompareToZero - and now I understand it. What\'s really interesting and not just fun is that in N places of this PR you\'re just doing something to make EP happy, but in exactly 4 occurrences, you\'ve actually just fixed real bugs - see FINERACT-1014; thank You, Error Prone!', 'comment_created': datetime.datetime(2020, 6, 1, 9, 22, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 433177786, 'comment_body': '@percyashu ==> https://github.com/apache/fineract/pull/954', 'comment_created': datetime.datetime(2020, 6, 1, 11, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 433468888, 'comment_body': '@vorburger @percyashu this is interesting! ', 'comment_created': datetime.datetime(2020, 6, 1, 20, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'thesmallstar', 'type': 'User'}]","[{'commit_sha': 'b6fb17b701d54da6e558dd6ba632e75682837b86', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
426131251,FINERACT-822 enable ArgumentSelectionDefectChecker warning,FINERACT-822,True,961,https://api.github.com/repos/apache/fineract/pulls/961,https://github.com/apache/fineract/pull/961,closed,5,7,4,1,4,1,0,0,[],2020-06-01 18:01:24+00:00,2020-06-02 16:32:53+00:00,81089.0,22:31:29,"[{'comment_id': 433615067, 'comment_body': '@percyashu I see on https://errorprone.info/bugpattern/ArgumentSelectionDefectChecker that by default this is just a Warning. Given that this seems to fix real bugs (which you are seem to be proposing to fix in this PR? I have not looked closely at each...), should we not configure this, and every other currently disabled check as you go along, to actually be an Error instead of just a Warning?', 'comment_created': datetime.datetime(2020, 6, 2, 4, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}]","[{'commit_sha': 'f488a0e6b9a7d793575da7eef5d803c0279d37e7', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
426749018,FINERACT-822 enable variableNameSameAsType warning,FINERACT-822,True,972,https://api.github.com/repos/apache/fineract/pulls/972,https://github.com/apache/fineract/pull/972,closed,19,17,6,1,1,0,0,0,[],2020-06-02 18:10:32+00:00,2020-06-03 20:13:57+00:00,93805.0,"1 day, 2:03:25",[],"[{'commit_sha': 'f685eb7a689e644b37704f69f10823d520a0743f', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
426812152,FINERACT-822  Update and add more checks to be enabled,"FINERACT-822
",True,975,https://api.github.com/repos/apache/fineract/pulls/975,https://github.com/apache/fineract/pull/975,closed,18,2,1,2,6,1,0,0,[],2020-06-02 20:27:24+00:00,2020-06-19 09:49:00+00:00,1430496.0,"16 days, 13:21:36","[{'comment_id': 434939497, 'comment_body': 'Seems this is not a valid check, maybe a typo or maybe you meant something else and wrote something else. I can merge this once this is resolved.', 'comment_created': datetime.datetime(2020, 6, 4, 1, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'xurror', 'type': 'User'}]","[{'commit_sha': '99d46e0173a3cab1926a686c58d19ea17dbe0d87', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae5d7a333909ad947d45137f8b0f9c497d96e598', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
427496557,FINERACT-822 Enabling UnnecessaryParentheses check,"FINERACT-822
",True,979,https://api.github.com/repos/apache/fineract/pulls/979,https://github.com/apache/fineract/pull/979,closed,305,305,57,1,1,0,0,0,[],2020-06-03 22:58:44+00:00,2020-06-04 01:14:26+00:00,8142.0,2:15:42,[],"[{'commit_sha': '8334c766897a765c1b2120b0c58b4b82e372197b', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
428082998,FINERACT-822 Enabling MultiVariableDeclaration check,"FINERACT-822
",True,981,https://api.github.com/repos/apache/fineract/pulls/981,https://github.com/apache/fineract/pull/981,closed,51,24,14,2,4,0,0,0,[],2020-06-04 20:54:22+00:00,2020-06-05 09:28:01+00:00,45219.0,12:33:39,[],"[{'commit_sha': 'd7593e3f782e280288e75db7d56b8c705fe40f84', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead0249692f9f218811a250f10f08042d13d665a', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
428113313,FINERACT-822 Enabling AssertEqualsArgumentOrderChecker check,"FINERACT-822
",True,982,https://api.github.com/repos/apache/fineract/pulls/982,https://github.com/apache/fineract/pull/982,closed,28,28,12,1,1,3,0,0,[],2020-06-04 22:00:33+00:00,2020-06-05 08:10:19+00:00,36586.0,10:09:46,"[{'comment_id': 435682753, 'comment_body': ""Does this stuff also reject space separated commas. It's not a big deal I'd prefer if there is a space after the comma. Makes stuff more readable. "", 'comment_created': datetime.datetime(2020, 6, 5, 4, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'xurror', 'type': 'User'}, {'comment_id': 435711544, 'comment_body': 'Ok done that', 'comment_created': datetime.datetime(2020, 6, 5, 6, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 435758675, 'comment_body': 'Is there a need for a space here? I will just merge this.', 'comment_created': datetime.datetime(2020, 6, 5, 8, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}]","[{'commit_sha': '1b6caa135594073af44b09d3fcf8e958600d9904', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
428424329,FINERACT-822 Enabling ErrorProne error checks,"FINERACT-822
",True,983,https://api.github.com/repos/apache/fineract/pulls/983,https://github.com/apache/fineract/pull/983,closed,31,28,2,1,1,2,0,0,[],2020-06-05 12:38:24+00:00,2020-06-05 15:42:02+00:00,11018.0,3:03:38,"[{'comment_id': 436361965, 'comment_body': ""@percyashu @awasum I disagree with this, this seems wrong to me - I've raised new #997 for it.\r\n\r\nPS: I'm happy to help code review such PRs, if you would like me to."", 'comment_created': datetime.datetime(2020, 6, 7, 13, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 436378823, 'comment_body': '@vorburger . That is Ok with me to review such PRs\r\n\r\nI am looking into the points you raised wrt this merged PR.', 'comment_created': datetime.datetime(2020, 6, 7, 16, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}]","[{'commit_sha': '76b4014ff83a90b010c06c15a6953ce70026e0c3', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
429379809,FINERACT-822 enable OperatorPrecedence error,"FINERACT-822
",True,987,https://api.github.com/repos/apache/fineract/pulls/987,https://github.com/apache/fineract/pull/987,closed,46,46,11,2,3,4,0,0,[],2020-06-06 18:46:19+00:00,2020-06-08 01:32:31+00:00,110772.0,"1 day, 6:46:12","[{'comment_id': 436352278, 'comment_body': ""Wait, this looks weird to me, shouldn't this just be:\r\n\r\n```suggestion\r\n            if ((this.enabled == true && command.hasParameter(valueParamName) && this.value == 0) || (this.enabled == true\r\n                    && !command.hasParameter(valueParamName) && previousValue == 0)) { throw new ForcePasswordResetException(); }\r\n```"", 'comment_created': datetime.datetime(2020, 6, 7, 11, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 436352562, 'comment_body': ""Wouldn't this be better & clearer like this, instead:\r\n\r\n    if ((isNoneOrCashOrUpfrontAccrualAccountingEnabledOnLoanProduct()\r\n        && isMultiDisburmentLoan() && getDisbursedLoanDisbursementDetails().size() == 1) || !isMultiDisburmentLoan()) {\r\n"", 'comment_created': datetime.datetime(2020, 6, 7, 11, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 436417064, 'comment_body': 'OK will try this but the parentheses grouping might change the logic of the check', 'comment_created': datetime.datetime(2020, 6, 8, 0, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 436417144, 'comment_body': 'yeah will modify this', 'comment_created': datetime.datetime(2020, 6, 8, 0, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}]","[{'commit_sha': 'bcca51784a35342d4d0e2cc5b4c1601f292c7d2d', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4214a23a72aaf0d0a089979edfeb5c3e403e90a9', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
429401072,FINERACT-822 enable ReferenceEquality error,"FINERACT-822
",True,988,https://api.github.com/repos/apache/fineract/pulls/988,https://github.com/apache/fineract/pull/988,closed,14,13,8,1,2,2,0,0,[],2020-06-06 19:42:47+00:00,2020-06-11 20:32:38+00:00,434991.0,"5 days, 0:49:51","[{'comment_id': 439058566, 'comment_body': 'I am late again :( \r\n@percyashu  @vorburger I haven\'t seen """".equals being used before, should we not use linkAccountId.isEmpty() instead? Although it seems they mean the same thing. ', 'comment_created': datetime.datetime(2020, 6, 11, 20, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'thesmallstar', 'type': 'User'}, {'comment_id': 439091490, 'comment_body': 'that would indeed be a little nicer, yes (I merged it anyway just to move forward, and because it was a ""correct"" fix in the ""mechanical"" sense)', 'comment_created': datetime.datetime(2020, 6, 11, 21, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}]","[{'commit_sha': '42bf108276a31cccce3fab50c9812813020158a0', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
429424665,FINERACT-822 enable MissingCasesInEnumSwitch error,"FINERACT-822
",True,989,https://api.github.com/repos/apache/fineract/pulls/989,https://github.com/apache/fineract/pull/989,closed,27,5,17,1,5,0,0,0,[],2020-06-06 20:28:26+00:00,2020-06-06 21:05:43+00:00,2237.0,0:37:17,[],"[{'commit_sha': '79116f91e19b9310d5e8bd40a03b09f53ec40baa', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
430610301,FINERACT-822 enable JodaPlusMinusLong error,FINERACT-822,True,1003,https://api.github.com/repos/apache/fineract/pulls/1003,https://github.com/apache/fineract/pull/1003,closed,3,2,2,1,2,1,0,0,[],2020-06-08 02:31:30+00:00,2020-06-14 11:59:06+00:00,552456.0,"6 days, 9:27:36","[{'comment_id': 436460725, 'comment_body': 'This looks suspicious/wrong..  if the variable is called next DAY, why add ONLY 1ms to Start? \n\n@ptuomola wanna help to code review this change for correctness?', 'comment_created': datetime.datetime(2020, 6, 8, 5, 15, 33, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}]","[{'commit_sha': '44845c76b82a6bf5f134efec11fbea29c1b75b97', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
430613522,FINERACT-822 enable JdkObsolete error,FINERACT-822,True,1004,https://api.github.com/repos/apache/fineract/pulls/1004,https://github.com/apache/fineract/pull/1004,closed,7,9,4,1,3,0,0,0,[],2020-06-08 02:35:38+00:00,2020-06-08 12:07:11+00:00,34293.0,9:31:33,[],"[{'commit_sha': 'f8fbf039d76487c9170e87a8b3923d5bd788d388', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
430617302,FINERACT-822 enable EqualsGetClass error,FINERACT-822,True,1005,https://api.github.com/repos/apache/fineract/pulls/1005,https://github.com/apache/fineract/pull/1005,closed,31,31,22,2,1,0,0,0,[],2020-06-08 02:40:24+00:00,2020-06-08 05:11:45+00:00,9081.0,2:31:21,[],"[{'commit_sha': '1b6df0c75de1577fc347ca95aaebf9aa47bc3c24', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7129f0def7b3b1e11abab309787c30a1d4580bc', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
431574148,FINERACT-822 enable DoubleBraceInitialization error,"FINERACT-822
https://errorprone.info/bugpattern/DoubleBraceInitialization
",True,1014,https://api.github.com/repos/apache/fineract/pulls/1014,https://github.com/apache/fineract/pull/1014,closed,20,29,4,1,1,0,0,0,[],2020-06-09 06:49:22+00:00,2020-06-09 18:42:10+00:00,42768.0,11:52:48,[],"[{'commit_sha': '62fd8701ad3aa986c07138775a6837fb0a8c549f', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
431673389,FINERACT-822 enable ImmutableEnumChecker error,FINERACT-822,True,1018,https://api.github.com/repos/apache/fineract/pulls/1018,https://github.com/apache/fineract/pull/1018,closed,82,92,20,1,2,2,0,0,[],2020-06-09 09:51:07+00:00,2020-06-14 11:51:51+00:00,439244.0,"5 days, 2:00:44","[{'comment_id': 437294067, 'comment_body': ""Errorprone wants all fields in Enumeration to Immutable, hence Integer[] is require to be ImmutableList<Integer> and modernizer wants all ImmutableList.of to be List.of which Error prone doesn't consider as Immutable, hence had to add EntityTables to this list."", 'comment_created': datetime.datetime(2020, 6, 9, 10, 5, 31, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 439099686, 'comment_body': 'understood. Thanks for the explanation.', 'comment_created': datetime.datetime(2020, 6, 11, 22, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}]","[{'commit_sha': 'f316a7c704001a19fec28c4f7965ffcecd0bec42', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
432165708,FINERACT-822 enable UnnecessaryDefaultInEnumSwitch error,FINERACT-822,True,1022,https://api.github.com/repos/apache/fineract/pulls/1022,https://github.com/apache/fineract/pull/1022,closed,3,26,10,1,6,9,0,0,[],2020-06-10 02:41:30+00:00,2020-06-21 16:42:27+00:00,1000857.0,"11 days, 14:00:57","[{'comment_id': 439049336, 'comment_body': 'wait... wat ??  By doing this, it will ALWAYS throw, no? This will completely break. @awasum please help..', 'comment_created': datetime.datetime(2020, 6, 11, 20, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 439499975, 'comment_body': '@percyashu ..Maybe remove this exception? and put it back in the default case inside the } on line 91 above?\r\n\r\nAlso if you want to add a default step, you need to check the `ReportRunFrequency.fromId(adhoc.getReportRunFrequency()` method from line 70 above and see how many different cases needs to be treated, then try to handle them all. Do we absolutely need a default case in all implementations of Switch statement?\r\nAs seen here: https://errorprone.info/bugpattern/UnnecessaryDefaultInEnumSwitch, dont put a default statement if all the cases have been handled. Maybe skip it? Will that throw an error?\r\n\r\nOr given that ReportRunFrequency is an enum and we/Fineract is already handling all the 5 cases here, we can just throw a `new AdHocScheduledJobFrequencyException()` error here as default case with a message like ""Correct Frequency not specified, Check the API docs""... @vorburger  @ptuomola your take?', 'comment_created': datetime.datetime(2020, 6, 12, 15, 49, 26, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 439856062, 'comment_body': ""Isn't this ErrorProne check specifically highlighting switch statements where the default case is never used, because we are already handling all the cases specifically? Given that, wouldn't the right solution just be to remove the default including the throw, and not add anything? "", 'comment_created': datetime.datetime(2020, 6, 14, 18, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 439856100, 'comment_body': ""Same here - shouldn't we just remove the default case altogether, not add anything back? "", 'comment_created': datetime.datetime(2020, 6, 14, 18, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 440358264, 'comment_body': 'Is this being removed (not moved) intentional?', 'comment_created': datetime.datetime(2020, 6, 15, 18, 14, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 440365413, 'comment_body': ""It was moved to the error list in a previous PR.  Don't know how it is here (maybe during merge) so I just removed it "", 'comment_created': datetime.datetime(2020, 6, 15, 18, 27, 44, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 440371120, 'comment_body': ""@ptuomola I thought so to but it requires a return. \r\n@vorburger I thought if the case is not found, switch default is used with exception thrown and if case is not found and no default then switch is not executed then exception is thrown. That's why I did it like this. Just undid what I did and added a suppressedwarning"", 'comment_created': datetime.datetime(2020, 6, 15, 18, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 442117299, 'comment_body': 'If you have suppressed this check..Do we still need this default?', 'comment_created': datetime.datetime(2020, 6, 18, 10, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 443121844, 'comment_body': ""Was my mistake wasn't not suppose to change the exception will revert it. Yeah we need it because Error prone thinks it is not necessary since all cases are specified."", 'comment_created': datetime.datetime(2020, 6, 20, 10, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}]","[{'commit_sha': 'ab711ae085b45ae2518d812f7bcd43132cbe15a2', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
432166913,FINERACT-822 enable MissingOverride error,FINERACT-822,True,1023,https://api.github.com/repos/apache/fineract/pulls/1023,https://github.com/apache/fineract/pull/1023,closed,5,2,5,1,4,0,0,0,[],2020-06-10 02:46:07+00:00,2020-06-14 12:04:19+00:00,379092.0,"4 days, 9:18:12",[],"[{'commit_sha': 'e3a191d26961a1263e79c070bf648d8a6f33fce4', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
432654826,FINERACT-822 enable InconsistentCapitalization error,FINERACT-822,True,1036,https://api.github.com/repos/apache/fineract/pulls/1036,https://github.com/apache/fineract/pull/1036,closed,95,96,26,1,0,0,0,0,[],2020-06-10 19:28:20+00:00,2020-06-11 19:55:12+00:00,88012.0,"1 day, 0:26:52",[],"[{'commit_sha': '32e0579df1edc40385b8767e25bb88b0af46f789', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
433542419,FINERACT-822 enable BigDecimalEquals error,"FINERACT-822
https://errorprone.info/bugpattern/BigDecimalEquals",True,1046,https://api.github.com/repos/apache/fineract/pulls/1046,https://github.com/apache/fineract/pull/1046,closed,13,12,9,1,1,0,0,0,[],2020-06-12 08:31:13+00:00,2020-06-13 10:34:50+00:00,93817.0,"1 day, 2:03:37",[],"[{'commit_sha': '2be2a1ae7e8febb476bef79e1318a1a13263c550', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
433665289,FINERACT-822 enable MixedMutabilityReturnType error,"FINERACT-822
https://errorprone.info/bugpattern/MixedMutabilityReturnType",True,1048,https://api.github.com/repos/apache/fineract/pulls/1048,https://github.com/apache/fineract/pull/1048,closed,3,4,2,1,1,0,0,0,[],2020-06-12 12:59:04+00:00,2020-06-13 10:29:26+00:00,77422.0,21:30:22,[],"[{'commit_sha': '4a93e527664208ea8e401aaa416fcb8d187a8ad6', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
434099427,FINERACT-822 enable EqualsUnsafeCast error check,FINERACT-822,True,1052,https://api.github.com/repos/apache/fineract/pulls/1052,https://github.com/apache/fineract/pull/1052,closed,38,11,10,1,0,0,0,0,[],2020-06-14 05:53:34+00:00,2020-06-14 12:03:57+00:00,22223.0,6:10:23,[],"[{'commit_sha': '52e699632f3b5aa665d03b3127c771ed09ddfb81', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
434099537,FINERACT-822 enable BadImport error check,FINERACT-822,True,1053,https://api.github.com/repos/apache/fineract/pulls/1053,https://github.com/apache/fineract/pull/1053,closed,13,16,6,1,3,0,0,0,[],2020-06-14 05:54:53+00:00,2020-06-19 22:01:25+00:00,489992.0,"5 days, 16:06:32",[],"[{'commit_sha': '065d6727fa5f00596248b80a01341cc135e45069', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
435530047,FINERACT-822 Enforce StringSplitter check,FINERACT-822,True,1075,https://api.github.com/repos/apache/fineract/pulls/1075,https://github.com/apache/fineract/pull/1075,closed,148,108,28,1,2,2,0,0,[],2020-06-17 00:13:31+00:00,2020-06-19 22:08:11+00:00,251680.0,"2 days, 21:54:40","[{'comment_id': 442125309, 'comment_body': 'Why did you suppress this?', 'comment_created': datetime.datetime(2020, 6, 18, 10, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 442173825, 'comment_body': 'Using the Splitter implementation in this method causes an errors in some integration test, I looked into but wasnt making any inroads to find out what was causing this. Will create an issue on issue tracker to remove the annotation. ', 'comment_created': datetime.datetime(2020, 6, 18, 12, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}]","[{'commit_sha': '4db5b49197775ef51ad43146e738e3881bd350f5', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
436179353,FINERACT-822 Enforce SameNameButDifferent check,"FINERACT-822
https://errorprone.info/bugpattern/SameNameButDifferent",True,1083,https://api.github.com/repos/apache/fineract/pulls/1083,https://github.com/apache/fineract/pull/1083,closed,13,13,4,2,8,0,0,0,[],2020-06-18 01:45:21+00:00,2020-06-26 10:34:45+00:00,722964.0,"8 days, 8:49:24",[],"[{'commit_sha': 'd2abca1919f0ceb06a01e66ef16a58a858287d1f', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3629897e995866dc5a70a396fc91aa95a0b5c5c5', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
436764136,FINERACT-822 Enforce ClassCanBeStatic check,"FINERACT-822
https://errorprone.info/bugpattern/ClassCanBeStatic",True,1085,https://api.github.com/repos/apache/fineract/pulls/1085,https://github.com/apache/fineract/pull/1085,closed,634,634,75,1,0,0,0,0,[],2020-06-18 21:09:08+00:00,2020-06-19 13:39:04+00:00,59396.0,16:29:56,[],"[{'commit_sha': '1925ae6ad943431c39f7d1071604ef14a1082120', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
437514290,FINERACT-822 Enforce UndefinedEquals check,"FINERACT-822
https://errorprone.info/bugpattern/UndefinedEquals",True,1099,https://api.github.com/repos/apache/fineract/pulls/1099,https://github.com/apache/fineract/pull/1099,closed,66,41,14,2,1,9,0,0,[],2020-06-21 08:28:31+00:00,2020-06-23 20:36:53+00:00,216502.0,"2 days, 12:08:22","[{'comment_id': 443741923, 'comment_body': 'Just curious about this:\r\nHow is `other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE: Boolean.FALSE`\r\ndIfferent from just  `other.entryDate.compareTo(entryDate) == 0 `  (In terms of end result) of the boolean?\r\nIs it because .equals returns Boolean.TRUE and not primitive data-type boolean?', 'comment_created': datetime.datetime(2020, 6, 22, 18, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'thesmallstar', 'type': 'User'}, {'comment_id': 443744286, 'comment_body': 'very very minor suggestion, can we not keep it just !=0 (this makes it little confusing IMO).', 'comment_created': datetime.datetime(2020, 6, 22, 18, 20, 3, tzinfo=datetime.timezone.utc), 'commenter': 'thesmallstar', 'type': 'User'}, {'comment_id': 443937448, 'comment_body': 'compareTo returns an int. If values to be compared are equal, the value returned is zero.', 'comment_created': datetime.datetime(2020, 6, 23, 3, 14, 21, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 443937461, 'comment_body': 'Yeah, but I think this way is clearer. ', 'comment_created': datetime.datetime(2020, 6, 23, 3, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 444034118, 'comment_body': ""@percyashu I don't understand this... given that `entryDate` and `transactionDate` are (both) `java.util.Date`, why is `Objects.equals()` not OK? That does not match what https://errorprone.info/bugpattern/UndefinedEquals seems to be about... what am I missing?"", 'comment_created': datetime.datetime(2020, 6, 23, 7, 57, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 444114733, 'comment_body': 'Agreed, so if other.entryDate.compareTo(entryDate) == 0 is executed, then 0 == 0 returns true, which is boolean. \r\nSorry if I am confusing, I am not able to understand the need for the\r\n ```?Boolean.TRUE: Boolean.FALSE ``` part. ', 'comment_created': datetime.datetime(2020, 6, 23, 10, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'thesmallstar', 'type': 'User'}, {'comment_id': 444145876, 'comment_body': ""Error Prone kept complaining java.util.Date equals() doesn't seem to work as expected. This is because from [this](https://docs.oracle.com/javase/6/docs/api/java/util/Date.html#equals(java.lang.Object)) two Date objects are equal if and only if the getTime method returns the same long value for both."", 'comment_created': datetime.datetime(2020, 6, 23, 11, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 444152233, 'comment_body': 'This is just like a Java If statement where other.entryDate.compareTo(entryDate) == 0 is the condition, the first value Boolean.TRUE is return if the condition is true and the second value Boolean.FALSE if it is false. Could have used an If statement but this is shorter. See [this](https://www.baeldung.com/java-ternary-operator) ', 'comment_created': datetime.datetime(2020, 6, 23, 11, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 444493839, 'comment_body': '@percyashu what @thesmallstar is pointing out here, and I agree with, is that `? Boolean.TRUE: Boolean.FALSE` is not required - as he said, just `other.entryDate.compareTo(entryDate) == 0` yields exactly the same value. The difference between primitive VS non-primitive is hidden by ""auto boxing"". Do you want to raise a follow-up PR to clean this up, or ignore this?', 'comment_created': datetime.datetime(2020, 6, 23, 20, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}]","[{'commit_sha': '8d4774f559a18b18722b9553fca715d3ec883a3c', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1795825e18fa9c241068057806dcc0d547df4d5', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
439669025,FINERACT-822 Enforcing checks,"FINERACT-822
Enforce [PublicConstructorForAbstractClass](https://errorprone.info/bugpattern/PublicConstructorForAbstractClass) check 
Enforce [UnescapedEntity](https://errorprone.info/bugpattern/UnescapedEntity) check
Enforce [ModifyCollectionInEnhancedForLoop](https://errorprone.info/bugpattern/ModifyCollectionInEnhancedForLoop) check",True,1109,https://api.github.com/repos/apache/fineract/pulls/1109,https://github.com/apache/fineract/pull/1109,closed,22,16,9,3,0,0,0,0,[],2020-06-25 05:16:00+00:00,2020-06-26 10:43:46+00:00,106066.0,"1 day, 5:27:46",[],"[{'commit_sha': 'a7dada37c1bdedd1ad8a8dcf1728bdac1b2ccefa', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbbef1c6763c84848134a149b5cdeb1535f01340', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '632920fb9d8922a77fd15288b0444ec598662160', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
440961170,FINERACT-822 enabling checks,"FINERACT-822
Enforce [MutablePublicArray](https://errorprone.info/bugpattern/MutablePublicArray) check
Enforce [NonCanonicalType](https://errorprone.info/bugpattern/NonCanonicalType) check
Enforce [InvalidInlineTag](https://errorprone.info/bugpattern/InvalidInlineTag) check",True,1119,https://api.github.com/repos/apache/fineract/pulls/1119,https://github.com/apache/fineract/pull/1119,closed,28,18,10,3,0,1,0,0,[],2020-06-27 20:54:44+00:00,2020-06-29 20:28:18+00:00,171214.0,"1 day, 23:33:34","[{'comment_id': 447233139, 'comment_body': ""I'm not convinced this `copyOf()` is actually really needed here, but it doesn't really matter that much (here in a `static final` constant), so fine for me... not a reason to hold back merging this, if that's the only feedback."", 'comment_created': datetime.datetime(2020, 6, 29, 20, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}]","[{'commit_sha': '6984d7da4ab5adb8008ce20b7bc34830090fb81d', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6113e282da2f113b9c38cd194535c179a010cd9', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3790b0b51c56c0a42965dbbdb22306cdaddba584', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
441871698,FINERACT-822 Enforcing Checks,"FINERACT-822
Enforce StaticAssignmentInConstructor check
Enable ProtectedMembersInFinalClass check ",True,1131,https://api.github.com/repos/apache/fineract/pulls/1131,https://github.com/apache/fineract/pull/1131,closed,30,27,16,3,1,6,0,0,[],2020-06-30 08:35:16+00:00,2020-07-03 14:25:04+00:00,280188.0,"3 days, 5:49:48","[{'comment_id': 448239559, 'comment_body': ""@percyashu couldn't this just be removed, instead of made package local?"", 'comment_created': datetime.datetime(2020, 7, 1, 9, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 448240409, 'comment_body': ""I was quite surprised that you were able to remove this - how come? Is RestAssured's default 8443? Isn't it better to keep this explicit?"", 'comment_created': datetime.datetime(2020, 7, 1, 9, 34, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 448274655, 'comment_body': 'RestAssured.port is a static field  hence picked up by StaticAssignmentInConstructor check. \r\nI removed  that line because Utils.initializeRESTAssured() sets the port to 8443.\r\nI could try creating a method in Utils to initialize RestAssured with specific port or just revert this leave the check disabled.', 'comment_created': datetime.datetime(2020, 7, 1, 10, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 448275805, 'comment_body': 'Sure will remove them', 'comment_created': datetime.datetime(2020, 7, 1, 10, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 448686313, 'comment_body': 'I look at these and JPA requires entities to have a no-args constructo .', 'comment_created': datetime.datetime(2020, 7, 2, 0, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 448686741, 'comment_body': 'Does this makes it more explicit', 'comment_created': datetime.datetime(2020, 7, 2, 0, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}]","[{'commit_sha': 'fe275af8cf6f25243c902e27ed8e614803674df3', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7084707dec8338651b8b4f69796d967239003f8', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13474ea89fcfb31eccdf4381d60633085a9f526f', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
438286124,Checks,FINERACT-822,True,1102,https://api.github.com/repos/apache/fineract/pulls/1102,https://github.com/apache/fineract/pull/1102,closed,3,149,12,3,0,0,0,0,[],2020-06-23 03:05:32+00:00,2020-06-23 08:00:51+00:00,17719.0,4:55:19,[],"[{'commit_sha': '8190e6c09a632d691574f0142a553be0ec4a65b8', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9a22353f7b0ed8ef60ed84a66fac3835769f98d', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '715f4db5039ff9043db4bd8ba21a1d449748ecc8', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
449317171,FINERACT-826 Migrate to java.time from Joda API,"## Description
Describe the changes made and why they were made. Ignore if these details are present on the associated Jira ticket https://issues.apache.org/jira/browse/FINERACT-826

## Checklist
Please make sure these boxes are checked before submitting your pull request - thanks!

- [x] Commit message starts with the issue number from https://issues.apache.org/jira/projects/FINERACT/. Ex: FINERACT-646 Pockets API.

- [x] Coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions have been followed.

- [ ] API documentation at fineract-provider/src/main/resources/static/api-docs/apiLive.htm has been updated with details of any API changes.

- [ ] Integration tests have been created/updated for verifying the changes made.

- [x] All Integrations tests are passing with the new commits.

- [ ] Submission is not a ""code dump"".  (Large changes can be made ""in repository"" via a branch.  Ask on the list.)

Our guidelines for code reviews is at https://cwiki.apache.org/confluence/display/FINERACT/Code+Review+Guide
",True,1179,https://api.github.com/repos/apache/fineract/pulls/1179,https://github.com/apache/fineract/pull/1179,closed,2277,2010,514,1,27,16,0,0,[],2020-07-15 08:05:42+00:00,2020-10-24 21:27:01+00:00,8774479.0,"101 days, 13:21:19","[{'comment_id': 459588559, 'comment_body': ""java.time.format.DateTimeParseException is returned when LocalDateTime.parse()  is called on a Date string lacking a time portion like '23 July 2020' (dont know why convertDateTimeFrom is called instead of  convertFrom for such values). Hence added parseDefaulting for time part when it is missing. \r\nWill check for other such occurrences."", 'comment_created': datetime.datetime(2020, 7, 23, 16, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 460767490, 'comment_body': 'This test calls makeRepayment (which other Tests also call and have no issues) and it returns 500. I also used postman to test the endpoint it called and it returned successfull. ', 'comment_created': datetime.datetime(2020, 7, 27, 9, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 460768515, 'comment_body': 'Also tried the endpoint this test calls on postman and it was successful too.', 'comment_created': datetime.datetime(2020, 7, 27, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 460825741, 'comment_body': 'I wonder why these tests are failing. Is it something you added thats causing them to fail?', 'comment_created': datetime.datetime(2020, 7, 27, 11, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}, {'comment_id': 461971272, 'comment_body': 'I have resolved this.', 'comment_created': datetime.datetime(2020, 7, 29, 0, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 461971548, 'comment_body': 'Just this test left', 'comment_created': datetime.datetime(2020, 7, 29, 0, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 462776726, 'comment_body': 'Making repayment on locally running community app also work. ', 'comment_created': datetime.datetime(2020, 7, 30, 6, 51, 20, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 480722022, 'comment_body': ""Just out of interest - why was it needed to explicitly specify ZoneId? Wouldn't just calling now() have worked as before?"", 'comment_created': datetime.datetime(2020, 9, 1, 3, 44, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 480734416, 'comment_body': 'Instead of changing all of these inputs, should we not consider changing the pattern to be ""d M y"" instead? My worry would be that there may be many clients not using the leading zero. \r\n\r\nBut of course changing the pattern is not going to be error-free either as this is also being sent by the client. Can you see any way of retaining backward compatibility?', 'comment_created': datetime.datetime(2020, 9, 1, 3, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 480742701, 'comment_body': ""Why do we use a mix of LocalDate (no timezone) and ZonedDateTime (with timezone) - what's the logic here?"", 'comment_created': datetime.datetime(2020, 9, 1, 3, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 500131796, 'comment_body': ""It was just a warning from Error Prone that requires one to must  an explicit ZoneId( whether default). And I think it will be easier to replace ZoneId.systemDefault() with the tenant's timezone in another PR."", 'comment_created': datetime.datetime(2020, 10, 6, 9, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 500132405, 'comment_body': ""Can't see anyway now. But will look into this."", 'comment_created': datetime.datetime(2020, 10, 6, 9, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 500135961, 'comment_body': 'I think DateTime has timezone.', 'comment_created': datetime.datetime(2020, 10, 6, 9, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}]","[{'commit_sha': '5a88840af014254dd6bfc78fc1317ffc6a7b337b', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
421832666,FINERACT-609 TopUp,"Build from https://github.com/apache/fineract/pull/574 
## Description
Describe the changes made and why they were made. Ignore if these details are present on the associated Jira ticket  https://issues.apache.org/jira/browse/FINERACT-609

## Checklist
Please make sure these boxes are checked before submitting your pull request - thanks!

- [x] Commit message starts with the issue number from https://issues.apache.org/jira/projects/FINERACT/. Ex: FINERACT-646 Pockets API.

- [ ] Coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions have been followed.

- [ ] API documentation at fineract-provider/src/main/resources/static/api-docs/apiLive.htm has been updated with details of any API changes.

- [ ] Integration tests have been created/updated for verifying the changes made.

- [ ] All Integrations tests are passing with the new commits.

- [ ] Submission is not a ""code dump"".  (Large changes can be made ""in repository"" via a branch.  Ask on the list.)

Our guidelines for code reviews is at https://cwiki.apache.org/confluence/display/FINERACT/Code+Review+Guide
",True,924,https://api.github.com/repos/apache/fineract/pulls/924,https://github.com/apache/fineract/pull/924,closed,16,5,3,1,2,5,0,0,[],2020-05-22 10:06:11+00:00,2020-05-30 05:38:42+00:00,675151.0,"7 days, 19:32:31","[{'comment_id': 429377378, 'comment_body': ""This still doesn't seem to take the code review feedback that @vishwasbabu had provided in #574 into account?"", 'comment_created': datetime.datetime(2020, 5, 22, 17, 45, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 429396101, 'comment_body': 'From \r\n\r\n> (since you check if client ID is not null in the service method), it might introduce bugs in the future when someone tries to reuse this method. I would suggest returning only loans of type 3.\r\n\r\nI removed the conditional statement to check if client ID is null from LoanReadPlatformServiceImpl', 'comment_created': datetime.datetime(2020, 5, 22, 18, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 429407242, 'comment_body': '@vishwasbabu does this LGTY?', 'comment_created': datetime.datetime(2020, 5, 22, 18, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 431957627, 'comment_body': ""We shouldn't be removing the existing condition which checks for client loans, rather we should be adding an else if for additionally checking for group loans"", 'comment_created': datetime.datetime(2020, 5, 28, 16, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vishwasbabu', 'type': 'User'}, {'comment_id': 431960044, 'comment_body': 'I would append a clause to the effect of ""l.client_id is NULL"", this ensures that only group loans are fetched by the query all JLG loans are ignored (loans which are associated with clients and groups and fetched as a part of the retrieveClientActiveLoanAccountSummary method)', 'comment_created': datetime.datetime(2020, 5, 28, 16, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vishwasbabu', 'type': 'User'}]","[{'commit_sha': 'c1ca960acefd7d97e630915b06c6e772d984bd33', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
419442321,FINERACT-959 make javac fail for Xlint:cast,FINERACT-959,True,908,https://api.github.com/repos/apache/fineract/pulls/908,https://github.com/apache/fineract/pull/908,closed,40,40,19,1,1,0,0,0,[],2020-05-18 11:35:32+00:00,2020-05-19 22:42:21+00:00,126409.0,"1 day, 11:06:49",[],"[{'commit_sha': '8c421699617ff9ae361cdecc2c94a2060b5d49e5', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
444262322,FINERACT-1023 Update spring boot gradle plugin from v2.2.7 to v2.3.1,FINERACT-1023,True,1146,https://api.github.com/repos/apache/fineract/pulls/1146,https://github.com/apache/fineract/pull/1146,closed,3,2,2,1,2,0,0,0,[],2020-07-04 09:26:48+00:00,2020-07-05 04:42:20+00:00,69332.0,19:15:32,[],"[{'commit_sha': '64a315290fbe2c9e8c248b3641f7356ce24cb7bc', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
431574429,minor JavaDoc fix in SearchParameters,From #971,True,1015,https://api.github.com/repos/apache/fineract/pulls/1015,https://github.com/apache/fineract/pull/1015,closed,0,4,1,1,0,0,0,0,[],2020-06-09 06:50:02+00:00,2020-06-09 18:42:56+00:00,42774.0,11:52:54,[],"[{'commit_sha': 'd704483fdb506fe387c3f0e95fb884c1c5dd20de', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5
430626836,FINERACT-822 add MissingCasesInEnumSwitch,Base on changes requested in https://github.com/apache/fineract/pull/989,True,1006,https://api.github.com/repos/apache/fineract/pulls/1006,https://github.com/apache/fineract/pull/1006,closed,126,21,16,1,21,13,0,0,[],2020-06-08 02:52:09+00:00,2020-07-15 08:35:28+00:00,3217399.0,"37 days, 5:43:19","[{'comment_id': 437128369, 'comment_body': 'If you look in AccountNumberGenerator.generateAccountNumber(), it seems that we currently are not generating any prefix for SHARES type accounts. Similarly AccountNumberFormatEnumerations does not provide a prefix for SHARES accounts. So means there are currently no valid prefixes for SHARES accounts - and therefore returning an empty list (which was also existing behaviour) would seem to be the correct behaviour.\r\n\r\nTherefore to me this is therefore not a ""TODO"": returning the empty list is correct as the functionality stands. Of course we could implement account prefixes for SHARES accounts but that would not require just fixing this code, but all the other places as well...', 'comment_created': datetime.datetime(2020, 6, 9, 4, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437128625, 'comment_body': ""Same here as above - I don't think we need to log an error, I would just have a comment stating no prefixes for SHARES accounts:\r\n\r\ncase SHARES:\r\n           // SHARES accounts have no prefix\r\n          break;\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2020, 6, 9, 4, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437129848, 'comment_body': ""I wonder if this enum value is actually used for anything? I can't find any reference to it in the Fineract code. The code that processes all the other repaymentRescheduleTypeOptions (e.g. WorkingDaysUtil.getOffSetDateIfNonWorkingDay()) does not have a case or any logic for this value. "", 'comment_created': datetime.datetime(2020, 6, 9, 4, 25, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437131195, 'comment_body': ""Is there a reason why we can't just return the optionData for WHOLE_TERM just like for all the other values? "", 'comment_created': datetime.datetime(2020, 6, 9, 4, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437832237, 'comment_body': ""Looks like the whole repayment / interest rate calculation etc logic for WHOLE_TERM is missing in a number of functions. \r\n\r\nWhat we would need to work out is: is this intentional (i.e. the routines, without any handling for WHOLE_TERM, will still return the right value) or is this actually broken even now? I'd suggest trying this out e.g. through the community app to see if loan products with whole term interest actually work correctly in scenarios where these functions are called. \r\n\r\nIf they do, then the right thing to do would be to add a case that does nothing for WHOLE_TERM so we have made this behaviour explicit. If they don't work, then we should have an error message with a TO DO. "", 'comment_created': datetime.datetime(2020, 6, 10, 2, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437837556, 'comment_body': 'If you look in createNote(), you can see that we only create specific types of notes - i.e. a subset of the enum types available. So we should never get a note with one of these types. In my view, therefore I think it would be OK to have a default that returns ""INVALIDTYPE"" for any other type. ', 'comment_created': datetime.datetime(2020, 6, 10, 3, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437839268, 'comment_body': ""As far as I can see, this case should never happen: we should not have a savings account with a charge type of PERCENT_OF_DISBURSEMENT_AMOUNT, as that just doesn't make sense (and is not even valid as set in validValuesForSavings()). So the behaviour for this case in these functions should be the same as for the other values that are not valid - e.g. PERCENT_OF_AMOUNT_AND_INTEREST"", 'comment_created': datetime.datetime(2020, 6, 10, 3, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 437840457, 'comment_body': ""I don't think a lockinPeriod of WHOLE_TERM makes sense functionally - so shouldn't the behaviour for this to be the same as for period INVALID?"", 'comment_created': datetime.datetime(2020, 6, 10, 3, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 440320850, 'comment_body': ""Yeah it doesn't seems to be used anywhere. It was added by @nazeer1100126 and he might have a plan for its addition. "", 'comment_created': datetime.datetime(2020, 6, 15, 17, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 440341512, 'comment_body': 'I look into this and Loan products with whole term seem to work .', 'comment_created': datetime.datetime(2020, 6, 15, 17, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'percyashu', 'type': 'User'}, {'comment_id': 444411453, 'comment_body': ""But then should we be logging error in other places below, or do like here? isn't it inconsistent how is now?"", 'comment_created': datetime.datetime(2020, 6, 23, 18, 5, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vorburger', 'type': 'User'}, {'comment_id': 444616087, 'comment_body': 'As far as I can see, there are three options for this WHOLE_TERM logic (and other ""missing cases""):\r\n\r\n1. These functions are not needed when enum is set to WHOLE_TERM and are never called with that value (e.g. there is no need to determine max date for repayment when you are paying for the whole term in one go). In that case the logic for WHOLE_TERM is not needed in the functions and we should not log an error as there is nothing to be done.\r\n\r\n2. These functions are needed when enum is set to WHOLE_TERM and are called with that value. However the default logic - i.e. do nothing in the switch - results in the function returning the right value. If that\'s the case, then we should just make this explicit: add a case for WHOLE_TERM that does nothing, and a comment that this has been added for a reason. But no need to log an error as the ""do nothing"" behaviour is correct. \r\n\r\n3. These functions are needed when enum is set to WHOLE_TERM but the logic to handle WHOLE_TERM has not been implemented. If that\'s the case, the function is currently returning an incorrect value when called with WHOLE_TERM. We should then add the case and a log statement to output a TODO to indicate that the logic is missing.\r\n\r\nFrom response of @percyashu to my earlier question, I understood that in this case the answer is either #1 or #2 - so logging nothing is correct. But in other switch statements in the code, the answer may be #3 so logging an error / TODO would be correct. \r\n\r\nIn my view, to see if this PR is correct, we\'d need to categorise each of the switch statements to one of the above cases. I started doing that and went through them once earlier, but there are a couple of cases (like this WHOLE_TERM) where it\'s difficult to be sure just by looking at the code...', 'comment_created': datetime.datetime(2020, 6, 24, 2, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ptuomola', 'type': 'User'}, {'comment_id': 444762583, 'comment_body': 'Can this whole term case be implemented? Or is it too complicated? Can we have an issue opened for it? How will the whole term case even work?', 'comment_created': datetime.datetime(2020, 6, 24, 9, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'awasum', 'type': 'User'}]","[{'commit_sha': '8d28fd33163241f23b689463242d0ce3a7fa4247', 'committer_username': 'percyashu', 'committer_name': 'Percy Enoabane', 'committer_email': 'percyayukashu@gmail.com', 'commit_date': datetime.datetime(2018, 6, 19, 16, 47, 33, tzinfo=datetime.timezone.utc)}]",Percy Enoabane,40401381,percyayukashu@gmail.com,User,,30,,13,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
48418599,fineract,apache/fineract,Java,1574,1296,113,266,8025,35,19,35,"[{'id': 965045858, 'number': 2355, 'closed': datetime.datetime(2022, 6, 16, 7, 20, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 12, 16, 57, 20, tzinfo=datetime.timezone.utc), 'time_taken': 310978.0, 'time_delta': '3 days, 14:22:58', 'additions': 56, 'deletions': 60, 'state': 'closed'}, {'id': 740324187, 'number': 1880, 'closed': datetime.datetime(2021, 9, 22, 12, 6, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 10, 22, 58, tzinfo=datetime.timezone.utc), 'time_taken': 6219.0, 'time_delta': '1:43:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 515247313, 'number': 1493, 'closed': datetime.datetime(2020, 11, 6, 3, 19, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 4, 9, 18, 40, tzinfo=datetime.timezone.utc), 'time_taken': 151265.0, 'time_delta': '1 day, 18:01:05', 'additions': 891, 'deletions': 863, 'state': 'closed'}, {'id': 450476739, 'number': 1184, 'closed': datetime.datetime(2020, 12, 2, 0, 35, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 20, 8, 24, tzinfo=datetime.timezone.utc), 'time_taken': 11939252.0, 'time_delta': '138 days, 4:27:32', 'additions': 3, 'deletions': 7, 'state': 'closed'}, {'id': 449317171, 'number': 1179, 'closed': datetime.datetime(2020, 10, 24, 21, 27, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 8, 5, 42, tzinfo=datetime.timezone.utc), 'time_taken': 8774479.0, 'time_delta': '101 days, 13:21:19', 'additions': 2277, 'deletions': 2010, 'state': 'closed'}, {'id': 444262322, 'number': 1146, 'closed': datetime.datetime(2020, 7, 5, 4, 42, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 9, 26, 48, tzinfo=datetime.timezone.utc), 'time_taken': 69332.0, 'time_delta': '19:15:32', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 441871698, 'number': 1131, 'closed': datetime.datetime(2020, 7, 3, 14, 25, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 8, 35, 16, tzinfo=datetime.timezone.utc), 'time_taken': 280188.0, 'time_delta': '3 days, 5:49:48', 'additions': 30, 'deletions': 27, 'state': 'closed'}, {'id': 440961170, 'number': 1119, 'closed': datetime.datetime(2020, 6, 29, 20, 28, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 27, 20, 54, 44, tzinfo=datetime.timezone.utc), 'time_taken': 171214.0, 'time_delta': '1 day, 23:33:34', 'additions': 28, 'deletions': 18, 'state': 'closed'}, {'id': 439669025, 'number': 1109, 'closed': datetime.datetime(2020, 6, 26, 10, 43, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 5, 16, tzinfo=datetime.timezone.utc), 'time_taken': 106066.0, 'time_delta': '1 day, 5:27:46', 'additions': 22, 'deletions': 16, 'state': 'closed'}, {'id': 438286124, 'number': 1102, 'closed': datetime.datetime(2020, 6, 23, 8, 0, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 3, 5, 32, tzinfo=datetime.timezone.utc), 'time_taken': 17719.0, 'time_delta': '4:55:19', 'additions': 3, 'deletions': 149, 'state': 'closed'}, {'id': 437514290, 'number': 1099, 'closed': datetime.datetime(2020, 6, 23, 20, 36, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 21, 8, 28, 31, tzinfo=datetime.timezone.utc), 'time_taken': 216502.0, 'time_delta': '2 days, 12:08:22', 'additions': 66, 'deletions': 41, 'state': 'closed'}, {'id': 437378539, 'number': 1092, 'closed': datetime.datetime(2020, 6, 20, 10, 19, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 7, 26, 58, tzinfo=datetime.timezone.utc), 'time_taken': 10333.0, 'time_delta': '2:52:13', 'additions': 3, 'deletions': 6, 'state': 'closed'}, {'id': 436764136, 'number': 1085, 'closed': datetime.datetime(2020, 6, 19, 13, 39, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 18, 21, 9, 8, tzinfo=datetime.timezone.utc), 'time_taken': 59396.0, 'time_delta': '16:29:56', 'additions': 634, 'deletions': 634, 'state': 'closed'}, {'id': 436179353, 'number': 1083, 'closed': datetime.datetime(2020, 6, 26, 10, 34, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 18, 1, 45, 21, tzinfo=datetime.timezone.utc), 'time_taken': 722964.0, 'time_delta': '8 days, 8:49:24', 'additions': 13, 'deletions': 13, 'state': 'closed'}, {'id': 435530047, 'number': 1075, 'closed': datetime.datetime(2020, 6, 19, 22, 8, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 0, 13, 31, tzinfo=datetime.timezone.utc), 'time_taken': 251680.0, 'time_delta': '2 days, 21:54:40', 'additions': 148, 'deletions': 108, 'state': 'closed'}, {'id': 434099537, 'number': 1053, 'closed': datetime.datetime(2020, 6, 19, 22, 1, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 5, 54, 53, tzinfo=datetime.timezone.utc), 'time_taken': 489992.0, 'time_delta': '5 days, 16:06:32', 'additions': 13, 'deletions': 16, 'state': 'closed'}, {'id': 434099427, 'number': 1052, 'closed': datetime.datetime(2020, 6, 14, 12, 3, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 5, 53, 34, tzinfo=datetime.timezone.utc), 'time_taken': 22223.0, 'time_delta': '6:10:23', 'additions': 38, 'deletions': 11, 'state': 'closed'}, {'id': 433665289, 'number': 1048, 'closed': datetime.datetime(2020, 6, 13, 10, 29, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 12, 59, 4, tzinfo=datetime.timezone.utc), 'time_taken': 77422.0, 'time_delta': '21:30:22', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 433542419, 'number': 1046, 'closed': datetime.datetime(2020, 6, 13, 10, 34, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 8, 31, 13, tzinfo=datetime.timezone.utc), 'time_taken': 93817.0, 'time_delta': '1 day, 2:03:37', 'additions': 13, 'deletions': 12, 'state': 'closed'}, {'id': 432654826, 'number': 1036, 'closed': datetime.datetime(2020, 6, 11, 19, 55, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 19, 28, 20, tzinfo=datetime.timezone.utc), 'time_taken': 88012.0, 'time_delta': '1 day, 0:26:52', 'additions': 95, 'deletions': 96, 'state': 'closed'}, {'id': 432166913, 'number': 1023, 'closed': datetime.datetime(2020, 6, 14, 12, 4, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 2, 46, 7, tzinfo=datetime.timezone.utc), 'time_taken': 379092.0, 'time_delta': '4 days, 9:18:12', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 432165708, 'number': 1022, 'closed': datetime.datetime(2020, 6, 21, 16, 42, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 10, 2, 41, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1000857.0, 'time_delta': '11 days, 14:00:57', 'additions': 3, 'deletions': 26, 'state': 'closed'}, {'id': 431673389, 'number': 1018, 'closed': datetime.datetime(2020, 6, 14, 11, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 9, 51, 7, tzinfo=datetime.timezone.utc), 'time_taken': 439244.0, 'time_delta': '5 days, 2:00:44', 'additions': 82, 'deletions': 92, 'state': 'closed'}, {'id': 431574429, 'number': 1015, 'closed': datetime.datetime(2020, 6, 9, 18, 42, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 6, 50, 2, tzinfo=datetime.timezone.utc), 'time_taken': 42774.0, 'time_delta': '11:52:54', 'additions': 0, 'deletions': 4, 'state': 'closed'}, {'id': 431574148, 'number': 1014, 'closed': datetime.datetime(2020, 6, 9, 18, 42, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 6, 49, 22, tzinfo=datetime.timezone.utc), 'time_taken': 42768.0, 'time_delta': '11:52:48', 'additions': 20, 'deletions': 29, 'state': 'closed'}, {'id': 430626836, 'number': 1006, 'closed': datetime.datetime(2020, 7, 15, 8, 35, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 2, 52, 9, tzinfo=datetime.timezone.utc), 'time_taken': 3217399.0, 'time_delta': '37 days, 5:43:19', 'additions': 126, 'deletions': 21, 'state': 'closed'}, {'id': 430617302, 'number': 1005, 'closed': datetime.datetime(2020, 6, 8, 5, 11, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 2, 40, 24, tzinfo=datetime.timezone.utc), 'time_taken': 9081.0, 'time_delta': '2:31:21', 'additions': 31, 'deletions': 31, 'state': 'closed'}, {'id': 430613522, 'number': 1004, 'closed': datetime.datetime(2020, 6, 8, 12, 7, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 2, 35, 38, tzinfo=datetime.timezone.utc), 'time_taken': 34293.0, 'time_delta': '9:31:33', 'additions': 7, 'deletions': 9, 'state': 'closed'}, {'id': 430610301, 'number': 1003, 'closed': datetime.datetime(2020, 6, 14, 11, 59, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 2, 31, 30, tzinfo=datetime.timezone.utc), 'time_taken': 552456.0, 'time_delta': '6 days, 9:27:36', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 429424665, 'number': 989, 'closed': datetime.datetime(2020, 6, 6, 21, 5, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 20, 28, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2237.0, 'time_delta': '0:37:17', 'additions': 27, 'deletions': 5, 'state': 'closed'}, {'id': 429401072, 'number': 988, 'closed': datetime.datetime(2020, 6, 11, 20, 32, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 19, 42, 47, tzinfo=datetime.timezone.utc), 'time_taken': 434991.0, 'time_delta': '5 days, 0:49:51', 'additions': 14, 'deletions': 13, 'state': 'closed'}, {'id': 429379809, 'number': 987, 'closed': datetime.datetime(2020, 6, 8, 1, 32, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 18, 46, 19, tzinfo=datetime.timezone.utc), 'time_taken': 110772.0, 'time_delta': '1 day, 6:46:12', 'additions': 46, 'deletions': 46, 'state': 'closed'}, {'id': 428424329, 'number': 983, 'closed': datetime.datetime(2020, 6, 5, 15, 42, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 12, 38, 24, tzinfo=datetime.timezone.utc), 'time_taken': 11018.0, 'time_delta': '3:03:38', 'additions': 31, 'deletions': 28, 'state': 'closed'}, {'id': 428113313, 'number': 982, 'closed': datetime.datetime(2020, 6, 5, 8, 10, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 22, 0, 33, tzinfo=datetime.timezone.utc), 'time_taken': 36586.0, 'time_delta': '10:09:46', 'additions': 28, 'deletions': 28, 'state': 'closed'}, {'id': 428082998, 'number': 981, 'closed': datetime.datetime(2020, 6, 5, 9, 28, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 20, 54, 22, tzinfo=datetime.timezone.utc), 'time_taken': 45219.0, 'time_delta': '12:33:39', 'additions': 51, 'deletions': 24, 'state': 'closed'}, {'id': 427496557, 'number': 979, 'closed': datetime.datetime(2020, 6, 4, 1, 14, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 22, 58, 44, tzinfo=datetime.timezone.utc), 'time_taken': 8142.0, 'time_delta': '2:15:42', 'additions': 305, 'deletions': 305, 'state': 'closed'}, {'id': 426812152, 'number': 975, 'closed': datetime.datetime(2020, 6, 19, 9, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 20, 27, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1430496.0, 'time_delta': '16 days, 13:21:36', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 426749018, 'number': 972, 'closed': datetime.datetime(2020, 6, 3, 20, 13, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 18, 10, 32, tzinfo=datetime.timezone.utc), 'time_taken': 93805.0, 'time_delta': '1 day, 2:03:25', 'additions': 19, 'deletions': 17, 'state': 'closed'}, {'id': 426131251, 'number': 961, 'closed': datetime.datetime(2020, 6, 2, 16, 32, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 18, 1, 24, tzinfo=datetime.timezone.utc), 'time_taken': 81089.0, 'time_delta': '22:31:29', 'additions': 5, 'deletions': 7, 'state': 'closed'}, {'id': 425259103, 'number': 951, 'closed': datetime.datetime(2020, 6, 1, 10, 43, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 18, 26, 55, tzinfo=datetime.timezone.utc), 'time_taken': 231416.0, 'time_delta': '2 days, 16:16:56', 'additions': 153, 'deletions': 155, 'state': 'closed'}, {'id': 422310054, 'number': 930, 'closed': datetime.datetime(2020, 6, 5, 20, 29, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 18, 26, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1130614.0, 'time_delta': '13 days, 2:03:34', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 421832666, 'number': 924, 'closed': datetime.datetime(2020, 5, 30, 5, 38, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 10, 6, 11, tzinfo=datetime.timezone.utc), 'time_taken': 675151.0, 'time_delta': '7 days, 19:32:31', 'additions': 16, 'deletions': 5, 'state': 'closed'}, {'id': 419442321, 'number': 908, 'closed': datetime.datetime(2020, 5, 19, 22, 42, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 11, 35, 32, tzinfo=datetime.timezone.utc), 'time_taken': 126409.0, 'time_delta': '1 day, 11:06:49', 'additions': 40, 'deletions': 40, 'state': 'closed'}, {'id': 415139374, 'number': 830, 'closed': datetime.datetime(2020, 5, 28, 18, 40, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 8, 9, 24, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1761382.0, 'time_delta': '20 days, 9:16:22', 'additions': 113, 'deletions': 12, 'state': 'closed'}, {'id': 402359775, 'number': 755, 'closed': datetime.datetime(2020, 4, 18, 15, 37, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 15, 58, 39, tzinfo=datetime.timezone.utc), 'time_taken': 517148.0, 'time_delta': '5 days, 23:39:08', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 389563957, 'number': 736, 'closed': datetime.datetime(2020, 3, 17, 19, 53, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 17, 0, 50, 53, tzinfo=datetime.timezone.utc), 'time_taken': 68531.0, 'time_delta': '19:02:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 381944991, 'number': 715, 'closed': datetime.datetime(2020, 3, 22, 23, 54, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 29, 21, 7, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1910765.0, 'time_delta': '22 days, 2:46:05', 'additions': 179, 'deletions': 155, 'state': 'closed'}, {'id': 369917544, 'number': 707, 'closed': datetime.datetime(2020, 2, 2, 10, 36, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 1, 17, 2, 4, tzinfo=datetime.timezone.utc), 'time_taken': 63290.0, 'time_delta': '17:34:50', 'additions': 2, 'deletions': 56, 'state': 'closed'}, {'id': 368867554, 'number': 706, 'closed': datetime.datetime(2020, 1, 30, 19, 24, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 30, 3, 16, 58, tzinfo=datetime.timezone.utc), 'time_taken': 58064.0, 'time_delta': '16:07:44', 'additions': 11, 'deletions': 16, 'state': 'closed'}, {'id': 353210119, 'number': 677, 'closed': datetime.datetime(2020, 3, 5, 20, 36, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 14, 20, 26, 47, tzinfo=datetime.timezone.utc), 'time_taken': 7085365.0, 'time_delta': '82 days, 0:09:25', 'additions': 540, 'deletions': 539, 'state': 'closed'}, {'id': 353183375, 'number': 676, 'closed': datetime.datetime(2020, 3, 5, 0, 10, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 14, 15, 5, 20, tzinfo=datetime.timezone.utc), 'time_taken': 7031123.0, 'time_delta': '81 days, 9:05:23', 'additions': 33, 'deletions': 19, 'state': 'closed'}, {'id': 350455216, 'number': 668, 'closed': datetime.datetime(2019, 12, 10, 5, 38, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 8, 21, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 117002.0, 'time_delta': '1 day, 8:30:02', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 350351993, 'number': 667, 'closed': datetime.datetime(2019, 12, 8, 21, 7, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 7, 22, 7, 34, tzinfo=datetime.timezone.utc), 'time_taken': 82769.0, 'time_delta': '22:59:29', 'additions': 249, 'deletions': 249, 'state': 'closed'}, {'id': 350348032, 'number': 666, 'closed': datetime.datetime(2019, 12, 7, 21, 48, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 7, 21, 12, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2127.0, 'time_delta': '0:35:27', 'additions': 21, 'deletions': 186, 'state': 'closed'}, {'id': 347180321, 'number': 661, 'closed': datetime.datetime(2019, 12, 2, 1, 8, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 30, 0, 52, 12, tzinfo=datetime.timezone.utc), 'time_taken': 173779.0, 'time_delta': '2 days, 0:16:19', 'additions': 300, 'deletions': 260, 'state': 'closed'}]"
