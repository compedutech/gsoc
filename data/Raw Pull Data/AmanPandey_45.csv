pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1406572798,AVIF support,"Fixed https://github.com/wagtail/Willow/issues/111

## Before
![image](https://github.com/wagtail/Willow/assets/74553951/a3e9b0a6-c705-4476-bbcc-fc88a7862a29)

## After 
![image](https://github.com/wagtail/Willow/assets/74553951/95ea073a-7a65-4e80-9660-a7524872b709)


<img width=""351"" alt=""image"" src=""https://github.com/wagtail/Willow/assets/74553951/7592cd7d-b496-4edc-bf92-2814ae8e5c95"">


- [x] figure out how the  pillow heic imports functionality
- [x] figure out how Wagtial uses Pillow HEIC for to see how to copy the approach
- [x] sketch out a design or update this issue with some ideas
- [x] write an implementation for using this in a fork of Wagtail
- [x] add some tests
- [x] show example of use
- [ ] figure out how to get into this into Bakery Demo
- [ ] figure out next steps

",True,115,https://api.github.com/repos/wagtail/Willow/pulls/115,https://github.com/wagtail/Willow/pull/115,closed,221,36,11,3,16,55,3,1,"[{'name': 'enhancement'}, {'name': 'status:Needs Docs'}, {'name': 'status:Needs Work'}]",2023-06-25 09:25:48+00:00,2023-07-10 14:08:02+00:00,1312934.0,"15 days, 4:42:14","[{'comment_id': 1243161244, 'comment_body': 'I canâ€™t preview this image locally, are you sure this is a valid AVIF file?\r\n\r\nIâ€™m also surprised by the file size if this is just an AVIF encoding of the same ""tree"" visuals as we have in WebP / HEIC. Perhaps try running the WebP image through https://squoosh.app/ and get the AVIF output there instead?\r\n\r\nAnd I think itâ€™d be better to name the file `tree.avif` to match other formats.', 'comment_created': datetime.datetime(2023, 6, 27, 5, 32, 9, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243164514, 'comment_body': 'Looks like weâ€™ve been inconsistent with this for other formats â€“\xa0should we AVIF capitalised (so AVIFImageFile) or as-is @zerolab?', 'comment_created': datetime.datetime(2023, 6, 27, 5, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243166302, 'comment_body': 'It looks like `filetype` added AVIF support [relatively recently (v1.2.0)](https://github.com/h2non/filetype.py/commit/3c2b45560835040a3707d7e4d6a00e35c5820ed9), while we depend on `filetype>=1.0.10,!=1.1.0`.\r\n\r\nv1.0.10 is from Feb 2022, v1.2.0 is form November 2022: https://github.com/h2non/filetype.py/tags\r\n\r\nPerhaps we should change our dependency to `filetype>1.2.0`? Otherwise weâ€™ll have to change the implementation here so we fail gracefully if `image_types.Avif` doesnâ€™t exist.', 'comment_created': datetime.datetime(2023, 6, 27, 5, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243169612, 'comment_body': 'So looks like weâ€™ll have to replicate similar tests to https://github.com/wagtail/Willow/pull/70/files#diff-dcba0187cbf36b50c5fa239d326bbbee4a69c54ae96fd75671a0e1c405ec2e12 here.', 'comment_created': datetime.datetime(2023, 6, 27, 5, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243170293, 'comment_body': 'Should we have a test case for the save operation bellow?', 'comment_created': datetime.datetime(2023, 6, 27, 5, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243170659, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 6, 27, 5, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243183145, 'comment_body': 'Might be one for later but Iâ€™m surprised weâ€™d not make the chroma subsampling configurable ðŸ¤” I donâ€™t know whether the default is `4:2:2` or `4:2:0` but I could imagine scenarios where weâ€™d want to change it.', 'comment_created': datetime.datetime(2023, 6, 27, 6, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}, {'comment_id': 1243348884, 'comment_body': 'yea there were couple of other things that has not been mentioned in `requirements-dev.txt` as well.', 'comment_created': datetime.datetime(2023, 6, 27, 8, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1243396628, 'comment_body': 'Ditto. Viewing it in the browser works though - https://raw.githubusercontent.com/wagtail/Willow/de942c03a687d96f4dec23d6f7d3655ad86cb3dd/tests/images/tree-avif.avif\r\n\r\ncomparing the `head` output for this and tree.webp exported as avif via Squoosh\r\n\r\nthis \r\n```\r\nftypavifmif1miafhmeta!hdlrpictpitm,ilocDï¿½ï¿½uï¿½88iinfinfeav01infeav01irefauxlï¿½iprpï¿½ipcoispe@ï¿½\r\n                                                                                          av1Cï¿½?pixi\r\n                                                                                                 av1Cï¿½pix8auxCurn:mpeg:mpegB:cicp:systems:auxiliary:alphaipmaï¿½ï¿½ï¿½mdat\r\n``` \r\n\r\nSquoosh\r\n\r\n```\r\nftypavifavifmif1miafMA1Bï¿½meta(hdlrpictlibavifpitmilocD9ï¿½(iinfinfeav01ColorjiprpKipcoispe@ï¿½pixi\r\n                                                                                            av1Cï¿½\r\n                                                                                                 colrnclxï¿½ipmaï¿½9ï¿½mdat\r\n```\r\n\r\nso definitely a difference in encoding, with this image having more of the mpeg metadata', 'comment_created': datetime.datetime(2023, 6, 27, 9, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1243403620, 'comment_body': 'good suggestion', 'comment_created': datetime.datetime(2023, 6, 27, 9, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1243431829, 'comment_body': 'Having looked at a number of other prominent and widely used packages (e.g. Pillow), and the fact that the Python class naming convention recommend PascalCase, this is good.\r\n\r\nThe original classes have been like that since the very beginning and I would move towards renaming them, but that is for a separate PR', 'comment_created': datetime.datetime(2023, 6, 27, 9, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1243433366, 'comment_body': ""we don't use requirements-dev.txt any longer, so focus on setup.py (or, if #117 makes it in first, pyproject.toml)"", 'comment_created': datetime.datetime(2023, 6, 27, 9, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1243475519, 'comment_body': ""note to self: https://pillow-heif.readthedocs.io/en/latest/options.html mentions chroma=444 is to be using lossless encoding.\r\n\r\nthere's no stopping us from doing\r\n\r\n```python\r\n@Image.operation\r\ndef save_as_avif(self, f, quality=80, lossless=False, chroma: int = 420):\r\n    if lossless:\r\n        self.image.save(f, 'AVIF', quality=-1, chroma=444)\r\n    else:\r\n        self.image.save(f, 'AVIF', quality=quality, chroma=chroma)\r\n```\r\n\r\nat the same time, we will want to document some best practices on chroma and to be honest this is not something I fully understand (yet)\r\n\r\nFound https://github.com/bigcat88/pillow_heif/blob/891d3fcef08eb03066f557ccef8fdc2492fd1c40/CHANGELOG.md?plain=1#L191 which mentions 420 (`4:2:0`) is the default\r\n\r\nIt would be good to document the quality kwarg, and what the different values mean (Possible values: None, -1, range(0-100). Set -1 for lossless quality or from 0 to 100, where 0 is lowest and 100 is highest.)\r\n\r\nIf we are to support pillow-avif-plugin as an alternative to pillow-heif, then this becomes more complicated - https://github.com/fdintino/pillow-avif-plugin/blob/master/src/pillow_avif/AvifImagePlugin.py#L130-L137. The latter plugin has a corresponding PR for Pillow - https://github.com/python-pillow/Pillow/pull/5201 \r\n"", 'comment_created': datetime.datetime(2023, 6, 27, 9, 57, 51, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1244870723, 'comment_body': 'remnants of rebase/merge conflict', 'comment_created': datetime.datetime(2023, 6, 28, 8, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1244873185, 'comment_body': 'Thanks!  I see,  I would resolve them all at once with the changes.', 'comment_created': datetime.datetime(2023, 6, 28, 8, 28, 4, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1246163569, 'comment_body': 'should we go for `chroma=420` default way? then.', 'comment_created': datetime.datetime(2023, 6, 29, 6, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1246594450, 'comment_body': '```suggestion\r\n        ""filetype>=1.2.0"",\r\n```\r\n\r\n`!=1.1.0` means not 1.1.0, which is obsolete when we ask >=1.2.0', 'comment_created': datetime.datetime(2023, 6, 29, 13, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1246792227, 'comment_body': 'can you rebase on latest `main`? it drops `setup.py` in favour of `pyproject.toml`', 'comment_created': datetime.datetime(2023, 6, 29, 15, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1246820516, 'comment_body': 'nitpick: `indentically` -> `identical`', 'comment_created': datetime.datetime(2023, 6, 29, 15, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1246832136, 'comment_body': ""nitpick: since we're basing this on pillow-heif, it would be great to document what these magic values mean\r\n\r\nhttps://github.com/bigcat88/pillow_heif/blob/891d3fcef08eb03066f557ccef8fdc2492fd1c40/pillow_heif/options.py#L21-L26"", 'comment_created': datetime.datetime(2023, 6, 29, 15, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1246838729, 'comment_body': 'also, we need an entry about lossless AVIF at https://github.com/wagtail/Willow/blob/main/docs/guide/save.rst?plain=1#L49', 'comment_created': datetime.datetime(2023, 6, 29, 15, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1246840914, 'comment_body': 'I think the lossless save test for Avif is failing for some reason need to look at that as well.', 'comment_created': datetime.datetime(2023, 6, 29, 15, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1247971626, 'comment_body': '`setup.py` needs to be removed as latest `main` doesn\'t have it.\r\n\r\nThe `""filetype>=1.2.0""` bit now needs to be changed in https://github.com/wagtail/Willow/blob/main/pyproject.toml#L28', 'comment_created': datetime.datetime(2023, 6, 30, 15, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1247982119, 'comment_body': '```suggestion\r\n        with open(""tests/images/tree.avif"", ""rb"") as f:\r\n```', 'comment_created': datetime.datetime(2023, 6, 30, 15, 13, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1247983060, 'comment_body': ""this is weird I had rebased it twice since then, why didn't it get removed  automatically ; - ) "", 'comment_created': datetime.datetime(2023, 6, 30, 15, 14, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1248018966, 'comment_body': 'you can replace this with:\r\n\r\n```\r\ndiff = ImageChops.difference(original_image, lossless_image)\r\nself.assertIsNone(diff.getbbox())\r\n```\r\n\r\nand the `from PIL import ImageChops` import', 'comment_created': datetime.datetime(2023, 6, 30, 15, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1248022994, 'comment_body': ""we're missing a `save_as_avif` image operation here. Imagemagick supports AVIF via libheic. and out wand plugin does have a save_as_webp operation"", 'comment_created': datetime.datetime(2023, 6, 30, 15, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1248761478, 'comment_body': 'would this work on `WandImage` ?? I think it requires `PIL.Image`? as `lossless=true` for WebP is also failing for some reason.', 'comment_created': datetime.datetime(2023, 7, 1, 10, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1250516653, 'comment_body': '~~imagemagic~~ ImageMagick - it looks like the CamelCase variant is [the preferred spelling of the project](https://imagemagick.org/index.php). WordPress is really particular about this too, so I figured the ImageMagick folks might be too.', 'comment_created': datetime.datetime(2023, 7, 3, 8, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mrchrisadams', 'type': 'User'}, {'comment_id': 1250518223, 'comment_body': '~~deault~~ default', 'comment_created': datetime.datetime(2023, 7, 3, 8, 59, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mrchrisadams', 'type': 'User'}, {'comment_id': 1250519267, 'comment_body': 'I think the Pillow is more common, with the capital P', 'comment_created': datetime.datetime(2023, 7, 3, 8, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mrchrisadams', 'type': 'User'}, {'comment_id': 1250545875, 'comment_body': '```suggestion\r\nLossless AVIF, HEIC and WebP\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250547320, 'comment_body': '```suggestion\r\nYou can encode the image to AVIF, HEIC (Pillow-only) and WebP without any loss by setting the\r\n```\r\n\r\nnote that ImageMagick (thus Wand) supports HEIC via libheif since version 7.1.0. Opened #119 ', 'comment_created': datetime.datetime(2023, 7, 3, 9, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250550217, 'comment_body': '```suggestion\r\n    When saving with `lossless=True`, the `quality` value is set to `-1` and `chroma` to `444`.\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250551061, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""Pillow does not have AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250551304, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""Pillow does not have AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250551485, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""Pillow does not have AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250552254, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""ImageMagick was built without AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 24, 43, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250552394, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""ImageMagick was built without AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250552603, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""ImageMagick was built without AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 3, 9, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250554578, 'comment_body': 'I know you copied previous comments, but it is important to try to be correct. If you have the time and can, it would be great to update the other comments in this test file as well', 'comment_created': datetime.datetime(2023, 7, 3, 9, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250583053, 'comment_body': ""@salty-ivy where did you find this? It would be great to add inline comments for this type of options so we don't scratch our heads 6 months down the line.\r\n\r\nAs far as I can from https://github.com/ImageMagick/ImageMagick/discussions/3076, it is either 100% quality, or we need to pass `heic:lossless=true` (supported since version 7.1.0-44 or 45)"", 'comment_created': datetime.datetime(2023, 7, 3, 9, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1250929232, 'comment_body': 'we can change the docs further in that PR, would you mind if I take up that issue as well?', 'comment_created': datetime.datetime(2023, 7, 3, 13, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1251003327, 'comment_body': 'does this also support `avif` I think from https://github.com/ImageMagick/ImageMagick/pull/3116 \r\nhas this also been  supported for `avif` ?', 'comment_created': datetime.datetime(2023, 7, 3, 14, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1251004248, 'comment_body': 'I think my implementation and already existing `save_as_webp` both fails to save image in lossless form.', 'comment_created': datetime.datetime(2023, 7, 3, 14, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1251050892, 'comment_body': 'passing lossless is indeed supported as of that PR. However, the parameter is `heic:lossless` not `avif:lossless` as the plugin that offers this functionality is the HEIC plugin (https://github.com/dooman87/ImageMagick/blob/d96cef038a4c28c7f1895329edc81f01628e8c8e/coders/heic.c)', 'comment_created': datetime.datetime(2023, 7, 3, 15, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1251052248, 'comment_body': 'Happy for you to take it on, once this and the Wagtail continuation are done', 'comment_created': datetime.datetime(2023, 7, 3, 15, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1251080382, 'comment_body': 'Done,  just need to take care of these lossless test fails.', 'comment_created': datetime.datetime(2023, 7, 3, 16, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1252174595, 'comment_body': '```suggestion\r\n    @unittest.skipIf(no_avif_support, ""ImageMagick was not built with AVIF support"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 4, 15, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1252175245, 'comment_body': '```suggestion\r\n            if lossless:\r\n```\r\n\r\nsince `converted.compression_quality = quality` is set in else ;)', 'comment_created': datetime.datetime(2023, 7, 4, 15, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1252182534, 'comment_body': 'Oh man so silly of me!! alright now I understood it properly ; )', 'comment_created': datetime.datetime(2023, 7, 4, 15, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1252184496, 'comment_body': 'please re-instate this test', 'comment_created': datetime.datetime(2023, 7, 4, 15, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1252191197, 'comment_body': 'This would most likely fail.\r\n', 'comment_created': datetime.datetime(2023, 7, 4, 15, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1257295314, 'comment_body': 'Looking at pillow_heif, they admit a small variation of about 1%\r\n\r\nhttps://github.com/bigcat88/pillow_heif/blob/master/tests/write_test.py#L415-L422 and https://github.com/bigcat88/pillow_heif/blob/3798f0df6b12c19dfa8fd76dd6259b329bf88029/tests/helpers.py#L39-L48', 'comment_created': datetime.datetime(2023, 7, 8, 15, 24, 22, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}]","[{'commit_sha': '5b62f87b4eb7816030127c5a39f3c2f746757d34', 'committer_username': 'salty-ivy', 'committer_name': 'Aman Pandey', 'committer_email': 'aman2001mi@gmail.com', 'commit_date': datetime.datetime(2020, 11, 16, 15, 29, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a8ffe69c6a17bc644f453ccf9a7f3106a0e3c3f', 'committer_username': 'salty-ivy', 'committer_name': 'Aman Pandey', 'committer_email': 'aman2001mi@gmail.com', 'commit_date': datetime.datetime(2020, 11, 16, 15, 29, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fe9f80823b4fc61cd4bc1932eaefaf505060c0a', 'committer_username': 'salty-ivy', 'committer_name': 'Aman Pandey', 'committer_email': 'aman2001mi@gmail.com', 'commit_date': datetime.datetime(2020, 11, 16, 15, 29, 37, tzinfo=datetime.timezone.utc)}]",Aman Pandey,74553951,aman2001mi@gmail.com,User,,76,,95,51
1427702819,AVIF support for wagtail,"

Fixes #10486  (WIP)

### Wagtail Counter part to support `AVIF` 

#### Willow counter part
Issue: https://github.com/wagtail/Willow/issues/111
PR: https://github.com/wagtail/Willow/pull/115

Cc: @mrchrisadams @thibaudcolas @zerolab @laymonage 

-   [ ] Do the tests still pass?[^1]
-   [ ] Does the code comply with the style guide?
    -   [ ] Run `make lint` from the Wagtail root.
-   [ ] For Python changes: Have you added tests to cover the new/fixed behaviour?
-   [ ] For front-end changes: Did you test on all of Wagtailâ€™s supported environments?[^2]
    -   [ ] **Please list the exact browser and operating system versions you tested**:
    -   [ ] **Please list which assistive technologies [^3] you tested**:
-   [ ] For new features: Has the documentation been updated accordingly?

",True,10657,https://api.github.com/repos/wagtail/wagtail/pulls/10657,https://github.com/wagtail/wagtail/pull/10657,closed,183,20,13,4,5,20,5,0,"[{'name': 'type:Enhancement'}, {'name': 'component:Images'}, {'name': 'GSOC'}, {'name': 'ðŸš€ Performance'}, {'name': 'Sustainability'}]",2023-07-10 15:02:35+00:00,2023-07-14 15:17:53+00:00,346518.0,"4 days, 0:15:18","[{'comment_id': 1258458450, 'comment_body': 'We have bmp and webp set to convert to png by default (https://github.com/wagtail/wagtail/blob/32ff36446b0913c3180d23848552287726a228cc/wagtail/images/models.py#L933)\r\n\r\nLooking at https://caniuse.com/webp vs https://caniuse.com/avif, I would suggest we add AVIF to `default_conversions`, update https://github.com/wagtail/wagtail/blob/32ff36446b0913c3180d23848552287726a228cc/docs/advanced_topics/images/image_file_formats.md?plain=1#L37, and perhaps drop WebP from both places.\r\n', 'comment_created': datetime.datetime(2023, 7, 10, 15, 44, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1258463775, 'comment_body': '```suggestion\r\n        # quality=80 is default for the Willow and PIL libraries\r\n```', 'comment_created': datetime.datetime(2023, 7, 10, 15, 49, 19, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1258466477, 'comment_body': 'Given the default for Willow is 80, why not use that?\r\n\r\nhttps://github.com/wagtail/wagtail/blob/main/docs/topics/images.md?plain=1#L375-L385 needs updating with a reference to this', 'comment_created': datetime.datetime(2023, 7, 10, 15, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1258469648, 'comment_body': 'https://github.com/wagtail/wagtail/blob/main/docs/topics/images.md needs expanding similar to the [""Lossless WebP""](https://github.com/wagtail/wagtail/blob/main/docs/topics/images.md?plain=1#L343) section', 'comment_created': datetime.datetime(2023, 7, 10, 15, 54, 23, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1258475177, 'comment_body': '```suggestion\r\n                elif ""avif-quality"" in env:\r\n                    quality = env[""avif-quality""]\r\n```\r\n\r\nplus, https://github.com/wagtail/wagtail/blob/main/docs/topics/images.md?plain=1#L403-L417 needs updating', 'comment_created': datetime.datetime(2023, 7, 10, 15, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1258478753, 'comment_body': 'Please extend the `test_image_operations` with a `TestAvifQualityFilter` test case, similar to [`TestJPEGQualityFilter`](https://github.com/wagtail/wagtail/blob/32ff36446b0913c3180d23848552287726a228cc/wagtail/images/tests/test_image_operations.py#L682) or [`TestWebPQualityFilter`](https://github.com/wagtail/wagtail/blob/32ff36446b0913c3180d23848552287726a228cc/wagtail/images/tests/test_image_operations.py#L762)', 'comment_created': datetime.datetime(2023, 7, 10, 16, 2, 12, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262402808, 'comment_body': 'should I do the same for `webp` as well ?', 'comment_created': datetime.datetime(2023, 7, 13, 11, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1262415988, 'comment_body': '@salty-ivy ignore the ""drop webp"" comment here. We will do that for the next release', 'comment_created': datetime.datetime(2023, 7, 13, 11, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262420296, 'comment_body': ""Let's do it. the most common recommended acceptable value is 80 (that I could find)"", 'comment_created': datetime.datetime(2023, 7, 13, 11, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262452328, 'comment_body': '@zerolab  By adding `avif` to `default_conversions` do you mean that other format would be converted to `avif` or `avif` will also be converted to `png`? ', 'comment_created': datetime.datetime(2023, 7, 13, 11, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1262561294, 'comment_body': 'avif to png by default', 'comment_created': datetime.datetime(2023, 7, 13, 13, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262592827, 'comment_body': 'Please revert to 85. That is the default in Wagtail, and Willow (https://github.com/wagtail/Willow/blob/main/willow/plugins/pillow.py#L173)', 'comment_created': datetime.datetime(2023, 7, 13, 13, 49, 53, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262593927, 'comment_body': '```suggestion\r\n            raise ValueError(""AVIF quality must not be higher than 100"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 13, 13, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262621876, 'comment_body': '```suggestion\r\n    ""avif"": "".avif"",\r\n```', 'comment_created': datetime.datetime(2023, 7, 13, 14, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262659431, 'comment_body': 'this will fail because https://github.com/wagtail/wagtail/pull/10657/files#diff-c195bc8bd4d5a11ae02d0451edb4dd4a8e7b0014398a384a1be3ff3c355a5ee8R979 is still 85', 'comment_created': datetime.datetime(2023, 7, 13, 14, 37, 42, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262663039, 'comment_body': 'yes I noticed, will push the change with docs', 'comment_created': datetime.datetime(2023, 7, 13, 14, 40, 16, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1262714487, 'comment_body': '```suggestion\r\n        [""avif"", ""gif"", ""jpg"", ""jpeg"", ""png"", ""webp""],\r\n```\r\n\r\notherwise you get failures in tests such as `test_select_format_flag_after_upload_form_error_bad_extension`', 'comment_created': datetime.datetime(2023, 7, 13, 15, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262812741, 'comment_body': '```suggestion\r\nNote that this will have no effect on PNG or GIF files. If you want all images to be low quality, you can use this filter with `format-avif`, `format-jpeg` or `format-webp` (which forces all images to output in AVIF, JPEG or WebP format):\r\n```', 'comment_created': datetime.datetime(2023, 7, 13, 16, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'zerolab', 'type': 'User'}, {'comment_id': 1262814564, 'comment_body': 'God! this I would have never known ;-)', 'comment_created': datetime.datetime(2023, 7, 13, 16, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'salty-ivy', 'type': 'User'}, {'comment_id': 1263758461, 'comment_body': 'ðŸ¤¦ I have disabled my ""smart link paste"" IDE feature, thanks for catching this.', 'comment_created': datetime.datetime(2023, 7, 14, 13, 47, 9, tzinfo=datetime.timezone.utc), 'commenter': 'thibaudcolas', 'type': 'User'}]","[{'commit_sha': 'cfa37b6dfde262ea6d89915f0dd759f5822709c5', 'committer_username': 'salty-ivy', 'committer_name': 'Aman Pandey', 'committer_email': 'aman2001mi@gmail.com', 'commit_date': datetime.datetime(2020, 11, 16, 15, 29, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de4c71fa2b2d652911ff7e2a06e6b5e432ec9f8', 'committer_username': 'zerolab', 'committer_name': 'Dan BraghiÈ™', 'committer_email': None, 'commit_date': datetime.datetime(2008, 10, 29, 11, 56, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '179b9d667d308b11a9e7f29b0c994328312191ae', 'committer_username': 'zerolab', 'committer_name': 'Dan BraghiÈ™', 'committer_email': None, 'commit_date': datetime.datetime(2008, 10, 29, 11, 56, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3649edf5ae5a98e7f439bc452bb0659155e0ff2', 'committer_username': 'zerolab', 'committer_name': 'Dan BraghiÈ™', 'committer_email': None, 'commit_date': datetime.datetime(2008, 10, 29, 11, 56, 24, tzinfo=datetime.timezone.utc)}]",Aman Pandey,74553951,aman2001mi@gmail.com,User,,76,,95,51

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
26025182,Willow,wagtail/Willow,Python,53,272,28,34,380,19,14,4,"[{'id': 1406572798, 'number': 115, 'closed': datetime.datetime(2023, 7, 10, 14, 8, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 25, 9, 25, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1312934.0, 'time_delta': '15 days, 4:42:14', 'additions': 221, 'deletions': 36, 'state': 'closed'}]"
16479108,wagtail,wagtail/wagtail,Python,3753,17800,336,931,17770,977,54,135,"[{'id': 1691561502, 'number': 11517, 'closed': datetime.datetime(2024, 1, 23, 20, 54, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 23, 11, 26, 14, tzinfo=datetime.timezone.utc), 'time_taken': 34106.0, 'time_delta': '9:28:26', 'additions': 51, 'deletions': 5, 'state': 'closed'}, {'id': 1686253548, 'number': 11476, 'closed': datetime.datetime(2024, 1, 19, 12, 25, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 19, 7, 37, 34, tzinfo=datetime.timezone.utc), 'time_taken': 17264.0, 'time_delta': '4:47:44', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1605849239, 'number': 11250, 'closed': datetime.datetime(2024, 1, 18, 22, 48, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 17, 7, 43, 13, tzinfo=datetime.timezone.utc), 'time_taken': 5411136.0, 'time_delta': '62 days, 15:05:36', 'additions': 364, 'deletions': 144, 'state': 'closed'}, {'id': 1427702819, 'number': 10657, 'closed': datetime.datetime(2023, 7, 14, 15, 17, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 15, 2, 35, tzinfo=datetime.timezone.utc), 'time_taken': 346518.0, 'time_delta': '4 days, 0:15:18', 'additions': 183, 'deletions': 20, 'state': 'closed'}, {'id': 1317007103, 'number': 10342, 'closed': datetime.datetime(2023, 4, 26, 10, 32, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 16, 56, 12, tzinfo=datetime.timezone.utc), 'time_taken': 754582.0, 'time_delta': '8 days, 17:36:22', 'additions': 51, 'deletions': 27, 'state': 'closed'}, {'id': 1305826208, 'number': 10323, 'closed': datetime.datetime(2023, 7, 4, 15, 39, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 7, 11, 34, 17, tzinfo=datetime.timezone.utc), 'time_taken': 7617904.0, 'time_delta': '88 days, 4:05:04', 'additions': 59, 'deletions': 11, 'state': 'closed'}, {'id': 1260453014, 'number': 10182, 'closed': datetime.datetime(2023, 3, 8, 11, 35, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 2, 13, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 512019.0, 'time_delta': '5 days, 22:13:39', 'additions': 387, 'deletions': 32, 'state': 'closed'}, {'id': 1256635524, 'number': 10169, 'closed': datetime.datetime(2023, 3, 19, 10, 53, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 7, 29, 55, tzinfo=datetime.timezone.utc), 'time_taken': 1653816.0, 'time_delta': '19 days, 3:23:36', 'additions': 7, 'deletions': 41, 'state': 'closed'}, {'id': 1245640959, 'number': 10110, 'closed': datetime.datetime(2023, 2, 27, 13, 11, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 17, 19, 42, 41, tzinfo=datetime.timezone.utc), 'time_taken': 840518.0, 'time_delta': '9 days, 17:28:38', 'additions': 260, 'deletions': 48, 'state': 'closed'}, {'id': 1223294997, 'number': 9993, 'closed': datetime.datetime(2023, 2, 24, 7, 38, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 13, 31, 39, tzinfo=datetime.timezone.utc), 'time_taken': 2052415.0, 'time_delta': '23 days, 18:06:55', 'additions': 61, 'deletions': 46, 'state': 'closed'}, {'id': 1220036040, 'number': 9981, 'closed': datetime.datetime(2023, 2, 2, 11, 12, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 27, 23, 39, 8, tzinfo=datetime.timezone.utc), 'time_taken': 473582.0, 'time_delta': '5 days, 11:33:02', 'additions': 10, 'deletions': 0, 'state': 'closed'}, {'id': 1216534145, 'number': 9970, 'closed': datetime.datetime(2023, 1, 25, 13, 28, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 25, 12, 58, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1786.0, 'time_delta': '0:29:46', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1216416824, 'number': 9966, 'closed': datetime.datetime(2023, 3, 19, 11, 30, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 25, 11, 18, 44, tzinfo=datetime.timezone.utc), 'time_taken': 4579897.0, 'time_delta': '53 days, 0:11:37', 'additions': 75, 'deletions': 5, 'state': 'closed'}, {'id': 1212431753, 'number': 9934, 'closed': datetime.datetime(2023, 2, 21, 11, 48, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 21, 20, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2648648.0, 'time_delta': '30 days, 15:44:08', 'additions': 71, 'deletions': 17, 'state': 'closed'}, {'id': 1199419972, 'number': 9902, 'closed': datetime.datetime(2023, 1, 19, 10, 43, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 16, 19, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 227639.0, 'time_delta': '2 days, 15:13:59', 'additions': 19, 'deletions': 3, 'state': 'closed'}, {'id': 1190217741, 'number': 9860, 'closed': datetime.datetime(2023, 1, 30, 14, 46, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 5, 22, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1848220.0, 'time_delta': '21 days, 9:23:40', 'additions': 51, 'deletions': 8, 'state': 'closed'}, {'id': 1173261376, 'number': 9814, 'closed': datetime.datetime(2023, 1, 19, 10, 32, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 21, 7, 12, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2517551.0, 'time_delta': '29 days, 3:19:11', 'additions': 88, 'deletions': 13, 'state': 'closed'}, {'id': 1152300750, 'number': 9764, 'closed': datetime.datetime(2022, 12, 8, 14, 36, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 7, 19, 50, 51, tzinfo=datetime.timezone.utc), 'time_taken': 67523.0, 'time_delta': '18:45:23', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1136235865, 'number': 9721, 'closed': datetime.datetime(2023, 2, 21, 12, 30, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 25, 19, 10, 13, tzinfo=datetime.timezone.utc), 'time_taken': 7579206.0, 'time_delta': '87 days, 17:20:06', 'additions': 229, 'deletions': 54, 'state': 'closed'}, {'id': 1128899518, 'number': 9696, 'closed': datetime.datetime(2022, 11, 22, 21, 52, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 19, 18, 3, 18, tzinfo=datetime.timezone.utc), 'time_taken': 272946.0, 'time_delta': '3 days, 3:49:06', 'additions': 28, 'deletions': 13, 'state': 'closed'}, {'id': 1124503350, 'number': 9684, 'closed': datetime.datetime(2022, 11, 16, 13, 50, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 16, 13, 36, 7, tzinfo=datetime.timezone.utc), 'time_taken': 889.0, 'time_delta': '0:14:49', 'additions': 148, 'deletions': 85, 'state': 'closed'}, {'id': 1123002691, 'number': 9673, 'closed': datetime.datetime(2023, 12, 12, 9, 42, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 15, 14, 51, 8, tzinfo=datetime.timezone.utc), 'time_taken': 33850295.0, 'time_delta': '391 days, 18:51:35', 'additions': 149, 'deletions': 91, 'state': 'closed'}, {'id': 1107247373, 'number': 9568, 'closed': datetime.datetime(2022, 11, 10, 22, 0, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 1, 19, 49, 28, tzinfo=datetime.timezone.utc), 'time_taken': 785482.0, 'time_delta': '9 days, 2:11:22', 'additions': 70, 'deletions': 0, 'state': 'closed'}, {'id': 1102792517, 'number': 9533, 'closed': datetime.datetime(2022, 11, 20, 11, 53, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 28, 8, 31, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1999323.0, 'time_delta': '23 days, 3:22:03', 'additions': 24, 'deletions': 5, 'state': 'closed'}, {'id': 1091827277, 'number': 9423, 'closed': datetime.datetime(2022, 10, 19, 16, 46, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 6, 36, 58, tzinfo=datetime.timezone.utc), 'time_taken': 36593.0, 'time_delta': '10:09:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
