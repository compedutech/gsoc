pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
662943693,Custom theme,fixes #3 ,True,1,https://api.github.com/repos/bench-routes/dashboard/pulls/1,https://github.com/bench-routes/dashboard/pull/1,closed,63,392,14,4,3,1,0,0,[],2021-06-06 12:46:59+00:00,2021-06-13 10:32:56+00:00,596757.0,"6 days, 21:45:57","[{'comment_id': 647152825, 'comment_body': 'Separate background variables from text variables using consistent naming', 'comment_created': datetime.datetime(2021, 6, 8, 6, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}]","[{'commit_sha': '0042871c9d755e39a953e87b2df704763ef5bdc5', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08a7facfad7273099969909fb87bbce693fd6747', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba3e2ac40953accca866a85e34d76285a6016e0f', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '148752ea0bbf2e835bf8128d477101e4e4dcb93f', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
665483819,Fetch service,fixes #6 ,True,5,https://api.github.com/repos/bench-routes/dashboard/pulls/5,https://github.com/bench-routes/dashboard/pull/5,closed,112,0,3,4,14,4,0,0,[],2021-06-09 02:01:28+00:00,2021-06-16 10:46:18+00:00,636290.0,"7 days, 8:44:50","[{'comment_id': 650529142, 'comment_body': 'add comments on the requirement of the function.', 'comment_created': datetime.datetime(2021, 6, 13, 13, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 650529421, 'comment_body': 'have you tried testing the working of the function?', 'comment_created': datetime.datetime(2021, 6, 13, 13, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 650529595, 'comment_body': 'Yes, In the next pr of machine selector we are using this function and its working fine', 'comment_created': datetime.datetime(2021, 6, 13, 13, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650553731, 'comment_body': '@muskankhedia PTAL', 'comment_created': datetime.datetime(2021, 6, 13, 17, 19, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}]","[{'commit_sha': '019fdb9c7148228ba4b4b58178d0da2b310e5a5d', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46641b2325686c432fe8ee8b7cee82ab6f627566', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eeadd204e079e63071dbd34a14fd806caf0ae4a7', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50e860ce0ff38109c2ae7b86d83b7493a8c398d', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
673440066,Update README.md,Signed-off-by: ruddi <rudrakshaggarwalsachin@gmail.com>,True,10,https://api.github.com/repos/bench-routes/dashboard/pulls/10,https://github.com/bench-routes/dashboard/pull/10,closed,46,40,1,1,1,6,0,0,[],2021-06-18 12:39:34+00:00,2021-06-19 09:08:07+00:00,73713.0,20:28:33,"[{'comment_id': 654766624, 'comment_body': 'Start with Bench-routes dashboard was bootstrapped....', 'comment_created': datetime.datetime(2021, 6, 19, 8, 19, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654766779, 'comment_body': 'Bench routes dashboard is a user interface to access, visualize and introspect data curated by bench-routes(link-to-bench-routes).', 'comment_created': datetime.datetime(2021, 6, 19, 8, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654767019, 'comment_body': ""Replace with \r\n\r\n_Recommended:_ An editor with TypeScript, React, and [ESLint](https://eslint.org/) linting support(such as vscode). See for e.g. [Create React App's editor setup instructions](https://create-react-app.dev/docs/setting-up-your-editor/). Please ensure that [the editor uses the project's TypeScript version rather than its own](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-the-workspace-version-of-typescript)."", 'comment_created': datetime.datetime(2021, 6, 19, 8, 22, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654767165, 'comment_body': 'Rephrase as ""To get started with the project, you will need to install some dependencies via the yarn package manager as follows:  yarn""', 'comment_created': datetime.datetime(2021, 6, 19, 8, 24, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654767238, 'comment_body': 'This will open a browser window with the React app running on http://localhost:3000/ in ""watch"" mode i.e. the web server will reload if you make edits to the source code and you will also see any linting errors in the console.', 'comment_created': datetime.datetime(2021, 6, 19, 8, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654767318, 'comment_body': 'Add code blocks for commands i.e. wrapped within 3 quotes', 'comment_created': datetime.datetime(2021, 6, 19, 8, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}]","[{'commit_sha': 'c7b7e8ce35f1dd076472c7e8911e1d2b7f402fe4', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
669052090,Machine selector,"Add machine selector component fixes #7 

![Peek 2021-06-14 17-03](https://user-images.githubusercontent.com/56596436/121886040-8b0ee480-cd32-11eb-8ccc-b9efcf399f6f.gif)

For testing the component run yarn test also make sure to import the mockoon file ",True,8,https://api.github.com/repos/bench-routes/dashboard/pulls/8,https://github.com/bench-routes/dashboard/pull/8,closed,197,70,15,4,16,46,0,0,[],2021-06-13 13:18:02+00:00,2021-06-23 09:42:15+00:00,851053.0,"9 days, 20:24:13","[{'comment_id': 650879789, 'comment_body': 'Let\'s generate these using some external API such as ""faker"" or ""casualjs"". What do you think?', 'comment_created': datetime.datetime(2021, 6, 14, 11, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650880724, 'comment_body': 'Should be re-used from `theme`, either by defining a variable or by overriding the default ""Header"" component', 'comment_created': datetime.datetime(2021, 6, 14, 11, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650881806, 'comment_body': 'The `selectedMachine` should be a part of a general-purpose store. All variables that are needed on a global level need to stay there. What about naming the file `global.ts` and the exported object as `GlobalStore`?', 'comment_created': datetime.datetime(2021, 6, 14, 11, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650882114, 'comment_body': '~ GlobalStore.Provider', 'comment_created': datetime.datetime(2021, 6, 14, 11, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650882636, 'comment_body': ""What is this graphwrapper, do we want to pass props to the actual graph and can't we do that directly?"", 'comment_created': datetime.datetime(2021, 6, 14, 11, 59, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650883248, 'comment_body': ""should be a part of `utils/constants.ts` or a `.env` file. I'd opt for the latter (guess why?)"", 'comment_created': datetime.datetime(2021, 6, 14, 12, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650883690, 'comment_body': 'default values from `utils/constants.ts`', 'comment_created': datetime.datetime(2021, 6, 14, 12, 0, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650884000, 'comment_body': 'Add newline before this return', 'comment_created': datetime.datetime(2021, 6, 14, 12, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650884322, 'comment_body': 'use es6 arrow syntax const useMachine = () => {}', 'comment_created': datetime.datetime(2021, 6, 14, 12, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650884862, 'comment_body': ""I didn't get the intention behind this file here, maybe add a comment"", 'comment_created': datetime.datetime(2021, 6, 14, 12, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650885131, 'comment_body': 'should be a part of #5', 'comment_created': datetime.datetime(2021, 6, 14, 12, 3, 12, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650896008, 'comment_body': 'So do you wish to have a single provider?', 'comment_created': datetime.datetime(2021, 6, 14, 12, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650897042, 'comment_body': 'That will not be a good idea I think if we have a single provider and we are using only one of its property and some other property changes then all the consumers will re-render\r\n', 'comment_created': datetime.datetime(2021, 6, 14, 12, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650898178, 'comment_body': 'Actually, graph wrapper is the parent component of the graph side as we might want to add some more components on that side in future so for easy scalability I used this structure', 'comment_created': datetime.datetime(2021, 6, 14, 12, 23, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650898953, 'comment_body': 'Ohh forgot to add the comment here thanks for pointing it out', 'comment_created': datetime.datetime(2021, 6, 14, 12, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650899320, 'comment_body': 'It is I will rebase this once the old or is merged', 'comment_created': datetime.datetime(2021, 6, 14, 12, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650900041, 'comment_body': 'of course not. the stuff needed for the application on a global level goes into this store, you can store user details such as username, profile, etc in a user store. the idea is to group similar datasets and discard dissimilar ones', 'comment_created': datetime.datetime(2021, 6, 14, 12, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650901031, 'comment_body': 'we need to keep in mind to render a loading... before the graph actually loads or re renders. we can also try a useLayoutEffect or suspense, idk ', 'comment_created': datetime.datetime(2021, 6, 14, 12, 27, 28, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650901085, 'comment_body': 'Actually, wasn\'t able to override this property along with \r\n\r\n> @ruddi10 It\'s time we learnt to make cleaner contributions, I\'d like you to organise these 8 commits into <4-5, each commit describes a unit of work. For example, 1* commit for tests saying ""set up unit tests<with_a_rocket_emoji>"", 1* commit for creating the store saying ""initialises global store"", etc.\r\n\r\n\r\n\r\n> @ruddi10 It\'s time we learnt to make cleaner contributions, I\'d like you to organise these 8 commits into <4-5, each commit describes a unit of work. For example, 1* commit for tests saying ""set up unit tests<with_a_rocket_emoji>"", 1* commit for creating the store saying ""initialises global store"", etc.\r\n\r\n\r\n\r\n> @ruddi10 It\'s time we learnt to make cleaner contributions, I\'d like you to organise these 8 commits into <4-5, each commit describes a unit of work. For example, 1* commit for tests saying ""set up unit tests<with_a_rocket_emoji>"", 1* commit for creating the store saying ""initialises global store"", etc.\r\n\r\n@aquibbaig actually this or has only 4 commits the other 4 are of the fetch service the commit history will be fixed once we get that one merged and I rebase this', 'comment_created': datetime.datetime(2021, 6, 14, 12, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650906235, 'comment_body': ""Actually this machine is required in 2 components so I don't think putting it in global store is a good idea what do you think"", 'comment_created': datetime.datetime(2021, 6, 14, 12, 34, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650907384, 'comment_body': ""> of course not. the stuff needed for the application on a global level goes into this store, you can store user details such as username, profile, etc in a user store. the idea is to group similar datasets and discard dissimilar ones\r\n\r\nCurrently we don't have any such data I suppose "", 'comment_created': datetime.datetime(2021, 6, 14, 12, 36, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650907499, 'comment_body': 'i do not think it will be a problem, the global store wraps around the app globally and re-renders only the consumers. so you can use it anywhere inside the component tree ', 'comment_created': datetime.datetime(2021, 6, 14, 12, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650908678, 'comment_body': 'Also, ""machine store"" seems too generic for the application, we also should make sure we do not create individual containers for ""every"" variable', 'comment_created': datetime.datetime(2021, 6, 14, 12, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 650915304, 'comment_body': 'That will defeat the purpose of using mocking as one of the benefits I thought was that unit test should be free from external dependencies making it both faster as well as less prone to show wrong results (say the external dependency is down or something) what are your thoughts', 'comment_created': datetime.datetime(2021, 6, 14, 12, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 650916147, 'comment_body': 'I think we just need some simple samples for unit tests that will be efficient and less prone to wrong results due to failure of some external dependemcy', 'comment_created': datetime.datetime(2021, 6, 14, 12, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 654264849, 'comment_body': 'Please try to maintain adding a new line at the end of the file.', 'comment_created': datetime.datetime(2021, 6, 18, 8, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 654788466, 'comment_body': 'machines && machines.map', 'comment_created': datetime.datetime(2021, 6, 19, 12, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654788476, 'comment_body': '!error && ...', 'comment_created': datetime.datetime(2021, 6, 19, 12, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654788571, 'comment_body': 'This looks good, I will have a look at the testing framework tonight', 'comment_created': datetime.datetime(2021, 6, 19, 12, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654788614, 'comment_body': 'fakeMachines -> mockMachineURLs', 'comment_created': datetime.datetime(2021, 6, 19, 12, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654788773, 'comment_body': 'useState(): provide a type for the state', 'comment_created': datetime.datetime(2021, 6, 19, 12, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654788938, 'comment_body': 'export default {\r\n  defaultSelectedMachine: ""localhost"",\r\n  ...other constants\r\n}', 'comment_created': datetime.datetime(2021, 6, 19, 12, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654788974, 'comment_body': 'This blank line needs to go', 'comment_created': datetime.datetime(2021, 6, 19, 12, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654794631, 'comment_body': 'I dont think we should ad URLs athe end as it can be simple IP or names of machines what do you say', 'comment_created': datetime.datetime(2021, 6, 19, 13, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 654903884, 'comment_body': 'CC: @Harkishen-Singh ', 'comment_created': datetime.datetime(2021, 6, 20, 9, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 654904174, 'comment_body': 'I agree with Aquib. Test data should prefer the mock... convention.', 'comment_created': datetime.datetime(2021, 6, 20, 9, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Harkishen-Singh', 'type': 'User'}, {'comment_id': 654904358, 'comment_body': 'I mean we can call it mockMachines not mockMachineURLS', 'comment_created': datetime.datetime(2021, 6, 20, 9, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 655327085, 'comment_body': '`.env` should be inside `.gitignore`, and you should ideally keep a `.env.example`\r\n\r\nthe key here should be `bench_routes_server`', 'comment_created': datetime.datetime(2021, 6, 21, 12, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 655329322, 'comment_body': '`machines` should be an array according to your interface, if it can be null, add it to your type, I do not think it should be. So, initialize it as an empty array [] if there is no data.', 'comment_created': datetime.datetime(2021, 6, 21, 12, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 655332960, 'comment_body': '```\r\nconst initGlobalStore = () => {\r\n  selectedMachine: constants.defaultSelectedMachine    \r\n}\r\n\r\nconst useGlobalStore = (intitialState = initGlobalStore) => {\r\n  const [globalState, setGlobalState] = useState(initialState)\r\n\r\n  const changeSelectedMachine = () => {}\r\n  ...other functions\r\n\r\n  return {\r\n    globalState,\r\n    ...other functions\r\n  }\r\n}\r\n```\r\n\r\nWhy do it this way?\r\n\r\n- As discussed multiple times, stores will contain multiple values, maybe not at present in your GSoC project, but maybe after your project. We need to keep our stores generic.', 'comment_created': datetime.datetime(2021, 6, 21, 12, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 655334505, 'comment_body': ""and this ideally should just be PORT, isn't it. The prefix `localhost` comes from `defaultSelectedMachine`"", 'comment_created': datetime.datetime(2021, 6, 21, 12, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 655337824, 'comment_body': '@ruddi10 What do you think would be a better way to represent this? While fetching anything you need an URL of the format `${IP}:${PORT}/endpoint`, so you need to generate the IP and PORT while making a request, which may differ based on the machine.', 'comment_created': datetime.datetime(2021, 6, 21, 12, 36, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 655364442, 'comment_body': ""I have an idea. Since it will take a lot of time to implement different querying options in the backend, let's remove the `.env` file here completely(since we will only have one option in machine selector i.e. localhost), we can use the default machine in `constants.ts`."", 'comment_created': datetime.datetime(2021, 6, 21, 13, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 655371836, 'comment_body': '@aquibbaig actually this is the backend url where we will hit all are API call that will be independent of the selected machine', 'comment_created': datetime.datetime(2021, 6, 21, 13, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 655373490, 'comment_body': 'Oh sorry I misunderstood some part of it', 'comment_created': datetime.datetime(2021, 6, 21, 13, 25, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 655401301, 'comment_body': 'machines.map() works here I think', 'comment_created': datetime.datetime(2021, 6, 21, 13, 58, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}]","[{'commit_sha': '120b2e215b074605b0334eab70477431d584eddd', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e574e7355ec63462f07b069c3839cac0b6bfab38', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d84b648c9b4cc971d12deacafff6420cc19f95c', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa3130d9da88630484bc1d08854e9163eee7b13', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
673850487,Time querier,"Fixes #9 
![timequery](https://user-images.githubusercontent.com/56596436/124291386-2517bf00-db72-11eb-982c-a3bde7c51bc5.gif)
",True,11,https://api.github.com/repos/bench-routes/dashboard/pulls/11,https://github.com/bench-routes/dashboard/pull/11,closed,415,6,14,4,4,49,0,0,[],2021-06-19 09:15:12+00:00,2021-07-18 11:17:42+00:00,2512950.0,"29 days, 2:02:30","[{'comment_id': 667622448, 'comment_body': 'why do we use an HStack here with only one child? A ""Box"" component as a wrapper should work in this case, if you want to apply some inherent property to the lower components, use them inside the component declarations.', 'comment_created': datetime.datetime(2021, 7, 12, 4, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667622530, 'comment_body': 'logs need to be removed', 'comment_created': datetime.datetime(2021, 7, 12, 4, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667622566, 'comment_body': 'camelcase for setter', 'comment_created': datetime.datetime(2021, 7, 12, 4, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667623591, 'comment_body': 'User preferences such as route selection, and time selection go into the UserStore. As discussed earlier we do not have to worry about re-renders as React is pretty fast and accurate across simple re-renders such as this', 'comment_created': datetime.datetime(2021, 7, 12, 4, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667623893, 'comment_body': 'what and when can be a possible else case, we should not let it go unhandled', 'comment_created': datetime.datetime(2021, 7, 12, 4, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667624020, 'comment_body': 'what and when can be a possible else case, we should not let it go unhandled', 'comment_created': datetime.datetime(2021, 7, 12, 4, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667624098, 'comment_body': 'what and when can be a possible else case, we should not let it go unhandled', 'comment_created': datetime.datetime(2021, 7, 12, 4, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667624162, 'comment_body': 'move to utils (if possible)', 'comment_created': datetime.datetime(2021, 7, 12, 4, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667624296, 'comment_body': 'you -> your', 'comment_created': datetime.datetime(2021, 7, 12, 4, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667624499, 'comment_body': 'remove newline', 'comment_created': datetime.datetime(2021, 7, 12, 4, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667624833, 'comment_body': 'go with a `Box d=""flex""` here with same props', 'comment_created': datetime.datetime(2021, 7, 12, 5, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667625590, 'comment_body': 'rename `handleFetch` to some appropriate name ', 'comment_created': datetime.datetime(2021, 7, 12, 5, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667625714, 'comment_body': '!error &&', 'comment_created': datetime.datetime(2021, 7, 12, 5, 2, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667626620, 'comment_body': ""shouldn't `render` be imported from testing-library?"", 'comment_created': datetime.datetime(2021, 7, 12, 5, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667626890, 'comment_body': 'check if this can go into `theme.ts`', 'comment_created': datetime.datetime(2021, 7, 12, 5, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667627214, 'comment_body': 'long lines need to be split into multiple lines', 'comment_created': datetime.datetime(2021, 7, 12, 5, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667630345, 'comment_body': 'the worst part about using a structure like this is that when the global store changes everything will re-render below it. So I will give you some time to think about a better way to lay your providers 😉 ', 'comment_created': datetime.datetime(2021, 7, 12, 5, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667634424, 'comment_body': 'Hey @aquibbaig I read in unstated only where we are using this provider only those component will rerender and I even tested it thats what is happening', 'comment_created': datetime.datetime(2021, 7, 12, 5, 29, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667635291, 'comment_body': ""I actually prefer to use display flex in divs as that handles lot of responsiveness if I use Box we again need to set display and flex direction and I don't wish to do that when we already have Hstack that is extension of Box itself"", 'comment_created': datetime.datetime(2021, 7, 12, 5, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667635946, 'comment_body': 'No we have a made a custom renderer remember that renders component along with the providers', 'comment_created': datetime.datetime(2021, 7, 12, 5, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667636544, 'comment_body': 'We decided on putting route selection on global store right and a separate store for time querier', 'comment_created': datetime.datetime(2021, 7, 12, 5, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667637144, 'comment_body': 'Actually this fetches the data for a particular start end date I thought this name conveys that message any suggestions?', 'comment_created': datetime.datetime(2021, 7, 12, 5, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667642305, 'comment_body': 'isnt it camelCase do you mean PascalCase?', 'comment_created': datetime.datetime(2021, 7, 12, 5, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667642844, 'comment_body': 'By using I mean consuming the store so that wont be a problem', 'comment_created': datetime.datetime(2021, 7, 12, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667643916, 'comment_body': 'const [stepValue, setStepValue] = useState(defaultValue)', 'comment_created': datetime.datetime(2021, 7, 12, 5, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667646433, 'comment_body': 'There is no else for this, its just to make sure user is not able to set step beyond a particular value', 'comment_created': datetime.datetime(2021, 7, 12, 6, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667646711, 'comment_body': 'Any particular reason for not using Stacks that are just extension of Box', 'comment_created': datetime.datetime(2021, 7, 12, 6, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667647630, 'comment_body': 'We decided to group machine and route together as they are something of global level and placed them in global store and make a separate store for TimeQuerier', 'comment_created': datetime.datetime(2021, 7, 12, 6, 6, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667648609, 'comment_body': 'Ohh totally missed that capital I', 'comment_created': datetime.datetime(2021, 7, 12, 6, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667658839, 'comment_body': ""Possible else condition is entering of invalid date and in that case we are not changing the date so can we not consider it as handling the case? As I wasn't sure if we wanted to show anything particular in this case?"", 'comment_created': datetime.datetime(2021, 7, 12, 6, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667660448, 'comment_body': ""Yeah mb! For some reason, I mistook the store as a component with its own state. Anyways, that still doesn't invalidate the question that this is a bad way to lay out providers in your app."", 'comment_created': datetime.datetime(2021, 7, 12, 6, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667664093, 'comment_body': 'Is there any alternative to avoid this nesting?', 'comment_created': datetime.datetime(2021, 7, 12, 6, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667664344, 'comment_body': 'Makes sense, thanks!', 'comment_created': datetime.datetime(2021, 7, 12, 6, 43, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667665732, 'comment_body': 'Agreed, but I do not encourage people to use nested Hstacks and VStacks together (makes me feel clumsy)! Hence a Box component here would be fine', 'comment_created': datetime.datetime(2021, 7, 12, 6, 46, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667666296, 'comment_body': 'throw an error or send a notification or add a TODO', 'comment_created': datetime.datetime(2021, 7, 12, 6, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667666538, 'comment_body': 'handleFetchTimeSeriesData', 'comment_created': datetime.datetime(2021, 7, 12, 6, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667666949, 'comment_body': 'Hey have you heard of a package called react-toastify for toast notifs', 'comment_created': datetime.datetime(2021, 7, 12, 6, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667667417, 'comment_body': 'So inside Box shall I give a prop of d flex? as I wish to at least give it a display of flex', 'comment_created': datetime.datetime(2021, 7, 12, 6, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667667888, 'comment_body': 'SFC -> FC', 'comment_created': datetime.datetime(2021, 7, 12, 6, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667668191, 'comment_body': 'Here also is it the same reason? So shall I change HStack here?', 'comment_created': datetime.datetime(2021, 7, 12, 6, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 667668525, 'comment_body': 'Makes sense', 'comment_created': datetime.datetime(2021, 7, 12, 6, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667669895, 'comment_body': ""Yep, there are a lot of packages to achieve this. what are your thoughts on making the error handling centralised? (having a store to manage notifications) and display them using Chakra UI's Toast component\r\n"", 'comment_created': datetime.datetime(2021, 7, 12, 6, 54, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667671352, 'comment_body': 'Yep, just do not use VStacks and HStacks together as much  as possible. Using one instance at a time should be perfectly fine', 'comment_created': datetime.datetime(2021, 7, 12, 6, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 667705435, 'comment_body': 'Yes lets add it to TODO ', 'comment_created': datetime.datetime(2021, 7, 12, 7, 53, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 671692771, 'comment_body': 'can you create an issue for this?', 'comment_created': datetime.datetime(2021, 7, 17, 12, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 671693275, 'comment_body': 'can we also add a check where the start time is greater than the end time?', 'comment_created': datetime.datetime(2021, 7, 17, 12, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 671707112, 'comment_body': '@muskankhedia  line 58 checks that', 'comment_created': datetime.datetime(2021, 7, 17, 14, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 671707363, 'comment_body': 'Can you share a working screenshot of the edge case in the application?', 'comment_created': datetime.datetime(2021, 7, 17, 15, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 671708960, 'comment_body': ""Ohh I got that actually when we change the time at that time I don't do the check as I have given freedom at that time because there might be a case when user change the start time first and then end time actually the start time and end time are used for querying once the user has pressed fetch\r\nSo actually if the user has start time greater than end time and then try to fetch by clicking fetch we are displaying an error"", 'comment_created': datetime.datetime(2021, 7, 17, 15, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}]","[{'commit_sha': '120d5e173c8076bd988d40dbe85455f0b93da093', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6437d5f91168743afa760f7f74c8e94441b671d1', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab64ddb29d3a71c374f0c44e5b5df693216c0293', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '805780fedc6271ed4151128ec34dcf9403cb8e54', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
682729187,Route selector,"fixes #17 
To test this pr kindly setup mockoon with the new endpoint that I added for that kindly import the new JSON file I have mentioned in the README.md
![routeselector](https://user-images.githubusercontent.com/56596436/126066904-fc45d784-05b8-4305-958f-e5173e8d10cc.gif)
",True,18,https://api.github.com/repos/bench-routes/dashboard/pulls/18,https://github.com/bench-routes/dashboard/pull/18,closed,467,16,20,5,3,15,0,0,[],2021-07-02 15:50:55+00:00,2021-07-26 16:21:16+00:00,2075421.0,"24 days, 0:30:21","[{'comment_id': 672827389, 'comment_body': 'Can we reuse react-icons here? If not, then can we switch to only one icon library for consistency?', 'comment_created': datetime.datetime(2021, 7, 20, 5, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672827670, 'comment_body': 'if (error)', 'comment_created': datetime.datetime(2021, 7, 20, 5, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672827853, 'comment_body': 'camel case for interfaces', 'comment_created': datetime.datetime(2021, 7, 20, 5, 59, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672828083, 'comment_body': 'minH', 'comment_created': datetime.datetime(2021, 7, 20, 5, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672828438, 'comment_body': 'generates routes of a given number\r\n\r\nin js, a generator function begins w a * prefix', 'comment_created': datetime.datetime(2021, 7, 20, 6, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672828527, 'comment_body': 'mock routes', 'comment_created': datetime.datetime(2021, 7, 20, 6, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672829095, 'comment_body': ""i wonder why there was a URL here in the first place, there shouldn't be one"", 'comment_created': datetime.datetime(2021, 7, 20, 6, 2, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672881556, 'comment_body': 'As we want this hook to be called only when there is a change in the URL to make a request again.', 'comment_created': datetime.datetime(2021, 7, 20, 7, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 672884377, 'comment_body': 'Are you talking about the comment here? Actually, I decided to divide mock data generation into three parts: Custom Generator, Generator Function, and Mock Data, so these comments actually tell the start of that part. As for the mock route, the variable name will suffice, I guess', 'comment_created': datetime.datetime(2021, 7, 20, 7, 42, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 672889391, 'comment_body': 'It is not working due, anyhow any particular reason for minH ? as I think we want h to be 100% always', 'comment_created': datetime.datetime(2021, 7, 20, 7, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 672900214, 'comment_body': ""Hey actually it's not completely the same as the Js generator function but kind of a nomenclature used by me for this type of function"", 'comment_created': datetime.datetime(2021, 7, 20, 8, 5, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 672900638, 'comment_body': 'What are your thoughts can we call it something else other than a custom generator? to avoid confusion', 'comment_created': datetime.datetime(2021, 7, 20, 8, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 672903708, 'comment_body': ""Shall we use only chakra-ui/icons and remove react-icons from dependencies? or the other way round? what are your thoughts, I personally was thinking to maybe use chakra icons as we don't need large amount of icons provided by react-icons for now"", 'comment_created': datetime.datetime(2021, 7, 20, 8, 10, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}, {'comment_id': 672905229, 'comment_body': 'custom generator is still not how you should name it', 'comment_created': datetime.datetime(2021, 7, 20, 8, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 672905531, 'comment_body': ""doesn't tell what the data/function is for"", 'comment_created': datetime.datetime(2021, 7, 20, 8, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}]","[{'commit_sha': '07d95a916e8ca15590d0e261ebebc431b945b7a1', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a4e15b9b6aa158611effe4d4b0651cdd744f32', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '723683eb0877a049f1fc2913756c967cf4984833', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea6652305c0e3d1355f3890212a8e203066b1ee4', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19aa4a85ff8a2afab12bb73331be79052929a0e3', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
699503625,Backend integration,"This PR migrates the frontend from mock APIs to golang APIs. Also implements a graph component. fixes #20  fixes #21. To test this PR you need to pull the code from go-master branch of the bench routes repo and run make run.

![route-selector](https://user-images.githubusercontent.com/56596436/130184009-43fe5e37-0ec7-49eb-ae82-04651221afb6.gif)

",True,22,https://api.github.com/repos/bench-routes/dashboard/pulls/22,https://github.com/bench-routes/dashboard/pull/22,closed,457,48,18,3,2,0,0,0,[],2021-07-29 12:48:38+00:00,2021-08-20 10:19:37+00:00,1891859.0,"21 days, 21:30:59",[],"[{'commit_sha': '1137caa391091a167f476a51d0cd2e729a8abd03', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b577ad869026dc7e0f379e5ee21e80f21d791aee', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b6754562ba5ac05619dbdd8026e25392deee3be', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
700901112,Add e2e tests,"fixes #4 

Steps to test this PR-
Pull updated backend from go-master
Use make run to run backend.
Pull frontend code.
Run yarn install
Run yarn build
yarn global add serve
serve -s build
Finally run yarn test:e2e",True,23,https://api.github.com/repos/bench-routes/dashboard/pulls/23,https://github.com/bench-routes/dashboard/pull/23,closed,753,83,16,6,2,2,0,0,[],2021-08-01 12:43:44+00:00,2021-08-20 10:31:08+00:00,1633644.0,"18 days, 21:47:24","[{'comment_id': 685146567, 'comment_body': '```\r\nimport PropTypes from ""prop-types"";\r\n..\r\n..\r\n..\r\n..\r\nRouteList.propTypes = {\r\n  routes: PropTypes.array.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n};\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 12, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aquibbaig', 'type': 'User'}, {'comment_id': 685618934, 'comment_body': 'Here error can be undefined too', 'comment_created': datetime.datetime(2021, 8, 10, 1, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}]","[{'commit_sha': 'd3f5b64f14f4358fe78ef8467c62ba43fa04c488', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9368714c27621b4b661b014165efbe33486578f', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8319b8d19475c440098d4d337cf6ee564fb8e79a', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b23ac3353ecd7eca802a62769b3c97d86283380', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7518a40155c094ba3b1dddc619ec1f96dd1a6ea', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '076041e1b3eaf46c29d40f625deb5e90fd02fb24', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32
716643718,"Add GUIDE.md, CONTRIBUTING.md and CODE_OF_CONDUCT.md",Add proper documentation to help new users to get started with the project. fixes #28 ,True,27,https://api.github.com/repos/bench-routes/dashboard/pulls/27,https://github.com/bench-routes/dashboard/pull/27,closed,292,4,3,2,2,2,0,0,[],2021-08-20 11:00:25+00:00,2021-08-20 11:27:11+00:00,1606.0,0:26:46,"[{'comment_id': 692866564, 'comment_body': 'Please provide the link here for GUIDE.md and design documentation', 'comment_created': datetime.datetime(2021, 8, 20, 11, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'muskankhedia', 'type': 'User'}, {'comment_id': 692868156, 'comment_body': 'Ohh missed that thanks', 'comment_created': datetime.datetime(2021, 8, 20, 11, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ruddi10', 'type': 'User'}]","[{'commit_sha': 'f72b87f9b2831f1356c1f9acd6e01aa3ad00d0aa', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b746922a87c135fbd31d13ab6b86e60dda46c9a', 'committer_username': 'ruddi10', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 15, 14, 9, 2, tzinfo=datetime.timezone.utc)}]",,56596436,,User,,38,,49,32

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
353671336,dashboard,bench-routes/dashboard,TypeScript,19,6,5,6,53,13,1,4,"[{'id': 716643718, 'number': 27, 'closed': datetime.datetime(2021, 8, 20, 11, 27, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 11, 0, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1606.0, 'time_delta': '0:26:46', 'additions': 292, 'deletions': 4, 'state': 'closed'}, {'id': 700901112, 'number': 23, 'closed': datetime.datetime(2021, 8, 20, 10, 31, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 12, 43, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1633644.0, 'time_delta': '18 days, 21:47:24', 'additions': 753, 'deletions': 83, 'state': 'closed'}, {'id': 699503625, 'number': 22, 'closed': datetime.datetime(2021, 8, 20, 10, 19, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 12, 48, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1891859.0, 'time_delta': '21 days, 21:30:59', 'additions': 457, 'deletions': 48, 'state': 'closed'}, {'id': 682729187, 'number': 18, 'closed': datetime.datetime(2021, 7, 26, 16, 21, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 15, 50, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2075421.0, 'time_delta': '24 days, 0:30:21', 'additions': 467, 'deletions': 16, 'state': 'closed'}, {'id': 676518519, 'number': 13, 'closed': datetime.datetime(2021, 6, 29, 5, 48, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 18, 21, 39, tzinfo=datetime.timezone.utc), 'time_taken': 473216.0, 'time_delta': '5 days, 11:26:56', 'additions': 19, 'deletions': 0, 'state': 'closed'}, {'id': 676162130, 'number': 12, 'closed': datetime.datetime(2021, 7, 2, 13, 7, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 10, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 786703.0, 'time_delta': '9 days, 2:31:43', 'additions': 123, 'deletions': 4, 'state': 'closed'}, {'id': 673850487, 'number': 11, 'closed': datetime.datetime(2021, 7, 18, 11, 17, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 9, 15, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2512950.0, 'time_delta': '29 days, 2:02:30', 'additions': 415, 'deletions': 6, 'state': 'closed'}, {'id': 673440066, 'number': 10, 'closed': datetime.datetime(2021, 6, 19, 9, 8, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 12, 39, 34, tzinfo=datetime.timezone.utc), 'time_taken': 73713.0, 'time_delta': '20:28:33', 'additions': 46, 'deletions': 40, 'state': 'closed'}, {'id': 669052090, 'number': 8, 'closed': datetime.datetime(2021, 6, 23, 9, 42, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 13, 18, 2, tzinfo=datetime.timezone.utc), 'time_taken': 851053.0, 'time_delta': '9 days, 20:24:13', 'additions': 197, 'deletions': 70, 'state': 'closed'}, {'id': 665483819, 'number': 5, 'closed': datetime.datetime(2021, 6, 16, 10, 46, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 2, 1, 28, tzinfo=datetime.timezone.utc), 'time_taken': 636290.0, 'time_delta': '7 days, 8:44:50', 'additions': 112, 'deletions': 0, 'state': 'closed'}, {'id': 662943693, 'number': 1, 'closed': datetime.datetime(2021, 6, 13, 10, 32, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 12, 46, 59, tzinfo=datetime.timezone.utc), 'time_taken': 596757.0, 'time_delta': '6 days, 21:45:57', 'additions': 63, 'deletions': 392, 'state': 'closed'}]"
