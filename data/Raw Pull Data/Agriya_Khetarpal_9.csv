pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1366475306,Use `Lychee` to check for broken links,Closes #1 ,True,3,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/3,https://github.com/pybamm-team/pybamm.org/pull/3,closed,57,7,6,7,0,0,1,0,[{'name': 'infrastructure'}],2023-05-26 14:45:06+00:00,2023-05-26 14:51:14+00:00,368.0,0:06:08,[],"[{'commit_sha': 'a0a5ca6b5aeb8753aaedd502fb54d17d2f19c81f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53c18995c7650d512f036ae3b262a8d0dd978fcd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5e52b44712f8f66403a3e16ea75216076a1a629', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa50ef79405d74ea4bcb6a73eab078b0935bc6fc', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06cd71d46725bac179b585b4bcf84e10181425dd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74f23db0fb5b68859caf9d238c28ea281ee533db', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ff61451da1f2dc77bb4b88f034fc6b07d88a595', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1366617105,Add `pre-commit` support,Closes #2 ,True,4,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/4,https://github.com/pybamm-team/pybamm.org/pull/4,closed,70,11,3,6,2,8,1,0,[{'name': 'infrastructure'}],2023-05-26 16:34:10+00:00,2023-05-26 16:57:08+00:00,1378.0,0:22:58,"[{'comment_id': 1207083818, 'comment_body': ""Since we are starting this repository from scratch, it would be nice to use `ruff` to its full potential. We'll be able to get rid of the `black` `pre-commit` hook with `--fix` - https://github.com/scikit-hep/vector/blob/main/.pre-commit-config.yaml#L26-L31\r\n\r\nAlso, we can enable a ton of extensions (I don't know if they are called extensions or something else) - https://github.com/scikit-hep/vector/blob/main/pyproject.toml#L199-L228.\r\n\r\nYou can generally use https://github.com/scikit-hep/vector/blob/main/.pre-commit-config.yaml as a reference for all the pre-commit stuff. There are some doc specific pre-commits included in that file too."", 'comment_created': datetime.datetime(2023, 5, 26, 17, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1207086886, 'comment_body': 'I\'d recommend adding something like this to the starting of this file -\r\n```yaml\r\nci:\r\n  autoupdate_commit_msg: ""chore: update pre-commit hooks""\r\n  autofix_commit_msg: ""style: pre-commit fixes""\r\n```\r\n\r\nThis will load `pre-commit.ci` with better commit messages (whenever we turn it on for this repository). Let us know if you want us to turn it on for this repository.', 'comment_created': datetime.datetime(2023, 5, 26, 17, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1207091210, 'comment_body': '`pre-commit` can automatically run before every commit locally (""pre commit"" haha). I\'d suggest adding something like this for the contributors -\r\n\r\nhttps://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit\r\n\r\nAlso, auto-update should not be used locally. This might update a particular pre-commit version, and that version update might trigger several changes which might not be relevant to that particular PR.', 'comment_created': datetime.datetime(2023, 5, 26, 17, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1207116210, 'comment_body': ""I thought of using the extra options that `ruff` provides, but I chose to skip them for now because this repository will rarely have any Python files to lint / auto-format – most files are static. I'll make some changes to remove `black`"", 'comment_created': datetime.datetime(2023, 5, 26, 17, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1207117353, 'comment_body': 'I was going to ask you about it on Slack haha, please feel free to turn it on 😄', 'comment_created': datetime.datetime(2023, 5, 26, 17, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1207119123, 'comment_body': 'That makes sense. I am opening another PR for adding the changes you suggest', 'comment_created': datetime.datetime(2023, 5, 26, 17, 29, 57, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1207128516, 'comment_body': 'Ah, makes sense to leave it as it is then!', 'comment_created': datetime.datetime(2023, 5, 26, 17, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1207134872, 'comment_body': 'Done! The badge should get green soon - \r\n\r\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/pybamm-team/pybamm.org/main.svg)](https://results.pre-commit.ci/latest/github/pybamm-team/pybamm.org/main)\r\n', 'comment_created': datetime.datetime(2023, 5, 26, 17, 44, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}]","[{'commit_sha': 'bac4e99af64533bf0ca7ae58948626de7e26c616', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd802262a601e17450a840436271f7f725c30b46c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd4f39f99985c5dd384719a23598baf6bf6932f8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1512122f1bfeaa9a007c42ebd5b89e5d948f47b7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1df7b4961d1312ab2f44366d0874eacad3713a81', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af5897e14f398edfc96706c78c960916e9692200', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1366696220,Improvements to `pre-commit`,As discussed in #2 ,True,5,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/5,https://github.com/pybamm-team/pybamm.org/pull/5,closed,62,39,11,8,1,0,1,0,[{'name': 'infrastructure'}],2023-05-26 17:49:48+00:00,2023-05-26 19:19:51+00:00,5403.0,1:30:03,[],"[{'commit_sha': '79d2b6c279aab746bff9247ff64e8e7cd3820c0d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cc5b7b8078eed9ca971ce63064632d1f9a00486', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '466ca08b517c768870c3dae9ded529ae2c7d5db6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c78a81baeb99a28d54fd2a6e2c018069f5fe90a5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06fdedd94b6e8db954e0a3ab9fb32c8d7d90fc22', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6512b7deb34a0a4509d602f5bef169000ffd366', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e84dcea839bec725c24f96aecc00f6dc60de7ad2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f41e1560696b1dfb98e46e7ef76a3e5f75b06048', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1372443564,Netlify deployment infrastructure,Closes #7 ,True,8,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/8,https://github.com/pybamm-team/pybamm.org/pull/8,closed,4,5,2,5,1,0,1,0,[{'name': 'infrastructure'}],2023-05-31 15:25:24+00:00,2023-05-31 15:58:26+00:00,1982.0,0:33:02,[],"[{'commit_sha': '5eb1385e858a61ca781d3493a4d5f8ac29cdc8aa', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092e7c2bcc18a8415ac251d2c56c202f36446c0f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5e95e7e727088eee81b5b9c0278afa7105e2312', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a0fac22796e5c8399b7d371a87447dc99c0138', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d0bc9fb90ac0931534570af2c50feb85f329df3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1372694346,Add news pages from PyBaMM blogspot,"Closes #9 

Pages are now in Markdown format and are sorted in order of publishing via folders and subfolders (year, month). All pages include YAML front matter for post metadata",True,10,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/10,https://github.com/pybamm-team/pybamm.org/pull/10,closed,127,8,8,8,1,0,0,0,[],2023-05-31 18:24:03+00:00,2023-05-31 18:35:23+00:00,680.0,0:11:20,[],"[{'commit_sha': 'cca38cf925276c20682af89899a47ecb3d6f268a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '774c2996752107964158b75b9c361eaa5d0da314', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bb1837eb6979486607328a67898d947b76c0caa', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14cdcc187f9cf899a46e6a64ca3e5c37b8ff905f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c9da98d1c2f50aff41b155b624c52f06a11656b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6ae4af9160c5ba362be05d8fac10dbc14f290d4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fa66f4f02b3302670010445364a457dd0a01b4e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2320583c8169247fbc050a5f1f3bf5f3262f9495', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1372806750,Custom 404 PyBaMM page,"Closes #11

Should link to `404.md` for all links that return status code 404 by directing via Netlify – doesn't work locally",True,12,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/12,https://github.com/pybamm-team/pybamm.org/pull/12,closed,20,0,3,4,1,0,0,0,[],2023-05-31 19:40:36+00:00,2023-05-31 20:23:56+00:00,2600.0,0:43:20,[],"[{'commit_sha': '6b5b5cea1bdf715cb9a9cc3d9bcce0c0932590a7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e04d9d1f5cd8979403258a2e1e30ea395c42614', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '746d073a1d225cf39b2d9dc7afecbd2f5fba31c2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac8be5f47ba2c899fd99f994d251cfbe312327a7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1372910461,Favicon for PyBaMM,"Based on the PyBaMM logo

Closes #13 ",True,14,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/14,https://github.com/pybamm-team/pybamm.org/pull/14,closed,0,0,1,2,1,0,0,0,[],2023-05-31 20:52:34+00:00,2023-05-31 21:01:39+00:00,545.0,0:09:05,[],"[{'commit_sha': '251e0064c706b68750496b6c769bbb13b99643c1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf58ba21db309186821cf4039a404e3c6b9f8a39', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1373129571,"#15 Add Donations copy, test sponsor button","- [x] NumFOCUS
- [x] GitHub Sponsors
- [x] OpenCollective

Closes #15 ",True,16,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/16,https://github.com/pybamm-team/pybamm.org/pull/16,closed,65,0,4,9,2,0,0,0,[],2023-06-01 01:00:59+00:00,2023-06-09 12:20:51+00:00,731992.0,"8 days, 11:19:52",[],"[{'commit_sha': '99d06104dfe7ba5301d95e0cabe4cb653390fd77', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cf1bc90494cf9014053dbeb09aa4ea50830e7a4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bbb5324dd354ea0767463e19e795d3da0e15efa', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c34cfac02cfa65ec5f4982c7386713ed6c8c217', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0821269e17a36e6b1d607c0606bfcc1375310a75', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a54d2b2c92f00e129ccddf668b76a7063d1c4d53', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596340d6d0bf1d33fa0f2463ee2c41c679b0c961', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f141d376edb16a51ec1be064e61a9c42d93bb85', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e1e50e1d999e3e6c5eccc4a15d93cc5bf28e9e1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1376049571,"Twitter feed, institutional partners, about PyBaMM","Closes #17
Closes #18 ",True,19,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/19,https://github.com/pybamm-team/pybamm.org/pull/19,closed,109,12,9,7,1,0,0,0,[],2023-06-02 16:44:01+00:00,2023-06-09 12:22:02+00:00,589081.0,"6 days, 19:38:01",[],"[{'commit_sha': 'e4d7d5b973de055c3c5031445ad7d04d8fbdbe92', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a904d390021269697070e72cc905c9d0a958f002', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16af536b28b302e3738fa6f0eb3319b0929b1a65', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a7772242a1c3015c5d4587748fee14e44339c4d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9657a2d0db3cb0d3b42eba95c5e74364ea436b2a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9485f334980e3c19976998740880ca42787adecf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5f0ff14c104790ad93ce6f5fed93dae6fad85bf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1392777842,Restructure pages on the navigation bar and reformat contents,"- [x] Install (Could be linked to docs. Some basic installation instructions with links to advanced instructions are on the Learn page)
- [x] Documentation
- [x] Learn (includes the Training videos and Getting Started page)
- [x] About Us (now includes the current Steering Council and links to separate Governance page)
- [x] News (can be changed to single-page news)
- [x] Contribute (contains links to `CONTRIBUTING.md` on the main repository, donations page, and the project document) – this is partially complete owing to the status of the content",True,22,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/22,https://github.com/pybamm-team/pybamm.org/pull/22,closed,776,53,18,15,4,17,0,0,[],2023-06-14 16:57:26+00:00,2023-06-24 09:40:05+00:00,837759.0,"9 days, 16:42:39","[{'comment_id': 1229946199, 'comment_body': 'Should we also link the roadmap here?', 'comment_created': datetime.datetime(2023, 6, 14, 17, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1229947319, 'comment_body': 'We can maybe add the links here, or do they change every week?', 'comment_created': datetime.datetime(2023, 6, 14, 17, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1229948808, 'comment_body': 'The content after the ""For sponsors"" heading looks a bit weird - https://deploy-preview-22--pybamm-developer-preview.netlify.app/contribute/', 'comment_created': datetime.datetime(2023, 6, 14, 17, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1229949787, 'comment_body': 'Should we have the Twitter feed at the end of the page?', 'comment_created': datetime.datetime(2023, 6, 14, 17, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1229960705, 'comment_body': ""Yes, there is some overlap within the contents of the project document and the donations page, and I'm not sure how to proceed – I marked this section as partially complete. I have included both for now so that further discussion can happen on this thread"", 'comment_created': datetime.datetime(2023, 6, 14, 17, 36, 41, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1229964516, 'comment_body': ""We can use the shortcode I had added to include it at an upper location if we want, let's wait for a consensus for an apt location"", 'comment_created': datetime.datetime(2023, 6, 14, 17, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1229966216, 'comment_body': 'Tagging @brosaplanella here to add to this', 'comment_created': datetime.datetime(2023, 6, 14, 17, 42, 21, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1230569106, 'comment_body': 'We can either include the link to the Google Calendar event or to the Zoom call.\r\n\r\nFor the developer meeting they are:\r\n\r\n- Google: https://calendar.google.com/calendar/event?action=TEMPLATE&tmeid=MGtxNnExZWc4ZzFiOGVuOXB0c2ZtdnZ2aTlfMjAyMzA2MTJUMTUwMDAwWiBjXzE1Nzc5MGZhNTQ0Y2JmN2UzZjViNjQ5YzcwMGJhNDA0MDRhZDA0NjM0ZjkzNDBlMjU1ZTZkZWY5OWE4OWVkZGFAZw&tmsrc=c_157790fa544cbf7e3f5b649c700ba40404ad04634f9340e255e6def99a89edda%40group.calendar.google.com&scp=ALL\r\n- Zoom: https://numfocus-org.zoom.us/j/89866852955?pwd=dWVzQnpHbXpaTEZCQS9hMU54ZUxodz09', 'comment_created': datetime.datetime(2023, 6, 15, 7, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 1230569617, 'comment_body': 'The community meetings are happening a bit ad hoc at the moment, once we have a stablished calendar I will share the event.', 'comment_created': datetime.datetime(2023, 6, 15, 7, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 1237005291, 'comment_body': 'I think you can remove ""(community work orders)"" here', 'comment_created': datetime.datetime(2023, 6, 21, 13, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rtimms', 'type': 'User'}, {'comment_id': 1237006090, 'comment_body': 'Move this heading up 1 level (###)', 'comment_created': datetime.datetime(2023, 6, 21, 13, 29, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rtimms', 'type': 'User'}, {'comment_id': 1237006661, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2023, 6, 21, 13, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rtimms', 'type': 'User'}, {'comment_id': 1238985415, 'comment_body': 'I added the links and I am resolving this conversation for now, since we can update this anytime', 'comment_created': datetime.datetime(2023, 6, 22, 20, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1238986201, 'comment_body': 'Moved donations to a separate page for now, makes it look neater for the time being', 'comment_created': datetime.datetime(2023, 6, 22, 20, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1238986423, 'comment_body': 'Resolving this for now, we can update this later', 'comment_created': datetime.datetime(2023, 6, 22, 20, 14, 45, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1239900098, 'comment_body': 'You can ignore the false warning here using CLI args in `pre-commit-config.yaml`. Something like this should work -\r\n```yaml\r\n- repo: https://github.com/codespell-project/codespell\r\n  rev: v2.2.5\r\n  hooks:\r\n  - id: codespell\r\n    args: [""-Lrecuse""]\r\n```', 'comment_created': datetime.datetime(2023, 6, 23, 14, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1240009910, 'comment_body': 'Lol, I was choosing to ignore it as it is, but thanks for going the extra mile 😄', 'comment_created': datetime.datetime(2023, 6, 23, 16, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '8e4d16eabaae504c0a11c066acedb9566fe8e359', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621f511b264efd029e7e8ee22352a3f27cef02e1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559aa5fe04d9d4bda4d90474e9d57756c413de15', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90edbb6389bda33ac72ce6fe01cb281a2277bcc0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b2dff9ad5bbb88e63826c83259b822351dec816', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ba53d91628c00aee491764c1ad68aab1018a31d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29fcb53ae78a7d20a41f14ec74bd43eaee53af4e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ceac54b78753ab3e1968ce25678a35c685ebb0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56b49af0fe8c5718dca452ffb732e24d34e34458', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '935f2974cf98611cfd051c6a5272e2fbee1daebf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93eb35d0bcb06a10a6ef606372c3f53353b08f67', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a9cc57f0835fc76332d8fdfb8dc13e1301381ce', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3178a7633761b8cc0e03c1dacffb9a06e11adee', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '999c931cdcaafd51b512567981a2cfa28f2343c2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bd1b3ce4a69cffa1ddc03b5aab72b846eaf92b4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1404132043,Reformat news to be single-page only,,True,24,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/24,https://github.com/pybamm-team/pybamm.org/pull/24,closed,131,126,8,2,1,0,0,0,[],2023-06-22 20:40:47+00:00,2023-06-23 17:18:15+00:00,74248.0,20:37:28,[],"[{'commit_sha': '89fd3b5da5b5976040d8958f5d57fbf7670a7aaf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '336d9b7eeda55b13bd9dc455582e604468199029', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1421249522,Redirect links for benchmarks,,True,30,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/30,https://github.com/pybamm-team/pybamm.org/pull/30,closed,6,0,2,2,2,0,0,0,[],2023-07-05 14:45:26+00:00,2023-07-05 14:54:20+00:00,534.0,0:08:54,[],"[{'commit_sha': '40e8a4ad8c4abf9920889da0e5d6e1fe418f977c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a03c4f91552adea60f41dadecc10bf8d7e90f98f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1423080330,Generate teams,Uses the normal API instead because we need API keys for querying the GraphQL one,True,31,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/31,https://github.com/pybamm-team/pybamm.org/pull/31,closed,1161,142,12,12,13,2,0,0,[],2023-07-06 15:18:53+00:00,2023-07-14 14:00:10+00:00,686477.0,"7 days, 22:41:17","[{'comment_id': 1254845995, 'comment_body': 'add emeritus maintainers (scott marquies, thibaut lestang)', 'comment_created': datetime.datetime(2023, 7, 6, 19, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 1254921180, 'comment_body': 'Scott Marquis is already there as Scottmar93, will add Thibault Lestang', 'comment_created': datetime.datetime(2023, 7, 6, 21, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '2d314d5a4df1d13ce6ec14e001092250ac75ba95', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '764da0b41482687ffba0abc788d0149ad3d0ac4c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4b68321981e194f6496544e9e01b13cf11c5c28', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0374646f991fd36122db5b26ceec23349774cb85', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbcadca4c78439f50f1602446e3f174b48b6f8b6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13aa6a3faf4d2b430f3a020a14aa9697525c618a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f81b2c2fbc5c241284d1a50e34fc961483365f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e754557ca2daa070bfd501362bbbbaad935397', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3db6b5081b3298bb7b214a3a10e719c519d57c6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dc26b3f0e26c3a11ecb0ba572a2aa12b7dd896d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '174847006ca5c994e9922f9bc1dede11f1179e6e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a6d42cd0c42f94fd9876864a186c9df44c0955c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1425649518,Accessibility improvements,"Mostly taken from the results for https://pybamm.org on these websites:

1. https://www.accessibilitychecker.org/audit/?website=pybamm.org&flag=ww
2. https://fae.disability.illinois.edu/pages/1892fbc904f7f899/rc/all/page/1/
3. https://www.tawdis.net/
4. Browser extension available at https://www.tpgi.com/arc-platform/arc-toolkit/
5. https://pybamm.org/reports/lighthouse.html (Netlify)

Cannot be fixed without changes in the theme itself:

1. Landmark regions and page relationships
2. Tab-focusable aria-labels for navbar dropdown (aria-hidden dropdowns cannot be focused)
3. Bypass blocks
4. Purposes and states for links

Fixed in this PR:

1. All home screen elements have a minimum font size of 16 pixels
2. Changes to the layout (hero and logo positions) for mobile devices
3. Smooth animations and colour changes to distinguish interactive elements
4. Spacing of items in the footer, especially for narrower screens",True,32,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/32,https://github.com/pybamm-team/pybamm.org/pull/32,closed,69,5,3,3,1,0,0,0,[],2023-07-08 02:01:39+00:00,2023-07-14 13:07:32+00:00,558353.0,"6 days, 11:05:53",[],"[{'commit_sha': '6eae3de2da92ac8df936c54f2596dc94bb724d8a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b8b3264c586c8fb19b5d7f311c5a2203170e710', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8585ce925df1368aae6648a15a278a2474d9aa21', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1434850904,Generate teams in the CI,A follow-up PR for #31 ,True,34,https://api.github.com/repos/pybamm-team/pybamm.org/pulls/34,https://github.com/pybamm-team/pybamm.org/pull/34,closed,54,0,2,7,2,8,0,0,[],2023-07-14 14:08:45+00:00,2023-07-18 23:18:08+00:00,378563.0,"4 days, 9:09:23","[{'comment_id': 1263856488, 'comment_body': 'The `uses` and `run` lines here will I think be 2 different steps. We might as well not club the name of the `run` step with a different step above (`uses`).', 'comment_created': datetime.datetime(2023, 7, 14, 15, 19, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1263872344, 'comment_body': 'I just copied the syntax from the [basic usage](https://github.com/actions/setup-python#basic-usage) section of the documentation, maybe it should work? Or should we add it in a different step because it will be cleaner? Edit: I did the latter', 'comment_created': datetime.datetime(2023, 7, 14, 15, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1266148111, 'comment_body': 'I think you forgot to remove this.', 'comment_created': datetime.datetime(2023, 7, 18, 3, 20, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1266148401, 'comment_body': ""This should not be required if you're running `pre-commit --all-files`"", 'comment_created': datetime.datetime(2023, 7, 18, 3, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1266402961, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 7, 18, 8, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1266408683, 'comment_body': ""Makes sense. I will remove `pre-commit install`, though `pre-commit` isn't installed by default, or is it?"", 'comment_created': datetime.datetime(2023, 7, 18, 8, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1267379137, 'comment_body': '""install"" here is confusing haha. The pip installation should be done as you do. `pre-commit install` is required to execute `pre-commit` before every commit, that is, it installs `pre-commit` as a git hook. You can still use `pre-commit` without installing it as a git hook (which is being done here).', 'comment_created': datetime.datetime(2023, 7, 18, 23, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1267380038, 'comment_body': 'I see, so the install step is redundant and we can do `pre-commit run` directly. Removing it. Edit: already removed it', 'comment_created': datetime.datetime(2023, 7, 18, 23, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': 'fa10939eba4514bd1a0d1b7acaa7e34eac661bc7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e378be8fb22d50ea29e4c39cec3253a95cdd12cb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07ab37d21cc541d55846fdb1be5b589fd1621bf0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a37d2fc3540b8000b91d5914bcb486de385ae3f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c640190ac67d07b4379da428d94cd649d407aa', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0704c4f20acdbfc9a0f3136b88bf184e136a6dc9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32622acebe31f8700ef56ef3cec76a96b20f0cca', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1306086734,Issue 2725 reduce Windows and macOS tests and run all tests nightly,"# Description

- `test_on_push.yml` will now run integration tests only on GNU/Linux with Python 3.11; unit tests will run on all platforms – with 3.11 on GNU/Linux and with Python 3.8, 3.9, and 3.10 on Windows and macOS
- Adds a workflow `run_periodic_tests.yml` to run all unit tests and integration tests on all platforms and Python versions, scheduled at 3 am UTC and on PRs to the `main` branch

Fixes #2725 

## Type of change

- [ ] New feature (non-breaking change which adds functionality)
- [x] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,2867,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/2867,https://github.com/pybamm-team/PyBaMM/pull/2867,closed,134,16,2,11,4,27,0,0,[],2023-04-07 17:17:23+00:00,2023-05-18 13:54:55+00:00,3530252.0,"40 days, 20:37:32","[{'comment_id': 1161079407, 'comment_body': 'Maybe something like -\r\n```suggestion\r\nname: Scheduled tests\r\n```', 'comment_created': datetime.datetime(2023, 4, 8, 7, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1161079463, 'comment_body': '`3.11` is faster. I am not sure if we will get speed up here, but we can try.\r\n```suggestion\r\n          python-version: 3.11\r\n```', 'comment_created': datetime.datetime(2023, 4, 8, 7, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1161079631, 'comment_body': '`tox -e coverage` triggers `coverage run -m unittest` behind the scenes. `coverage.py` runs the unit tests with its own interpreter and calculates the coverage value. No need to run unit tests before this :)\r\n```suggestion\r\n          python -m tox -e coverage\r\n```', 'comment_created': datetime.datetime(2023, 4, 8, 7, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1161079666, 'comment_body': 'Ditto!\r\n```suggestion\r\n          python -m tox -e coverage\r\n```', 'comment_created': datetime.datetime(2023, 4, 8, 7, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1161079689, 'comment_body': 'Why are we not running unit tests for python 3.11 on Windows and Mac?', 'comment_created': datetime.datetime(2023, 4, 8, 7, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1161080015, 'comment_body': 'Any specific reasons for using 3.9 to generate and upload coverage reports? We can try 3.11 to check if there are any speed-ups.', 'comment_created': datetime.datetime(2023, 4, 8, 7, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1161086218, 'comment_body': 'I agree this would be more informative, but I think it might also change the name in the badge we have in the README. Not sure if there is a way to have another name in the badge.', 'comment_created': datetime.datetime(2023, 4, 8, 8, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 1161285669, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 4, 9, 13, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1161286003, 'comment_body': ""I used 3.9 because generating coverage with 3.11 failed on a previous run  – you may see the logs here: https://github.com/pybamm-team/PyBaMM/actions/runs/4640011359. I think it is an issue with `pybamm_install_jax`, though I haven't looked at why it failed in detail"", 'comment_created': datetime.datetime(2023, 4, 9, 13, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1161286674, 'comment_body': 'According to https://github.com/pybamm-team/PyBaMM/issues/2725#issuecomment-1498202987, I ran unit + integration tests on Linux for 3.11, and unit tests only for 3.8 – 3.10 for macOS and Windows; so yes, maybe I should include 3.11 too since it is not being tested at all', 'comment_created': datetime.datetime(2023, 4, 9, 13, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1161287072, 'comment_body': 'Maybe we can rename it to just `CI`?', 'comment_created': datetime.datetime(2023, 4, 9, 13, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1165711679, 'comment_body': 'Yes, I think it should be included too.', 'comment_created': datetime.datetime(2023, 4, 13, 15, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1165713079, 'comment_body': 'Ah, we might have to mention this somewhere in the docs too. Something like - `JaxSolver` is not supported on Python ~`3.10` and~ `3.11`, but that can be handled in another PR.', 'comment_created': datetime.datetime(2023, 4, 13, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1165719263, 'comment_body': 'This might get out of hand with more Python releases 😅 \r\n\r\nMaybe something like - ""Run unit tests for Windows and MacOS for all Python versions""?', 'comment_created': datetime.datetime(2023, 4, 13, 15, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1165719755, 'comment_body': '```suggestion\r\n        run: python -m tox -e coverage\r\n```', 'comment_created': datetime.datetime(2023, 4, 13, 15, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1165720101, 'comment_body': '```suggestion\r\n        run: python -m tox -e coverage\r\n```', 'comment_created': datetime.datetime(2023, 4, 13, 15, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1165811063, 'comment_body': ""This is right now failing while installing SUNDIALS and SuiteSparse. But, I think this will fail even if the SUNDIALS step passes because of `jax` and `jaxlib`. We might have to make some changes to `tox.ini` to ensure that `pybamm_install_jax` runs only on `3.8` and `3.9`.\r\n\r\n`JaxSolver` is currently not being tested on Python `3.8` as well, but it should be. If you look closely -\r\n- `[testenv:coverage]` installs `jax`, making it available while executing `tox -e coverage`\r\n- The base `[testenv]` only installs `jax` on `tests-!windows-!mac`, which isn't used on CI anywhere, rather it should install `jax` in `integration` and `unit` but only on Python `3.8` and `3.9`.\r\n\r\nI'll look into the `jax` and `jaxlib` thing."", 'comment_created': datetime.datetime(2023, 4, 13, 17, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1166361880, 'comment_body': 'I may mention that in this PR if it is required since it is only a minor change', 'comment_created': datetime.datetime(2023, 4, 14, 6, 51, 39, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1166366275, 'comment_body': 'Makes sense', 'comment_created': datetime.datetime(2023, 4, 14, 6, 57, 34, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1166372282, 'comment_body': ""That sounds right, we are indeed missing 3.8 with `JaxSolver` – though I'll leave this over to you like you ask :)"", 'comment_created': datetime.datetime(2023, 4, 14, 7, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1166407388, 'comment_body': ""I think the previous run wasn't failing due to jaxlib but due to some error with `wget` internally, SUNDIALS and SuiteSparse were installed successfully on this one"", 'comment_created': datetime.datetime(2023, 4, 14, 7, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1182895955, 'comment_body': ""Thanks for the investigation! Yes, I think it would be best to just add a note in this PR that the solver is only available on Python 3.8 and 3.9 (though we don't yet have a release on the newer versions yet).\r\n\r\nI think I should create a new issue with all the weird things happening in the `tox` file haha, but I am sure that the `JaxSolver` is only being unit tested on Python 3.9 right now, and the `tox -e all` command is not being used anywhere."", 'comment_created': datetime.datetime(2023, 5, 2, 18, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1182899842, 'comment_body': 'We can maybe name it just ""Scheduled""?', 'comment_created': datetime.datetime(2023, 5, 2, 18, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1182918496, 'comment_body': 'Yes, that works ', 'comment_created': datetime.datetime(2023, 5, 2, 18, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1182925699, 'comment_body': ""Sure, I'll add a note about `JaxSolver` in the docs for installing PyBaMM from source. Please let me know if I need to add it anywhere else too"", 'comment_created': datetime.datetime(2023, 5, 2, 18, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1188618121, 'comment_body': 'Not required anymore, thanks to #2927!\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 5, 9, 13, 40, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1188622036, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 5, 9, 13, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': 'd7864c976e0b86205327f306f43c3f1859d830b2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a9e74482bafc15005ee7e39f026fd8610fc4c17', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d0ee6d60d682681cd95921fdc4122e59f3fe74b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d65bca46adfc9902c936c06cbfca46f57490150', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe6d5797e122fe03c7a535f4581d9c0ab9b6cb2b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6a10d161d4bed16b573befda9d6f8f8f570c455', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fdf7944ec6540b6141da9f32aa78ef10c7ff938', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f22e31f1c54df4bb3336800aad9d2f7282a2a708', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be1a20f3ff0a1dbfce1e5f3751e4975c514bcd42', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2d0c98f07d8c00a15af4f480a5b8e65dd907a06', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c257e53de46fe53f6e2ae96b3baa89687cbe5e5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1335675684,Do not run `needs_reply.yml` and `needs_reply_remove.yml` on forks,"# Description

Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.

Fixes # (issue)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,2916,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/2916,https://github.com/pybamm-team/PyBaMM/pull/2916,closed,3,1,2,1,0,0,0,0,[],2023-05-02 18:36:38+00:00,2023-05-02 18:45:57+00:00,559.0,0:09:19,[],"[{'commit_sha': '940599443266826200f4205b74a3d7f0bda919b8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1337113929,2447 cache Linux (`apt`) dependencies in CI,"# Description

Caches dependencies for faster installation and setup of PyBaMM's dependencies via the `apt` package manager on Linux

Fixes #2447 
Fixes #2632

### Tasks

- ~Cache `pip` dependencies~ (`setup-python` and `actions/cache` do not provide any benefits since most of our dependencies are installed within `Tox` environments)
- [x] Setup a cache for `apt` dependencies (partially done)
- [x] Investigate caching for `brew` dependencies (unhelpful)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] Optimization (back-end change that speeds up the code)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
",True,2923,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/2923,https://github.com/pybamm-team/PyBaMM/pull/2923,closed,24,7,3,42,8,6,0,0,[],2023-05-03 17:50:00+00:00,2023-06-09 12:18:09+00:00,3176889.0,"36 days, 18:28:09","[{'comment_id': 1221811720, 'comment_body': ""I think this should not be here? We are installing `asv` in one of the steps above and I don't think this workflow uses `tox`."", 'comment_created': datetime.datetime(2023, 6, 7, 15, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1221813504, 'comment_body': '> We can probably remove the Homebrew caching altogether since it does not offer any real benefits?\r\n\r\nYep, we can get rid of this then. I am guessing the one minute speedup is due to the homebrew environment flags and not this step?', 'comment_created': datetime.datetime(2023, 6, 7, 15, 38, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1221853501, 'comment_body': 'Yes. This step takes extra time because it has to copy over folders and files from the paths I added, so I will remove this', 'comment_created': datetime.datetime(2023, 6, 7, 16, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1221855652, 'comment_body': ""Apologies, I don't know where and when I added this, or how, even. I have been working on this PR for too long haha"", 'comment_created': datetime.datetime(2023, 6, 7, 16, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1221903088, 'comment_body': 'Though, by ""a very minute speedup"", I was referring to ""minute"" as in _small_, not that it caused a one-minute speedup 😆 ', 'comment_created': datetime.datetime(2023, 6, 7, 16, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1222048461, 'comment_body': 'Ah, that makes it clear, thanks!', 'comment_created': datetime.datetime(2023, 6, 7, 19, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}]","[{'commit_sha': '4d87bead7fd4a545a0ba78ae18aa46fc87d913ce', 'committer_username': 'deepeshaburse', 'committer_name': 'Deepesha Burse', 'committer_email': None, 'commit_date': datetime.datetime(2021, 7, 19, 6, 45, 9, tzinfo=datetime.timezone.utc)}, {'commit_sha': '360c4be8a30902d2a3da3b3de381644b605354b5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ed3572918d818bd92105641ed4e19aca2e5bca8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e18f3d5e7086451f743fb88c178d75c31e5a7a0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2dc6a9315a7c4ba87118197486ae0ed2ff5641b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '535151f540d8bd7e9b852601f24643d3489e5d1e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e4d9e6fb9a5bf31a8bfc450317a746eea6fc4c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5051bda1b09fbf2b345a205a4ea32d80abda2b4f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1095d889f3d2eeaf613a20d9194837439ffa7161', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c7a4e660a3f5dd3473bfb3b16813f53043419d8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '137e673eab25d6baaffdaee9ff9580cc5033ec9c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4961a94af3873dae17c5e742117d49eb8fedb9fc', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22a31955db3d49f678d003dfa8c559803b42ec29', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f622392a229f02671dc96e1990a0759bebaa57ea', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f4260f16edb9d081003dd9a1cddcb3f4bdbd5b8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1dfcb9c40669ea3ea98ff20e9e423f3440c621', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9c22c212bfef63a5f4beeeb1a8363a3e20d87d5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0c85eccf68c3c2d9d94c60ef38aff9b94bd3390', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e31b89596181c68266d8013b409a4b72fdfc9dd7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc34ace3b8d1c9943455e84d691dcb88d617d272', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04fcbd3f5a56c1e41f57668cc12caf2734aa6e33', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deddde5c3ab60cea15789b3d3e9fa5434bd432bf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e02d0c71bdba401bb9a8b2abe3b87cbc8f97eab6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '690f2a2dd81b98b6e88e776dbcde9fff48f9beb8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f813d47f87f3bd2649fdee062fb2922dedf4422f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8519f80d8938a39f2f0de4e5a5ab3d395db334c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dece8bc08a539d3ebcc64560c5bfd655254649df', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47617e2e68d7fb348d1a62e17111354b60baa95a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f885d2ab66bd3f2100cc4d2523084c17d8192b4d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf5e344d7429d10a86c82642e889d4c81c09d187', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47e1e0bf654f9c4153ad190e37d4ecc9e20a9bc0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5630693e972b4e6e571c32edfffbcf0df002ee8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '099fd8a1208e011fa4f835a01e314cb6ce50405c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7531f4ffc30d8bf928c3310b52b118d20176b770', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f6601dedd3eb543a17154d2acc99991263cd841', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0fb3c1c9a3704c1a09434abdd964620a2c100ae', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2753fef3d0dc36cd9eb35b1ae3927ad39cdcecd9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cd4647ef16f76396ee8602c41b86ad810a402cd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8de39fbd964e12b26ab1867ea34871cde1bf0bf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c3d6ae5c71428a42703aea96e51be871cc6bd7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f47c72e9197e57028636569b9e9c4845681b870', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '893bb6a41b13ad3ce437445a10dd1c3a6f057af7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1352920658,Issue 1182 faster tagging for PyBaMM citations ,"# Description

Enables a faster method to tag citations based on where they come up in the code during a simulation (models, solvers, etc.) – via a `caller_name` method that calls `sys._getframe()` to access current frames for the `pybamm.citations.register()` function. 

This PR continues the discussion on #2862 and #2908, with some results of the speedup available at https://github.com/pybamm-team/PyBaMM/issues/2908#issuecomment-1537077212. Here, `sys._getframe` is preferred to `inspect._getframe()` for avoiding the internal `hasattr()`, in order to reduce any potential performance impact(s) of attribute checks at runtime.

Fixes #1182 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [x] Tests added that prove fix is effective or that feature works
",True,2961,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/2961,https://github.com/pybamm-team/PyBaMM/pull/2961,closed,199,31,2,13,5,0,0,0,[],2023-05-16 18:02:55+00:00,2023-06-09 12:13:31+00:00,2052636.0,"23 days, 18:10:36",[],"[{'commit_sha': 'f8bb4a24334da39ab1f7864e993c5a6f1a40c8f0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '142eb7b6ac81b193612bdf99b54bd1dbbc972b33', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c20aa58c73eec35f487e0f16aa4ce60e97edae1c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39dfcf34272e049c10f9d605d9803d66a386d0e5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8396827f9ab67a8ee9cb31749d949bb97f333f35', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '091f17bb0382ae28d86d62c3026ca0f47c6ca732', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83378588b4bbde360fba4227ae69596b99281bc7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2146306bf4b522b536f602d07217dd08f74ee891', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f260f94ae7e9c0f5cb891215a916d03d18018041', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e3fe0371aa96f2c4b029d21814b3b7efb7a8332', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76a2b73ae81606ff4c6005f4ca1ed4593b29e024', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '581f1b8cff96b21ed96094b8cad63219e0a5a256', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '511abba7890484971cdbf8846779033711c9c9fe', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1356242366,New status badge to reflect scheduled tests,"# Description

New status badge based on #2867 

Fixes # (issue)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,2969,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/2969,https://github.com/pybamm-team/PyBaMM/pull/2969,closed,1,1,1,1,1,0,0,0,[],2023-05-18 20:29:49+00:00,2023-05-19 08:41:16+00:00,43887.0,12:11:27,[],"[{'commit_sha': 'a0b5a4c3490d29059131721990b0da8bb3f210de', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1381443289,Use Python 3.11 for generating coverage in CI,"# Description

This PR updates the version on the GitHub Actions steps so that coverage is generated with Python 3.11 via `tox -e coverage`. This was discussed on an earlier PR (#2867) and should work fine since `Jax` was updated recently (#2927)

Fixes # (issue)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [x] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3016,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3016,https://github.com/pybamm-team/PyBaMM/pull/3016,closed,10,10,2,1,1,0,0,0,[],2023-06-06 20:05:45+00:00,2023-06-09 12:19:01+00:00,231196.0,"2 days, 16:13:16",[],"[{'commit_sha': 'c7b6e1d428801400ab5c313c854264b1fb0bc1d6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1386439081,Add inline-tabs for Sphinx docs,"# Description

Adds the [sphinx-inline-tabs](https://github.com/pradyunsg/sphinx-inline-tabs) Sphinx extension to save space on installation instructions and remove redundant steps in the documentation for developer and user workflows.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3022,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3022,https://github.com/pybamm-team/PyBaMM/pull/3022,closed,163,101,8,9,2,0,0,0,[],2023-06-09 16:16:23+00:00,2023-06-10 01:24:55+00:00,32912.0,9:08:32,[],"[{'commit_sha': '3a1249e41dfabea362542b606208581817073997', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f46170738e8c98ff3ea82eca3aa70c648e59878', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3907aab92fd5dfdd1a728d00d05ac992de9a3f7b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1acb75779431f0f189cd7f456b676b42cda4104a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e52ddc3cee5af6441fcdc396231ef5ced461b5e4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d6a09b8582915db43279436e318055e2f8ea1a7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6746a0fbcf2e50101cf1ed038fe5345b434110', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68d6da30afe24f3735b9c87d7bbc5b37909a1daf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db009af35362ef92e8f4d19542e48a1481102bea', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1390642742,Use `sphinxcontrib-bibtex` for citing references in docs,"# Description

Removes hard-coded references to relevant papers within docstrings and other places in the documentation using `sphinxcontrib-bibtex` to parse citation keys. This also replaces `CITATIONS.txt` with `CITATIONS.bib` 

Closes #2649 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [x] Tests added that prove fix is effective or that feature works
",True,3034,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3034,https://github.com/pybamm-team/PyBaMM/pull/3034,closed,411,731,88,24,4,0,0,0,[],2023-06-13 13:36:18+00:00,2023-06-21 13:35:38+00:00,691160.0,"7 days, 23:59:20",[],"[{'commit_sha': '85deba64af9b331e4dd2ab9c1754d7aaeea880be', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfb88437ea3134c22c9d148d13a40a9571f063a8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '938d4ccd23230fe0670d18479d46400f660d957d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f86d4f002e2a9ca8c31e6ebfc434c36cadef4eb3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4afcfcc283211e14d12a0734c3bf820a42cf2b80', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b740ce413dda4f20c66fa9e232e0e8cd4de234', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3afb2e2794f8d8f274149889bba5c0fe47dd96bf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408d3137381194a5f1a53fcd5a50d7503dadf764', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c06f04c4b1603b73edc3cfb595683fd232e6dc9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a96438d8dc3449d3676fc8925d541c739b8503c7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aae215f049e0fed301cb6facb134f1be78a127d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec763385edcc6191cfd04e8761650ed253b05ccf', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1be8099bcb1b73751f8ab968d410ad3a458a51c2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e37df6eec8296729627e62d312e4a7715411a5f7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccdb93cf618fc756a1204b0ed94ebc4c58cbc72b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dcd25030ac4a163516de2263d835d24c1b4e649', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc885c0175b4eeba50a00756af1807f11227979d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccbf594ef1fe2f680b190e307f78e6e7c917f5b7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f23bee7dcb5e5fc492af48d90522c91921696c7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '845a317bbe89bbb0f8b0af815f5fe9a3a911ffc3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '442de6cddc9e2576374a6322c16d46b3d5d8c7cf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74d998350306e1a4e3432a4c9c489e6c51d479a1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f284fabdea3b657ca8498b16edd6dcf7b9bf08b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '596d3903d097a35242d4b5b5f4f34b5992ed4e7d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1395479229,Use `nbsphinx` to embed Jupyter notebooks,"# Description

This PR adds support for `nbsphinx` in order to render Jupyter notebooks in the documentation. All the notebooks will subsequently be moved from the `examples/` folder to `docs/source/examples/` and will be configured as adequate. Furthermore, `nb-gallery` will be added to display thumbnails derived from the outputs of the examples.

Tasks

- [x] Embed all Jupyter notebooks (Tutorial 1 was modified slightly due to issues with printing citations with BibTeX formatting).
- [x] Display thumbnail galleries
- [x] Fix related warnings that come up when building the documentation
- [x] Prologs and epilogs for buttons
- [x] Explore other, advanced configuration options

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3043,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3043,https://github.com/pybamm-team/PyBaMM/pull/3043,closed,2880,2107,100,60,6,5,0,0,[],2023-06-16 10:45:20+00:00,2023-06-28 13:06:30+00:00,1045270.0,"12 days, 2:21:10","[{'comment_id': 1233334207, 'comment_body': '```suggestion\r\n!docs/source/examples/notebooks/expression_tree/expression_tree5.png\r\n\r\n```', 'comment_created': datetime.datetime(2023, 6, 18, 16, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1233334676, 'comment_body': ""Can't we pass an --ignore equivalent flag here to ignore testing the notebooks? I'm not sure if something like this exists"", 'comment_created': datetime.datetime(2023, 6, 18, 16, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1233334794, 'comment_body': 'Ah, just read your comment, will check if there exists a solution.', 'comment_created': datetime.datetime(2023, 6, 18, 16, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1233346731, 'comment_body': 'Did not notice that, thanks!', 'comment_created': datetime.datetime(2023, 6, 18, 17, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1233351958, 'comment_body': 'Looks like we have another issue: the doctests now create a `docs/build/` folder containing static files that are not deleted upon completion; re-running the doctests builds a duplicate of the docs with that folder included. This causes an array of several other errors 🙁', 'comment_created': datetime.datetime(2023, 6, 18, 17, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '85851421633e680986f1ecedeb823a3049f7bf19', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58d171a5fefc1aabd1958ae8fa61aad71be50209', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1616b11c16e84141566fca3cfa0b13f90453bd89', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e3ae6e0fce5564bb2cc18c232a9c7ca68d8429a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b8278b3fc8022a21d753870fdeff52236efd84', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '542360b88f6115dfecf1714e627c1172d43a7698', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e189ff61a4b644f7af8a8fac2cea70205123bcc2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b822b519fba4db2937b367925df15cb3dec32792', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23de7eeba0ce0cfcb85a94ac3fce4187627194d1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce3ed442efbd1f3b8642f9a29651a24a17fbb77d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca80658196231d32f5e10496b9d7977e73a2b8e4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccd789b720a255db713d152c0b76711d67ad980f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '806727c51aadc8b6a6318595d58b8d0d2cf6813b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '213aa89bc6b0910257d73b08f676544380381ad3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e85d141a3cb1e81760af93334f0403ed0c6c1d9d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '718f05ffb872439037b006065f5c83148a950ca7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4011730b7ef2d571d00d9650613e633f1493f99e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43caaf7f36684352ef9b6aaeef78286bca37ab00', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c0b6c6888f562816b145320fdd54c97b4ea583a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddd3d6669570097f0270ff7ea5b6a7645758d879', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ba7c221e4efeada5645bd4bedd8c399867fd71', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb75901f59c07dcb1239b08f232d47f4e9c62e12', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f200efd2c02c9f9eb65247ac20d8137be1395cae', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3ef7ca836df8c1233171def25fd75af89eac00d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c0007c9306b7765a88ce58e1a4e6b26e8f8f667', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ffb1d1621e5d0013f440107c97437e7e7908ae9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58978563afee8c4315bd3150eb03a578ff4cf996', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fef1a11d8b230a0238c89fc18d68a6895499f80', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cf8edbcb1f624bb5cb817091fcd8924535addcf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fc8442e94b04d2ef5fe5093899815b02759e496', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a7a0ce70ff72b5fa9305b74bab4262afcb745a3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26b07bc656c6d8a551dc4e08cb1d6671fe1af122', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e973c77bfdeb958e17a3a4207e38d55214ce5e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68f1c0c7eb45a83472169d5ee277d8e11c0190bb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcb1a9c2e346606c7a3a38b5064660557d4d9b7a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a42a59d703a88ce0a9af89fbf79415add4a10178', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f73fd35e4df49dac22cc1139f799622253f093c4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8763d00a88a776884a8efd78d065d029d0df80d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f447a97d6ae6c62379e416a147745e2119ac552', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92fc540b92cd8298341b7b95b563ab3e35ed4493', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50533e45f0744dcd4c8c21db751513d40555f625', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77032b3f545b5e87ecb9cc86bc84fdd979aed89f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1557aaf3a084eaadb401756664037d7a6df4eed', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '651bc202adaa8e05b34b46acc789bea86e9f62c4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b03a9ae4202a0da53c0dac0194d2d4c00d0b540', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35ef0a9098eb84bdb273cc68dd8750f7d1084acf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cb801dd39f118e6677b933e53f3aa5f2d36e8d6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8100505d1ae5391e3bae354339d878024682228c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82c375053f1291bb29a9ecc931b52de1b5e71050', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bef508ad42a5eb498a6019a55dbbadb55021d451', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c1453a010d311754865d6cb62898d37fc274e09', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5df63c70c3471f87caa105e2fbfa49d1deff91b5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbd3c271b47dd89b471fde138af8e1e14a853715', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd04a0e2d0dea30d50f530037d41437fe248b742', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbc8fe5646ff5f637370e3edbd6be9c91cc322df', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01c00fdfe89c3f7216f06c16f8b1169f74c8823', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31e9a17f90da37ef0c2237c2b610516124df627e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cec34ad84e4044114ff3ecb83ff3f06f93e72157', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93b0132592fcf929d3fa3f8fae4aa3c788a655b5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d2bfc4b52814d762bc58a3a19136593e9f27568', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1397968496,Remove backport `importlib_metadata` from required dependencies,"# Description

A quick fix to replace the dependency on the backported module `importlib_metadata` with the standard module `importlib.metadata`, since we had dropped support for Python 3.7 and below in #2370 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3050,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3050,https://github.com/pybamm-team/PyBaMM/pull/3050,closed,3,5,3,4,1,0,0,0,[],2023-06-19 10:30:25+00:00,2023-06-19 14:04:41+00:00,12856.0,3:34:16,[],"[{'commit_sha': 'e59f9d9a613c97ab610e89e1f906285da564fa60', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a80e466bfd508c223781367f168960d85c42aeed', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9623c9bad4789e8295e4a5f610c8093f49c3eee6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'facd037bc9f6fad62e4faf5e5177e6153d2e82e2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1400431615,Extract single element from `np.ndarray` when converting to scalar,"# Description

Extracts singular element from NumPy arrays with `ndim` > 0 using [`numpy.ndarray.item()`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.item.html) before conversion to Python/NumPy scalars (`float` data types)

Fixes #3052 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3055,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3055,https://github.com/pybamm-team/PyBaMM/pull/3055,closed,30,11,6,2,2,1,0,0,[],2023-06-20 19:51:45+00:00,2023-06-21 15:41:22+00:00,71377.0,19:49:37,"[{'comment_id': 1235784871, 'comment_body': 'Here, and in other places too, [`np.ndarray.item()`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.item.html) is preferred to direct indexing with `[0]` – because it is faster: https://stackoverflow.com/questions/62491166/numpy-index-access-vs-numpy-array-item-performance\r\n\r\nand `item()` _looks like_ it is faster than `item(0)`:\r\n```python\r\nimport numpy as np\r\n# array with ndim = 1\r\nx = np.array([1])\r\n```\r\n\r\n```\r\n%timeit y = x.item()\r\n36.7 ns ± 0.0161 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\r\n```\r\ncompared to\r\n```\r\n%timeit y = x.item(0)\r\n51.2 ns ± 0.0139 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2023, 6, 20, 20, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '747f738088830ce055aab9d0526f452c38e8834a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71001216ac019dcb965d9a0dd977e0f222c0b0a1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1403910656,"Temporarily pin `autograd` < 1.6, fix builds","# Description

Adds an upper-bound constraint to `autograd`'s version, in order to fix builds for Windows and ARM M-series macOS, for more details see https://github.com/HIPS/autograd/issues/601

**Update**: fixed after a `1.6.1` patch release
Fixes # (issue)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",False,3062,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3062,https://github.com/pybamm-team/PyBaMM/pull/3062,closed,3,3,3,1,7,0,0,0,[],2023-06-22 17:29:29+00:00,2023-06-23 16:01:05+00:00,81096.0,22:31:36,[],"[{'commit_sha': 'a3c401606918d07afff7b1cd2a9b17aea3507590', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1406318374,Make docs more maintainable,"# Description

1. Adds PyBaMM modules to `index.rst` using the `.. automodule::` directive—the toctrees have been moved to their module-specific `__init__.py` files. The aim of this PR is to make future updates to toctrees for classes and methods easier

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",False,3066,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3066,https://github.com/pybamm-team/PyBaMM/pull/3066,closed,139,90,20,13,5,0,0,0,[],2023-06-24 19:01:49+00:00,2023-07-19 14:29:25+00:00,2143656.0,"24 days, 19:27:36",[],"[{'commit_sha': 'cb19bd86c288d654c8f489ec7882d4795c2b8340', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3c8d8586f6871ba7b8b660e74c34120a66b7cf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e17dea27f8e68d741ab33b665bd3c11064016c6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '344e9c00fc96e1da6f9441751b1d3a2f8513da51', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afa0fc90113cb9be3bf5fbaffd04ba5b80a9ecd9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1028629617ec579dd5bcb43752504ce8316fc07e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00945d4011bbe60902f1d964dc354d31bdf9f782', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef9b5bca8fefe7fa6455d4d4aaf96a698aee85cb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8151b2bc0f0b8c0e85e4caff9d9a33df761a448f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17afaff9fd2014579fcf5c55e2c57675b9b24a82', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb7b9189d1bec3c832729a8bafca3cdb96893ac6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b37b7409291ea67539d752248190ace8e471ed65', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02cf81794400f4f00890bd544b7d6c74641eca37', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1412074079,Generate inheritance diagrams for models and submodels in the documentation,"# Description

Adds a Sphinx autodoc extension that appends inheritance diagrams for models and submodels classes in their docstrings, using a dropdown from [sphinx-design](https://sphinx-design.readthedocs.io/en/pydata-theme/dropdowns.html), and [sphinx.ext.inheritance_diagram](https://www.sphinx-doc.org/en/master/usage/extensions/inheritance.html) – which uses `graphviz` to generate a unidirectional graph in `.SVG` format that displays derived classes for a particular class.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3074,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3074,https://github.com/pybamm-team/PyBaMM/pull/3074,closed,118,11,6,13,2,4,0,0,[],2023-06-28 17:35:18+00:00,2023-07-06 20:51:34+00:00,702976.0,"8 days, 3:16:16","[{'comment_id': 1245796049, 'comment_body': 'Will the documentation build fail if this is not installed? If so, we might want to add this to ""Install from source"" documentation.', 'comment_created': datetime.datetime(2023, 6, 28, 21, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1245803072, 'comment_body': 'The build will not fail, but on a previous build where it wasn\'t installed, it did not generate the graphs from the `.. digraph::` directive that gets built—showing this warning message:\r\n\r\n```\r\n""readthedocs"" WARNING: dot command \'dot\' cannot be run (needed for graphviz output), check the graphviz_dot setting\r\n```', 'comment_created': datetime.datetime(2023, 6, 28, 21, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1245806863, 'comment_body': 'We had a mention of `graphviz` in the [Developer installation instructions](https://docs.pybamm.org/en/latest/source/user_guide/installation/GNU-linux.html#developer-install), adding it to the source installation instructions too', 'comment_created': datetime.datetime(2023, 6, 28, 21, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1253514147, 'comment_body': '```suggestion\r\n            lines.append("".. dropdown:: View inheritance diagram for this model"")\r\n```', 'comment_created': datetime.datetime(2023, 7, 5, 19, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}]","[{'commit_sha': '957bfe88bd6011d9b7d3a5bedb51d0d59fb16e6b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22ba8cc14962af507e8d5fc559a125658f0ff8b8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33e4b89444d56c6ffec9a8f344852ee2f88c1ae5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e91caa41865c6a23e2d4d65bad50b104649b718f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9592ce845e52aa13c1437c73c2ec7c5c2b9d6f2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '305f5cee1c0d44c0dd8e98d28e2d9c137a024664', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4288b3f222ed83a058d7af205b48472862dde57f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '311f09d4228ea8c57860e750252f4d43591beca6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc999985a7a799d49cc1843aed8dfc708eeed131', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3febd84a546581b1120f78249bbc03a409167bab', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f51c2b179f84a235e1c9289a9dbd74a44d006e3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2665dbdd58e4d75ffbee3a90d313261c1eaa4a81', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '109adce092e255cc4a7ccc18e62864474c389c45', 'committer_username': 'valentinsulzer', 'committer_name': 'Valentin Sulzer', 'committer_email': 'valentin@ionworks.com', 'commit_date': datetime.datetime(2016, 8, 3, 13, 47, 5, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1412400708,Add an option to download Jupyter notebooks from readthedocs,"# Description

Adds a link to download Jupyter notebooks in the PyBaMM documentation such that they can be run offline by users.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3076,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3076,https://github.com/pybamm-team/PyBaMM/pull/3076,closed,14,2,1,2,1,0,0,0,[],2023-06-28 20:49:15+00:00,2023-06-28 22:51:21+00:00,7326.0,2:02:06,[],"[{'commit_sha': 'a00cb720814b054e7018e4a09d0ac19374fb953a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a1c00c61b48cd403e5c51429a51cc7fe518cf3a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1412508518,Restructure example notebooks and their thumbnail galleries in docs,"# Description

This PR:

1. Adds a thumbnail gallery for all sets of notebooks on the main examples page, for easy access
2. Includes the Getting Started and Creating Models sets of notebooks in the user guide

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3078,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3078,https://github.com/pybamm-team/PyBaMM/pull/3078,closed,135,114,10,5,6,2,0,0,[],2023-06-28 22:58:58+00:00,2023-07-03 15:32:59+00:00,405241.0,"4 days, 16:34:01","[{'comment_id': 1245958098, 'comment_body': 'Should we also display thumbnails directly in the user guide page?', 'comment_created': datetime.datetime(2023, 6, 29, 0, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1245972025, 'comment_body': 'Good idea, done', 'comment_created': datetime.datetime(2023, 6, 29, 1, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '93e39ee858d8802f7a108be4457dcaaf863abc38', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e13f6a7ed734ed3e08c7333190b63a92e552711', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70bab0203aa131cc5d2dca0574dcf0a257a63ca6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c01028dde3e8b7a31263e1735215f1f835764c5d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdc05971a9186e0e9e4a3a624ae0de63e6b30ea4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1412613613,Cache `nox` environments and refactor unit tests in CI,"# Description

This PR caches `nox` test environments in order to speed up the CI. Environments are matched with a key that corresponds to relevant files that are subject to change, and the Python version (including the subversion) to avoid mismatch constraints. It also refactors the unit tests to run in a single step for Linux, macOS, and Windows; closes #3095 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [x] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3079,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3079,https://github.com/pybamm-team/PyBaMM/pull/3079,closed,62,21,2,17,6,4,0,0,[],2023-06-29 02:10:26+00:00,2023-07-05 12:15:48+00:00,554722.0,"6 days, 10:05:22","[{'comment_id': 1251117048, 'comment_body': 'Is it required to cache ubuntu and (mac + windows) dependencies separately?\r\n\r\nUnrelated to this PR, but we thanks to sing nox sessions for multiple OS, we might be able to refactor this workflow file a bit. Could we then cache everything in a single step?', 'comment_created': datetime.datetime(2023, 7, 3, 16, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1251129207, 'comment_body': 'Yes, we can definitely do it in a single step—it might even be faster because it would then perform the copying operation for the `nox` environments just once.  Should we cache the `pybamm-requires` environment + related files in one step, and the `unit`, `integration`, `examples`, and `doctests` environments in another step? Or should we group caching by OS?', 'comment_created': datetime.datetime(2023, 7, 3, 17, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1251137922, 'comment_body': '> Should we cache the pybamm-requires environment + related files in one step, and the unit, integration, examples, and doctests environments in another step.\r\n\r\nI think this sounds good, given that I am trying to get rid of the OS separation in the workflows - #3095 ', 'comment_created': datetime.datetime(2023, 7, 3, 17, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1251152284, 'comment_body': ""I was going to try this but I realised that we have different files to hash for different environments, so we will have to keep three separate cache steps: one that caches `unit` + `integration` + `examples`, one for `pybamm-requires`, and one for `doctests` (with different sets of `extras` installations)\r\n\r\nI think it would be better to keep all environments' caches separate (i.e., as they currently are) since they contain the name of the environment too, which will make debugging easy—unless you have a better idea"", 'comment_created': datetime.datetime(2023, 7, 3, 17, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '7d302468e9668bc37d2d8562877ea34516e2f2d2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a0224b738347bfc18e638d7d52ef3bd36623c94', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86ae1d4bb0742094e8396c01aeb9b977365f1807', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f0f793595b2befebb794db658bb9fc2678d487c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d598846b8ead83ccbcdb2ba29135981d487ca26', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4310a2d3b94e678aae7796c7556a00de671ee4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4f81f94717f3b9807b5a56ba9205263620ebd01', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9627b31684a0a9f359739333b09545009fc5b98', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f774d6d6339f50979e7c92f1c9b35e6cef5d595b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb9e69411b3dfefbcd4723b9b0ba724f30fef7c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d9074a819e2d59a579631d82d91ab0cfcf361ef', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28b784ddd5c79793002c030f27c9c7a5954ca77d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8255e2c11cf5f8d99fc3b4f9d4e99f079f27b2f6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '487f15e0b5503e7f0b3c79eaedc0d7dc7fed81e4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d2ffcd91740d146c15e6a13d1c5c211eec66373', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc09c1cc25fdede30a3bcd4fe22d249af03dc0a8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e9782e224bf40ed7bf4630c8b0742a8244a549c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1413835486,Add floating window tooltips for cross-references in the docs,"# Description

This PR adds and configures support for [sphinx-hoverxref](https://sphinx-hoverxref.readthedocs.io/en/latest/index.html), which enables hovering over classes, methods, and other links to directly display their results within the same page

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3083,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3083,https://github.com/pybamm-team/PyBaMM/pull/3083,closed,52,1,5,8,5,0,0,0,[],2023-06-29 19:37:36+00:00,2023-07-05 12:06:43+00:00,491347.0,"5 days, 16:29:07",[],"[{'commit_sha': '6e6cbc2a9c2a89f9d2624fe48b6abe709cd1ba41', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6da42903606c325c324d76377d7153da79d207f2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bb450af2cfd90c49f62d6410af14348bdeebb82', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a972bd541ba0c64987e2b9f8adfb35823cc017d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f8a909c10693d59a85ff309f729a79ecd8df73', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89c9cd1a7d7d2acaf23501e2dc6054a20f1e69c1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac5cf116e8365ac6b78625437385fc41242a65d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f890dbbef38e7ef88d8f25d15aac5b7742964762', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1416760901,Display when pages were last updated in the docs,"# Description

Adds the [sphinx-last-updated-by-git extension](https://github.com/mgeier/sphinx-last-updated-by-git) to display last-updated dates at the end of a source page

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3089,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3089,https://github.com/pybamm-team/PyBaMM/pull/3089,closed,22,6,4,7,3,0,0,0,[],2023-07-02 14:35:19+00:00,2023-07-05 12:09:16+00:00,250437.0,"2 days, 21:33:57",[],"[{'commit_sha': '14740c64e7548925d29ea5d9a1cf09edc8917e66', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '080891b7e3ce2666e99b60af3015a459dab4b4e0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '783d9427bfd3813f429fe7829772e58649a68daf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b78f27c8d3e5c7d299862a3057c6cec60d932348', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b312f04b44043a18f447ec8efaf6bca5c81690bb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7d6238b806812a546fa1cf927b8798d6bd7c180', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c49487314c46844e098189a316aeead288866b8a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1417812897,Fix scheduled tests,"# Description

A quick fix to quick the failing doctests step in the scheduled nightly tests, after #3043 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3091,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3091,https://github.com/pybamm-team/PyBaMM/pull/3091,closed,1,1,1,1,8,3,0,0,[],2023-07-03 10:14:08+00:00,2023-07-05 21:03:09+00:00,211741.0,"2 days, 10:49:01","[{'comment_id': 1251016942, 'comment_body': 'Will this be required while building the docs locally, or is it only required for deployment? We might want to add this to the dev docs if it is an absolute requirement.', 'comment_created': datetime.datetime(2023, 7, 3, 15, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1251040010, 'comment_body': 'I had added it to the contributing guide in the earlier PR, just missed adding it to this workflow', 'comment_created': datetime.datetime(2023, 7, 3, 15, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1251041711, 'comment_body': 'Ah, great!', 'comment_created': datetime.datetime(2023, 7, 3, 15, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}]","[{'commit_sha': 'e5d498e6f1400f7b636230b750b9b4c64271d3f2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1418800873,Enable multithreaded documentation builds,"# Description

Adds the `-j` command line flag with its value set to `auto` to distribute the build procedure over multiple processes. Helps speed up the build since processing the Jupyter notebooks takes time (#3043)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [x] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3097,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3097,https://github.com/pybamm-team/PyBaMM/pull/3097,closed,20,6,4,5,2,0,0,0,[],2023-07-04 00:20:43+00:00,2023-07-04 14:35:29+00:00,51286.0,14:14:46,[],"[{'commit_sha': 'b5be1dd19061d54bae97a3b919115e442c59ccf3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a6e8a23e07c95e05679529a537d1a06f340b15d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '254d8e62083a9158752b1e2460b156c006c811ac', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4b7bff539ed282971ab13274ebbc72e173a384e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ecdf2a5ff46952b96e5b918f03ba075f13bd099', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1421595345,Configure `versions.json` and remove the version switcher dropdown,"# Description

Adds a version banner at the top of the page for old and unstable versions, and configures the version switcher dropdown to work again

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3108,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3108,https://github.com/pybamm-team/PyBaMM/pull/3108,closed,17,45,12,19,7,2,0,0,[],2023-07-05 18:57:47+00:00,2023-07-28 14:28:15+00:00,1971028.0,"22 days, 19:30:28","[{'comment_id': 1268241700, 'comment_body': 'This will only set the `html_theme_options[""switcher""][""version_match""]`, it won\'t work for `stable` nor `latest`. Currently, they\'ll get `version = pybamm.__version__` (defined in line 33) which is not the version you want to have matched to them IUUC. In addition to these checks to cover local and PR builds, I think you should also have specific checks for stable and latest. You can use the `version_match = os.environ.get(""READTHEDOCS_VERSION"")` variable which you have defined a few lines higher. According to [rtd docs](https://docs.readthedocs.io/en/stable/reference/environment-variables.html#envvar-READTHEDOCS_VERSION) it will take exactly the values latest/stable for their builds.\r\n\r\nThey do have independent builds and they appear on the versions.json file, so their builds should have the right value of the version match. Otherwise, users will click on latest and go to `.../en/latest/...` docs, but the ""folded"" version switcher won\'t show latest while browsing the docs.', 'comment_created': datetime.datetime(2023, 7, 19, 15, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 1269677457, 'comment_body': 'Thanks for the review! As noted previously in our conversation—you mentioned that the version switcher is still not going to work for previous documentation releases, so we are deciding to remove the dropdown altogether in order to rely on the server-side readthedocs one. That is, unless there exists a workaround for not having to deal with patch releases with the latest `versions.json` set?', 'comment_created': datetime.datetime(2023, 7, 20, 16, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '90a1829caf3dbc1a17cd186e301d0b5f700da269', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d39dca3dc5a18a0f847692ae5a20ddebc4057fe', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c788a4ca47e87096a5dda6c725b50b89bcbec62', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0d5b241b69d59816aa5825795a2059d559df1fd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13a424bc56a35889ce12ddc7941fa514ccf6c36f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72c570aae3ef7c1fbb0f4eb2227377daae54ee57', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6f24e7108f1536fe4e3755b513947ea44d5bcd4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea0e748d17ec8a7b81aec9a614607c2738784271', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea72e4786a1ec1cd8b8b4f48d40efc3d68d048cd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73ec599143fed1423642adf96171fcf88b07e664', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c731f0e612fc6ee3929127f1e3f1dbea5aa23894', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6e0570441eac75b3b70cd9eed3a3c2db9c7815d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b956d2247880dd7ff70dcff74fb45a0774934b2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1fe7064abcaaa4d957ccbaf631d1f2dbe8f1ff8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92e01abfb01c64a06fad96da0d600f5453322fcb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbb58954805f1aabbbf9d8328d58a59d85272fb1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7abfddc57d588fd41ee9e58edb6de88f3afd4b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b2ac50292c0acf2752f3a26d1c5ba95245ab16', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2989bb36f0e91aeb80e47754e34f84ac064df035', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1425658032,Fix failing doctests,"# Description

A quick fix after #3074 and #3097 to declare the `inheritance_diagram.py` extension safe for parallel reads and writes, in order to suppress warnings that arise when running the doctests in the CI which are treated as errors.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3123,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3123,https://github.com/pybamm-team/PyBaMM/pull/3123,closed,5,0,1,1,2,0,0,0,[],2023-07-08 02:17:40+00:00,2023-07-09 02:56:11+00:00,88711.0,"1 day, 0:38:31",[],"[{'commit_sha': 'beddc2761722390369df1e17619a10208c00674f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1425834704,Updates for `versions.json` and related configuration,"# Description

Required for #3108, adds changes for `versions.json` to the codebase

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all`
- [ ] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3125,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3125,https://github.com/pybamm-team/PyBaMM/pull/3125,closed,102,68,3,3,1,1,0,0,[],2023-07-08 06:23:33+00:00,2023-07-08 19:27:21+00:00,47028.0,13:03:48,"[{'comment_id': 1257297430, 'comment_body': '```suggestion\r\n        ""url"": ""https://docs.pybamm.org/en/v0.1.0/""\r\n    }\r\n]\r\n\r\n```', 'comment_created': datetime.datetime(2023, 7, 8, 15, 36, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}]","[{'commit_sha': '9bcf40fd67daeed783cf337aa89ce4506c3f9df3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fa2d7ccf2b561cf005484ef2c4250f5f0bc53b3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b08c85967f6cdbc64f0fb263dfea305453229a50', 'committer_username': 'Saransh-cpp', 'committer_name': 'Saransh Chopra', 'committer_email': 'saransh0701@gmail.com', 'commit_date': datetime.datetime(2020, 11, 6, 12, 35, 19, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1439013165,Ensure `setup-python` outputs are always included in `nox` cache keys,"# Description

A follow-up to #3079 and fixes the failing Windows tests with Python 3.11 on #3108. This PR ensures that the Python version (including sub-versions and patch releases) from the outputs of the `setup-python` action is used to build the cache keys and invalidates previously built caches when there is a version change (i.e., from Python 3.11.3 to Python 3.11.4), making the caching more robust. See https://github.com/actions/setup-python/issues/330#issuecomment-1126638275 for more details.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3157,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3157,https://github.com/pybamm-team/PyBaMM/pull/3157,closed,8,7,1,1,1,0,0,0,[],2023-07-18 10:41:04+00:00,2023-07-18 23:27:56+00:00,46012.0,12:46:52,[],"[{'commit_sha': 'e1beba858f36633931fcaeac3636ec4f19fd17db', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1440024623,Algolia docsearch,"# Description

This PR adds Algolia DocSearch v3 since our application was accepted recently. Third-party search functionality is not supported with PyData Sphinx Theme yet (https://github.com/pydata/pydata-sphinx-theme/issues/202, https://github.com/pydata/pydata-sphinx-theme/issues/795

Therefore, manual templates are added along with the [`sphinx-docsearch`](https://github.com/algolia/sphinx-docsearch) extension from Algolia to render the search bar. This disables the default search bar.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3159,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3159,https://github.com/pybamm-team/PyBaMM/pull/3159,closed,103,26,5,15,6,0,0,0,[],2023-07-18 22:35:09+00:00,2023-07-26 13:09:19+00:00,657250.0,"7 days, 14:34:10",[],"[{'commit_sha': '3c14e4bfec7e02886d221e0be14aa889f216b1cf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1de16cbc6dd543634b94598c241645d0c4acfd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dca58fc1c1540e687e49eb66a340bd448d9b7b4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0db109d6b94fa674b56ea22993fc6972e6cb0e4e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '767b64ac66c544a154df2b7d8f69d6839852aa46', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a936428f775ce7a35d82e83b56a87a41747c7136', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ff70ae0def04fcff0dba9cbb7ac20d6552e4fdf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9be19a564edac7feaa8a3a7018ae1026c459448', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2793b0c2c9fb131d698dc32190bbb78636c49eeb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b247ca5dbfb673987574d17dcbb36282efe2a1f3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b42dcd7a7e4648d683f2f6b7d36ab91124c26e90', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91389994cd31197d2b0d6b4a893a2393c09c9078', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '581de5b8a4cb9b16f6a828474bf99f1ed20e6cf9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b995df874879aeb46acf11c6b699fced3e415893', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b482dcaea60a3793f35dc0b6c1036bc6204a81', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1441228480,Restructure notebook galleries,"# Description

This PR adds the notebooks to the examples page directly and fixes their table of contents tree.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3167,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3167,https://github.com/pybamm-team/PyBaMM/pull/3167,closed,114,225,3,2,3,0,0,0,[],2023-07-19 15:09:29+00:00,2023-07-20 16:02:27+00:00,89578.0,"1 day, 0:52:58",[],"[{'commit_sha': '47ca68c617698c9a4eda22cf9e9812f6e6290e7a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bca9e6bf62f224c0386dbf0ba0de11a75060e62', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1443250264,"Fix broken notebooks links, port `pybamm.readthedocs.io` ➡️ `docs.pybamm.org`","# Description

Fixes #3073. Some warnings that were not useful anymore were also cleaned up

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3173,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3173,https://github.com/pybamm-team/PyBaMM/pull/3173,closed,72,71,36,9,3,0,0,0,[],2023-07-20 16:38:22+00:00,2023-07-20 20:36:27+00:00,14285.0,3:58:05,[],"[{'commit_sha': '13a5f2455ba56a4d7e662f9af486486a000248a9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e58f388d765de2f40b2f9d8b6e7a5011fd4ed929', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b3f0e793afd95744fc63626c18a67c97b15e207', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c4809f52cf6b04178260d754c0abab8648eedb', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '630bdf4a958e6a6592b41aba9419ea54c27c8af1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e53896fa55db107a22f8b3c16e418791266fd265', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b8a17bdce528255f478a5dce7e4f5da967bdb40', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d862c1d4f26bc7c35124c369854d1a41da2049a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b418e12096d26f3e20e07452e0e655b3fa5cd51e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1445728834,"Enable downloadable PDF, EPUB, and zipped HTML formats on Read the Docs","

# Description

According to the [documentation](https://docs.readthedocs.io/en/stable/guides/enable-offline-formats.html). This PR will build PyBaMM's documentation in more formats and make it available for download for subsequent versions.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3182,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3182,https://github.com/pybamm-team/PyBaMM/pull/3182,closed,5,0,1,1,2,0,0,0,[],2023-07-23 20:20:49+00:00,2023-07-26 13:14:20+00:00,233611.0,"2 days, 16:53:31",[],"[{'commit_sha': '522c0609892b6e8f37626a76b7caa721b6eeb548', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1446018757,Add docstrings for `nox` sessions,"# Description

Adds descriptive docstrings for `nox` sessions, which can be listed with the `nox --list` or `nox -l` commands, and some general improvements. Closes #3048

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all`
- [x] The documentation builds: `$ python run-tests.py --doctest`

You can run unit and doctests together at once, using `$ python run-tests.py --quick`.

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3183,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3183,https://github.com/pybamm-team/PyBaMM/pull/3183,closed,29,11,1,3,3,0,0,0,[],2023-07-24 04:54:56+00:00,2023-07-24 14:43:08+00:00,35292.0,9:48:12,[],"[{'commit_sha': 'e90f5efb3a6515cc2df74deb17fcb9e49b7c7567', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53ae936f785658a3239cc0956f9f191cef3ab2e7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e98fa5deb7f07a7300a8c3ab6760d177917eb96', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1461510999,Updates for `.readthedocs.yaml` and `docs/requirements.txt` deprecation,"# Description

Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.

Fixes # (issue)

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [ ] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3228,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3228,https://github.com/pybamm-team/PyBaMM/pull/3228,closed,7,41,2,4,0,0,0,0,[],2023-08-03 13:51:28+00:00,2023-08-03 14:00:36+00:00,548.0,0:09:08,[],"[{'commit_sha': '553bf7d528754379fbdfbf6810372b3dd193327d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '164a1b1cd8e9e02df652811a96c63d417a8319c8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1032ac1d255b0af96d2ba3d32fc81b42d14e7507', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7143157ec07ec0924984e24e2a667e55d473a745', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1461857392,"Add `pip` caches, remove `nox` caches, and remove `requirements.txt`","# Description

This PR adds `pip` caches and uses a global installation for Pythonic dependencies, making the `nox` caches redundant. The `requirements.txt` file is also removed since we use `setup.py` to track dependencies

Fixes #3184

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [ ] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3231,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3231,https://github.com/pybamm-team/PyBaMM/pull/3231,closed,36,89,3,18,10,8,0,0,[],2023-08-03 18:06:57+00:00,2023-08-05 20:31:12+00:00,181455.0,"2 days, 2:24:15","[{'comment_id': 1284623524, 'comment_body': 'How are the restore-keys different from keys? Or how is this improving/helping the cache system?', 'comment_created': datetime.datetime(2023, 8, 4, 16, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1284646218, 'comment_body': 'In cases wherein no cache hits occur on a specific key hash (which has been the case a lot lately), it falls back to using of the listed `restore-keys` sequentially to restore files from. Sort of a _partial_ match. Here we only use one restore key because the Python version should always be in it', 'comment_created': datetime.datetime(2023, 8, 4, 16, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1284654164, 'comment_body': 'Also, would the `pip` cache work if we were to install ""-e .[all]"" in the `setup-python` step? (I think it would if we install standard Python dependencies and PyBaMM-specific ones in that step itself, see the end of [this section](https://github.com/actions/setup-python/blob/v4/docs/advanced-usage.md#caching-packages)). That way all `nox` environments can benefit from it as well', 'comment_created': datetime.datetime(2023, 8, 4, 16, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1284905941, 'comment_body': 'Thanks for the explanation! It should work, I think.', 'comment_created': datetime.datetime(2023, 8, 4, 23, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1285096688, 'comment_body': 'Nitpicking here, but is this required? This would fetch the entire git history, slowing down the step maybe by a few seconds. Is the cache stored using git?', 'comment_created': datetime.datetime(2023, 8, 5, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1285097108, 'comment_body': 'Not really, was just experimenting – I forgot to remove this 😄', 'comment_created': datetime.datetime(2023, 8, 5, 17, 56, 34, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1285097814, 'comment_body': 'We can try getting rid of it!', 'comment_created': datetime.datetime(2023, 8, 5, 18, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1285097839, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2023, 8, 5, 18, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '2414375a2c3acfb467acac6fb224e69948e98491', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '153608047a9666c7bc29741eebb9dcf79c816795', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a42fb0371cd764bb0111325645c1bae61f80a7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6a77570b5dc8d6a866e7ded5a41774e289c7411', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fe74804111e18dc029cc5ba131b4f3e220f5c3c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd361902ace405bc75b37b18f0aaa58c6c83022a8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e1fc784881512f4f2b8305b31fff38a593f9d28', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6b3c080bb047185e03c53d0ccadd948ebd76d00', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e30c34d948d852fad6248557b1dac309ace6c504', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55096b058b1386a6e6a629511b4915274e008ac8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23af9f0d22e5ed1bc8d54db91c5b757aadc40bc8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2194023171545ccc4dfae7d607d34e3cba28e5b5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8ea890e9a78f270529753bac67612817d047db6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e283248cf37a9e4d329dec6ef890df66fcc0ce13', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7bd94bb87f7237c500d5d77315d6bb7b412d187', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4235fa8102abb8b486aa0faa26c0f94d8fe71eb3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22615ffc6c8d1bf13ccdab6013087e079466b7a1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72038ec72fc7cd0e0ed24df80131909f2058f0f3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1465636459,Temporarily disable PDF documentation builds,"# Description

Removes PDF builds from the Read the Docs configuration, closes #3240

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [ ] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [ ] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [ ] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3245,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3245,https://github.com/pybamm-team/PyBaMM/pull/3245,closed,0,1,1,1,3,0,0,0,[],2023-08-07 17:08:03+00:00,2023-08-07 19:40:29+00:00,9146.0,2:32:26,[],"[{'commit_sha': 'c536e60696e8db323921c1cd8a799a515e148098', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1469215927,Re-enable PDF builds for Read the Docs,"# Description

The SVG images generated by the `sphinxext/inheritance_diagram.py` extension create multiple PDFs upon LaTeX output with Sphinx's LaTeXBuilder. This PR makes them render on HTML output only, which is in-line with documentation for other projects that display inheritance diagrams for API components.

Closes #3240 

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [x] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3260,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3260,https://github.com/pybamm-team/PyBaMM/pull/3260,closed,30,47,3,6,2,0,0,0,[],2023-08-09 19:57:11+00:00,2023-08-10 01:09:27+00:00,18736.0,5:12:16,[],"[{'commit_sha': 'c980be5b2e804fe43798b0c867185ecc85d78ab5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b016e7f6b0a498785921bfe0e92fb476829e882e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa482dbbfa355f7365fe4757290446d1b92f7b86', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe711b622db593d1d9828d102e580a371bf60857', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f7b850ba8289a3b6fa92bb4061ed5239482f06b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cac25b1bbca6f3f86dad17ea86d1d9ea541860d1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1470415765,Split CI test groups into concurrent jobs,"# Description

> [!Important]  
> This PR also contains the changes made as a part of #3279, so both PRs should be merged together, with that one being merged before this one.

Improves CI time by creating concurrent jobs for separate `nox` sessions for running tests, also adds the concurrency setting to cancel in-progress jobs.

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [x] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [x] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3264,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3264,https://github.com/pybamm-team/PyBaMM/pull/3264,closed,271,29,2,31,11,4,0,0,[],2023-08-10 14:05:00+00:00,2023-08-29 17:10:17+00:00,1652717.0,"19 days, 3:05:17","[{'comment_id': 1290239366, 'comment_body': 'See https://github.com/scikit-hep/vector/blob/349aca6123873bcbaa1470d411304dab4009327a/.github/workflows/ci.yml#L11-L15 for inspiration', 'comment_created': datetime.datetime(2023, 8, 10, 14, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1290454829, 'comment_body': 'FIxed in https://github.com/pybamm-team/PyBaMM/pull/3264/commits/ddc0fc587bbf95000ac2d4344f83b80d5ff0f94f, I improved upon the `vector` one to work on pushes outside of PRs as well', 'comment_created': datetime.datetime(2023, 8, 10, 17, 22, 39, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}, {'comment_id': 1298912968, 'comment_body': 'These versions go stale very often in PyBaMM. I have opened #3276 for this.', 'comment_created': datetime.datetime(2023, 8, 18, 23, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1298939630, 'comment_body': 'Awesome!', 'comment_created': datetime.datetime(2023, 8, 19, 0, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '4afa2487b0219a93fd84cce94f9c7f0d5010fa5d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f780af3dc2193afe6508c0dd8b0111387bea495c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d037aa82a957e1d83f2ebcc499d8a42160606f9', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2070932a7b3cafa6c01c0bf3bb4a89ceb2a98150', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e5a73340a28502f6a2c0df5539a9204a54b3c78', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e31a9195c777790f907688913f83532c686297cf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '305f5a70c8e1229d4cd502e119438f6c34e4feb8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddc0fc587bbf95000ac2d4344f83b80d5ff0f94f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7999c14768c98d5e94941b3a87c0a10700a82183', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44c3175e511918d0d8027a21d5bdd490de12f26b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3e84fcd2d50d07a4fd0a9498efc3d6b584f7829', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdcd8ffea9a99e7022669964a78214df2b527e88', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '840a71f60f0a20e270a1428913d671f8470ef6a2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'babe98af796d5471344dfa0936d66a9f678af843', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9ef880c95257a694aae2b50d01a3c164566be83', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3c145a08db0307d57198900c6ebd967ae78cd10', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b0a964049c9e8ace042a2545c300e70062fc3d7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '135a4469417d938308ab7b945a2c3f9aa8072b97', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3506c5120590630f1cadccd5ea7c450787d57e33', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5a77a915e7962e63f17c3c117ab1ac16047e2f', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4113291faf79cbf13cf0b88d542875af80458592', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e92e3b6297378b73e828bef75945d1993a51ecf', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46c752d9de691ad63c4f905499ad5daf0c571241', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6fc080eb879bb128b0729cf0105ccaa916c3b25', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa20e46856164853cff69afe7c33eede807fa9e1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1eed9f9de46e6439cf138caba6d5af42e724a5ca', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de848abb0a16d2f6b323b36a76d142a204eeaf44', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8015f6af32241a77e2454abd26b10c8dc7185883', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd10d22a45333616e04914c0f39c5ad90979669d5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a2963268842feef18fb4201abd7b7c11daafd1b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b0b58ba3c471bc3762c297cda909081238d4ef', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1472156551,Disallow modifications to `pybamm.Simulation` object attributes after initialisation,"# Description

Removes the setter methods in the `Simulation` class, so that parameters defined in the initialisation of a `pybamm.Simulation` instance cannot be modified unless the instance is redefined

This way, attributes like `sim.model` or `sim.parameter_values` cannot be edited directly. A new `sim` object with the modified parameters is required to incorporate changes, i.e.,

```python
import pybamm

model = pybamm.lithium_ion.DFN()
sim = pybamm.Simulation(model)

sim.model = pybamm.lithium_ion.DFN()  # no setter method for self.model(), will not work

model1 = pybamm.lithium_ion.SPM()
sim1 = pybamm.Simulation(model)  # new simulation object with the SPM, works
```

Fixes #3196

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [x] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [ ] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3267,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3267,https://github.com/pybamm-team/PyBaMM/pull/3267,closed,35,67,2,13,4,2,0,0,[],2023-08-11 17:52:32+00:00,2023-09-21 11:03:02+00:00,3517830.0,"40 days, 17:10:30","[{'comment_id': 1316952249, 'comment_body': 'Can you sort the entries in this section so they are in decreasing PR number?', 'comment_created': datetime.datetime(2023, 9, 6, 8, 49, 54, tzinfo=datetime.timezone.utc), 'commenter': 'brosaplanella', 'type': 'User'}, {'comment_id': 1316974624, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 9, 6, 9, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '7f9c0e38e1fce45bff4d8ce3a190407c35a46fd1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f2e62bc050b2eb98e96a3779a94ffe59741fe46', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b93ed40c8535704e2b39b6cb670be1651c60a521', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc3463154b389bb9eef2da7c41ccb13ff3a5ef98', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8609cc4447d6275ecdca57222004a169462dc010', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91ee8e14028187dd8d753036bc9a52df6778b637', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dbf7d8342ac2e95fe82158bb612d5b3c8019d34', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'caeed50034c61beb7bb1d6c1cff75b3f0144bc8d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9393f6f41433b8d4ae9126d7c5cb421d57ae1513', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68584c1890682c45b3aeb4bd8a18dab54fad45a2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82e00e3260229e673ea77c544d26f9b5d13eecff', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c8966039e189d635fead4742cbb0d91041e25b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cdf00b71ecc7842b864498db0200ebbd4841f88', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1482270384,Split Jupyter notebooks tests and example scripts tests into separate `nox` sessions,"# Description

See relevant discussions on Slack and on #3264. This PR adds a new `--scripts` argument to the `run-tests.py` parser and a new `nox` session for running the examples scripts tests with the `nox -s scripts` command.

> [!Note]  
> This PR should be merged in conjunction with #3264

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [x] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [ ] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [x] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3279,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3279,https://github.com/pybamm-team/PyBaMM/pull/3279,closed,48,10,4,5,2,5,0,0,[],2023-08-21 06:31:37+00:00,2023-08-21 17:10:42+00:00,38345.0,10:39:05,"[{'comment_id': 1300321071, 'comment_body': '```suggestion\r\n\r\n\r\ndef run_scripts(executable=""python""):\r\n```', 'comment_created': datetime.datetime(2023, 8, 21, 15, 59, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1300321609, 'comment_body': 'Style guide', 'comment_created': datetime.datetime(2023, 8, 21, 15, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1300323327, 'comment_body': '```suggestion\r\n\r\n@nox.session(name=""scripts"")\r\n```\r\nDitto', 'comment_created': datetime.datetime(2023, 8, 21, 16, 0, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1300323818, 'comment_body': '```suggestion\r\n    session.run(""python"", ""run-tests.py"", ""--scripts"")\r\n\r\n```\r\nDitto', 'comment_created': datetime.datetime(2023, 8, 21, 16, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1300331202, 'comment_body': 'Thanks for noticing!', 'comment_created': datetime.datetime(2023, 8, 21, 16, 5, 56, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '271f2d3163d8465056d5e5b1963ce12647947b71', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62ba18f16493c72ec271faf3bf5ecaff22dc8ac8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31bc980a0daada6b1a942e2dd3fb91db3e3f389d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '276d32f4a8c6b9d713e1f409a508c19ca9641652', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b939a2901141bf1dfec2851bd0272465cd7e7872', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1486245154,Invoke custom `build.jobs` for PDF builds on Read the Docs,"# Description

Please take a look at the discussion on Slack for more details. This PR removes the Jupyter notebooks when the Sphinx LaTeXBuilder is invoked and generates a singular PDF file. (Probably) fixes #3240

## Type of change

Please add a line in the relevant section of [CHANGELOG.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CHANGELOG.md) to document the change (include PR #) - note reverse order of PR #s. If necessary, also add to the list of breaking changes.

- [ ] New feature (non-breaking change which adds functionality)
- [ ] Optimization (back-end change that speeds up the code)
- [x] Bug fix (non-breaking change which fixes an issue)

# Key checklist:

- [x] No style issues: `$ pre-commit run` (or `$ nox -s pre-commit`) (see [CONTRIBUTING.md](https://github.com/pybamm-team/PyBaMM/blob/develop/CONTRIBUTING.md#installing-and-using-pre-commit) for how to set this up to run automatically when committing locally, in just two lines of code)
- [x] All tests pass: `$ python run-tests.py --all` (or `$ nox -s tests`)
- [x] The documentation builds: `$ python run-tests.py --doctest` (or `$ nox -s doctests`)

You can run integration tests, unit tests, and doctests together at once, using `$ python run-tests.py --quick` (or `$ nox -s quick`).

## Further checks:

- [x] Code is commented, particularly in hard-to-understand areas
- [ ] Tests added that prove fix is effective or that feature works
",True,3292,https://api.github.com/repos/pybamm-team/PyBaMM/pulls/3292,https://github.com/pybamm-team/PyBaMM/pull/3292,closed,30,3,3,19,7,0,0,0,[],2023-08-23 11:20:01+00:00,2023-08-29 17:13:37+00:00,539616.0,"6 days, 5:53:36",[],"[{'commit_sha': '4b7ededbadf272c45eee19c176ef841a1a3d099e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94c1cfc78f9f36b99ae3463b034246c837f08ab0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ec97c14f34f0f39d19e648ec9c99658a43b907a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0caa9732ad6ceca270fb6f076f985c3ee9b8746b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '265cd4abf1120b992e48cffb69ce30ff822f33d6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf1b276ab44cb08f890e602f495c7719b9c8ccf4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27a4a560e62089c49cd6ec6bca9b2dfaa2233473', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74cb7cdb16ddddbd82dab594368dfb0c7cf23271', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8f3f3eeb88091c0f54394d711410cc6eaf474bc', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5d3da813a631e72668b8848147514ddaef036e8', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfe7dd489a4248022e8f31566c12d01924854ef1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3933c05aca77958d31c2ec9fd99b69139505982', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5d3cc29e94c3f120c6b5fc3bf796a2fe5a9ae84', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84a503dfe979826d66aaaa08452b115fbb5256f2', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea5ac0c9aebd8a0e8985a95993662075630d8433', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '737924337b3fda55e4fc356c25d728bbdc16dd0c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c26fc9fb0e249d76ff5137a64c858913b4829ddc', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '279cf4af452e5670956f269bce7f2f4601137ba3', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5004e6e6257df703808d134b4300b8094b1899a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1416901882,Add Python 3.11 to CI matrix,,True,36,https://api.github.com/repos/FaradayInstitution/BPX/pulls/36,https://github.com/FaradayInstitution/BPX/pull/36,closed,1,1,1,1,1,0,0,0,[],2023-07-02 20:14:58+00:00,2023-07-02 20:19:41+00:00,283.0,0:04:43,[],"[{'commit_sha': '9391c640b6ee8b324380dce8b2cf55a30964a5e5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1458103429,Initial draft for a `cookiecutter` template (licenses and folder structure),"In specific, the MIT, Apache, and BSD-3-Clause licenses. I am adding them in a PR for visibility and for keeping track of changes more effectively; should we add templates for more licenses?

Edit: this PR also adds an initial structure for the template files to build upon further. The three licenses are adequate since we want to encourage the use of permissive licensing",True,2,https://api.github.com/repos/pybamm-team/pybamm-cookie/pulls/2,https://github.com/pybamm-team/pybamm-cookie/pull/2,closed,956,0,21,12,2,10,0,0,[],2023-08-01 13:21:57+00:00,2023-08-03 05:18:36+00:00,143799.0,"1 day, 15:56:39","[{'comment_id': 1281257406, 'comment_body': '```suggestion\r\n}\r\n\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281257789, 'comment_body': 'How about -\r\n\r\n```py\r\nproject = ""PyBaMM""\r\ncopyright = ""2018-2023, The PyBaMM Team""\r\nauthor = ""The PyBaMM Team""\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 10, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281258707, 'comment_body': 'Maybe we can attribute pybamm team here? Includes everyone!', 'comment_created': datetime.datetime(2023, 8, 2, 0, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281258820, 'comment_body': 'Let\'s start with this\r\n\r\n```suggestion\r\n__version__ = ""0.0.1""\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281259129, 'comment_body': 'We already have `ruff`!\r\n\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281261329, 'comment_body': '```suggestion\r\n{%- endif %}\r\ndependencies = [""pybamm""]\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281261767, 'comment_body': '```suggestion\r\n{%- if cookiecutter.backend == ""hatch"" %}\r\n[tool.hatch]\r\nversion.path = ""src/{{ cookiecutter.__project_slug }}/__init__.py""\r\nenvs.default.dependencies = [\r\n  ""pybamm"",\r\n]\r\n{%- endif %}\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281262432, 'comment_body': '```suggestion\r\n__version__ = ""0.0.1""\r\n```', 'comment_created': datetime.datetime(2023, 8, 2, 0, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281263129, 'comment_body': 'till the time we switch to VCS versioning ;)', 'comment_created': datetime.datetime(2023, 8, 2, 0, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Saransh-cpp', 'type': 'User'}, {'comment_id': 1281547924, 'comment_body': 'Fair enough!', 'comment_created': datetime.datetime(2023, 8, 2, 8, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '8dae08b489063ea4da34122b55e15a369badf022', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6779e798f23a677df02edf4320f8ac00334dc000', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df4e5b7027ad192932f7fed1023bbb647f43667e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c13431a86a9be80f820e3223b4a96ad044a3115', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '632b76b36a23ad6b449b9c2a6240f1c8e8f1c149', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5376d611c4c1c316e4b468be1a56f5f4478ab7a1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45d930c1a7c7c1a9af48b5725f5bf461c08fa50d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '255d312d14876f0c01d0895c133b118ec6e71bb7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43c86b88d4540901e87c1fc6ddc9170685dd518b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2de7c217975c06f511fb0d22ac6fe78473ba10b1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a02147411578b35ca9b2ef79f5469d2a26289c0', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b518474745afbb4f4f209876d4629bb779dc9518', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1458156961,Add `pre-commit` hooks,"The template-specific pre-commit hooks can be later derived from the hooks in this PR, and some extra ones mentioned in the [Scientific Python style guide](https://learn.scientific-python.org/development/guides/style/). 

Going forward, I will mark issues and PRs for template files with a ""template"" label so that they can be distinguished from those that modify repository-specific files of the same name.",True,3,https://api.github.com/repos/pybamm-team/pybamm-cookie/pulls/3,https://github.com/pybamm-team/pybamm-cookie/pull/3,closed,64,1,2,4,0,0,0,0,[],2023-08-01 13:50:02+00:00,2023-08-01 15:29:36+00:00,5974.0,1:39:34,[],"[{'commit_sha': 'f1ff3d76a56e5b83dcc8564758ee9ce0b68c204c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e19eb656120015ce123f9a4e33a9aa049a19a05', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51beb743786dda040b36239ba38f9bca4cfb39f6', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '723a308c5f452bef3464c2a4469071c70c16d4a4', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1462972361,Add templates and configuration for documentation,"This PR:
- adds a template-specific `docs/conf.py` and a project-specific `docs/conf.py`
- adds a template-specific `noxfile.py` and a project-specific `noxfile.py`",True,4,https://api.github.com/repos/pybamm-team/pybamm-cookie/pulls/4,https://github.com/pybamm-team/pybamm-cookie/pull/4,closed,225,19,8,10,0,0,0,0,[],2023-08-04 13:54:53+00:00,2023-08-04 16:02:26+00:00,7653.0,2:07:33,[],"[{'commit_sha': '5276845708b35f389ad0936e8e4e565aa1dc5c11', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dad39ac7da6e3d311311ebcbbe1394769261434a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '029aba977975c9881780e90a0966256a6202dbbd', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd515cb95f9562ff3d9fe04359f79bfdbb142488', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '901706c096f922f8d05bc5b46d1c7961b3163f9d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bdc8688beed9f5b470285d2c9a1dc95bf3ba663', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f54ee041c84b85da6658c679784fca85604a62f7', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be76266a2305186ed556fe1ea7a51f90690eb630', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eb42787c0d606f0fc155815d1bb32a41de0ed7d', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59b88344e052395e346e1c96c3204c89b75f621e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42
1465213481,Add functionality for third-party parameter sets,"This PR adds: a `cookiecutter.json` configuration to ask users if they wish to register a third-party parameter set, a basic example of a parameter set, and an entry point in `pyproject.toml` for using it with PyBaMM",False,6,https://api.github.com/repos/pybamm-team/pybamm-cookie/pulls/6,https://github.com/pybamm-team/pybamm-cookie/pull/6,closed,129,0,4,9,2,2,0,0,[],2023-08-07 13:04:04+00:00,2024-05-29 14:38:41+00:00,25580077.0,"296 days, 1:34:37","[{'comment_id': 1286528497, 'comment_body': 'could you add an example function and scalar parameter?', 'comment_created': datetime.datetime(2023, 8, 8, 2, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'valentinsulzer', 'type': 'User'}, {'comment_id': 1287247803, 'comment_body': 'I added a sample function with scalar parameters from the OKane2022 parameter set, let me know if that suffices ', 'comment_created': datetime.datetime(2023, 8, 8, 14, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'agriyakhetarpal', 'type': 'User'}]","[{'commit_sha': '9e7db9e4a2d57d85e0ee5e5f7629363121f0f220', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28eed1a5bf723c2b3102d6c8cdc4cef84b2cb192', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de1643c758152f5d1da77f67329668cc748da60', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '028b132fbf97a20b97e8c726816ebe5d19b87f3a', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b673285417662c00cd48ba9e0717cb16d809502b', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0865b1a0bb6cc7083743e01315fd4984b8a965d1', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea7458ec405067870c3ba2427f08fc899bdb29e', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ce6ead744554ce748fa002808d506e8fbd21eb5', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f68590987f663cd99abefaf400c074194c4209c', 'committer_username': 'agriyakhetarpal', 'committer_name': 'Agriya Khetarpal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 13, 8, 2, 40, tzinfo=datetime.timezone.utc)}]",Agriya Khetarpal,74401230,,User,,56,,30,42

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
644884293,pybamm.org,pybamm-team/pybamm.org,HTML,3,4,7,11,597,3,2,1,"[{'id': 1797980322, 'number': 129, 'closed': datetime.datetime(2024, 3, 31, 16, 8, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 29, 13, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 182059.0, 'time_delta': '2 days, 2:34:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1772566145, 'number': 122, 'closed': datetime.datetime(2024, 3, 14, 16, 23, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 16, 21, 55, tzinfo=datetime.timezone.utc), 'time_taken': 71.0, 'time_delta': '0:01:11', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 1734054122, 'number': 119, 'closed': datetime.datetime(2024, 2, 20, 19, 51, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 20, 7, 4, 33, tzinfo=datetime.timezone.utc), 'time_taken': 46037.0, 'time_delta': '12:47:17', 'additions': 29, 'deletions': 24, 'state': 'closed'}, {'id': 1706167887, 'number': 111, 'closed': datetime.datetime(2024, 2, 5, 15, 30, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 1, 12, 33, 45, tzinfo=datetime.timezone.utc), 'time_taken': 356195.0, 'time_delta': '4 days, 2:56:35', 'additions': 294, 'deletions': 197, 'state': 'closed'}, {'id': 1690339999, 'number': 108, 'closed': datetime.datetime(2024, 1, 22, 18, 20, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 22, 18, 18, 16, tzinfo=datetime.timezone.utc), 'time_taken': 113.0, 'time_delta': '0:01:53', 'additions': 78, 'deletions': 69, 'state': 'closed'}, {'id': 1684696610, 'number': 106, 'closed': datetime.datetime(2024, 1, 24, 10, 3, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 18, 11, 45, 44, tzinfo=datetime.timezone.utc), 'time_taken': 512273.0, 'time_delta': '5 days, 22:17:53', 'additions': 80, 'deletions': 14, 'state': 'closed'}, {'id': 1676447964, 'number': 99, 'closed': datetime.datetime(2024, 1, 12, 13, 37, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 12, 13, 12, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1522.0, 'time_delta': '0:25:22', 'additions': 19, 'deletions': 7, 'state': 'closed'}, {'id': 1656168492, 'number': 92, 'closed': datetime.datetime(2024, 2, 3, 7, 48, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 24, 16, 59, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3509311.0, 'time_delta': '40 days, 14:48:31', 'additions': 80, 'deletions': 8, 'state': 'closed'}, {'id': 1642918308, 'number': 89, 'closed': datetime.datetime(2024, 1, 8, 15, 8, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 13, 18, 19, 23, tzinfo=datetime.timezone.utc), 'time_taken': 2234924.0, 'time_delta': '25 days, 20:48:44', 'additions': 49, 'deletions': 16, 'state': 'closed'}, {'id': 1642205272, 'number': 88, 'closed': datetime.datetime(2023, 12, 13, 18, 28, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 13, 10, 54, 5, tzinfo=datetime.timezone.utc), 'time_taken': 27254.0, 'time_delta': '7:34:14', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 1642201615, 'number': 87, 'closed': datetime.datetime(2023, 12, 13, 17, 26, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 13, 10, 51, 46, tzinfo=datetime.timezone.utc), 'time_taken': 23684.0, 'time_delta': '6:34:44', 'additions': 64, 'deletions': 3, 'state': 'closed'}, {'id': 1594103765, 'number': 77, 'closed': datetime.datetime(2023, 11, 9, 10, 4, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 9, 10, 2, 43, tzinfo=datetime.timezone.utc), 'time_taken': 124.0, 'time_delta': '0:02:04', 'additions': 5, 'deletions': 10, 'state': 'closed'}, {'id': 1490920170, 'number': 48, 'closed': datetime.datetime(2023, 8, 27, 10, 20, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 27, 10, 15, 32, tzinfo=datetime.timezone.utc), 'time_taken': 295.0, 'time_delta': '0:04:55', 'additions': 224, 'deletions': 18, 'state': 'closed'}, {'id': 1489871185, 'number': 47, 'closed': datetime.datetime(2023, 8, 26, 9, 58, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 14, 51, 11, tzinfo=datetime.timezone.utc), 'time_taken': 68849.0, 'time_delta': '19:07:29', 'additions': 45, 'deletions': 15, 'state': 'closed'}, {'id': 1434850904, 'number': 34, 'closed': datetime.datetime(2023, 7, 18, 23, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 14, 14, 8, 45, tzinfo=datetime.timezone.utc), 'time_taken': 378563.0, 'time_delta': '4 days, 9:09:23', 'additions': 54, 'deletions': 0, 'state': 'closed'}, {'id': 1425649518, 'number': 32, 'closed': datetime.datetime(2023, 7, 14, 13, 7, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 2, 1, 39, tzinfo=datetime.timezone.utc), 'time_taken': 558353.0, 'time_delta': '6 days, 11:05:53', 'additions': 69, 'deletions': 5, 'state': 'closed'}, {'id': 1423080330, 'number': 31, 'closed': datetime.datetime(2023, 7, 14, 14, 0, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 15, 18, 53, tzinfo=datetime.timezone.utc), 'time_taken': 686477.0, 'time_delta': '7 days, 22:41:17', 'additions': 1161, 'deletions': 142, 'state': 'closed'}, {'id': 1421249522, 'number': 30, 'closed': datetime.datetime(2023, 7, 5, 14, 54, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 14, 45, 26, tzinfo=datetime.timezone.utc), 'time_taken': 534.0, 'time_delta': '0:08:54', 'additions': 6, 'deletions': 0, 'state': 'closed'}, {'id': 1404132043, 'number': 24, 'closed': datetime.datetime(2023, 6, 23, 17, 18, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 20, 40, 47, tzinfo=datetime.timezone.utc), 'time_taken': 74248.0, 'time_delta': '20:37:28', 'additions': 131, 'deletions': 126, 'state': 'closed'}, {'id': 1392777842, 'number': 22, 'closed': datetime.datetime(2023, 6, 24, 9, 40, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 14, 16, 57, 26, tzinfo=datetime.timezone.utc), 'time_taken': 837759.0, 'time_delta': '9 days, 16:42:39', 'additions': 776, 'deletions': 53, 'state': 'closed'}, {'id': 1376049571, 'number': 19, 'closed': datetime.datetime(2023, 6, 9, 12, 22, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 16, 44, 1, tzinfo=datetime.timezone.utc), 'time_taken': 589081.0, 'time_delta': '6 days, 19:38:01', 'additions': 109, 'deletions': 12, 'state': 'closed'}, {'id': 1373129571, 'number': 16, 'closed': datetime.datetime(2023, 6, 9, 12, 20, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 1, 0, 59, tzinfo=datetime.timezone.utc), 'time_taken': 731992.0, 'time_delta': '8 days, 11:19:52', 'additions': 65, 'deletions': 0, 'state': 'closed'}, {'id': 1372910461, 'number': 14, 'closed': datetime.datetime(2023, 5, 31, 21, 1, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 20, 52, 34, tzinfo=datetime.timezone.utc), 'time_taken': 545.0, 'time_delta': '0:09:05', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1372806750, 'number': 12, 'closed': datetime.datetime(2023, 5, 31, 20, 23, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 19, 40, 36, tzinfo=datetime.timezone.utc), 'time_taken': 2600.0, 'time_delta': '0:43:20', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 1372694346, 'number': 10, 'closed': datetime.datetime(2023, 5, 31, 18, 35, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 18, 24, 3, tzinfo=datetime.timezone.utc), 'time_taken': 680.0, 'time_delta': '0:11:20', 'additions': 127, 'deletions': 8, 'state': 'closed'}, {'id': 1372443564, 'number': 8, 'closed': datetime.datetime(2023, 5, 31, 15, 58, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 31, 15, 25, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1982.0, 'time_delta': '0:33:02', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 1366696220, 'number': 5, 'closed': datetime.datetime(2023, 5, 26, 19, 19, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 17, 49, 48, tzinfo=datetime.timezone.utc), 'time_taken': 5403.0, 'time_delta': '1:30:03', 'additions': 62, 'deletions': 39, 'state': 'closed'}, {'id': 1366617105, 'number': 4, 'closed': datetime.datetime(2023, 5, 26, 16, 57, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 16, 34, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1378.0, 'time_delta': '0:22:58', 'additions': 70, 'deletions': 11, 'state': 'closed'}, {'id': 1366475306, 'number': 3, 'closed': datetime.datetime(2023, 5, 26, 14, 51, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 26, 14, 45, 6, tzinfo=datetime.timezone.utc), 'time_taken': 368.0, 'time_delta': '0:06:08', 'additions': 57, 'deletions': 7, 'state': 'closed'}]"
155538761,PyBaMM,pybamm-team/PyBaMM,Python,511,1026,29,117,15101,161,46,26,"[{'id': 1994653282, 'number': 4305, 'closed': datetime.datetime(2024, 7, 31, 11, 50, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 30, 15, 14, 28, tzinfo=datetime.timezone.utc), 'time_taken': 74177.0, 'time_delta': '20:36:17', 'additions': 16, 'deletions': 8, 'state': 'closed'}, {'id': 1909604803, 'number': 4151, 'closed': datetime.datetime(2024, 6, 7, 18, 50, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 7, 17, 20, 41, tzinfo=datetime.timezone.utc), 'time_taken': 5405.0, 'time_delta': '1:30:05', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 1900580395, 'number': 4128, 'closed': datetime.datetime(2024, 6, 5, 19, 12, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 3, 11, 0, 50, tzinfo=datetime.timezone.utc), 'time_taken': 202291.0, 'time_delta': '2 days, 8:11:31', 'additions': 156, 'deletions': 54, 'state': 'closed'}, {'id': 1887424461, 'number': 4109, 'closed': datetime.datetime(2024, 5, 24, 19, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 24, 18, 41, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2827.0, 'time_delta': '0:47:07', 'additions': 58, 'deletions': 210, 'state': 'closed'}, {'id': 1879003972, 'number': 4105, 'closed': datetime.datetime(2024, 5, 21, 20, 4, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 20, 20, 4, 1, tzinfo=datetime.timezone.utc), 'time_taken': 86414.0, 'time_delta': '1 day, 0:00:14', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1871193368, 'number': 4092, 'closed': datetime.datetime(2024, 5, 18, 2, 50, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 15, 13, 18, 18, tzinfo=datetime.timezone.utc), 'time_taken': 221553.0, 'time_delta': '2 days, 13:32:33', 'additions': 210, 'deletions': 58, 'state': 'closed'}, {'id': 1854595256, 'number': 4063, 'closed': datetime.datetime(2024, 5, 6, 11, 36, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 4, 13, 42, 32, tzinfo=datetime.timezone.utc), 'time_taken': 165238.0, 'time_delta': '1 day, 21:53:58', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1840089308, 'number': 4041, 'closed': datetime.datetime(2024, 4, 26, 14, 36, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 25, 5, 26, 58, tzinfo=datetime.timezone.utc), 'time_taken': 119367.0, 'time_delta': '1 day, 9:09:27', 'additions': 3, 'deletions': 29, 'state': 'closed'}, {'id': 1836555821, 'number': 4038, 'closed': datetime.datetime(2024, 4, 23, 22, 42, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 23, 12, 5, 40, tzinfo=datetime.timezone.utc), 'time_taken': 38193.0, 'time_delta': '10:36:33', 'additions': 21, 'deletions': 0, 'state': 'closed'}, {'id': 1826539513, 'number': 4015, 'closed': datetime.datetime(2024, 4, 17, 11, 33, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 17, 3, 35, 35, tzinfo=datetime.timezone.utc), 'time_taken': 28697.0, 'time_delta': '7:58:17', 'additions': 31, 'deletions': 29, 'state': 'closed'}, {'id': 1817889540, 'number': 3996, 'closed': datetime.datetime(2024, 4, 11, 19, 45, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 11, 12, 30, 42, tzinfo=datetime.timezone.utc), 'time_taken': 26104.0, 'time_delta': '7:15:04', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 1799047921, 'number': 3945, 'closed': None, 'created': datetime.datetime(2024, 3, 30, 17, 42, 38, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 72, 'deletions': 3, 'state': 'open'}, {'id': 1787841779, 'number': 3922, 'closed': datetime.datetime(2024, 3, 25, 14, 55, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 23, 15, 23, 10, tzinfo=datetime.timezone.utc), 'time_taken': 171117.0, 'time_delta': '1 day, 23:31:57', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 1716235150, 'number': 3811, 'closed': datetime.datetime(2024, 2, 8, 23, 59, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 7, 18, 48, 7, tzinfo=datetime.timezone.utc), 'time_taken': 105095.0, 'time_delta': '1 day, 5:11:35', 'additions': 58, 'deletions': 4, 'state': 'closed'}, {'id': 1704254480, 'number': 3791, 'closed': datetime.datetime(2024, 2, 1, 2, 43, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 14, 58, 16, tzinfo=datetime.timezone.utc), 'time_taken': 42324.0, 'time_delta': '11:45:24', 'additions': 35, 'deletions': 3, 'state': 'closed'}, {'id': 1703329156, 'number': 3789, 'closed': datetime.datetime(2024, 1, 31, 19, 41, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 31, 4, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 54720.0, 'time_delta': '15:12:00', 'additions': 40, 'deletions': 5, 'state': 'closed'}, {'id': 1702396216, 'number': 3786, 'closed': datetime.datetime(2024, 1, 30, 16, 41, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 30, 15, 59, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2540.0, 'time_delta': '0:42:20', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1702351716, 'number': 3785, 'closed': datetime.datetime(2024, 1, 30, 18, 12, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 30, 15, 35, 43, tzinfo=datetime.timezone.utc), 'time_taken': 9425.0, 'time_delta': '2:37:05', 'additions': 18, 'deletions': 6, 'state': 'closed'}, {'id': 1702213868, 'number': 3784, 'closed': datetime.datetime(2024, 1, 30, 15, 21, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 30, 14, 30, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3024.0, 'time_delta': '0:50:24', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 1692319471, 'number': 3760, 'closed': datetime.datetime(2024, 1, 23, 19, 14, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 23, 18, 22, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3103.0, 'time_delta': '0:51:43', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 1672427204, 'number': 3706, 'closed': datetime.datetime(2024, 1, 12, 18, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 10, 13, 20, 15, tzinfo=datetime.timezone.utc), 'time_taken': 190185.0, 'time_delta': '2 days, 4:49:45', 'additions': 10, 'deletions': 3, 'state': 'closed'}, {'id': 1671437309, 'number': 3702, 'closed': datetime.datetime(2024, 1, 12, 18, 6, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 9, 22, 7, 46, tzinfo=datetime.timezone.utc), 'time_taken': 244728.0, 'time_delta': '2 days, 19:58:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1661021147, 'number': 3677, 'closed': datetime.datetime(2024, 1, 1, 18, 19, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 1, 11, 7, 36, tzinfo=datetime.timezone.utc), 'time_taken': 25936.0, 'time_delta': '7:12:16', 'additions': 12, 'deletions': 3, 'state': 'closed'}, {'id': 1651705454, 'number': 3645, 'closed': datetime.datetime(2023, 12, 20, 19, 39, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 20, 9, 10, 33, tzinfo=datetime.timezone.utc), 'time_taken': 37714.0, 'time_delta': '10:28:34', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 1650190627, 'number': 3637, 'closed': datetime.datetime(2024, 1, 6, 19, 3, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 11, 21, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1582949.0, 'time_delta': '18 days, 7:42:29', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1618474653, 'number': 3569, 'closed': datetime.datetime(2024, 1, 6, 19, 2, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 27, 18, 15, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3458806.0, 'time_delta': '40 days, 0:46:46', 'additions': 111, 'deletions': 140, 'state': 'closed'}, {'id': 1616972845, 'number': 3563, 'closed': datetime.datetime(2023, 11, 27, 8, 38, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 26, 17, 48, 21, tzinfo=datetime.timezone.utc), 'time_taken': 53413.0, 'time_delta': '14:50:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1616660528, 'number': 3560, 'closed': datetime.datetime(2024, 5, 27, 18, 53, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 25, 17, 40, 20, tzinfo=datetime.timezone.utc), 'time_taken': 15902000.0, 'time_delta': '184 days, 1:13:20', 'additions': 48, 'deletions': 82, 'state': 'closed'}, {'id': 1616635630, 'number': 3559, 'closed': datetime.datetime(2023, 11, 25, 19, 1, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 25, 16, 8, 20, tzinfo=datetime.timezone.utc), 'time_taken': 10399.0, 'time_delta': '2:53:19', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1616617543, 'number': 3556, 'closed': datetime.datetime(2023, 11, 25, 18, 51, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 25, 15, 2, 24, tzinfo=datetime.timezone.utc), 'time_taken': 13728.0, 'time_delta': '3:48:48', 'additions': 2, 'deletions': 202, 'state': 'closed'}, {'id': 1613355052, 'number': 3550, 'closed': datetime.datetime(2023, 12, 8, 14, 6, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 22, 18, 54, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1365112.0, 'time_delta': '15 days, 19:11:52', 'additions': 74, 'deletions': 44, 'state': 'closed'}, {'id': 1609274902, 'number': 3539, 'closed': datetime.datetime(2023, 11, 25, 13, 53, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 20, 14, 57, 45, tzinfo=datetime.timezone.utc), 'time_taken': 428174.0, 'time_delta': '4 days, 22:56:14', 'additions': 35, 'deletions': 23, 'state': 'closed'}, {'id': 1605306461, 'number': 3531, 'closed': datetime.datetime(2023, 12, 19, 9, 34, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 16, 21, 51, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2807003.0, 'time_delta': '32 days, 11:43:23', 'additions': 90, 'deletions': 68, 'state': 'closed'}, {'id': 1597357970, 'number': 3517, 'closed': datetime.datetime(2023, 11, 13, 14, 36, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 11, 11, 46, 4, tzinfo=datetime.timezone.utc), 'time_taken': 183035.0, 'time_delta': '2 days, 2:50:35', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1590925433, 'number': 3501, 'closed': datetime.datetime(2023, 11, 17, 17, 38, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 7, 16, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 869007.0, 'time_delta': '10 days, 1:23:27', 'additions': 48, 'deletions': 72, 'state': 'closed'}, {'id': 1584086738, 'number': 3494, 'closed': datetime.datetime(2023, 11, 25, 15, 44, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 2, 10, 50, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2004845.0, 'time_delta': '23 days, 4:54:05', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 1570749179, 'number': 3469, 'closed': None, 'created': datetime.datetime(2023, 10, 24, 10, 16, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 271, 'deletions': 179, 'state': 'open'}, {'id': 1569068124, 'number': 3465, 'closed': datetime.datetime(2024, 1, 31, 4, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 23, 12, 23, 34, tzinfo=datetime.timezone.utc), 'time_taken': 8611665.0, 'time_delta': '99 days, 16:07:45', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 1560634392, 'number': 3454, 'closed': datetime.datetime(2023, 10, 17, 18, 9, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 17, 13, 51, 24, tzinfo=datetime.timezone.utc), 'time_taken': 15494.0, 'time_delta': '4:18:14', 'additions': 27, 'deletions': 27, 'state': 'closed'}, {'id': 1550154014, 'number': 3433, 'closed': datetime.datetime(2023, 10, 10, 15, 49, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 10, 14, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 3251.0, 'time_delta': '0:54:11', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 1548720479, 'number': 3430, 'closed': datetime.datetime(2023, 10, 20, 20, 17, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 9, 23, 46, 33, tzinfo=datetime.timezone.utc), 'time_taken': 937869.0, 'time_delta': '10 days, 20:31:09', 'additions': 45, 'deletions': 34, 'state': 'closed'}, {'id': 1548713226, 'number': 3429, 'closed': datetime.datetime(2023, 10, 12, 17, 56, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 9, 23, 34, 24, tzinfo=datetime.timezone.utc), 'time_taken': 238931.0, 'time_delta': '2 days, 18:22:11', 'additions': 21, 'deletions': 7, 'state': 'closed'}, {'id': 1546709557, 'number': 3419, 'closed': datetime.datetime(2023, 10, 9, 7, 33, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 8, 11, 21, 32, tzinfo=datetime.timezone.utc), 'time_taken': 72746.0, 'time_delta': '20:12:26', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1543474750, 'number': 3412, 'closed': datetime.datetime(2023, 10, 5, 14, 17, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 5, 11, 32, tzinfo=datetime.timezone.utc), 'time_taken': 9956.0, 'time_delta': '2:45:56', 'additions': 12, 'deletions': 11, 'state': 'closed'}, {'id': 1535418909, 'number': 3379, 'closed': datetime.datetime(2023, 9, 30, 17, 25, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 29, 9, 18, 47, tzinfo=datetime.timezone.utc), 'time_taken': 115576.0, 'time_delta': '1 day, 8:06:16', 'additions': 24, 'deletions': 7, 'state': 'closed'}, {'id': 1518273930, 'number': 3345, 'closed': datetime.datetime(2023, 9, 19, 12, 32, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 16, 17, 1, 14, tzinfo=datetime.timezone.utc), 'time_taken': 243085.0, 'time_delta': '2 days, 19:31:25', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1518251915, 'number': 3344, 'closed': datetime.datetime(2023, 9, 22, 7, 21, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 16, 15, 32, 15, tzinfo=datetime.timezone.utc), 'time_taken': 488945.0, 'time_delta': '5 days, 15:49:05', 'additions': 86, 'deletions': 189, 'state': 'closed'}, {'id': 1518224013, 'number': 3343, 'closed': datetime.datetime(2023, 10, 2, 11, 47, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 16, 13, 31, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1376145.0, 'time_delta': '15 days, 22:15:45', 'additions': 130, 'deletions': 58, 'state': 'closed'}, {'id': 1514675770, 'number': 3333, 'closed': datetime.datetime(2023, 9, 14, 18, 20, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 23, 37, tzinfo=datetime.timezone.utc), 'time_taken': 67383.0, 'time_delta': '18:43:03', 'additions': 43, 'deletions': 4, 'state': 'closed'}, {'id': 1509235355, 'number': 3317, 'closed': datetime.datetime(2023, 11, 17, 18, 31, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 10, 17, 38, 58, tzinfo=datetime.timezone.utc), 'time_taken': 5878374.0, 'time_delta': '68 days, 0:52:54', 'additions': 29, 'deletions': 23, 'state': 'closed'}, {'id': 1503302899, 'number': 3311, 'closed': datetime.datetime(2023, 9, 6, 2, 54, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 5, 18, 34, 5, tzinfo=datetime.timezone.utc), 'time_taken': 30021.0, 'time_delta': '8:20:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1496015554, 'number': 3301, 'closed': datetime.datetime(2023, 11, 25, 14, 2, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 30, 19, 9, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7498413.0, 'time_delta': '86 days, 18:53:33', 'additions': 539, 'deletions': 4449, 'state': 'closed'}, {'id': 1486245154, 'number': 3292, 'closed': datetime.datetime(2023, 8, 29, 17, 13, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 11, 20, 1, tzinfo=datetime.timezone.utc), 'time_taken': 539616.0, 'time_delta': '6 days, 5:53:36', 'additions': 30, 'deletions': 3, 'state': 'closed'}, {'id': 1482270384, 'number': 3279, 'closed': datetime.datetime(2023, 8, 21, 17, 10, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 21, 6, 31, 37, tzinfo=datetime.timezone.utc), 'time_taken': 38345.0, 'time_delta': '10:39:05', 'additions': 48, 'deletions': 10, 'state': 'closed'}, {'id': 1472156551, 'number': 3267, 'closed': datetime.datetime(2023, 9, 21, 11, 3, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 11, 17, 52, 32, tzinfo=datetime.timezone.utc), 'time_taken': 3517830.0, 'time_delta': '40 days, 17:10:30', 'additions': 35, 'deletions': 67, 'state': 'closed'}, {'id': 1470415765, 'number': 3264, 'closed': datetime.datetime(2023, 8, 29, 17, 10, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1652717.0, 'time_delta': '19 days, 3:05:17', 'additions': 271, 'deletions': 29, 'state': 'closed'}, {'id': 1469215927, 'number': 3260, 'closed': datetime.datetime(2023, 8, 10, 1, 9, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 9, 19, 57, 11, tzinfo=datetime.timezone.utc), 'time_taken': 18736.0, 'time_delta': '5:12:16', 'additions': 30, 'deletions': 47, 'state': 'closed'}, {'id': 1465636459, 'number': 3245, 'closed': datetime.datetime(2023, 8, 7, 19, 40, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 17, 8, 3, tzinfo=datetime.timezone.utc), 'time_taken': 9146.0, 'time_delta': '2:32:26', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1461857392, 'number': 3231, 'closed': datetime.datetime(2023, 8, 5, 20, 31, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 3, 18, 6, 57, tzinfo=datetime.timezone.utc), 'time_taken': 181455.0, 'time_delta': '2 days, 2:24:15', 'additions': 36, 'deletions': 89, 'state': 'closed'}, {'id': 1461510999, 'number': 3228, 'closed': datetime.datetime(2023, 8, 3, 14, 0, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 3, 13, 51, 28, tzinfo=datetime.timezone.utc), 'time_taken': 548.0, 'time_delta': '0:09:08', 'additions': 7, 'deletions': 41, 'state': 'closed'}, {'id': 1446018757, 'number': 3183, 'closed': datetime.datetime(2023, 7, 24, 14, 43, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 24, 4, 54, 56, tzinfo=datetime.timezone.utc), 'time_taken': 35292.0, 'time_delta': '9:48:12', 'additions': 29, 'deletions': 11, 'state': 'closed'}, {'id': 1445728834, 'number': 3182, 'closed': datetime.datetime(2023, 7, 26, 13, 14, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 23, 20, 20, 49, tzinfo=datetime.timezone.utc), 'time_taken': 233611.0, 'time_delta': '2 days, 16:53:31', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1443250264, 'number': 3173, 'closed': datetime.datetime(2023, 7, 20, 20, 36, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 16, 38, 22, tzinfo=datetime.timezone.utc), 'time_taken': 14285.0, 'time_delta': '3:58:05', 'additions': 72, 'deletions': 71, 'state': 'closed'}, {'id': 1441228480, 'number': 3167, 'closed': datetime.datetime(2023, 7, 20, 16, 2, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 19, 15, 9, 29, tzinfo=datetime.timezone.utc), 'time_taken': 89578.0, 'time_delta': '1 day, 0:52:58', 'additions': 114, 'deletions': 225, 'state': 'closed'}, {'id': 1440024623, 'number': 3159, 'closed': datetime.datetime(2023, 7, 26, 13, 9, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 22, 35, 9, tzinfo=datetime.timezone.utc), 'time_taken': 657250.0, 'time_delta': '7 days, 14:34:10', 'additions': 103, 'deletions': 26, 'state': 'closed'}, {'id': 1439013165, 'number': 3157, 'closed': datetime.datetime(2023, 7, 18, 23, 27, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 10, 41, 4, tzinfo=datetime.timezone.utc), 'time_taken': 46012.0, 'time_delta': '12:46:52', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 1425834704, 'number': 3125, 'closed': datetime.datetime(2023, 7, 8, 19, 27, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 6, 23, 33, tzinfo=datetime.timezone.utc), 'time_taken': 47028.0, 'time_delta': '13:03:48', 'additions': 102, 'deletions': 68, 'state': 'closed'}, {'id': 1425658032, 'number': 3123, 'closed': datetime.datetime(2023, 7, 9, 2, 56, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 2, 17, 40, tzinfo=datetime.timezone.utc), 'time_taken': 88711.0, 'time_delta': '1 day, 0:38:31', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 1421595345, 'number': 3108, 'closed': datetime.datetime(2023, 7, 28, 14, 28, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 18, 57, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1971028.0, 'time_delta': '22 days, 19:30:28', 'additions': 17, 'deletions': 45, 'state': 'closed'}, {'id': 1418800873, 'number': 3097, 'closed': datetime.datetime(2023, 7, 4, 14, 35, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 0, 20, 43, tzinfo=datetime.timezone.utc), 'time_taken': 51286.0, 'time_delta': '14:14:46', 'additions': 20, 'deletions': 6, 'state': 'closed'}, {'id': 1417812897, 'number': 3091, 'closed': datetime.datetime(2023, 7, 5, 21, 3, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 3, 10, 14, 8, tzinfo=datetime.timezone.utc), 'time_taken': 211741.0, 'time_delta': '2 days, 10:49:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1416760901, 'number': 3089, 'closed': datetime.datetime(2023, 7, 5, 12, 9, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 14, 35, 19, tzinfo=datetime.timezone.utc), 'time_taken': 250437.0, 'time_delta': '2 days, 21:33:57', 'additions': 22, 'deletions': 6, 'state': 'closed'}, {'id': 1413835486, 'number': 3083, 'closed': datetime.datetime(2023, 7, 5, 12, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 19, 37, 36, tzinfo=datetime.timezone.utc), 'time_taken': 491347.0, 'time_delta': '5 days, 16:29:07', 'additions': 52, 'deletions': 1, 'state': 'closed'}, {'id': 1412613613, 'number': 3079, 'closed': datetime.datetime(2023, 7, 5, 12, 15, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 29, 2, 10, 26, tzinfo=datetime.timezone.utc), 'time_taken': 554722.0, 'time_delta': '6 days, 10:05:22', 'additions': 62, 'deletions': 21, 'state': 'closed'}, {'id': 1412508518, 'number': 3078, 'closed': datetime.datetime(2023, 7, 3, 15, 32, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 22, 58, 58, tzinfo=datetime.timezone.utc), 'time_taken': 405241.0, 'time_delta': '4 days, 16:34:01', 'additions': 135, 'deletions': 114, 'state': 'closed'}, {'id': 1412400708, 'number': 3076, 'closed': datetime.datetime(2023, 6, 28, 22, 51, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 20, 49, 15, tzinfo=datetime.timezone.utc), 'time_taken': 7326.0, 'time_delta': '2:02:06', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 1412074079, 'number': 3074, 'closed': datetime.datetime(2023, 7, 6, 20, 51, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 28, 17, 35, 18, tzinfo=datetime.timezone.utc), 'time_taken': 702976.0, 'time_delta': '8 days, 3:16:16', 'additions': 118, 'deletions': 11, 'state': 'closed'}, {'id': 1406318374, 'number': 3066, 'closed': datetime.datetime(2023, 7, 19, 14, 29, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 19, 1, 49, tzinfo=datetime.timezone.utc), 'time_taken': 2143656.0, 'time_delta': '24 days, 19:27:36', 'additions': 139, 'deletions': 90, 'state': 'closed'}, {'id': 1403910656, 'number': 3062, 'closed': datetime.datetime(2023, 6, 23, 16, 1, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 17, 29, 29, tzinfo=datetime.timezone.utc), 'time_taken': 81096.0, 'time_delta': '22:31:36', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1400431615, 'number': 3055, 'closed': datetime.datetime(2023, 6, 21, 15, 41, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 19, 51, 45, tzinfo=datetime.timezone.utc), 'time_taken': 71377.0, 'time_delta': '19:49:37', 'additions': 30, 'deletions': 11, 'state': 'closed'}, {'id': 1397968496, 'number': 3050, 'closed': datetime.datetime(2023, 6, 19, 14, 4, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 10, 30, 25, tzinfo=datetime.timezone.utc), 'time_taken': 12856.0, 'time_delta': '3:34:16', 'additions': 3, 'deletions': 5, 'state': 'closed'}, {'id': 1395479229, 'number': 3043, 'closed': datetime.datetime(2023, 6, 28, 13, 6, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 10, 45, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1045270.0, 'time_delta': '12 days, 2:21:10', 'additions': 2880, 'deletions': 2107, 'state': 'closed'}, {'id': 1390642742, 'number': 3034, 'closed': datetime.datetime(2023, 6, 21, 13, 35, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 13, 13, 36, 18, tzinfo=datetime.timezone.utc), 'time_taken': 691160.0, 'time_delta': '7 days, 23:59:20', 'additions': 411, 'deletions': 731, 'state': 'closed'}, {'id': 1386439081, 'number': 3022, 'closed': datetime.datetime(2023, 6, 10, 1, 24, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 9, 16, 16, 23, tzinfo=datetime.timezone.utc), 'time_taken': 32912.0, 'time_delta': '9:08:32', 'additions': 163, 'deletions': 101, 'state': 'closed'}, {'id': 1381443289, 'number': 3016, 'closed': datetime.datetime(2023, 6, 9, 12, 19, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 6, 20, 5, 45, tzinfo=datetime.timezone.utc), 'time_taken': 231196.0, 'time_delta': '2 days, 16:13:16', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1356242366, 'number': 2969, 'closed': datetime.datetime(2023, 5, 19, 8, 41, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 20, 29, 49, tzinfo=datetime.timezone.utc), 'time_taken': 43887.0, 'time_delta': '12:11:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1352920658, 'number': 2961, 'closed': datetime.datetime(2023, 6, 9, 12, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 16, 18, 2, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2052636.0, 'time_delta': '23 days, 18:10:36', 'additions': 199, 'deletions': 31, 'state': 'closed'}, {'id': 1337113929, 'number': 2923, 'closed': datetime.datetime(2023, 6, 9, 12, 18, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 3, 17, 50, tzinfo=datetime.timezone.utc), 'time_taken': 3176889.0, 'time_delta': '36 days, 18:28:09', 'additions': 24, 'deletions': 7, 'state': 'closed'}, {'id': 1335675684, 'number': 2916, 'closed': datetime.datetime(2023, 5, 2, 18, 45, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 2, 18, 36, 38, tzinfo=datetime.timezone.utc), 'time_taken': 559.0, 'time_delta': '0:09:19', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 1306086734, 'number': 2867, 'closed': datetime.datetime(2023, 5, 18, 13, 54, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 7, 17, 17, 23, tzinfo=datetime.timezone.utc), 'time_taken': 3530252.0, 'time_delta': '40 days, 20:37:32', 'additions': 134, 'deletions': 16, 'state': 'closed'}, {'id': 1304038940, 'number': 2862, 'closed': datetime.datetime(2023, 4, 13, 15, 29, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 2, 52, 52, tzinfo=datetime.timezone.utc), 'time_taken': 650225.0, 'time_delta': '7 days, 12:37:05', 'additions': 126, 'deletions': 7, 'state': 'closed'}, {'id': 1272403769, 'number': 2769, 'closed': datetime.datetime(2023, 3, 13, 14, 47, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 12, 18, 44, 18, tzinfo=datetime.timezone.utc), 'time_taken': 72201.0, 'time_delta': '20:03:21', 'additions': 153, 'deletions': 14, 'state': 'closed'}, {'id': 1254571354, 'number': 2734, 'closed': datetime.datetime(2023, 3, 8, 23, 57, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 26, 18, 51, 43, tzinfo=datetime.timezone.utc), 'time_taken': 882332.0, 'time_delta': '10 days, 5:05:32', 'additions': 77, 'deletions': 35, 'state': 'closed'}, {'id': 1190984374, 'number': 2597, 'closed': datetime.datetime(2023, 3, 10, 15, 34, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 15, 23, 12, tzinfo=datetime.timezone.utc), 'time_taken': 5184652.0, 'time_delta': '60 days, 0:10:52', 'additions': 163, 'deletions': 430, 'state': 'closed'}, {'id': 1157565066, 'number': 2542, 'closed': datetime.datetime(2023, 1, 4, 17, 37, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 10, 11, 0, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2183778.0, 'time_delta': '25 days, 6:36:18', 'additions': 71, 'deletions': 458, 'state': 'closed'}, {'id': 1125949289, 'number': 2465, 'closed': datetime.datetime(2022, 11, 26, 17, 12, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 17, 12, 49, 11, tzinfo=datetime.timezone.utc), 'time_taken': 793374.0, 'time_delta': '9 days, 4:22:54', 'additions': 86, 'deletions': 123, 'state': 'closed'}, {'id': 1093233383, 'number': 2386, 'closed': datetime.datetime(2022, 10, 20, 16, 15, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 20, 5, 31, 28, tzinfo=datetime.timezone.utc), 'time_taken': 38670.0, 'time_delta': '10:44:30', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1092000761, 'number': 2381, 'closed': datetime.datetime(2022, 10, 19, 16, 19, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 9, 1, 23, tzinfo=datetime.timezone.utc), 'time_taken': 26270.0, 'time_delta': '7:17:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1091880692, 'number': 2379, 'closed': datetime.datetime(2022, 10, 19, 13, 56, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 7, 23, 28, tzinfo=datetime.timezone.utc), 'time_taken': 23599.0, 'time_delta': '6:33:19', 'additions': 9, 'deletions': 9, 'state': 'closed'}]"
543681412,BPX,FaradayInstitution/BPX,Python,12,23,10,7,131,27,4,2,"[{'id': 1416901882, 'number': 36, 'closed': datetime.datetime(2023, 7, 2, 20, 19, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 20, 14, 58, tzinfo=datetime.timezone.utc), 'time_taken': 283.0, 'time_delta': '0:04:43', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
671085206,pybamm-cookie,pybamm-team/pybamm-cookie,Jinja,2,7,9,7,131,6,2,1,"[{'id': 1465213481, 'number': 6, 'closed': datetime.datetime(2024, 5, 29, 14, 38, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 13, 4, 4, tzinfo=datetime.timezone.utc), 'time_taken': 25580077.0, 'time_delta': '296 days, 1:34:37', 'additions': 129, 'deletions': 0, 'state': 'closed'}, {'id': 1462972361, 'number': 4, 'closed': datetime.datetime(2023, 8, 4, 16, 2, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 4, 13, 54, 53, tzinfo=datetime.timezone.utc), 'time_taken': 7653.0, 'time_delta': '2:07:33', 'additions': 225, 'deletions': 19, 'state': 'closed'}, {'id': 1458156961, 'number': 3, 'closed': datetime.datetime(2023, 8, 1, 15, 29, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 13, 50, 2, tzinfo=datetime.timezone.utc), 'time_taken': 5974.0, 'time_delta': '1:39:34', 'additions': 64, 'deletions': 1, 'state': 'closed'}, {'id': 1458103429, 'number': 2, 'closed': datetime.datetime(2023, 8, 3, 5, 18, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 13, 21, 57, tzinfo=datetime.timezone.utc), 'time_taken': 143799.0, 'time_delta': '1 day, 15:56:39', 'additions': 956, 'deletions': 0, 'state': 'closed'}]"
