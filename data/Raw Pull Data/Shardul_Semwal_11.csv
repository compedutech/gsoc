pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
687365886,RetroPlayer: Add Achievements,"## Description
This Pull request adds support for Achievements in RetroPlayer, data fetched from RetroAchievements API have information about the achievements provided for a particular game, so we used that data for activating achievements, obtaining achievement state for every frame and then awarding it whenever it triggered.
User will be notified about an unlocked achievement through a pop-up notification and also through their [RetroAchievement.org](http://retroachievements.org/) profile.
This PR will use https://github.com/kodi-game/game.libretro/pull/73 for calling[ rcheevos](https://github.com/RetroAchievements/rcheevos/tree/v9.2.0) functions.


## Motivation and Context
Last year we have added support for RCheevos in RetroPlayer, so adding support for Achievements is one another task that was needed to be accomplished.
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here -->

## How Has This Been Tested?
<!--- Please describe in detail how you tested your change -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc -->

## Screenshots (if appropriate):
Notifying user through pop-up notification:
![image](https://user-images.githubusercontent.com/56973333/130275514-42fbf7cc-2626-48f7-9a02-ee7e4714ccd0.png)
Information updated in RetroAchievements profile:
![image](https://user-images.githubusercontent.com/56973333/130275549-875f7e7b-4a34-4d55-8b62-ca8a6b27e30a.png)

## Types of change
<!--- What type of change does your code introduce? Put an `x` in all the boxes that apply like this: [X] -->
- [ ] **Bug fix** (non-breaking change which fixes an issue)
- [ ] **Clean up** (non-breaking change which removes non-working, unmaintained functionality)
- [ ] **Improvement** (non-breaking change which improves existing functionality)
- [x] **New feature** (non-breaking change which adds functionality)
- [ ] **Breaking change** (fix or feature that will cause existing functionality to change)
- [ ] **Cosmetic change** (non-breaking change that doesn't touch code)
- [ ] **None of the above** (please explain below)

## Checklist:
<!--- Go over all the following points, and put an `X` in all the boxes that apply like this: [X] -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the **[Code Guidelines](https://github.com/xbmc/xbmc/blob/master/docs/CODE_GUIDELINES.md)** of this project 
- [x] My change requires a change to the documentation, either Doxygen or wiki
- [ ] I have updated the documentation accordingly
- [x] I have read the **[Contributing](https://github.com/xbmc/xbmc/blob/master/docs/CONTRIBUTING.md)** document
- [ ] I have added tests to cover my change
- [ ] All new and existing tests passed
",False,126,https://api.github.com/repos/garbear/xbmc/pulls/126,https://github.com/garbear/xbmc/pull/126,closed,188,15,10,1,11,23,0,0,[],2021-07-11 17:00:02+00:00,2024-05-10 06:37:23+00:00,89300241.0,"1033 days, 13:37:21","[{'comment_id': 672010132, 'comment_body': 'You should also change MIN to 3.0.0', 'comment_created': datetime.datetime(2021, 7, 19, 6, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 672027757, 'comment_body': '@garbear , On changing min to 3.0.0, game.libretro addon is disabled, I have done this yesterday also. This was the screenshot of the same.\r\n![image](https://user-images.githubusercontent.com/56973333/126114886-048e456b-80e7-4f84-877b-0e99184feeae.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 19, 6, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Shardul555', 'type': 'User'}, {'comment_id': 672539724, 'comment_body': ""Good, we want old versions of game.libretro to be rejected (we require a compatible version, otherwise we get your segfault, and segfaults should be avoided). I'll fire up my windows PC later today and figure out where the game.libretro build should be."", 'comment_created': datetime.datetime(2021, 7, 19, 18, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 673586218, 'comment_body': ""Sorry, I'm pressed hard at work and can't find a moment to spare for testing. From what I remember, the `prepare` script runs the CMake command and generates VS project files. Instead of building with `cmake --install`, open the .sln in VS, right click on the project, and compile it that way. Hunt down where it places the compiled files. Either copy them to `addons/`, or to simplify your life, make a symlink. That should cause game.libretro dependent on 3.0.0 to appear in `addons/`\r\n"", 'comment_created': datetime.datetime(2021, 7, 21, 0, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 673929059, 'comment_body': 'Thanks @garbear , I have not done exactly the same but done something which I think is working, First step I do was to change game version in file `versions.h` to 3.0.0 from `game.libetro.sln` (I have changed it in kodi.sln but I realize today that it was 2.1.0 here in `game.libretro.sln`) then I have changed individual files at `kodi-build/addons/game.libretro` by the files I obtained after building `game.libretro.sln`. It seems to work right now, and if there will any problem I will comment here later on', 'comment_created': datetime.datetime(2021, 7, 21, 12, 31, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Shardul555', 'type': 'User'}, {'comment_id': 678223473, 'comment_body': 'Hello @garbear , On adding one new function, again I realise that same problem is coming, Kodi was searching for stale version, so I have changed game versions to 3.1.1, also tried 3.2.0 but it is not working(game.libretro is disabled now),so is there any specific pattern to which these version should be changed?\r\n', 'comment_created': datetime.datetime(2021, 7, 28, 11, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Shardul555', 'type': 'User'}, {'comment_id': 678584009, 'comment_body': 'Yes there\'s a pattern, which is called ""semver"" or ""semantic versioning"". Semver defines the three numbers as major, minor, patch. Patch is no change to API, minor is backwards-compatible change, and major is backwards-incompatible change.\r\n\r\nYou can bump versions how you see fit for development, and we\'ll reset to 3.0 when we merge after the summer.\r\n\r\nSo you\'re still getting stale game.libretro? I hate that my workload is so high, I\'d like to hop on windows and document how to make it not stale and always working. I\'ll do my best to get some documentation written after work tonight.', 'comment_created': datetime.datetime(2021, 7, 28, 19, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 684760869, 'comment_body': 'minor: this needs to be formatted to match the indentation ', 'comment_created': datetime.datetime(2021, 8, 8, 11, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684761401, 'comment_body': 'minor: add a new line before this, more info [here](https://github.com/garbear/xbmc/blob/retroplayer-19.1/docs/CODE_GUIDELINES.md#7-headers)', 'comment_created': datetime.datetime(2021, 8, 8, 11, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684761613, 'comment_body': 'this two should be instance variables and not globals', 'comment_created': datetime.datetime(2021, 8, 8, 11, 42, 12, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684762335, 'comment_body': 'prefer range-based for loops instead of the c style \r\n```suggestion\r\n  for (const auto& achievement : data[PATCH_DATA][ACHIEVEMENTS])\r\n  {\r\n    // achievement[CHEEVO_ID].asUnsignedInteger()\r\n  }\r\n```', 'comment_created': datetime.datetime(2021, 8, 8, 11, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684762636, 'comment_body': ""you should store the achievements in one unordered map with the cheevo_id as key and the whole achievement as a value so you won't do a for loop each time you want to access the achievement's data"", 'comment_created': datetime.datetime(2021, 8, 8, 11, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684762909, 'comment_body': 'here you are searching the key twice (once with `find` and once with `[]`, you could store the value before the if statement.', 'comment_created': datetime.datetime(2021, 8, 8, 11, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684763346, 'comment_body': ""you shouldn't use char arrays/pointers to store a string, you can use the string constructor which takes a `char *` and copies its contents to a new string"", 'comment_created': datetime.datetime(2021, 8, 8, 11, 55, 47, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684763515, 'comment_body': 'minor: add a space before `<`', 'comment_created': datetime.datetime(2021, 8, 8, 11, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684763833, 'comment_body': 'try to avoid importing unrelated namespaces outside of the ones this class is declared within', 'comment_created': datetime.datetime(2021, 8, 8, 12, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 684763918, 'comment_body': 'instance variables must start with `m_` prefix', 'comment_created': datetime.datetime(2021, 8, 8, 12, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'NikosSiak', 'type': 'User'}, {'comment_id': 686816518, 'comment_body': ""Here it gives error: C++ this range-based 'for' statement requires a suitable function and none was found\r\nMay be as the `data[PATCH_DATA][ACHIEVEMENTS]` is a CVariant object and this is trying to find some array format"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Shardul555', 'type': 'User'}, {'comment_id': 688715098, 'comment_body': 'I think you want `data[PATCH_DATA][ACHIEVEMENTS].begin_array()` to access the array iter', 'comment_created': datetime.datetime(2021, 8, 13, 18, 47, 14, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 688864627, 'comment_body': 'Thanks @garbear , I will test this way to access the array.', 'comment_created': datetime.datetime(2021, 8, 14, 5, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Shardul555', 'type': 'User'}, {'comment_id': 693419100, 'comment_body': 'Should this be upstreamed?', 'comment_created': datetime.datetime(2021, 8, 22, 0, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 693419148, 'comment_body': ""Note: we'll drop this before merge."", 'comment_created': datetime.datetime(2021, 8, 22, 0, 32, 9, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}, {'comment_id': 696080944, 'comment_body': ""I've upstreamed this change as part of https://github.com/xbmc/xbmc/pull/20075"", 'comment_created': datetime.datetime(2021, 8, 25, 20, 15, 5, tzinfo=datetime.timezone.utc), 'commenter': 'garbear', 'type': 'User'}]","[{'commit_sha': '314bb47608ceb9c0ac805ae2f3e173129af4ce87', 'committer_username': 'Shardul555', 'committer_name': 'shardul semwal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 16, 30, 17, tzinfo=datetime.timezone.utc)}]",shardul semwal,56973333,,User,,23,,17,18
716904611,Implementing support for Achievements in RetroPlayer,"This PR implement support for Achievements in ReteroPlayer. This PR is based on #67 , for adding support of RCheevos.
This PR is used by [garbear-xbmc #126](https://github.com/garbear/xbmc/pull/126) for implementing Achievements. ",False,73,https://api.github.com/repos/kodi-game/game.libretro/pulls/73,https://github.com/kodi-game/game.libretro/pull/73,open,97,1,4,2,4,0,0,0,[],2021-08-20 17:51:37+00:00,,0.0,,[],"[{'commit_sha': '5e2f992c798395357849bb0f9b2e540cf92beb2d', 'committer_username': 'Shardul555', 'committer_name': 'shardul semwal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 16, 30, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '214cf1b927882f8b23152226ae366780ed607420', 'committer_username': 'Shardul555', 'committer_name': 'shardul semwal', 'committer_email': None, 'commit_date': datetime.datetime(2019, 10, 24, 16, 30, 17, tzinfo=datetime.timezone.utc)}]",shardul semwal,56973333,,User,,23,,17,18

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
1593140,xbmc,garbear/xbmc,C++,53,133,28,1174,65817,26,191,6,"[{'id': 756407449, 'number': 127, 'closed': None, 'created': datetime.datetime(2021, 10, 12, 17, 44, 2, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 183, 'deletions': 16, 'state': 'open'}, {'id': 687365886, 'number': 126, 'closed': datetime.datetime(2024, 5, 10, 6, 37, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 17, 0, 2, tzinfo=datetime.timezone.utc), 'time_taken': 89300241.0, 'time_delta': '1033 days, 13:37:21', 'additions': 188, 'deletions': 15, 'state': 'closed'}]"
31511696,game.libretro,kodi-game/game.libretro,C++,26,37,12,20,447,7,12,2,"[{'id': 1224232214, 'number': 104, 'closed': None, 'created': datetime.datetime(2023, 2, 1, 3, 55, 1, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 89, 'deletions': 1, 'state': 'open'}, {'id': 716904611, 'number': 73, 'closed': None, 'created': datetime.datetime(2021, 8, 20, 17, 51, 37, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 97, 'deletions': 1, 'state': 'open'}]"
