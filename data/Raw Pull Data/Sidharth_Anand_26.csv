pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
669535028,Allow popups to be opened for editable notation elements,"
![image](https://user-images.githubusercontent.com/55060749/121894124-64ee4200-cd3c-11eb-84a8-6d7f4de9d551.png)


<!-- Use ""x"" to fill the checkboxes below like [x] -->

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [ ] I created the test (mtest, vtest, script test) to verify the changes I made
",False,8308,https://api.github.com/repos/musescore/MuseScore/pulls/8308,https://github.com/musescore/MuseScore/pull/8308,closed,178,0,12,1,2,15,0,0,[],2021-06-14 12:45:22+00:00,2023-05-10 17:11:20+00:00,60063958.0,"695 days, 4:25:58","[{'comment_id': 651033375, 'comment_body': 'Is the `virtual` keyword required since the class is `final`?', 'comment_created': datetime.datetime(2021, 6, 14, 15, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651036351, 'comment_body': 'Why this change? ', 'comment_created': datetime.datetime(2021, 6, 14, 15, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651037429, 'comment_body': 'Why are lines 26 and 27 exchanged. Try not to make unnecessary changes.', 'comment_created': datetime.datetime(2021, 6, 14, 15, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651039246, 'comment_body': 'This line might better placed a few lines lower, close the `return` statement where `scale` is actually used.', 'comment_created': datetime.datetime(2021, 6, 14, 15, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651039631, 'comment_body': 'Maybe `return mappedPoint / guiScaling();` ?', 'comment_created': datetime.datetime(2021, 6, 14, 15, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651040611, 'comment_body': 'Same comments as above, move `double scale = guiScaling()` a few lines down or remove the variable `scale` completely.', 'comment_created': datetime.datetime(2021, 6, 14, 15, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651048230, 'comment_body': 'Is there any reason not to use `Popup.CloseOnEscape | Popup.CloseOnPressOutside` instead of `Popup.CloseOnPressOutside`? ', 'comment_created': datetime.datetime(2021, 6, 14, 15, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651050448, 'comment_body': 'Variable `a` is not used.', 'comment_created': datetime.datetime(2021, 6, 14, 15, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651050634, 'comment_body': 'Variable `b` is not used.', 'comment_created': datetime.datetime(2021, 6, 14, 15, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651136819, 'comment_body': ""Sidharth explained to me earlier that Visual Studio adds the `--debug` flag when running the app. This prevented the app from running, because the flag was not recognized. Therefore you need to tell Visual Studio every time that it should not add that flag. Now, Sidharth apparently found the root cause of that flag. \r\n\r\nHowever, the app should now run properly with this flag since PR #8294. \r\nI don't know if this change should be there anyway (and if so, it should probably be at least in a different commit)."", 'comment_created': datetime.datetime(2021, 6, 14, 17, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 651142538, 'comment_body': ""Please don't over-use newlines. Use at most one in a row, and don't put newlines before closing braces (see bottom of this file). "", 'comment_created': datetime.datetime(2021, 6, 14, 17, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'cbjeukendrup', 'type': 'User'}, {'comment_id': 651580974, 'comment_body': 'Confirmed that this change is not required because PR #8294 adds the debug flag', 'comment_created': datetime.datetime(2021, 6, 15, 8, 45, 23, tzinfo=datetime.timezone.utc), 'commenter': 'sidharth-anand', 'type': 'User'}, {'comment_id': 651598288, 'comment_body': 'Great! In that case I propose to remove this change and the rebase this PR.', 'comment_created': datetime.datetime(2021, 6, 15, 9, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'njvdberg', 'type': 'User'}, {'comment_id': 651948793, 'comment_body': 'I encourage you to exclude any changes for inspector from this PR', 'comment_created': datetime.datetime(2021, 6, 15, 16, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vpereverzev', 'type': 'User'}, {'comment_id': 652362240, 'comment_body': ""I've only made this change because ElementPopup (see NotationView.qml, line 121) needs the SECTION_NOTATION model to be available at startup"", 'comment_created': datetime.datetime(2021, 6, 16, 5, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sidharth-anand', 'type': 'User'}]","[{'commit_sha': '30c11a9b7c27a3080b283698e1fdb06e70cc04e0', 'committer_username': 'sidharth-anand', 'committer_name': 'Sidharth Anand', 'committer_email': 'sidharthanand85@gmail.com', 'commit_date': datetime.datetime(2019, 9, 8, 17, 48, 3, tzinfo=datetime.timezone.utc)}]",Sidharth Anand,55060749,sidharthanand85@gmail.com,User,,25,,0,37
683509151,Tempo Popup,"## Features

* The popup is fully functional and supports user input through all 3 tabs.
* The tempo marking is also modified to prevent user input inside the equation.

https://user-images.githubusercontent.com/55060749/124446441-0b5abf80-dd9e-11eb-8dab-32e27afdd125.mp4

Note: This PR depends on #8308 

- [x] I signed [CLA](https://musescore.org/en/cla)
- [x] I made sure the code in the PR follows [the coding rules](https://github.com/musescore/MuseScore/wiki/CodeGuidelines)
- [x] I made sure the code compiles on my machine
- [x] I made sure there are no unnecessary changes in the code
- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving
- [x] I made sure the commit message(s) contain a description and answer the question ""Why do those changes fix that particular issue?"" or ""Why are those changes really necessary as improvements?""
- [ ] I made sure the commit message title starts with ""fix #424242:"" if there is a related issue
- [x] I created the test (mtest, vtest, script test) to verify the changes I made
",False,8524,https://api.github.com/repos/musescore/MuseScore/pulls/8524,https://github.com/musescore/MuseScore/pull/8524,open,1471,323,56,2,24,25,1,0,[{'name': 'GSoC'}],2021-07-05 09:05:22+00:00,,0.0,,"[{'comment_id': 663863521, 'comment_body': 'either make this float', 'comment_created': datetime.datetime(2021, 7, 5, 11, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 663863839, 'comment_body': ""or cast it to float here, in order to get it to compile on Linux, like in GitHub's CI\r\n\r\nAs C++11 doesn't have a `std::pow(float, int)`"", 'comment_created': datetime.datetime(2021, 7, 5, 11, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 672112842, 'comment_body': '`std::pow(3, dots)/std::pow(2, dots)` would arguably be more efficient', 'comment_created': datetime.datetime(2021, 7, 19, 8, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689139548, 'comment_body': 'did uncrustify pick this up?', 'comment_created': datetime.datetime(2021, 8, 15, 20, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689139582, 'comment_body': 'Why would that be a property of an element? I\'d think it would just be a C++ member field of a TextCursor (""hide"").  ', 'comment_created': datetime.datetime(2021, 8, 15, 20, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689139729, 'comment_body': ""I'd be concerned about inserting new values into this enum, in case there's any code anywhere that relies on the existing values (esp. with serialization). Adding at the end is always safer."", 'comment_created': datetime.datetime(2021, 8, 15, 20, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689140069, 'comment_body': 'But this already works? (using Ctrl+left/right to move words).  Any reason you needed to add this?  (Actually I realised this is just a relatively minor refactoring, anything to reduce the size of the TextBase::edit() function is good I guess!)', 'comment_created': datetime.datetime(2021, 8, 15, 20, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689140181, 'comment_body': ""don't think we need that log message - what's an example of why this would be wanted on a per-element basis?"", 'comment_created': datetime.datetime(2021, 8, 15, 20, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689140263, 'comment_body': 'no\r\nit probably should have though\r\n@sidharth-anand please remove that stzray space at the end of the line', 'comment_created': datetime.datetime(2021, 8, 15, 20, 37, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 689140286, 'comment_body': 'toTextBase(ed.element) should always be the same as `this`, no?', 'comment_created': datetime.datetime(2021, 8, 15, 20, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689140453, 'comment_body': 'again, no need for `toTextBase(ed.element)->`\r\n ', 'comment_created': datetime.datetime(2021, 8, 15, 20, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689140789, 'comment_body': 'Tthis is part of #8853\r\nActually even newer, Leland 0.61', 'comment_created': datetime.datetime(2021, 8, 15, 20, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 689140834, 'comment_body': 'do all of these need to be public? Particularly moveCursor.', 'comment_created': datetime.datetime(2021, 8, 15, 20, 42, 1, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689140849, 'comment_body': 'this too is part of #8853\r\nActually even newer, Leland 0.61', 'comment_created': datetime.datetime(2021, 8, 15, 20, 42, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 689141051, 'comment_body': 'this too is part of #8853, but named leland_metadata.json (in sync with the corresponding latest change in the leland repo), so actually even newer, Leland 0.61', 'comment_created': datetime.datetime(2021, 8, 15, 20, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 689155061, 'comment_body': ""why do you need the unicode code AND the xml - one can be determined from the other.\r\nAnd it's not clear why you need <sym> </sym> in the table given they all have it and could be added programmatically as needed."", 'comment_created': datetime.datetime(2021, 8, 15, 22, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689155344, 'comment_body': '""dwhqest"" occurs 8 times in this file and I would think is moderately likely to need modifying in future, better to use a named constant.', 'comment_created': datetime.datetime(2021, 8, 15, 22, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689334477, 'comment_body': 'This is done so the individual elements can modify the movement behavior of the cursor if required. (TempoText does not allow the cursor to move inside the tempo marking itself)', 'comment_created': datetime.datetime(2021, 8, 16, 8, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sidharth-anand', 'type': 'User'}, {'comment_id': 689340465, 'comment_body': ""Are you saying somebody can't, for example, edit the = symbol and replace it with ≈? That would be a serious regression on MU3 if so..."", 'comment_created': datetime.datetime(2021, 8, 16, 8, 34, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 689341303, 'comment_body': '@Tantacrul should probably answer this', 'comment_created': datetime.datetime(2021, 8, 16, 8, 35, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sidharth-anand', 'type': 'User'}, {'comment_id': 689353297, 'comment_body': 'As long as I can have this: \r\n![image](https://user-images.githubusercontent.com/5364225/129537357-2abfca24-f2cb-4b8a-b2e8-8fce6f3885e3.png)\r\n', 'comment_created': datetime.datetime(2021, 8, 16, 8, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'wizofaus', 'type': 'User'}, {'comment_id': 690225278, 'comment_body': 'these 8 lines should get removed, they apparently have been errnously duplicated.\r\nOr (probably better) change to match the comments above, `//    return ""w"";`', 'comment_created': datetime.datetime(2021, 8, 17, 10, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 690226949, 'comment_body': ""We're loosing their translatability (of tooltips IIRC)"", 'comment_created': datetime.datetime(2021, 8, 17, 10, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 691979853, 'comment_body': 'excessive whitespace', 'comment_created': datetime.datetime(2021, 8, 19, 10, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Jojo-Schmitz', 'type': 'User'}, {'comment_id': 702867191, 'comment_body': 'Is there a reason for keeping the metronome marking in the `<text>` element now that you have the `<equation>` element?\r\n\r\nAlso, I originally suggested this for the MSCX syntax:\r\n\r\n```xml\r\n    <text>Some text <equation>q = 100</equation> some more text</text>\r\n```\r\n\r\nThis allows text after the equation. Is there a reason you chose not to do it this way?', 'comment_created': datetime.datetime(2021, 9, 6, 12, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'shoogle', 'type': 'User'}]","[{'commit_sha': 'ac272b05464ee41287628f4d92bb2f2edc7b1b36', 'committer_username': 'sidharth-anand', 'committer_name': 'Sidharth Anand', 'committer_email': 'sidharthanand85@gmail.com', 'commit_date': datetime.datetime(2019, 9, 8, 17, 48, 3, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1092b621e47bba188d1a5b7d086d9de075b51974', 'committer_username': 'sidharth-anand', 'committer_name': 'Sidharth Anand', 'committer_email': 'sidharthanand85@gmail.com', 'commit_date': datetime.datetime(2019, 9, 8, 17, 48, 3, tzinfo=datetime.timezone.utc)}]",Sidharth Anand,55060749,sidharthanand85@gmail.com,User,,25,,0,37

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4454793,MuseScore,musescore/MuseScore,C++,2584,11992,240,428,37293,2733,111,133,"[{'id': 683509151, 'number': 8524, 'closed': None, 'created': datetime.datetime(2021, 7, 5, 9, 5, 22, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1471, 'deletions': 323, 'state': 'open'}, {'id': 669535028, 'number': 8308, 'closed': datetime.datetime(2023, 5, 10, 17, 11, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 12, 45, 22, tzinfo=datetime.timezone.utc), 'time_taken': 60063958.0, 'time_delta': '695 days, 4:25:58', 'additions': 178, 'deletions': 0, 'state': 'closed'}, {'id': 580996823, 'number': 7610, 'closed': datetime.datetime(2021, 4, 29, 21, 11, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 26, 17, 1, 17, tzinfo=datetime.timezone.utc), 'time_taken': 5371796.0, 'time_delta': '62 days, 4:09:56', 'additions': 1543, 'deletions': 2, 'state': 'closed'}, {'id': 572515359, 'number': 7500, 'closed': datetime.datetime(2022, 12, 20, 8, 55, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 13, 24, tzinfo=datetime.timezone.utc), 'time_taken': 58390290.0, 'time_delta': '675 days, 19:31:30', 'additions': 666, 'deletions': 302, 'state': 'closed'}, {'id': 568357484, 'number': 7435, 'closed': datetime.datetime(2021, 2, 8, 11, 53, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 5, 13, 34, 25, tzinfo=datetime.timezone.utc), 'time_taken': 253172.0, 'time_delta': '2 days, 22:19:32', 'additions': 68, 'deletions': 1, 'state': 'closed'}, {'id': 568327879, 'number': 7428, 'closed': datetime.datetime(2021, 2, 5, 12, 42, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 5, 12, 40, 58, tzinfo=datetime.timezone.utc), 'time_taken': 79.0, 'time_delta': '0:01:19', 'additions': 116, 'deletions': 1, 'state': 'closed'}, {'id': 563970056, 'number': 7366, 'closed': datetime.datetime(2021, 2, 3, 17, 35, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 29, 13, 0, 39, tzinfo=datetime.timezone.utc), 'time_taken': 448464.0, 'time_delta': '5 days, 4:34:24', 'additions': 56, 'deletions': 1, 'state': 'closed'}, {'id': 561783134, 'number': 7333, 'closed': datetime.datetime(2021, 1, 28, 8, 19, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 26, 13, 28, 54, tzinfo=datetime.timezone.utc), 'time_taken': 154224.0, 'time_delta': '1 day, 18:50:24', 'additions': 3, 'deletions': 0, 'state': 'closed'}]"
