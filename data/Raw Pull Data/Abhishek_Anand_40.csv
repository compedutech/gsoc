pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1426722631,Dsp48e1 support for XILINX,"**Google Summer of Code 2023**
DSP hard block integration in F4PGA
Mentor:  @mkurc-ant
Contributor: Abhishek Anand

- Updated cells_map.v and cells_sim.v to support techmap to DSP48E1_VPR.
- Added dsp48e1.model.xml and dsp48e1.pb_type.xml to enable support for DSP primitive.
- Included sequential and internal path combinational delays in the DSP primitive.
- Some fake timing values had to be included as they were not present in the database.
- Each mode(or a combination of features) of DSP48E1 has different internal timings, and each of them needs a separate VPR cell. Right now only one mode is enabled in the primitive. Other modes will have the same structure but different blif_models to map to. Bels.json must have a different set of timing info for each VPR cell. Since the total combinations of all the features will be quite large, only a few of those with significant differences in timings will be considered.
- Added a DSP test. Target part: xc7a35tcsg324-1.
- Added DRC checks for DSP48E1 in the cells_map.v. 
- All the -nodsp flags need to be removed from xc7.f4pga.tcl before running the tests in your local environment to enable the synthesis of DSP cells.
- [GSoC proposal](https://abhishekanand.hashnode.dev/gsoc-2023-the-proposal-that-got-me-in)
- [Blog 1](https://abhishekanand.hashnode.dev/gsoc-2023-week-1-and-2-developing-dsp48e1-primitive)
- [Blog 2](https://abhishekanand.hashnode.dev/gsoc-2023-week-3-and-4-complete-architecture-description-of-dsp48e1)
- [Blog 3](https://abhishekanand.hashnode.dev/gsoc-2023-week-5-and-6-incorporating-sequential-and-internal-combinational-delays)",True,3322,https://api.github.com/repos/f4pga/f4pga-arch-defs/pulls/3322,https://github.com/f4pga/f4pga-arch-defs/pull/3322,closed,1171,25,21,7,0,10,0,0,[],2023-07-10 03:49:38+00:00,2023-07-18 12:41:45+00:00,723127.0,"8 days, 8:52:07","[{'comment_id': 1260724752, 'comment_body': 'This can be removed if commented out.', 'comment_created': datetime.datetime(2023, 7, 12, 7, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260725502, 'comment_body': 'Please remove commented code', 'comment_created': datetime.datetime(2023, 7, 12, 7, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260726344, 'comment_body': 'Is this file needed? Was it commited by accident?', 'comment_created': datetime.datetime(2023, 7, 12, 7, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260727636, 'comment_body': ""I'm not sure if TIEOFF needs to be mentioned here"", 'comment_created': datetime.datetime(2023, 7, 12, 7, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728290, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728361, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728517, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728645, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260730713, 'comment_body': 'This for sure needs to be removed, there is no need for modeling TIEOFFs as tiles. In VPR we do not model them as sites and their outputs are connected to the synthetic global constant network.', 'comment_created': datetime.datetime(2023, 7, 12, 7, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260843313, 'comment_body': 'By mistake! ', 'comment_created': datetime.datetime(2023, 7, 12, 8, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}]","[{'commit_sha': '6a2444bddd0baaa314e9d37018f6772b1042494e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd53631e6d4a94beec4de1436754f0c172feb2879', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b171edfbed81f2c7f29a8dc5b607f214cd8da1d9', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee731c10a444f4d789e5a2488488b0ddf0d76035', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31a1a487c3e38d61c01dc60c7d15efbd28a88be0', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9ed2f21933e9b861bf2a5112c8eed1214aee3d', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3770989b6f427cd30ad388c9a809852287590baf', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8
1456683505,Support for DSP,"**Google Summer of Code 2023**
DSP hard block integration in F4PGA
Mentor:  @mkurc-ant
Contributor: Abhishek Anand

- Added dsp_models.py to process DSP tiles while running fasm2bels on a target.
- Each DSP tile has 2 DSP48E1 sites. Features related to DSP_0 and DSP_1 sites are segregated which are then processed separately.
- For each DSP site, a bel(named DSP48E1) is instantiated with parameters that are set according to the set features in FASM.
- Sinks and sources are added to the bel by referring the user guide for DSP48E1.
- Cascaded inputs and outputs are added as unconnected ports since these are non-configurable.
- USE_MULT, SEL_PATTERN, USE_PATTERNDETECT are not found in the Segbits database. They are always set as their default value.
- For parameters like MASK, PATTERN, IS_ALUMODE_INVERTED, etc. , binary value is decoded from the given multibit features in the FASM.
- A cleanup function is added to be executed after completing the routing to remove redundant DSP sites.
- For each DSP site, we check if any of its outputs are in use. If not, the site is removed. 
- Some designs may use only cascaded outputs of a particular DSP site (e.g. an intermediate DSP site in a filter). To check if these outputs are in use, we need to see if the adjacent sites are using the corresponding cascaded inputs which in turn is determined by the features of that site.
- Depending on the site's Y-coordinate, it may be cascaded with the DSP site within the same tile or the tile adjacent to it.
- Fixed a bug in ioi_models.py. Earlier idelay features were being processed without checking if there were at least 1 feature to process.
- [GSoC proposal](https://abhishekanand.hashnode.dev/gsoc-2023-the-proposal-that-got-me-in)",True,91,https://api.github.com/repos/chipsalliance/f4pga-xc-fasm2bels/pulls/91,https://github.com/chipsalliance/f4pga-xc-fasm2bels/pull/91,closed,515,5,4,5,1,9,0,0,[],2023-07-31 16:58:41+00:00,2023-09-25 08:07:18+00:00,4806517.0,"55 days, 15:08:37","[{'comment_id': 1280649244, 'comment_body': 'These FASM features begin with `Z` which indicates that they correlate with a feature turned off. Are you sure that eg. when `ZMREG=1` the parameter `MREG` is also set to 1 ? This also applies to parameter to FASM mapping in https://github.com/f4pga/f4pga-arch-defs/blob/gsoc-2023-dsp/xilinx/xc7/techmap/cells_map.v#L11030-L11062', 'comment_created': datetime.datetime(2023, 8, 1, 13, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1322569123, 'comment_body': 'Please remove those from the docstring. This is important!  Those are bit mappings that should be distributed only with the prjxray-database.', 'comment_created': datetime.datetime(2023, 9, 12, 7, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1322630764, 'comment_body': 'Do I need to remove all of it or just the bit mappings?', 'comment_created': datetime.datetime(2023, 9, 12, 8, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1322633312, 'comment_body': 'Fixed this. You were right, Z indicates opposite behaviour.', 'comment_created': datetime.datetime(2023, 9, 12, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1322965663, 'comment_body': 'Please remove just the bit mappings.', 'comment_created': datetime.datetime(2023, 9, 12, 12, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1323004706, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 12, 13, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1323117651, 'comment_body': 'I believe that these two cases share a lot of common code. Perhaps the common checks can be isolated into a function?\r\n\r\nI also find those big multi-line ifs awkward. You could implement that in a for loop even taking advantage of Python `for`/`else` construct', 'comment_created': datetime.datetime(2023, 9, 12, 14, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1327153054, 'comment_body': 'Fixed it. Can you have a look?', 'comment_created': datetime.datetime(2023, 9, 15, 11, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1328461751, 'comment_body': 'Alright, looks good.', 'comment_created': datetime.datetime(2023, 9, 18, 9, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}]","[{'commit_sha': '2d52196d49c3a4dd3fcdc5040aa6cfabacf84afa', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8615c9c05014e710e54ea0426d383d2108bfa42e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7bbaa4187dd4bd4ad671967dc35a3a86149b15a', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe6c376ab115342a0f4c3bd8744988e4242d342a', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fac97dcaafe5992a7128299bc97841c1da3d167e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8
1523535274,Updated techmaps for dsp48e1,"**Google Summer of Code 2023**
DSP hard block integration in F4PGA
Mentor:  @mkurc-ant
Contributor: Abhishek Anand

- Added a Vivado target for the DSP test.
- Now a round trip test can be performed to check the correctness of the bitstream produced by F4PGA by cross checking it with the one generated by Vivado.
- The Vivado target depends on the dsp48e1 support in fasm2bels. This [PR](https://github.com/chipsalliance/f4pga-xc-fasm2bels/pull/91) needs to be merged in fasm2bels and third party dependencies need to be updated for the CI to complete successfully.
- Modified techmaps to produce correct Z-features.
- [GSoC proposal](https://abhishekanand.hashnode.dev/gsoc-2023-the-proposal-that-got-me-in)",True,3411,https://api.github.com/repos/f4pga/f4pga-arch-defs/pulls/3411,https://github.com/f4pga/f4pga-arch-defs/pull/3411,closed,86,78,7,2,1,0,0,0,[],2023-09-20 17:54:24+00:00,2023-09-25 14:26:37+00:00,419533.0,"4 days, 20:32:13",[],"[{'commit_sha': 'eda62e0e5f37291237f55ed0346e184c01416371', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868162720835ef3f195ac5c45eb083415b4ce1a1', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8
1426722631,Dsp48e1 support for XILINX,"**Google Summer of Code 2023**
DSP hard block integration in F4PGA
Mentor:  @mkurc-ant
Contributor: Abhishek Anand

- Updated cells_map.v and cells_sim.v to support techmap to DSP48E1_VPR.
- Added dsp48e1.model.xml and dsp48e1.pb_type.xml to enable support for DSP primitive.
- Included sequential and internal path combinational delays in the DSP primitive.
- Some fake timing values had to be included as they were not present in the database.
- Each mode(or a combination of features) of DSP48E1 has different internal timings, and each of them needs a separate VPR cell. Right now only one mode is enabled in the primitive. Other modes will have the same structure but different blif_models to map to. Bels.json must have a different set of timing info for each VPR cell. Since the total combinations of all the features will be quite large, only a few of those with significant differences in timings will be considered.
- Added a DSP test. Target part: xc7a35tcsg324-1.
- Added DRC checks for DSP48E1 in the cells_map.v. 
- All the -nodsp flags need to be removed from xc7.f4pga.tcl before running the tests in your local environment to enable the synthesis of DSP cells.
- [GSoC proposal](https://abhishekanand.hashnode.dev/gsoc-2023-the-proposal-that-got-me-in)
- [Blog 1](https://abhishekanand.hashnode.dev/gsoc-2023-week-1-and-2-developing-dsp48e1-primitive)
- [Blog 2](https://abhishekanand.hashnode.dev/gsoc-2023-week-3-and-4-complete-architecture-description-of-dsp48e1)
- [Blog 3](https://abhishekanand.hashnode.dev/gsoc-2023-week-5-and-6-incorporating-sequential-and-internal-combinational-delays)",True,3322,https://api.github.com/repos/f4pga/f4pga-arch-defs/pulls/3322,https://github.com/f4pga/f4pga-arch-defs/pull/3322,closed,1171,25,21,7,0,10,0,0,[],2023-07-10 03:49:38+00:00,2023-07-18 12:41:45+00:00,723127.0,"8 days, 8:52:07","[{'comment_id': 1260724752, 'comment_body': 'This can be removed if commented out.', 'comment_created': datetime.datetime(2023, 7, 12, 7, 27, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260725502, 'comment_body': 'Please remove commented code', 'comment_created': datetime.datetime(2023, 7, 12, 7, 28, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260726344, 'comment_body': 'Is this file needed? Was it commited by accident?', 'comment_created': datetime.datetime(2023, 7, 12, 7, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260727636, 'comment_body': ""I'm not sure if TIEOFF needs to be mentioned here"", 'comment_created': datetime.datetime(2023, 7, 12, 7, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728290, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728361, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728517, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260728645, 'comment_body': 'TIEOFF can probably be removed', 'comment_created': datetime.datetime(2023, 7, 12, 7, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260730713, 'comment_body': 'This for sure needs to be removed, there is no need for modeling TIEOFFs as tiles. In VPR we do not model them as sites and their outputs are connected to the synthetic global constant network.', 'comment_created': datetime.datetime(2023, 7, 12, 7, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1260843313, 'comment_body': 'By mistake! ', 'comment_created': datetime.datetime(2023, 7, 12, 8, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}]","[{'commit_sha': '6a2444bddd0baaa314e9d37018f6772b1042494e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd53631e6d4a94beec4de1436754f0c172feb2879', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b171edfbed81f2c7f29a8dc5b607f214cd8da1d9', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee731c10a444f4d789e5a2488488b0ddf0d76035', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31a1a487c3e38d61c01dc60c7d15efbd28a88be0', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9ed2f21933e9b861bf2a5112c8eed1214aee3d', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3770989b6f427cd30ad388c9a809852287590baf', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8
1456683505,Support for DSP,"**Google Summer of Code 2023**
DSP hard block integration in F4PGA
Mentor:  @mkurc-ant
Contributor: Abhishek Anand

- Added dsp_models.py to process DSP tiles while running fasm2bels on a target.
- Each DSP tile has 2 DSP48E1 sites. Features related to DSP_0 and DSP_1 sites are segregated which are then processed separately.
- For each DSP site, a bel(named DSP48E1) is instantiated with parameters that are set according to the set features in FASM.
- Sinks and sources are added to the bel by referring the user guide for DSP48E1.
- Cascaded inputs and outputs are added as unconnected ports since these are non-configurable.
- USE_MULT, SEL_PATTERN, USE_PATTERNDETECT are not found in the Segbits database. They are always set as their default value.
- For parameters like MASK, PATTERN, IS_ALUMODE_INVERTED, etc. , binary value is decoded from the given multibit features in the FASM.
- A cleanup function is added to be executed after completing the routing to remove redundant DSP sites.
- For each DSP site, we check if any of its outputs are in use. If not, the site is removed. 
- Some designs may use only cascaded outputs of a particular DSP site (e.g. an intermediate DSP site in a filter). To check if these outputs are in use, we need to see if the adjacent sites are using the corresponding cascaded inputs which in turn is determined by the features of that site.
- Depending on the site's Y-coordinate, it may be cascaded with the DSP site within the same tile or the tile adjacent to it.
- Fixed a bug in ioi_models.py. Earlier idelay features were being processed without checking if there were at least 1 feature to process.
- [GSoC proposal](https://abhishekanand.hashnode.dev/gsoc-2023-the-proposal-that-got-me-in)",True,91,https://api.github.com/repos/chipsalliance/f4pga-xc-fasm2bels/pulls/91,https://github.com/chipsalliance/f4pga-xc-fasm2bels/pull/91,closed,515,5,4,5,1,9,0,0,[],2023-07-31 16:58:41+00:00,2023-09-25 08:07:18+00:00,4806517.0,"55 days, 15:08:37","[{'comment_id': 1280649244, 'comment_body': 'These FASM features begin with `Z` which indicates that they correlate with a feature turned off. Are you sure that eg. when `ZMREG=1` the parameter `MREG` is also set to 1 ? This also applies to parameter to FASM mapping in https://github.com/f4pga/f4pga-arch-defs/blob/gsoc-2023-dsp/xilinx/xc7/techmap/cells_map.v#L11030-L11062', 'comment_created': datetime.datetime(2023, 8, 1, 13, 29, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1322569123, 'comment_body': 'Please remove those from the docstring. This is important!  Those are bit mappings that should be distributed only with the prjxray-database.', 'comment_created': datetime.datetime(2023, 9, 12, 7, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1322630764, 'comment_body': 'Do I need to remove all of it or just the bit mappings?', 'comment_created': datetime.datetime(2023, 9, 12, 8, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1322633312, 'comment_body': 'Fixed this. You were right, Z indicates opposite behaviour.', 'comment_created': datetime.datetime(2023, 9, 12, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1322965663, 'comment_body': 'Please remove just the bit mappings.', 'comment_created': datetime.datetime(2023, 9, 12, 12, 30, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1323004706, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 9, 12, 13, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1323117651, 'comment_body': 'I believe that these two cases share a lot of common code. Perhaps the common checks can be isolated into a function?\r\n\r\nI also find those big multi-line ifs awkward. You could implement that in a for loop even taking advantage of Python `for`/`else` construct', 'comment_created': datetime.datetime(2023, 9, 12, 14, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}, {'comment_id': 1327153054, 'comment_body': 'Fixed it. Can you have a look?', 'comment_created': datetime.datetime(2023, 9, 15, 11, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ad-astra-et-ultra', 'type': 'User'}, {'comment_id': 1328461751, 'comment_body': 'Alright, looks good.', 'comment_created': datetime.datetime(2023, 9, 18, 9, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mkurc-ant', 'type': 'User'}]","[{'commit_sha': '2d52196d49c3a4dd3fcdc5040aa6cfabacf84afa', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8615c9c05014e710e54ea0426d383d2108bfa42e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7bbaa4187dd4bd4ad671967dc35a3a86149b15a', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe6c376ab115342a0f4c3bd8744988e4242d342a', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fac97dcaafe5992a7128299bc97841c1da3d167e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8
1523535274,Updated techmaps for dsp48e1,"**Google Summer of Code 2023**
DSP hard block integration in F4PGA
Mentor:  @mkurc-ant
Contributor: Abhishek Anand

- Added a Vivado target for the DSP test.
- Now a round trip test can be performed to check the correctness of the bitstream produced by F4PGA by cross checking it with the one generated by Vivado.
- The Vivado target depends on the dsp48e1 support in fasm2bels. This [PR](https://github.com/chipsalliance/f4pga-xc-fasm2bels/pull/91) needs to be merged in fasm2bels and third party dependencies need to be updated for the CI to complete successfully.
- Modified techmaps to produce correct Z-features.
- [GSoC proposal](https://abhishekanand.hashnode.dev/gsoc-2023-the-proposal-that-got-me-in)",True,3411,https://api.github.com/repos/f4pga/f4pga-arch-defs/pulls/3411,https://github.com/f4pga/f4pga-arch-defs/pull/3411,closed,86,78,7,2,1,0,0,0,[],2023-09-20 17:54:24+00:00,2023-09-25 14:26:37+00:00,419533.0,"4 days, 20:32:13",[],"[{'commit_sha': 'eda62e0e5f37291237f55ed0346e184c01416371', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '868162720835ef3f195ac5c45eb083415b4ce1a1', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8
1389887621,WIP: Experimental support for DSP (Do not merge),,False,3284,https://api.github.com/repos/f4pga/f4pga-arch-defs/pulls/3284,https://github.com/f4pga/f4pga-arch-defs/pull/3284,open,5207,27,54,8,0,0,0,0,[],2023-06-13 05:37:32+00:00,,0.0,,[],"[{'commit_sha': '6af8c995a50e5eed3e86663ee1fffbcf79ff43ab', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02daac63bfc5205e88b3b8f8a66c9688ca798ba7', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c2488793e554fefe2112bb8f346909260349985', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83036216cbc121730cbeeaf9259279821970226d', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de5533190b9d9e18ff455e5b3d9de716cc1282f3', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0a7ae2507d816095bbf9b6d66ff7efa116ac226', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0094c77b4b522bd69de76b4084816fe49ec8230', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d4bd0b025828a9e33530bf2fff4195ebe36775e', 'committer_username': 'ad-astra-et-ultra', 'committer_name': 'ABHISHEK ANAND', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 10, 15, 0, 54, tzinfo=datetime.timezone.utc)}]",ABHISHEK ANAND,92263062,,User,,11,,9,8

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
111006976,f4pga-arch-defs,f4pga/f4pga-arch-defs,Jupyter Notebook,111,267,25,65,5222,364,19,63,"[{'id': 1523535274, 'number': 3411, 'closed': datetime.datetime(2023, 9, 25, 14, 26, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 20, 17, 54, 24, tzinfo=datetime.timezone.utc), 'time_taken': 419533.0, 'time_delta': '4 days, 20:32:13', 'additions': 86, 'deletions': 78, 'state': 'closed'}, {'id': 1426722631, 'number': 3322, 'closed': datetime.datetime(2023, 7, 18, 12, 41, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 3, 49, 38, tzinfo=datetime.timezone.utc), 'time_taken': 723127.0, 'time_delta': '8 days, 8:52:07', 'additions': 1171, 'deletions': 25, 'state': 'closed'}, {'id': 1389887621, 'number': 3284, 'closed': None, 'created': datetime.datetime(2023, 6, 13, 5, 37, 32, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 5207, 'deletions': 27, 'state': 'open'}, {'id': 1389185060, 'number': 3283, 'closed': datetime.datetime(2023, 6, 13, 5, 39, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 12, 18, 11, 15, tzinfo=datetime.timezone.utc), 'time_taken': 41321.0, 'time_delta': '11:28:41', 'additions': 583, 'deletions': 33, 'state': 'closed'}]"
265584113,f4pga-xc-fasm2bels,chipsalliance/f4pga-xc-fasm2bels,Verilog,12,10,11,20,686,12,2,2,"[{'id': 1456683505, 'number': 91, 'closed': datetime.datetime(2023, 9, 25, 8, 7, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 16, 58, 41, tzinfo=datetime.timezone.utc), 'time_taken': 4806517.0, 'time_delta': '55 days, 15:08:37', 'additions': 515, 'deletions': 5, 'state': 'closed'}]"
