pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
400382150,Update Location Wizard: First page,"Location wizard: making new class MakeStaticText which is used for creating non-editable database directory, and removing Browse button",True,493,https://api.github.com/repos/OSGeo/grass/pulls/493,https://github.com/OSGeo/grass/pull/493,closed,12,22,1,3,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-04-07 16:42:30+00:00,2020-04-09 15:51:32+00:00,169742.0,"1 day, 23:09:02","[{'comment_id': 404978311, 'comment_body': ""size should be probably -1, -1.\r\n\r\nThis entire function is not really needed, but to keep this consistent with the other code, let's keep it now. Probably should be simplified in the future."", 'comment_created': datetime.datetime(2020, 4, 7, 17, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 404978838, 'comment_body': 'Bla?', 'comment_created': datetime.datetime(2020, 4, 7, 17, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 404979331, 'comment_body': 'Probably would be good to remove OnBrowse function as well.', 'comment_created': datetime.datetime(2020, 4, 7, 17, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 405148303, 'comment_body': 'Seems to be a typo. @lindakladivova If so please remove (in a new commit)', 'comment_created': datetime.datetime(2020, 4, 7, 22, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': '85ce4ce2661082b8e8b773def06b014537775b1b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a08113a9e23d4ad233c1a9569ba41d478a964ea7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44dcd1990a00def0c1783de8cadbc9f69565bed0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
421002122,Wx gui location wizard map picture removed,"Before:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82493953-710ebe00-9aae-11ea-8528-97f9d500d05f.png)

After:
![Screenshot from 2020-05-20 15-29-13](https://user-images.githubusercontent.com/49241681/82494047-97345e00-9aae-11ea-8130-4af38f689494.png)

The file and matches have been finding using: _tree -f | grep loc_wizard_qgis.png_  and _grep -IrnE loc_wizard_qgis.png_ . No other matches.

",True,657,https://api.github.com/repos/OSGeo/grass/pulls/657,https://github.com/OSGeo/grass/pull/657,closed,4,12,2,2,3,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-20 20:28:05+00:00,2020-05-30 01:37:04+00:00,796139.0,"9 days, 5:08:59",[],"[{'commit_sha': 'd4221be6871a442619c47a0b9e2961f7870151f2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '079246403e69b2a92ecfb1dc6c8a2d62e0d05948', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
419661176,wxGUI location wizard: First page,"Location wizard location name marked as required and the Project Location renamed to Location Name.

> @lindakladivova Please provide screenshots before and after. It's self-explanatory description :-)

Sorry I do not have before. I have the one after :-) :
![Screenshot from 2020-05-18 15-28-09](https://user-images.githubusercontent.com/49241681/82257184-388baa80-991d-11ea-8fc2-20fdf30dd7bd.png)




> I would say the asterisk should go right after the label. Since there is GridBagSizer used, you may need to shift the edit fields one column to the right to get the asterisk there so that everything is aligned. Alternatively, the edit fields could be moved below the label like we have in forms.

Here's the screenshot of the second version:
![Screenshot from 2020-05-19 10-06-21](https://user-images.githubusercontent.com/49241681/82344664-f2d0ef80-99b9-11ea-81d8-bef65cfba872.png)

Here's the screenshot of the third version:
(The layout was a bit changed and also the Description was marked as optional. GIS data directory is still non-editable but made through wx.TE_READONLY method.)
![Screenshot from 2020-05-19 15-04-43](https://user-images.githubusercontent.com/49241681/82373246-edd46600-99e2-11ea-8b23-3b165ee8f4de.png)

Here's the screenshot of the fourth version:
![Screenshot from 2020-05-20 11-08-53](https://user-images.githubusercontent.com/49241681/82470901-8f16f700-9a8b-11ea-8f33-45be60470ca6.png)
I more like the TextCtrl than StaticText for Location Database. I find it more logical because the window is editable. What do you think?

The fifth version with StaticText:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82476212-4e22e080-9a93-11ea-8662-c4f79d700415.png)


",True,646,https://api.github.com/repos/OSGeo/grass/pulls/646,https://github.com/OSGeo/grass/pull/646,closed,56,54,1,11,6,6,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-18 18:12:40+00:00,2020-05-23 01:31:19+00:00,371919.0,"4 days, 7:18:39","[{'comment_id': 426991319, 'comment_body': ""I don't think the required_txt needs to be attribute of the class (remove self)."", 'comment_created': datetime.datetime(2020, 5, 19, 2, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427716943, 'comment_body': ""As I mentioned, don't use self here if it's used only locally within the scope of the method, if you make it an attribute of the class it looks like it's being used elsewhere too, which is confusing."", 'comment_created': datetime.datetime(2020, 5, 20, 3, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427717110, 'comment_body': 'Make it translatable: _(""optional"")', 'comment_created': datetime.datetime(2020, 5, 20, 3, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427718770, 'comment_body': ""I would recommend here using system colors instead of 'gray': `wx.SystemSettings.GetColour(wx.SYS_COLOUR_GRAYTEXT)` because people have different window styles."", 'comment_created': datetime.datetime(2020, 5, 20, 3, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427719883, 'comment_body': 'If you look at the code checks, the flake8 code quality check is failing on your PR because of spaces around =. It should be:\r\n`..., style=wx.TE_READONLY | wx.TRANSPARENT_WINDOW`\r\n\r\nsee [PEP8](https://www.python.org/dev/peps/pep-0008/) for reference.\r\n', 'comment_created': datetime.datetime(2020, 5, 20, 3, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 428231974, 'comment_body': 'Just removing the widgets is not enough, there are probably used somewhere.', 'comment_created': datetime.datetime(2020, 5, 20, 18, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '9394fd700c5cda4d3aa4b7cafdde558f7d6081bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2f5614c100d5b3e6498aed5d4211f9cd12e49a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae02d7b57df87a72814e1f216ea04a7584cf6211', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2bec1fb13780cbb7fea5e530d68e6d22667ccea5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0118b6cc0a0a1d4dab6b508d9880a9b3344873a9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c9d1d2c34952c66184b803cc0b7ddabf4f6e988c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a76f17b1d1d1017d19c71f12fd26cd8f125d1281', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c1e86fc1c271c84cf5debb7830097d17c21aae69', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5cad7605d97922f4fad69adf6c807f279cd05a8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a548b14a2fe5b960c0f7a3dd87740c012e3c86f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8b3851be6697a2f6fbe1fdc4e8136c9c166cbe97', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422453525,wxGUI location wizard: EPSG page,"Path to usr/share/proj/epsg was removed. Search and EPSG code text inputs were merged into one search input. Link to epsg.io was added. The layout was adapted using several box sizers instead of grid sizer.

Before: 
![Screenshot from 2020-05-24 13-46-49](https://user-images.githubusercontent.com/49241681/82762159-0ff42c80-9dc5-11ea-8130-4bd7097a51f0.png)

Version 1:
![Screenshot from 2020-06-05 07-26-31](https://user-images.githubusercontent.com/49241681/83877497-ee872f00-a73a-11ea-9386-ce5ca8640255.png)

The motion of events is following (unincorporated yet in Version 1):
- searching in a list on the fly
- choose automatically the first row and permit ""next"" button
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

Version 2:
![Screenshot from 2020-06-06 05-24-32](https://user-images.githubusercontent.com/49241681/83942387-39647d80-a7f3-11ea-8dc0-33b0da88051f.png)

Already incorporated:
- searching in a list on the fly
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

I have a problem that when selecting epsg code from a table, it sometimes happens that neither the query string nor the final epsg code mentioned in the summary page changes. Also I am not sure how to incorporate choosing the automatically the first row in the list.

Version 3 (Layout enhancement):
![Screenshot from 2020-06-07 05-10-50](https://user-images.githubusercontent.com/49241681/83966145-bf96c780-a8b8-11ea-9bcf-a6fb1e448bf9.png)


",True,670,https://api.github.com/repos/OSGeo/grass/pulls/670,https://github.com/OSGeo/grass/pull/670,closed,150,126,1,6,4,9,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-24 18:47:46+00:00,2020-06-13 02:35:08+00:00,1669642.0,"19 days, 7:47:22","[{'comment_id': 436317921, 'comment_body': 'this should be size=(-1, 30)', 'comment_created': datetime.datetime(2020, 6, 7, 2, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436317947, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 6, 7, 2, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318061, 'comment_body': 'the label should stay the same all the time, use just ""epsg.io"".', 'comment_created': datetime.datetime(2020, 6, 7, 2, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318094, 'comment_body': 'Initial url should be ""https://epsg.io/""', 'comment_created': datetime.datetime(2020, 6, 7, 2, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318128, 'comment_body': 'no new line needed', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318178, 'comment_body': 'remove SetLabel, we want the label to be the same all the time, just the link changes', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318236, 'comment_body': 'no str() needed\r\n\r\nalso, check if there is anything in the value, if not, the link should just be https://epsg.io, no query part', 'comment_created': datetime.datetime(2020, 6, 7, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 439612750, 'comment_body': 'What about ```https://epsg.io/{0}``` directly ?', 'comment_created': datetime.datetime(2020, 6, 12, 19, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439614110, 'comment_body': 'Hm, this will work for EPSG (like ""5514"") but for a keyword (like ""krovak""). Marking this comment as not relevant.', 'comment_created': datetime.datetime(2020, 6, 12, 19, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': 'ed10bc86a313408c3356b719bdd2f5ebaf4b81e2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7686375d5b2cffb8e2010654cbc29a8d8041d993', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7fd081088b6289faf6a7b5ef4c2693eac27f4d3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f66f986a0150ea336f5830d279509872ba7552f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b08db139d172d59f9e54493133fe8003a6ef7d5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a473825f635446a8c9e302ef861cd093a88d9676', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
437025601,wxGUI loc wizard: Improve new location's CRS method selection page,"In the third commit I have a issue after confirmation of WKT Summary page:
![Screenshot from 2020-06-20 15-10-54](https://user-images.githubusercontent.com/49241681/85210757-48295500-b308-11ea-9115-e89efc436424.png)
Still wants to open a WKT file but I am not able to figure out where is the core of this problem.",True,721,https://api.github.com/repos/OSGeo/grass/pulls/721,https://github.com/OSGeo/grass/pull/721,closed,55,83,1,5,1,11,1,0,[{'name': 'gsoc'}],2020-06-19 10:36:12+00:00,2020-06-23 02:32:50+00:00,316598.0,"3 days, 15:56:38","[{'comment_id': 442831461, 'comment_body': 'I was suggestion dropping ""simple methods"" altogether and using ""Select Coordinate Reference System (CRS)"" as the title of the page.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442833874, 'comment_body': 'Use ""Additional methods"", definitely not Advanced additional methods.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838254, 'comment_body': 'name it something like wktstring', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838351, 'comment_body': 'WHITESPACE!', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442840103, 'comment_body': 'To keep things consistent with the rest, the WKTPage doesn\'t change much (except for the layout). g.proj is called in Summary page:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=self.parent.wktpage.wktfile, **extra_opts)\r\n```\r\n\r\nso you need to adjust the code here. So OnPageChanging should stay similar to what was there before. The RunCommand in Summary page should look something like this:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=""-"", stdin=self.parent.wktpage.wktstring, **extra_opts)\r\n```\r\n(not tested)', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443149825, 'comment_body': 'Maybe ""matches WKT string"" would be better.\r\nMore importantly, the string is long, so you need to change the widget to enable scrolling, it should be similar to panelProj4string in SummaryPage.', 'comment_created': datetime.datetime(2020, 6, 20, 18, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176094, 'comment_body': ""This should still be called OnText, since it's event handler. If you name a function GetWKTString, I would expect it to return a string, which is not the case here."", 'comment_created': datetime.datetime(2020, 6, 21, 2, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176259, 'comment_body': '""Select CRS from a list"" should be the title of the EPSGPage as well.', 'comment_created': datetime.datetime(2020, 6, 21, 2, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176884, 'comment_body': ""There needs to be a condition, you are trying to prevent from going to next page if there is no text (previously - if the file doesn't exist). Ideally it would check the WKT string is valid, but that's very difficult, so we will just check for any string. It's technically not needed because you already deal with that by disabling the next button, but let's keep it there.\r\n\r\n I was surprised your current code works since you don't have any condition there (so it would prevent the page from switching every time), but that's because of the event.Skip() - you need to remove it from there. Please also remove event Skip from GeoreferencedFilePage (the same function), it's the same case, it shouldn't be there."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176975, 'comment_body': ""The error you are getting comes from this function, it expects file not string. I created a separate PR #723, so you don't need to deal with that."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443245131, 'comment_body': 'simply just `if event.GetDirection() and not self.wktstring.strip():` should suffice.', 'comment_created': datetime.datetime(2020, 6, 21, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ee7ad16e86be3cd805b9be4527ab552c18abddba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36b93e39b6fcab71cb6433f894894d5cfa23abe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55173897914c5312c35a4a2d3ce5929cfa758910', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1110496ef80cbd868cb3b08440784a3b74425f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cc46ff3a803ad0f7a2eccb3843f926e8d848a1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
433804729,wxgui: Create grassdata automatically on the first GUI startup ,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). If nothing is found, GRASS GIS (GUI) should automatically create directory named grassdata as a subdirectory of a platfrom-dependent directory. This platfrom-dependent directory would be:

- $HOME (os.path.expanduser('~')) on Linux and the like,
- User's Documents on Windows (see dac6d4a for code trying to identify that dir),
 - One of the above on macOS - macOS users, please share your ideas.

If that fails (GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases) it should use a temporary directory (/tmp/... etc.) as a fallback. 
The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. ",True,705,https://api.github.com/repos/OSGeo/grass/pulls/705,https://github.com/OSGeo/grass/pull/705,closed,56,1,2,8,0,32,1,0,[{'name': 'gsoc'}],2020-06-12 17:31:34+00:00,2020-06-23 02:48:29+00:00,897415.0,"10 days, 9:16:55","[{'comment_id': 439719965, 'comment_body': 'Why _() in the path? Localized Windows should understand Documents.', 'comment_created': datetime.datetime(2020, 6, 13, 8, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439784274, 'comment_body': 'This goes against ""If even [the temporary directory fallback] fails, GRASS should not fail, but simply let the user make that choice which is the current behavior."" from #682.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784342, 'comment_body': 'This should be created only once it is really needed. (Otherwise, the tmp dir will be created and not deleted every time thing function runs.)', 'comment_created': datetime.datetime(2020, 6, 14, 2, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784563, 'comment_body': 'The `path` is already set at this point even when exception was raised, so your line `if path is None:` will have path which is not None and thus the functions will just return this path.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784774, 'comment_body': 'We may decide to refine it and give more info to the user through GUI, but at this point and in this function, there is no need to report the failure in any way. This function has a fallback which is the tmp dir and the original calling code has its own fallback solution. ', 'comment_created': datetime.datetime(2020, 6, 14, 2, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784900, 'comment_body': 'This comes from dac6d4add511cb47d3329d2c06fdb441b75822f4 - see the comment there. I would not bother with that for this function and just go with `Documents` only.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784998, 'comment_body': 'This still should be there. (#682:  ""If even [the temporary directory fallback] fails, [...] simply let the user make that choice which is the current behavior."")', 'comment_created': datetime.datetime(2020, 6, 14, 2, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785212, 'comment_body': 'possible -> standard, fix wording of ""directory to what is""', 'comment_created': datetime.datetime(2020, 6, 14, 2, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785373, 'comment_body': 'Something like ""...in the standard location according to the platform."" And also mention the fallback.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441941134, 'comment_body': 'Please remove this extra change. Also in PEP8, there is only one empty line between methods.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942469, 'comment_body': 'Based on what the function does and what the context is, the comment should be ""...try to create...""', 'comment_created': datetime.datetime(2020, 6, 18, 3, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942745, 'comment_body': 'What the word ""independent"" refers to here?', 'comment_created': datetime.datetime(2020, 6, 18, 3, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441945594, 'comment_body': 'As I said, here in this new function, I would not bother with translations here as this is more future oriented and we hope that every new system will be set in a way that there is ""Documents"". So, I\'m saying, delete the `""candidates.append(os.path.join(home, _(""Documents""), ""grassdata""))""` part.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441946904, 'comment_body': ""Here, you don't have to assign to a variable here, just return candidate right away."", 'comment_created': datetime.datetime(2020, 6, 18, 3, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949253, 'comment_body': 'According to PEP8, `t` from `tempfile` and `""` from `""grassdata...` should be aligned. Another option is to use Black style which puts this into 4 lines if it is longer than 88 characters:\r\n\r\n```\r\ntmp = os.path.join(\r\n    tempfile.gettempdir(),\r\n    ""grassdata_{}"".format(getpass.getuser())\r\n) \r\n```\r\n\r\nYou can run Flake8 on any file you edit to see these things. Unfortunately, you will get a lot of warning and errors from other lines you did not edit and you need to ignore those (this will get better in the future as we make more files PEP8, Flake8, and Black compliant).', 'comment_created': datetime.datetime(2020, 6, 18, 3, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949674, 'comment_body': 'Again, just return here is enough.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949853, 'comment_body': 'Only return is needed here, no assignment.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949974, 'comment_body': 'Control -> Check', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441950905, 'comment_body': '`create_possible_database_path()` -> `create_database_directory()`\r\n\r\nThe GRASS terminology here is all over the place here (grassdata, gisbase, ...), but ""possible"" does not make sense here and we are not creating a path, but the actual directory, so that\'s way ""...database_directory"".', 'comment_created': datetime.datetime(2020, 6, 18, 3, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442593732, 'comment_body': ""Since the true branch of the if statement has return, you don't need else here and can move the try-except block one level left. This is does not change anything, but is makes the code simpler and the same logic is already used above: The good case returns, so the other case is just whatever follows after that."", 'comment_created': datetime.datetime(2020, 6, 19, 2, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442594169, 'comment_body': 'Simple `candidate = os.path...` will suffice here in both cases. It is either or and at one point you have only one candidate. This removes the need for the loop over the candidates list below.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443089786, 'comment_body': 'The ""case independent"" does not make sense here. Simplify further, by merging the two comments together and saying something like ""Determine the standard path according to a platform.""\r\n\r\nWhile you are at it, you can drop the ""candidate"" terminology from the variable name too. What candidate refers to here? It really makes sense only in the other function. Simple `path` will be probably more descriptive here. And going further, the `tmp` variable can be called `path` too because in a way it is no different from the `path` before, it replaces it for all intents and purposes.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443090593, 'comment_body': 'The intended behavior may not be clear from the code, so add another comment saying something like ""The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. The positive outcome is that another GRASS instance will find the data created by the first one which is desired in the ""try out GRASS"" use case we are aiming towards."" See the original ticket for alternative formulation of this.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091183, 'comment_body': 'Say something like ""Create a temporary ""grassdata"" directory if GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases.""\r\n\r\n(Note that a line should be 88 characters or less.)', 'comment_created': datetime.datetime(2020, 6, 20, 1, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091474, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))\r\n', 'comment_created': datetime.datetime(2020, 6, 20, 1, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091580, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091600, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091611, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091621, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091633, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091641, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443148404, 'comment_body': 'Hopefully the last change, sorry I missed this before: there are other platforms (see https://stackoverflow.com/questions/446209/possible-values-from-sys-platform) so we should probably have it more like this (and treat windows as special case):\r\n\r\n```\r\nif sys.platform == \'win32\':\r\n    path = os.path.join(home, ""Documents"", ""grassdata"")\r\nelse:\r\n    path = os.path.join(home, ""grassdata"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 17, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '39bc6b7cc5e89da49325bb6bd78b02454376f37e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7499fc250e9c5c1004b7250e03d6bd437c1a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '987cfa3b0b5a4383407b74178e1e1f4c3c7c2105', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee63c49feac9b7666af2819b1048e9ea86b4267b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef1e7ccf3e4fb145a68b8fd1295d76baa1c300d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2a8be1c28ba993c5ff8a76299ef0cdf2a8f997f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2b23ed6717f52b2abc98534df25739be3e589e25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '711436a1057b738d040370a9111a0f44c8433187', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
437025601,wxGUI loc wizard: Improve new location's CRS method selection page,"In the third commit I have a issue after confirmation of WKT Summary page:
![Screenshot from 2020-06-20 15-10-54](https://user-images.githubusercontent.com/49241681/85210757-48295500-b308-11ea-9115-e89efc436424.png)
Still wants to open a WKT file but I am not able to figure out where is the core of this problem.",True,721,https://api.github.com/repos/OSGeo/grass/pulls/721,https://github.com/OSGeo/grass/pull/721,closed,55,83,1,5,1,11,1,0,[{'name': 'gsoc'}],2020-06-19 10:36:12+00:00,2020-06-23 02:32:50+00:00,316598.0,"3 days, 15:56:38","[{'comment_id': 442831461, 'comment_body': 'I was suggestion dropping ""simple methods"" altogether and using ""Select Coordinate Reference System (CRS)"" as the title of the page.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442833874, 'comment_body': 'Use ""Additional methods"", definitely not Advanced additional methods.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838254, 'comment_body': 'name it something like wktstring', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838351, 'comment_body': 'WHITESPACE!', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442840103, 'comment_body': 'To keep things consistent with the rest, the WKTPage doesn\'t change much (except for the layout). g.proj is called in Summary page:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=self.parent.wktpage.wktfile, **extra_opts)\r\n```\r\n\r\nso you need to adjust the code here. So OnPageChanging should stay similar to what was there before. The RunCommand in Summary page should look something like this:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=""-"", stdin=self.parent.wktpage.wktstring, **extra_opts)\r\n```\r\n(not tested)', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443149825, 'comment_body': 'Maybe ""matches WKT string"" would be better.\r\nMore importantly, the string is long, so you need to change the widget to enable scrolling, it should be similar to panelProj4string in SummaryPage.', 'comment_created': datetime.datetime(2020, 6, 20, 18, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176094, 'comment_body': ""This should still be called OnText, since it's event handler. If you name a function GetWKTString, I would expect it to return a string, which is not the case here."", 'comment_created': datetime.datetime(2020, 6, 21, 2, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176259, 'comment_body': '""Select CRS from a list"" should be the title of the EPSGPage as well.', 'comment_created': datetime.datetime(2020, 6, 21, 2, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176884, 'comment_body': ""There needs to be a condition, you are trying to prevent from going to next page if there is no text (previously - if the file doesn't exist). Ideally it would check the WKT string is valid, but that's very difficult, so we will just check for any string. It's technically not needed because you already deal with that by disabling the next button, but let's keep it there.\r\n\r\n I was surprised your current code works since you don't have any condition there (so it would prevent the page from switching every time), but that's because of the event.Skip() - you need to remove it from there. Please also remove event Skip from GeoreferencedFilePage (the same function), it's the same case, it shouldn't be there."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176975, 'comment_body': ""The error you are getting comes from this function, it expects file not string. I created a separate PR #723, so you don't need to deal with that."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443245131, 'comment_body': 'simply just `if event.GetDirection() and not self.wktstring.strip():` should suffice.', 'comment_created': datetime.datetime(2020, 6, 21, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ee7ad16e86be3cd805b9be4527ab552c18abddba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36b93e39b6fcab71cb6433f894894d5cfa23abe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55173897914c5312c35a4a2d3ce5929cfa758910', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1110496ef80cbd868cb3b08440784a3b74425f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cc46ff3a803ad0f7a2eccb3843f926e8d848a1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438030371,wxGUI loc wizard: Correct errors according to flake 8 and add some description,"wxGUI/Location Wizard: Corrected errors according to flake8 (errors E402,E821,E722 ignored), added some description.",True,728,https://api.github.com/repos/OSGeo/grass/pulls/728,https://github.com/OSGeo/grass/pull/728,closed,80,85,1,3,0,1,1,0,[{'name': 'gsoc'}],2020-06-22 15:47:26+00:00,2020-06-25 02:48:44+00:00,212478.0,"2 days, 11:01:18","[{'comment_id': 443925318, 'comment_body': ""I don't see a reason why this code should be kept there and there is no comment saying that either, so I would say just delete that."", 'comment_created': datetime.datetime(2020, 6, 23, 2, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '56b04dd3eac50831ef5b9991761c5ab3f87f925a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0b6e17d9d7c67f0293401f85a4b430546fd3fdbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '23dc09e6d3af4f7490abb23cc3637b965ff61643', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
440097311,wxGUI: IndexError after right click on 'GRASS Locations in...' in the Data tab,wxGUI/datacatalog: Corrected index error after right click on 'GRASS Locations in..' tab in the data tab.,True,736,https://api.github.com/repos/OSGeo/grass/pulls/736,https://github.com/OSGeo/grass/pull/736,closed,3,1,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-06-25 15:29:42+00:00,2020-06-26 01:39:37+00:00,36595.0,10:09:55,[],"[{'commit_sha': 'e1dfc8dd5124c25a7bf40a36646b15375dc3a126', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438788813,wxGUI: Add new mapset action to data catalog,"

",True,731,https://api.github.com/repos/OSGeo/grass/pulls/731,https://github.com/OSGeo/grass/pull/731,closed,179,77,5,9,1,41,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-06-23 20:00:35+00:00,2020-07-01 01:56:12+00:00,626137.0,"7 days, 5:55:37","[{'comment_id': 444617948, 'comment_body': 'We do not need the help handler here', 'comment_created': datetime.datetime(2020, 6, 24, 3, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618181, 'comment_body': 'This function would be basically just reduced to calling create_mapset.', 'comment_created': datetime.datetime(2020, 6, 24, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618420, 'comment_body': 'Should be dealt with by the validator inside the dialog', 'comment_created': datetime.datetime(2020, 6, 24, 3, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619018, 'comment_body': ""there is no self.gisdbase, you can get it e.g. as `gisenv()['GISDBASE']`"", 'comment_created': datetime.datetime(2020, 6, 24, 3, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619138, 'comment_body': 'delete, copied from startup screen. Instead you will need to add the mapset node into the tree, see e.g. InsertLayer() in tree.py how it is done for layers (it should be simpler for mapsets).', 'comment_created': datetime.datetime(2020, 6, 24, 3, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444620936, 'comment_body': 'not used, it is actually causing error when right clicking on current location, just remove it', 'comment_created': datetime.datetime(2020, 6, 24, 3, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445590258, 'comment_body': 'This is not correct, please try to run the code line by line in your mind or on paper and see what the problem is.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445592197, 'comment_body': 'location_node is a of type class DictNode (treemodel.py), not string. Why to pass twice mapset?\r\nYou need to pass location node (probably self.selected_location[0] should work). Then most of the code in InsertMapset is to be removed.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622162, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622391, 'comment_body': 'no SetSessionMapset needed', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445624092, 'comment_body': ""Don't use self if you don't need the variable outside of the method.\r\n\r\nThis creates mapset in your current location, not in the selected location."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628447, 'comment_body': ""It's a good practice to make the exception more specific if you can. For example, put it only around create_mapset and if  you can see what type of exception it throws, it's better to limit it too."", 'comment_created': datetime.datetime(2020, 6, 25, 15, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628781, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445629371, 'comment_body': 'see comment about self above', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631393, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 6, 25, 15, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631685, 'comment_body': 'remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632312, 'comment_body': 'if function is called checkMapsetExists, you expect to return True if it exists', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632745, 'comment_body': 'missing space after dot, remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633216, 'comment_body': 'newline missing', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633557, 'comment_body': 'be more specific about the exception', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446495515, 'comment_body': 'Not sure how to simplify InsertMapset function. And not sure what parameter name means. I think it is necessary to include it but in this case it does not make much sense.', 'comment_created': datetime.datetime(2020, 6, 27, 7, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446495740, 'comment_body': 'Could you give me some example?', 'comment_created': datetime.datetime(2020, 6, 27, 7, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446561721, 'comment_body': ""This function doesn't need to return T/F, just return."", 'comment_created': datetime.datetime(2020, 6, 27, 19, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561798, 'comment_body': 'Seems this is never called since you return True before that.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561843, 'comment_body': 'Just to keep it short, Create mapset is sufficient.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562136, 'comment_body': ""similar here, I don't think you need to return T/F here"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562183, 'comment_body': 'add the name in the comment at beginning of the file', 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562312, 'comment_body': 'check indentation here', 'comment_created': datetime.datetime(2020, 6, 27, 20, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562655, 'comment_body': 'use UnicodeEncodeError', 'comment_created': datetime.datetime(2020, 6, 27, 20, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563315, 'comment_body': ""parent is parent node (here location node), label is mapset name and type is type of node ('mapset' here)"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563362, 'comment_body': ""you don't need this"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564563, 'comment_body': ""For type of error, either just simply try it in a python shell if that's simple, or check Python documentation. You can use OSError here.\r\nPlease also read e.g. https://realpython.com/python-exceptions/ and https://realpython.com/the-most-diabolical-python-antipattern/ (ignore the logging part), that should clarify the syntax and motivation."", 'comment_created': datetime.datetime(2020, 6, 27, 20, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564874, 'comment_body': 'not sure why the selected_type, I think it should be selected_mapset instead, but I am not sure, please test that.', 'comment_created': datetime.datetime(2020, 6, 27, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446609514, 'comment_body': 'I have a problem with parameters ""name"" and ""mapset_name"":\r\n            self.InsertMapset(name=mapset,\r\n                              location_node=self.selected_location[0],\r\n                              mapset_name=mapset)\r\nI know that it is not possible to have two same parameters but do not know what else to insert for \'name\' . \r\nNow I am in this situation. I can create and refresh mapset but the tree has another branch:\r\n![Screenshot from 2020-06-28 01-46-27](https://user-images.githubusercontent.com/49241681/85940380-967abd00-b8e1-11ea-8692-df5a19f68819.png)\r\nI spent several hours on that and do not know how to solve it. I is probably simple but I cannot figure that out. ', 'comment_created': datetime.datetime(2020, 6, 28, 6, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446681351, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681398, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681834, 'comment_body': 'I am not sure what\'s the problem here, it is pretty simple:\r\n\r\n```\r\n    def InsertMapset(self, name, location_node):\r\n        """"""Insert mapset into model and refresh tree""""""\r\n        self._model.AppendNode(parent=location_node, label=name,\r\n                               data=dict(type=\'mapset\', name=name))\r\n        self._model.SortChildren(location_node)\r\n        self.RefreshNode(location_node, recursive=True)\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 28, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681972, 'comment_body': 'remove print statements', 'comment_created': datetime.datetime(2020, 6, 28, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446682065, 'comment_body': 'please add yourself here', 'comment_created': datetime.datetime(2020, 6, 28, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447676056, 'comment_body': 'This is obviously not right, please fix again. Use format function.\r\n![Existing mapset path_020](https://user-images.githubusercontent.com/7494312/86130899-e197fa00-bab2-11ea-80c1-afd4cbdf1df2.png)\r\n\r\nIt should look like `Mapset <anna> already exists...`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447871860, 'comment_body': 'minor: missing space after comma', 'comment_created': datetime.datetime(2020, 6, 30, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'bf8685e929fad1561acde20bc7a86ccc355d3f16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37f2af25111531170375f9ba0edfd66f318651dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e47aa68425283557ce1d2687eb8d5629c18716b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '670fd0bf9927e70a026531c8d19549f31f34ab0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5057a270e6dfdb90b0221148b7620a050d720e43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d80f6cb42b05ec28ae867ea7c00ef1af97d1b3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feafc7378b2fe48cb674dbb0d0904aefced8edef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3feca0ac90b0c04b5b28287e99fdc15933c3ce9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e093c65c0af2b0a5e0847322ec5b4a6a5c4a68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
442754587,Make Data tab the default in GUI,wxGUI/frame: The Data tab and Layer tab were swapped so the Data tab is the first tab from the left and the default when the GUI opens.,True,756,https://api.github.com/repos/OSGeo/grass/pulls/756,https://github.com/OSGeo/grass/pull/756,closed,15,14,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-07-01 14:54:23+00:00,2020-07-02 02:00:23+00:00,39960.0,11:06:00,[],"[{'commit_sha': '41b941d56ae36900fb6c7c19c1a4d94c6c77636a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
442678497,wxGUI datacatalog: merge LocationMapTree and DataCatalogTree,Merged LocationMapTree and DataCatalogTree into new class DataCatalogTree inheriting from TreeView.,True,755,https://api.github.com/repos/OSGeo/grass/pulls/755,https://github.com/OSGeo/grass/pull/755,closed,34,53,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-07-01 12:51:13+00:00,2020-07-02 01:48:57+00:00,46664.0,12:57:44,[],"[{'commit_sha': 'c5796942809104ad50703d56a77805d11578cf96', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
444862259,Add rename and delete of Location and Mapset in Datacatalog,,True,771,https://api.github.com/repos/OSGeo/grass/pulls/771,https://github.com/OSGeo/grass/pull/771,closed,466,252,4,13,3,22,1,0,[{'name': 'gsoc'}],2020-07-06 15:54:11+00:00,2020-07-14 03:22:48+00:00,646117.0,"7 days, 11:28:37","[{'comment_id': 450493183, 'comment_body': 'Use already imported gscript', 'comment_created': datetime.datetime(2020, 7, 6, 21, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 450546405, 'comment_body': 'Does this work for you? When I enter any name, I always get `Location <definitevely-not-an-existing-directory> already exists in GRASS database`.', 'comment_created': datetime.datetime(2020, 7, 7, 0, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 450556671, 'comment_body': ""I'm afraid this is too much duplication with gis_set.py. Almost all lines of the function are the same as in gis_set.py. The simplest way to resolve that is creating `rename_mapset_interactively` function in startup.gutils. It should return the new name on success and `None` on failure. There will be some parameters related to the data such as the mapset to rename and some related to GUI such as parent (for the dialogs). The function will be then called here and in gis_set.py and surrounded by some things specific to each such as the ReloadTreeItems() call.\r\n\r\nThe same applies to the other functions as well.\r\n\r\n@landam @petrasovaa feel free to disagree here."", 'comment_created': datetime.datetime(2020, 7, 7, 1, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452582681, 'comment_body': 'The function is a good fit here. It is totally non-gui and fits with the other functions in this file.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452583010, 'comment_body': 'An empty line (without whitespace) is actually desired here. It separates a ""brief"" from a longer description of the function.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452583072, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452586519, 'comment_body': ""I don't know how mapset_exists() got here but both mapset_exists() and location_exists() should be in utils.py."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452588212, 'comment_body': 'Can you please take these new functions, paste them to a separate file, apply Black, and paste them back here? Perhaps check with Flake8 with default settings while you are at it. I see issues here and there, but this will likely just solve them automatically. ', 'comment_created': datetime.datetime(2020, 7, 10, 2, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452590711, 'comment_body': 'Why switch always? I though we talked about renaming not being trigger for switching. Switching is only needed when current mapset or current location are being renamed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452595425, 'comment_body': 'I would need you to document your intentions here in the code to understand what this is supposed to solve. Documentation and comments describing the intent are often useful even when writing the code as they force us to think about the code is supposed to do. For example, for a line `add_to_list(abc)` we should aim at answering questions such as: Why we are adding to the list? What is the intended outcome? What are the possible outcomes? What are the assumptions about `abc` or other things before `add_to_list()` is called?\r\n\r\nHow is this function different from `OnSwitchLocationMapset()`? Can there be only one function? Or two functions and one calling the other?', 'comment_created': datetime.datetime(2020, 7, 10, 2, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452596228, 'comment_body': 'Why to change the name?', 'comment_created': datetime.datetime(2020, 7, 10, 2, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452596895, 'comment_body': 'If you move this to where the old function was in the file, you will get a better view of your changes in the diff. (A more substantial change would be needed to create some better ordering of the functions here, so just keeping what is here seems to be the best course of action.)', 'comment_created': datetime.datetime(2020, 7, 10, 3, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452845918, 'comment_body': 'gisbase vs gisdbase see https://grass.osgeo.org/grass78/manuals/variables.html', 'comment_created': datetime.datetime(2020, 7, 10, 13, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452902456, 'comment_body': 'This looks like a good start. Now you can maybe make use of the option of calling `_SwitchLocationMapset()` with different parameters based on the the context. However, still:\r\n\r\n> I would need you to document your intentions here in the code to understand what this is supposed to solve. Documentation and comments describing the intent are often useful even when writing the code as they force us to think about the code is supposed to do. For example, for a line `add_to_list(abc)` we should aim at answering questions such as: Why we are adding to the list? What is the intended outcome? What are the possible outcomes? What are the assumptions about `abc` or other things before `add_to_list()` is called?', 'comment_created': datetime.datetime(2020, 7, 10, 15, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452923840, 'comment_body': 'Vashek, ok, I have a function OnRenameMapset that calls function rename_mapset_interactively and returns new mapset name. I think this is implemented right. \r\nBut in the case of ""if (self.selected_mapset[0].label == gisenv()[\'MAPSET\'])"" I need to switch my old mapset to the new one because my current mapset has been actually changed by renaming. But not literally so I need to self.selected_mapset[0].label = newmapset and then call the self._SwitchLocationMapset() function which can be generally the same for both functions OnRenameMapset, OnRenameLocation.\r\nWhere is the mistake in my thinking?\r\n', 'comment_created': datetime.datetime(2020, 7, 10, 15, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 453150525, 'comment_body': '...and _SwitchLocationMapset() uses the currently selected location/mapset to switch to. That all makes sense and should work. So, we have to continue to explore the actual behavior:\r\n\r\nWhen I test renaming the current mapset in GUI, it freezes, but first it shows an error message ""Error in g.mapset"" saying that the mapset ""old_name"" does not exist. So, it seems g.mapset is used for the switch and it requires the old mapset to exist.\r\n\r\nWhen I create the same situation in the command line and use g.mapset, I get the same behavior. Also I confirmed that g.mapset is used in ChangeLocationMapset() in datacatalog/frame.py to switch the mapset.\r\n\r\nThe conclusion here is that mapset cannot be changed when the current does not exist, or in our case, we cannot switch into the one with the new name after we renamed it as long as we are using g.mapset. g.mapset checks correctness of the state of the database connection, i.e., the current mapset, but we are of course breaking that correctness by our rename, so g.mapset is not the right tool for the task.\r\n\r\nTherefore, for this ticket, use the same check to prevent user from renaming the current location or mapset. This is something which could be added in the future, but it is a separate issue/additional feature.\r\n\r\nThe freeze with ""Error in g.mapset"" window is possibly a separate issue too, but something we should get back to (at least open an issue - please do that if you can reproduce it outside of your PR, e.g., by deleting a the mapset directory in a file manager right before you switch to it in the data catalog).', 'comment_created': datetime.datetime(2020, 7, 11, 3, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453257992, 'comment_body': 'When you return here, it never goes to `dlg.Destroy()` (which may leave some stuff behind).', 'comment_created': datetime.datetime(2020, 7, 12, 2, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258058, 'comment_body': 'Same as for mapset.', 'comment_created': datetime.datetime(2020, 7, 12, 2, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258159, 'comment_body': 'What happens when you press the *Cancel* button in the *Create new mapset* dialog?', 'comment_created': datetime.datetime(2020, 7, 12, 2, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258249, 'comment_body': '""consider using""', 'comment_created': datetime.datetime(2020, 7, 12, 2, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258465, 'comment_body': 'Is CreateMapset() defined?', 'comment_created': datetime.datetime(2020, 7, 12, 2, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453259084, 'comment_body': 'Since this is an event handler (`On...(self, event):` used as `...Bind(wx.EVT_..., self...`), nobody is checking any return value. That would make sense for function which is directly called and then you would have to consider if returning True/False or some other way is the best way to report success/failure (examples of this are `rename_location_interactively()` and `rename_location()`).\r\n\r\nThe code is wrong anyway because it is returning false on failure, but nothing on success (defaults to None in Python, but bad practice not being explicit reason being exactly this situation).\r\n\r\nJust remove the `return False/True`. This applies to the other event handlers (typically `On...(self, event):`)', 'comment_created': datetime.datetime(2020, 7, 12, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4ce08218319636c910f2d001b37ef1576e7bd668', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b73f8e911c718e9ec9971b9fffb44763608d5fad', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b6f7dc2da5ea0f60486c5d398cd39eb168c85e75', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b7225a7acbc106d7fb1aa1d7e9f7a08317cdd63f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd81467a0d97793f2c1c47e79dd47072a6acd1fd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c1f930eb16c9fc797704008d51597c0a653af6c4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9415c5e61405c31f0789ef9abaa37a65fd6db6a6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '72989fa8eee0703da8b9ae69ea09614c705a0443', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab3cbd9d992edc9f59f489392b70e2fd222acd49', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e9937e48f902b7a8eca60b3c412ffb5c7a543a4', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d942f7b5325e97a719bc9e96089d10cf0d07111', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b43ab33c9241b60d86e388b10a7ba55f58fe39b', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611d13337203103abfc6af4e04e5b084a65467b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
438788813,wxGUI: Add new mapset action to data catalog,"

",True,731,https://api.github.com/repos/OSGeo/grass/pulls/731,https://github.com/OSGeo/grass/pull/731,closed,179,77,5,9,1,41,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-06-23 20:00:35+00:00,2020-07-01 01:56:12+00:00,626137.0,"7 days, 5:55:37","[{'comment_id': 444617948, 'comment_body': 'We do not need the help handler here', 'comment_created': datetime.datetime(2020, 6, 24, 3, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618181, 'comment_body': 'This function would be basically just reduced to calling create_mapset.', 'comment_created': datetime.datetime(2020, 6, 24, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618420, 'comment_body': 'Should be dealt with by the validator inside the dialog', 'comment_created': datetime.datetime(2020, 6, 24, 3, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619018, 'comment_body': ""there is no self.gisdbase, you can get it e.g. as `gisenv()['GISDBASE']`"", 'comment_created': datetime.datetime(2020, 6, 24, 3, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619138, 'comment_body': 'delete, copied from startup screen. Instead you will need to add the mapset node into the tree, see e.g. InsertLayer() in tree.py how it is done for layers (it should be simpler for mapsets).', 'comment_created': datetime.datetime(2020, 6, 24, 3, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444620936, 'comment_body': 'not used, it is actually causing error when right clicking on current location, just remove it', 'comment_created': datetime.datetime(2020, 6, 24, 3, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445590258, 'comment_body': 'This is not correct, please try to run the code line by line in your mind or on paper and see what the problem is.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445592197, 'comment_body': 'location_node is a of type class DictNode (treemodel.py), not string. Why to pass twice mapset?\r\nYou need to pass location node (probably self.selected_location[0] should work). Then most of the code in InsertMapset is to be removed.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622162, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622391, 'comment_body': 'no SetSessionMapset needed', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445624092, 'comment_body': ""Don't use self if you don't need the variable outside of the method.\r\n\r\nThis creates mapset in your current location, not in the selected location."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628447, 'comment_body': ""It's a good practice to make the exception more specific if you can. For example, put it only around create_mapset and if  you can see what type of exception it throws, it's better to limit it too."", 'comment_created': datetime.datetime(2020, 6, 25, 15, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628781, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445629371, 'comment_body': 'see comment about self above', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631393, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 6, 25, 15, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631685, 'comment_body': 'remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632312, 'comment_body': 'if function is called checkMapsetExists, you expect to return True if it exists', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632745, 'comment_body': 'missing space after dot, remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633216, 'comment_body': 'newline missing', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633557, 'comment_body': 'be more specific about the exception', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446495515, 'comment_body': 'Not sure how to simplify InsertMapset function. And not sure what parameter name means. I think it is necessary to include it but in this case it does not make much sense.', 'comment_created': datetime.datetime(2020, 6, 27, 7, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446495740, 'comment_body': 'Could you give me some example?', 'comment_created': datetime.datetime(2020, 6, 27, 7, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446561721, 'comment_body': ""This function doesn't need to return T/F, just return."", 'comment_created': datetime.datetime(2020, 6, 27, 19, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561798, 'comment_body': 'Seems this is never called since you return True before that.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561843, 'comment_body': 'Just to keep it short, Create mapset is sufficient.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562136, 'comment_body': ""similar here, I don't think you need to return T/F here"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562183, 'comment_body': 'add the name in the comment at beginning of the file', 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562312, 'comment_body': 'check indentation here', 'comment_created': datetime.datetime(2020, 6, 27, 20, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562655, 'comment_body': 'use UnicodeEncodeError', 'comment_created': datetime.datetime(2020, 6, 27, 20, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563315, 'comment_body': ""parent is parent node (here location node), label is mapset name and type is type of node ('mapset' here)"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563362, 'comment_body': ""you don't need this"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564563, 'comment_body': ""For type of error, either just simply try it in a python shell if that's simple, or check Python documentation. You can use OSError here.\r\nPlease also read e.g. https://realpython.com/python-exceptions/ and https://realpython.com/the-most-diabolical-python-antipattern/ (ignore the logging part), that should clarify the syntax and motivation."", 'comment_created': datetime.datetime(2020, 6, 27, 20, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564874, 'comment_body': 'not sure why the selected_type, I think it should be selected_mapset instead, but I am not sure, please test that.', 'comment_created': datetime.datetime(2020, 6, 27, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446609514, 'comment_body': 'I have a problem with parameters ""name"" and ""mapset_name"":\r\n            self.InsertMapset(name=mapset,\r\n                              location_node=self.selected_location[0],\r\n                              mapset_name=mapset)\r\nI know that it is not possible to have two same parameters but do not know what else to insert for \'name\' . \r\nNow I am in this situation. I can create and refresh mapset but the tree has another branch:\r\n![Screenshot from 2020-06-28 01-46-27](https://user-images.githubusercontent.com/49241681/85940380-967abd00-b8e1-11ea-8692-df5a19f68819.png)\r\nI spent several hours on that and do not know how to solve it. I is probably simple but I cannot figure that out. ', 'comment_created': datetime.datetime(2020, 6, 28, 6, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446681351, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681398, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681834, 'comment_body': 'I am not sure what\'s the problem here, it is pretty simple:\r\n\r\n```\r\n    def InsertMapset(self, name, location_node):\r\n        """"""Insert mapset into model and refresh tree""""""\r\n        self._model.AppendNode(parent=location_node, label=name,\r\n                               data=dict(type=\'mapset\', name=name))\r\n        self._model.SortChildren(location_node)\r\n        self.RefreshNode(location_node, recursive=True)\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 28, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681972, 'comment_body': 'remove print statements', 'comment_created': datetime.datetime(2020, 6, 28, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446682065, 'comment_body': 'please add yourself here', 'comment_created': datetime.datetime(2020, 6, 28, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447676056, 'comment_body': 'This is obviously not right, please fix again. Use format function.\r\n![Existing mapset path_020](https://user-images.githubusercontent.com/7494312/86130899-e197fa00-bab2-11ea-80c1-afd4cbdf1df2.png)\r\n\r\nIt should look like `Mapset <anna> already exists...`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447871860, 'comment_body': 'minor: missing space after comma', 'comment_created': datetime.datetime(2020, 6, 30, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'bf8685e929fad1561acde20bc7a86ccc355d3f16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37f2af25111531170375f9ba0edfd66f318651dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e47aa68425283557ce1d2687eb8d5629c18716b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '670fd0bf9927e70a026531c8d19549f31f34ab0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5057a270e6dfdb90b0221148b7620a050d720e43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d80f6cb42b05ec28ae867ea7c00ef1af97d1b3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feafc7378b2fe48cb674dbb0d0904aefced8edef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3feca0ac90b0c04b5b28287e99fdc15933c3ce9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e093c65c0af2b0a5e0847322ec5b4a6a5c4a68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
450275738,wxGUI: Allow delete on multiple mapsets in data catalog,"Added the function delete_mapsets_interactively which is called after selecting more mapsets. Checked possible cases of current or pernament mapset selection. 
",True,795,https://api.github.com/repos/OSGeo/grass/pulls/795,https://github.com/OSGeo/grass/pull/795,closed,135,70,3,4,1,20,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-16 15:14:24+00:00,2020-07-24 04:18:24+00:00,651840.0,"7 days, 13:04:00","[{'comment_id': 456204479, 'comment_body': ""this shouldn't take as input nodes, it should be something like a list of tuples [(db1, loc1, mapset1), (), ...]"", 'comment_created': datetime.datetime(2020, 7, 17, 3, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456206484, 'comment_body': 'Remove this from here, the message should be constructed later, just store the index here.\r\n\r\nConcatenating strings is done with join function.\r\n', 'comment_created': datetime.datetime(2020, 7, 17, 4, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456207581, 'comment_body': ""you don't need this when using join"", 'comment_created': datetime.datetime(2020, 7, 17, 4, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456208304, 'comment_body': 'use data[""name""] instead of label everywhere', 'comment_created': datetime.datetime(2020, 7, 17, 4, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190111, 'comment_body': 'simplify the syntax to `append((db, loc, mapset))`, right now you are creating a list and converting it to tuple.', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190214, 'comment_body': 'the same about tuple here', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190377, 'comment_body': 'in this case you can just do it in 1 line', 'comment_created': datetime.datetime(2020, 7, 23, 2, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193791, 'comment_body': 'Use format function as we discussed everywhere.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193899, 'comment_body': 'Also use translatable strings _()', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194738, 'comment_body': 'At the end there should be probably a sentence that the deleting of other mapsets wont proceed. Something like ""No mapsets will be deleted.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194908, 'comment_body': 'This should list the mapsets that will be deleted.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459197920, 'comment_body': 'This should return True/False, see #789.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459306810, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459307117, 'comment_body': 'Simplified as well.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459333654, 'comment_body': 'This sentence added.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340313, 'comment_body': 'Changed in the whole guiutils.py file.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340394, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459342073, 'comment_body': 'It lists all mapsets that will be deleted in terms of their paths. \r\n![Screenshot from 2020-07-23 05-01-48](https://user-images.githubusercontent.com/49241681/88274700-6655ec80-ccdc-11ea-86de-477daf6fab61.png)\r\n', 'comment_created': datetime.datetime(2020, 7, 23, 10, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459360570, 'comment_body': 'I rebased and solved conflict with master because of #789 and considered this as well.', 'comment_created': datetime.datetime(2020, 7, 23, 10, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459842057, 'comment_body': 'The merge ended up ignoring the return value, fixed.', 'comment_created': datetime.datetime(2020, 7, 24, 4, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': 'dcfb617a22ef7bae92fffa2cae02fa77cc7421ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '06accf4179c0f232bcad65edec0017a77f1f54ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae7f06bbfed4b16ae26225545c8ba799aaed53df', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01f5d20051436c00f2b015d6465293a20f89e5b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448951069,wxGUI: Add new location action to database node in Data tab,"
wxGUI/datacatalog: New functions download_location_interactively, create_location_interactively added. Also checking for location validation a bit changed, made more clear. After clicking on grass node, two options for creating and downloading location are avaliable.",True,790,https://api.github.com/repos/OSGeo/grass/pulls/790,https://github.com/OSGeo/grass/pull/790,closed,214,121,4,12,7,54,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-14 15:23:53+00:00,2020-07-24 02:00:20+00:00,815787.0,"9 days, 10:36:27","[{'comment_id': 454758067, 'comment_body': ""I can see this would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.\r\n\r\nYou may need to return tuple (1) or something like that from this function to get all what you need out, but returning the wizard seems inconsistent with the other functions you created where the beauty is that we don't need to deal with any GUI afterwards and we get just the data.\r\n\r\n(1) A tuple is not ideal, but easiest to write, so great for prototype. Alternatively, a dict is of course the Python's programmer unfortunate default for everything ([Python: What if everything was a dict?](https://argumate.tumblr.com/post/118013166244/python-what-if-everything-was-a-dict-java-what))."", 'comment_created': datetime.datetime(2020, 7, 15, 2, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 454760288, 'comment_body': 'This known by a poetic name, _unreachable code after return statement_. :smile: Flake8 would probably warn you about this, but in any case, flipping the lines should be enough so that the `Destroy()` is called before the function ends.', 'comment_created': datetime.datetime(2020, 7, 15, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456177949, 'comment_body': 'After hitting cancel in Location Wizard:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 694, in\r\nOnCreateLocation\r\n\r\ncreate_location_interactively(self,\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 223, in\r\ncreate_location_interactively\r\n\r\ngWizard_output = (gWizard.grassdatabase, gWizard.location,\r\nAttributeError\r\n:\r\n\'LocationWizard\' object has no attribute \'grassdatabase\'\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 2, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456194297, 'comment_body': ""The correct way how to write this would be:\r\n\r\n```python\r\n        grassdatabase, location, georeffile, default_region, user_mapset = (\r\n            create_location_interactively(self, self.selected_grassdb[0].data['name'])\r\n        )\r\n```\r\n\r\nHowever, most likely, it will not be needed since the following code really needs to go to the `create_location_interactively()` function."", 'comment_created': datetime.datetime(2020, 7, 17, 3, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195076, 'comment_body': 'Since this is so much part of location wizard workflow both here and in original gis_set.py, this really should be part of that `create_location_interactively()` function.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195342, 'comment_body': 'Seems to be exactly the case of wrong(ly used) function I mentioned:\r\n\r\n> I can see this [`create_location_interactively()`] would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456196821, 'comment_body': 'Catching such a generic exception (Exception) seems unnecessary. The error message for many exceptions will not be helpful for the end user. Was the original code doing that? What do you expect from `download_location_interactively()`? Are some issues handled there already? For a fallback mechanism for unexpected errors, the default mechanism of reporting them in the console is probably enough.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197372, 'comment_body': 'Does LocationWizard raise OSError? Otherwise, same questions as for OnDownloadLocation() in tree.py.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197450, 'comment_body': '```\r\n$ flake8 --isolated startup/guiutils.py\r\n...\r\nstartup/guiutils.py:391:9: E117 over-indented\r\n...\r\n```\r\n\r\nApplies to the whole function body.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456740935, 'comment_body': 'It seems to me now that the best way how to do this is to put the `if user_mapset:` part to `create_location_interactively()`. In case loc wizard says a mapset needs to be created, it is appropriate for `create_location_interactively()` to call `create_mapset_interactively()`. No need to involve the caller (i.e., data catalog or startup) into the process.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742283, 'comment_body': 'I think this function should return tuple (database, location, mapset) where database and location are what it returns now and mapset is `""PERMANENT""` by default and result of `create_mapset_interactively()` in case `gWizard.user_mapset` is `True`. This way, the issue of additional mapset creation is encapsulated in this function.\r\n\r\nThe documentation should say that the return value, i.e., the tuple (database, location, mapset), is the location user created and the mapset is a mapset user may want to switch to. At this point it will be PERMANENT, but theoretically it could be another mapset the user created. The emphasis in ""may want to switch to"" is on the ""may"", it depends on the caller what the context is. In datacatalog, we currently don\'t switch in this case, in startup we change selection (or whatever is the current state, I would have to double check, but the point is, it is up to do caller to decide).', 'comment_created': datetime.datetime(2020, 7, 18, 3, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742610, 'comment_body': 'It would make sense for this function to have the same interface, esp., the return value as `create_location_interactively()`, so that they can be used interchangeably and that we can change the implementation here and the rest of the code just works. Although the functionality is not here and we won\'t be adding it right now, creating another mapset here actually makes more sense than when creating an empty location. So, the return value right now should be tuple `(grassdb, location, ""PERMANENT"")`.\r\n\r\nYou should describe in documentation, when it returns invalid values and what happens on error or cancel. It should fit in terms of interface with the `create_location_interactively()`.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849085, 'comment_body': 'Why to InsertMapset here and why only when not PERMANENT (note the spelling, BTW)? ReloadTreeItems is called afterwards. The bigger problem is the database.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849581, 'comment_body': 'If there is really a different treatment of PERMANENT mapset needed, it needs to be documented here.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849653, 'comment_body': '`mapset` is probably a good enough name in this context.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849816, 'comment_body': 'The mapset name here is little strange as a value on failure. The original `(None, None, None)` sounds better and is probably safer.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849875, 'comment_body': 'Documentation of return value is really needed for this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850102, 'comment_body': 'You can solve the case if `gWizard.location is None` right here (and return) and continue with the ""success"" case below without any nesting.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850336, 'comment_body': 'This `gWizard_output` value gets replaced by the following line (always). Play with return statements and variable in some trivial pure Python code example.\r\n\r\nYou need to define that fist as sort of a default and overwrite it here or just overwrite the last item (`gWizard_output[2] = ...)`)', 'comment_created': datetime.datetime(2020, 7, 19, 2, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851247, 'comment_body': 'Just naming, the variable name is unnecessarily descriptive. You are in a relatively short `download_location...` function. Simply calling it, e.g., `result` in the sense ""this is what will be used as a return value"" is enough and likely best describes the variable in its context which is this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851448, 'comment_body': 'What is that for? Reloading covers this. Besides you are passing location as string to location_node parameter.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456851851, 'comment_body': ""This seems currently unused, because ReloadTreeItems adds that node. Just remove it now, it's not correctly implemented anyway, you would need to rebase to master due to #797."", 'comment_created': datetime.datetime(2020, 7, 19, 3, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 458256252, 'comment_body': 'Now it returns the tuple: (gWizard.grassdatabase, gWizard.location, and either PERNAMENT or user mapset).  ', 'comment_created': datetime.datetime(2020, 7, 21, 17, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458256510, 'comment_body': 'Those lines were flipped.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458257183, 'comment_body': 'Now it returns the tuples of Nones:  \r\nif gWizard.location is None:\r\n        gWizard_output = (None, None, None)\r\n        return gWizard_output', 'comment_created': datetime.datetime(2020, 7, 21, 17, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458258034, 'comment_body': 'I edited formatting.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458259464, 'comment_body': 'All these lines are now a part of create_location_interactively.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458260574, 'comment_body': 'create_mapset_interactively used within create_location_interactively', 'comment_created': datetime.datetime(2020, 7, 21, 17, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261049, 'comment_body': 'Generic exceptions removed. Not needed here.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261260, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261893, 'comment_body': 'Corrected in a last commit.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458262892, 'comment_body': 'if user_mapset:\r\nuser_mapset = **create_mapset_interactively**(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)', 'comment_created': datetime.datetime(2020, 7, 21, 17, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458263575, 'comment_body': 'create_location_interactively now returns tuple (database, location, mapset) where database and location are what it returns now and mapset is ""PERMANENT"" by default or the result of create_mapset_interactively() in case gWizard.user_mapset is True.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458264135, 'comment_body': 'if loc_download.GetLocation() is not None:\r\n        result = (grassdb, loc_download.GetLocation(), ""PERMANENT"")\r\n\r\nDocumentation added.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266378, 'comment_body': 'User mapset was solved within create_location_interactively. \r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266482, 'comment_body': 'Spelling corrected.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458267614, 'comment_body': 'It is not a different treatment. \r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458268664, 'comment_body': 'Name user_mapset changed to just mapset (last commit).', 'comment_created': datetime.datetime(2020, 7, 21, 17, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458269829, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270297, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270499, 'comment_body': 'Addressed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271200, 'comment_body': 'Addressed here:\r\n\r\nif gWizard.user_mapset:\r\n        mapset = create_mapset_interactively(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          mapset)\r\n    else:\r\n        # Returns PERMANENT mapset when user mapset not defined\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          ""PERMANENT"")', 'comment_created': datetime.datetime(2020, 7, 21, 17, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271657, 'comment_body': 'Changed to **result**.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271800, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271968, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458476501, 'comment_body': '...and Close does not cause a traceback.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477505, 'comment_body': 'The documentation of the return value needs to go to the docstring:\r\n\r\n```\r\n""""""Create new location using Location Wizard\r\n\r\nReturns foo when... Returns bar when...\r\n""""""\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 1, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477762, 'comment_body': 'Same here as for `create_location_interactively()`, documentation of the return value needs to be in the docstring because it documents the interface.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458479900, 'comment_body': 'This also contains some info on what should be in the documentation. To your:\r\n\r\n```\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n```\r\n\r\nThe point of ""user may want to switch to"" is that the function can create only PERMANENT or it can create one or (in the future) more other mapsets. The caller does not know and this function does not tell. What this function reports back is the mapset the user may want to switch to if any switching is expected (not the case currently in data catalog, but it is the case in the startup window). This mapset can be PERMANENT or anything else.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458482272, 'comment_body': 'I don\'t understand. Are you saying that PERMANENT and any other mapset is treated the same here? I still see the same condition `if mapset != ""PERMANENT"":` in the code.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458797390, 'comment_body': 'This condition is not needed here because when a location is not None, a user mapset is also always different from None. And I need to treat all mapsets the same way.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458797660, 'comment_body': 'Docstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458806605, 'comment_body': 'Ok, so if I get it right we do not have any mechanism for mapset switching within the location wizard so far.  So it is meant for future realization. \r\nDocstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459191006, 'comment_body': 'Actually, if something, we would switch outside of this function, hence giving the mapset name as a hint to the caller of this function - a hint about what user may want to do next. There is no difference for the caller between PERMANENT and any other mapset; as I said, _this function reports back...the mapset the user may want to switch...This mapset can be PERMANENT or anything else._ When user does not ask for anything else, only PERMANENT is created, so the function returns PERMANENT by default as mapset, but if user asks for creation of another mapset, the function returns name of this other mapset. In other words, _the function can create only PERMANENT or it can create...other mapset_.\r\n\r\nTo back up little further, the function is creating a new location, so returning its name (and path) is sufficient behavior. However, we are also adding mapset as additional information since other mapsets besides PERMANENT could be created based on user input as part of the location creation process.\r\n\r\nHere, we are trying to create general interface in between two parts of the code which won\'t change when we do small changes in the code or behavior here or there. Thus, it is important to define what return values are in general way. Database and location are something the caller will likely need to use since a new location was just created, but mapset is something which the caller is less likely to use. The function is saying ""Hey, FYI, this might a mapset the user is interested in the most.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4134ca7531990feeed81318bdcde3a56bb8240dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62719b3df399f34fe51e67ae6e1cd6e22f5e1bf4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dc852638f2c2aaa58b81170ffd36e1c4f99f4ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '097ceac223513a2fcde1eca01aca2ef3c9f32116', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd4e91ff9c282d9052f891db80630490f1de8e5f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a3afb6fc67020b152dbf5dda17024bc87e4239af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48bf6282a097e55d1a771844afd04d6be4600a9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2d7028e2b8635d7cbeb691870b4b674f20ee1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35989b081858d380c3ded3716e85a3746c7b30e7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79c0a3148af5ceef2af5c554599c099f9e5d30e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '864fbe2bcb570e8eb2a8f5b3c2cc8279aa7de658', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4b59601bbaa762d746c64a8fc7873dc56de9550', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
453688701,wxGUI: Add new icons to data catalog for actions avaliable in context menu,"Certain actions that are currently available (and will be available in the future) in the context menus of data catalog need to be exposed as toolbar icons. This is a suggested list of actions, to be edited based on discussion and feature availability:

- [x] add new database (already created)
- [x] create new mapset (now created)

Other:
- [ ] download sample location
- [ ] create new location
- [ ] import into current mapset

",True,811,https://api.github.com/repos/OSGeo/grass/pulls/811,https://github.com/OSGeo/grass/pull/811,closed,275,18,7,6,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-20 17:55:57+00:00,2020-07-24 03:24:48+00:00,293331.0,"3 days, 9:28:51",[],"[{'commit_sha': '6cce4afa63d570b8c6ab4730cf89c34c99209f92', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1c68a1ae3674a098177b9bea1efd157e2a0005af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a89327d02c5e32e9852520ffed9dc9a86643cf1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3f5533e09c5bf61e0d55a0bf666126700502a29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b17217dbc7696d66772aa20ee305bfc165cef795', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31e1ec9e4853a00a1dc1d63838e631d89141fba6', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
456128296,wxGUI: Add new icons to datacatalog for actions avaliable in context menu (continue),"Certain actions that are currently available (and will be available in the future) in the context menus of data catalog need to be exposed as toolbar icons. This is a suggested list of actions, to be edited based on discussion and feature availability:

- [x] add new database (already created)
- [x] create new mapset (already created)
- [x] download sample location (now created)
- [x] create new location (now created)

Other:

- [ ] import into current mapset",True,830,https://api.github.com/repos/OSGeo/grass/pulls/830,https://github.com/OSGeo/grass/pull/830,closed,147,175,8,2,0,1,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-24 07:38:39+00:00,2020-07-25 03:04:57+00:00,69978.0,19:26:18,"[{'comment_id': 460034999, 'comment_body': 'Location Wizard is not used for downloading locations', 'comment_created': datetime.datetime(2020, 7, 24, 12, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'c62f94fc71f7a4df955cc1f3e6cb6f9ca4f3c7ac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '22883f5097c28d44d16cc875f4c4a49ae4aecd59', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
458383229,wxGUI: An action should be required before modifying other mapsets,"While ""allow editing"" is OFF, no mapsets or location can be renamed or deleted. When ON we are allowed to rename and delete all mapsets and locations besides current ones.",True,848,https://api.github.com/repos/OSGeo/grass/pulls/848,https://github.com/OSGeo/grass/pull/848,closed,196,108,2,5,17,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 11:40:56+00:00,2020-08-04 12:06:25+00:00,519929.0,"6 days, 0:25:29",[],"[{'commit_sha': '4c5ce9bc3677def5cc99b18bc1515da6cbc72708', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2d0df041a2a06a654ee0debfbfcfdf923135d70', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aa849e110596c54e8b9bd5ed535664037d7d12ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28f13794e8155c0b12a85fe55a5214ddadbaea56', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9ee5aeeaeff8adf452004d6b9eeabcb7c4f9797d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
458462469,Distinguish mapsets by ownership and lock in Data tab,"In the startup screen it would be nice if mapsets could be displayed differently (e.g. different colors, for ""my mapsets"", ""my locked mapsets"", ""others mapsets"").

Mapsets owned by different user and locked mapsets will be displayed in gray and distinguished from ""normal mapsets"" by special label.


",True,849,https://api.github.com/repos/OSGeo/grass/pulls/849,https://github.com/OSGeo/grass/pull/849,closed,117,35,2,14,5,28,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 14:04:42+00:00,2020-08-11 16:46:48+00:00,1132926.0,"13 days, 2:42:06","[{'comment_id': 462342973, 'comment_body': ""Instead of this, it should be more `get_mapset_owner`, which will return the owner even if it's the the user."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 462348747, 'comment_body': ""OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n\r\nThe idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463033992, 'comment_body': ""No sure where to add more information to node.data. Where is e.g. node.data['name'] defined? "", 'comment_created': datetime.datetime(2020, 7, 30, 14, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463721905, 'comment_body': ""You need to return directly the wx.SYS....\r\n\r\nDelete '== True '"", 'comment_created': datetime.datetime(2020, 7, 31, 16, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463722843, 'comment_body': 'This all need to be called for all reload functions, not just that one, look eg. what reloadtreenodes is calling', 'comment_created': datetime.datetime(2020, 7, 31, 16, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463723315, 'comment_body': 'Just pass directly is_mapset_locked result', 'comment_created': datetime.datetime(2020, 7, 31, 16, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463929255, 'comment_body': 'Edited.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929720, 'comment_body': 'I edited the way how to append mapset node in functions _reloadLocationNode, _reloadGrassDBNode and GetCurrentDbLocationMapsetNode. Also after these edits I have still the same above-mentioned ""key"" error. I think I should define ""lock"" and ""user"" keys maybe in treemodel? But it seems strange to me because treemodel is a very general function and there is no explicit definition of what keys and values actually are.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929728, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464498802, 'comment_body': '> No sure where to add more information to node.data. Where is e.g. node.data[\'name\'] defined?\r\n\r\nI haven\'t delved deeply into this code, yet, but IIUC, these are defined whenever you create a dictionary for a tree node, e.g. on lines 336ff (in this PR):\r\n\r\n```\r\n            mapset_node = self._model.AppendNode(\r\n                                parent=location_node,\r\n                                data=dict(type=\'mapset\',\r\n                                          name=mapset,\r\n                                          lock=is_mapset_locked(mapset_path),\r\n                                          user=different_user))\r\n```\r\nSo, ""lock"" seems to be defined for mapset nodes whenever they are created (also elsewhere in the code). But AFAICT location_nodes do not include the ""lock"" key.', 'comment_created': datetime.datetime(2020, 8, 3, 15, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464505301, 'comment_body': ""> OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n> \r\n> The idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method.\r\n\r\nIIUC, this is true for many other OnGetItem method that you propose."", 'comment_created': datetime.datetime(2020, 8, 3, 15, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 467191023, 'comment_body': 'I would use ""(owner: xxx)"" and ""(in use, owner: xxx)""\r\nWe thought ""in use"" might be more understandable than \'locked\' \r\n\r\nalso, it should be translatable _()', 'comment_created': datetime.datetime(2020, 8, 7, 18, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467194597, 'comment_body': 'You should probably have data[""owner""] (that would be result of get_mapset_owner) and additionally data[""is_different_owner""] (result of is_mapset_users - bool). Then just adjust the label() code. This is more cosmetics, but it makes sense more like that.', 'comment_created': datetime.datetime(2020, 8, 7, 18, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467197170, 'comment_body': ""I don't think this is needed, it will search the nodes based on name and mapset, that's enough."", 'comment_created': datetime.datetime(2020, 8, 7, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467365216, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467367017, 'comment_body': '""Check mapset ownership"" part removed and mapset_node dictionary (lock, is_different_owner, owner) set. All decisions about what label to use are now made in @property function.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467449381, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 8, 10, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467490109, 'comment_body': 'Why did you need to change `is_mapset_users()` into `is_different_mapset_owner()`? If it is just about clarity of the name then `is_current_user_mapset_owner()` might be better. If it is just about which case it reports as true, then mapset being owned by the current users is the primary or positive case, so I would have function for that and negate the result if need. (The point here is that this is a general functionality/API, not limited to data catalog.) If you really feel like function for the opposite case is needed, then you can wrap the existing one.\r\n\r\nBesides the naming and what it is supposed to do, the current implementation is not correct: The GRASS_SKIP_MAPSET_OWNER_CHECK case does not correspond to `is_different_mapset_owner()`.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467490665, 'comment_body': 'Don\'t bother changing quotes from `""` to `\'`. Although most prevalent style in GRASS is now `\'` for keys, the Black style, which we will use in the future, uses `""` for everything.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467491953, 'comment_body': 'More general way to do this is:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(name=data[""name""])\r\n```\r\n\r\nor making use of the fact data is a dictionary:\r\n\r\n```\r\n_(""{data[name]} (current)"").format(data=data)\r\n```\r\n\r\nor making use of the fact that the only values we are using are from the dictionary:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(**data)\r\n```\r\n\r\nIt is more flexible and possibly also more readable as you see the basic structure of the string being constructed, but in the other cases it is also likely faster since format is already used there anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467554480, 'comment_body': 'I preserved the function is_mapset_users() but renamed it to is_current_user_mapset_owner(). Then I made the wrapping  function called is_different_mapset_owner().', 'comment_created': datetime.datetime(2020, 8, 9, 8, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467554696, 'comment_body': 'For now, I would let it like it is in the last commit. At least it has a uniform form.', 'comment_created': datetime.datetime(2020, 8, 9, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467560232, 'comment_body': 'Rewritten to _(""{name} (current)"").format(**data).', 'comment_created': datetime.datetime(2020, 8, 9, 9, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 468710700, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716371, 'comment_body': '```suggestion\r\n                return _(""{name}  (current)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716531, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use, owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716640, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716777, 'comment_body': '```suggestion\r\n                return _(""{name}  (owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '959ee18def0ff482d739423a1ba7a17bc0630e45', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85bb5ad535964a1311b35aeaa6545c9a7257ad4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0bd553c299eb3893e3783f1a48e51a90fbe4cf29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c722ff8f40eb52de9f8e4f87acde8dc35ba96ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '12985accdf42a7fd9883bada78cdc7389f703a64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55dcbc91d98262f09c7cc80e9d3c5b836440e712', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '41d7418eae4587f40c0ea9ff2883a152b003f768', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75b993f52b88e834a43f32a422420abf3aa4400f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f91460f96cc0d5335971a0f2f1ec7078f67ed31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40fe63178c5827716c28bbe43b850dbfa8045527', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee1359784f3d554ade655b5b29d090a7e0d23961', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49d234c5566bc0ab3a44f2d8c8178a8694c3272', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b980178aba410e00aa11153f406d43ee7adee3e2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e451f9d90d8bbb7f8391e1f272047f8c26a287', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
461780523,Misleading lock symbol icon in the in the Data tab toolbar,"**Describe the bug**

The toolbar of Data tab uses lock/unlock symbol for allowing and disallowing edits in mapsets other than the current one. However, the locking refers to something else in GRASS GIS and that it locking of mapsets by a GRASS GIS process/session. That terminology is actually in line with other software where a file is locked when used by another process or instance of the same program.

**Expected behavior**

A new icon is needed. It may have the allowed and restricted states like now or it could be just one symbol relying on the toggle state of the button to convey the change of state. A common icon for editing in GIS, including GRASS GIS, is a pen/pencil, so that's at least a good starting point.

**Suggestion:**

Editing mode allowed:

![allow_edits](https://user-images.githubusercontent.com/49241681/89119528-b79c7380-d474-11ea-8af0-d0b5fdfcd560.png)

No edits allowed:

![disallow_edits](https://user-images.githubusercontent.com/49241681/89119540-cdaa3400-d474-11ea-95e9-2498e8b885b4.png)

What are your suggestions?",True,870,https://api.github.com/repos/OSGeo/grass/pulls/870,https://github.com/OSGeo/grass/pull/870,closed,5,4,2,5,12,0,4,1,"[{'name': 'bug'}, {'name': 'question'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-02 09:01:19+00:00,2020-08-10 18:14:50+00:00,724411.0,"8 days, 9:13:31",[],"[{'commit_sha': 'dfb1a5518ae9a8438b1ba4561e96cee822301d89', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b12961332b216281186bdfe75c0264a1a96aaa08', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '16a230e562b70f500a4178d1e290eb7367f740f9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4794f28d60fbd2a8764ab7bd6241b742830aa077', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd18f100adab181ecbace51864ab772917822c47a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
459360730,Store list of databases in settings,"The GUI should remember the databases added. Every time a new database is added, a list of databases in the user settings should be updated. This way, a new GUI instance should read the user settings and put the databases to the list (if the directories still exist). The GUI should allow to remove the database from the tree. This should again be reflected in the user settings.",True,858,https://api.github.com/repos/OSGeo/grass/pulls/858,https://github.com/OSGeo/grass/pull/858,closed,179,12,6,9,24,10,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-30 16:19:48+00:00,2020-08-08 02:26:19+00:00,727591.0,"8 days, 10:06:31","[{'comment_id': 463725623, 'comment_body': ""Shouldn't this be on the same level as eg. 'manager'?"", 'comment_created': datetime.datetime(2020, 7, 31, 17, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463728775, 'comment_body': 'Maybe empty string than None for consistent types', 'comment_created': datetime.datetime(2020, 7, 31, 17, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463729861, 'comment_body': 'Perhaps this could go into InsertGrassDb directly to avoid code duplication?', 'comment_created': datetime.datetime(2020, 7, 31, 17, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463730392, 'comment_body': ""I am thinking maybe we don't have to inform user about this, just check and see if to add it or no."", 'comment_created': datetime.datetime(2020, 7, 31, 17, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463730641, 'comment_body': ""This doesn't need to be self"", 'comment_created': datetime.datetime(2020, 7, 31, 17, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 466332232, 'comment_body': 'Moved. UserSettings needs to have three values so that now it is:\r\n\r\ngroup=""datacatalog"",\r\nkey=""grassdb""\r\nsubkey=""getString""', 'comment_created': datetime.datetime(2020, 8, 6, 10, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466332996, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 6, 10, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336078, 'comment_body': 'Improved.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336159, 'comment_body': 'Ok.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336801, 'comment_body': 'Eventually It is enough to use  just one variable ""self.grassdatabases"".', 'comment_created': datetime.datetime(2020, 8, 6, 11, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'ea354dc431c33ff06872ea9f4a792fd6c2f154da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7531d28a399f7d9f66e5ab7335eb9466352434a4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0d067c2d9593e3d3f4920a609fa27785bcfe1350', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d5c4e58d69d8025fe3fcb05bc7e0775bc9965a4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8405f68e0bce7e31e5cbb4875e5163707ba619e9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '59cb358ba3c98e227c9df338ac121f816807ec0f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4ce884106c2d7f3212a3750f253aae813344c2a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'defad899bc7ad95ba9269562d25b04d51aa23e8a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d683bcdffef7236a5b7d776b9dccd2863dd37a2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
462802226,Allow delete on multiple locations in data catalog,"There is already the ""Delete mapsets"" option in Data Catalog. The same thing should be enabled for locations.",True,875,https://api.github.com/repos/OSGeo/grass/pulls/875,https://github.com/OSGeo/grass/pull/875,closed,76,34,2,2,0,3,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-04 14:26:13+00:00,2020-08-08 02:23:33+00:00,302240.0,"3 days, 11:57:20","[{'comment_id': 467346931, 'comment_body': '```suggestion\r\n                        ""Deleting locations was interrupted.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467347113, 'comment_body': '```suggestion\r\n            issue = _(""<{}> is current location."").format(location_path)\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467347379, 'comment_body': '```suggestion\r\n    return delete_locations_interactively(guiparent, locations)\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '122971e003c63c2b4b08784242c8209f267f4165', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62eeedf157ad0c7519b6769947fa5e595c5dae1b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
460894257,Start in a demo/startup location,"After creating this directory, follow with another function to create a simple location with some data.

The location demolocation in distribution (GISBASE) can be used for that. If it does not exist and thus cannot be copied, the startup should continue as usual.

I think the name should be startup or startup_location. It is more descriptive than demolocation but still clearly conveying it is not meant for normal use.

The startup mechanism for the first-time user should make use the mapset concept because it will both ensure preserving the data in PERMANENT intact and, at the same time, it will show how to use the mapset concept at least in the relation to the PERMANENT mapset.

When the startup/demo location is created/copied, a new mapset should be created there and used for starting, not the PERMANENT.

It will be only one mapset, but eventually there will be more than one, so probably some name_1, name_2, ... will be needed. ",True,868,https://api.github.com/repos/OSGeo/grass/pulls/868,https://github.com/OSGeo/grass/pull/868,closed,84,4,2,12,3,37,2,1,"[{'name': 'enhancement'}, {'name': 'gsoc'}]",2020-08-01 08:03:36+00:00,2020-08-20 04:13:31+00:00,1627795.0,"18 days, 20:09:55","[{'comment_id': 464448537, 'comment_body': '```\r\n    home = os.path.expanduser(""~"")\r\n    demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n```\r\nDo I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n\r\nMore generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464465069, 'comment_body': '```suggestion\r\n    home = os.path.expanduser(""~"")\r\n    src = os.path.join(home, ""grass"", ""demolocation"")\r\n    dst = os.path.join(grassdatabase, ""demolocation"")\r\n\r\n        # Copy source demolocation into GRASS database\r\n    try:\r\n        copytree(src, dst, ignore=ignore_patterns(\'*.tmpl\',\'Makefile*\'))\r\n```\r\n\r\nOtherwise, copytree() gives an error message since the dst directory (grassdatabase) already exists.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464849367, 'comment_body': '> \r\n> \r\n> > I have a problem with testing that. Not able to get into the initial state.\r\n> > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\r\n> > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\r\n> \r\n> For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\r\n\r\nYes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464852552, 'comment_body': '> \r\n> \r\n> ```\r\n>     home = os.path.expanduser(""~"")\r\n>     demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n> ```\r\n> \r\n> Do I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n> \r\n> More generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.\r\n\r\nI am not sure where in user\'s directory the demolocation will eventually exist. You have mentioned the directory usr/lib/grassXY/demolocation but I do not have any ""grassXY"" directory. I have only ""grass"". I looked at environmental variables, there is a variable GISBASE in my case /home/linwe/grass/dist.x86_64-pc-linux-gnu. Is it the variable I should use?\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464919073, 'comment_body': 'Yes, it would be GISBASE. In grassXY X represents the major and Y the minor version as in many distributions GRASS GIS is installed at e.g. /usr/lib/grass78.\n\nBut getting the GISBASE content should be enough, I think.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464920659, 'comment_body': 'Might this be the reason you get stuck ? Try moving the entire .grass7 folder, or at least the rc file in it. If that still is present and contains the info on the last used location, then LOCATION_NAME will not be UNKNOWN.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464921669, 'comment_body': '> > \n> > \n> > > I have a problem with testing that. Not able to get into the initial state.\n> > > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\n> > > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\n> > \n> > For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\n> \n> Yes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \n> \n\nSee my comment in the code: could it be be that LOCATION_NAME is not unknown in your case so it returns before ?', 'comment_created': datetime.datetime(2020, 8, 4, 9, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464998052, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 4, 11, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465002299, 'comment_body': 'I think it is not the right one. I found on my computer  ""computer/usr/lib/grass78"" directory. and GISBASE is /home/linwe/grass/dist.x86_64-pc-linux-gnu for me. And also demolocation was added into Debian installation but not Windows one. Am I right? ', 'comment_created': datetime.datetime(2020, 8, 4, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465039353, 'comment_body': '```suggestion\r\n    startup_location = os.path.join(gisbase, ""demolocation"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 465115768, 'comment_body': 'Yes! Good point. I had to remove rc file and suddenly it works as never. :-)', 'comment_created': datetime.datetime(2020, 8, 4, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467500774, 'comment_body': ""Since we may have a function which which tries to find existing user's copy/version/instance of the startup/demo location, I think this function name should be `get_startup_location_template()` to avoid confusion. The term _template_ is not used in GRASS, but it is common else where. Alternative is `get_startup_location_in_distribution()` which is what the function is doing, so perhaps better expressing the current that."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467500826, 'comment_body': 'No need to do `as why` when you are ignoring the `why` anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467502704, 'comment_body': ""You are ignoring the return value from `copy_startup_location()`. Perhaps, you can wrap this whole thing into one function, maybe named `get_startup_location()`, which will return the location/mapset on success and None otherwise and internally resolve all the cases (no location to copy, copying failed, and, possibly, also an existing user's copy of the location).\r\n\r\nPerhaps more importantly, it is not clear to me if this is meant to actually start in a mapset in this location. Creating this location if there is no other location is good, but actually using it, means picking also a mapset and starting in that one. With that, the overarching function should be something like `get_mapset_in_startup_location()` and it would take care of all above plus picking, probably creating, a mapset to use."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467503522, 'comment_body': ""Well, actually, if you want to leave this PR just at creating the location and solving the actual starting in some mapset there in another PR, that's fine with me."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467543597, 'comment_body': 'Yep, get_startup_location_in_distribution() seems clearer. I used that.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467544524, 'comment_body': '""as why"" removed.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471057311, 'comment_body': 'This should use the format function (method of string).', 'comment_created': datetime.datetime(2020, 8, 16, 2, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057512, 'comment_body': 'Rather than a triple nested if statement, use the ""`if not bar: return None`"" paradigm.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057748, 'comment_body': '`location` instead of `startup_location` is probably sufficient.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058227, 'comment_body': ""Since you added the mapset part in this PR, let's continue here. Now the mapset is not used and the user is presented with two mapsets to choose from. This is a situation we want to avoid. Let's take then the final steps from `OnStart()` and set the mapset and exit the startup with:\r\n\r\n```\r\n        self.SetLocation(dbase, location, mapset)\r\n        self.ExitSuccessfully()\r\n```\r\n\r\nThis will achieve the final/actual goal of #862 (see the title)."", 'comment_created': datetime.datetime(2020, 8, 16, 3, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058974, 'comment_body': 'Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471059453, 'comment_body': ""You are actually modifying the name variable here. If you run this more than once, you will get username, username_1, username_1_1, username_1_1_1, ... while you probably wanted username, username_2, username_3, ...\r\n\r\nSince this won't be used for the first time user, you can test this before fixing the modification of the location in the distribution. It is sufficient just to delete the config and grassdata dir as in case of a single test (i.e., just do the single test multiple times.)"", 'comment_created': datetime.datetime(2020, 8, 16, 3, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471061017, 'comment_body': 'The name which seems to be finalist in #862 is `world_latlong_wgs84`.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471092071, 'comment_body': '> \r\n> \r\n> Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.\r\n\r\nCorrected.', 'comment_created': datetime.datetime(2020, 8, 16, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471198276, 'comment_body': 'Having this call at the end of function called `SuggestDatabase` should be suspicious.\r\n\r\nThe point is that the first time user* will be brought into the newly created location, not everybody.\r\n\r\nOn top of that, just from reading the code, it looks like `grassdatabase, location, mapset_name` will not be defined on like 543 unless the `if path is None:` case happens. Did you test this for case when `path` is not `None`, i.e., `get_possible_database_path()` found something?\r\n\r\n* Here defined as the case when the startup location was created.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203310, 'comment_body': 'The return value is not fully documented. I think if you try to write documentation, you may also see that returning the database path is little strange because it is the input which is not expected to be changed.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203836, 'comment_body': 'You may want to call this variable `location_in_dist` or something like that to be sure you always use it in the right way. See e.g. your return statement (Does this code run?).', 'comment_created': datetime.datetime(2020, 8, 17, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471204607, 'comment_body': ""Is the _existing user's copy_ something you already tried to address or is it just something you are planning? I don't see it in the code."", 'comment_created': datetime.datetime(2020, 8, 17, 2, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471208420, 'comment_body': ""Using `GISBASE` is the right thing to do now. Let's not worry about distributions/installations right now."", 'comment_created': datetime.datetime(2020, 8, 17, 3, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472102560, 'comment_body': 'I think that the existing user\'s copy of ""world_latlong_wgs84"" is something that could not be reached now because I create a startup location only in the case when ""grassdata"" does not exist. So it is clear that ""grassdata/world_latlong_wgs84"" does not exist either.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 473553912, 'comment_body': '```suggestion\r\n    """"""Create a new startup location in the given GRASS database.\r\n\r\n    Returns the newly created mapset name on success. Returns None if there is\r\n    no location to copy in the installation or copying failed.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473555081, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473559713, 'comment_body': 'It starts now for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560093, 'comment_body': 'These two lines are now there.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560737, 'comment_body': 'The call is now at the right place in terms of starting there for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473561403, 'comment_body': 'Returning the mapset only and having the caller set the name is fine now. Might be more challenging in the future.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '15b014c1f5f301d89f24ac627c7c08dddc3cfa4e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31b6c82325df5c14a30a9d2b9098f047e2575964', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e5baf56c52c66097a79382ae99226ef8526c6361', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be368df23c77318d30c01bc7f0386bebba483b5d', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694df2ef2b8a731b71e344056268baf9a4076fe7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60f7b496a0a7a1afff073deb5826250bcf68a461', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4ec26ca07619d81a78ed1bc87bf3aa8b6b755a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd969a164eefbbf7ce6f52eddeeeec2381e845c14', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a1914399eae4b96c678bf3b8e65634d95709804', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '50d392205e801842628660e1b152b993cf3ec485', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3ce298257703d38154d8261dcfd9409fd61bc7c9', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b2c2881a412dbbf914222a975245cbaa68f795', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
465145424,Data catalog: double click on map from different location fails,"**Describe the bug**
Double click on map from different than current location adds the layer into layer tree but the layer does not exist in current location so it fails to display it.

**Expected behavior**
I suppose it should inform user that the map is in different location and ask if they want to switch to that mapset.",True,886,https://api.github.com/repos/OSGeo/grass/pulls/886,https://github.com/OSGeo/grass/pull/886,closed,26,4,1,5,1,3,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-09 12:20:56+00:00,2020-08-12 13:35:23+00:00,263667.0,"3 days, 1:14:27","[{'comment_id': 468867040, 'comment_body': 'Let\'s make the message little bit more specific:\r\n""Map \\<mymap@mapset\\> is not in the current location and therefore cannot be displayed. \\n\\n To display this map switch to mapset \\<mapset\\> first."" ', 'comment_created': datetime.datetime(2020, 8, 11, 21, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257471, 'comment_body': '```suggestion\r\n                            ""To display this map switch to mapset <{1}> first.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257992, 'comment_body': '```suggestion\r\n                            ""Map <{0}@{1}> is not in the current location""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '35dd7d3ebce4ef9337170c1a2f0672a59f8c583a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '020ee6e16aa7e8490a735fbed95a3523dc5edca5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f0d1266c0483c79f4fa31a53691627462b0a170f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35c46222c87e870efcda588f7af560985f2b307b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7dc0ec29ae11a47ec9d3b20c4d93065cd2f53ba', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
468024526,Switch to another mapset when in use (aka force remove lock),"**Describe the solution**

The data catalog should inform about the mapset being in use as indicated by the presence of the lock, but offer an option to force removal of the lock and switch to the mapset anyway. The primary choice/button should be the ""stay in current mapset"" option.

I think the asking twice as it is now in the startup window should be removed and instead information about the lock (i.e., the possible session there) should be provided. Some code for this is already in lib/init/grass.py and is used when using grass db/loc/mapset_which_is_in_use --text in the command line (not a reusable library function, but something to copy-paste and maybe to add to grass.grassdb).

This basically leads to switch_mapset_interactively() function. Using it in the startup window instead of the current code could help in making it more generic.
",True,906,https://api.github.com/repos/OSGeo/grass/pulls/906,https://github.com/OSGeo/grass/pull/906,closed,127,35,4,12,2,26,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-14 14:45:12+00:00,2020-08-18 17:13:33+00:00,354501.0,"4 days, 2:28:21","[{'comment_id': 470828050, 'comment_body': 'This is not needed just to relabel the buttons... See https://wxpython.org/Phoenix/docs/html/wx.MessageDialog.html', 'comment_created': datetime.datetime(2020, 8, 14, 19, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470929571, 'comment_body': ""Let's rename this to `can_switch_mapset_interactively` and it won't be actually switching the mapset, just checking and removing the lockfile. The signals would be called from tree.py as before. This function could be also used in lmgr/frame.py in OnChangeMapset/Location."", 'comment_created': datetime.datetime(2020, 8, 15, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055107, 'comment_body': '```suggestion\r\n    Checks if mapset is locked and offers to remove the lock file.\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055450, 'comment_body': 'I would remove the note about the permissions to simplify it.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055493, 'comment_body': '```suggestion\r\n            message=_(""User {0} is already running GRASS in selected mapset ""\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471056005, 'comment_body': 'Keep the original name, if you want get_current_user, add a new function.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471058874, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 8, 16, 3, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471059043, 'comment_body': 'Remove, simply just call ChangeLocation.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471061794, 'comment_body': 'Using the `{1}` style is sub-optimal. The `{name}` is easier to read, less prone to errors, and more flexible for translations.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471075498, 'comment_body': 'I think that ""get_current_user"" is a much more generic name and makes more sense even in create_mapset_interactively function where the default is set to get_current_user(). It means that immediately we know that default mapset name is the current user\'s name. \r\nBy the way, this function is so far used only in guiutils when switching mapset and when creating a new mapset. ', 'comment_created': datetime.datetime(2020, 8, 16, 7, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471076166, 'comment_body': ""I would let the name get_current_user() but maybe move that function to grassdb/checks. I have noticed that in checks.py there are functions like get_mapset_owner, get_lockfile_if_present which have similar behavior = we try to GET something. And those functions do not perform any checks. Similarly like get_current_user(). It might be the reason why to set up different let's say get.py file.  "", 'comment_created': datetime.datetime(2020, 8, 16, 7, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471151406, 'comment_body': ""You didn't test this properly, now you can't switch to mapset without a lockfile."", 'comment_created': datetime.datetime(2020, 8, 16, 19, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471151750, 'comment_body': 'The function name should be `get_default_mapset_name()` because the point of the function is to provide a string which is a name for mapset which should be used by default if there is no more specific name available or user does not provide it, e.g., a default value in a dialog or automatically created mapset.\r\n\r\nIt should be in `grass.grassdb.create` because it is relevant when creating new mapset and/or location.\r\n\r\nThese are exactly the usages when this function is used: default value in mapset creation dialog and (in #868) name of a generated mapset in the startup/demo location.\r\n\r\nIn `create_mapset_interactively()` the point of using `get_default_mapset_name()` is exactly that we want to get a default name for a mapset. We don\'t particularly care what the name is, i.e., we defer the decision to the implementation of that function. It is the question of semantics. What we emphasize in the API is the purpose of the value, not what the value is. The `get_default_mapset_name()` documentation can, or probably should, describe what the value is and why it is this way.\r\n\r\nThe point in making the distinction is that we can change the decision of what the default name is just by modifying this function, not all places where the default name is used. Additionally, the implementation of that function can be and in fact is geared towards that usage, i.e., it is not just purely for getting the current user name. Given its purpose, it always returns some string, so it returns `""user""` when the actual name was not find. This is a great behavior in context of getting some usable name for mapset, but it is rather unexpected and potentially harmful if the purpose is obtaining a user name. This would become even more prominent when more sophisticated replacement of non-compliant characters is added (see current code or e.g. comments in #897 for motivation). Consequently, using the function given its current implementation for getting user name is wrong.', 'comment_created': datetime.datetime(2020, 8, 16, 19, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471153690, 'comment_body': ""This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n\r\nIt seems that the best way of obtaining it is pathlib's `Path.owner`."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471586276, 'comment_body': ""That's strange. I am testing it now and it works fine. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471589002, 'comment_body': ""> \r\n> \r\n> This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n> \r\n> It seems that the best way of obtaining it is pathlib's `Path.owner`.\r\n\r\nI made actually the same function as get_mapset_owner, just for gislock owner. Maybe we could make one function get_file_owner instead of get_mapset_owner and get_gislock_owner. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471660802, 'comment_body': '```suggestion\r\n    """"""Returns default name for a mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 17, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471871002, 'comment_body': 'This is actually two module calls. Do `gisenv = grass.gisenv()` and then use it like elsewhere.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471872163, 'comment_body': 'Although this is consistent name with the others, the name is little misleading because it reads as ""Can I switch mapset interactively?"" when in fact it should be saying more ""Check interactively if I can switch mapset"". I think `can_switch_mapset_interactive()` keeps it simple and it expresses well that it is a ""can (I) switch mapset? but doing it in interactive manner.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471873409, 'comment_body': 'The `&` is what is used to identify a character which will be used with Alt key to ""press"" the button without using a mouse pointer. They need to be at least different, but I would probably go with `""S&witch...` and `""S&tay...`.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471874286, 'comment_body': 'The terminology used in #849 is ""in use"" so ""Mapset is in use"".', 'comment_created': datetime.datetime(2020, 8, 18, 2, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471877650, 'comment_body': ""I think the best thing to do with this function is to turn it into `get_mapset_lock_info(mapset_path)`. It can get also the timestamp (and there is one other thing which this could get but that's too much for this PR). Given that there will/might be extensions and for the lack of better ideas, the return type should be dict with keys owner and datetime.\r\n\r\nActually, let's add also filename as another key which will remove the need to call `get_lockfile_if_present()` and you can use the nicer `is_mapset_locked()`."", 'comment_created': datetime.datetime(2020, 8, 18, 2, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472261916, 'comment_body': ""```suggestion\r\n    info['lockpath'] = os.path.join(mapset_path, lock_name)\r\n    try:\r\n        info['owner'] = Path(info['lockpath']).owner()\r\n    except KeyError:\r\n        info['owner'] = None\r\n    info['timestamp'] = (datetime.datetime.fromtimestamp(\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 14, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472264015, 'comment_body': '```suggestion\r\n    """"""Get information about .gislock file.\r\n    Assumes lock file exists, use is_mapset_locked to find out.\r\n    Returns information as a dictionary with keys\r\n    \'owner\' (None if unknown), \'lockpath\', and \'timestamp\'.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 14, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472328183, 'comment_body': ""```suggestion\r\n        user = info['owner'] if info['owner'] else _('unknown')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 16, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472330870, 'comment_body': '```suggestion\r\n    """"""Returns default name for mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '364173c5d099347605e2647c8989d3d0d7226e11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be3000527113dd045295e56776661d5dc8b4b563', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c64a9337c078cb7e24de697980a2bda10b1a44c2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7e56782e9331b86a944d8eb1ab1c9c8bd407067', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '270a5d1b84ad522d31273451cae310ccd04a5b11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b10503c8c44813d4c4acb689361221626fe6e6eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0388f4c65fbeb569d87349f737fd1753b02bff0b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7848787a2a4c088c7212a5ea80cb86c94f01fb95', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a667ba2f6c0bf06f17c69ab749cd0c0937105dc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd13705f5d17ee060cead162332005e2a8ab25447', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c507b9fd20be836cd6a29163dda95297614ac5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a72ae80e191ebd4344f868c06affe040b14e227', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
466861464,Check for gislock and other issues when deleting/renaming/editing mapset and location in catalog,"Currently we don't have mechanism in data catalog to check for gislock and if mapset belongs to different user, so that we prevent user from actions including deleting or renaming mapset, and editing layers. The same applies to location deleting/renaming, it needs to check whether all mapsets can be edited.",True,904,https://api.github.com/repos/OSGeo/grass/pulls/904,https://github.com/OSGeo/grass/pull/904,closed,333,239,3,13,0,24,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-12 15:53:13+00:00,2020-08-19 17:42:31+00:00,611358.0,"7 days, 1:49:18","[{'comment_id': 470658118, 'comment_body': 'The checks should be done in check_mapset_interactively for 1 mapset and then check_mapsets_interactively will call check_mapset_interactively in a for loop. The way you have it now works, but this way it will make more sense.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470658856, 'comment_body': ""'exception' would mean a Python exception, but these are more 'failed checks' or something like that."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470659179, 'comment_body': '```suggestion\r\n        if check_permanent and mapset == ""PERMANENT"":\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 14, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660055, 'comment_body': 'Remove ""therefore changes are not allowed"", just state the problem.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660323, 'comment_body': 'the same for locations', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662672, 'comment_body': 'use +=', 'comment_created': datetime.datetime(2020, 8, 14, 14, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662855, 'comment_body': 'put on 1 line', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663123, 'comment_body': ""```suggestion\r\n            env=env).strip().split(',')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663293, 'comment_body': 'tmp_gisrc_file needs to be removed, see tree.py', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470674065, 'comment_body': ""The names of the functions should be probably different. Something like `get_reason_mapset_not_removable` and  `get_reasons_mapsets_not_removable`. It doesn't sound great but describes what it's doing."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471067478, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471067487, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471069846, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471152590, 'comment_body': 'I think we wanted ""get_reason_mapset_not_removable"", currently the implementation reports 1 reason because you have elif there and not if for every case. We could also report multiple reasons (e.g. mapset can be locked and PERMANENT), but I would keep single reason. Therefore the name should reflect that. It\'s a detail, but let\'s get it right.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471152984, 'comment_body': ""You can't just blindly copy code. This is handling communication from parallelized calls of getLocationTree function, remove it."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153386, 'comment_body': 'Probably could say cannot rename mapset `<mapset>` for ...', 'comment_created': datetime.datetime(2020, 8, 16, 20, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153590, 'comment_body': 'Also it should return message as string (or None), not list to keep it all consistent. Update the documentation.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472337989, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338400, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338580, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472339613, 'comment_body': '```suggestion\r\n            caption=_(""Unable to delete selected GRASS database""),\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472342129, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472349882, 'comment_body': ""```suggestion\r\n        if self.selected_grassdb[0].data['name'] == genv['GISDBASE']:\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 17, 7, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472436786, 'comment_body': '```suggestion\r\n    Returns message as string if there was failed check, otherwise None.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 19, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ccdb1022e5442b09cae4f0eb90ca8214a7711aa7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37e59f800d197faef85e293bad019ac49fe6f42c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '43896a69b789b746021aaecc76294c0b7939f0e8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f1fb18a1c5fde21aaee24962a720dd52d7f51a87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '650a583bd56bf90cd7f262182ed7ef3c9234e1b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2c15d642181fd11fb8bdd72a20880339b6d80cf9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7f40521004b85e6682360901ba22131c6d9aa743', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2e2b86ebb3b02944f59789f04453a2e8c1cb1ece', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7723c33610652d8d4cdcb3e0f54007fd599b6c07', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '339d07788a2ab6ae863f2e7563674d9b9586dee4', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4506c515604e019db93431b224f09fb4bf9d26', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa073feb559edde0254a44c4bf27123de344916', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '174c1b89d17fa788eafe6595c4aa7dabea5715fd', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
470042118,wxGUI/datacatalog: multiple grass databases context menu shows Delete locations,"**Describe the bug**
When you select multiple GRASS databases in datacatalog and right click you get ""Delete locations"", which is obviously a mistake. This is in latest master.

**Expected behavior**
If there is no action implemented for multiple databases, it should show ""No available options"".",True,914,https://api.github.com/repos/OSGeo/grass/pulls/914,https://github.com/OSGeo/grass/pull/914,closed,2,0,1,1,0,0,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-19 09:34:32+00:00,2020-08-19 17:52:35+00:00,29883.0,8:18:03,[],"[{'commit_sha': '64e576816df969e9ee9ef5f1ee08677afeb673b2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
470884654,wxGUI datacatalog: add direct editing of mapset and location name,"Addresses both #917, #918.

**https://github.com/OSGeo/grass/issues/918:**
Currently we can rename map by selecting it and clicking at it again, which opens an editing window (like in any file manager). This should work also for **mapsets and locations**. It should take into account if the restricted mode is on or off.

**https://github.com/OSGeo/grass/issues/917:**
In datacatalog when we select a map in other mapset and click on it second time to open editing window, you can rename it even when restricted mode is on. This should not be permitted.",True,920,https://api.github.com/repos/OSGeo/grass/pulls/920,https://github.com/OSGeo/grass/pull/920,closed,343,211,3,8,0,23,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-20 12:47:36+00:00,2020-08-24 04:10:27+00:00,314571.0,"3 days, 15:22:51","[{'comment_id': 474380993, 'comment_body': ""To avoid duplicating code (this is basically the same as in MapsetDialog in the same file), let's move these functions to lib/python/grassdb/checks.py and rename to `get_mapset_name_invalid_reason` and `get_location_name_invalid_reason`. Also add functions (in checks.py) `is_mapset_name_valid` and `is_location_name_valid`. These would be e.g. something like:\r\n\r\n```\r\ndef is_mapset_name_valid(...):\r\n    return gs.legal_name(...) and mapset != 'ogr' and not mapset_exists(...)\r\n```\r\n\r\nThen this could be used in guiutils MapsetDialog, with the GenericValidator, where the condition would be `is_mapset_name_valid` and the callback would call get_mapset_name_invalid_reason and GError."", 'comment_created': datetime.datetime(2020, 8, 21, 2, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387304, 'comment_body': ""In this function, remove all the notifications. Here we simply won't inform user they can't edit. We only inform user once they start editing and something goes wrong (in OnEditLabel)."", 'comment_created': datetime.datetime(2020, 8, 21, 3, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387981, 'comment_body': 'Here, use GError (core/gcmd.py) instead of the notification (user showTraceback=False).', 'comment_created': datetime.datetime(2020, 8, 21, 3, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474389005, 'comment_body': 'The same here with GError.', 'comment_created': datetime.datetime(2020, 8, 21, 3, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474654178, 'comment_body': 'Functions get_reasons_location_not_removable and similar ones are now moved to checks.py but the function get_reasons_grassdb_not removable could not be moved because it uses GetListOfLocations from core.py. So I do now know.. I think it is clear that all functions should be put in grassdb lib. \r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 8, 21, 12, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 474744739, 'comment_body': 'Right. Please move GetListOfLocations to checks.py, use underscores instead of camel case syntax. Use listOfLocations.sort(key=lambda x: x.lower()) instead of the ListSortLower. GetListofMapsets should be eventually moved too, but it is more complicated. Checks.py might need to be renamed or split, but we will deal with that later too.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747561, 'comment_body': ""```suggestion\r\n            if get_reason_mapset_not_removable(self.selected_grassdb[0].data['name'],\r\n                                               self.selected_location[0].data['name'],\r\n                                               self.selected_mapset[0].data['name']\r\n                                               check_permanent=True)\r\n                event.Veto()\r\n                return\r\n```"", 'comment_created': datetime.datetime(2020, 8, 21, 14, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747786, 'comment_body': 'see change above', 'comment_created': datetime.datetime(2020, 8, 21, 14, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751041, 'comment_body': 'This is unreadable, please rewrite the condition, maybe add comments what it is testing.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751437, 'comment_body': 'As I mentioned, no notifications in this function.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474753572, 'comment_body': '```suggestion\r\n        return is_location_name_valid(self.database, text)\r\n```', 'comment_created': datetime.datetime(2020, 8, 21, 15, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474811254, 'comment_body': 'Location exists?', 'comment_created': datetime.datetime(2020, 8, 21, 16, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474813703, 'comment_body': 'The function is not really ""get reason"" but more ""show reason"".', 'comment_created': datetime.datetime(2020, 8, 21, 16, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474839453, 'comment_body': 'Same as with the location dialog.', 'comment_created': datetime.datetime(2020, 8, 21, 17, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 475105078, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105095, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105131, 'comment_body': 'Upps. Corrected,', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105446, 'comment_body': 'I tried to rewrite it and add comments.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475118900, 'comment_body': 'The conditions are still hard to understand, I tried to simplify it:\r\n```\r\n    def OnStartEditLabel(self, node, event):\r\n        """"""Start label editing""""""\r\n        self.DefineItems([node])\r\n\r\n        # Not allowed for grassdb node\r\n        if node.data[\'type\'] == \'grassdb\':\r\n            event.Veto()\r\n        # Check selected mapset\r\n        elif node.data[\'type\'] == \'mapset\':\r\n            if (\r\n                self._restricted\r\n                or get_reason_mapset_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                   self.selected_location[0].data[\'name\'],\r\n                                                   self.selected_mapset[0].data[\'name\'],\r\n                                                   check_permanent=True)\r\n            ):\r\n                event.Veto()\r\n        # Check selected location\r\n        elif node.data[\'type\'] == \'location\':\r\n            if (\r\n                self._restricted\r\n                or get_reasons_location_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                      self.selected_location[0].data[\'name\'])\r\n            ):\r\n                event.Veto()\r\n        elif node.data[\'type\'] in (\'raster\', \'raster_3d\', \'vector\'):\r\n            currentGrassDb, currentLocation, currentMapset = self._isCurrent(gisenv())\r\n            if not currentMapset:\r\n                event.Veto()\r\n```', 'comment_created': datetime.datetime(2020, 8, 22, 18, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475195410, 'comment_body': 'Yes. Moved. When I tested Delete GRASS database from disk, I needed to switch to a different database and there is the following error (probably related to  https://github.com/OSGeo/grass/pull/919). When switching only between  mapsets in the same location or mapsets in the same grassdb it is okey.\r\n\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 23, 9, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475317822, 'comment_body': 'good catch, fixed in #931.', 'comment_created': datetime.datetime(2020, 8, 24, 3, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475320448, 'comment_body': '```suggestion\r\n    return gs.legal_name(mapset_name) and mapset_name.lower() != ""ogr"" and not \\\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475323672, 'comment_body': '```suggestion\r\ndef get_list_of_locations(dbase):\r\n    """"""Get list of GRASS locations in given dbase\r\n\r\n    :param dbase: GRASS database path\r\n\r\n    :return: list of locations (sorted)\r\n    """"""\r\n    locations = list()\r\n    for location in glob.glob(os.path.join(dbase, ""*"")):\r\n        if os.path.join(\r\n                location, ""PERMANENT"") in glob.glob(\r\n                os.path.join(location, ""*"")):\r\n            locations.append(os.path.basename(location))\r\n\r\n    locations.sort(key=lambda x: x.lower())\r\n\r\n    return locations\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'd286ff6704453031afb6de3cc62460dbc87e6341', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dae90af61b02a9d7e2367746485da2e5d730912', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd02821c0a7a6d63d61a92ddd1fd135b20c116d61', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '854b44d0cdf6b33036fefab9e412492991940e8e', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead598fa52245e0f31d4288ab29c316ff232785e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f05565518cd0adfe41b1fd8a844d6ff19d17b68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9a21dd59b8979acd93c81076bb1008abf4d4e307', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc2637530f69cc5ab517d052689db81f96211651', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
470884654,wxGUI datacatalog: add direct editing of mapset and location name,"Addresses both #917, #918.

**https://github.com/OSGeo/grass/issues/918:**
Currently we can rename map by selecting it and clicking at it again, which opens an editing window (like in any file manager). This should work also for **mapsets and locations**. It should take into account if the restricted mode is on or off.

**https://github.com/OSGeo/grass/issues/917:**
In datacatalog when we select a map in other mapset and click on it second time to open editing window, you can rename it even when restricted mode is on. This should not be permitted.",True,920,https://api.github.com/repos/OSGeo/grass/pulls/920,https://github.com/OSGeo/grass/pull/920,closed,343,211,3,8,0,23,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-20 12:47:36+00:00,2020-08-24 04:10:27+00:00,314571.0,"3 days, 15:22:51","[{'comment_id': 474380993, 'comment_body': ""To avoid duplicating code (this is basically the same as in MapsetDialog in the same file), let's move these functions to lib/python/grassdb/checks.py and rename to `get_mapset_name_invalid_reason` and `get_location_name_invalid_reason`. Also add functions (in checks.py) `is_mapset_name_valid` and `is_location_name_valid`. These would be e.g. something like:\r\n\r\n```\r\ndef is_mapset_name_valid(...):\r\n    return gs.legal_name(...) and mapset != 'ogr' and not mapset_exists(...)\r\n```\r\n\r\nThen this could be used in guiutils MapsetDialog, with the GenericValidator, where the condition would be `is_mapset_name_valid` and the callback would call get_mapset_name_invalid_reason and GError."", 'comment_created': datetime.datetime(2020, 8, 21, 2, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387304, 'comment_body': ""In this function, remove all the notifications. Here we simply won't inform user they can't edit. We only inform user once they start editing and something goes wrong (in OnEditLabel)."", 'comment_created': datetime.datetime(2020, 8, 21, 3, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387981, 'comment_body': 'Here, use GError (core/gcmd.py) instead of the notification (user showTraceback=False).', 'comment_created': datetime.datetime(2020, 8, 21, 3, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474389005, 'comment_body': 'The same here with GError.', 'comment_created': datetime.datetime(2020, 8, 21, 3, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474654178, 'comment_body': 'Functions get_reasons_location_not_removable and similar ones are now moved to checks.py but the function get_reasons_grassdb_not removable could not be moved because it uses GetListOfLocations from core.py. So I do now know.. I think it is clear that all functions should be put in grassdb lib. \r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 8, 21, 12, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 474744739, 'comment_body': 'Right. Please move GetListOfLocations to checks.py, use underscores instead of camel case syntax. Use listOfLocations.sort(key=lambda x: x.lower()) instead of the ListSortLower. GetListofMapsets should be eventually moved too, but it is more complicated. Checks.py might need to be renamed or split, but we will deal with that later too.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747561, 'comment_body': ""```suggestion\r\n            if get_reason_mapset_not_removable(self.selected_grassdb[0].data['name'],\r\n                                               self.selected_location[0].data['name'],\r\n                                               self.selected_mapset[0].data['name']\r\n                                               check_permanent=True)\r\n                event.Veto()\r\n                return\r\n```"", 'comment_created': datetime.datetime(2020, 8, 21, 14, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747786, 'comment_body': 'see change above', 'comment_created': datetime.datetime(2020, 8, 21, 14, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751041, 'comment_body': 'This is unreadable, please rewrite the condition, maybe add comments what it is testing.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751437, 'comment_body': 'As I mentioned, no notifications in this function.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474753572, 'comment_body': '```suggestion\r\n        return is_location_name_valid(self.database, text)\r\n```', 'comment_created': datetime.datetime(2020, 8, 21, 15, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474811254, 'comment_body': 'Location exists?', 'comment_created': datetime.datetime(2020, 8, 21, 16, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474813703, 'comment_body': 'The function is not really ""get reason"" but more ""show reason"".', 'comment_created': datetime.datetime(2020, 8, 21, 16, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474839453, 'comment_body': 'Same as with the location dialog.', 'comment_created': datetime.datetime(2020, 8, 21, 17, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 475105078, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105095, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105131, 'comment_body': 'Upps. Corrected,', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105446, 'comment_body': 'I tried to rewrite it and add comments.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475118900, 'comment_body': 'The conditions are still hard to understand, I tried to simplify it:\r\n```\r\n    def OnStartEditLabel(self, node, event):\r\n        """"""Start label editing""""""\r\n        self.DefineItems([node])\r\n\r\n        # Not allowed for grassdb node\r\n        if node.data[\'type\'] == \'grassdb\':\r\n            event.Veto()\r\n        # Check selected mapset\r\n        elif node.data[\'type\'] == \'mapset\':\r\n            if (\r\n                self._restricted\r\n                or get_reason_mapset_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                   self.selected_location[0].data[\'name\'],\r\n                                                   self.selected_mapset[0].data[\'name\'],\r\n                                                   check_permanent=True)\r\n            ):\r\n                event.Veto()\r\n        # Check selected location\r\n        elif node.data[\'type\'] == \'location\':\r\n            if (\r\n                self._restricted\r\n                or get_reasons_location_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                      self.selected_location[0].data[\'name\'])\r\n            ):\r\n                event.Veto()\r\n        elif node.data[\'type\'] in (\'raster\', \'raster_3d\', \'vector\'):\r\n            currentGrassDb, currentLocation, currentMapset = self._isCurrent(gisenv())\r\n            if not currentMapset:\r\n                event.Veto()\r\n```', 'comment_created': datetime.datetime(2020, 8, 22, 18, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475195410, 'comment_body': 'Yes. Moved. When I tested Delete GRASS database from disk, I needed to switch to a different database and there is the following error (probably related to  https://github.com/OSGeo/grass/pull/919). When switching only between  mapsets in the same location or mapsets in the same grassdb it is okey.\r\n\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 23, 9, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475317822, 'comment_body': 'good catch, fixed in #931.', 'comment_created': datetime.datetime(2020, 8, 24, 3, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475320448, 'comment_body': '```suggestion\r\n    return gs.legal_name(mapset_name) and mapset_name.lower() != ""ogr"" and not \\\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475323672, 'comment_body': '```suggestion\r\ndef get_list_of_locations(dbase):\r\n    """"""Get list of GRASS locations in given dbase\r\n\r\n    :param dbase: GRASS database path\r\n\r\n    :return: list of locations (sorted)\r\n    """"""\r\n    locations = list()\r\n    for location in glob.glob(os.path.join(dbase, ""*"")):\r\n        if os.path.join(\r\n                location, ""PERMANENT"") in glob.glob(\r\n                os.path.join(location, ""*"")):\r\n            locations.append(os.path.basename(location))\r\n\r\n    locations.sort(key=lambda x: x.lower())\r\n\r\n    return locations\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'd286ff6704453031afb6de3cc62460dbc87e6341', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dae90af61b02a9d7e2367746485da2e5d730912', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd02821c0a7a6d63d61a92ddd1fd135b20c116d61', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '854b44d0cdf6b33036fefab9e412492991940e8e', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead598fa52245e0f31d4288ab29c316ff232785e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f05565518cd0adfe41b1fd8a844d6ff19d17b68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9a21dd59b8979acd93c81076bb1008abf4d4e307', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc2637530f69cc5ab517d052689db81f96211651', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
400382150,Update Location Wizard: First page,"Location wizard: making new class MakeStaticText which is used for creating non-editable database directory, and removing Browse button",True,493,https://api.github.com/repos/OSGeo/grass/pulls/493,https://github.com/OSGeo/grass/pull/493,closed,12,22,1,3,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-04-07 16:42:30+00:00,2020-04-09 15:51:32+00:00,169742.0,"1 day, 23:09:02","[{'comment_id': 404978311, 'comment_body': ""size should be probably -1, -1.\r\n\r\nThis entire function is not really needed, but to keep this consistent with the other code, let's keep it now. Probably should be simplified in the future."", 'comment_created': datetime.datetime(2020, 4, 7, 17, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 404978838, 'comment_body': 'Bla?', 'comment_created': datetime.datetime(2020, 4, 7, 17, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 404979331, 'comment_body': 'Probably would be good to remove OnBrowse function as well.', 'comment_created': datetime.datetime(2020, 4, 7, 17, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 405148303, 'comment_body': 'Seems to be a typo. @lindakladivova If so please remove (in a new commit)', 'comment_created': datetime.datetime(2020, 4, 7, 22, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': '85ce4ce2661082b8e8b773def06b014537775b1b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a08113a9e23d4ad233c1a9569ba41d478a964ea7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44dcd1990a00def0c1783de8cadbc9f69565bed0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
419661176,wxGUI location wizard: First page,"Location wizard location name marked as required and the Project Location renamed to Location Name.

> @lindakladivova Please provide screenshots before and after. It's self-explanatory description :-)

Sorry I do not have before. I have the one after :-) :
![Screenshot from 2020-05-18 15-28-09](https://user-images.githubusercontent.com/49241681/82257184-388baa80-991d-11ea-8fc2-20fdf30dd7bd.png)




> I would say the asterisk should go right after the label. Since there is GridBagSizer used, you may need to shift the edit fields one column to the right to get the asterisk there so that everything is aligned. Alternatively, the edit fields could be moved below the label like we have in forms.

Here's the screenshot of the second version:
![Screenshot from 2020-05-19 10-06-21](https://user-images.githubusercontent.com/49241681/82344664-f2d0ef80-99b9-11ea-81d8-bef65cfba872.png)

Here's the screenshot of the third version:
(The layout was a bit changed and also the Description was marked as optional. GIS data directory is still non-editable but made through wx.TE_READONLY method.)
![Screenshot from 2020-05-19 15-04-43](https://user-images.githubusercontent.com/49241681/82373246-edd46600-99e2-11ea-8b23-3b165ee8f4de.png)

Here's the screenshot of the fourth version:
![Screenshot from 2020-05-20 11-08-53](https://user-images.githubusercontent.com/49241681/82470901-8f16f700-9a8b-11ea-8f33-45be60470ca6.png)
I more like the TextCtrl than StaticText for Location Database. I find it more logical because the window is editable. What do you think?

The fifth version with StaticText:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82476212-4e22e080-9a93-11ea-8662-c4f79d700415.png)


",True,646,https://api.github.com/repos/OSGeo/grass/pulls/646,https://github.com/OSGeo/grass/pull/646,closed,56,54,1,11,6,6,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-18 18:12:40+00:00,2020-05-23 01:31:19+00:00,371919.0,"4 days, 7:18:39","[{'comment_id': 426991319, 'comment_body': ""I don't think the required_txt needs to be attribute of the class (remove self)."", 'comment_created': datetime.datetime(2020, 5, 19, 2, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427716943, 'comment_body': ""As I mentioned, don't use self here if it's used only locally within the scope of the method, if you make it an attribute of the class it looks like it's being used elsewhere too, which is confusing."", 'comment_created': datetime.datetime(2020, 5, 20, 3, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427717110, 'comment_body': 'Make it translatable: _(""optional"")', 'comment_created': datetime.datetime(2020, 5, 20, 3, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427718770, 'comment_body': ""I would recommend here using system colors instead of 'gray': `wx.SystemSettings.GetColour(wx.SYS_COLOUR_GRAYTEXT)` because people have different window styles."", 'comment_created': datetime.datetime(2020, 5, 20, 3, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427719883, 'comment_body': 'If you look at the code checks, the flake8 code quality check is failing on your PR because of spaces around =. It should be:\r\n`..., style=wx.TE_READONLY | wx.TRANSPARENT_WINDOW`\r\n\r\nsee [PEP8](https://www.python.org/dev/peps/pep-0008/) for reference.\r\n', 'comment_created': datetime.datetime(2020, 5, 20, 3, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 428231974, 'comment_body': 'Just removing the widgets is not enough, there are probably used somewhere.', 'comment_created': datetime.datetime(2020, 5, 20, 18, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '9394fd700c5cda4d3aa4b7cafdde558f7d6081bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2f5614c100d5b3e6498aed5d4211f9cd12e49a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae02d7b57df87a72814e1f216ea04a7584cf6211', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2bec1fb13780cbb7fea5e530d68e6d22667ccea5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0118b6cc0a0a1d4dab6b508d9880a9b3344873a9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c9d1d2c34952c66184b803cc0b7ddabf4f6e988c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a76f17b1d1d1017d19c71f12fd26cd8f125d1281', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c1e86fc1c271c84cf5debb7830097d17c21aae69', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5cad7605d97922f4fad69adf6c807f279cd05a8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a548b14a2fe5b960c0f7a3dd87740c012e3c86f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8b3851be6697a2f6fbe1fdc4e8136c9c166cbe97', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
421002122,Wx gui location wizard map picture removed,"Before:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82493953-710ebe00-9aae-11ea-8528-97f9d500d05f.png)

After:
![Screenshot from 2020-05-20 15-29-13](https://user-images.githubusercontent.com/49241681/82494047-97345e00-9aae-11ea-8130-4af38f689494.png)

The file and matches have been finding using: _tree -f | grep loc_wizard_qgis.png_  and _grep -IrnE loc_wizard_qgis.png_ . No other matches.

",True,657,https://api.github.com/repos/OSGeo/grass/pulls/657,https://github.com/OSGeo/grass/pull/657,closed,4,12,2,2,3,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-20 20:28:05+00:00,2020-05-30 01:37:04+00:00,796139.0,"9 days, 5:08:59",[],"[{'commit_sha': 'd4221be6871a442619c47a0b9e2961f7870151f2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '079246403e69b2a92ecfb1dc6c8a2d62e0d05948', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422453525,wxGUI location wizard: EPSG page,"Path to usr/share/proj/epsg was removed. Search and EPSG code text inputs were merged into one search input. Link to epsg.io was added. The layout was adapted using several box sizers instead of grid sizer.

Before: 
![Screenshot from 2020-05-24 13-46-49](https://user-images.githubusercontent.com/49241681/82762159-0ff42c80-9dc5-11ea-8130-4bd7097a51f0.png)

Version 1:
![Screenshot from 2020-06-05 07-26-31](https://user-images.githubusercontent.com/49241681/83877497-ee872f00-a73a-11ea-9386-ce5ca8640255.png)

The motion of events is following (unincorporated yet in Version 1):
- searching in a list on the fly
- choose automatically the first row and permit ""next"" button
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

Version 2:
![Screenshot from 2020-06-06 05-24-32](https://user-images.githubusercontent.com/49241681/83942387-39647d80-a7f3-11ea-8dc0-33b0da88051f.png)

Already incorporated:
- searching in a list on the fly
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

I have a problem that when selecting epsg code from a table, it sometimes happens that neither the query string nor the final epsg code mentioned in the summary page changes. Also I am not sure how to incorporate choosing the automatically the first row in the list.

Version 3 (Layout enhancement):
![Screenshot from 2020-06-07 05-10-50](https://user-images.githubusercontent.com/49241681/83966145-bf96c780-a8b8-11ea-9bcf-a6fb1e448bf9.png)


",True,670,https://api.github.com/repos/OSGeo/grass/pulls/670,https://github.com/OSGeo/grass/pull/670,closed,150,126,1,6,4,9,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-24 18:47:46+00:00,2020-06-13 02:35:08+00:00,1669642.0,"19 days, 7:47:22","[{'comment_id': 436317921, 'comment_body': 'this should be size=(-1, 30)', 'comment_created': datetime.datetime(2020, 6, 7, 2, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436317947, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 6, 7, 2, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318061, 'comment_body': 'the label should stay the same all the time, use just ""epsg.io"".', 'comment_created': datetime.datetime(2020, 6, 7, 2, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318094, 'comment_body': 'Initial url should be ""https://epsg.io/""', 'comment_created': datetime.datetime(2020, 6, 7, 2, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318128, 'comment_body': 'no new line needed', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318178, 'comment_body': 'remove SetLabel, we want the label to be the same all the time, just the link changes', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318236, 'comment_body': 'no str() needed\r\n\r\nalso, check if there is anything in the value, if not, the link should just be https://epsg.io, no query part', 'comment_created': datetime.datetime(2020, 6, 7, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 439612750, 'comment_body': 'What about ```https://epsg.io/{0}``` directly ?', 'comment_created': datetime.datetime(2020, 6, 12, 19, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439614110, 'comment_body': 'Hm, this will work for EPSG (like ""5514"") but for a keyword (like ""krovak""). Marking this comment as not relevant.', 'comment_created': datetime.datetime(2020, 6, 12, 19, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': 'ed10bc86a313408c3356b719bdd2f5ebaf4b81e2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7686375d5b2cffb8e2010654cbc29a8d8041d993', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7fd081088b6289faf6a7b5ef4c2693eac27f4d3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f66f986a0150ea336f5830d279509872ba7552f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b08db139d172d59f9e54493133fe8003a6ef7d5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a473825f635446a8c9e302ef861cd093a88d9676', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
421002122,Wx gui location wizard map picture removed,"Before:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82493953-710ebe00-9aae-11ea-8528-97f9d500d05f.png)

After:
![Screenshot from 2020-05-20 15-29-13](https://user-images.githubusercontent.com/49241681/82494047-97345e00-9aae-11ea-8130-4af38f689494.png)

The file and matches have been finding using: _tree -f | grep loc_wizard_qgis.png_  and _grep -IrnE loc_wizard_qgis.png_ . No other matches.

",True,657,https://api.github.com/repos/OSGeo/grass/pulls/657,https://github.com/OSGeo/grass/pull/657,closed,4,12,2,2,3,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-20 20:28:05+00:00,2020-05-30 01:37:04+00:00,796139.0,"9 days, 5:08:59",[],"[{'commit_sha': 'd4221be6871a442619c47a0b9e2961f7870151f2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '079246403e69b2a92ecfb1dc6c8a2d62e0d05948', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422453525,wxGUI location wizard: EPSG page,"Path to usr/share/proj/epsg was removed. Search and EPSG code text inputs were merged into one search input. Link to epsg.io was added. The layout was adapted using several box sizers instead of grid sizer.

Before: 
![Screenshot from 2020-05-24 13-46-49](https://user-images.githubusercontent.com/49241681/82762159-0ff42c80-9dc5-11ea-8130-4bd7097a51f0.png)

Version 1:
![Screenshot from 2020-06-05 07-26-31](https://user-images.githubusercontent.com/49241681/83877497-ee872f00-a73a-11ea-9386-ce5ca8640255.png)

The motion of events is following (unincorporated yet in Version 1):
- searching in a list on the fly
- choose automatically the first row and permit ""next"" button
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

Version 2:
![Screenshot from 2020-06-06 05-24-32](https://user-images.githubusercontent.com/49241681/83942387-39647d80-a7f3-11ea-8dc0-33b0da88051f.png)

Already incorporated:
- searching in a list on the fly
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

I have a problem that when selecting epsg code from a table, it sometimes happens that neither the query string nor the final epsg code mentioned in the summary page changes. Also I am not sure how to incorporate choosing the automatically the first row in the list.

Version 3 (Layout enhancement):
![Screenshot from 2020-06-07 05-10-50](https://user-images.githubusercontent.com/49241681/83966145-bf96c780-a8b8-11ea-9bcf-a6fb1e448bf9.png)


",True,670,https://api.github.com/repos/OSGeo/grass/pulls/670,https://github.com/OSGeo/grass/pull/670,closed,150,126,1,6,4,9,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-24 18:47:46+00:00,2020-06-13 02:35:08+00:00,1669642.0,"19 days, 7:47:22","[{'comment_id': 436317921, 'comment_body': 'this should be size=(-1, 30)', 'comment_created': datetime.datetime(2020, 6, 7, 2, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436317947, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 6, 7, 2, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318061, 'comment_body': 'the label should stay the same all the time, use just ""epsg.io"".', 'comment_created': datetime.datetime(2020, 6, 7, 2, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318094, 'comment_body': 'Initial url should be ""https://epsg.io/""', 'comment_created': datetime.datetime(2020, 6, 7, 2, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318128, 'comment_body': 'no new line needed', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318178, 'comment_body': 'remove SetLabel, we want the label to be the same all the time, just the link changes', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318236, 'comment_body': 'no str() needed\r\n\r\nalso, check if there is anything in the value, if not, the link should just be https://epsg.io, no query part', 'comment_created': datetime.datetime(2020, 6, 7, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 439612750, 'comment_body': 'What about ```https://epsg.io/{0}``` directly ?', 'comment_created': datetime.datetime(2020, 6, 12, 19, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439614110, 'comment_body': 'Hm, this will work for EPSG (like ""5514"") but for a keyword (like ""krovak""). Marking this comment as not relevant.', 'comment_created': datetime.datetime(2020, 6, 12, 19, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': 'ed10bc86a313408c3356b719bdd2f5ebaf4b81e2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7686375d5b2cffb8e2010654cbc29a8d8041d993', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7fd081088b6289faf6a7b5ef4c2693eac27f4d3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f66f986a0150ea336f5830d279509872ba7552f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b08db139d172d59f9e54493133fe8003a6ef7d5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a473825f635446a8c9e302ef861cd093a88d9676', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
422453525,wxGUI location wizard: EPSG page,"Path to usr/share/proj/epsg was removed. Search and EPSG code text inputs were merged into one search input. Link to epsg.io was added. The layout was adapted using several box sizers instead of grid sizer.

Before: 
![Screenshot from 2020-05-24 13-46-49](https://user-images.githubusercontent.com/49241681/82762159-0ff42c80-9dc5-11ea-8130-4bd7097a51f0.png)

Version 1:
![Screenshot from 2020-06-05 07-26-31](https://user-images.githubusercontent.com/49241681/83877497-ee872f00-a73a-11ea-9386-ce5ca8640255.png)

The motion of events is following (unincorporated yet in Version 1):
- searching in a list on the fly
- choose automatically the first row and permit ""next"" button
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

Version 2:
![Screenshot from 2020-06-06 05-24-32](https://user-images.githubusercontent.com/49241681/83942387-39647d80-a7f3-11ea-8dc0-33b0da88051f.png)

Already incorporated:
- searching in a list on the fly
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

I have a problem that when selecting epsg code from a table, it sometimes happens that neither the query string nor the final epsg code mentioned in the summary page changes. Also I am not sure how to incorporate choosing the automatically the first row in the list.

Version 3 (Layout enhancement):
![Screenshot from 2020-06-07 05-10-50](https://user-images.githubusercontent.com/49241681/83966145-bf96c780-a8b8-11ea-9bcf-a6fb1e448bf9.png)


",True,670,https://api.github.com/repos/OSGeo/grass/pulls/670,https://github.com/OSGeo/grass/pull/670,closed,150,126,1,6,4,9,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-24 18:47:46+00:00,2020-06-13 02:35:08+00:00,1669642.0,"19 days, 7:47:22","[{'comment_id': 436317921, 'comment_body': 'this should be size=(-1, 30)', 'comment_created': datetime.datetime(2020, 6, 7, 2, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436317947, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 6, 7, 2, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318061, 'comment_body': 'the label should stay the same all the time, use just ""epsg.io"".', 'comment_created': datetime.datetime(2020, 6, 7, 2, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318094, 'comment_body': 'Initial url should be ""https://epsg.io/""', 'comment_created': datetime.datetime(2020, 6, 7, 2, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318128, 'comment_body': 'no new line needed', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318178, 'comment_body': 'remove SetLabel, we want the label to be the same all the time, just the link changes', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318236, 'comment_body': 'no str() needed\r\n\r\nalso, check if there is anything in the value, if not, the link should just be https://epsg.io, no query part', 'comment_created': datetime.datetime(2020, 6, 7, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 439612750, 'comment_body': 'What about ```https://epsg.io/{0}``` directly ?', 'comment_created': datetime.datetime(2020, 6, 12, 19, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439614110, 'comment_body': 'Hm, this will work for EPSG (like ""5514"") but for a keyword (like ""krovak""). Marking this comment as not relevant.', 'comment_created': datetime.datetime(2020, 6, 12, 19, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': 'ed10bc86a313408c3356b719bdd2f5ebaf4b81e2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7686375d5b2cffb8e2010654cbc29a8d8041d993', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7fd081088b6289faf6a7b5ef4c2693eac27f4d3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f66f986a0150ea336f5830d279509872ba7552f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b08db139d172d59f9e54493133fe8003a6ef7d5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a473825f635446a8c9e302ef861cd093a88d9676', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
433804729,wxgui: Create grassdata automatically on the first GUI startup ,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). If nothing is found, GRASS GIS (GUI) should automatically create directory named grassdata as a subdirectory of a platfrom-dependent directory. This platfrom-dependent directory would be:

- $HOME (os.path.expanduser('~')) on Linux and the like,
- User's Documents on Windows (see dac6d4a for code trying to identify that dir),
 - One of the above on macOS - macOS users, please share your ideas.

If that fails (GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases) it should use a temporary directory (/tmp/... etc.) as a fallback. 
The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. ",True,705,https://api.github.com/repos/OSGeo/grass/pulls/705,https://github.com/OSGeo/grass/pull/705,closed,56,1,2,8,0,32,1,0,[{'name': 'gsoc'}],2020-06-12 17:31:34+00:00,2020-06-23 02:48:29+00:00,897415.0,"10 days, 9:16:55","[{'comment_id': 439719965, 'comment_body': 'Why _() in the path? Localized Windows should understand Documents.', 'comment_created': datetime.datetime(2020, 6, 13, 8, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439784274, 'comment_body': 'This goes against ""If even [the temporary directory fallback] fails, GRASS should not fail, but simply let the user make that choice which is the current behavior."" from #682.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784342, 'comment_body': 'This should be created only once it is really needed. (Otherwise, the tmp dir will be created and not deleted every time thing function runs.)', 'comment_created': datetime.datetime(2020, 6, 14, 2, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784563, 'comment_body': 'The `path` is already set at this point even when exception was raised, so your line `if path is None:` will have path which is not None and thus the functions will just return this path.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784774, 'comment_body': 'We may decide to refine it and give more info to the user through GUI, but at this point and in this function, there is no need to report the failure in any way. This function has a fallback which is the tmp dir and the original calling code has its own fallback solution. ', 'comment_created': datetime.datetime(2020, 6, 14, 2, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784900, 'comment_body': 'This comes from dac6d4add511cb47d3329d2c06fdb441b75822f4 - see the comment there. I would not bother with that for this function and just go with `Documents` only.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784998, 'comment_body': 'This still should be there. (#682:  ""If even [the temporary directory fallback] fails, [...] simply let the user make that choice which is the current behavior."")', 'comment_created': datetime.datetime(2020, 6, 14, 2, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785212, 'comment_body': 'possible -> standard, fix wording of ""directory to what is""', 'comment_created': datetime.datetime(2020, 6, 14, 2, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785373, 'comment_body': 'Something like ""...in the standard location according to the platform."" And also mention the fallback.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441941134, 'comment_body': 'Please remove this extra change. Also in PEP8, there is only one empty line between methods.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942469, 'comment_body': 'Based on what the function does and what the context is, the comment should be ""...try to create...""', 'comment_created': datetime.datetime(2020, 6, 18, 3, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942745, 'comment_body': 'What the word ""independent"" refers to here?', 'comment_created': datetime.datetime(2020, 6, 18, 3, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441945594, 'comment_body': 'As I said, here in this new function, I would not bother with translations here as this is more future oriented and we hope that every new system will be set in a way that there is ""Documents"". So, I\'m saying, delete the `""candidates.append(os.path.join(home, _(""Documents""), ""grassdata""))""` part.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441946904, 'comment_body': ""Here, you don't have to assign to a variable here, just return candidate right away."", 'comment_created': datetime.datetime(2020, 6, 18, 3, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949253, 'comment_body': 'According to PEP8, `t` from `tempfile` and `""` from `""grassdata...` should be aligned. Another option is to use Black style which puts this into 4 lines if it is longer than 88 characters:\r\n\r\n```\r\ntmp = os.path.join(\r\n    tempfile.gettempdir(),\r\n    ""grassdata_{}"".format(getpass.getuser())\r\n) \r\n```\r\n\r\nYou can run Flake8 on any file you edit to see these things. Unfortunately, you will get a lot of warning and errors from other lines you did not edit and you need to ignore those (this will get better in the future as we make more files PEP8, Flake8, and Black compliant).', 'comment_created': datetime.datetime(2020, 6, 18, 3, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949674, 'comment_body': 'Again, just return here is enough.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949853, 'comment_body': 'Only return is needed here, no assignment.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949974, 'comment_body': 'Control -> Check', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441950905, 'comment_body': '`create_possible_database_path()` -> `create_database_directory()`\r\n\r\nThe GRASS terminology here is all over the place here (grassdata, gisbase, ...), but ""possible"" does not make sense here and we are not creating a path, but the actual directory, so that\'s way ""...database_directory"".', 'comment_created': datetime.datetime(2020, 6, 18, 3, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442593732, 'comment_body': ""Since the true branch of the if statement has return, you don't need else here and can move the try-except block one level left. This is does not change anything, but is makes the code simpler and the same logic is already used above: The good case returns, so the other case is just whatever follows after that."", 'comment_created': datetime.datetime(2020, 6, 19, 2, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442594169, 'comment_body': 'Simple `candidate = os.path...` will suffice here in both cases. It is either or and at one point you have only one candidate. This removes the need for the loop over the candidates list below.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443089786, 'comment_body': 'The ""case independent"" does not make sense here. Simplify further, by merging the two comments together and saying something like ""Determine the standard path according to a platform.""\r\n\r\nWhile you are at it, you can drop the ""candidate"" terminology from the variable name too. What candidate refers to here? It really makes sense only in the other function. Simple `path` will be probably more descriptive here. And going further, the `tmp` variable can be called `path` too because in a way it is no different from the `path` before, it replaces it for all intents and purposes.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443090593, 'comment_body': 'The intended behavior may not be clear from the code, so add another comment saying something like ""The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. The positive outcome is that another GRASS instance will find the data created by the first one which is desired in the ""try out GRASS"" use case we are aiming towards."" See the original ticket for alternative formulation of this.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091183, 'comment_body': 'Say something like ""Create a temporary ""grassdata"" directory if GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases.""\r\n\r\n(Note that a line should be 88 characters or less.)', 'comment_created': datetime.datetime(2020, 6, 20, 1, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091474, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))\r\n', 'comment_created': datetime.datetime(2020, 6, 20, 1, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091580, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091600, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091611, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091621, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091633, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091641, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443148404, 'comment_body': 'Hopefully the last change, sorry I missed this before: there are other platforms (see https://stackoverflow.com/questions/446209/possible-values-from-sys-platform) so we should probably have it more like this (and treat windows as special case):\r\n\r\n```\r\nif sys.platform == \'win32\':\r\n    path = os.path.join(home, ""Documents"", ""grassdata"")\r\nelse:\r\n    path = os.path.join(home, ""grassdata"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 17, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '39bc6b7cc5e89da49325bb6bd78b02454376f37e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7499fc250e9c5c1004b7250e03d6bd437c1a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '987cfa3b0b5a4383407b74178e1e1f4c3c7c2105', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee63c49feac9b7666af2819b1048e9ea86b4267b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef1e7ccf3e4fb145a68b8fd1295d76baa1c300d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2a8be1c28ba993c5ff8a76299ef0cdf2a8f997f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2b23ed6717f52b2abc98534df25739be3e589e25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '711436a1057b738d040370a9111a0f44c8433187', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
433804729,wxgui: Create grassdata automatically on the first GUI startup ,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). If nothing is found, GRASS GIS (GUI) should automatically create directory named grassdata as a subdirectory of a platfrom-dependent directory. This platfrom-dependent directory would be:

- $HOME (os.path.expanduser('~')) on Linux and the like,
- User's Documents on Windows (see dac6d4a for code trying to identify that dir),
 - One of the above on macOS - macOS users, please share your ideas.

If that fails (GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases) it should use a temporary directory (/tmp/... etc.) as a fallback. 
The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. ",True,705,https://api.github.com/repos/OSGeo/grass/pulls/705,https://github.com/OSGeo/grass/pull/705,closed,56,1,2,8,0,32,1,0,[{'name': 'gsoc'}],2020-06-12 17:31:34+00:00,2020-06-23 02:48:29+00:00,897415.0,"10 days, 9:16:55","[{'comment_id': 439719965, 'comment_body': 'Why _() in the path? Localized Windows should understand Documents.', 'comment_created': datetime.datetime(2020, 6, 13, 8, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439784274, 'comment_body': 'This goes against ""If even [the temporary directory fallback] fails, GRASS should not fail, but simply let the user make that choice which is the current behavior."" from #682.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784342, 'comment_body': 'This should be created only once it is really needed. (Otherwise, the tmp dir will be created and not deleted every time thing function runs.)', 'comment_created': datetime.datetime(2020, 6, 14, 2, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784563, 'comment_body': 'The `path` is already set at this point even when exception was raised, so your line `if path is None:` will have path which is not None and thus the functions will just return this path.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784774, 'comment_body': 'We may decide to refine it and give more info to the user through GUI, but at this point and in this function, there is no need to report the failure in any way. This function has a fallback which is the tmp dir and the original calling code has its own fallback solution. ', 'comment_created': datetime.datetime(2020, 6, 14, 2, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784900, 'comment_body': 'This comes from dac6d4add511cb47d3329d2c06fdb441b75822f4 - see the comment there. I would not bother with that for this function and just go with `Documents` only.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784998, 'comment_body': 'This still should be there. (#682:  ""If even [the temporary directory fallback] fails, [...] simply let the user make that choice which is the current behavior."")', 'comment_created': datetime.datetime(2020, 6, 14, 2, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785212, 'comment_body': 'possible -> standard, fix wording of ""directory to what is""', 'comment_created': datetime.datetime(2020, 6, 14, 2, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785373, 'comment_body': 'Something like ""...in the standard location according to the platform."" And also mention the fallback.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441941134, 'comment_body': 'Please remove this extra change. Also in PEP8, there is only one empty line between methods.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942469, 'comment_body': 'Based on what the function does and what the context is, the comment should be ""...try to create...""', 'comment_created': datetime.datetime(2020, 6, 18, 3, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942745, 'comment_body': 'What the word ""independent"" refers to here?', 'comment_created': datetime.datetime(2020, 6, 18, 3, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441945594, 'comment_body': 'As I said, here in this new function, I would not bother with translations here as this is more future oriented and we hope that every new system will be set in a way that there is ""Documents"". So, I\'m saying, delete the `""candidates.append(os.path.join(home, _(""Documents""), ""grassdata""))""` part.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441946904, 'comment_body': ""Here, you don't have to assign to a variable here, just return candidate right away."", 'comment_created': datetime.datetime(2020, 6, 18, 3, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949253, 'comment_body': 'According to PEP8, `t` from `tempfile` and `""` from `""grassdata...` should be aligned. Another option is to use Black style which puts this into 4 lines if it is longer than 88 characters:\r\n\r\n```\r\ntmp = os.path.join(\r\n    tempfile.gettempdir(),\r\n    ""grassdata_{}"".format(getpass.getuser())\r\n) \r\n```\r\n\r\nYou can run Flake8 on any file you edit to see these things. Unfortunately, you will get a lot of warning and errors from other lines you did not edit and you need to ignore those (this will get better in the future as we make more files PEP8, Flake8, and Black compliant).', 'comment_created': datetime.datetime(2020, 6, 18, 3, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949674, 'comment_body': 'Again, just return here is enough.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949853, 'comment_body': 'Only return is needed here, no assignment.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949974, 'comment_body': 'Control -> Check', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441950905, 'comment_body': '`create_possible_database_path()` -> `create_database_directory()`\r\n\r\nThe GRASS terminology here is all over the place here (grassdata, gisbase, ...), but ""possible"" does not make sense here and we are not creating a path, but the actual directory, so that\'s way ""...database_directory"".', 'comment_created': datetime.datetime(2020, 6, 18, 3, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442593732, 'comment_body': ""Since the true branch of the if statement has return, you don't need else here and can move the try-except block one level left. This is does not change anything, but is makes the code simpler and the same logic is already used above: The good case returns, so the other case is just whatever follows after that."", 'comment_created': datetime.datetime(2020, 6, 19, 2, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442594169, 'comment_body': 'Simple `candidate = os.path...` will suffice here in both cases. It is either or and at one point you have only one candidate. This removes the need for the loop over the candidates list below.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443089786, 'comment_body': 'The ""case independent"" does not make sense here. Simplify further, by merging the two comments together and saying something like ""Determine the standard path according to a platform.""\r\n\r\nWhile you are at it, you can drop the ""candidate"" terminology from the variable name too. What candidate refers to here? It really makes sense only in the other function. Simple `path` will be probably more descriptive here. And going further, the `tmp` variable can be called `path` too because in a way it is no different from the `path` before, it replaces it for all intents and purposes.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443090593, 'comment_body': 'The intended behavior may not be clear from the code, so add another comment saying something like ""The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. The positive outcome is that another GRASS instance will find the data created by the first one which is desired in the ""try out GRASS"" use case we are aiming towards."" See the original ticket for alternative formulation of this.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091183, 'comment_body': 'Say something like ""Create a temporary ""grassdata"" directory if GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases.""\r\n\r\n(Note that a line should be 88 characters or less.)', 'comment_created': datetime.datetime(2020, 6, 20, 1, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091474, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))\r\n', 'comment_created': datetime.datetime(2020, 6, 20, 1, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091580, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091600, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091611, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091621, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091633, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091641, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443148404, 'comment_body': 'Hopefully the last change, sorry I missed this before: there are other platforms (see https://stackoverflow.com/questions/446209/possible-values-from-sys-platform) so we should probably have it more like this (and treat windows as special case):\r\n\r\n```\r\nif sys.platform == \'win32\':\r\n    path = os.path.join(home, ""Documents"", ""grassdata"")\r\nelse:\r\n    path = os.path.join(home, ""grassdata"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 17, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '39bc6b7cc5e89da49325bb6bd78b02454376f37e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7499fc250e9c5c1004b7250e03d6bd437c1a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '987cfa3b0b5a4383407b74178e1e1f4c3c7c2105', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee63c49feac9b7666af2819b1048e9ea86b4267b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef1e7ccf3e4fb145a68b8fd1295d76baa1c300d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2a8be1c28ba993c5ff8a76299ef0cdf2a8f997f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2b23ed6717f52b2abc98534df25739be3e589e25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '711436a1057b738d040370a9111a0f44c8433187', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
433804729,wxgui: Create grassdata automatically on the first GUI startup ,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). If nothing is found, GRASS GIS (GUI) should automatically create directory named grassdata as a subdirectory of a platfrom-dependent directory. This platfrom-dependent directory would be:

- $HOME (os.path.expanduser('~')) on Linux and the like,
- User's Documents on Windows (see dac6d4a for code trying to identify that dir),
 - One of the above on macOS - macOS users, please share your ideas.

If that fails (GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases) it should use a temporary directory (/tmp/... etc.) as a fallback. 
The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. ",True,705,https://api.github.com/repos/OSGeo/grass/pulls/705,https://github.com/OSGeo/grass/pull/705,closed,56,1,2,8,0,32,1,0,[{'name': 'gsoc'}],2020-06-12 17:31:34+00:00,2020-06-23 02:48:29+00:00,897415.0,"10 days, 9:16:55","[{'comment_id': 439719965, 'comment_body': 'Why _() in the path? Localized Windows should understand Documents.', 'comment_created': datetime.datetime(2020, 6, 13, 8, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439784274, 'comment_body': 'This goes against ""If even [the temporary directory fallback] fails, GRASS should not fail, but simply let the user make that choice which is the current behavior."" from #682.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784342, 'comment_body': 'This should be created only once it is really needed. (Otherwise, the tmp dir will be created and not deleted every time thing function runs.)', 'comment_created': datetime.datetime(2020, 6, 14, 2, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784563, 'comment_body': 'The `path` is already set at this point even when exception was raised, so your line `if path is None:` will have path which is not None and thus the functions will just return this path.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784774, 'comment_body': 'We may decide to refine it and give more info to the user through GUI, but at this point and in this function, there is no need to report the failure in any way. This function has a fallback which is the tmp dir and the original calling code has its own fallback solution. ', 'comment_created': datetime.datetime(2020, 6, 14, 2, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784900, 'comment_body': 'This comes from dac6d4add511cb47d3329d2c06fdb441b75822f4 - see the comment there. I would not bother with that for this function and just go with `Documents` only.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784998, 'comment_body': 'This still should be there. (#682:  ""If even [the temporary directory fallback] fails, [...] simply let the user make that choice which is the current behavior."")', 'comment_created': datetime.datetime(2020, 6, 14, 2, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785212, 'comment_body': 'possible -> standard, fix wording of ""directory to what is""', 'comment_created': datetime.datetime(2020, 6, 14, 2, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785373, 'comment_body': 'Something like ""...in the standard location according to the platform."" And also mention the fallback.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441941134, 'comment_body': 'Please remove this extra change. Also in PEP8, there is only one empty line between methods.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942469, 'comment_body': 'Based on what the function does and what the context is, the comment should be ""...try to create...""', 'comment_created': datetime.datetime(2020, 6, 18, 3, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942745, 'comment_body': 'What the word ""independent"" refers to here?', 'comment_created': datetime.datetime(2020, 6, 18, 3, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441945594, 'comment_body': 'As I said, here in this new function, I would not bother with translations here as this is more future oriented and we hope that every new system will be set in a way that there is ""Documents"". So, I\'m saying, delete the `""candidates.append(os.path.join(home, _(""Documents""), ""grassdata""))""` part.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441946904, 'comment_body': ""Here, you don't have to assign to a variable here, just return candidate right away."", 'comment_created': datetime.datetime(2020, 6, 18, 3, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949253, 'comment_body': 'According to PEP8, `t` from `tempfile` and `""` from `""grassdata...` should be aligned. Another option is to use Black style which puts this into 4 lines if it is longer than 88 characters:\r\n\r\n```\r\ntmp = os.path.join(\r\n    tempfile.gettempdir(),\r\n    ""grassdata_{}"".format(getpass.getuser())\r\n) \r\n```\r\n\r\nYou can run Flake8 on any file you edit to see these things. Unfortunately, you will get a lot of warning and errors from other lines you did not edit and you need to ignore those (this will get better in the future as we make more files PEP8, Flake8, and Black compliant).', 'comment_created': datetime.datetime(2020, 6, 18, 3, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949674, 'comment_body': 'Again, just return here is enough.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949853, 'comment_body': 'Only return is needed here, no assignment.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949974, 'comment_body': 'Control -> Check', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441950905, 'comment_body': '`create_possible_database_path()` -> `create_database_directory()`\r\n\r\nThe GRASS terminology here is all over the place here (grassdata, gisbase, ...), but ""possible"" does not make sense here and we are not creating a path, but the actual directory, so that\'s way ""...database_directory"".', 'comment_created': datetime.datetime(2020, 6, 18, 3, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442593732, 'comment_body': ""Since the true branch of the if statement has return, you don't need else here and can move the try-except block one level left. This is does not change anything, but is makes the code simpler and the same logic is already used above: The good case returns, so the other case is just whatever follows after that."", 'comment_created': datetime.datetime(2020, 6, 19, 2, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442594169, 'comment_body': 'Simple `candidate = os.path...` will suffice here in both cases. It is either or and at one point you have only one candidate. This removes the need for the loop over the candidates list below.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443089786, 'comment_body': 'The ""case independent"" does not make sense here. Simplify further, by merging the two comments together and saying something like ""Determine the standard path according to a platform.""\r\n\r\nWhile you are at it, you can drop the ""candidate"" terminology from the variable name too. What candidate refers to here? It really makes sense only in the other function. Simple `path` will be probably more descriptive here. And going further, the `tmp` variable can be called `path` too because in a way it is no different from the `path` before, it replaces it for all intents and purposes.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443090593, 'comment_body': 'The intended behavior may not be clear from the code, so add another comment saying something like ""The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. The positive outcome is that another GRASS instance will find the data created by the first one which is desired in the ""try out GRASS"" use case we are aiming towards."" See the original ticket for alternative formulation of this.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091183, 'comment_body': 'Say something like ""Create a temporary ""grassdata"" directory if GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases.""\r\n\r\n(Note that a line should be 88 characters or less.)', 'comment_created': datetime.datetime(2020, 6, 20, 1, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091474, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))\r\n', 'comment_created': datetime.datetime(2020, 6, 20, 1, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091580, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091600, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091611, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091621, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091633, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091641, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443148404, 'comment_body': 'Hopefully the last change, sorry I missed this before: there are other platforms (see https://stackoverflow.com/questions/446209/possible-values-from-sys-platform) so we should probably have it more like this (and treat windows as special case):\r\n\r\n```\r\nif sys.platform == \'win32\':\r\n    path = os.path.join(home, ""Documents"", ""grassdata"")\r\nelse:\r\n    path = os.path.join(home, ""grassdata"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 17, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '39bc6b7cc5e89da49325bb6bd78b02454376f37e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7499fc250e9c5c1004b7250e03d6bd437c1a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '987cfa3b0b5a4383407b74178e1e1f4c3c7c2105', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee63c49feac9b7666af2819b1048e9ea86b4267b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef1e7ccf3e4fb145a68b8fd1295d76baa1c300d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2a8be1c28ba993c5ff8a76299ef0cdf2a8f997f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2b23ed6717f52b2abc98534df25739be3e589e25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '711436a1057b738d040370a9111a0f44c8433187', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
437025601,wxGUI loc wizard: Improve new location's CRS method selection page,"In the third commit I have a issue after confirmation of WKT Summary page:
![Screenshot from 2020-06-20 15-10-54](https://user-images.githubusercontent.com/49241681/85210757-48295500-b308-11ea-9115-e89efc436424.png)
Still wants to open a WKT file but I am not able to figure out where is the core of this problem.",True,721,https://api.github.com/repos/OSGeo/grass/pulls/721,https://github.com/OSGeo/grass/pull/721,closed,55,83,1,5,1,11,1,0,[{'name': 'gsoc'}],2020-06-19 10:36:12+00:00,2020-06-23 02:32:50+00:00,316598.0,"3 days, 15:56:38","[{'comment_id': 442831461, 'comment_body': 'I was suggestion dropping ""simple methods"" altogether and using ""Select Coordinate Reference System (CRS)"" as the title of the page.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442833874, 'comment_body': 'Use ""Additional methods"", definitely not Advanced additional methods.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838254, 'comment_body': 'name it something like wktstring', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838351, 'comment_body': 'WHITESPACE!', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442840103, 'comment_body': 'To keep things consistent with the rest, the WKTPage doesn\'t change much (except for the layout). g.proj is called in Summary page:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=self.parent.wktpage.wktfile, **extra_opts)\r\n```\r\n\r\nso you need to adjust the code here. So OnPageChanging should stay similar to what was there before. The RunCommand in Summary page should look something like this:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=""-"", stdin=self.parent.wktpage.wktstring, **extra_opts)\r\n```\r\n(not tested)', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443149825, 'comment_body': 'Maybe ""matches WKT string"" would be better.\r\nMore importantly, the string is long, so you need to change the widget to enable scrolling, it should be similar to panelProj4string in SummaryPage.', 'comment_created': datetime.datetime(2020, 6, 20, 18, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176094, 'comment_body': ""This should still be called OnText, since it's event handler. If you name a function GetWKTString, I would expect it to return a string, which is not the case here."", 'comment_created': datetime.datetime(2020, 6, 21, 2, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176259, 'comment_body': '""Select CRS from a list"" should be the title of the EPSGPage as well.', 'comment_created': datetime.datetime(2020, 6, 21, 2, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176884, 'comment_body': ""There needs to be a condition, you are trying to prevent from going to next page if there is no text (previously - if the file doesn't exist). Ideally it would check the WKT string is valid, but that's very difficult, so we will just check for any string. It's technically not needed because you already deal with that by disabling the next button, but let's keep it there.\r\n\r\n I was surprised your current code works since you don't have any condition there (so it would prevent the page from switching every time), but that's because of the event.Skip() - you need to remove it from there. Please also remove event Skip from GeoreferencedFilePage (the same function), it's the same case, it shouldn't be there."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176975, 'comment_body': ""The error you are getting comes from this function, it expects file not string. I created a separate PR #723, so you don't need to deal with that."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443245131, 'comment_body': 'simply just `if event.GetDirection() and not self.wktstring.strip():` should suffice.', 'comment_created': datetime.datetime(2020, 6, 21, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ee7ad16e86be3cd805b9be4527ab552c18abddba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36b93e39b6fcab71cb6433f894894d5cfa23abe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55173897914c5312c35a4a2d3ce5929cfa758910', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1110496ef80cbd868cb3b08440784a3b74425f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cc46ff3a803ad0f7a2eccb3843f926e8d848a1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
437025601,wxGUI loc wizard: Improve new location's CRS method selection page,"In the third commit I have a issue after confirmation of WKT Summary page:
![Screenshot from 2020-06-20 15-10-54](https://user-images.githubusercontent.com/49241681/85210757-48295500-b308-11ea-9115-e89efc436424.png)
Still wants to open a WKT file but I am not able to figure out where is the core of this problem.",True,721,https://api.github.com/repos/OSGeo/grass/pulls/721,https://github.com/OSGeo/grass/pull/721,closed,55,83,1,5,1,11,1,0,[{'name': 'gsoc'}],2020-06-19 10:36:12+00:00,2020-06-23 02:32:50+00:00,316598.0,"3 days, 15:56:38","[{'comment_id': 442831461, 'comment_body': 'I was suggestion dropping ""simple methods"" altogether and using ""Select Coordinate Reference System (CRS)"" as the title of the page.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442833874, 'comment_body': 'Use ""Additional methods"", definitely not Advanced additional methods.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838254, 'comment_body': 'name it something like wktstring', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838351, 'comment_body': 'WHITESPACE!', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442840103, 'comment_body': 'To keep things consistent with the rest, the WKTPage doesn\'t change much (except for the layout). g.proj is called in Summary page:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=self.parent.wktpage.wktfile, **extra_opts)\r\n```\r\n\r\nso you need to adjust the code here. So OnPageChanging should stay similar to what was there before. The RunCommand in Summary page should look something like this:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=""-"", stdin=self.parent.wktpage.wktstring, **extra_opts)\r\n```\r\n(not tested)', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443149825, 'comment_body': 'Maybe ""matches WKT string"" would be better.\r\nMore importantly, the string is long, so you need to change the widget to enable scrolling, it should be similar to panelProj4string in SummaryPage.', 'comment_created': datetime.datetime(2020, 6, 20, 18, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176094, 'comment_body': ""This should still be called OnText, since it's event handler. If you name a function GetWKTString, I would expect it to return a string, which is not the case here."", 'comment_created': datetime.datetime(2020, 6, 21, 2, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176259, 'comment_body': '""Select CRS from a list"" should be the title of the EPSGPage as well.', 'comment_created': datetime.datetime(2020, 6, 21, 2, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176884, 'comment_body': ""There needs to be a condition, you are trying to prevent from going to next page if there is no text (previously - if the file doesn't exist). Ideally it would check the WKT string is valid, but that's very difficult, so we will just check for any string. It's technically not needed because you already deal with that by disabling the next button, but let's keep it there.\r\n\r\n I was surprised your current code works since you don't have any condition there (so it would prevent the page from switching every time), but that's because of the event.Skip() - you need to remove it from there. Please also remove event Skip from GeoreferencedFilePage (the same function), it's the same case, it shouldn't be there."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176975, 'comment_body': ""The error you are getting comes from this function, it expects file not string. I created a separate PR #723, so you don't need to deal with that."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443245131, 'comment_body': 'simply just `if event.GetDirection() and not self.wktstring.strip():` should suffice.', 'comment_created': datetime.datetime(2020, 6, 21, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ee7ad16e86be3cd805b9be4527ab552c18abddba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36b93e39b6fcab71cb6433f894894d5cfa23abe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55173897914c5312c35a4a2d3ce5929cfa758910', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1110496ef80cbd868cb3b08440784a3b74425f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cc46ff3a803ad0f7a2eccb3843f926e8d848a1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
437025601,wxGUI loc wizard: Improve new location's CRS method selection page,"In the third commit I have a issue after confirmation of WKT Summary page:
![Screenshot from 2020-06-20 15-10-54](https://user-images.githubusercontent.com/49241681/85210757-48295500-b308-11ea-9115-e89efc436424.png)
Still wants to open a WKT file but I am not able to figure out where is the core of this problem.",True,721,https://api.github.com/repos/OSGeo/grass/pulls/721,https://github.com/OSGeo/grass/pull/721,closed,55,83,1,5,1,11,1,0,[{'name': 'gsoc'}],2020-06-19 10:36:12+00:00,2020-06-23 02:32:50+00:00,316598.0,"3 days, 15:56:38","[{'comment_id': 442831461, 'comment_body': 'I was suggestion dropping ""simple methods"" altogether and using ""Select Coordinate Reference System (CRS)"" as the title of the page.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442833874, 'comment_body': 'Use ""Additional methods"", definitely not Advanced additional methods.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838254, 'comment_body': 'name it something like wktstring', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838351, 'comment_body': 'WHITESPACE!', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442840103, 'comment_body': 'To keep things consistent with the rest, the WKTPage doesn\'t change much (except for the layout). g.proj is called in Summary page:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=self.parent.wktpage.wktfile, **extra_opts)\r\n```\r\n\r\nso you need to adjust the code here. So OnPageChanging should stay similar to what was there before. The RunCommand in Summary page should look something like this:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=""-"", stdin=self.parent.wktpage.wktstring, **extra_opts)\r\n```\r\n(not tested)', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443149825, 'comment_body': 'Maybe ""matches WKT string"" would be better.\r\nMore importantly, the string is long, so you need to change the widget to enable scrolling, it should be similar to panelProj4string in SummaryPage.', 'comment_created': datetime.datetime(2020, 6, 20, 18, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176094, 'comment_body': ""This should still be called OnText, since it's event handler. If you name a function GetWKTString, I would expect it to return a string, which is not the case here."", 'comment_created': datetime.datetime(2020, 6, 21, 2, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176259, 'comment_body': '""Select CRS from a list"" should be the title of the EPSGPage as well.', 'comment_created': datetime.datetime(2020, 6, 21, 2, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176884, 'comment_body': ""There needs to be a condition, you are trying to prevent from going to next page if there is no text (previously - if the file doesn't exist). Ideally it would check the WKT string is valid, but that's very difficult, so we will just check for any string. It's technically not needed because you already deal with that by disabling the next button, but let's keep it there.\r\n\r\n I was surprised your current code works since you don't have any condition there (so it would prevent the page from switching every time), but that's because of the event.Skip() - you need to remove it from there. Please also remove event Skip from GeoreferencedFilePage (the same function), it's the same case, it shouldn't be there."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176975, 'comment_body': ""The error you are getting comes from this function, it expects file not string. I created a separate PR #723, so you don't need to deal with that."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443245131, 'comment_body': 'simply just `if event.GetDirection() and not self.wktstring.strip():` should suffice.', 'comment_created': datetime.datetime(2020, 6, 21, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ee7ad16e86be3cd805b9be4527ab552c18abddba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36b93e39b6fcab71cb6433f894894d5cfa23abe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55173897914c5312c35a4a2d3ce5929cfa758910', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1110496ef80cbd868cb3b08440784a3b74425f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cc46ff3a803ad0f7a2eccb3843f926e8d848a1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438030371,wxGUI loc wizard: Correct errors according to flake 8 and add some description,"wxGUI/Location Wizard: Corrected errors according to flake8 (errors E402,E821,E722 ignored), added some description.",True,728,https://api.github.com/repos/OSGeo/grass/pulls/728,https://github.com/OSGeo/grass/pull/728,closed,80,85,1,3,0,1,1,0,[{'name': 'gsoc'}],2020-06-22 15:47:26+00:00,2020-06-25 02:48:44+00:00,212478.0,"2 days, 11:01:18","[{'comment_id': 443925318, 'comment_body': ""I don't see a reason why this code should be kept there and there is no comment saying that either, so I would say just delete that."", 'comment_created': datetime.datetime(2020, 6, 23, 2, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '56b04dd3eac50831ef5b9991761c5ab3f87f925a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0b6e17d9d7c67f0293401f85a4b430546fd3fdbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '23dc09e6d3af4f7490abb23cc3637b965ff61643', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
440097311,wxGUI: IndexError after right click on 'GRASS Locations in...' in the Data tab,wxGUI/datacatalog: Corrected index error after right click on 'GRASS Locations in..' tab in the data tab.,True,736,https://api.github.com/repos/OSGeo/grass/pulls/736,https://github.com/OSGeo/grass/pull/736,closed,3,1,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-06-25 15:29:42+00:00,2020-06-26 01:39:37+00:00,36595.0,10:09:55,[],"[{'commit_sha': 'e1dfc8dd5124c25a7bf40a36646b15375dc3a126', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438788813,wxGUI: Add new mapset action to data catalog,"

",True,731,https://api.github.com/repos/OSGeo/grass/pulls/731,https://github.com/OSGeo/grass/pull/731,closed,179,77,5,9,1,41,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-06-23 20:00:35+00:00,2020-07-01 01:56:12+00:00,626137.0,"7 days, 5:55:37","[{'comment_id': 444617948, 'comment_body': 'We do not need the help handler here', 'comment_created': datetime.datetime(2020, 6, 24, 3, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618181, 'comment_body': 'This function would be basically just reduced to calling create_mapset.', 'comment_created': datetime.datetime(2020, 6, 24, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618420, 'comment_body': 'Should be dealt with by the validator inside the dialog', 'comment_created': datetime.datetime(2020, 6, 24, 3, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619018, 'comment_body': ""there is no self.gisdbase, you can get it e.g. as `gisenv()['GISDBASE']`"", 'comment_created': datetime.datetime(2020, 6, 24, 3, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619138, 'comment_body': 'delete, copied from startup screen. Instead you will need to add the mapset node into the tree, see e.g. InsertLayer() in tree.py how it is done for layers (it should be simpler for mapsets).', 'comment_created': datetime.datetime(2020, 6, 24, 3, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444620936, 'comment_body': 'not used, it is actually causing error when right clicking on current location, just remove it', 'comment_created': datetime.datetime(2020, 6, 24, 3, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445590258, 'comment_body': 'This is not correct, please try to run the code line by line in your mind or on paper and see what the problem is.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445592197, 'comment_body': 'location_node is a of type class DictNode (treemodel.py), not string. Why to pass twice mapset?\r\nYou need to pass location node (probably self.selected_location[0] should work). Then most of the code in InsertMapset is to be removed.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622162, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622391, 'comment_body': 'no SetSessionMapset needed', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445624092, 'comment_body': ""Don't use self if you don't need the variable outside of the method.\r\n\r\nThis creates mapset in your current location, not in the selected location."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628447, 'comment_body': ""It's a good practice to make the exception more specific if you can. For example, put it only around create_mapset and if  you can see what type of exception it throws, it's better to limit it too."", 'comment_created': datetime.datetime(2020, 6, 25, 15, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628781, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445629371, 'comment_body': 'see comment about self above', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631393, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 6, 25, 15, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631685, 'comment_body': 'remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632312, 'comment_body': 'if function is called checkMapsetExists, you expect to return True if it exists', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632745, 'comment_body': 'missing space after dot, remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633216, 'comment_body': 'newline missing', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633557, 'comment_body': 'be more specific about the exception', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446495515, 'comment_body': 'Not sure how to simplify InsertMapset function. And not sure what parameter name means. I think it is necessary to include it but in this case it does not make much sense.', 'comment_created': datetime.datetime(2020, 6, 27, 7, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446495740, 'comment_body': 'Could you give me some example?', 'comment_created': datetime.datetime(2020, 6, 27, 7, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446561721, 'comment_body': ""This function doesn't need to return T/F, just return."", 'comment_created': datetime.datetime(2020, 6, 27, 19, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561798, 'comment_body': 'Seems this is never called since you return True before that.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561843, 'comment_body': 'Just to keep it short, Create mapset is sufficient.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562136, 'comment_body': ""similar here, I don't think you need to return T/F here"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562183, 'comment_body': 'add the name in the comment at beginning of the file', 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562312, 'comment_body': 'check indentation here', 'comment_created': datetime.datetime(2020, 6, 27, 20, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562655, 'comment_body': 'use UnicodeEncodeError', 'comment_created': datetime.datetime(2020, 6, 27, 20, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563315, 'comment_body': ""parent is parent node (here location node), label is mapset name and type is type of node ('mapset' here)"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563362, 'comment_body': ""you don't need this"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564563, 'comment_body': ""For type of error, either just simply try it in a python shell if that's simple, or check Python documentation. You can use OSError here.\r\nPlease also read e.g. https://realpython.com/python-exceptions/ and https://realpython.com/the-most-diabolical-python-antipattern/ (ignore the logging part), that should clarify the syntax and motivation."", 'comment_created': datetime.datetime(2020, 6, 27, 20, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564874, 'comment_body': 'not sure why the selected_type, I think it should be selected_mapset instead, but I am not sure, please test that.', 'comment_created': datetime.datetime(2020, 6, 27, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446609514, 'comment_body': 'I have a problem with parameters ""name"" and ""mapset_name"":\r\n            self.InsertMapset(name=mapset,\r\n                              location_node=self.selected_location[0],\r\n                              mapset_name=mapset)\r\nI know that it is not possible to have two same parameters but do not know what else to insert for \'name\' . \r\nNow I am in this situation. I can create and refresh mapset but the tree has another branch:\r\n![Screenshot from 2020-06-28 01-46-27](https://user-images.githubusercontent.com/49241681/85940380-967abd00-b8e1-11ea-8692-df5a19f68819.png)\r\nI spent several hours on that and do not know how to solve it. I is probably simple but I cannot figure that out. ', 'comment_created': datetime.datetime(2020, 6, 28, 6, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446681351, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681398, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681834, 'comment_body': 'I am not sure what\'s the problem here, it is pretty simple:\r\n\r\n```\r\n    def InsertMapset(self, name, location_node):\r\n        """"""Insert mapset into model and refresh tree""""""\r\n        self._model.AppendNode(parent=location_node, label=name,\r\n                               data=dict(type=\'mapset\', name=name))\r\n        self._model.SortChildren(location_node)\r\n        self.RefreshNode(location_node, recursive=True)\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 28, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681972, 'comment_body': 'remove print statements', 'comment_created': datetime.datetime(2020, 6, 28, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446682065, 'comment_body': 'please add yourself here', 'comment_created': datetime.datetime(2020, 6, 28, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447676056, 'comment_body': 'This is obviously not right, please fix again. Use format function.\r\n![Existing mapset path_020](https://user-images.githubusercontent.com/7494312/86130899-e197fa00-bab2-11ea-80c1-afd4cbdf1df2.png)\r\n\r\nIt should look like `Mapset <anna> already exists...`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447871860, 'comment_body': 'minor: missing space after comma', 'comment_created': datetime.datetime(2020, 6, 30, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'bf8685e929fad1561acde20bc7a86ccc355d3f16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37f2af25111531170375f9ba0edfd66f318651dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e47aa68425283557ce1d2687eb8d5629c18716b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '670fd0bf9927e70a026531c8d19549f31f34ab0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5057a270e6dfdb90b0221148b7620a050d720e43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d80f6cb42b05ec28ae867ea7c00ef1af97d1b3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feafc7378b2fe48cb674dbb0d0904aefced8edef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3feca0ac90b0c04b5b28287e99fdc15933c3ce9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e093c65c0af2b0a5e0847322ec5b4a6a5c4a68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438788813,wxGUI: Add new mapset action to data catalog,"

",True,731,https://api.github.com/repos/OSGeo/grass/pulls/731,https://github.com/OSGeo/grass/pull/731,closed,179,77,5,9,1,41,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-06-23 20:00:35+00:00,2020-07-01 01:56:12+00:00,626137.0,"7 days, 5:55:37","[{'comment_id': 444617948, 'comment_body': 'We do not need the help handler here', 'comment_created': datetime.datetime(2020, 6, 24, 3, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618181, 'comment_body': 'This function would be basically just reduced to calling create_mapset.', 'comment_created': datetime.datetime(2020, 6, 24, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618420, 'comment_body': 'Should be dealt with by the validator inside the dialog', 'comment_created': datetime.datetime(2020, 6, 24, 3, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619018, 'comment_body': ""there is no self.gisdbase, you can get it e.g. as `gisenv()['GISDBASE']`"", 'comment_created': datetime.datetime(2020, 6, 24, 3, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619138, 'comment_body': 'delete, copied from startup screen. Instead you will need to add the mapset node into the tree, see e.g. InsertLayer() in tree.py how it is done for layers (it should be simpler for mapsets).', 'comment_created': datetime.datetime(2020, 6, 24, 3, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444620936, 'comment_body': 'not used, it is actually causing error when right clicking on current location, just remove it', 'comment_created': datetime.datetime(2020, 6, 24, 3, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445590258, 'comment_body': 'This is not correct, please try to run the code line by line in your mind or on paper and see what the problem is.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445592197, 'comment_body': 'location_node is a of type class DictNode (treemodel.py), not string. Why to pass twice mapset?\r\nYou need to pass location node (probably self.selected_location[0] should work). Then most of the code in InsertMapset is to be removed.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622162, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622391, 'comment_body': 'no SetSessionMapset needed', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445624092, 'comment_body': ""Don't use self if you don't need the variable outside of the method.\r\n\r\nThis creates mapset in your current location, not in the selected location."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628447, 'comment_body': ""It's a good practice to make the exception more specific if you can. For example, put it only around create_mapset and if  you can see what type of exception it throws, it's better to limit it too."", 'comment_created': datetime.datetime(2020, 6, 25, 15, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628781, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445629371, 'comment_body': 'see comment about self above', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631393, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 6, 25, 15, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631685, 'comment_body': 'remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632312, 'comment_body': 'if function is called checkMapsetExists, you expect to return True if it exists', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632745, 'comment_body': 'missing space after dot, remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633216, 'comment_body': 'newline missing', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633557, 'comment_body': 'be more specific about the exception', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446495515, 'comment_body': 'Not sure how to simplify InsertMapset function. And not sure what parameter name means. I think it is necessary to include it but in this case it does not make much sense.', 'comment_created': datetime.datetime(2020, 6, 27, 7, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446495740, 'comment_body': 'Could you give me some example?', 'comment_created': datetime.datetime(2020, 6, 27, 7, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446561721, 'comment_body': ""This function doesn't need to return T/F, just return."", 'comment_created': datetime.datetime(2020, 6, 27, 19, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561798, 'comment_body': 'Seems this is never called since you return True before that.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561843, 'comment_body': 'Just to keep it short, Create mapset is sufficient.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562136, 'comment_body': ""similar here, I don't think you need to return T/F here"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562183, 'comment_body': 'add the name in the comment at beginning of the file', 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562312, 'comment_body': 'check indentation here', 'comment_created': datetime.datetime(2020, 6, 27, 20, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562655, 'comment_body': 'use UnicodeEncodeError', 'comment_created': datetime.datetime(2020, 6, 27, 20, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563315, 'comment_body': ""parent is parent node (here location node), label is mapset name and type is type of node ('mapset' here)"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563362, 'comment_body': ""you don't need this"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564563, 'comment_body': ""For type of error, either just simply try it in a python shell if that's simple, or check Python documentation. You can use OSError here.\r\nPlease also read e.g. https://realpython.com/python-exceptions/ and https://realpython.com/the-most-diabolical-python-antipattern/ (ignore the logging part), that should clarify the syntax and motivation."", 'comment_created': datetime.datetime(2020, 6, 27, 20, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564874, 'comment_body': 'not sure why the selected_type, I think it should be selected_mapset instead, but I am not sure, please test that.', 'comment_created': datetime.datetime(2020, 6, 27, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446609514, 'comment_body': 'I have a problem with parameters ""name"" and ""mapset_name"":\r\n            self.InsertMapset(name=mapset,\r\n                              location_node=self.selected_location[0],\r\n                              mapset_name=mapset)\r\nI know that it is not possible to have two same parameters but do not know what else to insert for \'name\' . \r\nNow I am in this situation. I can create and refresh mapset but the tree has another branch:\r\n![Screenshot from 2020-06-28 01-46-27](https://user-images.githubusercontent.com/49241681/85940380-967abd00-b8e1-11ea-8692-df5a19f68819.png)\r\nI spent several hours on that and do not know how to solve it. I is probably simple but I cannot figure that out. ', 'comment_created': datetime.datetime(2020, 6, 28, 6, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446681351, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681398, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681834, 'comment_body': 'I am not sure what\'s the problem here, it is pretty simple:\r\n\r\n```\r\n    def InsertMapset(self, name, location_node):\r\n        """"""Insert mapset into model and refresh tree""""""\r\n        self._model.AppendNode(parent=location_node, label=name,\r\n                               data=dict(type=\'mapset\', name=name))\r\n        self._model.SortChildren(location_node)\r\n        self.RefreshNode(location_node, recursive=True)\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 28, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681972, 'comment_body': 'remove print statements', 'comment_created': datetime.datetime(2020, 6, 28, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446682065, 'comment_body': 'please add yourself here', 'comment_created': datetime.datetime(2020, 6, 28, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447676056, 'comment_body': 'This is obviously not right, please fix again. Use format function.\r\n![Existing mapset path_020](https://user-images.githubusercontent.com/7494312/86130899-e197fa00-bab2-11ea-80c1-afd4cbdf1df2.png)\r\n\r\nIt should look like `Mapset <anna> already exists...`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447871860, 'comment_body': 'minor: missing space after comma', 'comment_created': datetime.datetime(2020, 6, 30, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'bf8685e929fad1561acde20bc7a86ccc355d3f16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37f2af25111531170375f9ba0edfd66f318651dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e47aa68425283557ce1d2687eb8d5629c18716b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '670fd0bf9927e70a026531c8d19549f31f34ab0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5057a270e6dfdb90b0221148b7620a050d720e43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d80f6cb42b05ec28ae867ea7c00ef1af97d1b3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feafc7378b2fe48cb674dbb0d0904aefced8edef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3feca0ac90b0c04b5b28287e99fdc15933c3ce9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e093c65c0af2b0a5e0847322ec5b4a6a5c4a68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438788813,wxGUI: Add new mapset action to data catalog,"

",True,731,https://api.github.com/repos/OSGeo/grass/pulls/731,https://github.com/OSGeo/grass/pull/731,closed,179,77,5,9,1,41,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-06-23 20:00:35+00:00,2020-07-01 01:56:12+00:00,626137.0,"7 days, 5:55:37","[{'comment_id': 444617948, 'comment_body': 'We do not need the help handler here', 'comment_created': datetime.datetime(2020, 6, 24, 3, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618181, 'comment_body': 'This function would be basically just reduced to calling create_mapset.', 'comment_created': datetime.datetime(2020, 6, 24, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618420, 'comment_body': 'Should be dealt with by the validator inside the dialog', 'comment_created': datetime.datetime(2020, 6, 24, 3, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619018, 'comment_body': ""there is no self.gisdbase, you can get it e.g. as `gisenv()['GISDBASE']`"", 'comment_created': datetime.datetime(2020, 6, 24, 3, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619138, 'comment_body': 'delete, copied from startup screen. Instead you will need to add the mapset node into the tree, see e.g. InsertLayer() in tree.py how it is done for layers (it should be simpler for mapsets).', 'comment_created': datetime.datetime(2020, 6, 24, 3, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444620936, 'comment_body': 'not used, it is actually causing error when right clicking on current location, just remove it', 'comment_created': datetime.datetime(2020, 6, 24, 3, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445590258, 'comment_body': 'This is not correct, please try to run the code line by line in your mind or on paper and see what the problem is.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445592197, 'comment_body': 'location_node is a of type class DictNode (treemodel.py), not string. Why to pass twice mapset?\r\nYou need to pass location node (probably self.selected_location[0] should work). Then most of the code in InsertMapset is to be removed.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622162, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622391, 'comment_body': 'no SetSessionMapset needed', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445624092, 'comment_body': ""Don't use self if you don't need the variable outside of the method.\r\n\r\nThis creates mapset in your current location, not in the selected location."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628447, 'comment_body': ""It's a good practice to make the exception more specific if you can. For example, put it only around create_mapset and if  you can see what type of exception it throws, it's better to limit it too."", 'comment_created': datetime.datetime(2020, 6, 25, 15, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628781, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445629371, 'comment_body': 'see comment about self above', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631393, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 6, 25, 15, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631685, 'comment_body': 'remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632312, 'comment_body': 'if function is called checkMapsetExists, you expect to return True if it exists', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632745, 'comment_body': 'missing space after dot, remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633216, 'comment_body': 'newline missing', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633557, 'comment_body': 'be more specific about the exception', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446495515, 'comment_body': 'Not sure how to simplify InsertMapset function. And not sure what parameter name means. I think it is necessary to include it but in this case it does not make much sense.', 'comment_created': datetime.datetime(2020, 6, 27, 7, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446495740, 'comment_body': 'Could you give me some example?', 'comment_created': datetime.datetime(2020, 6, 27, 7, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446561721, 'comment_body': ""This function doesn't need to return T/F, just return."", 'comment_created': datetime.datetime(2020, 6, 27, 19, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561798, 'comment_body': 'Seems this is never called since you return True before that.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561843, 'comment_body': 'Just to keep it short, Create mapset is sufficient.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562136, 'comment_body': ""similar here, I don't think you need to return T/F here"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562183, 'comment_body': 'add the name in the comment at beginning of the file', 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562312, 'comment_body': 'check indentation here', 'comment_created': datetime.datetime(2020, 6, 27, 20, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562655, 'comment_body': 'use UnicodeEncodeError', 'comment_created': datetime.datetime(2020, 6, 27, 20, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563315, 'comment_body': ""parent is parent node (here location node), label is mapset name and type is type of node ('mapset' here)"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563362, 'comment_body': ""you don't need this"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564563, 'comment_body': ""For type of error, either just simply try it in a python shell if that's simple, or check Python documentation. You can use OSError here.\r\nPlease also read e.g. https://realpython.com/python-exceptions/ and https://realpython.com/the-most-diabolical-python-antipattern/ (ignore the logging part), that should clarify the syntax and motivation."", 'comment_created': datetime.datetime(2020, 6, 27, 20, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564874, 'comment_body': 'not sure why the selected_type, I think it should be selected_mapset instead, but I am not sure, please test that.', 'comment_created': datetime.datetime(2020, 6, 27, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446609514, 'comment_body': 'I have a problem with parameters ""name"" and ""mapset_name"":\r\n            self.InsertMapset(name=mapset,\r\n                              location_node=self.selected_location[0],\r\n                              mapset_name=mapset)\r\nI know that it is not possible to have two same parameters but do not know what else to insert for \'name\' . \r\nNow I am in this situation. I can create and refresh mapset but the tree has another branch:\r\n![Screenshot from 2020-06-28 01-46-27](https://user-images.githubusercontent.com/49241681/85940380-967abd00-b8e1-11ea-8692-df5a19f68819.png)\r\nI spent several hours on that and do not know how to solve it. I is probably simple but I cannot figure that out. ', 'comment_created': datetime.datetime(2020, 6, 28, 6, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446681351, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681398, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681834, 'comment_body': 'I am not sure what\'s the problem here, it is pretty simple:\r\n\r\n```\r\n    def InsertMapset(self, name, location_node):\r\n        """"""Insert mapset into model and refresh tree""""""\r\n        self._model.AppendNode(parent=location_node, label=name,\r\n                               data=dict(type=\'mapset\', name=name))\r\n        self._model.SortChildren(location_node)\r\n        self.RefreshNode(location_node, recursive=True)\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 28, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681972, 'comment_body': 'remove print statements', 'comment_created': datetime.datetime(2020, 6, 28, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446682065, 'comment_body': 'please add yourself here', 'comment_created': datetime.datetime(2020, 6, 28, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447676056, 'comment_body': 'This is obviously not right, please fix again. Use format function.\r\n![Existing mapset path_020](https://user-images.githubusercontent.com/7494312/86130899-e197fa00-bab2-11ea-80c1-afd4cbdf1df2.png)\r\n\r\nIt should look like `Mapset <anna> already exists...`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447871860, 'comment_body': 'minor: missing space after comma', 'comment_created': datetime.datetime(2020, 6, 30, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'bf8685e929fad1561acde20bc7a86ccc355d3f16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37f2af25111531170375f9ba0edfd66f318651dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e47aa68425283557ce1d2687eb8d5629c18716b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '670fd0bf9927e70a026531c8d19549f31f34ab0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5057a270e6dfdb90b0221148b7620a050d720e43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d80f6cb42b05ec28ae867ea7c00ef1af97d1b3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feafc7378b2fe48cb674dbb0d0904aefced8edef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3feca0ac90b0c04b5b28287e99fdc15933c3ce9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e093c65c0af2b0a5e0847322ec5b4a6a5c4a68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
442754587,Make Data tab the default in GUI,wxGUI/frame: The Data tab and Layer tab were swapped so the Data tab is the first tab from the left and the default when the GUI opens.,True,756,https://api.github.com/repos/OSGeo/grass/pulls/756,https://github.com/OSGeo/grass/pull/756,closed,15,14,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-07-01 14:54:23+00:00,2020-07-02 02:00:23+00:00,39960.0,11:06:00,[],"[{'commit_sha': '41b941d56ae36900fb6c7c19c1a4d94c6c77636a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
442678497,wxGUI datacatalog: merge LocationMapTree and DataCatalogTree,Merged LocationMapTree and DataCatalogTree into new class DataCatalogTree inheriting from TreeView.,True,755,https://api.github.com/repos/OSGeo/grass/pulls/755,https://github.com/OSGeo/grass/pull/755,closed,34,53,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-07-01 12:51:13+00:00,2020-07-02 01:48:57+00:00,46664.0,12:57:44,[],"[{'commit_sha': 'c5796942809104ad50703d56a77805d11578cf96', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
444862259,Add rename and delete of Location and Mapset in Datacatalog,,True,771,https://api.github.com/repos/OSGeo/grass/pulls/771,https://github.com/OSGeo/grass/pull/771,closed,466,252,4,13,3,22,1,0,[{'name': 'gsoc'}],2020-07-06 15:54:11+00:00,2020-07-14 03:22:48+00:00,646117.0,"7 days, 11:28:37","[{'comment_id': 450493183, 'comment_body': 'Use already imported gscript', 'comment_created': datetime.datetime(2020, 7, 6, 21, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 450546405, 'comment_body': 'Does this work for you? When I enter any name, I always get `Location <definitevely-not-an-existing-directory> already exists in GRASS database`.', 'comment_created': datetime.datetime(2020, 7, 7, 0, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 450556671, 'comment_body': ""I'm afraid this is too much duplication with gis_set.py. Almost all lines of the function are the same as in gis_set.py. The simplest way to resolve that is creating `rename_mapset_interactively` function in startup.gutils. It should return the new name on success and `None` on failure. There will be some parameters related to the data such as the mapset to rename and some related to GUI such as parent (for the dialogs). The function will be then called here and in gis_set.py and surrounded by some things specific to each such as the ReloadTreeItems() call.\r\n\r\nThe same applies to the other functions as well.\r\n\r\n@landam @petrasovaa feel free to disagree here."", 'comment_created': datetime.datetime(2020, 7, 7, 1, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452582681, 'comment_body': 'The function is a good fit here. It is totally non-gui and fits with the other functions in this file.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452583010, 'comment_body': 'An empty line (without whitespace) is actually desired here. It separates a ""brief"" from a longer description of the function.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452583072, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452586519, 'comment_body': ""I don't know how mapset_exists() got here but both mapset_exists() and location_exists() should be in utils.py."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452588212, 'comment_body': 'Can you please take these new functions, paste them to a separate file, apply Black, and paste them back here? Perhaps check with Flake8 with default settings while you are at it. I see issues here and there, but this will likely just solve them automatically. ', 'comment_created': datetime.datetime(2020, 7, 10, 2, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452590711, 'comment_body': 'Why switch always? I though we talked about renaming not being trigger for switching. Switching is only needed when current mapset or current location are being renamed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452595425, 'comment_body': 'I would need you to document your intentions here in the code to understand what this is supposed to solve. Documentation and comments describing the intent are often useful even when writing the code as they force us to think about the code is supposed to do. For example, for a line `add_to_list(abc)` we should aim at answering questions such as: Why we are adding to the list? What is the intended outcome? What are the possible outcomes? What are the assumptions about `abc` or other things before `add_to_list()` is called?\r\n\r\nHow is this function different from `OnSwitchLocationMapset()`? Can there be only one function? Or two functions and one calling the other?', 'comment_created': datetime.datetime(2020, 7, 10, 2, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452596228, 'comment_body': 'Why to change the name?', 'comment_created': datetime.datetime(2020, 7, 10, 2, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452596895, 'comment_body': 'If you move this to where the old function was in the file, you will get a better view of your changes in the diff. (A more substantial change would be needed to create some better ordering of the functions here, so just keeping what is here seems to be the best course of action.)', 'comment_created': datetime.datetime(2020, 7, 10, 3, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452845918, 'comment_body': 'gisbase vs gisdbase see https://grass.osgeo.org/grass78/manuals/variables.html', 'comment_created': datetime.datetime(2020, 7, 10, 13, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452902456, 'comment_body': 'This looks like a good start. Now you can maybe make use of the option of calling `_SwitchLocationMapset()` with different parameters based on the the context. However, still:\r\n\r\n> I would need you to document your intentions here in the code to understand what this is supposed to solve. Documentation and comments describing the intent are often useful even when writing the code as they force us to think about the code is supposed to do. For example, for a line `add_to_list(abc)` we should aim at answering questions such as: Why we are adding to the list? What is the intended outcome? What are the possible outcomes? What are the assumptions about `abc` or other things before `add_to_list()` is called?', 'comment_created': datetime.datetime(2020, 7, 10, 15, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452923840, 'comment_body': 'Vashek, ok, I have a function OnRenameMapset that calls function rename_mapset_interactively and returns new mapset name. I think this is implemented right. \r\nBut in the case of ""if (self.selected_mapset[0].label == gisenv()[\'MAPSET\'])"" I need to switch my old mapset to the new one because my current mapset has been actually changed by renaming. But not literally so I need to self.selected_mapset[0].label = newmapset and then call the self._SwitchLocationMapset() function which can be generally the same for both functions OnRenameMapset, OnRenameLocation.\r\nWhere is the mistake in my thinking?\r\n', 'comment_created': datetime.datetime(2020, 7, 10, 15, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 453150525, 'comment_body': '...and _SwitchLocationMapset() uses the currently selected location/mapset to switch to. That all makes sense and should work. So, we have to continue to explore the actual behavior:\r\n\r\nWhen I test renaming the current mapset in GUI, it freezes, but first it shows an error message ""Error in g.mapset"" saying that the mapset ""old_name"" does not exist. So, it seems g.mapset is used for the switch and it requires the old mapset to exist.\r\n\r\nWhen I create the same situation in the command line and use g.mapset, I get the same behavior. Also I confirmed that g.mapset is used in ChangeLocationMapset() in datacatalog/frame.py to switch the mapset.\r\n\r\nThe conclusion here is that mapset cannot be changed when the current does not exist, or in our case, we cannot switch into the one with the new name after we renamed it as long as we are using g.mapset. g.mapset checks correctness of the state of the database connection, i.e., the current mapset, but we are of course breaking that correctness by our rename, so g.mapset is not the right tool for the task.\r\n\r\nTherefore, for this ticket, use the same check to prevent user from renaming the current location or mapset. This is something which could be added in the future, but it is a separate issue/additional feature.\r\n\r\nThe freeze with ""Error in g.mapset"" window is possibly a separate issue too, but something we should get back to (at least open an issue - please do that if you can reproduce it outside of your PR, e.g., by deleting a the mapset directory in a file manager right before you switch to it in the data catalog).', 'comment_created': datetime.datetime(2020, 7, 11, 3, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453257992, 'comment_body': 'When you return here, it never goes to `dlg.Destroy()` (which may leave some stuff behind).', 'comment_created': datetime.datetime(2020, 7, 12, 2, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258058, 'comment_body': 'Same as for mapset.', 'comment_created': datetime.datetime(2020, 7, 12, 2, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258159, 'comment_body': 'What happens when you press the *Cancel* button in the *Create new mapset* dialog?', 'comment_created': datetime.datetime(2020, 7, 12, 2, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258249, 'comment_body': '""consider using""', 'comment_created': datetime.datetime(2020, 7, 12, 2, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258465, 'comment_body': 'Is CreateMapset() defined?', 'comment_created': datetime.datetime(2020, 7, 12, 2, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453259084, 'comment_body': 'Since this is an event handler (`On...(self, event):` used as `...Bind(wx.EVT_..., self...`), nobody is checking any return value. That would make sense for function which is directly called and then you would have to consider if returning True/False or some other way is the best way to report success/failure (examples of this are `rename_location_interactively()` and `rename_location()`).\r\n\r\nThe code is wrong anyway because it is returning false on failure, but nothing on success (defaults to None in Python, but bad practice not being explicit reason being exactly this situation).\r\n\r\nJust remove the `return False/True`. This applies to the other event handlers (typically `On...(self, event):`)', 'comment_created': datetime.datetime(2020, 7, 12, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4ce08218319636c910f2d001b37ef1576e7bd668', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b73f8e911c718e9ec9971b9fffb44763608d5fad', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b6f7dc2da5ea0f60486c5d398cd39eb168c85e75', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b7225a7acbc106d7fb1aa1d7e9f7a08317cdd63f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd81467a0d97793f2c1c47e79dd47072a6acd1fd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c1f930eb16c9fc797704008d51597c0a653af6c4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9415c5e61405c31f0789ef9abaa37a65fd6db6a6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '72989fa8eee0703da8b9ae69ea09614c705a0443', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab3cbd9d992edc9f59f489392b70e2fd222acd49', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e9937e48f902b7a8eca60b3c412ffb5c7a543a4', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d942f7b5325e97a719bc9e96089d10cf0d07111', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b43ab33c9241b60d86e388b10a7ba55f58fe39b', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611d13337203103abfc6af4e04e5b084a65467b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448366554,wxGUI/Data catalog: distinguish label and name of nodes,wxGUI/datacatalog: node.label changed to node.data['name'] in tree.py.,True,783,https://api.github.com/repos/OSGeo/grass/pulls/783,https://github.com/OSGeo/grass/pull/783,closed,97,96,1,5,7,2,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-13 16:36:36+00:00,2020-07-17 03:50:13+00:00,299617.0,"3 days, 11:13:37","[{'comment_id': 455058565, 'comment_body': 'Which exception are you trying to catch here? Raised in _getNewMapName or Rename? ', 'comment_created': datetime.datetime(2020, 7, 15, 13, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 455889931, 'comment_body': 'Remove it or explain why it needs to be there.', 'comment_created': datetime.datetime(2020, 7, 16, 15, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '23012a1663df8a7704c785936e0c5102beede6eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35315c0172d6e530c6236e5a4efa3efdca93d1b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a344530acc23e1f090eef4d2d35de162baed2bba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6d83eecadd5f3f619728781f385b8ff676b4d486', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '056d16523e5758d63732ed5d16e0cd2667099994', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
452079528,wxGUI: Changes in Layer Manager tabs order and labels,wxGUI/LayerManager: Changed tab order (Modules are third) and Layers renamed to Display.,True,802,https://api.github.com/repos/OSGeo/grass/pulls/802,https://github.com/OSGeo/grass/pull/802,closed,17,17,1,1,8,0,3,0,"[{'name': 'help wanted'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-18 18:49:08+00:00,2020-07-23 01:59:29+00:00,371421.0,"4 days, 7:10:21",[],"[{'commit_sha': '38f806adbb3cd15f290d76dd17f7b62bc5045c91', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
448951069,wxGUI: Add new location action to database node in Data tab,"
wxGUI/datacatalog: New functions download_location_interactively, create_location_interactively added. Also checking for location validation a bit changed, made more clear. After clicking on grass node, two options for creating and downloading location are avaliable.",True,790,https://api.github.com/repos/OSGeo/grass/pulls/790,https://github.com/OSGeo/grass/pull/790,closed,214,121,4,12,7,54,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-14 15:23:53+00:00,2020-07-24 02:00:20+00:00,815787.0,"9 days, 10:36:27","[{'comment_id': 454758067, 'comment_body': ""I can see this would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.\r\n\r\nYou may need to return tuple (1) or something like that from this function to get all what you need out, but returning the wizard seems inconsistent with the other functions you created where the beauty is that we don't need to deal with any GUI afterwards and we get just the data.\r\n\r\n(1) A tuple is not ideal, but easiest to write, so great for prototype. Alternatively, a dict is of course the Python's programmer unfortunate default for everything ([Python: What if everything was a dict?](https://argumate.tumblr.com/post/118013166244/python-what-if-everything-was-a-dict-java-what))."", 'comment_created': datetime.datetime(2020, 7, 15, 2, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 454760288, 'comment_body': 'This known by a poetic name, _unreachable code after return statement_. :smile: Flake8 would probably warn you about this, but in any case, flipping the lines should be enough so that the `Destroy()` is called before the function ends.', 'comment_created': datetime.datetime(2020, 7, 15, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456177949, 'comment_body': 'After hitting cancel in Location Wizard:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 694, in\r\nOnCreateLocation\r\n\r\ncreate_location_interactively(self,\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 223, in\r\ncreate_location_interactively\r\n\r\ngWizard_output = (gWizard.grassdatabase, gWizard.location,\r\nAttributeError\r\n:\r\n\'LocationWizard\' object has no attribute \'grassdatabase\'\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 2, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456194297, 'comment_body': ""The correct way how to write this would be:\r\n\r\n```python\r\n        grassdatabase, location, georeffile, default_region, user_mapset = (\r\n            create_location_interactively(self, self.selected_grassdb[0].data['name'])\r\n        )\r\n```\r\n\r\nHowever, most likely, it will not be needed since the following code really needs to go to the `create_location_interactively()` function."", 'comment_created': datetime.datetime(2020, 7, 17, 3, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195076, 'comment_body': 'Since this is so much part of location wizard workflow both here and in original gis_set.py, this really should be part of that `create_location_interactively()` function.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195342, 'comment_body': 'Seems to be exactly the case of wrong(ly used) function I mentioned:\r\n\r\n> I can see this [`create_location_interactively()`] would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456196821, 'comment_body': 'Catching such a generic exception (Exception) seems unnecessary. The error message for many exceptions will not be helpful for the end user. Was the original code doing that? What do you expect from `download_location_interactively()`? Are some issues handled there already? For a fallback mechanism for unexpected errors, the default mechanism of reporting them in the console is probably enough.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197372, 'comment_body': 'Does LocationWizard raise OSError? Otherwise, same questions as for OnDownloadLocation() in tree.py.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197450, 'comment_body': '```\r\n$ flake8 --isolated startup/guiutils.py\r\n...\r\nstartup/guiutils.py:391:9: E117 over-indented\r\n...\r\n```\r\n\r\nApplies to the whole function body.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456740935, 'comment_body': 'It seems to me now that the best way how to do this is to put the `if user_mapset:` part to `create_location_interactively()`. In case loc wizard says a mapset needs to be created, it is appropriate for `create_location_interactively()` to call `create_mapset_interactively()`. No need to involve the caller (i.e., data catalog or startup) into the process.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742283, 'comment_body': 'I think this function should return tuple (database, location, mapset) where database and location are what it returns now and mapset is `""PERMANENT""` by default and result of `create_mapset_interactively()` in case `gWizard.user_mapset` is `True`. This way, the issue of additional mapset creation is encapsulated in this function.\r\n\r\nThe documentation should say that the return value, i.e., the tuple (database, location, mapset), is the location user created and the mapset is a mapset user may want to switch to. At this point it will be PERMANENT, but theoretically it could be another mapset the user created. The emphasis in ""may want to switch to"" is on the ""may"", it depends on the caller what the context is. In datacatalog, we currently don\'t switch in this case, in startup we change selection (or whatever is the current state, I would have to double check, but the point is, it is up to do caller to decide).', 'comment_created': datetime.datetime(2020, 7, 18, 3, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742610, 'comment_body': 'It would make sense for this function to have the same interface, esp., the return value as `create_location_interactively()`, so that they can be used interchangeably and that we can change the implementation here and the rest of the code just works. Although the functionality is not here and we won\'t be adding it right now, creating another mapset here actually makes more sense than when creating an empty location. So, the return value right now should be tuple `(grassdb, location, ""PERMANENT"")`.\r\n\r\nYou should describe in documentation, when it returns invalid values and what happens on error or cancel. It should fit in terms of interface with the `create_location_interactively()`.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849085, 'comment_body': 'Why to InsertMapset here and why only when not PERMANENT (note the spelling, BTW)? ReloadTreeItems is called afterwards. The bigger problem is the database.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849581, 'comment_body': 'If there is really a different treatment of PERMANENT mapset needed, it needs to be documented here.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849653, 'comment_body': '`mapset` is probably a good enough name in this context.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849816, 'comment_body': 'The mapset name here is little strange as a value on failure. The original `(None, None, None)` sounds better and is probably safer.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849875, 'comment_body': 'Documentation of return value is really needed for this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850102, 'comment_body': 'You can solve the case if `gWizard.location is None` right here (and return) and continue with the ""success"" case below without any nesting.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850336, 'comment_body': 'This `gWizard_output` value gets replaced by the following line (always). Play with return statements and variable in some trivial pure Python code example.\r\n\r\nYou need to define that fist as sort of a default and overwrite it here or just overwrite the last item (`gWizard_output[2] = ...)`)', 'comment_created': datetime.datetime(2020, 7, 19, 2, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851247, 'comment_body': 'Just naming, the variable name is unnecessarily descriptive. You are in a relatively short `download_location...` function. Simply calling it, e.g., `result` in the sense ""this is what will be used as a return value"" is enough and likely best describes the variable in its context which is this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851448, 'comment_body': 'What is that for? Reloading covers this. Besides you are passing location as string to location_node parameter.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456851851, 'comment_body': ""This seems currently unused, because ReloadTreeItems adds that node. Just remove it now, it's not correctly implemented anyway, you would need to rebase to master due to #797."", 'comment_created': datetime.datetime(2020, 7, 19, 3, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 458256252, 'comment_body': 'Now it returns the tuple: (gWizard.grassdatabase, gWizard.location, and either PERNAMENT or user mapset).  ', 'comment_created': datetime.datetime(2020, 7, 21, 17, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458256510, 'comment_body': 'Those lines were flipped.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458257183, 'comment_body': 'Now it returns the tuples of Nones:  \r\nif gWizard.location is None:\r\n        gWizard_output = (None, None, None)\r\n        return gWizard_output', 'comment_created': datetime.datetime(2020, 7, 21, 17, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458258034, 'comment_body': 'I edited formatting.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458259464, 'comment_body': 'All these lines are now a part of create_location_interactively.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458260574, 'comment_body': 'create_mapset_interactively used within create_location_interactively', 'comment_created': datetime.datetime(2020, 7, 21, 17, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261049, 'comment_body': 'Generic exceptions removed. Not needed here.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261260, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261893, 'comment_body': 'Corrected in a last commit.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458262892, 'comment_body': 'if user_mapset:\r\nuser_mapset = **create_mapset_interactively**(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)', 'comment_created': datetime.datetime(2020, 7, 21, 17, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458263575, 'comment_body': 'create_location_interactively now returns tuple (database, location, mapset) where database and location are what it returns now and mapset is ""PERMANENT"" by default or the result of create_mapset_interactively() in case gWizard.user_mapset is True.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458264135, 'comment_body': 'if loc_download.GetLocation() is not None:\r\n        result = (grassdb, loc_download.GetLocation(), ""PERMANENT"")\r\n\r\nDocumentation added.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266378, 'comment_body': 'User mapset was solved within create_location_interactively. \r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266482, 'comment_body': 'Spelling corrected.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458267614, 'comment_body': 'It is not a different treatment. \r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458268664, 'comment_body': 'Name user_mapset changed to just mapset (last commit).', 'comment_created': datetime.datetime(2020, 7, 21, 17, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458269829, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270297, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270499, 'comment_body': 'Addressed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271200, 'comment_body': 'Addressed here:\r\n\r\nif gWizard.user_mapset:\r\n        mapset = create_mapset_interactively(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          mapset)\r\n    else:\r\n        # Returns PERMANENT mapset when user mapset not defined\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          ""PERMANENT"")', 'comment_created': datetime.datetime(2020, 7, 21, 17, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271657, 'comment_body': 'Changed to **result**.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271800, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271968, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458476501, 'comment_body': '...and Close does not cause a traceback.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477505, 'comment_body': 'The documentation of the return value needs to go to the docstring:\r\n\r\n```\r\n""""""Create new location using Location Wizard\r\n\r\nReturns foo when... Returns bar when...\r\n""""""\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 1, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477762, 'comment_body': 'Same here as for `create_location_interactively()`, documentation of the return value needs to be in the docstring because it documents the interface.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458479900, 'comment_body': 'This also contains some info on what should be in the documentation. To your:\r\n\r\n```\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n```\r\n\r\nThe point of ""user may want to switch to"" is that the function can create only PERMANENT or it can create one or (in the future) more other mapsets. The caller does not know and this function does not tell. What this function reports back is the mapset the user may want to switch to if any switching is expected (not the case currently in data catalog, but it is the case in the startup window). This mapset can be PERMANENT or anything else.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458482272, 'comment_body': 'I don\'t understand. Are you saying that PERMANENT and any other mapset is treated the same here? I still see the same condition `if mapset != ""PERMANENT"":` in the code.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458797390, 'comment_body': 'This condition is not needed here because when a location is not None, a user mapset is also always different from None. And I need to treat all mapsets the same way.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458797660, 'comment_body': 'Docstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458806605, 'comment_body': 'Ok, so if I get it right we do not have any mechanism for mapset switching within the location wizard so far.  So it is meant for future realization. \r\nDocstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459191006, 'comment_body': 'Actually, if something, we would switch outside of this function, hence giving the mapset name as a hint to the caller of this function - a hint about what user may want to do next. There is no difference for the caller between PERMANENT and any other mapset; as I said, _this function reports back...the mapset the user may want to switch...This mapset can be PERMANENT or anything else._ When user does not ask for anything else, only PERMANENT is created, so the function returns PERMANENT by default as mapset, but if user asks for creation of another mapset, the function returns name of this other mapset. In other words, _the function can create only PERMANENT or it can create...other mapset_.\r\n\r\nTo back up little further, the function is creating a new location, so returning its name (and path) is sufficient behavior. However, we are also adding mapset as additional information since other mapsets besides PERMANENT could be created based on user input as part of the location creation process.\r\n\r\nHere, we are trying to create general interface in between two parts of the code which won\'t change when we do small changes in the code or behavior here or there. Thus, it is important to define what return values are in general way. Database and location are something the caller will likely need to use since a new location was just created, but mapset is something which the caller is less likely to use. The function is saying ""Hey, FYI, this might a mapset the user is interested in the most.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4134ca7531990feeed81318bdcde3a56bb8240dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62719b3df399f34fe51e67ae6e1cd6e22f5e1bf4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dc852638f2c2aaa58b81170ffd36e1c4f99f4ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '097ceac223513a2fcde1eca01aca2ef3c9f32116', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd4e91ff9c282d9052f891db80630490f1de8e5f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a3afb6fc67020b152dbf5dda17024bc87e4239af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48bf6282a097e55d1a771844afd04d6be4600a9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2d7028e2b8635d7cbeb691870b4b674f20ee1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35989b081858d380c3ded3716e85a3746c7b30e7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79c0a3148af5ceef2af5c554599c099f9e5d30e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '864fbe2bcb570e8eb2a8f5b3c2cc8279aa7de658', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4b59601bbaa762d746c64a8fc7873dc56de9550', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
450275738,wxGUI: Allow delete on multiple mapsets in data catalog,"Added the function delete_mapsets_interactively which is called after selecting more mapsets. Checked possible cases of current or pernament mapset selection. 
",True,795,https://api.github.com/repos/OSGeo/grass/pulls/795,https://github.com/OSGeo/grass/pull/795,closed,135,70,3,4,1,20,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-16 15:14:24+00:00,2020-07-24 04:18:24+00:00,651840.0,"7 days, 13:04:00","[{'comment_id': 456204479, 'comment_body': ""this shouldn't take as input nodes, it should be something like a list of tuples [(db1, loc1, mapset1), (), ...]"", 'comment_created': datetime.datetime(2020, 7, 17, 3, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456206484, 'comment_body': 'Remove this from here, the message should be constructed later, just store the index here.\r\n\r\nConcatenating strings is done with join function.\r\n', 'comment_created': datetime.datetime(2020, 7, 17, 4, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456207581, 'comment_body': ""you don't need this when using join"", 'comment_created': datetime.datetime(2020, 7, 17, 4, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456208304, 'comment_body': 'use data[""name""] instead of label everywhere', 'comment_created': datetime.datetime(2020, 7, 17, 4, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190111, 'comment_body': 'simplify the syntax to `append((db, loc, mapset))`, right now you are creating a list and converting it to tuple.', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190214, 'comment_body': 'the same about tuple here', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190377, 'comment_body': 'in this case you can just do it in 1 line', 'comment_created': datetime.datetime(2020, 7, 23, 2, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193791, 'comment_body': 'Use format function as we discussed everywhere.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193899, 'comment_body': 'Also use translatable strings _()', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194738, 'comment_body': 'At the end there should be probably a sentence that the deleting of other mapsets wont proceed. Something like ""No mapsets will be deleted.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194908, 'comment_body': 'This should list the mapsets that will be deleted.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459197920, 'comment_body': 'This should return True/False, see #789.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459306810, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459307117, 'comment_body': 'Simplified as well.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459333654, 'comment_body': 'This sentence added.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340313, 'comment_body': 'Changed in the whole guiutils.py file.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340394, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459342073, 'comment_body': 'It lists all mapsets that will be deleted in terms of their paths. \r\n![Screenshot from 2020-07-23 05-01-48](https://user-images.githubusercontent.com/49241681/88274700-6655ec80-ccdc-11ea-86de-477daf6fab61.png)\r\n', 'comment_created': datetime.datetime(2020, 7, 23, 10, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459360570, 'comment_body': 'I rebased and solved conflict with master because of #789 and considered this as well.', 'comment_created': datetime.datetime(2020, 7, 23, 10, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459842057, 'comment_body': 'The merge ended up ignoring the return value, fixed.', 'comment_created': datetime.datetime(2020, 7, 24, 4, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': 'dcfb617a22ef7bae92fffa2cae02fa77cc7421ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '06accf4179c0f232bcad65edec0017a77f1f54ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae7f06bbfed4b16ae26225545c8ba799aaed53df', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01f5d20051436c00f2b015d6465293a20f89e5b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448878125,wxGUI: Do not reload the tree after canceled Delete in data catalog,wxGUI/datacatalog: Reloading and updating is made only if Delete operation is not cancelled.,True,789,https://api.github.com/repos/OSGeo/grass/pulls/789,https://github.com/OSGeo/grass/pull/789,closed,34,25,3,6,0,6,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-14 13:23:39+00:00,2020-07-22 02:21:22+00:00,651463.0,"7 days, 12:57:43","[{'comment_id': 454421731, 'comment_body': 'you need to destroy dlg before returning', 'comment_created': datetime.datetime(2020, 7, 14, 14, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 454422842, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 14, 15, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456174832, 'comment_body': 'This now gets executed only after Yes/OK, not after cancel. The implicit return returns `None` which  evaluates to `False` in the if-statement, so that\'s why it happens to work. The indentation is puts the lines into the if-statement, not the top level. If you place `print(""XXX"")` you can see that. Same for the other function.\r\n\r\nAdditionally, there is another return above in this function which returns `None`, so that\'s inconsistent. It needs to return `False`.', 'comment_created': datetime.datetime(2020, 7, 17, 1, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456733591, 'comment_body': 'And what about the `dlg.Destroy()`? That still gets executed only when `dlg.ShowModal() == wx.ID_YES` but not when *Cancel* is pressed. See the reasoning and context in the previous reviews ([July 14](https://github.com/OSGeo/grass/pull/789#discussion_r454421731) and [July 16](https://github.com/OSGeo/grass/pull/789#discussion_r456174832)).\r\n\r\nThere is still the issue with the other return statement in this function I mentioned before:\r\n\r\n> Additionally, there is another return above in this function which returns `None`, so that\'s inconsistent. It needs to return `False`.\r\n\r\nIt is the if-statement `if mapset == ""PERMANENT"":`, line with `return` only.', 'comment_created': datetime.datetime(2020, 7, 18, 1, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 457788699, 'comment_body': 'The result of `dlg.GetValue()` still gets returned even when `rename_mapset()` fails. You need to do `newmapset = None` in the `except` clause to signal that the mapset was renamed, i.e., there is no new name to report (assuming that the caught exception here means no renaming happened).\r\n\r\nThe same issue(s) as here in `rename_mapset_interactively()` seems to be present in `rename_location_interactively()`.', 'comment_created': datetime.datetime(2020, 7, 21, 1, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458249231, 'comment_body': 'I added newmapset = None into except clause in rename_mapset_interactively and newlocation = None into except clause in rename_location_interactively.', 'comment_created': datetime.datetime(2020, 7, 21, 16, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '35498b13e66d25117d5b8e7767f8deb49d6ec285', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6ac0f59fdb793614d13db0e447237e60ed33220d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ac85a314b373913c053267587192edefecfc79fa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a4a16b34c6f128d22765d0b361b7cbf1b81f81c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dea073f355a7c5a7d25ee417bcd2257f5bb75c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b67952aef2d0bc2e7461c0f6e101a5e14d537d46', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448951069,wxGUI: Add new location action to database node in Data tab,"
wxGUI/datacatalog: New functions download_location_interactively, create_location_interactively added. Also checking for location validation a bit changed, made more clear. After clicking on grass node, two options for creating and downloading location are avaliable.",True,790,https://api.github.com/repos/OSGeo/grass/pulls/790,https://github.com/OSGeo/grass/pull/790,closed,214,121,4,12,7,54,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-14 15:23:53+00:00,2020-07-24 02:00:20+00:00,815787.0,"9 days, 10:36:27","[{'comment_id': 454758067, 'comment_body': ""I can see this would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.\r\n\r\nYou may need to return tuple (1) or something like that from this function to get all what you need out, but returning the wizard seems inconsistent with the other functions you created where the beauty is that we don't need to deal with any GUI afterwards and we get just the data.\r\n\r\n(1) A tuple is not ideal, but easiest to write, so great for prototype. Alternatively, a dict is of course the Python's programmer unfortunate default for everything ([Python: What if everything was a dict?](https://argumate.tumblr.com/post/118013166244/python-what-if-everything-was-a-dict-java-what))."", 'comment_created': datetime.datetime(2020, 7, 15, 2, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 454760288, 'comment_body': 'This known by a poetic name, _unreachable code after return statement_. :smile: Flake8 would probably warn you about this, but in any case, flipping the lines should be enough so that the `Destroy()` is called before the function ends.', 'comment_created': datetime.datetime(2020, 7, 15, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456177949, 'comment_body': 'After hitting cancel in Location Wizard:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 694, in\r\nOnCreateLocation\r\n\r\ncreate_location_interactively(self,\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 223, in\r\ncreate_location_interactively\r\n\r\ngWizard_output = (gWizard.grassdatabase, gWizard.location,\r\nAttributeError\r\n:\r\n\'LocationWizard\' object has no attribute \'grassdatabase\'\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 2, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456194297, 'comment_body': ""The correct way how to write this would be:\r\n\r\n```python\r\n        grassdatabase, location, georeffile, default_region, user_mapset = (\r\n            create_location_interactively(self, self.selected_grassdb[0].data['name'])\r\n        )\r\n```\r\n\r\nHowever, most likely, it will not be needed since the following code really needs to go to the `create_location_interactively()` function."", 'comment_created': datetime.datetime(2020, 7, 17, 3, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195076, 'comment_body': 'Since this is so much part of location wizard workflow both here and in original gis_set.py, this really should be part of that `create_location_interactively()` function.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195342, 'comment_body': 'Seems to be exactly the case of wrong(ly used) function I mentioned:\r\n\r\n> I can see this [`create_location_interactively()`] would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456196821, 'comment_body': 'Catching such a generic exception (Exception) seems unnecessary. The error message for many exceptions will not be helpful for the end user. Was the original code doing that? What do you expect from `download_location_interactively()`? Are some issues handled there already? For a fallback mechanism for unexpected errors, the default mechanism of reporting them in the console is probably enough.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197372, 'comment_body': 'Does LocationWizard raise OSError? Otherwise, same questions as for OnDownloadLocation() in tree.py.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197450, 'comment_body': '```\r\n$ flake8 --isolated startup/guiutils.py\r\n...\r\nstartup/guiutils.py:391:9: E117 over-indented\r\n...\r\n```\r\n\r\nApplies to the whole function body.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456740935, 'comment_body': 'It seems to me now that the best way how to do this is to put the `if user_mapset:` part to `create_location_interactively()`. In case loc wizard says a mapset needs to be created, it is appropriate for `create_location_interactively()` to call `create_mapset_interactively()`. No need to involve the caller (i.e., data catalog or startup) into the process.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742283, 'comment_body': 'I think this function should return tuple (database, location, mapset) where database and location are what it returns now and mapset is `""PERMANENT""` by default and result of `create_mapset_interactively()` in case `gWizard.user_mapset` is `True`. This way, the issue of additional mapset creation is encapsulated in this function.\r\n\r\nThe documentation should say that the return value, i.e., the tuple (database, location, mapset), is the location user created and the mapset is a mapset user may want to switch to. At this point it will be PERMANENT, but theoretically it could be another mapset the user created. The emphasis in ""may want to switch to"" is on the ""may"", it depends on the caller what the context is. In datacatalog, we currently don\'t switch in this case, in startup we change selection (or whatever is the current state, I would have to double check, but the point is, it is up to do caller to decide).', 'comment_created': datetime.datetime(2020, 7, 18, 3, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742610, 'comment_body': 'It would make sense for this function to have the same interface, esp., the return value as `create_location_interactively()`, so that they can be used interchangeably and that we can change the implementation here and the rest of the code just works. Although the functionality is not here and we won\'t be adding it right now, creating another mapset here actually makes more sense than when creating an empty location. So, the return value right now should be tuple `(grassdb, location, ""PERMANENT"")`.\r\n\r\nYou should describe in documentation, when it returns invalid values and what happens on error or cancel. It should fit in terms of interface with the `create_location_interactively()`.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849085, 'comment_body': 'Why to InsertMapset here and why only when not PERMANENT (note the spelling, BTW)? ReloadTreeItems is called afterwards. The bigger problem is the database.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849581, 'comment_body': 'If there is really a different treatment of PERMANENT mapset needed, it needs to be documented here.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849653, 'comment_body': '`mapset` is probably a good enough name in this context.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849816, 'comment_body': 'The mapset name here is little strange as a value on failure. The original `(None, None, None)` sounds better and is probably safer.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849875, 'comment_body': 'Documentation of return value is really needed for this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850102, 'comment_body': 'You can solve the case if `gWizard.location is None` right here (and return) and continue with the ""success"" case below without any nesting.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850336, 'comment_body': 'This `gWizard_output` value gets replaced by the following line (always). Play with return statements and variable in some trivial pure Python code example.\r\n\r\nYou need to define that fist as sort of a default and overwrite it here or just overwrite the last item (`gWizard_output[2] = ...)`)', 'comment_created': datetime.datetime(2020, 7, 19, 2, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851247, 'comment_body': 'Just naming, the variable name is unnecessarily descriptive. You are in a relatively short `download_location...` function. Simply calling it, e.g., `result` in the sense ""this is what will be used as a return value"" is enough and likely best describes the variable in its context which is this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851448, 'comment_body': 'What is that for? Reloading covers this. Besides you are passing location as string to location_node parameter.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456851851, 'comment_body': ""This seems currently unused, because ReloadTreeItems adds that node. Just remove it now, it's not correctly implemented anyway, you would need to rebase to master due to #797."", 'comment_created': datetime.datetime(2020, 7, 19, 3, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 458256252, 'comment_body': 'Now it returns the tuple: (gWizard.grassdatabase, gWizard.location, and either PERNAMENT or user mapset).  ', 'comment_created': datetime.datetime(2020, 7, 21, 17, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458256510, 'comment_body': 'Those lines were flipped.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458257183, 'comment_body': 'Now it returns the tuples of Nones:  \r\nif gWizard.location is None:\r\n        gWizard_output = (None, None, None)\r\n        return gWizard_output', 'comment_created': datetime.datetime(2020, 7, 21, 17, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458258034, 'comment_body': 'I edited formatting.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458259464, 'comment_body': 'All these lines are now a part of create_location_interactively.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458260574, 'comment_body': 'create_mapset_interactively used within create_location_interactively', 'comment_created': datetime.datetime(2020, 7, 21, 17, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261049, 'comment_body': 'Generic exceptions removed. Not needed here.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261260, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261893, 'comment_body': 'Corrected in a last commit.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458262892, 'comment_body': 'if user_mapset:\r\nuser_mapset = **create_mapset_interactively**(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)', 'comment_created': datetime.datetime(2020, 7, 21, 17, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458263575, 'comment_body': 'create_location_interactively now returns tuple (database, location, mapset) where database and location are what it returns now and mapset is ""PERMANENT"" by default or the result of create_mapset_interactively() in case gWizard.user_mapset is True.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458264135, 'comment_body': 'if loc_download.GetLocation() is not None:\r\n        result = (grassdb, loc_download.GetLocation(), ""PERMANENT"")\r\n\r\nDocumentation added.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266378, 'comment_body': 'User mapset was solved within create_location_interactively. \r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266482, 'comment_body': 'Spelling corrected.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458267614, 'comment_body': 'It is not a different treatment. \r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458268664, 'comment_body': 'Name user_mapset changed to just mapset (last commit).', 'comment_created': datetime.datetime(2020, 7, 21, 17, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458269829, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270297, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270499, 'comment_body': 'Addressed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271200, 'comment_body': 'Addressed here:\r\n\r\nif gWizard.user_mapset:\r\n        mapset = create_mapset_interactively(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          mapset)\r\n    else:\r\n        # Returns PERMANENT mapset when user mapset not defined\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          ""PERMANENT"")', 'comment_created': datetime.datetime(2020, 7, 21, 17, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271657, 'comment_body': 'Changed to **result**.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271800, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271968, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458476501, 'comment_body': '...and Close does not cause a traceback.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477505, 'comment_body': 'The documentation of the return value needs to go to the docstring:\r\n\r\n```\r\n""""""Create new location using Location Wizard\r\n\r\nReturns foo when... Returns bar when...\r\n""""""\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 1, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477762, 'comment_body': 'Same here as for `create_location_interactively()`, documentation of the return value needs to be in the docstring because it documents the interface.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458479900, 'comment_body': 'This also contains some info on what should be in the documentation. To your:\r\n\r\n```\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n```\r\n\r\nThe point of ""user may want to switch to"" is that the function can create only PERMANENT or it can create one or (in the future) more other mapsets. The caller does not know and this function does not tell. What this function reports back is the mapset the user may want to switch to if any switching is expected (not the case currently in data catalog, but it is the case in the startup window). This mapset can be PERMANENT or anything else.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458482272, 'comment_body': 'I don\'t understand. Are you saying that PERMANENT and any other mapset is treated the same here? I still see the same condition `if mapset != ""PERMANENT"":` in the code.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458797390, 'comment_body': 'This condition is not needed here because when a location is not None, a user mapset is also always different from None. And I need to treat all mapsets the same way.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458797660, 'comment_body': 'Docstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458806605, 'comment_body': 'Ok, so if I get it right we do not have any mechanism for mapset switching within the location wizard so far.  So it is meant for future realization. \r\nDocstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459191006, 'comment_body': 'Actually, if something, we would switch outside of this function, hence giving the mapset name as a hint to the caller of this function - a hint about what user may want to do next. There is no difference for the caller between PERMANENT and any other mapset; as I said, _this function reports back...the mapset the user may want to switch...This mapset can be PERMANENT or anything else._ When user does not ask for anything else, only PERMANENT is created, so the function returns PERMANENT by default as mapset, but if user asks for creation of another mapset, the function returns name of this other mapset. In other words, _the function can create only PERMANENT or it can create...other mapset_.\r\n\r\nTo back up little further, the function is creating a new location, so returning its name (and path) is sufficient behavior. However, we are also adding mapset as additional information since other mapsets besides PERMANENT could be created based on user input as part of the location creation process.\r\n\r\nHere, we are trying to create general interface in between two parts of the code which won\'t change when we do small changes in the code or behavior here or there. Thus, it is important to define what return values are in general way. Database and location are something the caller will likely need to use since a new location was just created, but mapset is something which the caller is less likely to use. The function is saying ""Hey, FYI, this might a mapset the user is interested in the most.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4134ca7531990feeed81318bdcde3a56bb8240dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62719b3df399f34fe51e67ae6e1cd6e22f5e1bf4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dc852638f2c2aaa58b81170ffd36e1c4f99f4ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '097ceac223513a2fcde1eca01aca2ef3c9f32116', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd4e91ff9c282d9052f891db80630490f1de8e5f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a3afb6fc67020b152dbf5dda17024bc87e4239af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48bf6282a097e55d1a771844afd04d6be4600a9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2d7028e2b8635d7cbeb691870b4b674f20ee1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35989b081858d380c3ded3716e85a3746c7b30e7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79c0a3148af5ceef2af5c554599c099f9e5d30e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '864fbe2bcb570e8eb2a8f5b3c2cc8279aa7de658', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4b59601bbaa762d746c64a8fc7873dc56de9550', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
450275738,wxGUI: Allow delete on multiple mapsets in data catalog,"Added the function delete_mapsets_interactively which is called after selecting more mapsets. Checked possible cases of current or pernament mapset selection. 
",True,795,https://api.github.com/repos/OSGeo/grass/pulls/795,https://github.com/OSGeo/grass/pull/795,closed,135,70,3,4,1,20,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-16 15:14:24+00:00,2020-07-24 04:18:24+00:00,651840.0,"7 days, 13:04:00","[{'comment_id': 456204479, 'comment_body': ""this shouldn't take as input nodes, it should be something like a list of tuples [(db1, loc1, mapset1), (), ...]"", 'comment_created': datetime.datetime(2020, 7, 17, 3, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456206484, 'comment_body': 'Remove this from here, the message should be constructed later, just store the index here.\r\n\r\nConcatenating strings is done with join function.\r\n', 'comment_created': datetime.datetime(2020, 7, 17, 4, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456207581, 'comment_body': ""you don't need this when using join"", 'comment_created': datetime.datetime(2020, 7, 17, 4, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456208304, 'comment_body': 'use data[""name""] instead of label everywhere', 'comment_created': datetime.datetime(2020, 7, 17, 4, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190111, 'comment_body': 'simplify the syntax to `append((db, loc, mapset))`, right now you are creating a list and converting it to tuple.', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190214, 'comment_body': 'the same about tuple here', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190377, 'comment_body': 'in this case you can just do it in 1 line', 'comment_created': datetime.datetime(2020, 7, 23, 2, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193791, 'comment_body': 'Use format function as we discussed everywhere.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193899, 'comment_body': 'Also use translatable strings _()', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194738, 'comment_body': 'At the end there should be probably a sentence that the deleting of other mapsets wont proceed. Something like ""No mapsets will be deleted.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194908, 'comment_body': 'This should list the mapsets that will be deleted.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459197920, 'comment_body': 'This should return True/False, see #789.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459306810, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459307117, 'comment_body': 'Simplified as well.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459333654, 'comment_body': 'This sentence added.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340313, 'comment_body': 'Changed in the whole guiutils.py file.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340394, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459342073, 'comment_body': 'It lists all mapsets that will be deleted in terms of their paths. \r\n![Screenshot from 2020-07-23 05-01-48](https://user-images.githubusercontent.com/49241681/88274700-6655ec80-ccdc-11ea-86de-477daf6fab61.png)\r\n', 'comment_created': datetime.datetime(2020, 7, 23, 10, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459360570, 'comment_body': 'I rebased and solved conflict with master because of #789 and considered this as well.', 'comment_created': datetime.datetime(2020, 7, 23, 10, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459842057, 'comment_body': 'The merge ended up ignoring the return value, fixed.', 'comment_created': datetime.datetime(2020, 7, 24, 4, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': 'dcfb617a22ef7bae92fffa2cae02fa77cc7421ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '06accf4179c0f232bcad65edec0017a77f1f54ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae7f06bbfed4b16ae26225545c8ba799aaed53df', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01f5d20051436c00f2b015d6465293a20f89e5b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
453688701,wxGUI: Add new icons to data catalog for actions avaliable in context menu,"Certain actions that are currently available (and will be available in the future) in the context menus of data catalog need to be exposed as toolbar icons. This is a suggested list of actions, to be edited based on discussion and feature availability:

- [x] add new database (already created)
- [x] create new mapset (now created)

Other:
- [ ] download sample location
- [ ] create new location
- [ ] import into current mapset

",True,811,https://api.github.com/repos/OSGeo/grass/pulls/811,https://github.com/OSGeo/grass/pull/811,closed,275,18,7,6,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-20 17:55:57+00:00,2020-07-24 03:24:48+00:00,293331.0,"3 days, 9:28:51",[],"[{'commit_sha': '6cce4afa63d570b8c6ab4730cf89c34c99209f92', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1c68a1ae3674a098177b9bea1efd157e2a0005af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a89327d02c5e32e9852520ffed9dc9a86643cf1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3f5533e09c5bf61e0d55a0bf666126700502a29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b17217dbc7696d66772aa20ee305bfc165cef795', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31e1ec9e4853a00a1dc1d63838e631d89141fba6', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
456128296,wxGUI: Add new icons to datacatalog for actions avaliable in context menu (continue),"Certain actions that are currently available (and will be available in the future) in the context menus of data catalog need to be exposed as toolbar icons. This is a suggested list of actions, to be edited based on discussion and feature availability:

- [x] add new database (already created)
- [x] create new mapset (already created)
- [x] download sample location (now created)
- [x] create new location (now created)

Other:

- [ ] import into current mapset",True,830,https://api.github.com/repos/OSGeo/grass/pulls/830,https://github.com/OSGeo/grass/pull/830,closed,147,175,8,2,0,1,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-24 07:38:39+00:00,2020-07-25 03:04:57+00:00,69978.0,19:26:18,"[{'comment_id': 460034999, 'comment_body': 'Location Wizard is not used for downloading locations', 'comment_created': datetime.datetime(2020, 7, 24, 12, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'c62f94fc71f7a4df955cc1f3e6cb6f9ca4f3c7ac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '22883f5097c28d44d16cc875f4c4a49ae4aecd59', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
458462469,Distinguish mapsets by ownership and lock in Data tab,"In the startup screen it would be nice if mapsets could be displayed differently (e.g. different colors, for ""my mapsets"", ""my locked mapsets"", ""others mapsets"").

Mapsets owned by different user and locked mapsets will be displayed in gray and distinguished from ""normal mapsets"" by special label.


",True,849,https://api.github.com/repos/OSGeo/grass/pulls/849,https://github.com/OSGeo/grass/pull/849,closed,117,35,2,14,5,28,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 14:04:42+00:00,2020-08-11 16:46:48+00:00,1132926.0,"13 days, 2:42:06","[{'comment_id': 462342973, 'comment_body': ""Instead of this, it should be more `get_mapset_owner`, which will return the owner even if it's the the user."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 462348747, 'comment_body': ""OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n\r\nThe idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463033992, 'comment_body': ""No sure where to add more information to node.data. Where is e.g. node.data['name'] defined? "", 'comment_created': datetime.datetime(2020, 7, 30, 14, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463721905, 'comment_body': ""You need to return directly the wx.SYS....\r\n\r\nDelete '== True '"", 'comment_created': datetime.datetime(2020, 7, 31, 16, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463722843, 'comment_body': 'This all need to be called for all reload functions, not just that one, look eg. what reloadtreenodes is calling', 'comment_created': datetime.datetime(2020, 7, 31, 16, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463723315, 'comment_body': 'Just pass directly is_mapset_locked result', 'comment_created': datetime.datetime(2020, 7, 31, 16, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463929255, 'comment_body': 'Edited.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929720, 'comment_body': 'I edited the way how to append mapset node in functions _reloadLocationNode, _reloadGrassDBNode and GetCurrentDbLocationMapsetNode. Also after these edits I have still the same above-mentioned ""key"" error. I think I should define ""lock"" and ""user"" keys maybe in treemodel? But it seems strange to me because treemodel is a very general function and there is no explicit definition of what keys and values actually are.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929728, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464498802, 'comment_body': '> No sure where to add more information to node.data. Where is e.g. node.data[\'name\'] defined?\r\n\r\nI haven\'t delved deeply into this code, yet, but IIUC, these are defined whenever you create a dictionary for a tree node, e.g. on lines 336ff (in this PR):\r\n\r\n```\r\n            mapset_node = self._model.AppendNode(\r\n                                parent=location_node,\r\n                                data=dict(type=\'mapset\',\r\n                                          name=mapset,\r\n                                          lock=is_mapset_locked(mapset_path),\r\n                                          user=different_user))\r\n```\r\nSo, ""lock"" seems to be defined for mapset nodes whenever they are created (also elsewhere in the code). But AFAICT location_nodes do not include the ""lock"" key.', 'comment_created': datetime.datetime(2020, 8, 3, 15, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464505301, 'comment_body': ""> OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n> \r\n> The idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method.\r\n\r\nIIUC, this is true for many other OnGetItem method that you propose."", 'comment_created': datetime.datetime(2020, 8, 3, 15, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 467191023, 'comment_body': 'I would use ""(owner: xxx)"" and ""(in use, owner: xxx)""\r\nWe thought ""in use"" might be more understandable than \'locked\' \r\n\r\nalso, it should be translatable _()', 'comment_created': datetime.datetime(2020, 8, 7, 18, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467194597, 'comment_body': 'You should probably have data[""owner""] (that would be result of get_mapset_owner) and additionally data[""is_different_owner""] (result of is_mapset_users - bool). Then just adjust the label() code. This is more cosmetics, but it makes sense more like that.', 'comment_created': datetime.datetime(2020, 8, 7, 18, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467197170, 'comment_body': ""I don't think this is needed, it will search the nodes based on name and mapset, that's enough."", 'comment_created': datetime.datetime(2020, 8, 7, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467365216, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467367017, 'comment_body': '""Check mapset ownership"" part removed and mapset_node dictionary (lock, is_different_owner, owner) set. All decisions about what label to use are now made in @property function.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467449381, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 8, 10, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467490109, 'comment_body': 'Why did you need to change `is_mapset_users()` into `is_different_mapset_owner()`? If it is just about clarity of the name then `is_current_user_mapset_owner()` might be better. If it is just about which case it reports as true, then mapset being owned by the current users is the primary or positive case, so I would have function for that and negate the result if need. (The point here is that this is a general functionality/API, not limited to data catalog.) If you really feel like function for the opposite case is needed, then you can wrap the existing one.\r\n\r\nBesides the naming and what it is supposed to do, the current implementation is not correct: The GRASS_SKIP_MAPSET_OWNER_CHECK case does not correspond to `is_different_mapset_owner()`.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467490665, 'comment_body': 'Don\'t bother changing quotes from `""` to `\'`. Although most prevalent style in GRASS is now `\'` for keys, the Black style, which we will use in the future, uses `""` for everything.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467491953, 'comment_body': 'More general way to do this is:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(name=data[""name""])\r\n```\r\n\r\nor making use of the fact data is a dictionary:\r\n\r\n```\r\n_(""{data[name]} (current)"").format(data=data)\r\n```\r\n\r\nor making use of the fact that the only values we are using are from the dictionary:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(**data)\r\n```\r\n\r\nIt is more flexible and possibly also more readable as you see the basic structure of the string being constructed, but in the other cases it is also likely faster since format is already used there anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467554480, 'comment_body': 'I preserved the function is_mapset_users() but renamed it to is_current_user_mapset_owner(). Then I made the wrapping  function called is_different_mapset_owner().', 'comment_created': datetime.datetime(2020, 8, 9, 8, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467554696, 'comment_body': 'For now, I would let it like it is in the last commit. At least it has a uniform form.', 'comment_created': datetime.datetime(2020, 8, 9, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467560232, 'comment_body': 'Rewritten to _(""{name} (current)"").format(**data).', 'comment_created': datetime.datetime(2020, 8, 9, 9, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 468710700, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716371, 'comment_body': '```suggestion\r\n                return _(""{name}  (current)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716531, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use, owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716640, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716777, 'comment_body': '```suggestion\r\n                return _(""{name}  (owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '959ee18def0ff482d739423a1ba7a17bc0630e45', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85bb5ad535964a1311b35aeaa6545c9a7257ad4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0bd553c299eb3893e3783f1a48e51a90fbe4cf29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c722ff8f40eb52de9f8e4f87acde8dc35ba96ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '12985accdf42a7fd9883bada78cdc7389f703a64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55dcbc91d98262f09c7cc80e9d3c5b836440e712', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '41d7418eae4587f40c0ea9ff2883a152b003f768', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75b993f52b88e834a43f32a422420abf3aa4400f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f91460f96cc0d5335971a0f2f1ec7078f67ed31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40fe63178c5827716c28bbe43b850dbfa8045527', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee1359784f3d554ade655b5b29d090a7e0d23961', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49d234c5566bc0ab3a44f2d8c8178a8694c3272', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b980178aba410e00aa11153f406d43ee7adee3e2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e451f9d90d8bbb7f8391e1f272047f8c26a287', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
458383229,wxGUI: An action should be required before modifying other mapsets,"While ""allow editing"" is OFF, no mapsets or location can be renamed or deleted. When ON we are allowed to rename and delete all mapsets and locations besides current ones.",True,848,https://api.github.com/repos/OSGeo/grass/pulls/848,https://github.com/OSGeo/grass/pull/848,closed,196,108,2,5,17,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 11:40:56+00:00,2020-08-04 12:06:25+00:00,519929.0,"6 days, 0:25:29",[],"[{'commit_sha': '4c5ce9bc3677def5cc99b18bc1515da6cbc72708', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2d0df041a2a06a654ee0debfbfcfdf923135d70', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aa849e110596c54e8b9bd5ed535664037d7d12ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28f13794e8155c0b12a85fe55a5214ddadbaea56', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9ee5aeeaeff8adf452004d6b9eeabcb7c4f9797d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
461780523,Misleading lock symbol icon in the in the Data tab toolbar,"**Describe the bug**

The toolbar of Data tab uses lock/unlock symbol for allowing and disallowing edits in mapsets other than the current one. However, the locking refers to something else in GRASS GIS and that it locking of mapsets by a GRASS GIS process/session. That terminology is actually in line with other software where a file is locked when used by another process or instance of the same program.

**Expected behavior**

A new icon is needed. It may have the allowed and restricted states like now or it could be just one symbol relying on the toggle state of the button to convey the change of state. A common icon for editing in GIS, including GRASS GIS, is a pen/pencil, so that's at least a good starting point.

**Suggestion:**

Editing mode allowed:

![allow_edits](https://user-images.githubusercontent.com/49241681/89119528-b79c7380-d474-11ea-8af0-d0b5fdfcd560.png)

No edits allowed:

![disallow_edits](https://user-images.githubusercontent.com/49241681/89119540-cdaa3400-d474-11ea-95e9-2498e8b885b4.png)

What are your suggestions?",True,870,https://api.github.com/repos/OSGeo/grass/pulls/870,https://github.com/OSGeo/grass/pull/870,closed,5,4,2,5,12,0,4,1,"[{'name': 'bug'}, {'name': 'question'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-02 09:01:19+00:00,2020-08-10 18:14:50+00:00,724411.0,"8 days, 9:13:31",[],"[{'commit_sha': 'dfb1a5518ae9a8438b1ba4561e96cee822301d89', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b12961332b216281186bdfe75c0264a1a96aaa08', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '16a230e562b70f500a4178d1e290eb7367f740f9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4794f28d60fbd2a8764ab7bd6241b742830aa077', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd18f100adab181ecbace51864ab772917822c47a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
459360730,Store list of databases in settings,"The GUI should remember the databases added. Every time a new database is added, a list of databases in the user settings should be updated. This way, a new GUI instance should read the user settings and put the databases to the list (if the directories still exist). The GUI should allow to remove the database from the tree. This should again be reflected in the user settings.",True,858,https://api.github.com/repos/OSGeo/grass/pulls/858,https://github.com/OSGeo/grass/pull/858,closed,179,12,6,9,24,10,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-30 16:19:48+00:00,2020-08-08 02:26:19+00:00,727591.0,"8 days, 10:06:31","[{'comment_id': 463725623, 'comment_body': ""Shouldn't this be on the same level as eg. 'manager'?"", 'comment_created': datetime.datetime(2020, 7, 31, 17, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463728775, 'comment_body': 'Maybe empty string than None for consistent types', 'comment_created': datetime.datetime(2020, 7, 31, 17, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463729861, 'comment_body': 'Perhaps this could go into InsertGrassDb directly to avoid code duplication?', 'comment_created': datetime.datetime(2020, 7, 31, 17, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463730392, 'comment_body': ""I am thinking maybe we don't have to inform user about this, just check and see if to add it or no."", 'comment_created': datetime.datetime(2020, 7, 31, 17, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463730641, 'comment_body': ""This doesn't need to be self"", 'comment_created': datetime.datetime(2020, 7, 31, 17, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 466332232, 'comment_body': 'Moved. UserSettings needs to have three values so that now it is:\r\n\r\ngroup=""datacatalog"",\r\nkey=""grassdb""\r\nsubkey=""getString""', 'comment_created': datetime.datetime(2020, 8, 6, 10, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466332996, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 6, 10, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336078, 'comment_body': 'Improved.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336159, 'comment_body': 'Ok.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336801, 'comment_body': 'Eventually It is enough to use  just one variable ""self.grassdatabases"".', 'comment_created': datetime.datetime(2020, 8, 6, 11, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'ea354dc431c33ff06872ea9f4a792fd6c2f154da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7531d28a399f7d9f66e5ab7335eb9466352434a4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0d067c2d9593e3d3f4920a609fa27785bcfe1350', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d5c4e58d69d8025fe3fcb05bc7e0775bc9965a4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8405f68e0bce7e31e5cbb4875e5163707ba619e9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '59cb358ba3c98e227c9df338ac121f816807ec0f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4ce884106c2d7f3212a3750f253aae813344c2a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'defad899bc7ad95ba9269562d25b04d51aa23e8a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d683bcdffef7236a5b7d776b9dccd2863dd37a2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
462802226,Allow delete on multiple locations in data catalog,"There is already the ""Delete mapsets"" option in Data Catalog. The same thing should be enabled for locations.",True,875,https://api.github.com/repos/OSGeo/grass/pulls/875,https://github.com/OSGeo/grass/pull/875,closed,76,34,2,2,0,3,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-04 14:26:13+00:00,2020-08-08 02:23:33+00:00,302240.0,"3 days, 11:57:20","[{'comment_id': 467346931, 'comment_body': '```suggestion\r\n                        ""Deleting locations was interrupted.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467347113, 'comment_body': '```suggestion\r\n            issue = _(""<{}> is current location."").format(location_path)\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467347379, 'comment_body': '```suggestion\r\n    return delete_locations_interactively(guiparent, locations)\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '122971e003c63c2b4b08784242c8209f267f4165', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62eeedf157ad0c7519b6769947fa5e595c5dae1b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
460894257,Start in a demo/startup location,"After creating this directory, follow with another function to create a simple location with some data.

The location demolocation in distribution (GISBASE) can be used for that. If it does not exist and thus cannot be copied, the startup should continue as usual.

I think the name should be startup or startup_location. It is more descriptive than demolocation but still clearly conveying it is not meant for normal use.

The startup mechanism for the first-time user should make use the mapset concept because it will both ensure preserving the data in PERMANENT intact and, at the same time, it will show how to use the mapset concept at least in the relation to the PERMANENT mapset.

When the startup/demo location is created/copied, a new mapset should be created there and used for starting, not the PERMANENT.

It will be only one mapset, but eventually there will be more than one, so probably some name_1, name_2, ... will be needed. ",True,868,https://api.github.com/repos/OSGeo/grass/pulls/868,https://github.com/OSGeo/grass/pull/868,closed,84,4,2,12,3,37,2,1,"[{'name': 'enhancement'}, {'name': 'gsoc'}]",2020-08-01 08:03:36+00:00,2020-08-20 04:13:31+00:00,1627795.0,"18 days, 20:09:55","[{'comment_id': 464448537, 'comment_body': '```\r\n    home = os.path.expanduser(""~"")\r\n    demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n```\r\nDo I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n\r\nMore generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464465069, 'comment_body': '```suggestion\r\n    home = os.path.expanduser(""~"")\r\n    src = os.path.join(home, ""grass"", ""demolocation"")\r\n    dst = os.path.join(grassdatabase, ""demolocation"")\r\n\r\n        # Copy source demolocation into GRASS database\r\n    try:\r\n        copytree(src, dst, ignore=ignore_patterns(\'*.tmpl\',\'Makefile*\'))\r\n```\r\n\r\nOtherwise, copytree() gives an error message since the dst directory (grassdatabase) already exists.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464849367, 'comment_body': '> \r\n> \r\n> > I have a problem with testing that. Not able to get into the initial state.\r\n> > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\r\n> > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\r\n> \r\n> For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\r\n\r\nYes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464852552, 'comment_body': '> \r\n> \r\n> ```\r\n>     home = os.path.expanduser(""~"")\r\n>     demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n> ```\r\n> \r\n> Do I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n> \r\n> More generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.\r\n\r\nI am not sure where in user\'s directory the demolocation will eventually exist. You have mentioned the directory usr/lib/grassXY/demolocation but I do not have any ""grassXY"" directory. I have only ""grass"". I looked at environmental variables, there is a variable GISBASE in my case /home/linwe/grass/dist.x86_64-pc-linux-gnu. Is it the variable I should use?\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464919073, 'comment_body': 'Yes, it would be GISBASE. In grassXY X represents the major and Y the minor version as in many distributions GRASS GIS is installed at e.g. /usr/lib/grass78.\n\nBut getting the GISBASE content should be enough, I think.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464920659, 'comment_body': 'Might this be the reason you get stuck ? Try moving the entire .grass7 folder, or at least the rc file in it. If that still is present and contains the info on the last used location, then LOCATION_NAME will not be UNKNOWN.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464921669, 'comment_body': '> > \n> > \n> > > I have a problem with testing that. Not able to get into the initial state.\n> > > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\n> > > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\n> > \n> > For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\n> \n> Yes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \n> \n\nSee my comment in the code: could it be be that LOCATION_NAME is not unknown in your case so it returns before ?', 'comment_created': datetime.datetime(2020, 8, 4, 9, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464998052, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 4, 11, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465002299, 'comment_body': 'I think it is not the right one. I found on my computer  ""computer/usr/lib/grass78"" directory. and GISBASE is /home/linwe/grass/dist.x86_64-pc-linux-gnu for me. And also demolocation was added into Debian installation but not Windows one. Am I right? ', 'comment_created': datetime.datetime(2020, 8, 4, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465039353, 'comment_body': '```suggestion\r\n    startup_location = os.path.join(gisbase, ""demolocation"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 465115768, 'comment_body': 'Yes! Good point. I had to remove rc file and suddenly it works as never. :-)', 'comment_created': datetime.datetime(2020, 8, 4, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467500774, 'comment_body': ""Since we may have a function which which tries to find existing user's copy/version/instance of the startup/demo location, I think this function name should be `get_startup_location_template()` to avoid confusion. The term _template_ is not used in GRASS, but it is common else where. Alternative is `get_startup_location_in_distribution()` which is what the function is doing, so perhaps better expressing the current that."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467500826, 'comment_body': 'No need to do `as why` when you are ignoring the `why` anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467502704, 'comment_body': ""You are ignoring the return value from `copy_startup_location()`. Perhaps, you can wrap this whole thing into one function, maybe named `get_startup_location()`, which will return the location/mapset on success and None otherwise and internally resolve all the cases (no location to copy, copying failed, and, possibly, also an existing user's copy of the location).\r\n\r\nPerhaps more importantly, it is not clear to me if this is meant to actually start in a mapset in this location. Creating this location if there is no other location is good, but actually using it, means picking also a mapset and starting in that one. With that, the overarching function should be something like `get_mapset_in_startup_location()` and it would take care of all above plus picking, probably creating, a mapset to use."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467503522, 'comment_body': ""Well, actually, if you want to leave this PR just at creating the location and solving the actual starting in some mapset there in another PR, that's fine with me."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467543597, 'comment_body': 'Yep, get_startup_location_in_distribution() seems clearer. I used that.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467544524, 'comment_body': '""as why"" removed.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471057311, 'comment_body': 'This should use the format function (method of string).', 'comment_created': datetime.datetime(2020, 8, 16, 2, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057512, 'comment_body': 'Rather than a triple nested if statement, use the ""`if not bar: return None`"" paradigm.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057748, 'comment_body': '`location` instead of `startup_location` is probably sufficient.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058227, 'comment_body': ""Since you added the mapset part in this PR, let's continue here. Now the mapset is not used and the user is presented with two mapsets to choose from. This is a situation we want to avoid. Let's take then the final steps from `OnStart()` and set the mapset and exit the startup with:\r\n\r\n```\r\n        self.SetLocation(dbase, location, mapset)\r\n        self.ExitSuccessfully()\r\n```\r\n\r\nThis will achieve the final/actual goal of #862 (see the title)."", 'comment_created': datetime.datetime(2020, 8, 16, 3, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058974, 'comment_body': 'Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471059453, 'comment_body': ""You are actually modifying the name variable here. If you run this more than once, you will get username, username_1, username_1_1, username_1_1_1, ... while you probably wanted username, username_2, username_3, ...\r\n\r\nSince this won't be used for the first time user, you can test this before fixing the modification of the location in the distribution. It is sufficient just to delete the config and grassdata dir as in case of a single test (i.e., just do the single test multiple times.)"", 'comment_created': datetime.datetime(2020, 8, 16, 3, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471061017, 'comment_body': 'The name which seems to be finalist in #862 is `world_latlong_wgs84`.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471092071, 'comment_body': '> \r\n> \r\n> Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.\r\n\r\nCorrected.', 'comment_created': datetime.datetime(2020, 8, 16, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471198276, 'comment_body': 'Having this call at the end of function called `SuggestDatabase` should be suspicious.\r\n\r\nThe point is that the first time user* will be brought into the newly created location, not everybody.\r\n\r\nOn top of that, just from reading the code, it looks like `grassdatabase, location, mapset_name` will not be defined on like 543 unless the `if path is None:` case happens. Did you test this for case when `path` is not `None`, i.e., `get_possible_database_path()` found something?\r\n\r\n* Here defined as the case when the startup location was created.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203310, 'comment_body': 'The return value is not fully documented. I think if you try to write documentation, you may also see that returning the database path is little strange because it is the input which is not expected to be changed.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203836, 'comment_body': 'You may want to call this variable `location_in_dist` or something like that to be sure you always use it in the right way. See e.g. your return statement (Does this code run?).', 'comment_created': datetime.datetime(2020, 8, 17, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471204607, 'comment_body': ""Is the _existing user's copy_ something you already tried to address or is it just something you are planning? I don't see it in the code."", 'comment_created': datetime.datetime(2020, 8, 17, 2, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471208420, 'comment_body': ""Using `GISBASE` is the right thing to do now. Let's not worry about distributions/installations right now."", 'comment_created': datetime.datetime(2020, 8, 17, 3, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472102560, 'comment_body': 'I think that the existing user\'s copy of ""world_latlong_wgs84"" is something that could not be reached now because I create a startup location only in the case when ""grassdata"" does not exist. So it is clear that ""grassdata/world_latlong_wgs84"" does not exist either.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 473553912, 'comment_body': '```suggestion\r\n    """"""Create a new startup location in the given GRASS database.\r\n\r\n    Returns the newly created mapset name on success. Returns None if there is\r\n    no location to copy in the installation or copying failed.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473555081, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473559713, 'comment_body': 'It starts now for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560093, 'comment_body': 'These two lines are now there.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560737, 'comment_body': 'The call is now at the right place in terms of starting there for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473561403, 'comment_body': 'Returning the mapset only and having the caller set the name is fine now. Might be more challenging in the future.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '15b014c1f5f301d89f24ac627c7c08dddc3cfa4e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31b6c82325df5c14a30a9d2b9098f047e2575964', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e5baf56c52c66097a79382ae99226ef8526c6361', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be368df23c77318d30c01bc7f0386bebba483b5d', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694df2ef2b8a731b71e344056268baf9a4076fe7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60f7b496a0a7a1afff073deb5826250bcf68a461', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4ec26ca07619d81a78ed1bc87bf3aa8b6b755a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd969a164eefbbf7ce6f52eddeeeec2381e845c14', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a1914399eae4b96c678bf3b8e65634d95709804', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '50d392205e801842628660e1b152b993cf3ec485', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3ce298257703d38154d8261dcfd9409fd61bc7c9', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b2c2881a412dbbf914222a975245cbaa68f795', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
458462469,Distinguish mapsets by ownership and lock in Data tab,"In the startup screen it would be nice if mapsets could be displayed differently (e.g. different colors, for ""my mapsets"", ""my locked mapsets"", ""others mapsets"").

Mapsets owned by different user and locked mapsets will be displayed in gray and distinguished from ""normal mapsets"" by special label.


",True,849,https://api.github.com/repos/OSGeo/grass/pulls/849,https://github.com/OSGeo/grass/pull/849,closed,117,35,2,14,5,28,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 14:04:42+00:00,2020-08-11 16:46:48+00:00,1132926.0,"13 days, 2:42:06","[{'comment_id': 462342973, 'comment_body': ""Instead of this, it should be more `get_mapset_owner`, which will return the owner even if it's the the user."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 462348747, 'comment_body': ""OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n\r\nThe idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463033992, 'comment_body': ""No sure where to add more information to node.data. Where is e.g. node.data['name'] defined? "", 'comment_created': datetime.datetime(2020, 7, 30, 14, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463721905, 'comment_body': ""You need to return directly the wx.SYS....\r\n\r\nDelete '== True '"", 'comment_created': datetime.datetime(2020, 7, 31, 16, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463722843, 'comment_body': 'This all need to be called for all reload functions, not just that one, look eg. what reloadtreenodes is calling', 'comment_created': datetime.datetime(2020, 7, 31, 16, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463723315, 'comment_body': 'Just pass directly is_mapset_locked result', 'comment_created': datetime.datetime(2020, 7, 31, 16, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463929255, 'comment_body': 'Edited.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929720, 'comment_body': 'I edited the way how to append mapset node in functions _reloadLocationNode, _reloadGrassDBNode and GetCurrentDbLocationMapsetNode. Also after these edits I have still the same above-mentioned ""key"" error. I think I should define ""lock"" and ""user"" keys maybe in treemodel? But it seems strange to me because treemodel is a very general function and there is no explicit definition of what keys and values actually are.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929728, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464498802, 'comment_body': '> No sure where to add more information to node.data. Where is e.g. node.data[\'name\'] defined?\r\n\r\nI haven\'t delved deeply into this code, yet, but IIUC, these are defined whenever you create a dictionary for a tree node, e.g. on lines 336ff (in this PR):\r\n\r\n```\r\n            mapset_node = self._model.AppendNode(\r\n                                parent=location_node,\r\n                                data=dict(type=\'mapset\',\r\n                                          name=mapset,\r\n                                          lock=is_mapset_locked(mapset_path),\r\n                                          user=different_user))\r\n```\r\nSo, ""lock"" seems to be defined for mapset nodes whenever they are created (also elsewhere in the code). But AFAICT location_nodes do not include the ""lock"" key.', 'comment_created': datetime.datetime(2020, 8, 3, 15, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464505301, 'comment_body': ""> OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n> \r\n> The idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method.\r\n\r\nIIUC, this is true for many other OnGetItem method that you propose."", 'comment_created': datetime.datetime(2020, 8, 3, 15, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 467191023, 'comment_body': 'I would use ""(owner: xxx)"" and ""(in use, owner: xxx)""\r\nWe thought ""in use"" might be more understandable than \'locked\' \r\n\r\nalso, it should be translatable _()', 'comment_created': datetime.datetime(2020, 8, 7, 18, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467194597, 'comment_body': 'You should probably have data[""owner""] (that would be result of get_mapset_owner) and additionally data[""is_different_owner""] (result of is_mapset_users - bool). Then just adjust the label() code. This is more cosmetics, but it makes sense more like that.', 'comment_created': datetime.datetime(2020, 8, 7, 18, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467197170, 'comment_body': ""I don't think this is needed, it will search the nodes based on name and mapset, that's enough."", 'comment_created': datetime.datetime(2020, 8, 7, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467365216, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467367017, 'comment_body': '""Check mapset ownership"" part removed and mapset_node dictionary (lock, is_different_owner, owner) set. All decisions about what label to use are now made in @property function.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467449381, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 8, 10, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467490109, 'comment_body': 'Why did you need to change `is_mapset_users()` into `is_different_mapset_owner()`? If it is just about clarity of the name then `is_current_user_mapset_owner()` might be better. If it is just about which case it reports as true, then mapset being owned by the current users is the primary or positive case, so I would have function for that and negate the result if need. (The point here is that this is a general functionality/API, not limited to data catalog.) If you really feel like function for the opposite case is needed, then you can wrap the existing one.\r\n\r\nBesides the naming and what it is supposed to do, the current implementation is not correct: The GRASS_SKIP_MAPSET_OWNER_CHECK case does not correspond to `is_different_mapset_owner()`.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467490665, 'comment_body': 'Don\'t bother changing quotes from `""` to `\'`. Although most prevalent style in GRASS is now `\'` for keys, the Black style, which we will use in the future, uses `""` for everything.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467491953, 'comment_body': 'More general way to do this is:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(name=data[""name""])\r\n```\r\n\r\nor making use of the fact data is a dictionary:\r\n\r\n```\r\n_(""{data[name]} (current)"").format(data=data)\r\n```\r\n\r\nor making use of the fact that the only values we are using are from the dictionary:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(**data)\r\n```\r\n\r\nIt is more flexible and possibly also more readable as you see the basic structure of the string being constructed, but in the other cases it is also likely faster since format is already used there anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467554480, 'comment_body': 'I preserved the function is_mapset_users() but renamed it to is_current_user_mapset_owner(). Then I made the wrapping  function called is_different_mapset_owner().', 'comment_created': datetime.datetime(2020, 8, 9, 8, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467554696, 'comment_body': 'For now, I would let it like it is in the last commit. At least it has a uniform form.', 'comment_created': datetime.datetime(2020, 8, 9, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467560232, 'comment_body': 'Rewritten to _(""{name} (current)"").format(**data).', 'comment_created': datetime.datetime(2020, 8, 9, 9, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 468710700, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716371, 'comment_body': '```suggestion\r\n                return _(""{name}  (current)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716531, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use, owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716640, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716777, 'comment_body': '```suggestion\r\n                return _(""{name}  (owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '959ee18def0ff482d739423a1ba7a17bc0630e45', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85bb5ad535964a1311b35aeaa6545c9a7257ad4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0bd553c299eb3893e3783f1a48e51a90fbe4cf29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c722ff8f40eb52de9f8e4f87acde8dc35ba96ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '12985accdf42a7fd9883bada78cdc7389f703a64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55dcbc91d98262f09c7cc80e9d3c5b836440e712', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '41d7418eae4587f40c0ea9ff2883a152b003f768', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75b993f52b88e834a43f32a422420abf3aa4400f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f91460f96cc0d5335971a0f2f1ec7078f67ed31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40fe63178c5827716c28bbe43b850dbfa8045527', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee1359784f3d554ade655b5b29d090a7e0d23961', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49d234c5566bc0ab3a44f2d8c8178a8694c3272', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b980178aba410e00aa11153f406d43ee7adee3e2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e451f9d90d8bbb7f8391e1f272047f8c26a287', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
465145424,Data catalog: double click on map from different location fails,"**Describe the bug**
Double click on map from different than current location adds the layer into layer tree but the layer does not exist in current location so it fails to display it.

**Expected behavior**
I suppose it should inform user that the map is in different location and ask if they want to switch to that mapset.",True,886,https://api.github.com/repos/OSGeo/grass/pulls/886,https://github.com/OSGeo/grass/pull/886,closed,26,4,1,5,1,3,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-09 12:20:56+00:00,2020-08-12 13:35:23+00:00,263667.0,"3 days, 1:14:27","[{'comment_id': 468867040, 'comment_body': 'Let\'s make the message little bit more specific:\r\n""Map \\<mymap@mapset\\> is not in the current location and therefore cannot be displayed. \\n\\n To display this map switch to mapset \\<mapset\\> first."" ', 'comment_created': datetime.datetime(2020, 8, 11, 21, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257471, 'comment_body': '```suggestion\r\n                            ""To display this map switch to mapset <{1}> first.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257992, 'comment_body': '```suggestion\r\n                            ""Map <{0}@{1}> is not in the current location""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '35dd7d3ebce4ef9337170c1a2f0672a59f8c583a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '020ee6e16aa7e8490a735fbed95a3523dc5edca5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f0d1266c0483c79f4fa31a53691627462b0a170f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35c46222c87e870efcda588f7af560985f2b307b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7dc0ec29ae11a47ec9d3b20c4d93065cd2f53ba', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
458462469,Distinguish mapsets by ownership and lock in Data tab,"In the startup screen it would be nice if mapsets could be displayed differently (e.g. different colors, for ""my mapsets"", ""my locked mapsets"", ""others mapsets"").

Mapsets owned by different user and locked mapsets will be displayed in gray and distinguished from ""normal mapsets"" by special label.


",True,849,https://api.github.com/repos/OSGeo/grass/pulls/849,https://github.com/OSGeo/grass/pull/849,closed,117,35,2,14,5,28,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 14:04:42+00:00,2020-08-11 16:46:48+00:00,1132926.0,"13 days, 2:42:06","[{'comment_id': 462342973, 'comment_body': ""Instead of this, it should be more `get_mapset_owner`, which will return the owner even if it's the the user."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 462348747, 'comment_body': ""OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n\r\nThe idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463033992, 'comment_body': ""No sure where to add more information to node.data. Where is e.g. node.data['name'] defined? "", 'comment_created': datetime.datetime(2020, 7, 30, 14, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463721905, 'comment_body': ""You need to return directly the wx.SYS....\r\n\r\nDelete '== True '"", 'comment_created': datetime.datetime(2020, 7, 31, 16, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463722843, 'comment_body': 'This all need to be called for all reload functions, not just that one, look eg. what reloadtreenodes is calling', 'comment_created': datetime.datetime(2020, 7, 31, 16, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463723315, 'comment_body': 'Just pass directly is_mapset_locked result', 'comment_created': datetime.datetime(2020, 7, 31, 16, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463929255, 'comment_body': 'Edited.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929720, 'comment_body': 'I edited the way how to append mapset node in functions _reloadLocationNode, _reloadGrassDBNode and GetCurrentDbLocationMapsetNode. Also after these edits I have still the same above-mentioned ""key"" error. I think I should define ""lock"" and ""user"" keys maybe in treemodel? But it seems strange to me because treemodel is a very general function and there is no explicit definition of what keys and values actually are.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929728, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464498802, 'comment_body': '> No sure where to add more information to node.data. Where is e.g. node.data[\'name\'] defined?\r\n\r\nI haven\'t delved deeply into this code, yet, but IIUC, these are defined whenever you create a dictionary for a tree node, e.g. on lines 336ff (in this PR):\r\n\r\n```\r\n            mapset_node = self._model.AppendNode(\r\n                                parent=location_node,\r\n                                data=dict(type=\'mapset\',\r\n                                          name=mapset,\r\n                                          lock=is_mapset_locked(mapset_path),\r\n                                          user=different_user))\r\n```\r\nSo, ""lock"" seems to be defined for mapset nodes whenever they are created (also elsewhere in the code). But AFAICT location_nodes do not include the ""lock"" key.', 'comment_created': datetime.datetime(2020, 8, 3, 15, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464505301, 'comment_body': ""> OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n> \r\n> The idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method.\r\n\r\nIIUC, this is true for many other OnGetItem method that you propose."", 'comment_created': datetime.datetime(2020, 8, 3, 15, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 467191023, 'comment_body': 'I would use ""(owner: xxx)"" and ""(in use, owner: xxx)""\r\nWe thought ""in use"" might be more understandable than \'locked\' \r\n\r\nalso, it should be translatable _()', 'comment_created': datetime.datetime(2020, 8, 7, 18, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467194597, 'comment_body': 'You should probably have data[""owner""] (that would be result of get_mapset_owner) and additionally data[""is_different_owner""] (result of is_mapset_users - bool). Then just adjust the label() code. This is more cosmetics, but it makes sense more like that.', 'comment_created': datetime.datetime(2020, 8, 7, 18, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467197170, 'comment_body': ""I don't think this is needed, it will search the nodes based on name and mapset, that's enough."", 'comment_created': datetime.datetime(2020, 8, 7, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467365216, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467367017, 'comment_body': '""Check mapset ownership"" part removed and mapset_node dictionary (lock, is_different_owner, owner) set. All decisions about what label to use are now made in @property function.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467449381, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 8, 10, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467490109, 'comment_body': 'Why did you need to change `is_mapset_users()` into `is_different_mapset_owner()`? If it is just about clarity of the name then `is_current_user_mapset_owner()` might be better. If it is just about which case it reports as true, then mapset being owned by the current users is the primary or positive case, so I would have function for that and negate the result if need. (The point here is that this is a general functionality/API, not limited to data catalog.) If you really feel like function for the opposite case is needed, then you can wrap the existing one.\r\n\r\nBesides the naming and what it is supposed to do, the current implementation is not correct: The GRASS_SKIP_MAPSET_OWNER_CHECK case does not correspond to `is_different_mapset_owner()`.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467490665, 'comment_body': 'Don\'t bother changing quotes from `""` to `\'`. Although most prevalent style in GRASS is now `\'` for keys, the Black style, which we will use in the future, uses `""` for everything.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467491953, 'comment_body': 'More general way to do this is:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(name=data[""name""])\r\n```\r\n\r\nor making use of the fact data is a dictionary:\r\n\r\n```\r\n_(""{data[name]} (current)"").format(data=data)\r\n```\r\n\r\nor making use of the fact that the only values we are using are from the dictionary:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(**data)\r\n```\r\n\r\nIt is more flexible and possibly also more readable as you see the basic structure of the string being constructed, but in the other cases it is also likely faster since format is already used there anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467554480, 'comment_body': 'I preserved the function is_mapset_users() but renamed it to is_current_user_mapset_owner(). Then I made the wrapping  function called is_different_mapset_owner().', 'comment_created': datetime.datetime(2020, 8, 9, 8, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467554696, 'comment_body': 'For now, I would let it like it is in the last commit. At least it has a uniform form.', 'comment_created': datetime.datetime(2020, 8, 9, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467560232, 'comment_body': 'Rewritten to _(""{name} (current)"").format(**data).', 'comment_created': datetime.datetime(2020, 8, 9, 9, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 468710700, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716371, 'comment_body': '```suggestion\r\n                return _(""{name}  (current)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716531, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use, owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716640, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716777, 'comment_body': '```suggestion\r\n                return _(""{name}  (owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '959ee18def0ff482d739423a1ba7a17bc0630e45', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85bb5ad535964a1311b35aeaa6545c9a7257ad4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0bd553c299eb3893e3783f1a48e51a90fbe4cf29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c722ff8f40eb52de9f8e4f87acde8dc35ba96ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '12985accdf42a7fd9883bada78cdc7389f703a64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55dcbc91d98262f09c7cc80e9d3c5b836440e712', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '41d7418eae4587f40c0ea9ff2883a152b003f768', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75b993f52b88e834a43f32a422420abf3aa4400f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f91460f96cc0d5335971a0f2f1ec7078f67ed31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40fe63178c5827716c28bbe43b850dbfa8045527', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee1359784f3d554ade655b5b29d090a7e0d23961', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49d234c5566bc0ab3a44f2d8c8178a8694c3272', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b980178aba410e00aa11153f406d43ee7adee3e2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e451f9d90d8bbb7f8391e1f272047f8c26a287', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
465145424,Data catalog: double click on map from different location fails,"**Describe the bug**
Double click on map from different than current location adds the layer into layer tree but the layer does not exist in current location so it fails to display it.

**Expected behavior**
I suppose it should inform user that the map is in different location and ask if they want to switch to that mapset.",True,886,https://api.github.com/repos/OSGeo/grass/pulls/886,https://github.com/OSGeo/grass/pull/886,closed,26,4,1,5,1,3,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-09 12:20:56+00:00,2020-08-12 13:35:23+00:00,263667.0,"3 days, 1:14:27","[{'comment_id': 468867040, 'comment_body': 'Let\'s make the message little bit more specific:\r\n""Map \\<mymap@mapset\\> is not in the current location and therefore cannot be displayed. \\n\\n To display this map switch to mapset \\<mapset\\> first."" ', 'comment_created': datetime.datetime(2020, 8, 11, 21, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257471, 'comment_body': '```suggestion\r\n                            ""To display this map switch to mapset <{1}> first.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257992, 'comment_body': '```suggestion\r\n                            ""Map <{0}@{1}> is not in the current location""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '35dd7d3ebce4ef9337170c1a2f0672a59f8c583a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '020ee6e16aa7e8490a735fbed95a3523dc5edca5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f0d1266c0483c79f4fa31a53691627462b0a170f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35c46222c87e870efcda588f7af560985f2b307b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7dc0ec29ae11a47ec9d3b20c4d93065cd2f53ba', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
460894257,Start in a demo/startup location,"After creating this directory, follow with another function to create a simple location with some data.

The location demolocation in distribution (GISBASE) can be used for that. If it does not exist and thus cannot be copied, the startup should continue as usual.

I think the name should be startup or startup_location. It is more descriptive than demolocation but still clearly conveying it is not meant for normal use.

The startup mechanism for the first-time user should make use the mapset concept because it will both ensure preserving the data in PERMANENT intact and, at the same time, it will show how to use the mapset concept at least in the relation to the PERMANENT mapset.

When the startup/demo location is created/copied, a new mapset should be created there and used for starting, not the PERMANENT.

It will be only one mapset, but eventually there will be more than one, so probably some name_1, name_2, ... will be needed. ",True,868,https://api.github.com/repos/OSGeo/grass/pulls/868,https://github.com/OSGeo/grass/pull/868,closed,84,4,2,12,3,37,2,1,"[{'name': 'enhancement'}, {'name': 'gsoc'}]",2020-08-01 08:03:36+00:00,2020-08-20 04:13:31+00:00,1627795.0,"18 days, 20:09:55","[{'comment_id': 464448537, 'comment_body': '```\r\n    home = os.path.expanduser(""~"")\r\n    demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n```\r\nDo I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n\r\nMore generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464465069, 'comment_body': '```suggestion\r\n    home = os.path.expanduser(""~"")\r\n    src = os.path.join(home, ""grass"", ""demolocation"")\r\n    dst = os.path.join(grassdatabase, ""demolocation"")\r\n\r\n        # Copy source demolocation into GRASS database\r\n    try:\r\n        copytree(src, dst, ignore=ignore_patterns(\'*.tmpl\',\'Makefile*\'))\r\n```\r\n\r\nOtherwise, copytree() gives an error message since the dst directory (grassdatabase) already exists.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464849367, 'comment_body': '> \r\n> \r\n> > I have a problem with testing that. Not able to get into the initial state.\r\n> > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\r\n> > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\r\n> \r\n> For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\r\n\r\nYes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464852552, 'comment_body': '> \r\n> \r\n> ```\r\n>     home = os.path.expanduser(""~"")\r\n>     demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n> ```\r\n> \r\n> Do I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n> \r\n> More generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.\r\n\r\nI am not sure where in user\'s directory the demolocation will eventually exist. You have mentioned the directory usr/lib/grassXY/demolocation but I do not have any ""grassXY"" directory. I have only ""grass"". I looked at environmental variables, there is a variable GISBASE in my case /home/linwe/grass/dist.x86_64-pc-linux-gnu. Is it the variable I should use?\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464919073, 'comment_body': 'Yes, it would be GISBASE. In grassXY X represents the major and Y the minor version as in many distributions GRASS GIS is installed at e.g. /usr/lib/grass78.\n\nBut getting the GISBASE content should be enough, I think.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464920659, 'comment_body': 'Might this be the reason you get stuck ? Try moving the entire .grass7 folder, or at least the rc file in it. If that still is present and contains the info on the last used location, then LOCATION_NAME will not be UNKNOWN.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464921669, 'comment_body': '> > \n> > \n> > > I have a problem with testing that. Not able to get into the initial state.\n> > > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\n> > > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\n> > \n> > For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\n> \n> Yes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \n> \n\nSee my comment in the code: could it be be that LOCATION_NAME is not unknown in your case so it returns before ?', 'comment_created': datetime.datetime(2020, 8, 4, 9, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464998052, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 4, 11, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465002299, 'comment_body': 'I think it is not the right one. I found on my computer  ""computer/usr/lib/grass78"" directory. and GISBASE is /home/linwe/grass/dist.x86_64-pc-linux-gnu for me. And also demolocation was added into Debian installation but not Windows one. Am I right? ', 'comment_created': datetime.datetime(2020, 8, 4, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465039353, 'comment_body': '```suggestion\r\n    startup_location = os.path.join(gisbase, ""demolocation"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 465115768, 'comment_body': 'Yes! Good point. I had to remove rc file and suddenly it works as never. :-)', 'comment_created': datetime.datetime(2020, 8, 4, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467500774, 'comment_body': ""Since we may have a function which which tries to find existing user's copy/version/instance of the startup/demo location, I think this function name should be `get_startup_location_template()` to avoid confusion. The term _template_ is not used in GRASS, but it is common else where. Alternative is `get_startup_location_in_distribution()` which is what the function is doing, so perhaps better expressing the current that."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467500826, 'comment_body': 'No need to do `as why` when you are ignoring the `why` anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467502704, 'comment_body': ""You are ignoring the return value from `copy_startup_location()`. Perhaps, you can wrap this whole thing into one function, maybe named `get_startup_location()`, which will return the location/mapset on success and None otherwise and internally resolve all the cases (no location to copy, copying failed, and, possibly, also an existing user's copy of the location).\r\n\r\nPerhaps more importantly, it is not clear to me if this is meant to actually start in a mapset in this location. Creating this location if there is no other location is good, but actually using it, means picking also a mapset and starting in that one. With that, the overarching function should be something like `get_mapset_in_startup_location()` and it would take care of all above plus picking, probably creating, a mapset to use."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467503522, 'comment_body': ""Well, actually, if you want to leave this PR just at creating the location and solving the actual starting in some mapset there in another PR, that's fine with me."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467543597, 'comment_body': 'Yep, get_startup_location_in_distribution() seems clearer. I used that.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467544524, 'comment_body': '""as why"" removed.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471057311, 'comment_body': 'This should use the format function (method of string).', 'comment_created': datetime.datetime(2020, 8, 16, 2, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057512, 'comment_body': 'Rather than a triple nested if statement, use the ""`if not bar: return None`"" paradigm.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057748, 'comment_body': '`location` instead of `startup_location` is probably sufficient.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058227, 'comment_body': ""Since you added the mapset part in this PR, let's continue here. Now the mapset is not used and the user is presented with two mapsets to choose from. This is a situation we want to avoid. Let's take then the final steps from `OnStart()` and set the mapset and exit the startup with:\r\n\r\n```\r\n        self.SetLocation(dbase, location, mapset)\r\n        self.ExitSuccessfully()\r\n```\r\n\r\nThis will achieve the final/actual goal of #862 (see the title)."", 'comment_created': datetime.datetime(2020, 8, 16, 3, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058974, 'comment_body': 'Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471059453, 'comment_body': ""You are actually modifying the name variable here. If you run this more than once, you will get username, username_1, username_1_1, username_1_1_1, ... while you probably wanted username, username_2, username_3, ...\r\n\r\nSince this won't be used for the first time user, you can test this before fixing the modification of the location in the distribution. It is sufficient just to delete the config and grassdata dir as in case of a single test (i.e., just do the single test multiple times.)"", 'comment_created': datetime.datetime(2020, 8, 16, 3, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471061017, 'comment_body': 'The name which seems to be finalist in #862 is `world_latlong_wgs84`.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471092071, 'comment_body': '> \r\n> \r\n> Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.\r\n\r\nCorrected.', 'comment_created': datetime.datetime(2020, 8, 16, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471198276, 'comment_body': 'Having this call at the end of function called `SuggestDatabase` should be suspicious.\r\n\r\nThe point is that the first time user* will be brought into the newly created location, not everybody.\r\n\r\nOn top of that, just from reading the code, it looks like `grassdatabase, location, mapset_name` will not be defined on like 543 unless the `if path is None:` case happens. Did you test this for case when `path` is not `None`, i.e., `get_possible_database_path()` found something?\r\n\r\n* Here defined as the case when the startup location was created.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203310, 'comment_body': 'The return value is not fully documented. I think if you try to write documentation, you may also see that returning the database path is little strange because it is the input which is not expected to be changed.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203836, 'comment_body': 'You may want to call this variable `location_in_dist` or something like that to be sure you always use it in the right way. See e.g. your return statement (Does this code run?).', 'comment_created': datetime.datetime(2020, 8, 17, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471204607, 'comment_body': ""Is the _existing user's copy_ something you already tried to address or is it just something you are planning? I don't see it in the code."", 'comment_created': datetime.datetime(2020, 8, 17, 2, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471208420, 'comment_body': ""Using `GISBASE` is the right thing to do now. Let's not worry about distributions/installations right now."", 'comment_created': datetime.datetime(2020, 8, 17, 3, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472102560, 'comment_body': 'I think that the existing user\'s copy of ""world_latlong_wgs84"" is something that could not be reached now because I create a startup location only in the case when ""grassdata"" does not exist. So it is clear that ""grassdata/world_latlong_wgs84"" does not exist either.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 473553912, 'comment_body': '```suggestion\r\n    """"""Create a new startup location in the given GRASS database.\r\n\r\n    Returns the newly created mapset name on success. Returns None if there is\r\n    no location to copy in the installation or copying failed.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473555081, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473559713, 'comment_body': 'It starts now for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560093, 'comment_body': 'These two lines are now there.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560737, 'comment_body': 'The call is now at the right place in terms of starting there for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473561403, 'comment_body': 'Returning the mapset only and having the caller set the name is fine now. Might be more challenging in the future.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '15b014c1f5f301d89f24ac627c7c08dddc3cfa4e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31b6c82325df5c14a30a9d2b9098f047e2575964', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e5baf56c52c66097a79382ae99226ef8526c6361', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be368df23c77318d30c01bc7f0386bebba483b5d', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694df2ef2b8a731b71e344056268baf9a4076fe7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60f7b496a0a7a1afff073deb5826250bcf68a461', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4ec26ca07619d81a78ed1bc87bf3aa8b6b755a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd969a164eefbbf7ce6f52eddeeeec2381e845c14', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a1914399eae4b96c678bf3b8e65634d95709804', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '50d392205e801842628660e1b152b993cf3ec485', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3ce298257703d38154d8261dcfd9409fd61bc7c9', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b2c2881a412dbbf914222a975245cbaa68f795', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
466861464,Check for gislock and other issues when deleting/renaming/editing mapset and location in catalog,"Currently we don't have mechanism in data catalog to check for gislock and if mapset belongs to different user, so that we prevent user from actions including deleting or renaming mapset, and editing layers. The same applies to location deleting/renaming, it needs to check whether all mapsets can be edited.",True,904,https://api.github.com/repos/OSGeo/grass/pulls/904,https://github.com/OSGeo/grass/pull/904,closed,333,239,3,13,0,24,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-12 15:53:13+00:00,2020-08-19 17:42:31+00:00,611358.0,"7 days, 1:49:18","[{'comment_id': 470658118, 'comment_body': 'The checks should be done in check_mapset_interactively for 1 mapset and then check_mapsets_interactively will call check_mapset_interactively in a for loop. The way you have it now works, but this way it will make more sense.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470658856, 'comment_body': ""'exception' would mean a Python exception, but these are more 'failed checks' or something like that."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470659179, 'comment_body': '```suggestion\r\n        if check_permanent and mapset == ""PERMANENT"":\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 14, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660055, 'comment_body': 'Remove ""therefore changes are not allowed"", just state the problem.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660323, 'comment_body': 'the same for locations', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662672, 'comment_body': 'use +=', 'comment_created': datetime.datetime(2020, 8, 14, 14, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662855, 'comment_body': 'put on 1 line', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663123, 'comment_body': ""```suggestion\r\n            env=env).strip().split(',')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663293, 'comment_body': 'tmp_gisrc_file needs to be removed, see tree.py', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470674065, 'comment_body': ""The names of the functions should be probably different. Something like `get_reason_mapset_not_removable` and  `get_reasons_mapsets_not_removable`. It doesn't sound great but describes what it's doing."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471067478, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471067487, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471069846, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471152590, 'comment_body': 'I think we wanted ""get_reason_mapset_not_removable"", currently the implementation reports 1 reason because you have elif there and not if for every case. We could also report multiple reasons (e.g. mapset can be locked and PERMANENT), but I would keep single reason. Therefore the name should reflect that. It\'s a detail, but let\'s get it right.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471152984, 'comment_body': ""You can't just blindly copy code. This is handling communication from parallelized calls of getLocationTree function, remove it."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153386, 'comment_body': 'Probably could say cannot rename mapset `<mapset>` for ...', 'comment_created': datetime.datetime(2020, 8, 16, 20, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153590, 'comment_body': 'Also it should return message as string (or None), not list to keep it all consistent. Update the documentation.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472337989, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338400, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338580, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472339613, 'comment_body': '```suggestion\r\n            caption=_(""Unable to delete selected GRASS database""),\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472342129, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472349882, 'comment_body': ""```suggestion\r\n        if self.selected_grassdb[0].data['name'] == genv['GISDBASE']:\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 17, 7, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472436786, 'comment_body': '```suggestion\r\n    Returns message as string if there was failed check, otherwise None.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 19, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ccdb1022e5442b09cae4f0eb90ca8214a7711aa7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37e59f800d197faef85e293bad019ac49fe6f42c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '43896a69b789b746021aaecc76294c0b7939f0e8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f1fb18a1c5fde21aaee24962a720dd52d7f51a87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '650a583bd56bf90cd7f262182ed7ef3c9234e1b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2c15d642181fd11fb8bdd72a20880339b6d80cf9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7f40521004b85e6682360901ba22131c6d9aa743', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2e2b86ebb3b02944f59789f04453a2e8c1cb1ece', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7723c33610652d8d4cdcb3e0f54007fd599b6c07', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '339d07788a2ab6ae863f2e7563674d9b9586dee4', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4506c515604e019db93431b224f09fb4bf9d26', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa073feb559edde0254a44c4bf27123de344916', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '174c1b89d17fa788eafe6595c4aa7dabea5715fd', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
468024526,Switch to another mapset when in use (aka force remove lock),"**Describe the solution**

The data catalog should inform about the mapset being in use as indicated by the presence of the lock, but offer an option to force removal of the lock and switch to the mapset anyway. The primary choice/button should be the ""stay in current mapset"" option.

I think the asking twice as it is now in the startup window should be removed and instead information about the lock (i.e., the possible session there) should be provided. Some code for this is already in lib/init/grass.py and is used when using grass db/loc/mapset_which_is_in_use --text in the command line (not a reusable library function, but something to copy-paste and maybe to add to grass.grassdb).

This basically leads to switch_mapset_interactively() function. Using it in the startup window instead of the current code could help in making it more generic.
",True,906,https://api.github.com/repos/OSGeo/grass/pulls/906,https://github.com/OSGeo/grass/pull/906,closed,127,35,4,12,2,26,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-14 14:45:12+00:00,2020-08-18 17:13:33+00:00,354501.0,"4 days, 2:28:21","[{'comment_id': 470828050, 'comment_body': 'This is not needed just to relabel the buttons... See https://wxpython.org/Phoenix/docs/html/wx.MessageDialog.html', 'comment_created': datetime.datetime(2020, 8, 14, 19, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470929571, 'comment_body': ""Let's rename this to `can_switch_mapset_interactively` and it won't be actually switching the mapset, just checking and removing the lockfile. The signals would be called from tree.py as before. This function could be also used in lmgr/frame.py in OnChangeMapset/Location."", 'comment_created': datetime.datetime(2020, 8, 15, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055107, 'comment_body': '```suggestion\r\n    Checks if mapset is locked and offers to remove the lock file.\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055450, 'comment_body': 'I would remove the note about the permissions to simplify it.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055493, 'comment_body': '```suggestion\r\n            message=_(""User {0} is already running GRASS in selected mapset ""\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471056005, 'comment_body': 'Keep the original name, if you want get_current_user, add a new function.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471058874, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 8, 16, 3, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471059043, 'comment_body': 'Remove, simply just call ChangeLocation.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471061794, 'comment_body': 'Using the `{1}` style is sub-optimal. The `{name}` is easier to read, less prone to errors, and more flexible for translations.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471075498, 'comment_body': 'I think that ""get_current_user"" is a much more generic name and makes more sense even in create_mapset_interactively function where the default is set to get_current_user(). It means that immediately we know that default mapset name is the current user\'s name. \r\nBy the way, this function is so far used only in guiutils when switching mapset and when creating a new mapset. ', 'comment_created': datetime.datetime(2020, 8, 16, 7, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471076166, 'comment_body': ""I would let the name get_current_user() but maybe move that function to grassdb/checks. I have noticed that in checks.py there are functions like get_mapset_owner, get_lockfile_if_present which have similar behavior = we try to GET something. And those functions do not perform any checks. Similarly like get_current_user(). It might be the reason why to set up different let's say get.py file.  "", 'comment_created': datetime.datetime(2020, 8, 16, 7, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471151406, 'comment_body': ""You didn't test this properly, now you can't switch to mapset without a lockfile."", 'comment_created': datetime.datetime(2020, 8, 16, 19, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471151750, 'comment_body': 'The function name should be `get_default_mapset_name()` because the point of the function is to provide a string which is a name for mapset which should be used by default if there is no more specific name available or user does not provide it, e.g., a default value in a dialog or automatically created mapset.\r\n\r\nIt should be in `grass.grassdb.create` because it is relevant when creating new mapset and/or location.\r\n\r\nThese are exactly the usages when this function is used: default value in mapset creation dialog and (in #868) name of a generated mapset in the startup/demo location.\r\n\r\nIn `create_mapset_interactively()` the point of using `get_default_mapset_name()` is exactly that we want to get a default name for a mapset. We don\'t particularly care what the name is, i.e., we defer the decision to the implementation of that function. It is the question of semantics. What we emphasize in the API is the purpose of the value, not what the value is. The `get_default_mapset_name()` documentation can, or probably should, describe what the value is and why it is this way.\r\n\r\nThe point in making the distinction is that we can change the decision of what the default name is just by modifying this function, not all places where the default name is used. Additionally, the implementation of that function can be and in fact is geared towards that usage, i.e., it is not just purely for getting the current user name. Given its purpose, it always returns some string, so it returns `""user""` when the actual name was not find. This is a great behavior in context of getting some usable name for mapset, but it is rather unexpected and potentially harmful if the purpose is obtaining a user name. This would become even more prominent when more sophisticated replacement of non-compliant characters is added (see current code or e.g. comments in #897 for motivation). Consequently, using the function given its current implementation for getting user name is wrong.', 'comment_created': datetime.datetime(2020, 8, 16, 19, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471153690, 'comment_body': ""This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n\r\nIt seems that the best way of obtaining it is pathlib's `Path.owner`."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471586276, 'comment_body': ""That's strange. I am testing it now and it works fine. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471589002, 'comment_body': ""> \r\n> \r\n> This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n> \r\n> It seems that the best way of obtaining it is pathlib's `Path.owner`.\r\n\r\nI made actually the same function as get_mapset_owner, just for gislock owner. Maybe we could make one function get_file_owner instead of get_mapset_owner and get_gislock_owner. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471660802, 'comment_body': '```suggestion\r\n    """"""Returns default name for a mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 17, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471871002, 'comment_body': 'This is actually two module calls. Do `gisenv = grass.gisenv()` and then use it like elsewhere.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471872163, 'comment_body': 'Although this is consistent name with the others, the name is little misleading because it reads as ""Can I switch mapset interactively?"" when in fact it should be saying more ""Check interactively if I can switch mapset"". I think `can_switch_mapset_interactive()` keeps it simple and it expresses well that it is a ""can (I) switch mapset? but doing it in interactive manner.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471873409, 'comment_body': 'The `&` is what is used to identify a character which will be used with Alt key to ""press"" the button without using a mouse pointer. They need to be at least different, but I would probably go with `""S&witch...` and `""S&tay...`.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471874286, 'comment_body': 'The terminology used in #849 is ""in use"" so ""Mapset is in use"".', 'comment_created': datetime.datetime(2020, 8, 18, 2, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471877650, 'comment_body': ""I think the best thing to do with this function is to turn it into `get_mapset_lock_info(mapset_path)`. It can get also the timestamp (and there is one other thing which this could get but that's too much for this PR). Given that there will/might be extensions and for the lack of better ideas, the return type should be dict with keys owner and datetime.\r\n\r\nActually, let's add also filename as another key which will remove the need to call `get_lockfile_if_present()` and you can use the nicer `is_mapset_locked()`."", 'comment_created': datetime.datetime(2020, 8, 18, 2, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472261916, 'comment_body': ""```suggestion\r\n    info['lockpath'] = os.path.join(mapset_path, lock_name)\r\n    try:\r\n        info['owner'] = Path(info['lockpath']).owner()\r\n    except KeyError:\r\n        info['owner'] = None\r\n    info['timestamp'] = (datetime.datetime.fromtimestamp(\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 14, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472264015, 'comment_body': '```suggestion\r\n    """"""Get information about .gislock file.\r\n    Assumes lock file exists, use is_mapset_locked to find out.\r\n    Returns information as a dictionary with keys\r\n    \'owner\' (None if unknown), \'lockpath\', and \'timestamp\'.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 14, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472328183, 'comment_body': ""```suggestion\r\n        user = info['owner'] if info['owner'] else _('unknown')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 16, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472330870, 'comment_body': '```suggestion\r\n    """"""Returns default name for mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '364173c5d099347605e2647c8989d3d0d7226e11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be3000527113dd045295e56776661d5dc8b4b563', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c64a9337c078cb7e24de697980a2bda10b1a44c2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7e56782e9331b86a944d8eb1ab1c9c8bd407067', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '270a5d1b84ad522d31273451cae310ccd04a5b11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b10503c8c44813d4c4acb689361221626fe6e6eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0388f4c65fbeb569d87349f737fd1753b02bff0b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7848787a2a4c088c7212a5ea80cb86c94f01fb95', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a667ba2f6c0bf06f17c69ab749cd0c0937105dc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd13705f5d17ee060cead162332005e2a8ab25447', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c507b9fd20be836cd6a29163dda95297614ac5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a72ae80e191ebd4344f868c06affe040b14e227', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
460894257,Start in a demo/startup location,"After creating this directory, follow with another function to create a simple location with some data.

The location demolocation in distribution (GISBASE) can be used for that. If it does not exist and thus cannot be copied, the startup should continue as usual.

I think the name should be startup or startup_location. It is more descriptive than demolocation but still clearly conveying it is not meant for normal use.

The startup mechanism for the first-time user should make use the mapset concept because it will both ensure preserving the data in PERMANENT intact and, at the same time, it will show how to use the mapset concept at least in the relation to the PERMANENT mapset.

When the startup/demo location is created/copied, a new mapset should be created there and used for starting, not the PERMANENT.

It will be only one mapset, but eventually there will be more than one, so probably some name_1, name_2, ... will be needed. ",True,868,https://api.github.com/repos/OSGeo/grass/pulls/868,https://github.com/OSGeo/grass/pull/868,closed,84,4,2,12,3,37,2,1,"[{'name': 'enhancement'}, {'name': 'gsoc'}]",2020-08-01 08:03:36+00:00,2020-08-20 04:13:31+00:00,1627795.0,"18 days, 20:09:55","[{'comment_id': 464448537, 'comment_body': '```\r\n    home = os.path.expanduser(""~"")\r\n    demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n```\r\nDo I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n\r\nMore generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464465069, 'comment_body': '```suggestion\r\n    home = os.path.expanduser(""~"")\r\n    src = os.path.join(home, ""grass"", ""demolocation"")\r\n    dst = os.path.join(grassdatabase, ""demolocation"")\r\n\r\n        # Copy source demolocation into GRASS database\r\n    try:\r\n        copytree(src, dst, ignore=ignore_patterns(\'*.tmpl\',\'Makefile*\'))\r\n```\r\n\r\nOtherwise, copytree() gives an error message since the dst directory (grassdatabase) already exists.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464849367, 'comment_body': '> \r\n> \r\n> > I have a problem with testing that. Not able to get into the initial state.\r\n> > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\r\n> > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\r\n> \r\n> For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\r\n\r\nYes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464852552, 'comment_body': '> \r\n> \r\n> ```\r\n>     home = os.path.expanduser(""~"")\r\n>     demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n> ```\r\n> \r\n> Do I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n> \r\n> More generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.\r\n\r\nI am not sure where in user\'s directory the demolocation will eventually exist. You have mentioned the directory usr/lib/grassXY/demolocation but I do not have any ""grassXY"" directory. I have only ""grass"". I looked at environmental variables, there is a variable GISBASE in my case /home/linwe/grass/dist.x86_64-pc-linux-gnu. Is it the variable I should use?\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464919073, 'comment_body': 'Yes, it would be GISBASE. In grassXY X represents the major and Y the minor version as in many distributions GRASS GIS is installed at e.g. /usr/lib/grass78.\n\nBut getting the GISBASE content should be enough, I think.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464920659, 'comment_body': 'Might this be the reason you get stuck ? Try moving the entire .grass7 folder, or at least the rc file in it. If that still is present and contains the info on the last used location, then LOCATION_NAME will not be UNKNOWN.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464921669, 'comment_body': '> > \n> > \n> > > I have a problem with testing that. Not able to get into the initial state.\n> > > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\n> > > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\n> > \n> > For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\n> \n> Yes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \n> \n\nSee my comment in the code: could it be be that LOCATION_NAME is not unknown in your case so it returns before ?', 'comment_created': datetime.datetime(2020, 8, 4, 9, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464998052, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 4, 11, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465002299, 'comment_body': 'I think it is not the right one. I found on my computer  ""computer/usr/lib/grass78"" directory. and GISBASE is /home/linwe/grass/dist.x86_64-pc-linux-gnu for me. And also demolocation was added into Debian installation but not Windows one. Am I right? ', 'comment_created': datetime.datetime(2020, 8, 4, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465039353, 'comment_body': '```suggestion\r\n    startup_location = os.path.join(gisbase, ""demolocation"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 465115768, 'comment_body': 'Yes! Good point. I had to remove rc file and suddenly it works as never. :-)', 'comment_created': datetime.datetime(2020, 8, 4, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467500774, 'comment_body': ""Since we may have a function which which tries to find existing user's copy/version/instance of the startup/demo location, I think this function name should be `get_startup_location_template()` to avoid confusion. The term _template_ is not used in GRASS, but it is common else where. Alternative is `get_startup_location_in_distribution()` which is what the function is doing, so perhaps better expressing the current that."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467500826, 'comment_body': 'No need to do `as why` when you are ignoring the `why` anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467502704, 'comment_body': ""You are ignoring the return value from `copy_startup_location()`. Perhaps, you can wrap this whole thing into one function, maybe named `get_startup_location()`, which will return the location/mapset on success and None otherwise and internally resolve all the cases (no location to copy, copying failed, and, possibly, also an existing user's copy of the location).\r\n\r\nPerhaps more importantly, it is not clear to me if this is meant to actually start in a mapset in this location. Creating this location if there is no other location is good, but actually using it, means picking also a mapset and starting in that one. With that, the overarching function should be something like `get_mapset_in_startup_location()` and it would take care of all above plus picking, probably creating, a mapset to use."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467503522, 'comment_body': ""Well, actually, if you want to leave this PR just at creating the location and solving the actual starting in some mapset there in another PR, that's fine with me."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467543597, 'comment_body': 'Yep, get_startup_location_in_distribution() seems clearer. I used that.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467544524, 'comment_body': '""as why"" removed.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471057311, 'comment_body': 'This should use the format function (method of string).', 'comment_created': datetime.datetime(2020, 8, 16, 2, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057512, 'comment_body': 'Rather than a triple nested if statement, use the ""`if not bar: return None`"" paradigm.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057748, 'comment_body': '`location` instead of `startup_location` is probably sufficient.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058227, 'comment_body': ""Since you added the mapset part in this PR, let's continue here. Now the mapset is not used and the user is presented with two mapsets to choose from. This is a situation we want to avoid. Let's take then the final steps from `OnStart()` and set the mapset and exit the startup with:\r\n\r\n```\r\n        self.SetLocation(dbase, location, mapset)\r\n        self.ExitSuccessfully()\r\n```\r\n\r\nThis will achieve the final/actual goal of #862 (see the title)."", 'comment_created': datetime.datetime(2020, 8, 16, 3, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058974, 'comment_body': 'Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471059453, 'comment_body': ""You are actually modifying the name variable here. If you run this more than once, you will get username, username_1, username_1_1, username_1_1_1, ... while you probably wanted username, username_2, username_3, ...\r\n\r\nSince this won't be used for the first time user, you can test this before fixing the modification of the location in the distribution. It is sufficient just to delete the config and grassdata dir as in case of a single test (i.e., just do the single test multiple times.)"", 'comment_created': datetime.datetime(2020, 8, 16, 3, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471061017, 'comment_body': 'The name which seems to be finalist in #862 is `world_latlong_wgs84`.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471092071, 'comment_body': '> \r\n> \r\n> Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.\r\n\r\nCorrected.', 'comment_created': datetime.datetime(2020, 8, 16, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471198276, 'comment_body': 'Having this call at the end of function called `SuggestDatabase` should be suspicious.\r\n\r\nThe point is that the first time user* will be brought into the newly created location, not everybody.\r\n\r\nOn top of that, just from reading the code, it looks like `grassdatabase, location, mapset_name` will not be defined on like 543 unless the `if path is None:` case happens. Did you test this for case when `path` is not `None`, i.e., `get_possible_database_path()` found something?\r\n\r\n* Here defined as the case when the startup location was created.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203310, 'comment_body': 'The return value is not fully documented. I think if you try to write documentation, you may also see that returning the database path is little strange because it is the input which is not expected to be changed.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203836, 'comment_body': 'You may want to call this variable `location_in_dist` or something like that to be sure you always use it in the right way. See e.g. your return statement (Does this code run?).', 'comment_created': datetime.datetime(2020, 8, 17, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471204607, 'comment_body': ""Is the _existing user's copy_ something you already tried to address or is it just something you are planning? I don't see it in the code."", 'comment_created': datetime.datetime(2020, 8, 17, 2, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471208420, 'comment_body': ""Using `GISBASE` is the right thing to do now. Let's not worry about distributions/installations right now."", 'comment_created': datetime.datetime(2020, 8, 17, 3, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472102560, 'comment_body': 'I think that the existing user\'s copy of ""world_latlong_wgs84"" is something that could not be reached now because I create a startup location only in the case when ""grassdata"" does not exist. So it is clear that ""grassdata/world_latlong_wgs84"" does not exist either.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 473553912, 'comment_body': '```suggestion\r\n    """"""Create a new startup location in the given GRASS database.\r\n\r\n    Returns the newly created mapset name on success. Returns None if there is\r\n    no location to copy in the installation or copying failed.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473555081, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473559713, 'comment_body': 'It starts now for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560093, 'comment_body': 'These two lines are now there.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560737, 'comment_body': 'The call is now at the right place in terms of starting there for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473561403, 'comment_body': 'Returning the mapset only and having the caller set the name is fine now. Might be more challenging in the future.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '15b014c1f5f301d89f24ac627c7c08dddc3cfa4e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31b6c82325df5c14a30a9d2b9098f047e2575964', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e5baf56c52c66097a79382ae99226ef8526c6361', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be368df23c77318d30c01bc7f0386bebba483b5d', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694df2ef2b8a731b71e344056268baf9a4076fe7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60f7b496a0a7a1afff073deb5826250bcf68a461', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4ec26ca07619d81a78ed1bc87bf3aa8b6b755a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd969a164eefbbf7ce6f52eddeeeec2381e845c14', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a1914399eae4b96c678bf3b8e65634d95709804', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '50d392205e801842628660e1b152b993cf3ec485', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3ce298257703d38154d8261dcfd9409fd61bc7c9', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b2c2881a412dbbf914222a975245cbaa68f795', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
466861464,Check for gislock and other issues when deleting/renaming/editing mapset and location in catalog,"Currently we don't have mechanism in data catalog to check for gislock and if mapset belongs to different user, so that we prevent user from actions including deleting or renaming mapset, and editing layers. The same applies to location deleting/renaming, it needs to check whether all mapsets can be edited.",True,904,https://api.github.com/repos/OSGeo/grass/pulls/904,https://github.com/OSGeo/grass/pull/904,closed,333,239,3,13,0,24,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-12 15:53:13+00:00,2020-08-19 17:42:31+00:00,611358.0,"7 days, 1:49:18","[{'comment_id': 470658118, 'comment_body': 'The checks should be done in check_mapset_interactively for 1 mapset and then check_mapsets_interactively will call check_mapset_interactively in a for loop. The way you have it now works, but this way it will make more sense.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470658856, 'comment_body': ""'exception' would mean a Python exception, but these are more 'failed checks' or something like that."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470659179, 'comment_body': '```suggestion\r\n        if check_permanent and mapset == ""PERMANENT"":\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 14, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660055, 'comment_body': 'Remove ""therefore changes are not allowed"", just state the problem.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660323, 'comment_body': 'the same for locations', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662672, 'comment_body': 'use +=', 'comment_created': datetime.datetime(2020, 8, 14, 14, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662855, 'comment_body': 'put on 1 line', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663123, 'comment_body': ""```suggestion\r\n            env=env).strip().split(',')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663293, 'comment_body': 'tmp_gisrc_file needs to be removed, see tree.py', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470674065, 'comment_body': ""The names of the functions should be probably different. Something like `get_reason_mapset_not_removable` and  `get_reasons_mapsets_not_removable`. It doesn't sound great but describes what it's doing."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471067478, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471067487, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471069846, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471152590, 'comment_body': 'I think we wanted ""get_reason_mapset_not_removable"", currently the implementation reports 1 reason because you have elif there and not if for every case. We could also report multiple reasons (e.g. mapset can be locked and PERMANENT), but I would keep single reason. Therefore the name should reflect that. It\'s a detail, but let\'s get it right.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471152984, 'comment_body': ""You can't just blindly copy code. This is handling communication from parallelized calls of getLocationTree function, remove it."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153386, 'comment_body': 'Probably could say cannot rename mapset `<mapset>` for ...', 'comment_created': datetime.datetime(2020, 8, 16, 20, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153590, 'comment_body': 'Also it should return message as string (or None), not list to keep it all consistent. Update the documentation.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472337989, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338400, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338580, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472339613, 'comment_body': '```suggestion\r\n            caption=_(""Unable to delete selected GRASS database""),\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472342129, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472349882, 'comment_body': ""```suggestion\r\n        if self.selected_grassdb[0].data['name'] == genv['GISDBASE']:\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 17, 7, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472436786, 'comment_body': '```suggestion\r\n    Returns message as string if there was failed check, otherwise None.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 19, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ccdb1022e5442b09cae4f0eb90ca8214a7711aa7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37e59f800d197faef85e293bad019ac49fe6f42c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '43896a69b789b746021aaecc76294c0b7939f0e8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f1fb18a1c5fde21aaee24962a720dd52d7f51a87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '650a583bd56bf90cd7f262182ed7ef3c9234e1b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2c15d642181fd11fb8bdd72a20880339b6d80cf9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7f40521004b85e6682360901ba22131c6d9aa743', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2e2b86ebb3b02944f59789f04453a2e8c1cb1ece', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7723c33610652d8d4cdcb3e0f54007fd599b6c07', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '339d07788a2ab6ae863f2e7563674d9b9586dee4', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4506c515604e019db93431b224f09fb4bf9d26', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa073feb559edde0254a44c4bf27123de344916', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '174c1b89d17fa788eafe6595c4aa7dabea5715fd', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
468024526,Switch to another mapset when in use (aka force remove lock),"**Describe the solution**

The data catalog should inform about the mapset being in use as indicated by the presence of the lock, but offer an option to force removal of the lock and switch to the mapset anyway. The primary choice/button should be the ""stay in current mapset"" option.

I think the asking twice as it is now in the startup window should be removed and instead information about the lock (i.e., the possible session there) should be provided. Some code for this is already in lib/init/grass.py and is used when using grass db/loc/mapset_which_is_in_use --text in the command line (not a reusable library function, but something to copy-paste and maybe to add to grass.grassdb).

This basically leads to switch_mapset_interactively() function. Using it in the startup window instead of the current code could help in making it more generic.
",True,906,https://api.github.com/repos/OSGeo/grass/pulls/906,https://github.com/OSGeo/grass/pull/906,closed,127,35,4,12,2,26,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-14 14:45:12+00:00,2020-08-18 17:13:33+00:00,354501.0,"4 days, 2:28:21","[{'comment_id': 470828050, 'comment_body': 'This is not needed just to relabel the buttons... See https://wxpython.org/Phoenix/docs/html/wx.MessageDialog.html', 'comment_created': datetime.datetime(2020, 8, 14, 19, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470929571, 'comment_body': ""Let's rename this to `can_switch_mapset_interactively` and it won't be actually switching the mapset, just checking and removing the lockfile. The signals would be called from tree.py as before. This function could be also used in lmgr/frame.py in OnChangeMapset/Location."", 'comment_created': datetime.datetime(2020, 8, 15, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055107, 'comment_body': '```suggestion\r\n    Checks if mapset is locked and offers to remove the lock file.\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055450, 'comment_body': 'I would remove the note about the permissions to simplify it.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055493, 'comment_body': '```suggestion\r\n            message=_(""User {0} is already running GRASS in selected mapset ""\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471056005, 'comment_body': 'Keep the original name, if you want get_current_user, add a new function.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471058874, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 8, 16, 3, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471059043, 'comment_body': 'Remove, simply just call ChangeLocation.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471061794, 'comment_body': 'Using the `{1}` style is sub-optimal. The `{name}` is easier to read, less prone to errors, and more flexible for translations.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471075498, 'comment_body': 'I think that ""get_current_user"" is a much more generic name and makes more sense even in create_mapset_interactively function where the default is set to get_current_user(). It means that immediately we know that default mapset name is the current user\'s name. \r\nBy the way, this function is so far used only in guiutils when switching mapset and when creating a new mapset. ', 'comment_created': datetime.datetime(2020, 8, 16, 7, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471076166, 'comment_body': ""I would let the name get_current_user() but maybe move that function to grassdb/checks. I have noticed that in checks.py there are functions like get_mapset_owner, get_lockfile_if_present which have similar behavior = we try to GET something. And those functions do not perform any checks. Similarly like get_current_user(). It might be the reason why to set up different let's say get.py file.  "", 'comment_created': datetime.datetime(2020, 8, 16, 7, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471151406, 'comment_body': ""You didn't test this properly, now you can't switch to mapset without a lockfile."", 'comment_created': datetime.datetime(2020, 8, 16, 19, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471151750, 'comment_body': 'The function name should be `get_default_mapset_name()` because the point of the function is to provide a string which is a name for mapset which should be used by default if there is no more specific name available or user does not provide it, e.g., a default value in a dialog or automatically created mapset.\r\n\r\nIt should be in `grass.grassdb.create` because it is relevant when creating new mapset and/or location.\r\n\r\nThese are exactly the usages when this function is used: default value in mapset creation dialog and (in #868) name of a generated mapset in the startup/demo location.\r\n\r\nIn `create_mapset_interactively()` the point of using `get_default_mapset_name()` is exactly that we want to get a default name for a mapset. We don\'t particularly care what the name is, i.e., we defer the decision to the implementation of that function. It is the question of semantics. What we emphasize in the API is the purpose of the value, not what the value is. The `get_default_mapset_name()` documentation can, or probably should, describe what the value is and why it is this way.\r\n\r\nThe point in making the distinction is that we can change the decision of what the default name is just by modifying this function, not all places where the default name is used. Additionally, the implementation of that function can be and in fact is geared towards that usage, i.e., it is not just purely for getting the current user name. Given its purpose, it always returns some string, so it returns `""user""` when the actual name was not find. This is a great behavior in context of getting some usable name for mapset, but it is rather unexpected and potentially harmful if the purpose is obtaining a user name. This would become even more prominent when more sophisticated replacement of non-compliant characters is added (see current code or e.g. comments in #897 for motivation). Consequently, using the function given its current implementation for getting user name is wrong.', 'comment_created': datetime.datetime(2020, 8, 16, 19, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471153690, 'comment_body': ""This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n\r\nIt seems that the best way of obtaining it is pathlib's `Path.owner`."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471586276, 'comment_body': ""That's strange. I am testing it now and it works fine. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471589002, 'comment_body': ""> \r\n> \r\n> This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n> \r\n> It seems that the best way of obtaining it is pathlib's `Path.owner`.\r\n\r\nI made actually the same function as get_mapset_owner, just for gislock owner. Maybe we could make one function get_file_owner instead of get_mapset_owner and get_gislock_owner. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471660802, 'comment_body': '```suggestion\r\n    """"""Returns default name for a mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 17, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471871002, 'comment_body': 'This is actually two module calls. Do `gisenv = grass.gisenv()` and then use it like elsewhere.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471872163, 'comment_body': 'Although this is consistent name with the others, the name is little misleading because it reads as ""Can I switch mapset interactively?"" when in fact it should be saying more ""Check interactively if I can switch mapset"". I think `can_switch_mapset_interactive()` keeps it simple and it expresses well that it is a ""can (I) switch mapset? but doing it in interactive manner.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471873409, 'comment_body': 'The `&` is what is used to identify a character which will be used with Alt key to ""press"" the button without using a mouse pointer. They need to be at least different, but I would probably go with `""S&witch...` and `""S&tay...`.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471874286, 'comment_body': 'The terminology used in #849 is ""in use"" so ""Mapset is in use"".', 'comment_created': datetime.datetime(2020, 8, 18, 2, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471877650, 'comment_body': ""I think the best thing to do with this function is to turn it into `get_mapset_lock_info(mapset_path)`. It can get also the timestamp (and there is one other thing which this could get but that's too much for this PR). Given that there will/might be extensions and for the lack of better ideas, the return type should be dict with keys owner and datetime.\r\n\r\nActually, let's add also filename as another key which will remove the need to call `get_lockfile_if_present()` and you can use the nicer `is_mapset_locked()`."", 'comment_created': datetime.datetime(2020, 8, 18, 2, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472261916, 'comment_body': ""```suggestion\r\n    info['lockpath'] = os.path.join(mapset_path, lock_name)\r\n    try:\r\n        info['owner'] = Path(info['lockpath']).owner()\r\n    except KeyError:\r\n        info['owner'] = None\r\n    info['timestamp'] = (datetime.datetime.fromtimestamp(\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 14, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472264015, 'comment_body': '```suggestion\r\n    """"""Get information about .gislock file.\r\n    Assumes lock file exists, use is_mapset_locked to find out.\r\n    Returns information as a dictionary with keys\r\n    \'owner\' (None if unknown), \'lockpath\', and \'timestamp\'.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 14, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472328183, 'comment_body': ""```suggestion\r\n        user = info['owner'] if info['owner'] else _('unknown')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 16, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472330870, 'comment_body': '```suggestion\r\n    """"""Returns default name for mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '364173c5d099347605e2647c8989d3d0d7226e11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be3000527113dd045295e56776661d5dc8b4b563', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c64a9337c078cb7e24de697980a2bda10b1a44c2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7e56782e9331b86a944d8eb1ab1c9c8bd407067', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '270a5d1b84ad522d31273451cae310ccd04a5b11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b10503c8c44813d4c4acb689361221626fe6e6eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0388f4c65fbeb569d87349f737fd1753b02bff0b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7848787a2a4c088c7212a5ea80cb86c94f01fb95', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a667ba2f6c0bf06f17c69ab749cd0c0937105dc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd13705f5d17ee060cead162332005e2a8ab25447', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c507b9fd20be836cd6a29163dda95297614ac5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a72ae80e191ebd4344f868c06affe040b14e227', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
470042118,wxGUI/datacatalog: multiple grass databases context menu shows Delete locations,"**Describe the bug**
When you select multiple GRASS databases in datacatalog and right click you get ""Delete locations"", which is obviously a mistake. This is in latest master.

**Expected behavior**
If there is no action implemented for multiple databases, it should show ""No available options"".",True,914,https://api.github.com/repos/OSGeo/grass/pulls/914,https://github.com/OSGeo/grass/pull/914,closed,2,0,1,1,0,0,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-19 09:34:32+00:00,2020-08-19 17:52:35+00:00,29883.0,8:18:03,[],"[{'commit_sha': '64e576816df969e9ee9ef5f1ee08677afeb673b2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
470167193,Reflect changes when mapset/location is created from menu,There are several actions that need to be synced in GUI and datacatalog. This PR solves the case when the mapset/location is created from menu.,False,916,https://api.github.com/repos/OSGeo/grass/pulls/916,https://github.com/OSGeo/grass/pull/916,closed,15,75,1,7,1,5,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-19 13:31:42+00:00,2020-11-22 04:19:01+00:00,8174839.0,"94 days, 14:47:19","[{'comment_id': 473578288, 'comment_body': 'This should call create_mapset_interactively directly, not through datacatalog. As for the reloading of datacatalog, for now just call self.datacatalog.tree.ReloadTreeItems() and we will later change this using signals.', 'comment_created': datetime.datetime(2020, 8, 20, 4, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474392406, 'comment_body': 'Just get the current location and db from gisenv', 'comment_created': datetime.datetime(2020, 8, 21, 3, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474392496, 'comment_body': '```suggestion\r\n        if mapset:\r\n            self.datacatalog.tree.ReloadTreeItems()\r\n```', 'comment_created': datetime.datetime(2020, 8, 21, 3, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474393562, 'comment_body': ""```suggestion\r\n        if location:\r\n            self.datacatalog.tree.ReloadTreeItems()\r\n```\r\nFor now, let's ignore the case when location is created in a db which is not in data catalog. We would have to implement that differently anyway, SearchNodes and InsertGrassDb would have to be at least wrapped in catalog.py. This will be improved later."", 'comment_created': datetime.datetime(2020, 8, 21, 3, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475164031, 'comment_body': ""```suggestion\r\n        grassdatabase, location, mapset = (\r\n            create_location_interactively(self, grass.gisenv()['GISDBASE'])\r\n```"", 'comment_created': datetime.datetime(2020, 8, 23, 3, 18, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '1ae279f9243c30066fc1da7cdae6298b0c9ad173', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'df150ef38e2b2bf3c3cea2e51f96f10f88475bea', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '040cc25d751894a5aff357544ce8391952dd9337', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '02c71625bf882945381c083d7de341e622095721', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89acf2027468c5cd89363744cf9e7960b92cc126', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b91bac4d5d0b0ed960e00c79fbc5a9cc94c67931', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0c6a4406065d8cc21cffb69f7966406d43c7b234', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
470884654,wxGUI datacatalog: add direct editing of mapset and location name,"Addresses both #917, #918.

**https://github.com/OSGeo/grass/issues/918:**
Currently we can rename map by selecting it and clicking at it again, which opens an editing window (like in any file manager). This should work also for **mapsets and locations**. It should take into account if the restricted mode is on or off.

**https://github.com/OSGeo/grass/issues/917:**
In datacatalog when we select a map in other mapset and click on it second time to open editing window, you can rename it even when restricted mode is on. This should not be permitted.",True,920,https://api.github.com/repos/OSGeo/grass/pulls/920,https://github.com/OSGeo/grass/pull/920,closed,343,211,3,8,0,23,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-20 12:47:36+00:00,2020-08-24 04:10:27+00:00,314571.0,"3 days, 15:22:51","[{'comment_id': 474380993, 'comment_body': ""To avoid duplicating code (this is basically the same as in MapsetDialog in the same file), let's move these functions to lib/python/grassdb/checks.py and rename to `get_mapset_name_invalid_reason` and `get_location_name_invalid_reason`. Also add functions (in checks.py) `is_mapset_name_valid` and `is_location_name_valid`. These would be e.g. something like:\r\n\r\n```\r\ndef is_mapset_name_valid(...):\r\n    return gs.legal_name(...) and mapset != 'ogr' and not mapset_exists(...)\r\n```\r\n\r\nThen this could be used in guiutils MapsetDialog, with the GenericValidator, where the condition would be `is_mapset_name_valid` and the callback would call get_mapset_name_invalid_reason and GError."", 'comment_created': datetime.datetime(2020, 8, 21, 2, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387304, 'comment_body': ""In this function, remove all the notifications. Here we simply won't inform user they can't edit. We only inform user once they start editing and something goes wrong (in OnEditLabel)."", 'comment_created': datetime.datetime(2020, 8, 21, 3, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387981, 'comment_body': 'Here, use GError (core/gcmd.py) instead of the notification (user showTraceback=False).', 'comment_created': datetime.datetime(2020, 8, 21, 3, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474389005, 'comment_body': 'The same here with GError.', 'comment_created': datetime.datetime(2020, 8, 21, 3, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474654178, 'comment_body': 'Functions get_reasons_location_not_removable and similar ones are now moved to checks.py but the function get_reasons_grassdb_not removable could not be moved because it uses GetListOfLocations from core.py. So I do now know.. I think it is clear that all functions should be put in grassdb lib. \r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 8, 21, 12, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 474744739, 'comment_body': 'Right. Please move GetListOfLocations to checks.py, use underscores instead of camel case syntax. Use listOfLocations.sort(key=lambda x: x.lower()) instead of the ListSortLower. GetListofMapsets should be eventually moved too, but it is more complicated. Checks.py might need to be renamed or split, but we will deal with that later too.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747561, 'comment_body': ""```suggestion\r\n            if get_reason_mapset_not_removable(self.selected_grassdb[0].data['name'],\r\n                                               self.selected_location[0].data['name'],\r\n                                               self.selected_mapset[0].data['name']\r\n                                               check_permanent=True)\r\n                event.Veto()\r\n                return\r\n```"", 'comment_created': datetime.datetime(2020, 8, 21, 14, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747786, 'comment_body': 'see change above', 'comment_created': datetime.datetime(2020, 8, 21, 14, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751041, 'comment_body': 'This is unreadable, please rewrite the condition, maybe add comments what it is testing.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751437, 'comment_body': 'As I mentioned, no notifications in this function.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474753572, 'comment_body': '```suggestion\r\n        return is_location_name_valid(self.database, text)\r\n```', 'comment_created': datetime.datetime(2020, 8, 21, 15, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474811254, 'comment_body': 'Location exists?', 'comment_created': datetime.datetime(2020, 8, 21, 16, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474813703, 'comment_body': 'The function is not really ""get reason"" but more ""show reason"".', 'comment_created': datetime.datetime(2020, 8, 21, 16, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474839453, 'comment_body': 'Same as with the location dialog.', 'comment_created': datetime.datetime(2020, 8, 21, 17, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 475105078, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105095, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105131, 'comment_body': 'Upps. Corrected,', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105446, 'comment_body': 'I tried to rewrite it and add comments.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475118900, 'comment_body': 'The conditions are still hard to understand, I tried to simplify it:\r\n```\r\n    def OnStartEditLabel(self, node, event):\r\n        """"""Start label editing""""""\r\n        self.DefineItems([node])\r\n\r\n        # Not allowed for grassdb node\r\n        if node.data[\'type\'] == \'grassdb\':\r\n            event.Veto()\r\n        # Check selected mapset\r\n        elif node.data[\'type\'] == \'mapset\':\r\n            if (\r\n                self._restricted\r\n                or get_reason_mapset_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                   self.selected_location[0].data[\'name\'],\r\n                                                   self.selected_mapset[0].data[\'name\'],\r\n                                                   check_permanent=True)\r\n            ):\r\n                event.Veto()\r\n        # Check selected location\r\n        elif node.data[\'type\'] == \'location\':\r\n            if (\r\n                self._restricted\r\n                or get_reasons_location_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                      self.selected_location[0].data[\'name\'])\r\n            ):\r\n                event.Veto()\r\n        elif node.data[\'type\'] in (\'raster\', \'raster_3d\', \'vector\'):\r\n            currentGrassDb, currentLocation, currentMapset = self._isCurrent(gisenv())\r\n            if not currentMapset:\r\n                event.Veto()\r\n```', 'comment_created': datetime.datetime(2020, 8, 22, 18, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475195410, 'comment_body': 'Yes. Moved. When I tested Delete GRASS database from disk, I needed to switch to a different database and there is the following error (probably related to  https://github.com/OSGeo/grass/pull/919). When switching only between  mapsets in the same location or mapsets in the same grassdb it is okey.\r\n\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 23, 9, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475317822, 'comment_body': 'good catch, fixed in #931.', 'comment_created': datetime.datetime(2020, 8, 24, 3, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475320448, 'comment_body': '```suggestion\r\n    return gs.legal_name(mapset_name) and mapset_name.lower() != ""ogr"" and not \\\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475323672, 'comment_body': '```suggestion\r\ndef get_list_of_locations(dbase):\r\n    """"""Get list of GRASS locations in given dbase\r\n\r\n    :param dbase: GRASS database path\r\n\r\n    :return: list of locations (sorted)\r\n    """"""\r\n    locations = list()\r\n    for location in glob.glob(os.path.join(dbase, ""*"")):\r\n        if os.path.join(\r\n                location, ""PERMANENT"") in glob.glob(\r\n                os.path.join(location, ""*"")):\r\n            locations.append(os.path.basename(location))\r\n\r\n    locations.sort(key=lambda x: x.lower())\r\n\r\n    return locations\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'd286ff6704453031afb6de3cc62460dbc87e6341', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dae90af61b02a9d7e2367746485da2e5d730912', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd02821c0a7a6d63d61a92ddd1fd135b20c116d61', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '854b44d0cdf6b33036fefab9e412492991940e8e', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead598fa52245e0f31d4288ab29c316ff232785e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f05565518cd0adfe41b1fd8a844d6ff19d17b68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9a21dd59b8979acd93c81076bb1008abf4d4e307', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc2637530f69cc5ab517d052689db81f96211651', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
473981327,wxGUI datacatalog: Adapt tooltip 'Add new grass database' button,"The wording of the tooltip of the button Add new grass database changed to ""Add existing or create new database""",True,936,https://api.github.com/repos/OSGeo/grass/pulls/936,https://github.com/OSGeo/grass/pull/936,closed,1,1,1,1,0,0,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-26 15:21:08+00:00,2020-08-26 16:42:09+00:00,4861.0,1:21:01,[],"[{'commit_sha': '2e982534c6c12243fc95e9786bcdc82090353c35', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
470884654,wxGUI datacatalog: add direct editing of mapset and location name,"Addresses both #917, #918.

**https://github.com/OSGeo/grass/issues/918:**
Currently we can rename map by selecting it and clicking at it again, which opens an editing window (like in any file manager). This should work also for **mapsets and locations**. It should take into account if the restricted mode is on or off.

**https://github.com/OSGeo/grass/issues/917:**
In datacatalog when we select a map in other mapset and click on it second time to open editing window, you can rename it even when restricted mode is on. This should not be permitted.",True,920,https://api.github.com/repos/OSGeo/grass/pulls/920,https://github.com/OSGeo/grass/pull/920,closed,343,211,3,8,0,23,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-20 12:47:36+00:00,2020-08-24 04:10:27+00:00,314571.0,"3 days, 15:22:51","[{'comment_id': 474380993, 'comment_body': ""To avoid duplicating code (this is basically the same as in MapsetDialog in the same file), let's move these functions to lib/python/grassdb/checks.py and rename to `get_mapset_name_invalid_reason` and `get_location_name_invalid_reason`. Also add functions (in checks.py) `is_mapset_name_valid` and `is_location_name_valid`. These would be e.g. something like:\r\n\r\n```\r\ndef is_mapset_name_valid(...):\r\n    return gs.legal_name(...) and mapset != 'ogr' and not mapset_exists(...)\r\n```\r\n\r\nThen this could be used in guiutils MapsetDialog, with the GenericValidator, where the condition would be `is_mapset_name_valid` and the callback would call get_mapset_name_invalid_reason and GError."", 'comment_created': datetime.datetime(2020, 8, 21, 2, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387304, 'comment_body': ""In this function, remove all the notifications. Here we simply won't inform user they can't edit. We only inform user once they start editing and something goes wrong (in OnEditLabel)."", 'comment_created': datetime.datetime(2020, 8, 21, 3, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474387981, 'comment_body': 'Here, use GError (core/gcmd.py) instead of the notification (user showTraceback=False).', 'comment_created': datetime.datetime(2020, 8, 21, 3, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474389005, 'comment_body': 'The same here with GError.', 'comment_created': datetime.datetime(2020, 8, 21, 3, 32, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474654178, 'comment_body': 'Functions get_reasons_location_not_removable and similar ones are now moved to checks.py but the function get_reasons_grassdb_not removable could not be moved because it uses GetListOfLocations from core.py. So I do now know.. I think it is clear that all functions should be put in grassdb lib. \r\nWhat do you think?', 'comment_created': datetime.datetime(2020, 8, 21, 12, 4, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 474744739, 'comment_body': 'Right. Please move GetListOfLocations to checks.py, use underscores instead of camel case syntax. Use listOfLocations.sort(key=lambda x: x.lower()) instead of the ListSortLower. GetListofMapsets should be eventually moved too, but it is more complicated. Checks.py might need to be renamed or split, but we will deal with that later too.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747561, 'comment_body': ""```suggestion\r\n            if get_reason_mapset_not_removable(self.selected_grassdb[0].data['name'],\r\n                                               self.selected_location[0].data['name'],\r\n                                               self.selected_mapset[0].data['name']\r\n                                               check_permanent=True)\r\n                event.Veto()\r\n                return\r\n```"", 'comment_created': datetime.datetime(2020, 8, 21, 14, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474747786, 'comment_body': 'see change above', 'comment_created': datetime.datetime(2020, 8, 21, 14, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751041, 'comment_body': 'This is unreadable, please rewrite the condition, maybe add comments what it is testing.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474751437, 'comment_body': 'As I mentioned, no notifications in this function.', 'comment_created': datetime.datetime(2020, 8, 21, 14, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474753572, 'comment_body': '```suggestion\r\n        return is_location_name_valid(self.database, text)\r\n```', 'comment_created': datetime.datetime(2020, 8, 21, 15, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 474811254, 'comment_body': 'Location exists?', 'comment_created': datetime.datetime(2020, 8, 21, 16, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474813703, 'comment_body': 'The function is not really ""get reason"" but more ""show reason"".', 'comment_created': datetime.datetime(2020, 8, 21, 16, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 474839453, 'comment_body': 'Same as with the location dialog.', 'comment_created': datetime.datetime(2020, 8, 21, 17, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 475105078, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105095, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105131, 'comment_body': 'Upps. Corrected,', 'comment_created': datetime.datetime(2020, 8, 22, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475105446, 'comment_body': 'I tried to rewrite it and add comments.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475118900, 'comment_body': 'The conditions are still hard to understand, I tried to simplify it:\r\n```\r\n    def OnStartEditLabel(self, node, event):\r\n        """"""Start label editing""""""\r\n        self.DefineItems([node])\r\n\r\n        # Not allowed for grassdb node\r\n        if node.data[\'type\'] == \'grassdb\':\r\n            event.Veto()\r\n        # Check selected mapset\r\n        elif node.data[\'type\'] == \'mapset\':\r\n            if (\r\n                self._restricted\r\n                or get_reason_mapset_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                   self.selected_location[0].data[\'name\'],\r\n                                                   self.selected_mapset[0].data[\'name\'],\r\n                                                   check_permanent=True)\r\n            ):\r\n                event.Veto()\r\n        # Check selected location\r\n        elif node.data[\'type\'] == \'location\':\r\n            if (\r\n                self._restricted\r\n                or get_reasons_location_not_removable(self.selected_grassdb[0].data[\'name\'],\r\n                                                      self.selected_location[0].data[\'name\'])\r\n            ):\r\n                event.Veto()\r\n        elif node.data[\'type\'] in (\'raster\', \'raster_3d\', \'vector\'):\r\n            currentGrassDb, currentLocation, currentMapset = self._isCurrent(gisenv())\r\n            if not currentMapset:\r\n                event.Veto()\r\n```', 'comment_created': datetime.datetime(2020, 8, 22, 18, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475195410, 'comment_body': 'Yes. Moved. When I tested Delete GRASS database from disk, I needed to switch to a different database and there is the following error (probably related to  https://github.com/OSGeo/grass/pull/919). When switching only between  mapsets in the same location or mapsets in the same grassdb it is okey.\r\n\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\nTraceback (most recent call last):\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 1352, in\r\nOnSwitchMapset\r\n\r\nswitch_mapset_interactively(self, self._giface, grassdb,\r\nlocation, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 720, in\r\nswitch_mapset_interactively\r\n\r\ngiface.currentMapsetChanged.emit(dbase, location, mapset)\r\n  File ""/home/linwe/grass/dist.x86_64-pc-linux-\r\ngnu/etc/python/grass/pydispatch/signal.py"", line 229, in\r\nemit\r\n\r\ndispatcher.send(signal=self, *args, **kwargs)\r\nTypeError\r\n:\r\nsend() got multiple values for argument \'signal\'\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 23, 9, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 475317822, 'comment_body': 'good catch, fixed in #931.', 'comment_created': datetime.datetime(2020, 8, 24, 3, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475320448, 'comment_body': '```suggestion\r\n    return gs.legal_name(mapset_name) and mapset_name.lower() != ""ogr"" and not \\\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 475323672, 'comment_body': '```suggestion\r\ndef get_list_of_locations(dbase):\r\n    """"""Get list of GRASS locations in given dbase\r\n\r\n    :param dbase: GRASS database path\r\n\r\n    :return: list of locations (sorted)\r\n    """"""\r\n    locations = list()\r\n    for location in glob.glob(os.path.join(dbase, ""*"")):\r\n        if os.path.join(\r\n                location, ""PERMANENT"") in glob.glob(\r\n                os.path.join(location, ""*"")):\r\n            locations.append(os.path.basename(location))\r\n\r\n    locations.sort(key=lambda x: x.lower())\r\n\r\n    return locations\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 3, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'd286ff6704453031afb6de3cc62460dbc87e6341', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dae90af61b02a9d7e2367746485da2e5d730912', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd02821c0a7a6d63d61a92ddd1fd135b20c116d61', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '854b44d0cdf6b33036fefab9e412492991940e8e', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead598fa52245e0f31d4288ab29c316ff232785e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f05565518cd0adfe41b1fd8a844d6ff19d17b68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9a21dd59b8979acd93c81076bb1008abf4d4e307', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc2637530f69cc5ab517d052689db81f96211651', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
470042118,wxGUI/datacatalog: multiple grass databases context menu shows Delete locations,"**Describe the bug**
When you select multiple GRASS databases in datacatalog and right click you get ""Delete locations"", which is obviously a mistake. This is in latest master.

**Expected behavior**
If there is no action implemented for multiple databases, it should show ""No available options"".",True,914,https://api.github.com/repos/OSGeo/grass/pulls/914,https://github.com/OSGeo/grass/pull/914,closed,2,0,1,1,0,0,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-19 09:34:32+00:00,2020-08-19 17:52:35+00:00,29883.0,8:18:03,[],"[{'commit_sha': '64e576816df969e9ee9ef5f1ee08677afeb673b2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
468024526,Switch to another mapset when in use (aka force remove lock),"**Describe the solution**

The data catalog should inform about the mapset being in use as indicated by the presence of the lock, but offer an option to force removal of the lock and switch to the mapset anyway. The primary choice/button should be the ""stay in current mapset"" option.

I think the asking twice as it is now in the startup window should be removed and instead information about the lock (i.e., the possible session there) should be provided. Some code for this is already in lib/init/grass.py and is used when using grass db/loc/mapset_which_is_in_use --text in the command line (not a reusable library function, but something to copy-paste and maybe to add to grass.grassdb).

This basically leads to switch_mapset_interactively() function. Using it in the startup window instead of the current code could help in making it more generic.
",True,906,https://api.github.com/repos/OSGeo/grass/pulls/906,https://github.com/OSGeo/grass/pull/906,closed,127,35,4,12,2,26,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-14 14:45:12+00:00,2020-08-18 17:13:33+00:00,354501.0,"4 days, 2:28:21","[{'comment_id': 470828050, 'comment_body': 'This is not needed just to relabel the buttons... See https://wxpython.org/Phoenix/docs/html/wx.MessageDialog.html', 'comment_created': datetime.datetime(2020, 8, 14, 19, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470929571, 'comment_body': ""Let's rename this to `can_switch_mapset_interactively` and it won't be actually switching the mapset, just checking and removing the lockfile. The signals would be called from tree.py as before. This function could be also used in lmgr/frame.py in OnChangeMapset/Location."", 'comment_created': datetime.datetime(2020, 8, 15, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055107, 'comment_body': '```suggestion\r\n    Checks if mapset is locked and offers to remove the lock file.\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055450, 'comment_body': 'I would remove the note about the permissions to simplify it.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471055493, 'comment_body': '```suggestion\r\n            message=_(""User {0} is already running GRASS in selected mapset ""\r\n```', 'comment_created': datetime.datetime(2020, 8, 16, 2, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471056005, 'comment_body': 'Keep the original name, if you want get_current_user, add a new function.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471058874, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 8, 16, 3, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471059043, 'comment_body': 'Remove, simply just call ChangeLocation.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471061794, 'comment_body': 'Using the `{1}` style is sub-optimal. The `{name}` is easier to read, less prone to errors, and more flexible for translations.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471075498, 'comment_body': 'I think that ""get_current_user"" is a much more generic name and makes more sense even in create_mapset_interactively function where the default is set to get_current_user(). It means that immediately we know that default mapset name is the current user\'s name. \r\nBy the way, this function is so far used only in guiutils when switching mapset and when creating a new mapset. ', 'comment_created': datetime.datetime(2020, 8, 16, 7, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471076166, 'comment_body': ""I would let the name get_current_user() but maybe move that function to grassdb/checks. I have noticed that in checks.py there are functions like get_mapset_owner, get_lockfile_if_present which have similar behavior = we try to GET something. And those functions do not perform any checks. Similarly like get_current_user(). It might be the reason why to set up different let's say get.py file.  "", 'comment_created': datetime.datetime(2020, 8, 16, 7, 11, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471151406, 'comment_body': ""You didn't test this properly, now you can't switch to mapset without a lockfile."", 'comment_created': datetime.datetime(2020, 8, 16, 19, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471151750, 'comment_body': 'The function name should be `get_default_mapset_name()` because the point of the function is to provide a string which is a name for mapset which should be used by default if there is no more specific name available or user does not provide it, e.g., a default value in a dialog or automatically created mapset.\r\n\r\nIt should be in `grass.grassdb.create` because it is relevant when creating new mapset and/or location.\r\n\r\nThese are exactly the usages when this function is used: default value in mapset creation dialog and (in #868) name of a generated mapset in the startup/demo location.\r\n\r\nIn `create_mapset_interactively()` the point of using `get_default_mapset_name()` is exactly that we want to get a default name for a mapset. We don\'t particularly care what the name is, i.e., we defer the decision to the implementation of that function. It is the question of semantics. What we emphasize in the API is the purpose of the value, not what the value is. The `get_default_mapset_name()` documentation can, or probably should, describe what the value is and why it is this way.\r\n\r\nThe point in making the distinction is that we can change the decision of what the default name is just by modifying this function, not all places where the default name is used. Additionally, the implementation of that function can be and in fact is geared towards that usage, i.e., it is not just purely for getting the current user name. Given its purpose, it always returns some string, so it returns `""user""` when the actual name was not find. This is a great behavior in context of getting some usable name for mapset, but it is rather unexpected and potentially harmful if the purpose is obtaining a user name. This would become even more prominent when more sophisticated replacement of non-compliant characters is added (see current code or e.g. comments in #897 for motivation). Consequently, using the function given its current implementation for getting user name is wrong.', 'comment_created': datetime.datetime(2020, 8, 16, 19, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471153690, 'comment_body': ""This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n\r\nIt seems that the best way of obtaining it is pathlib's `Path.owner`."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 19, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471586276, 'comment_body': ""That's strange. I am testing it now and it works fine. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 10, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471589002, 'comment_body': ""> \r\n> \r\n> This gets the current user and than it claims it is the one running the session. Well, that may or may not be true. (It is actually a more useful information when it is not true.)\r\n> \r\n> It seems that the best way of obtaining it is pathlib's `Path.owner`.\r\n\r\nI made actually the same function as get_mapset_owner, just for gislock owner. Maybe we could make one function get_file_owner instead of get_mapset_owner and get_gislock_owner. "", 'comment_created': datetime.datetime(2020, 8, 17, 16, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471660802, 'comment_body': '```suggestion\r\n    """"""Returns default name for a mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 17, 17, 52, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471871002, 'comment_body': 'This is actually two module calls. Do `gisenv = grass.gisenv()` and then use it like elsewhere.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471872163, 'comment_body': 'Although this is consistent name with the others, the name is little misleading because it reads as ""Can I switch mapset interactively?"" when in fact it should be saying more ""Check interactively if I can switch mapset"". I think `can_switch_mapset_interactive()` keeps it simple and it expresses well that it is a ""can (I) switch mapset? but doing it in interactive manner.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471873409, 'comment_body': 'The `&` is what is used to identify a character which will be used with Alt key to ""press"" the button without using a mouse pointer. They need to be at least different, but I would probably go with `""S&witch...` and `""S&tay...`.', 'comment_created': datetime.datetime(2020, 8, 18, 2, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471874286, 'comment_body': 'The terminology used in #849 is ""in use"" so ""Mapset is in use"".', 'comment_created': datetime.datetime(2020, 8, 18, 2, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471877650, 'comment_body': ""I think the best thing to do with this function is to turn it into `get_mapset_lock_info(mapset_path)`. It can get also the timestamp (and there is one other thing which this could get but that's too much for this PR). Given that there will/might be extensions and for the lack of better ideas, the return type should be dict with keys owner and datetime.\r\n\r\nActually, let's add also filename as another key which will remove the need to call `get_lockfile_if_present()` and you can use the nicer `is_mapset_locked()`."", 'comment_created': datetime.datetime(2020, 8, 18, 2, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472261916, 'comment_body': ""```suggestion\r\n    info['lockpath'] = os.path.join(mapset_path, lock_name)\r\n    try:\r\n        info['owner'] = Path(info['lockpath']).owner()\r\n    except KeyError:\r\n        info['owner'] = None\r\n    info['timestamp'] = (datetime.datetime.fromtimestamp(\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 14, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472264015, 'comment_body': '```suggestion\r\n    """"""Get information about .gislock file.\r\n    Assumes lock file exists, use is_mapset_locked to find out.\r\n    Returns information as a dictionary with keys\r\n    \'owner\' (None if unknown), \'lockpath\', and \'timestamp\'.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 14, 59, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472328183, 'comment_body': ""```suggestion\r\n        user = info['owner'] if info['owner'] else _('unknown')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 16, 32, 43, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472330870, 'comment_body': '```suggestion\r\n    """"""Returns default name for mapset.""""""\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '364173c5d099347605e2647c8989d3d0d7226e11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be3000527113dd045295e56776661d5dc8b4b563', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c64a9337c078cb7e24de697980a2bda10b1a44c2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7e56782e9331b86a944d8eb1ab1c9c8bd407067', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '270a5d1b84ad522d31273451cae310ccd04a5b11', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b10503c8c44813d4c4acb689361221626fe6e6eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0388f4c65fbeb569d87349f737fd1753b02bff0b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7848787a2a4c088c7212a5ea80cb86c94f01fb95', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a667ba2f6c0bf06f17c69ab749cd0c0937105dc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd13705f5d17ee060cead162332005e2a8ab25447', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19c507b9fd20be836cd6a29163dda95297614ac5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a72ae80e191ebd4344f868c06affe040b14e227', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
466861464,Check for gislock and other issues when deleting/renaming/editing mapset and location in catalog,"Currently we don't have mechanism in data catalog to check for gislock and if mapset belongs to different user, so that we prevent user from actions including deleting or renaming mapset, and editing layers. The same applies to location deleting/renaming, it needs to check whether all mapsets can be edited.",True,904,https://api.github.com/repos/OSGeo/grass/pulls/904,https://github.com/OSGeo/grass/pull/904,closed,333,239,3,13,0,24,2,1,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-12 15:53:13+00:00,2020-08-19 17:42:31+00:00,611358.0,"7 days, 1:49:18","[{'comment_id': 470658118, 'comment_body': 'The checks should be done in check_mapset_interactively for 1 mapset and then check_mapsets_interactively will call check_mapset_interactively in a for loop. The way you have it now works, but this way it will make more sense.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470658856, 'comment_body': ""'exception' would mean a Python exception, but these are more 'failed checks' or something like that."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470659179, 'comment_body': '```suggestion\r\n        if check_permanent and mapset == ""PERMANENT"":\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 14, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660055, 'comment_body': 'Remove ""therefore changes are not allowed"", just state the problem.', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470660323, 'comment_body': 'the same for locations', 'comment_created': datetime.datetime(2020, 8, 14, 14, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662672, 'comment_body': 'use +=', 'comment_created': datetime.datetime(2020, 8, 14, 14, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470662855, 'comment_body': 'put on 1 line', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663123, 'comment_body': ""```suggestion\r\n            env=env).strip().split(',')\r\n```"", 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470663293, 'comment_body': 'tmp_gisrc_file needs to be removed, see tree.py', 'comment_created': datetime.datetime(2020, 8, 14, 14, 37, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 470674065, 'comment_body': ""The names of the functions should be probably different. Something like `get_reason_mapset_not_removable` and  `get_reasons_mapsets_not_removable`. It doesn't sound great but describes what it's doing."", 'comment_created': datetime.datetime(2020, 8, 14, 14, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471067478, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471067487, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471069846, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 16, 5, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471152590, 'comment_body': 'I think we wanted ""get_reason_mapset_not_removable"", currently the implementation reports 1 reason because you have elif there and not if for every case. We could also report multiple reasons (e.g. mapset can be locked and PERMANENT), but I would keep single reason. Therefore the name should reflect that. It\'s a detail, but let\'s get it right.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471152984, 'comment_body': ""You can't just blindly copy code. This is handling communication from parallelized calls of getLocationTree function, remove it."", 'comment_created': datetime.datetime(2020, 8, 16, 20, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153386, 'comment_body': 'Probably could say cannot rename mapset `<mapset>` for ...', 'comment_created': datetime.datetime(2020, 8, 16, 20, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 471153590, 'comment_body': 'Also it should return message as string (or None), not list to keep it all consistent. Update the documentation.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472337989, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338400, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472338580, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472339613, 'comment_body': '```suggestion\r\n            caption=_(""Unable to delete selected GRASS database""),\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472342129, 'comment_body': '```suggestion\r\n    Returns messages as list if there were any failed checks, otherwise empty list.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 16, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472349882, 'comment_body': ""```suggestion\r\n        if self.selected_grassdb[0].data['name'] == genv['GISDBASE']:\r\n```"", 'comment_created': datetime.datetime(2020, 8, 18, 17, 7, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 472436786, 'comment_body': '```suggestion\r\n    Returns message as string if there was failed check, otherwise None.\r\n```', 'comment_created': datetime.datetime(2020, 8, 18, 19, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ccdb1022e5442b09cae4f0eb90ca8214a7711aa7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37e59f800d197faef85e293bad019ac49fe6f42c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '43896a69b789b746021aaecc76294c0b7939f0e8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f1fb18a1c5fde21aaee24962a720dd52d7f51a87', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '650a583bd56bf90cd7f262182ed7ef3c9234e1b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2c15d642181fd11fb8bdd72a20880339b6d80cf9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7f40521004b85e6682360901ba22131c6d9aa743', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2e2b86ebb3b02944f59789f04453a2e8c1cb1ece', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7723c33610652d8d4cdcb3e0f54007fd599b6c07', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '339d07788a2ab6ae863f2e7563674d9b9586dee4', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4506c515604e019db93431b224f09fb4bf9d26', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aa073feb559edde0254a44c4bf27123de344916', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '174c1b89d17fa788eafe6595c4aa7dabea5715fd', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
465145424,Data catalog: double click on map from different location fails,"**Describe the bug**
Double click on map from different than current location adds the layer into layer tree but the layer does not exist in current location so it fails to display it.

**Expected behavior**
I suppose it should inform user that the map is in different location and ask if they want to switch to that mapset.",True,886,https://api.github.com/repos/OSGeo/grass/pulls/886,https://github.com/OSGeo/grass/pull/886,closed,26,4,1,5,1,3,3,1,"[{'name': 'bug'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-09 12:20:56+00:00,2020-08-12 13:35:23+00:00,263667.0,"3 days, 1:14:27","[{'comment_id': 468867040, 'comment_body': 'Let\'s make the message little bit more specific:\r\n""Map \\<mymap@mapset\\> is not in the current location and therefore cannot be displayed. \\n\\n To display this map switch to mapset \\<mapset\\> first."" ', 'comment_created': datetime.datetime(2020, 8, 11, 21, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257471, 'comment_body': '```suggestion\r\n                            ""To display this map switch to mapset <{1}> first.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 469257992, 'comment_body': '```suggestion\r\n                            ""Map <{0}@{1}> is not in the current location""\r\n```', 'comment_created': datetime.datetime(2020, 8, 12, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '35dd7d3ebce4ef9337170c1a2f0672a59f8c583a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '020ee6e16aa7e8490a735fbed95a3523dc5edca5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f0d1266c0483c79f4fa31a53691627462b0a170f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35c46222c87e870efcda588f7af560985f2b307b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7dc0ec29ae11a47ec9d3b20c4d93065cd2f53ba', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
462802226,Allow delete on multiple locations in data catalog,"There is already the ""Delete mapsets"" option in Data Catalog. The same thing should be enabled for locations.",True,875,https://api.github.com/repos/OSGeo/grass/pulls/875,https://github.com/OSGeo/grass/pull/875,closed,76,34,2,2,0,3,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-04 14:26:13+00:00,2020-08-08 02:23:33+00:00,302240.0,"3 days, 11:57:20","[{'comment_id': 467346931, 'comment_body': '```suggestion\r\n                        ""Deleting locations was interrupted.""\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467347113, 'comment_body': '```suggestion\r\n            issue = _(""<{}> is current location."").format(location_path)\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467347379, 'comment_body': '```suggestion\r\n    return delete_locations_interactively(guiparent, locations)\r\n```', 'comment_created': datetime.datetime(2020, 8, 8, 1, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '122971e003c63c2b4b08784242c8209f267f4165', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62eeedf157ad0c7519b6769947fa5e595c5dae1b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
461780523,Misleading lock symbol icon in the in the Data tab toolbar,"**Describe the bug**

The toolbar of Data tab uses lock/unlock symbol for allowing and disallowing edits in mapsets other than the current one. However, the locking refers to something else in GRASS GIS and that it locking of mapsets by a GRASS GIS process/session. That terminology is actually in line with other software where a file is locked when used by another process or instance of the same program.

**Expected behavior**

A new icon is needed. It may have the allowed and restricted states like now or it could be just one symbol relying on the toggle state of the button to convey the change of state. A common icon for editing in GIS, including GRASS GIS, is a pen/pencil, so that's at least a good starting point.

**Suggestion:**

Editing mode allowed:

![allow_edits](https://user-images.githubusercontent.com/49241681/89119528-b79c7380-d474-11ea-8af0-d0b5fdfcd560.png)

No edits allowed:

![disallow_edits](https://user-images.githubusercontent.com/49241681/89119540-cdaa3400-d474-11ea-95e9-2498e8b885b4.png)

What are your suggestions?",True,870,https://api.github.com/repos/OSGeo/grass/pulls/870,https://github.com/OSGeo/grass/pull/870,closed,5,4,2,5,12,0,4,1,"[{'name': 'bug'}, {'name': 'question'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-08-02 09:01:19+00:00,2020-08-10 18:14:50+00:00,724411.0,"8 days, 9:13:31",[],"[{'commit_sha': 'dfb1a5518ae9a8438b1ba4561e96cee822301d89', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b12961332b216281186bdfe75c0264a1a96aaa08', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '16a230e562b70f500a4178d1e290eb7367f740f9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4794f28d60fbd2a8764ab7bd6241b742830aa077', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd18f100adab181ecbace51864ab772917822c47a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
458462469,Distinguish mapsets by ownership and lock in Data tab,"In the startup screen it would be nice if mapsets could be displayed differently (e.g. different colors, for ""my mapsets"", ""my locked mapsets"", ""others mapsets"").

Mapsets owned by different user and locked mapsets will be displayed in gray and distinguished from ""normal mapsets"" by special label.


",True,849,https://api.github.com/repos/OSGeo/grass/pulls/849,https://github.com/OSGeo/grass/pull/849,closed,117,35,2,14,5,28,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 14:04:42+00:00,2020-08-11 16:46:48+00:00,1132926.0,"13 days, 2:42:06","[{'comment_id': 462342973, 'comment_body': ""Instead of this, it should be more `get_mapset_owner`, which will return the owner even if it's the the user."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 462348747, 'comment_body': ""OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n\r\nThe idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method."", 'comment_created': datetime.datetime(2020, 7, 29, 14, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463033992, 'comment_body': ""No sure where to add more information to node.data. Where is e.g. node.data['name'] defined? "", 'comment_created': datetime.datetime(2020, 7, 30, 14, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463721905, 'comment_body': ""You need to return directly the wx.SYS....\r\n\r\nDelete '== True '"", 'comment_created': datetime.datetime(2020, 7, 31, 16, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463722843, 'comment_body': 'This all need to be called for all reload functions, not just that one, look eg. what reloadtreenodes is calling', 'comment_created': datetime.datetime(2020, 7, 31, 16, 56, 23, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463723315, 'comment_body': 'Just pass directly is_mapset_locked result', 'comment_created': datetime.datetime(2020, 7, 31, 16, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463929255, 'comment_body': 'Edited.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929720, 'comment_body': 'I edited the way how to append mapset node in functions _reloadLocationNode, _reloadGrassDBNode and GetCurrentDbLocationMapsetNode. Also after these edits I have still the same above-mentioned ""key"" error. I think I should define ""lock"" and ""user"" keys maybe in treemodel? But it seems strange to me because treemodel is a very general function and there is no explicit definition of what keys and values actually are.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 463929728, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 1, 6, 26, 24, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464498802, 'comment_body': '> No sure where to add more information to node.data. Where is e.g. node.data[\'name\'] defined?\r\n\r\nI haven\'t delved deeply into this code, yet, but IIUC, these are defined whenever you create a dictionary for a tree node, e.g. on lines 336ff (in this PR):\r\n\r\n```\r\n            mapset_node = self._model.AppendNode(\r\n                                parent=location_node,\r\n                                data=dict(type=\'mapset\',\r\n                                          name=mapset,\r\n                                          lock=is_mapset_locked(mapset_path),\r\n                                          user=different_user))\r\n```\r\nSo, ""lock"" seems to be defined for mapset nodes whenever they are created (also elsewhere in the code). But AFAICT location_nodes do not include the ""lock"" key.', 'comment_created': datetime.datetime(2020, 8, 3, 15, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464505301, 'comment_body': ""> OnGetItemSomething are defined methods in wx that need to be overriden, so you can't just create a new one.\r\n> \r\n> The idea here is to add more info to node.data, e.g. node.data['lock'], and then change DataCatalogNode.label method.\r\n\r\nIIUC, this is true for many other OnGetItem method that you propose."", 'comment_created': datetime.datetime(2020, 8, 3, 15, 56, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 467191023, 'comment_body': 'I would use ""(owner: xxx)"" and ""(in use, owner: xxx)""\r\nWe thought ""in use"" might be more understandable than \'locked\' \r\n\r\nalso, it should be translatable _()', 'comment_created': datetime.datetime(2020, 8, 7, 18, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467194597, 'comment_body': 'You should probably have data[""owner""] (that would be result of get_mapset_owner) and additionally data[""is_different_owner""] (result of is_mapset_users - bool). Then just adjust the label() code. This is more cosmetics, but it makes sense more like that.', 'comment_created': datetime.datetime(2020, 8, 7, 18, 10, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467197170, 'comment_body': ""I don't think this is needed, it will search the nodes based on name and mapset, that's enough."", 'comment_created': datetime.datetime(2020, 8, 7, 18, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 467365216, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467367017, 'comment_body': '""Check mapset ownership"" part removed and mapset_node dictionary (lock, is_different_owner, owner) set. All decisions about what label to use are now made in @property function.', 'comment_created': datetime.datetime(2020, 8, 8, 5, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467449381, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 8, 10, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467490109, 'comment_body': 'Why did you need to change `is_mapset_users()` into `is_different_mapset_owner()`? If it is just about clarity of the name then `is_current_user_mapset_owner()` might be better. If it is just about which case it reports as true, then mapset being owned by the current users is the primary or positive case, so I would have function for that and negate the result if need. (The point here is that this is a general functionality/API, not limited to data catalog.) If you really feel like function for the opposite case is needed, then you can wrap the existing one.\r\n\r\nBesides the naming and what it is supposed to do, the current implementation is not correct: The GRASS_SKIP_MAPSET_OWNER_CHECK case does not correspond to `is_different_mapset_owner()`.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467490665, 'comment_body': 'Don\'t bother changing quotes from `""` to `\'`. Although most prevalent style in GRASS is now `\'` for keys, the Black style, which we will use in the future, uses `""` for everything.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467491953, 'comment_body': 'More general way to do this is:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(name=data[""name""])\r\n```\r\n\r\nor making use of the fact data is a dictionary:\r\n\r\n```\r\n_(""{data[name]} (current)"").format(data=data)\r\n```\r\n\r\nor making use of the fact that the only values we are using are from the dictionary:\r\n\r\n\r\n```\r\n_(""{name} (current)"").format(**data)\r\n```\r\n\r\nIt is more flexible and possibly also more readable as you see the basic structure of the string being constructed, but in the other cases it is also likely faster since format is already used there anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 18, 32, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467554480, 'comment_body': 'I preserved the function is_mapset_users() but renamed it to is_current_user_mapset_owner(). Then I made the wrapping  function called is_different_mapset_owner().', 'comment_created': datetime.datetime(2020, 8, 9, 8, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467554696, 'comment_body': 'For now, I would let it like it is in the last commit. At least it has a uniform form.', 'comment_created': datetime.datetime(2020, 8, 9, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467560232, 'comment_body': 'Rewritten to _(""{name} (current)"").format(**data).', 'comment_created': datetime.datetime(2020, 8, 9, 9, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 468710700, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 29, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716371, 'comment_body': '```suggestion\r\n                return _(""{name}  (current)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716531, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use, owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716640, 'comment_body': '```suggestion\r\n                return _(""{name}  (in use)"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 468716777, 'comment_body': '```suggestion\r\n                return _(""{name}  (owner: {owner})"").format(**data)\r\n```', 'comment_created': datetime.datetime(2020, 8, 11, 16, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '959ee18def0ff482d739423a1ba7a17bc0630e45', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85bb5ad535964a1311b35aeaa6545c9a7257ad4c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0bd553c299eb3893e3783f1a48e51a90fbe4cf29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c722ff8f40eb52de9f8e4f87acde8dc35ba96ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '12985accdf42a7fd9883bada78cdc7389f703a64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55dcbc91d98262f09c7cc80e9d3c5b836440e712', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '41d7418eae4587f40c0ea9ff2883a152b003f768', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '75b993f52b88e834a43f32a422420abf3aa4400f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2f91460f96cc0d5335971a0f2f1ec7078f67ed31', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40fe63178c5827716c28bbe43b850dbfa8045527', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee1359784f3d554ade655b5b29d090a7e0d23961', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49d234c5566bc0ab3a44f2d8c8178a8694c3272', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b980178aba410e00aa11153f406d43ee7adee3e2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26e451f9d90d8bbb7f8391e1f272047f8c26a287', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
458383229,wxGUI: An action should be required before modifying other mapsets,"While ""allow editing"" is OFF, no mapsets or location can be renamed or deleted. When ON we are allowed to rename and delete all mapsets and locations besides current ones.",True,848,https://api.github.com/repos/OSGeo/grass/pulls/848,https://github.com/OSGeo/grass/pull/848,closed,196,108,2,5,17,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-29 11:40:56+00:00,2020-08-04 12:06:25+00:00,519929.0,"6 days, 0:25:29",[],"[{'commit_sha': '4c5ce9bc3677def5cc99b18bc1515da6cbc72708', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2d0df041a2a06a654ee0debfbfcfdf923135d70', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aa849e110596c54e8b9bd5ed535664037d7d12ef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28f13794e8155c0b12a85fe55a5214ddadbaea56', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9ee5aeeaeff8adf452004d6b9eeabcb7c4f9797d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
456128296,wxGUI: Add new icons to datacatalog for actions avaliable in context menu (continue),"Certain actions that are currently available (and will be available in the future) in the context menus of data catalog need to be exposed as toolbar icons. This is a suggested list of actions, to be edited based on discussion and feature availability:

- [x] add new database (already created)
- [x] create new mapset (already created)
- [x] download sample location (now created)
- [x] create new location (now created)

Other:

- [ ] import into current mapset",True,830,https://api.github.com/repos/OSGeo/grass/pulls/830,https://github.com/OSGeo/grass/pull/830,closed,147,175,8,2,0,1,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-24 07:38:39+00:00,2020-07-25 03:04:57+00:00,69978.0,19:26:18,"[{'comment_id': 460034999, 'comment_body': 'Location Wizard is not used for downloading locations', 'comment_created': datetime.datetime(2020, 7, 24, 12, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'c62f94fc71f7a4df955cc1f3e6cb6f9ca4f3c7ac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '22883f5097c28d44d16cc875f4c4a49ae4aecd59', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
453688701,wxGUI: Add new icons to data catalog for actions avaliable in context menu,"Certain actions that are currently available (and will be available in the future) in the context menus of data catalog need to be exposed as toolbar icons. This is a suggested list of actions, to be edited based on discussion and feature availability:

- [x] add new database (already created)
- [x] create new mapset (now created)

Other:
- [ ] download sample location
- [ ] create new location
- [ ] import into current mapset

",True,811,https://api.github.com/repos/OSGeo/grass/pulls/811,https://github.com/OSGeo/grass/pull/811,closed,275,18,7,6,2,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-20 17:55:57+00:00,2020-07-24 03:24:48+00:00,293331.0,"3 days, 9:28:51",[],"[{'commit_sha': '6cce4afa63d570b8c6ab4730cf89c34c99209f92', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1c68a1ae3674a098177b9bea1efd157e2a0005af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a89327d02c5e32e9852520ffed9dc9a86643cf1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3f5533e09c5bf61e0d55a0bf666126700502a29', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b17217dbc7696d66772aa20ee305bfc165cef795', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31e1ec9e4853a00a1dc1d63838e631d89141fba6', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
450275738,wxGUI: Allow delete on multiple mapsets in data catalog,"Added the function delete_mapsets_interactively which is called after selecting more mapsets. Checked possible cases of current or pernament mapset selection. 
",True,795,https://api.github.com/repos/OSGeo/grass/pulls/795,https://github.com/OSGeo/grass/pull/795,closed,135,70,3,4,1,20,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-16 15:14:24+00:00,2020-07-24 04:18:24+00:00,651840.0,"7 days, 13:04:00","[{'comment_id': 456204479, 'comment_body': ""this shouldn't take as input nodes, it should be something like a list of tuples [(db1, loc1, mapset1), (), ...]"", 'comment_created': datetime.datetime(2020, 7, 17, 3, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456206484, 'comment_body': 'Remove this from here, the message should be constructed later, just store the index here.\r\n\r\nConcatenating strings is done with join function.\r\n', 'comment_created': datetime.datetime(2020, 7, 17, 4, 5, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456207581, 'comment_body': ""you don't need this when using join"", 'comment_created': datetime.datetime(2020, 7, 17, 4, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456208304, 'comment_body': 'use data[""name""] instead of label everywhere', 'comment_created': datetime.datetime(2020, 7, 17, 4, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190111, 'comment_body': 'simplify the syntax to `append((db, loc, mapset))`, right now you are creating a list and converting it to tuple.', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190214, 'comment_body': 'the same about tuple here', 'comment_created': datetime.datetime(2020, 7, 23, 2, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459190377, 'comment_body': 'in this case you can just do it in 1 line', 'comment_created': datetime.datetime(2020, 7, 23, 2, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193791, 'comment_body': 'Use format function as we discussed everywhere.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459193899, 'comment_body': 'Also use translatable strings _()', 'comment_created': datetime.datetime(2020, 7, 23, 3, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194738, 'comment_body': 'At the end there should be probably a sentence that the deleting of other mapsets wont proceed. Something like ""No mapsets will be deleted.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459194908, 'comment_body': 'This should list the mapsets that will be deleted.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459197920, 'comment_body': 'This should return True/False, see #789.', 'comment_created': datetime.datetime(2020, 7, 23, 3, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 459306810, 'comment_body': 'Simplified.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459307117, 'comment_body': 'Simplified as well.', 'comment_created': datetime.datetime(2020, 7, 23, 8, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459333654, 'comment_body': 'This sentence added.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340313, 'comment_body': 'Changed in the whole guiutils.py file.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459340394, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 23, 9, 59, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459342073, 'comment_body': 'It lists all mapsets that will be deleted in terms of their paths. \r\n![Screenshot from 2020-07-23 05-01-48](https://user-images.githubusercontent.com/49241681/88274700-6655ec80-ccdc-11ea-86de-477daf6fab61.png)\r\n', 'comment_created': datetime.datetime(2020, 7, 23, 10, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459360570, 'comment_body': 'I rebased and solved conflict with master because of #789 and considered this as well.', 'comment_created': datetime.datetime(2020, 7, 23, 10, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459842057, 'comment_body': 'The merge ended up ignoring the return value, fixed.', 'comment_created': datetime.datetime(2020, 7, 24, 4, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': 'dcfb617a22ef7bae92fffa2cae02fa77cc7421ee', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '06accf4179c0f232bcad65edec0017a77f1f54ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae7f06bbfed4b16ae26225545c8ba799aaed53df', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01f5d20051436c00f2b015d6465293a20f89e5b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448951069,wxGUI: Add new location action to database node in Data tab,"
wxGUI/datacatalog: New functions download_location_interactively, create_location_interactively added. Also checking for location validation a bit changed, made more clear. After clicking on grass node, two options for creating and downloading location are avaliable.",True,790,https://api.github.com/repos/OSGeo/grass/pulls/790,https://github.com/OSGeo/grass/pull/790,closed,214,121,4,12,7,54,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-14 15:23:53+00:00,2020-07-24 02:00:20+00:00,815787.0,"9 days, 10:36:27","[{'comment_id': 454758067, 'comment_body': ""I can see this would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.\r\n\r\nYou may need to return tuple (1) or something like that from this function to get all what you need out, but returning the wizard seems inconsistent with the other functions you created where the beauty is that we don't need to deal with any GUI afterwards and we get just the data.\r\n\r\n(1) A tuple is not ideal, but easiest to write, so great for prototype. Alternatively, a dict is of course the Python's programmer unfortunate default for everything ([Python: What if everything was a dict?](https://argumate.tumblr.com/post/118013166244/python-what-if-everything-was-a-dict-java-what))."", 'comment_created': datetime.datetime(2020, 7, 15, 2, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 454760288, 'comment_body': 'This known by a poetic name, _unreachable code after return statement_. :smile: Flake8 would probably warn you about this, but in any case, flipping the lines should be enough so that the `Destroy()` is called before the function ends.', 'comment_created': datetime.datetime(2020, 7, 15, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456177949, 'comment_body': 'After hitting cancel in Location Wizard:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/datacatalog/tree.py"", line 694, in\r\nOnCreateLocation\r\n\r\ncreate_location_interactively(self,\r\n  File ""/home/vpetras/dev/grass/grass/dist.x86_64-pc-linux-\r\ngnu/gui/wxpython/startup/guiutils.py"", line 223, in\r\ncreate_location_interactively\r\n\r\ngWizard_output = (gWizard.grassdatabase, gWizard.location,\r\nAttributeError\r\n:\r\n\'LocationWizard\' object has no attribute \'grassdatabase\'\r\n```', 'comment_created': datetime.datetime(2020, 7, 17, 2, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456194297, 'comment_body': ""The correct way how to write this would be:\r\n\r\n```python\r\n        grassdatabase, location, georeffile, default_region, user_mapset = (\r\n            create_location_interactively(self, self.selected_grassdb[0].data['name'])\r\n        )\r\n```\r\n\r\nHowever, most likely, it will not be needed since the following code really needs to go to the `create_location_interactively()` function."", 'comment_created': datetime.datetime(2020, 7, 17, 3, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195076, 'comment_body': 'Since this is so much part of location wizard workflow both here and in original gis_set.py, this really should be part of that `create_location_interactively()` function.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456195342, 'comment_body': 'Seems to be exactly the case of wrong(ly used) function I mentioned:\r\n\r\n> I can see this [`create_location_interactively()`] would be nice, but you need to move lot more functionality here to make it useful. This will also help you clean up couple calls to non-existent or wrong methods in `OnCreateLocation()` in `tree.py`.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456196821, 'comment_body': 'Catching such a generic exception (Exception) seems unnecessary. The error message for many exceptions will not be helpful for the end user. Was the original code doing that? What do you expect from `download_location_interactively()`? Are some issues handled there already? For a fallback mechanism for unexpected errors, the default mechanism of reporting them in the console is probably enough.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197372, 'comment_body': 'Does LocationWizard raise OSError? Otherwise, same questions as for OnDownloadLocation() in tree.py.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456197450, 'comment_body': '```\r\n$ flake8 --isolated startup/guiutils.py\r\n...\r\nstartup/guiutils.py:391:9: E117 over-indented\r\n...\r\n```\r\n\r\nApplies to the whole function body.', 'comment_created': datetime.datetime(2020, 7, 17, 3, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456740935, 'comment_body': 'It seems to me now that the best way how to do this is to put the `if user_mapset:` part to `create_location_interactively()`. In case loc wizard says a mapset needs to be created, it is appropriate for `create_location_interactively()` to call `create_mapset_interactively()`. No need to involve the caller (i.e., data catalog or startup) into the process.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 6, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742283, 'comment_body': 'I think this function should return tuple (database, location, mapset) where database and location are what it returns now and mapset is `""PERMANENT""` by default and result of `create_mapset_interactively()` in case `gWizard.user_mapset` is `True`. This way, the issue of additional mapset creation is encapsulated in this function.\r\n\r\nThe documentation should say that the return value, i.e., the tuple (database, location, mapset), is the location user created and the mapset is a mapset user may want to switch to. At this point it will be PERMANENT, but theoretically it could be another mapset the user created. The emphasis in ""may want to switch to"" is on the ""may"", it depends on the caller what the context is. In datacatalog, we currently don\'t switch in this case, in startup we change selection (or whatever is the current state, I would have to double check, but the point is, it is up to do caller to decide).', 'comment_created': datetime.datetime(2020, 7, 18, 3, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456742610, 'comment_body': 'It would make sense for this function to have the same interface, esp., the return value as `create_location_interactively()`, so that they can be used interchangeably and that we can change the implementation here and the rest of the code just works. Although the functionality is not here and we won\'t be adding it right now, creating another mapset here actually makes more sense than when creating an empty location. So, the return value right now should be tuple `(grassdb, location, ""PERMANENT"")`.\r\n\r\nYou should describe in documentation, when it returns invalid values and what happens on error or cancel. It should fit in terms of interface with the `create_location_interactively()`.', 'comment_created': datetime.datetime(2020, 7, 18, 3, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849085, 'comment_body': 'Why to InsertMapset here and why only when not PERMANENT (note the spelling, BTW)? ReloadTreeItems is called afterwards. The bigger problem is the database.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 17, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849581, 'comment_body': 'If there is really a different treatment of PERMANENT mapset needed, it needs to be documented here.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849653, 'comment_body': '`mapset` is probably a good enough name in this context.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849816, 'comment_body': 'The mapset name here is little strange as a value on failure. The original `(None, None, None)` sounds better and is probably safer.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 29, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456849875, 'comment_body': 'Documentation of return value is really needed for this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850102, 'comment_body': 'You can solve the case if `gWizard.location is None` right here (and return) and continue with the ""success"" case below without any nesting.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456850336, 'comment_body': 'This `gWizard_output` value gets replaced by the following line (always). Play with return statements and variable in some trivial pure Python code example.\r\n\r\nYou need to define that fist as sort of a default and overwrite it here or just overwrite the last item (`gWizard_output[2] = ...)`)', 'comment_created': datetime.datetime(2020, 7, 19, 2, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851247, 'comment_body': 'Just naming, the variable name is unnecessarily descriptive. You are in a relatively short `download_location...` function. Simply calling it, e.g., `result` in the sense ""this is what will be used as a return value"" is enough and likely best describes the variable in its context which is this function.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456851448, 'comment_body': 'What is that for? Reloading covers this. Besides you are passing location as string to location_node parameter.', 'comment_created': datetime.datetime(2020, 7, 19, 2, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456851851, 'comment_body': ""This seems currently unused, because ReloadTreeItems adds that node. Just remove it now, it's not correctly implemented anyway, you would need to rebase to master due to #797."", 'comment_created': datetime.datetime(2020, 7, 19, 3, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 458256252, 'comment_body': 'Now it returns the tuple: (gWizard.grassdatabase, gWizard.location, and either PERNAMENT or user mapset).  ', 'comment_created': datetime.datetime(2020, 7, 21, 17, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458256510, 'comment_body': 'Those lines were flipped.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458257183, 'comment_body': 'Now it returns the tuples of Nones:  \r\nif gWizard.location is None:\r\n        gWizard_output = (None, None, None)\r\n        return gWizard_output', 'comment_created': datetime.datetime(2020, 7, 21, 17, 11, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458258034, 'comment_body': 'I edited formatting.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 12, 40, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458259464, 'comment_body': 'All these lines are now a part of create_location_interactively.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 15, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458260574, 'comment_body': 'create_mapset_interactively used within create_location_interactively', 'comment_created': datetime.datetime(2020, 7, 21, 17, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261049, 'comment_body': 'Generic exceptions removed. Not needed here.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261260, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458261893, 'comment_body': 'Corrected in a last commit.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458262892, 'comment_body': 'if user_mapset:\r\nuser_mapset = **create_mapset_interactively**(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)', 'comment_created': datetime.datetime(2020, 7, 21, 17, 20, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458263575, 'comment_body': 'create_location_interactively now returns tuple (database, location, mapset) where database and location are what it returns now and mapset is ""PERMANENT"" by default or the result of create_mapset_interactively() in case gWizard.user_mapset is True.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458264135, 'comment_body': 'if loc_download.GetLocation() is not None:\r\n        result = (grassdb, loc_download.GetLocation(), ""PERMANENT"")\r\n\r\nDocumentation added.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266378, 'comment_body': 'User mapset was solved within create_location_interactively. \r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458266482, 'comment_body': 'Spelling corrected.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458267614, 'comment_body': 'It is not a different treatment. \r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 21, 17, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458268664, 'comment_body': 'Name user_mapset changed to just mapset (last commit).', 'comment_created': datetime.datetime(2020, 7, 21, 17, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458269829, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270297, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458270499, 'comment_body': 'Addressed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271200, 'comment_body': 'Addressed here:\r\n\r\nif gWizard.user_mapset:\r\n        mapset = create_mapset_interactively(guiparent,\r\n                                                  gWizard.grassdatabase,\r\n                                                  gWizard.location)\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          mapset)\r\n    else:\r\n        # Returns PERMANENT mapset when user mapset not defined\r\n        gWizard_output = (gWizard.grassdatabase, gWizard.location,\r\n                          ""PERMANENT"")', 'comment_created': datetime.datetime(2020, 7, 21, 17, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271657, 'comment_body': 'Changed to **result**.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271800, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458271968, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 7, 21, 17, 35, 43, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458476501, 'comment_body': '...and Close does not cause a traceback.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477505, 'comment_body': 'The documentation of the return value needs to go to the docstring:\r\n\r\n```\r\n""""""Create new location using Location Wizard\r\n\r\nReturns foo when... Returns bar when...\r\n""""""\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 1, 17, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458477762, 'comment_body': 'Same here as for `create_location_interactively()`, documentation of the return value needs to be in the docstring because it documents the interface.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458479900, 'comment_body': 'This also contains some info on what should be in the documentation. To your:\r\n\r\n```\r\n        # Returns database and location created by user\r\n        # and a mapset user may want to switch to\r\n```\r\n\r\nThe point of ""user may want to switch to"" is that the function can create only PERMANENT or it can create one or (in the future) more other mapsets. The caller does not know and this function does not tell. What this function reports back is the mapset the user may want to switch to if any switching is expected (not the case currently in data catalog, but it is the case in the startup window). This mapset can be PERMANENT or anything else.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458482272, 'comment_body': 'I don\'t understand. Are you saying that PERMANENT and any other mapset is treated the same here? I still see the same condition `if mapset != ""PERMANENT"":` in the code.', 'comment_created': datetime.datetime(2020, 7, 22, 1, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458797390, 'comment_body': 'This condition is not needed here because when a location is not None, a user mapset is also always different from None. And I need to treat all mapsets the same way.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458797660, 'comment_body': 'Docstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 458806605, 'comment_body': 'Ok, so if I get it right we do not have any mechanism for mapset switching within the location wizard so far.  So it is meant for future realization. \r\nDocstring added.', 'comment_created': datetime.datetime(2020, 7, 22, 13, 50, 17, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 459191006, 'comment_body': 'Actually, if something, we would switch outside of this function, hence giving the mapset name as a hint to the caller of this function - a hint about what user may want to do next. There is no difference for the caller between PERMANENT and any other mapset; as I said, _this function reports back...the mapset the user may want to switch...This mapset can be PERMANENT or anything else._ When user does not ask for anything else, only PERMANENT is created, so the function returns PERMANENT by default as mapset, but if user asks for creation of another mapset, the function returns name of this other mapset. In other words, _the function can create only PERMANENT or it can create...other mapset_.\r\n\r\nTo back up little further, the function is creating a new location, so returning its name (and path) is sufficient behavior. However, we are also adding mapset as additional information since other mapsets besides PERMANENT could be created based on user input as part of the location creation process.\r\n\r\nHere, we are trying to create general interface in between two parts of the code which won\'t change when we do small changes in the code or behavior here or there. Thus, it is important to define what return values are in general way. Database and location are something the caller will likely need to use since a new location was just created, but mapset is something which the caller is less likely to use. The function is saying ""Hey, FYI, this might a mapset the user is interested in the most.""', 'comment_created': datetime.datetime(2020, 7, 23, 3, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4134ca7531990feeed81318bdcde3a56bb8240dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62719b3df399f34fe51e67ae6e1cd6e22f5e1bf4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dc852638f2c2aaa58b81170ffd36e1c4f99f4ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '097ceac223513a2fcde1eca01aca2ef3c9f32116', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd4e91ff9c282d9052f891db80630490f1de8e5f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a3afb6fc67020b152dbf5dda17024bc87e4239af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '48bf6282a097e55d1a771844afd04d6be4600a9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ea2d7028e2b8635d7cbeb691870b4b674f20ee1d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35989b081858d380c3ded3716e85a3746c7b30e7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '79c0a3148af5ceef2af5c554599c099f9e5d30e6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '864fbe2bcb570e8eb2a8f5b3c2cc8279aa7de658', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4b59601bbaa762d746c64a8fc7873dc56de9550', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448878125,wxGUI: Do not reload the tree after canceled Delete in data catalog,wxGUI/datacatalog: Reloading and updating is made only if Delete operation is not cancelled.,True,789,https://api.github.com/repos/OSGeo/grass/pulls/789,https://github.com/OSGeo/grass/pull/789,closed,34,25,3,6,0,6,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-14 13:23:39+00:00,2020-07-22 02:21:22+00:00,651463.0,"7 days, 12:57:43","[{'comment_id': 454421731, 'comment_body': 'you need to destroy dlg before returning', 'comment_created': datetime.datetime(2020, 7, 14, 14, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 454422842, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 7, 14, 15, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 456174832, 'comment_body': 'This now gets executed only after Yes/OK, not after cancel. The implicit return returns `None` which  evaluates to `False` in the if-statement, so that\'s why it happens to work. The indentation is puts the lines into the if-statement, not the top level. If you place `print(""XXX"")` you can see that. Same for the other function.\r\n\r\nAdditionally, there is another return above in this function which returns `None`, so that\'s inconsistent. It needs to return `False`.', 'comment_created': datetime.datetime(2020, 7, 17, 1, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 456733591, 'comment_body': 'And what about the `dlg.Destroy()`? That still gets executed only when `dlg.ShowModal() == wx.ID_YES` but not when *Cancel* is pressed. See the reasoning and context in the previous reviews ([July 14](https://github.com/OSGeo/grass/pull/789#discussion_r454421731) and [July 16](https://github.com/OSGeo/grass/pull/789#discussion_r456174832)).\r\n\r\nThere is still the issue with the other return statement in this function I mentioned before:\r\n\r\n> Additionally, there is another return above in this function which returns `None`, so that\'s inconsistent. It needs to return `False`.\r\n\r\nIt is the if-statement `if mapset == ""PERMANENT"":`, line with `return` only.', 'comment_created': datetime.datetime(2020, 7, 18, 1, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 457788699, 'comment_body': 'The result of `dlg.GetValue()` still gets returned even when `rename_mapset()` fails. You need to do `newmapset = None` in the `except` clause to signal that the mapset was renamed, i.e., there is no new name to report (assuming that the caught exception here means no renaming happened).\r\n\r\nThe same issue(s) as here in `rename_mapset_interactively()` seems to be present in `rename_location_interactively()`.', 'comment_created': datetime.datetime(2020, 7, 21, 1, 51, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 458249231, 'comment_body': 'I added newmapset = None into except clause in rename_mapset_interactively and newlocation = None into except clause in rename_location_interactively.', 'comment_created': datetime.datetime(2020, 7, 21, 16, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '35498b13e66d25117d5b8e7767f8deb49d6ec285', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6ac0f59fdb793614d13db0e447237e60ed33220d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ac85a314b373913c053267587192edefecfc79fa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6a4a16b34c6f128d22765d0b361b7cbf1b81f81c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dea073f355a7c5a7d25ee417bcd2257f5bb75c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b67952aef2d0bc2e7461c0f6e101a5e14d537d46', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
448366554,wxGUI/Data catalog: distinguish label and name of nodes,wxGUI/datacatalog: node.label changed to node.data['name'] in tree.py.,True,783,https://api.github.com/repos/OSGeo/grass/pulls/783,https://github.com/OSGeo/grass/pull/783,closed,97,96,1,5,7,2,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-13 16:36:36+00:00,2020-07-17 03:50:13+00:00,299617.0,"3 days, 11:13:37","[{'comment_id': 455058565, 'comment_body': 'Which exception are you trying to catch here? Raised in _getNewMapName or Rename? ', 'comment_created': datetime.datetime(2020, 7, 15, 13, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 455889931, 'comment_body': 'Remove it or explain why it needs to be there.', 'comment_created': datetime.datetime(2020, 7, 16, 15, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '23012a1663df8a7704c785936e0c5102beede6eb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '35315c0172d6e530c6236e5a4efa3efdca93d1b5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a344530acc23e1f090eef4d2d35de162baed2bba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6d83eecadd5f3f619728781f385b8ff676b4d486', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '056d16523e5758d63732ed5d16e0cd2667099994', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
444862259,Add rename and delete of Location and Mapset in Datacatalog,,True,771,https://api.github.com/repos/OSGeo/grass/pulls/771,https://github.com/OSGeo/grass/pull/771,closed,466,252,4,13,3,22,1,0,[{'name': 'gsoc'}],2020-07-06 15:54:11+00:00,2020-07-14 03:22:48+00:00,646117.0,"7 days, 11:28:37","[{'comment_id': 450493183, 'comment_body': 'Use already imported gscript', 'comment_created': datetime.datetime(2020, 7, 6, 21, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 450546405, 'comment_body': 'Does this work for you? When I enter any name, I always get `Location <definitevely-not-an-existing-directory> already exists in GRASS database`.', 'comment_created': datetime.datetime(2020, 7, 7, 0, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 450556671, 'comment_body': ""I'm afraid this is too much duplication with gis_set.py. Almost all lines of the function are the same as in gis_set.py. The simplest way to resolve that is creating `rename_mapset_interactively` function in startup.gutils. It should return the new name on success and `None` on failure. There will be some parameters related to the data such as the mapset to rename and some related to GUI such as parent (for the dialogs). The function will be then called here and in gis_set.py and surrounded by some things specific to each such as the ReloadTreeItems() call.\r\n\r\nThe same applies to the other functions as well.\r\n\r\n@landam @petrasovaa feel free to disagree here."", 'comment_created': datetime.datetime(2020, 7, 7, 1, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452582681, 'comment_body': 'The function is a good fit here. It is totally non-gui and fits with the other functions in this file.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452583010, 'comment_body': 'An empty line (without whitespace) is actually desired here. It separates a ""brief"" from a longer description of the function.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452583072, 'comment_body': 'Same as above.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452586519, 'comment_body': ""I don't know how mapset_exists() got here but both mapset_exists() and location_exists() should be in utils.py."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452588212, 'comment_body': 'Can you please take these new functions, paste them to a separate file, apply Black, and paste them back here? Perhaps check with Flake8 with default settings while you are at it. I see issues here and there, but this will likely just solve them automatically. ', 'comment_created': datetime.datetime(2020, 7, 10, 2, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452590711, 'comment_body': 'Why switch always? I though we talked about renaming not being trigger for switching. Switching is only needed when current mapset or current location are being renamed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452595425, 'comment_body': 'I would need you to document your intentions here in the code to understand what this is supposed to solve. Documentation and comments describing the intent are often useful even when writing the code as they force us to think about the code is supposed to do. For example, for a line `add_to_list(abc)` we should aim at answering questions such as: Why we are adding to the list? What is the intended outcome? What are the possible outcomes? What are the assumptions about `abc` or other things before `add_to_list()` is called?\r\n\r\nHow is this function different from `OnSwitchLocationMapset()`? Can there be only one function? Or two functions and one calling the other?', 'comment_created': datetime.datetime(2020, 7, 10, 2, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452596228, 'comment_body': 'Why to change the name?', 'comment_created': datetime.datetime(2020, 7, 10, 2, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452596895, 'comment_body': 'If you move this to where the old function was in the file, you will get a better view of your changes in the diff. (A more substantial change would be needed to create some better ordering of the functions here, so just keeping what is here seems to be the best course of action.)', 'comment_created': datetime.datetime(2020, 7, 10, 3, 1, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452845918, 'comment_body': 'gisbase vs gisdbase see https://grass.osgeo.org/grass78/manuals/variables.html', 'comment_created': datetime.datetime(2020, 7, 10, 13, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452902456, 'comment_body': 'This looks like a good start. Now you can maybe make use of the option of calling `_SwitchLocationMapset()` with different parameters based on the the context. However, still:\r\n\r\n> I would need you to document your intentions here in the code to understand what this is supposed to solve. Documentation and comments describing the intent are often useful even when writing the code as they force us to think about the code is supposed to do. For example, for a line `add_to_list(abc)` we should aim at answering questions such as: Why we are adding to the list? What is the intended outcome? What are the possible outcomes? What are the assumptions about `abc` or other things before `add_to_list()` is called?', 'comment_created': datetime.datetime(2020, 7, 10, 15, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 452923840, 'comment_body': 'Vashek, ok, I have a function OnRenameMapset that calls function rename_mapset_interactively and returns new mapset name. I think this is implemented right. \r\nBut in the case of ""if (self.selected_mapset[0].label == gisenv()[\'MAPSET\'])"" I need to switch my old mapset to the new one because my current mapset has been actually changed by renaming. But not literally so I need to self.selected_mapset[0].label = newmapset and then call the self._SwitchLocationMapset() function which can be generally the same for both functions OnRenameMapset, OnRenameLocation.\r\nWhere is the mistake in my thinking?\r\n', 'comment_created': datetime.datetime(2020, 7, 10, 15, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 453150525, 'comment_body': '...and _SwitchLocationMapset() uses the currently selected location/mapset to switch to. That all makes sense and should work. So, we have to continue to explore the actual behavior:\r\n\r\nWhen I test renaming the current mapset in GUI, it freezes, but first it shows an error message ""Error in g.mapset"" saying that the mapset ""old_name"" does not exist. So, it seems g.mapset is used for the switch and it requires the old mapset to exist.\r\n\r\nWhen I create the same situation in the command line and use g.mapset, I get the same behavior. Also I confirmed that g.mapset is used in ChangeLocationMapset() in datacatalog/frame.py to switch the mapset.\r\n\r\nThe conclusion here is that mapset cannot be changed when the current does not exist, or in our case, we cannot switch into the one with the new name after we renamed it as long as we are using g.mapset. g.mapset checks correctness of the state of the database connection, i.e., the current mapset, but we are of course breaking that correctness by our rename, so g.mapset is not the right tool for the task.\r\n\r\nTherefore, for this ticket, use the same check to prevent user from renaming the current location or mapset. This is something which could be added in the future, but it is a separate issue/additional feature.\r\n\r\nThe freeze with ""Error in g.mapset"" window is possibly a separate issue too, but something we should get back to (at least open an issue - please do that if you can reproduce it outside of your PR, e.g., by deleting a the mapset directory in a file manager right before you switch to it in the data catalog).', 'comment_created': datetime.datetime(2020, 7, 11, 3, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453257992, 'comment_body': 'When you return here, it never goes to `dlg.Destroy()` (which may leave some stuff behind).', 'comment_created': datetime.datetime(2020, 7, 12, 2, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258058, 'comment_body': 'Same as for mapset.', 'comment_created': datetime.datetime(2020, 7, 12, 2, 35, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258159, 'comment_body': 'What happens when you press the *Cancel* button in the *Create new mapset* dialog?', 'comment_created': datetime.datetime(2020, 7, 12, 2, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258249, 'comment_body': '""consider using""', 'comment_created': datetime.datetime(2020, 7, 12, 2, 39, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453258465, 'comment_body': 'Is CreateMapset() defined?', 'comment_created': datetime.datetime(2020, 7, 12, 2, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 453259084, 'comment_body': 'Since this is an event handler (`On...(self, event):` used as `...Bind(wx.EVT_..., self...`), nobody is checking any return value. That would make sense for function which is directly called and then you would have to consider if returning True/False or some other way is the best way to report success/failure (examples of this are `rename_location_interactively()` and `rename_location()`).\r\n\r\nThe code is wrong anyway because it is returning false on failure, but nothing on success (defaults to None in Python, but bad practice not being explicit reason being exactly this situation).\r\n\r\nJust remove the `return False/True`. This applies to the other event handlers (typically `On...(self, event):`)', 'comment_created': datetime.datetime(2020, 7, 12, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '4ce08218319636c910f2d001b37ef1576e7bd668', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b73f8e911c718e9ec9971b9fffb44763608d5fad', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b6f7dc2da5ea0f60486c5d398cd39eb168c85e75', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b7225a7acbc106d7fb1aa1d7e9f7a08317cdd63f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd81467a0d97793f2c1c47e79dd47072a6acd1fd8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c1f930eb16c9fc797704008d51597c0a653af6c4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9415c5e61405c31f0789ef9abaa37a65fd6db6a6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '72989fa8eee0703da8b9ae69ea09614c705a0443', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ab3cbd9d992edc9f59f489392b70e2fd222acd49', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e9937e48f902b7a8eca60b3c412ffb5c7a543a4', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d942f7b5325e97a719bc9e96089d10cf0d07111', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b43ab33c9241b60d86e388b10a7ba55f58fe39b', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '611d13337203103abfc6af4e04e5b084a65467b5', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
443536293,wxGUI datacatalog: Add multiple GRASS databases,"Currently, only the current database is in the GUI datacatalog. To make this more useful, user needs to be able to add additional ones.


",True,761,https://api.github.com/repos/OSGeo/grass/pulls/761,https://github.com/OSGeo/grass/pull/761,closed,281,152,6,11,8,23,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-02 13:59:15+00:00,2020-07-13 03:05:54+00:00,911199.0,"10 days, 13:06:39","[{'comment_id': 449337462, 'comment_body': 'This part needs to be fixed, it would highlight all grassdbs', 'comment_created': datetime.datetime(2020, 7, 3, 1, 47, 53, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340454, 'comment_body': 'Instead create empty menu, it should not throw error.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449340607, 'comment_body': 'not needed', 'comment_created': datetime.datetime(2020, 7, 3, 2, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449341085, 'comment_body': 'This should call something like OnAddGrassDB which opens a standard file dialog to select a directory and then inserts the new node and reloads data.', 'comment_created': datetime.datetime(2020, 7, 3, 2, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449727456, 'comment_body': 'Remove, this should be a toolbar button, not a standard button.', 'comment_created': datetime.datetime(2020, 7, 4, 1, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449904394, 'comment_body': ""Don't remove this file from the repository."", 'comment_created': datetime.datetime(2020, 7, 5, 18, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906386, 'comment_body': 'Why sort here?', 'comment_created': datetime.datetime(2020, 7, 5, 18, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449906528, 'comment_body': 'use self.current_grassdb_node', 'comment_created': datetime.datetime(2020, 7, 5, 18, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449947926, 'comment_body': 'Changing to location in the same or in a different db is the same, so changeGrassDb is not needed, just use changeLocation but add the grassdb parameter.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449948870, 'comment_body': 'As I tried to explain, this should still add the node because in the future you would add a function to reload just the db here. Also add the db here to _grassdatabases. Call ReloadTreeItems from the OnAddDB handler.', 'comment_created': datetime.datetime(2020, 7, 6, 1, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 449949552, 'comment_body': 'uppercase GRASS', 'comment_created': datetime.datetime(2020, 7, 6, 1, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452577939, 'comment_body': ""Switching to mapset in a new db doesn't work."", 'comment_created': datetime.datetime(2020, 7, 10, 1, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452579466, 'comment_body': 'self.copy_grassdb[i].label', 'comment_created': datetime.datetime(2020, 7, 10, 1, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452583573, 'comment_body': ""The point of the condition here is to test if you are copying/moving map in a different location, in that case you need to reproject. If it's within the same location you don't need to reproject. If the location is in a different database, that doesn't make difference, you still need to reproject. So just remove that test you added."", 'comment_created': datetime.datetime(2020, 7, 10, 2, 5, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452584195, 'comment_body': 'Here you need to distinguish between the database from where we reproject and to which database we reproject.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452585398, 'comment_body': 'and not self.selected_mapset[0] is redundant', 'comment_created': datetime.datetime(2020, 7, 10, 2, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452586528, 'comment_body': 'I think we in the end decided to put reloadtreeitems in insertgrassdb', 'comment_created': datetime.datetime(2020, 7, 10, 2, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452587167, 'comment_body': 'Move this at the end of _initTreeItems just before RefreshItems so that is is properly refreshed.', 'comment_created': datetime.datetime(2020, 7, 10, 2, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452953734, 'comment_body': 'How do you mean that? grassdb is not the parameter in changeLocation function, I need to add it but I do not know how. I sought in signal.py but I think you have meant it differently. ', 'comment_created': datetime.datetime(2020, 7, 10, 16, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 452973605, 'comment_body': ""Search for changeLocation.connect, that's how signal handlers are called."", 'comment_created': datetime.datetime(2020, 7, 10, 17, 21, 11, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 452974609, 'comment_body': 'I meant that only for the line starting `elif self.selected_grassdb[0]`', 'comment_created': datetime.datetime(2020, 7, 10, 17, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219376, 'comment_body': 'fix indentation', 'comment_created': datetime.datetime(2020, 7, 11, 18, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 453219762, 'comment_body': ""if dbase and location are passed, it's switching twice"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '6b148e2d92db6d5df589a8bdd2a393d42b3774fd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ef2832a08c7a4fd7485981956f2ca7069bc9dac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c3eee93e54aa1bc6e60ae8f2138c380ee3383c09', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f5e051c1ecd83271c70484c5e6dae614523dd484', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '223a72c6711e1b47c0e0da0ebb77a2ecc49a839e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b691684b4c6b8bc47a69195df9631fa088b11d39', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7edea0af2bbf141b3de9534e83fbb28224c0593a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97a2faa904a6ab0c35af1b90fda4d5ae6b69c9af', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '157cd434b3ba685a9e6ea1e4283098de6a26e358', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d08a46522289b108fa4c4e5e58d5f93fe5444bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db17e46686df51a86689e358ab21be32526c6e43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
442678497,wxGUI datacatalog: merge LocationMapTree and DataCatalogTree,Merged LocationMapTree and DataCatalogTree into new class DataCatalogTree inheriting from TreeView.,True,755,https://api.github.com/repos/OSGeo/grass/pulls/755,https://github.com/OSGeo/grass/pull/755,closed,34,53,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-07-01 12:51:13+00:00,2020-07-02 01:48:57+00:00,46664.0,12:57:44,[],"[{'commit_sha': 'c5796942809104ad50703d56a77805d11578cf96', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
440097311,wxGUI: IndexError after right click on 'GRASS Locations in...' in the Data tab,wxGUI/datacatalog: Corrected index error after right click on 'GRASS Locations in..' tab in the data tab.,True,736,https://api.github.com/repos/OSGeo/grass/pulls/736,https://github.com/OSGeo/grass/pull/736,closed,3,1,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-06-25 15:29:42+00:00,2020-06-26 01:39:37+00:00,36595.0,10:09:55,[],"[{'commit_sha': 'e1dfc8dd5124c25a7bf40a36646b15375dc3a126', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438788813,wxGUI: Add new mapset action to data catalog,"

",True,731,https://api.github.com/repos/OSGeo/grass/pulls/731,https://github.com/OSGeo/grass/pull/731,closed,179,77,5,9,1,41,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-06-23 20:00:35+00:00,2020-07-01 01:56:12+00:00,626137.0,"7 days, 5:55:37","[{'comment_id': 444617948, 'comment_body': 'We do not need the help handler here', 'comment_created': datetime.datetime(2020, 6, 24, 3, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618181, 'comment_body': 'This function would be basically just reduced to calling create_mapset.', 'comment_created': datetime.datetime(2020, 6, 24, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444618420, 'comment_body': 'Should be dealt with by the validator inside the dialog', 'comment_created': datetime.datetime(2020, 6, 24, 3, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619018, 'comment_body': ""there is no self.gisdbase, you can get it e.g. as `gisenv()['GISDBASE']`"", 'comment_created': datetime.datetime(2020, 6, 24, 3, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444619138, 'comment_body': 'delete, copied from startup screen. Instead you will need to add the mapset node into the tree, see e.g. InsertLayer() in tree.py how it is done for layers (it should be simpler for mapsets).', 'comment_created': datetime.datetime(2020, 6, 24, 3, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 444620936, 'comment_body': 'not used, it is actually causing error when right clicking on current location, just remove it', 'comment_created': datetime.datetime(2020, 6, 24, 3, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445590258, 'comment_body': 'This is not correct, please try to run the code line by line in your mind or on paper and see what the problem is.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445592197, 'comment_body': 'location_node is a of type class DictNode (treemodel.py), not string. Why to pass twice mapset?\r\nYou need to pass location node (probably self.selected_location[0] should work). Then most of the code in InsertMapset is to be removed.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 16, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622162, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445622391, 'comment_body': 'no SetSessionMapset needed', 'comment_created': datetime.datetime(2020, 6, 25, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445624092, 'comment_body': ""Don't use self if you don't need the variable outside of the method.\r\n\r\nThis creates mapset in your current location, not in the selected location."", 'comment_created': datetime.datetime(2020, 6, 25, 14, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628447, 'comment_body': ""It's a good practice to make the exception more specific if you can. For example, put it only around create_mapset and if  you can see what type of exception it throws, it's better to limit it too."", 'comment_created': datetime.datetime(2020, 6, 25, 15, 4, 35, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445628781, 'comment_body': 'remove', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445629371, 'comment_body': 'see comment about self above', 'comment_created': datetime.datetime(2020, 6, 25, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631393, 'comment_body': 'indentation', 'comment_created': datetime.datetime(2020, 6, 25, 15, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445631685, 'comment_body': 'remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632312, 'comment_body': 'if function is called checkMapsetExists, you expect to return True if it exists', 'comment_created': datetime.datetime(2020, 6, 25, 15, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445632745, 'comment_body': 'missing space after dot, remove \\n\\n', 'comment_created': datetime.datetime(2020, 6, 25, 15, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633216, 'comment_body': 'newline missing', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 445633557, 'comment_body': 'be more specific about the exception', 'comment_created': datetime.datetime(2020, 6, 25, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446495515, 'comment_body': 'Not sure how to simplify InsertMapset function. And not sure what parameter name means. I think it is necessary to include it but in this case it does not make much sense.', 'comment_created': datetime.datetime(2020, 6, 27, 7, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446495740, 'comment_body': 'Could you give me some example?', 'comment_created': datetime.datetime(2020, 6, 27, 7, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446561721, 'comment_body': ""This function doesn't need to return T/F, just return."", 'comment_created': datetime.datetime(2020, 6, 27, 19, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561798, 'comment_body': 'Seems this is never called since you return True before that.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446561843, 'comment_body': 'Just to keep it short, Create mapset is sufficient.', 'comment_created': datetime.datetime(2020, 6, 27, 19, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562136, 'comment_body': ""similar here, I don't think you need to return T/F here"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562183, 'comment_body': 'add the name in the comment at beginning of the file', 'comment_created': datetime.datetime(2020, 6, 27, 20, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562312, 'comment_body': 'check indentation here', 'comment_created': datetime.datetime(2020, 6, 27, 20, 4, 31, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446562655, 'comment_body': 'use UnicodeEncodeError', 'comment_created': datetime.datetime(2020, 6, 27, 20, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563315, 'comment_body': ""parent is parent node (here location node), label is mapset name and type is type of node ('mapset' here)"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446563362, 'comment_body': ""you don't need this"", 'comment_created': datetime.datetime(2020, 6, 27, 20, 16, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564563, 'comment_body': ""For type of error, either just simply try it in a python shell if that's simple, or check Python documentation. You can use OSError here.\r\nPlease also read e.g. https://realpython.com/python-exceptions/ and https://realpython.com/the-most-diabolical-python-antipattern/ (ignore the logging part), that should clarify the syntax and motivation."", 'comment_created': datetime.datetime(2020, 6, 27, 20, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446564874, 'comment_body': 'not sure why the selected_type, I think it should be selected_mapset instead, but I am not sure, please test that.', 'comment_created': datetime.datetime(2020, 6, 27, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446609514, 'comment_body': 'I have a problem with parameters ""name"" and ""mapset_name"":\r\n            self.InsertMapset(name=mapset,\r\n                              location_node=self.selected_location[0],\r\n                              mapset_name=mapset)\r\nI know that it is not possible to have two same parameters but do not know what else to insert for \'name\' . \r\nNow I am in this situation. I can create and refresh mapset but the tree has another branch:\r\n![Screenshot from 2020-06-28 01-46-27](https://user-images.githubusercontent.com/49241681/85940380-967abd00-b8e1-11ea-8692-df5a19f68819.png)\r\nI spent several hours on that and do not know how to solve it. I is probably simple but I cannot figure that out. ', 'comment_created': datetime.datetime(2020, 6, 28, 6, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 446681351, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681398, 'comment_body': 'Please test and fix the message formatting.', 'comment_created': datetime.datetime(2020, 6, 28, 18, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681834, 'comment_body': 'I am not sure what\'s the problem here, it is pretty simple:\r\n\r\n```\r\n    def InsertMapset(self, name, location_node):\r\n        """"""Insert mapset into model and refresh tree""""""\r\n        self._model.AppendNode(parent=location_node, label=name,\r\n                               data=dict(type=\'mapset\', name=name))\r\n        self._model.SortChildren(location_node)\r\n        self.RefreshNode(location_node, recursive=True)\r\n```\r\n', 'comment_created': datetime.datetime(2020, 6, 28, 18, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446681972, 'comment_body': 'remove print statements', 'comment_created': datetime.datetime(2020, 6, 28, 18, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 446682065, 'comment_body': 'please add yourself here', 'comment_created': datetime.datetime(2020, 6, 28, 18, 23, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447676056, 'comment_body': 'This is obviously not right, please fix again. Use format function.\r\n![Existing mapset path_020](https://user-images.githubusercontent.com/7494312/86130899-e197fa00-bab2-11ea-80c1-afd4cbdf1df2.png)\r\n\r\nIt should look like `Mapset <anna> already exists...`', 'comment_created': datetime.datetime(2020, 6, 30, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 447871860, 'comment_body': 'minor: missing space after comma', 'comment_created': datetime.datetime(2020, 6, 30, 17, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'bf8685e929fad1561acde20bc7a86ccc355d3f16', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '37f2af25111531170375f9ba0edfd66f318651dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e47aa68425283557ce1d2687eb8d5629c18716b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '670fd0bf9927e70a026531c8d19549f31f34ab0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5057a270e6dfdb90b0221148b7620a050d720e43', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3d80f6cb42b05ec28ae867ea7c00ef1af97d1b3f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'feafc7378b2fe48cb674dbb0d0904aefced8edef', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3feca0ac90b0c04b5b28287e99fdc15933c3ce9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2e093c65c0af2b0a5e0847322ec5b4a6a5c4a68', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
438030371,wxGUI loc wizard: Correct errors according to flake 8 and add some description,"wxGUI/Location Wizard: Corrected errors according to flake8 (errors E402,E821,E722 ignored), added some description.",True,728,https://api.github.com/repos/OSGeo/grass/pulls/728,https://github.com/OSGeo/grass/pull/728,closed,80,85,1,3,0,1,1,0,[{'name': 'gsoc'}],2020-06-22 15:47:26+00:00,2020-06-25 02:48:44+00:00,212478.0,"2 days, 11:01:18","[{'comment_id': 443925318, 'comment_body': ""I don't see a reason why this code should be kept there and there is no comment saying that either, so I would say just delete that."", 'comment_created': datetime.datetime(2020, 6, 23, 2, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '56b04dd3eac50831ef5b9991761c5ab3f87f925a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0b6e17d9d7c67f0293401f85a4b430546fd3fdbc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '23dc09e6d3af4f7490abb23cc3637b965ff61643', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
437025601,wxGUI loc wizard: Improve new location's CRS method selection page,"In the third commit I have a issue after confirmation of WKT Summary page:
![Screenshot from 2020-06-20 15-10-54](https://user-images.githubusercontent.com/49241681/85210757-48295500-b308-11ea-9115-e89efc436424.png)
Still wants to open a WKT file but I am not able to figure out where is the core of this problem.",True,721,https://api.github.com/repos/OSGeo/grass/pulls/721,https://github.com/OSGeo/grass/pull/721,closed,55,83,1,5,1,11,1,0,[{'name': 'gsoc'}],2020-06-19 10:36:12+00:00,2020-06-23 02:32:50+00:00,316598.0,"3 days, 15:56:38","[{'comment_id': 442831461, 'comment_body': 'I was suggestion dropping ""simple methods"" altogether and using ""Select Coordinate Reference System (CRS)"" as the title of the page.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442833874, 'comment_body': 'Use ""Additional methods"", definitely not Advanced additional methods.', 'comment_created': datetime.datetime(2020, 6, 19, 13, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838254, 'comment_body': 'name it something like wktstring', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442838351, 'comment_body': 'WHITESPACE!', 'comment_created': datetime.datetime(2020, 6, 19, 13, 24, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442840103, 'comment_body': 'To keep things consistent with the rest, the WKTPage doesn\'t change much (except for the layout). g.proj is called in Summary page:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=self.parent.wktpage.wktfile, **extra_opts)\r\n```\r\n\r\nso you need to adjust the code here. So OnPageChanging should stay similar to what was there before. The RunCommand in Summary page should look something like this:\r\n\r\n```\r\n            elif coordsys == \'wkt\':\r\n                ret, projlabel, err = RunCommand(\r\n                    \'g.proj\', flags=\'jft\', wkt=""-"", stdin=self.parent.wktpage.wktstring, **extra_opts)\r\n```\r\n(not tested)', 'comment_created': datetime.datetime(2020, 6, 19, 13, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443149825, 'comment_body': 'Maybe ""matches WKT string"" would be better.\r\nMore importantly, the string is long, so you need to change the widget to enable scrolling, it should be similar to panelProj4string in SummaryPage.', 'comment_created': datetime.datetime(2020, 6, 20, 18, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176094, 'comment_body': ""This should still be called OnText, since it's event handler. If you name a function GetWKTString, I would expect it to return a string, which is not the case here."", 'comment_created': datetime.datetime(2020, 6, 21, 2, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176259, 'comment_body': '""Select CRS from a list"" should be the title of the EPSGPage as well.', 'comment_created': datetime.datetime(2020, 6, 21, 2, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176884, 'comment_body': ""There needs to be a condition, you are trying to prevent from going to next page if there is no text (previously - if the file doesn't exist). Ideally it would check the WKT string is valid, but that's very difficult, so we will just check for any string. It's technically not needed because you already deal with that by disabling the next button, but let's keep it there.\r\n\r\n I was surprised your current code works since you don't have any condition there (so it would prevent the page from switching every time), but that's because of the event.Skip() - you need to remove it from there. Please also remove event Skip from GeoreferencedFilePage (the same function), it's the same case, it shouldn't be there."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443176975, 'comment_body': ""The error you are getting comes from this function, it expects file not string. I created a separate PR #723, so you don't need to deal with that."", 'comment_created': datetime.datetime(2020, 6, 21, 3, 9, 49, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443245131, 'comment_body': 'simply just `if event.GetDirection() and not self.wktstring.strip():` should suffice.', 'comment_created': datetime.datetime(2020, 6, 21, 18, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'ee7ad16e86be3cd805b9be4527ab552c18abddba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36b93e39b6fcab71cb6433f894894d5cfa23abe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '55173897914c5312c35a4a2d3ce5929cfa758910', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1f1110496ef80cbd868cb3b08440784a3b74425f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cc46ff3a803ad0f7a2eccb3843f926e8d848a1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422453525,wxGUI location wizard: EPSG page,"Path to usr/share/proj/epsg was removed. Search and EPSG code text inputs were merged into one search input. Link to epsg.io was added. The layout was adapted using several box sizers instead of grid sizer.

Before: 
![Screenshot from 2020-05-24 13-46-49](https://user-images.githubusercontent.com/49241681/82762159-0ff42c80-9dc5-11ea-8130-4bd7097a51f0.png)

Version 1:
![Screenshot from 2020-06-05 07-26-31](https://user-images.githubusercontent.com/49241681/83877497-ee872f00-a73a-11ea-9386-ce5ca8640255.png)

The motion of events is following (unincorporated yet in Version 1):
- searching in a list on the fly
- choose automatically the first row and permit ""next"" button
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

Version 2:
![Screenshot from 2020-06-06 05-24-32](https://user-images.githubusercontent.com/49241681/83942387-39647d80-a7f3-11ea-8dc0-33b0da88051f.png)

Already incorporated:
- searching in a list on the fly
- if epsg code is empty, nothing is selected and ""next"" button is not active
- change informative URL according to a query string

I have a problem that when selecting epsg code from a table, it sometimes happens that neither the query string nor the final epsg code mentioned in the summary page changes. Also I am not sure how to incorporate choosing the automatically the first row in the list.

Version 3 (Layout enhancement):
![Screenshot from 2020-06-07 05-10-50](https://user-images.githubusercontent.com/49241681/83966145-bf96c780-a8b8-11ea-9bcf-a6fb1e448bf9.png)


",True,670,https://api.github.com/repos/OSGeo/grass/pulls/670,https://github.com/OSGeo/grass/pull/670,closed,150,126,1,6,4,9,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-24 18:47:46+00:00,2020-06-13 02:35:08+00:00,1669642.0,"19 days, 7:47:22","[{'comment_id': 436317921, 'comment_body': 'this should be size=(-1, 30)', 'comment_created': datetime.datetime(2020, 6, 7, 2, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436317947, 'comment_body': 'remove whitespace', 'comment_created': datetime.datetime(2020, 6, 7, 2, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318061, 'comment_body': 'the label should stay the same all the time, use just ""epsg.io"".', 'comment_created': datetime.datetime(2020, 6, 7, 2, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318094, 'comment_body': 'Initial url should be ""https://epsg.io/""', 'comment_created': datetime.datetime(2020, 6, 7, 2, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318128, 'comment_body': 'no new line needed', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318178, 'comment_body': 'remove SetLabel, we want the label to be the same all the time, just the link changes', 'comment_created': datetime.datetime(2020, 6, 7, 2, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 436318236, 'comment_body': 'no str() needed\r\n\r\nalso, check if there is anything in the value, if not, the link should just be https://epsg.io, no query part', 'comment_created': datetime.datetime(2020, 6, 7, 2, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 439612750, 'comment_body': 'What about ```https://epsg.io/{0}``` directly ?', 'comment_created': datetime.datetime(2020, 6, 12, 19, 48, 36, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439614110, 'comment_body': 'Hm, this will work for EPSG (like ""5514"") but for a keyword (like ""krovak""). Marking this comment as not relevant.', 'comment_created': datetime.datetime(2020, 6, 12, 19, 51, 59, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': 'ed10bc86a313408c3356b719bdd2f5ebaf4b81e2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7686375d5b2cffb8e2010654cbc29a8d8041d993', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f7fd081088b6289faf6a7b5ef4c2693eac27f4d3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f66f986a0150ea336f5830d279509872ba7552f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b08db139d172d59f9e54493133fe8003a6ef7d5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a473825f635446a8c9e302ef861cd093a88d9676', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
421002122,Wx gui location wizard map picture removed,"Before:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82493953-710ebe00-9aae-11ea-8528-97f9d500d05f.png)

After:
![Screenshot from 2020-05-20 15-29-13](https://user-images.githubusercontent.com/49241681/82494047-97345e00-9aae-11ea-8130-4af38f689494.png)

The file and matches have been finding using: _tree -f | grep loc_wizard_qgis.png_  and _grep -IrnE loc_wizard_qgis.png_ . No other matches.

",True,657,https://api.github.com/repos/OSGeo/grass/pulls/657,https://github.com/OSGeo/grass/pull/657,closed,4,12,2,2,3,0,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-20 20:28:05+00:00,2020-05-30 01:37:04+00:00,796139.0,"9 days, 5:08:59",[],"[{'commit_sha': 'd4221be6871a442619c47a0b9e2961f7870151f2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '079246403e69b2a92ecfb1dc6c8a2d62e0d05948', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
419661176,wxGUI location wizard: First page,"Location wizard location name marked as required and the Project Location renamed to Location Name.

> @lindakladivova Please provide screenshots before and after. It's self-explanatory description :-)

Sorry I do not have before. I have the one after :-) :
![Screenshot from 2020-05-18 15-28-09](https://user-images.githubusercontent.com/49241681/82257184-388baa80-991d-11ea-8fc2-20fdf30dd7bd.png)




> I would say the asterisk should go right after the label. Since there is GridBagSizer used, you may need to shift the edit fields one column to the right to get the asterisk there so that everything is aligned. Alternatively, the edit fields could be moved below the label like we have in forms.

Here's the screenshot of the second version:
![Screenshot from 2020-05-19 10-06-21](https://user-images.githubusercontent.com/49241681/82344664-f2d0ef80-99b9-11ea-81d8-bef65cfba872.png)

Here's the screenshot of the third version:
(The layout was a bit changed and also the Description was marked as optional. GIS data directory is still non-editable but made through wx.TE_READONLY method.)
![Screenshot from 2020-05-19 15-04-43](https://user-images.githubusercontent.com/49241681/82373246-edd46600-99e2-11ea-8b23-3b165ee8f4de.png)

Here's the screenshot of the fourth version:
![Screenshot from 2020-05-20 11-08-53](https://user-images.githubusercontent.com/49241681/82470901-8f16f700-9a8b-11ea-8f33-45be60470ca6.png)
I more like the TextCtrl than StaticText for Location Database. I find it more logical because the window is editable. What do you think?

The fifth version with StaticText:
![Screenshot from 2020-05-20 12-09-40](https://user-images.githubusercontent.com/49241681/82476212-4e22e080-9a93-11ea-8662-c4f79d700415.png)


",True,646,https://api.github.com/repos/OSGeo/grass/pulls/646,https://github.com/OSGeo/grass/pull/646,closed,56,54,1,11,6,6,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-18 18:12:40+00:00,2020-05-23 01:31:19+00:00,371919.0,"4 days, 7:18:39","[{'comment_id': 426991319, 'comment_body': ""I don't think the required_txt needs to be attribute of the class (remove self)."", 'comment_created': datetime.datetime(2020, 5, 19, 2, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427716943, 'comment_body': ""As I mentioned, don't use self here if it's used only locally within the scope of the method, if you make it an attribute of the class it looks like it's being used elsewhere too, which is confusing."", 'comment_created': datetime.datetime(2020, 5, 20, 3, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427717110, 'comment_body': 'Make it translatable: _(""optional"")', 'comment_created': datetime.datetime(2020, 5, 20, 3, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427718770, 'comment_body': ""I would recommend here using system colors instead of 'gray': `wx.SystemSettings.GetColour(wx.SYS_COLOUR_GRAYTEXT)` because people have different window styles."", 'comment_created': datetime.datetime(2020, 5, 20, 3, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 427719883, 'comment_body': 'If you look at the code checks, the flake8 code quality check is failing on your PR because of spaces around =. It should be:\r\n`..., style=wx.TE_READONLY | wx.TRANSPARENT_WINDOW`\r\n\r\nsee [PEP8](https://www.python.org/dev/peps/pep-0008/) for reference.\r\n', 'comment_created': datetime.datetime(2020, 5, 20, 3, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 428231974, 'comment_body': 'Just removing the widgets is not enough, there are probably used somewhere.', 'comment_created': datetime.datetime(2020, 5, 20, 18, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '9394fd700c5cda4d3aa4b7cafdde558f7d6081bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd2f5614c100d5b3e6498aed5d4211f9cd12e49a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ae02d7b57df87a72814e1f216ea04a7584cf6211', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2bec1fb13780cbb7fea5e530d68e6d22667ccea5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0118b6cc0a0a1d4dab6b508d9880a9b3344873a9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c9d1d2c34952c66184b803cc0b7ddabf4f6e988c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a76f17b1d1d1017d19c71f12fd26cd8f125d1281', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c1e86fc1c271c84cf5debb7830097d17c21aae69', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5cad7605d97922f4fad69adf6c807f279cd05a8f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a548b14a2fe5b960c0f7a3dd87740c012e3c86f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8b3851be6697a2f6fbe1fdc4e8136c9c166cbe97', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
400382150,Update Location Wizard: First page,"Location wizard: making new class MakeStaticText which is used for creating non-editable database directory, and removing Browse button",True,493,https://api.github.com/repos/OSGeo/grass/pulls/493,https://github.com/OSGeo/grass/pull/493,closed,12,22,1,3,0,4,3,0,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-04-07 16:42:30+00:00,2020-04-09 15:51:32+00:00,169742.0,"1 day, 23:09:02","[{'comment_id': 404978311, 'comment_body': ""size should be probably -1, -1.\r\n\r\nThis entire function is not really needed, but to keep this consistent with the other code, let's keep it now. Probably should be simplified in the future."", 'comment_created': datetime.datetime(2020, 4, 7, 17, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 404978838, 'comment_body': 'Bla?', 'comment_created': datetime.datetime(2020, 4, 7, 17, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 404979331, 'comment_body': 'Probably would be good to remove OnBrowse function as well.', 'comment_created': datetime.datetime(2020, 4, 7, 17, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 405148303, 'comment_body': 'Seems to be a typo. @lindakladivova If so please remove (in a new commit)', 'comment_created': datetime.datetime(2020, 4, 7, 22, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}]","[{'commit_sha': '85ce4ce2661082b8e8b773def06b014537775b1b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a08113a9e23d4ad233c1a9569ba41d478a964ea7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '44dcd1990a00def0c1783de8cadbc9f69565bed0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
460894257,Start in a demo/startup location,"After creating this directory, follow with another function to create a simple location with some data.

The location demolocation in distribution (GISBASE) can be used for that. If it does not exist and thus cannot be copied, the startup should continue as usual.

I think the name should be startup or startup_location. It is more descriptive than demolocation but still clearly conveying it is not meant for normal use.

The startup mechanism for the first-time user should make use the mapset concept because it will both ensure preserving the data in PERMANENT intact and, at the same time, it will show how to use the mapset concept at least in the relation to the PERMANENT mapset.

When the startup/demo location is created/copied, a new mapset should be created there and used for starting, not the PERMANENT.

It will be only one mapset, but eventually there will be more than one, so probably some name_1, name_2, ... will be needed. ",True,868,https://api.github.com/repos/OSGeo/grass/pulls/868,https://github.com/OSGeo/grass/pull/868,closed,84,4,2,12,3,37,2,1,"[{'name': 'enhancement'}, {'name': 'gsoc'}]",2020-08-01 08:03:36+00:00,2020-08-20 04:13:31+00:00,1627795.0,"18 days, 20:09:55","[{'comment_id': 464448537, 'comment_body': '```\r\n    home = os.path.expanduser(""~"")\r\n    demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n```\r\nDo I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n\r\nMore generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464465069, 'comment_body': '```suggestion\r\n    home = os.path.expanduser(""~"")\r\n    src = os.path.join(home, ""grass"", ""demolocation"")\r\n    dst = os.path.join(grassdatabase, ""demolocation"")\r\n\r\n        # Copy source demolocation into GRASS database\r\n    try:\r\n        copytree(src, dst, ignore=ignore_patterns(\'*.tmpl\',\'Makefile*\'))\r\n```\r\n\r\nOtherwise, copytree() gives an error message since the dst directory (grassdatabase) already exists.', 'comment_created': datetime.datetime(2020, 8, 3, 14, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464849367, 'comment_body': '> \r\n> \r\n> > I have a problem with testing that. Not able to get into the initial state.\r\n> > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\r\n> > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\r\n> \r\n> For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\r\n\r\nYes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464852552, 'comment_body': '> \r\n> \r\n> ```\r\n>     home = os.path.expanduser(""~"")\r\n>     demolocation = os.path.join(home, ""grass"", ""demolocation""),\r\n> ```\r\n> \r\n> Do I understand correctly that this is only for testing purposes ? Otherwise, a normal user will not have a $HOME/grass/demolocation directory.\r\n> \r\n> More generally, I think we have to check on how to address this. As discussed during our last meeting, some distributions (e.g. Debian & derivatives) do not provide this demolocation when the user installs GRASS GIS. I sent a [mail on the grass-dev mailing list](https://lists.osgeo.org/pipermail/grass-dev/2020-August/094522.html) to get some feedback from packagers on the question on how to deal with data to be installed.\r\n\r\nI am not sure where in user\'s directory the demolocation will eventually exist. You have mentioned the directory usr/lib/grassXY/demolocation but I do not have any ""grassXY"" directory. I have only ""grass"". I looked at environmental variables, there is a variable GISBASE in my case /home/linwe/grass/dist.x86_64-pc-linux-gnu. Is it the variable I should use?\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 4, 7, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 464919073, 'comment_body': 'Yes, it would be GISBASE. In grassXY X represents the major and Y the minor version as in many distributions GRASS GIS is installed at e.g. /usr/lib/grass78.\n\nBut getting the GISBASE content should be enough, I think.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464920659, 'comment_body': 'Might this be the reason you get stuck ? Try moving the entire .grass7 folder, or at least the rc file in it. If that still is present and contains the info on the last used location, then LOCATION_NAME will not be UNKNOWN.', 'comment_created': datetime.datetime(2020, 8, 4, 9, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464921669, 'comment_body': '> > \n> > \n> > > I have a problem with testing that. Not able to get into the initial state.\n> > > While starting GRASS it displays _""No GRASS location found in .. Create new location or choose different GRASS GIS directory.""_\n> > > The reason is that the processing in the function SuggestDatabase ends up on the row 513 and does not dive deeper to the function body. Therefore, it does not get a possible database path or does not create new grass database.\n> > \n> > For me this was not the reason, but an incorrect usage of copytree(). See my comments in the code. With the suggested change, it seems to work for me.\n> \n> Yes. I know, but I cannot check the copying since I cannot get to that state when copying should be performed. I have changed it according to your suggestion but my process still ends up on row 513 in the function SuggestDatabase so I cannot test it... \n> \n\nSee my comment in the code: could it be be that LOCATION_NAME is not unknown in your case so it returns before ?', 'comment_created': datetime.datetime(2020, 8, 4, 9, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 464998052, 'comment_body': 'Corrected.', 'comment_created': datetime.datetime(2020, 8, 4, 11, 59, 32, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465002299, 'comment_body': 'I think it is not the right one. I found on my computer  ""computer/usr/lib/grass78"" directory. and GISBASE is /home/linwe/grass/dist.x86_64-pc-linux-gnu for me. And also demolocation was added into Debian installation but not Windows one. Am I right? ', 'comment_created': datetime.datetime(2020, 8, 4, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 465039353, 'comment_body': '```suggestion\r\n    startup_location = os.path.join(gisbase, ""demolocation"")\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 13, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mlennert', 'type': 'User'}, {'comment_id': 465115768, 'comment_body': 'Yes! Good point. I had to remove rc file and suddenly it works as never. :-)', 'comment_created': datetime.datetime(2020, 8, 4, 14, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467500774, 'comment_body': ""Since we may have a function which which tries to find existing user's copy/version/instance of the startup/demo location, I think this function name should be `get_startup_location_template()` to avoid confusion. The term _template_ is not used in GRASS, but it is common else where. Alternative is `get_startup_location_in_distribution()` which is what the function is doing, so perhaps better expressing the current that."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467500826, 'comment_body': 'No need to do `as why` when you are ignoring the `why` anyway.', 'comment_created': datetime.datetime(2020, 8, 8, 20, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467502704, 'comment_body': ""You are ignoring the return value from `copy_startup_location()`. Perhaps, you can wrap this whole thing into one function, maybe named `get_startup_location()`, which will return the location/mapset on success and None otherwise and internally resolve all the cases (no location to copy, copying failed, and, possibly, also an existing user's copy of the location).\r\n\r\nPerhaps more importantly, it is not clear to me if this is meant to actually start in a mapset in this location. Creating this location if there is no other location is good, but actually using it, means picking also a mapset and starting in that one. With that, the overarching function should be something like `get_mapset_in_startup_location()` and it would take care of all above plus picking, probably creating, a mapset to use."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467503522, 'comment_body': ""Well, actually, if you want to leave this PR just at creating the location and solving the actual starting in some mapset there in another PR, that's fine with me."", 'comment_created': datetime.datetime(2020, 8, 8, 20, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 467543597, 'comment_body': 'Yep, get_startup_location_in_distribution() seems clearer. I used that.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 467544524, 'comment_body': '""as why"" removed.', 'comment_created': datetime.datetime(2020, 8, 9, 6, 42, 50, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471057311, 'comment_body': 'This should use the format function (method of string).', 'comment_created': datetime.datetime(2020, 8, 16, 2, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057512, 'comment_body': 'Rather than a triple nested if statement, use the ""`if not bar: return None`"" paradigm.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471057748, 'comment_body': '`location` instead of `startup_location` is probably sufficient.', 'comment_created': datetime.datetime(2020, 8, 16, 2, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058227, 'comment_body': ""Since you added the mapset part in this PR, let's continue here. Now the mapset is not used and the user is presented with two mapsets to choose from. This is a situation we want to avoid. Let's take then the final steps from `OnStart()` and set the mapset and exit the startup with:\r\n\r\n```\r\n        self.SetLocation(dbase, location, mapset)\r\n        self.ExitSuccessfully()\r\n```\r\n\r\nThis will achieve the final/actual goal of #862 (see the title)."", 'comment_created': datetime.datetime(2020, 8, 16, 3, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471058974, 'comment_body': 'Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471059453, 'comment_body': ""You are actually modifying the name variable here. If you run this more than once, you will get username, username_1, username_1_1, username_1_1_1, ... while you probably wanted username, username_2, username_3, ...\r\n\r\nSince this won't be used for the first time user, you can test this before fixing the modification of the location in the distribution. It is sufficient just to delete the config and grassdata dir as in case of a single test (i.e., just do the single test multiple times.)"", 'comment_created': datetime.datetime(2020, 8, 16, 3, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471061017, 'comment_body': 'The name which seems to be finalist in #862 is `world_latlong_wgs84`.', 'comment_created': datetime.datetime(2020, 8, 16, 3, 47, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471092071, 'comment_body': '> \r\n> \r\n> Well, actually, the problem is more than just the name. You are modifying the demo location in dist, not the one copied to the user. Test this by running it multiple times.\r\n\r\nCorrected.', 'comment_created': datetime.datetime(2020, 8, 16, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 471198276, 'comment_body': 'Having this call at the end of function called `SuggestDatabase` should be suspicious.\r\n\r\nThe point is that the first time user* will be brought into the newly created location, not everybody.\r\n\r\nOn top of that, just from reading the code, it looks like `grassdatabase, location, mapset_name` will not be defined on like 543 unless the `if path is None:` case happens. Did you test this for case when `path` is not `None`, i.e., `get_possible_database_path()` found something?\r\n\r\n* Here defined as the case when the startup location was created.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203310, 'comment_body': 'The return value is not fully documented. I think if you try to write documentation, you may also see that returning the database path is little strange because it is the input which is not expected to be changed.', 'comment_created': datetime.datetime(2020, 8, 17, 2, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471203836, 'comment_body': 'You may want to call this variable `location_in_dist` or something like that to be sure you always use it in the right way. See e.g. your return statement (Does this code run?).', 'comment_created': datetime.datetime(2020, 8, 17, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471204607, 'comment_body': ""Is the _existing user's copy_ something you already tried to address or is it just something you are planning? I don't see it in the code."", 'comment_created': datetime.datetime(2020, 8, 17, 2, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 471208420, 'comment_body': ""Using `GISBASE` is the right thing to do now. Let's not worry about distributions/installations right now."", 'comment_created': datetime.datetime(2020, 8, 17, 3, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 472102560, 'comment_body': 'I think that the existing user\'s copy of ""world_latlong_wgs84"" is something that could not be reached now because I create a startup location only in the case when ""grassdata"" does not exist. So it is clear that ""grassdata/world_latlong_wgs84"" does not exist either.', 'comment_created': datetime.datetime(2020, 8, 18, 11, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 473553912, 'comment_body': '```suggestion\r\n    """"""Create a new startup location in the given GRASS database.\r\n\r\n    Returns the newly created mapset name on success. Returns None if there is\r\n    no location to copy in the installation or copying failed.\r\n    """"""\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473555081, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 20, 2, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473559713, 'comment_body': 'It starts now for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560093, 'comment_body': 'These two lines are now there.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473560737, 'comment_body': 'The call is now at the right place in terms of starting there for the first-time user.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 473561403, 'comment_body': 'Returning the mapset only and having the caller set the name is fine now. Might be more challenging in the future.', 'comment_created': datetime.datetime(2020, 8, 20, 3, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': '15b014c1f5f301d89f24ac627c7c08dddc3cfa4e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '31b6c82325df5c14a30a9d2b9098f047e2575964', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e5baf56c52c66097a79382ae99226ef8526c6361', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'be368df23c77318d30c01bc7f0386bebba483b5d', 'committer_username': 'lindakarlovska', 'committer_name': 'Linda Karlovska', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 3, 14, 8, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '694df2ef2b8a731b71e344056268baf9a4076fe7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60f7b496a0a7a1afff073deb5826250bcf68a461', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4ec26ca07619d81a78ed1bc87bf3aa8b6b755a3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd969a164eefbbf7ce6f52eddeeeec2381e845c14', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5a1914399eae4b96c678bf3b8e65634d95709804', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '50d392205e801842628660e1b152b993cf3ec485', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3ce298257703d38154d8261dcfd9409fd61bc7c9', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1b2c2881a412dbbf914222a975245cbaa68f795', 'committer_username': 'wenzeslaus', 'committer_name': 'Vaclav Petras', 'committer_email': 'wenzeslaus@gmail.com', 'commit_date': datetime.datetime(2013, 9, 13, 3, 13, 36, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
459360730,Store list of databases in settings,"The GUI should remember the databases added. Every time a new database is added, a list of databases in the user settings should be updated. This way, a new GUI instance should read the user settings and put the databases to the list (if the directories still exist). The GUI should allow to remove the database from the tree. This should again be reflected in the user settings.",True,858,https://api.github.com/repos/OSGeo/grass/pulls/858,https://github.com/OSGeo/grass/pull/858,closed,179,12,6,9,24,10,3,1,"[{'name': 'enhancement'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-30 16:19:48+00:00,2020-08-08 02:26:19+00:00,727591.0,"8 days, 10:06:31","[{'comment_id': 463725623, 'comment_body': ""Shouldn't this be on the same level as eg. 'manager'?"", 'comment_created': datetime.datetime(2020, 7, 31, 17, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463728775, 'comment_body': 'Maybe empty string than None for consistent types', 'comment_created': datetime.datetime(2020, 7, 31, 17, 9, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463729861, 'comment_body': 'Perhaps this could go into InsertGrassDb directly to avoid code duplication?', 'comment_created': datetime.datetime(2020, 7, 31, 17, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463730392, 'comment_body': ""I am thinking maybe we don't have to inform user about this, just check and see if to add it or no."", 'comment_created': datetime.datetime(2020, 7, 31, 17, 12, 30, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 463730641, 'comment_body': ""This doesn't need to be self"", 'comment_created': datetime.datetime(2020, 7, 31, 17, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 466332232, 'comment_body': 'Moved. UserSettings needs to have three values so that now it is:\r\n\r\ngroup=""datacatalog"",\r\nkey=""grassdb""\r\nsubkey=""getString""', 'comment_created': datetime.datetime(2020, 8, 6, 10, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466332996, 'comment_body': 'Changed.', 'comment_created': datetime.datetime(2020, 8, 6, 10, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336078, 'comment_body': 'Improved.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336159, 'comment_body': 'Ok.', 'comment_created': datetime.datetime(2020, 8, 6, 11, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}, {'comment_id': 466336801, 'comment_body': 'Eventually It is enough to use  just one variable ""self.grassdatabases"".', 'comment_created': datetime.datetime(2020, 8, 6, 11, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': 'ea354dc431c33ff06872ea9f4a792fd6c2f154da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7531d28a399f7d9f66e5ab7335eb9466352434a4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0d067c2d9593e3d3f4920a609fa27785bcfe1350', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9d5c4e58d69d8025fe3fcb05bc7e0775bc9965a4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8405f68e0bce7e31e5cbb4875e5163707ba619e9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '59cb358ba3c98e227c9df338ac121f816807ec0f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4ce884106c2d7f3212a3750f253aae813344c2a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'defad899bc7ad95ba9269562d25b04d51aa23e8a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d683bcdffef7236a5b7d776b9dccd2863dd37a2', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Linda Karlovska,49241681,,User,,12,,1,4
452079528,wxGUI: Changes in Layer Manager tabs order and labels,wxGUI/LayerManager: Changed tab order (Modules are third) and Layers renamed to Display.,True,802,https://api.github.com/repos/OSGeo/grass/pulls/802,https://github.com/OSGeo/grass/pull/802,closed,17,17,1,1,8,0,3,0,"[{'name': 'help wanted'}, {'name': 'GUI'}, {'name': 'gsoc'}]",2020-07-18 18:49:08+00:00,2020-07-23 01:59:29+00:00,371421.0,"4 days, 7:10:21",[],"[{'commit_sha': '38f806adbb3cd15f290d76dd17f7b62bc5045c91', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
442754587,Make Data tab the default in GUI,wxGUI/frame: The Data tab and Layer tab were swapped so the Data tab is the first tab from the left and the default when the GUI opens.,True,756,https://api.github.com/repos/OSGeo/grass/pulls/756,https://github.com/OSGeo/grass/pull/756,closed,15,14,1,1,0,0,1,0,[{'name': 'gsoc'}],2020-07-01 14:54:23+00:00,2020-07-02 02:00:23+00:00,39960.0,11:06:00,[],"[{'commit_sha': '41b941d56ae36900fb6c7c19c1a4d94c6c77636a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
433804729,wxgui: Create grassdata automatically on the first GUI startup ,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). If nothing is found, GRASS GIS (GUI) should automatically create directory named grassdata as a subdirectory of a platfrom-dependent directory. This platfrom-dependent directory would be:

- $HOME (os.path.expanduser('~')) on Linux and the like,
- User's Documents on Windows (see dac6d4a for code trying to identify that dir),
 - One of the above on macOS - macOS users, please share your ideas.

If that fails (GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases) it should use a temporary directory (/tmp/... etc.) as a fallback. 
The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. ",True,705,https://api.github.com/repos/OSGeo/grass/pulls/705,https://github.com/OSGeo/grass/pull/705,closed,56,1,2,8,0,32,1,0,[{'name': 'gsoc'}],2020-06-12 17:31:34+00:00,2020-06-23 02:48:29+00:00,897415.0,"10 days, 9:16:55","[{'comment_id': 439719965, 'comment_body': 'Why _() in the path? Localized Windows should understand Documents.', 'comment_created': datetime.datetime(2020, 6, 13, 8, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'landam', 'type': 'User'}, {'comment_id': 439784274, 'comment_body': 'This goes against ""If even [the temporary directory fallback] fails, GRASS should not fail, but simply let the user make that choice which is the current behavior."" from #682.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784342, 'comment_body': 'This should be created only once it is really needed. (Otherwise, the tmp dir will be created and not deleted every time thing function runs.)', 'comment_created': datetime.datetime(2020, 6, 14, 2, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784563, 'comment_body': 'The `path` is already set at this point even when exception was raised, so your line `if path is None:` will have path which is not None and thus the functions will just return this path.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 13, 56, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784774, 'comment_body': 'We may decide to refine it and give more info to the user through GUI, but at this point and in this function, there is no need to report the failure in any way. This function has a fallback which is the tmp dir and the original calling code has its own fallback solution. ', 'comment_created': datetime.datetime(2020, 6, 14, 2, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784900, 'comment_body': 'This comes from dac6d4add511cb47d3329d2c06fdb441b75822f4 - see the comment there. I would not bother with that for this function and just go with `Documents` only.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439784998, 'comment_body': 'This still should be there. (#682:  ""If even [the temporary directory fallback] fails, [...] simply let the user make that choice which is the current behavior."")', 'comment_created': datetime.datetime(2020, 6, 14, 2, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785212, 'comment_body': 'possible -> standard, fix wording of ""directory to what is""', 'comment_created': datetime.datetime(2020, 6, 14, 2, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 439785373, 'comment_body': 'Something like ""...in the standard location according to the platform."" And also mention the fallback.', 'comment_created': datetime.datetime(2020, 6, 14, 2, 30, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441941134, 'comment_body': 'Please remove this extra change. Also in PEP8, there is only one empty line between methods.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942469, 'comment_body': 'Based on what the function does and what the context is, the comment should be ""...try to create...""', 'comment_created': datetime.datetime(2020, 6, 18, 3, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441942745, 'comment_body': 'What the word ""independent"" refers to here?', 'comment_created': datetime.datetime(2020, 6, 18, 3, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441945594, 'comment_body': 'As I said, here in this new function, I would not bother with translations here as this is more future oriented and we hope that every new system will be set in a way that there is ""Documents"". So, I\'m saying, delete the `""candidates.append(os.path.join(home, _(""Documents""), ""grassdata""))""` part.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441946904, 'comment_body': ""Here, you don't have to assign to a variable here, just return candidate right away."", 'comment_created': datetime.datetime(2020, 6, 18, 3, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949253, 'comment_body': 'According to PEP8, `t` from `tempfile` and `""` from `""grassdata...` should be aligned. Another option is to use Black style which puts this into 4 lines if it is longer than 88 characters:\r\n\r\n```\r\ntmp = os.path.join(\r\n    tempfile.gettempdir(),\r\n    ""grassdata_{}"".format(getpass.getuser())\r\n) \r\n```\r\n\r\nYou can run Flake8 on any file you edit to see these things. Unfortunately, you will get a lot of warning and errors from other lines you did not edit and you need to ignore those (this will get better in the future as we make more files PEP8, Flake8, and Black compliant).', 'comment_created': datetime.datetime(2020, 6, 18, 3, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949674, 'comment_body': 'Again, just return here is enough.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949853, 'comment_body': 'Only return is needed here, no assignment.', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441949974, 'comment_body': 'Control -> Check', 'comment_created': datetime.datetime(2020, 6, 18, 3, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441950905, 'comment_body': '`create_possible_database_path()` -> `create_database_directory()`\r\n\r\nThe GRASS terminology here is all over the place here (grassdata, gisbase, ...), but ""possible"" does not make sense here and we are not creating a path, but the actual directory, so that\'s way ""...database_directory"".', 'comment_created': datetime.datetime(2020, 6, 18, 3, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442593732, 'comment_body': ""Since the true branch of the if statement has return, you don't need else here and can move the try-except block one level left. This is does not change anything, but is makes the code simpler and the same logic is already used above: The good case returns, so the other case is just whatever follows after that."", 'comment_created': datetime.datetime(2020, 6, 19, 2, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442594169, 'comment_body': 'Simple `candidate = os.path...` will suffice here in both cases. It is either or and at one point you have only one candidate. This removes the need for the loop over the candidates list below.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443089786, 'comment_body': 'The ""case independent"" does not make sense here. Simplify further, by merging the two comments together and saying something like ""Determine the standard path according to a platform.""\r\n\r\nWhile you are at it, you can drop the ""candidate"" terminology from the variable name too. What candidate refers to here? It really makes sense only in the other function. Simple `path` will be probably more descriptive here. And going further, the `tmp` variable can be called `path` too because in a way it is no different from the `path` before, it replaces it for all intents and purposes.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443090593, 'comment_body': 'The intended behavior may not be clear from the code, so add another comment saying something like ""The created tmp is not cleaned by GRASS, so we are relying on the system to do it at some point. The positive outcome is that another GRASS instance will find the data created by the first one which is desired in the ""try out GRASS"" use case we are aiming towards."" See the original ticket for alternative formulation of this.', 'comment_created': datetime.datetime(2020, 6, 20, 1, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091183, 'comment_body': 'Say something like ""Create a temporary ""grassdata"" directory if GRASS is running in some special environment and the standard directories cannot be created which might be the case in some ""try out GRASS"" use cases.""\r\n\r\n(Note that a line should be 88 characters or less.)', 'comment_created': datetime.datetime(2020, 6, 20, 1, 48, 2, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091474, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))\r\n', 'comment_created': datetime.datetime(2020, 6, 20, 1, 52, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091580, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091600, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091611, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091621, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091633, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443091641, 'comment_body': 'Trailing whitespace ([Flake8 W291](https://www.flake8rules.com/rules/W291.html))', 'comment_created': datetime.datetime(2020, 6, 20, 1, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 443148404, 'comment_body': 'Hopefully the last change, sorry I missed this before: there are other platforms (see https://stackoverflow.com/questions/446209/possible-values-from-sys-platform) so we should probably have it more like this (and treat windows as special case):\r\n\r\n```\r\nif sys.platform == \'win32\':\r\n    path = os.path.join(home, ""Documents"", ""grassdata"")\r\nelse:\r\n    path = os.path.join(home, ""grassdata"")\r\n```', 'comment_created': datetime.datetime(2020, 6, 20, 17, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': '39bc6b7cc5e89da49325bb6bd78b02454376f37e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '76a7499fc250e9c5c1004b7250e03d6bd437c1a1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '987cfa3b0b5a4383407b74178e1e1f4c3c7c2105', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee63c49feac9b7666af2819b1048e9ea86b4267b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ef1e7ccf3e4fb145a68b8fd1295d76baa1c300d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2a8be1c28ba993c5ff8a76299ef0cdf2a8f997f0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2b23ed6717f52b2abc98534df25739be3e589e25', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '711436a1057b738d040370a9111a0f44c8433187', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4
422330368,wxgui: startup GUI automatic detection of grassdata: make case independent #644,"After starting GRASS GIS with GUI, the GUI now searches for existing grassdata (e.g., dac6d4a and #644 with #664). 

This platfrom-dependent directory would be:

    - $HOME (os.path.expanduser('~')) on Linux and the like,
    - User's Documents on Windows (see dac6d4a for code trying to identify that dir),
    - One of the above on macOS - macOS users, please share your ideas.

This function does not address temporary directory. No platform specific code.
",True,664,https://api.github.com/repos/OSGeo/grass/pulls/664,https://github.com/OSGeo/grass/pull/664,closed,13,25,1,12,12,17,2,0,"[{'name': 'GUI'}, {'name': 'gsoc'}]",2020-05-23 21:38:41+00:00,2020-06-20 18:08:20+00:00,2406579.0,"27 days, 20:29:39","[{'comment_id': 435658775, 'comment_body': 'Please use PEP8 for formatting. In general, you can run Flake8 (`flake8 startup/utils.py`) to get some errors, but some are unfortunately still ignored/disabled including this one. Here, just remember _space after comma_ and use: `...""grassdata"", ""GRASSDATA""...`. ', 'comment_created': datetime.datetime(2020, 6, 5, 2, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441931790, 'comment_body': 'Seem to be unused.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441932100, 'comment_body': 'It is either ""a path to what is"" or ""a directory which is"".', 'comment_created': datetime.datetime(2020, 6, 18, 2, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933014, 'comment_body': 'Moving the word ""return"" is an unnecessary change and this adds white space at the end of line (which is not a good practice and now fortunately usually highlighted by Git).', 'comment_created': datetime.datetime(2020, 6, 18, 2, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441933688, 'comment_body': ""Again, white space at the end of line. Flake8 would normally warn about that, but we have that warning still disabled in CI because of legacy code which importunately does have these problems (but let's not add more)."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 441937438, 'comment_body': 'This adds Documents into the list of candidates twice in case _(""Documents"") == ""Documents"". So you could do:\r\n\r\n```\r\ntr_documents = os.path.join(home, _(""Documents""))\r\nif tr_documents not in candidates:\r\n   candidates.append(tr_documents)\r\n```', 'comment_created': datetime.datetime(2020, 6, 18, 2, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938009, 'comment_body': ""break breaks only the inner loop, you need to return the path right away:\r\n```\r\n    for candidate in candidates:\r\n        if os.path.exists(candidate):\r\n            for subdir in next(os.walk(candidate))[1]:\r\n                if 'grassdata' in subdir.lower():\r\n                    return os.path.join(candidate, subdir)\r\n    return None\r\n```\r\n\r\nthen you don't need to define path variable at all."", 'comment_created': datetime.datetime(2020, 6, 18, 2, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 441938263, 'comment_body': 'The point of trying ""My Documents"" is that we are not following the real API here of Windows or any other platform, so we are just adding this to the list of guesses. I put ""My Documents"" there because based on what I found at that time it seemed that it is a possible option (that there will be no ""Documents"" but only ""My Documents""). This is does not seem to be the case for most recent Windows, but might be for some which are in use. I simply don\'t know, so I would prefer to keep ""My Documents"" there now, although I would like to see some analysis of this and a better solution in the (possibly distant) future.', 'comment_created': datetime.datetime(2020, 6, 18, 2, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 442588830, 'comment_body': ""append function does not generate UnicodeDecodeError, that was there for os.path.join in case of some issues with translatable strings. Anyway, you don't need to fix it, we decided to completely remove the translatable versions (Vashek will comment on that)."", 'comment_created': datetime.datetime(2020, 6, 19, 1, 49, 24, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592020, 'comment_body': 'The description is awkward. I suggest:\r\n\r\n    """"""Looks for directory \'grassdata\' (case-insensitive)\r\n    in standard locations to detect existing GRASS Database.\r\n    Returns the path as a string or None if nothing was found.""""""', 'comment_created': datetime.datetime(2020, 6, 19, 2, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442592201, 'comment_body': 'most of the comment can be removed', 'comment_created': datetime.datetime(2020, 6, 19, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442593161, 'comment_body': 'Again, you have additional whitespace at the end of line, please make sure to get rid of that before you commit. git diff will show you whitespace changes. Extra whitespace is bad practice and it clutters the PR changes.', 'comment_created': datetime.datetime(2020, 6, 19, 2, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 442907482, 'comment_body': '@lindakladivova do you use a Python editor? If not, please consider to change - some of them are able to remove trailing white space automagically.', 'comment_created': datetime.datetime(2020, 6, 19, 15, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'neteler', 'type': 'User'}, {'comment_id': 443088073, 'comment_body': 'whitespace...', 'comment_created': datetime.datetime(2020, 6, 20, 1, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088223, 'comment_body': 'you mean ""case independent grassdata directories""?', 'comment_created': datetime.datetime(2020, 6, 20, 1, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443088560, 'comment_body': ""Based on @hellik's comment, we don't need My Documents anymore."", 'comment_created': datetime.datetime(2020, 6, 20, 1, 14, 28, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 443108501, 'comment_body': 'I have switched on blank spaces in Spyder, so now hopefully, I will be able to see trailing white spaces. ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'lindakarlovska', 'type': 'User'}]","[{'commit_sha': '73e37101ec3270f076dad7d86f30e5ebc366562c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28542795cc030ec795715615c8603ba3d1992272', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7dac08bae480f0e321fcb39881dc27e2d14a9a20', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '98827d328f3b92e930bc503cf8f412fac6b26095', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4125d9a7bb9b3c61c6f77351c8990dd2a0a2509c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bf33fcad8d916574a3bf4d0cf92904a16f0bd66f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5aba34845d1a0367841733f1d0fc848cad2de21c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2d5dcc7a518a0f632c31966659c63319de295f22', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91bbf6c41b38653100ff01135b165cfaa614d6a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b4ab5deb63532f497b6e8af6d43ec06150838cfa', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '470bf478ce01a64b0fbb3d3dd9471fee5aa2045d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd30621811a2b19bd72285fbf087cacb6ab49601', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Linda Karlovska,49241681,,User,,12,,1,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
187247007,grass,OSGeo/grass,C,300,816,46,123,22892,544,18,130,"[{'id': 1928494697, 'number': 3896, 'closed': datetime.datetime(2024, 8, 14, 15, 27, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 19, 11, 5, 50, tzinfo=datetime.timezone.utc), 'time_taken': 4854097.0, 'time_delta': '56 days, 4:21:37', 'additions': 232, 'deletions': 117, 'state': 'closed'}, {'id': 1886047419, 'number': 3732, 'closed': datetime.datetime(2024, 5, 27, 14, 13, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 24, 6, 25, 3, tzinfo=datetime.timezone.utc), 'time_taken': 287332.0, 'time_delta': '3 days, 7:48:52', 'additions': 10, 'deletions': 5, 'state': 'closed'}, {'id': 1873615963, 'number': 3714, 'closed': datetime.datetime(2024, 5, 16, 15, 44, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 16, 14, 29, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4462.0, 'time_delta': '1:14:22', 'additions': 33, 'deletions': 21, 'state': 'closed'}, {'id': 1847411178, 'number': 3679, 'closed': datetime.datetime(2024, 5, 9, 13, 47, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 30, 8, 57, 55, tzinfo=datetime.timezone.utc), 'time_taken': 794995.0, 'time_delta': '9 days, 4:49:55', 'additions': 383, 'deletions': 36, 'state': 'closed'}, {'id': 1829200763, 'number': 3622, 'closed': datetime.datetime(2024, 5, 2, 15, 3, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 18, 10, 6, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1227408.0, 'time_delta': '14 days, 4:56:48', 'additions': 428, 'deletions': 139, 'state': 'closed'}, {'id': 1724280674, 'number': 3421, 'closed': datetime.datetime(2024, 5, 10, 13, 15, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 13, 16, 43, 26, tzinfo=datetime.timezone.utc), 'time_taken': 7504344.0, 'time_delta': '86 days, 20:32:24', 'additions': 113, 'deletions': 23, 'state': 'closed'}, {'id': 1710521802, 'number': 3402, 'closed': datetime.datetime(2024, 2, 7, 8, 58, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 4, 19, 7, 6, tzinfo=datetime.timezone.utc), 'time_taken': 222703.0, 'time_delta': '2 days, 13:51:43', 'additions': 52, 'deletions': 45, 'state': 'closed'}, {'id': 1681836956, 'number': 3365, 'closed': datetime.datetime(2024, 2, 18, 9, 24, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 16, 20, 53, 31, tzinfo=datetime.timezone.utc), 'time_taken': 2809832.0, 'time_delta': '32 days, 12:30:32', 'additions': 743, 'deletions': 182, 'state': 'closed'}, {'id': 1668775651, 'number': 3342, 'closed': datetime.datetime(2024, 1, 18, 14, 36, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 8, 11, 43, 12, tzinfo=datetime.timezone.utc), 'time_taken': 874373.0, 'time_delta': '10 days, 2:52:53', 'additions': 300, 'deletions': 154, 'state': 'closed'}, {'id': 1596395008, 'number': 3234, 'closed': datetime.datetime(2023, 12, 8, 4, 6, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 10, 15, 27, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2378306.0, 'time_delta': '27 days, 12:38:26', 'additions': 372, 'deletions': 115, 'state': 'closed'}, {'id': 1378843687, 'number': 3024, 'closed': datetime.datetime(2023, 6, 21, 8, 57, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 11, 48, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1372157.0, 'time_delta': '15 days, 21:09:17', 'additions': 59, 'deletions': 41, 'state': 'closed'}, {'id': 1378529656, 'number': 3017, 'closed': datetime.datetime(2024, 4, 27, 2, 52, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 5, 8, 25, 43, tzinfo=datetime.timezone.utc), 'time_taken': 28232786.0, 'time_delta': '326 days, 18:26:26', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1375834093, 'number': 2994, 'closed': datetime.datetime(2023, 6, 3, 11, 39, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 2, 14, 1, 36, tzinfo=datetime.timezone.utc), 'time_taken': 77868.0, 'time_delta': '21:37:48', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1212067769, 'number': 2768, 'closed': datetime.datetime(2023, 2, 28, 18, 1, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 21, 4, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3358631.0, 'time_delta': '38 days, 20:57:11', 'additions': 63, 'deletions': 2, 'state': 'closed'}, {'id': 1196853073, 'number': 2746, 'closed': datetime.datetime(2023, 2, 8, 21, 11, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 15, 10, 35, tzinfo=datetime.timezone.utc), 'time_taken': 2268030.0, 'time_delta': '26 days, 6:00:30', 'additions': 33, 'deletions': 82, 'state': 'closed'}, {'id': 1185150509, 'number': 2728, 'closed': datetime.datetime(2023, 1, 10, 17, 50, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 4, 16, 22, 28, tzinfo=datetime.timezone.utc), 'time_taken': 523660.0, 'time_delta': '6 days, 1:27:40', 'additions': 28, 'deletions': 1, 'state': 'closed'}, {'id': 1177318960, 'number': 2718, 'closed': datetime.datetime(2023, 1, 13, 15, 19, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 25, 20, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1624072.0, 'time_delta': '18 days, 19:07:52', 'additions': 99, 'deletions': 8, 'state': 'closed'}, {'id': 1145107605, 'number': 2682, 'closed': datetime.datetime(2023, 1, 5, 14, 52, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 4, 15, 48, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2761466.0, 'time_delta': '31 days, 23:04:26', 'additions': 49, 'deletions': 70, 'state': 'closed'}, {'id': 1136684004, 'number': 2667, 'closed': datetime.datetime(2023, 6, 2, 12, 43, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 27, 12, 50, 27, tzinfo=datetime.timezone.utc), 'time_taken': 16156381.0, 'time_delta': '186 days, 23:53:01', 'additions': 507, 'deletions': 127, 'state': 'closed'}, {'id': 1045117603, 'number': 2568, 'closed': datetime.datetime(2022, 10, 28, 4, 10, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 2, 16, 54, 31, tzinfo=datetime.timezone.utc), 'time_taken': 4792543.0, 'time_delta': '55 days, 11:15:43', 'additions': 193, 'deletions': 77, 'state': 'closed'}, {'id': 872484205, 'number': 2251, 'closed': datetime.datetime(2022, 3, 21, 13, 21, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 6, 15, 51, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1287052.0, 'time_delta': '14 days, 21:30:52', 'additions': 100, 'deletions': 47, 'state': 'closed'}, {'id': 854576117, 'number': 2216, 'closed': datetime.datetime(2022, 2, 25, 2, 6, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 16, 16, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 727062.0, 'time_delta': '8 days, 9:57:42', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 854471566, 'number': 2214, 'closed': datetime.datetime(2022, 2, 20, 3, 30, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 16, 14, 30, 16, tzinfo=datetime.timezone.utc), 'time_taken': 305986.0, 'time_delta': '3 days, 12:59:46', 'additions': 385, 'deletions': 1, 'state': 'closed'}, {'id': 847811829, 'number': 2190, 'closed': datetime.datetime(2022, 2, 11, 17, 59, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 16, 5, 13, tzinfo=datetime.timezone.utc), 'time_taken': 6839.0, 'time_delta': '1:53:59', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 841641941, 'number': 2178, 'closed': datetime.datetime(2022, 2, 8, 4, 38, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 11, 56, 27, tzinfo=datetime.timezone.utc), 'time_taken': 60150.0, 'time_delta': '16:42:30', 'additions': 16, 'deletions': 24, 'state': 'closed'}, {'id': 839400810, 'number': 2155, 'closed': datetime.datetime(2022, 2, 9, 21, 21, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 15, 9, 44, tzinfo=datetime.timezone.utc), 'time_taken': 540702.0, 'time_delta': '6 days, 6:11:42', 'additions': 70, 'deletions': 282, 'state': 'closed'}, {'id': 839127472, 'number': 2153, 'closed': datetime.datetime(2022, 3, 2, 5, 17, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 3, 10, 10, 12, tzinfo=datetime.timezone.utc), 'time_taken': 2315251.0, 'time_delta': '26 days, 19:07:31', 'additions': 108, 'deletions': 92, 'state': 'closed'}, {'id': 829795776, 'number': 2121, 'closed': datetime.datetime(2022, 1, 26, 5, 9, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 23, 17, 22, 26, tzinfo=datetime.timezone.utc), 'time_taken': 215231.0, 'time_delta': '2 days, 11:47:11', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 825760842, 'number': 2106, 'closed': datetime.datetime(2022, 1, 20, 2, 6, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 18, 24, 2, tzinfo=datetime.timezone.utc), 'time_taken': 114167.0, 'time_delta': '1 day, 7:42:47', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 821096401, 'number': 2089, 'closed': datetime.datetime(2022, 1, 28, 4, 30, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 13, 15, 14, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1257402.0, 'time_delta': '14 days, 13:16:42', 'additions': 212, 'deletions': 67, 'state': 'closed'}, {'id': 820064155, 'number': 2087, 'closed': datetime.datetime(2022, 1, 31, 14, 31, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 12, 20, 40, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1619457.0, 'time_delta': '18 days, 17:50:57', 'additions': 94, 'deletions': 5, 'state': 'closed'}, {'id': 809102450, 'number': 2031, 'closed': datetime.datetime(2022, 1, 12, 19, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 23, 11, 50, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1755351.0, 'time_delta': '20 days, 7:35:51', 'additions': 345, 'deletions': 7, 'state': 'closed'}, {'id': 805112297, 'number': 2021, 'closed': datetime.datetime(2021, 12, 17, 14, 52, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 17, 7, 26, 35, tzinfo=datetime.timezone.utc), 'time_taken': 26743.0, 'time_delta': '7:25:43', 'additions': 1, 'deletions': 10, 'state': 'closed'}, {'id': 749955321, 'number': 1927, 'closed': datetime.datetime(2021, 12, 10, 19, 49, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 5, 14, 48, 44, tzinfo=datetime.timezone.utc), 'time_taken': 5720440.0, 'time_delta': '66 days, 5:00:40', 'additions': 48, 'deletions': 48, 'state': 'closed'}, {'id': 721789179, 'number': 1830, 'closed': datetime.datetime(2021, 8, 29, 2, 39, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 28, 13, 48, 45, tzinfo=datetime.timezone.utc), 'time_taken': 46224.0, 'time_delta': '12:50:24', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 714117350, 'number': 1801, 'closed': datetime.datetime(2021, 10, 5, 14, 42, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 10, 29, 57, tzinfo=datetime.timezone.utc), 'time_taken': 4248759.0, 'time_delta': '49 days, 4:12:39', 'additions': 62, 'deletions': 98, 'state': 'closed'}, {'id': 712175076, 'number': 1789, 'closed': datetime.datetime(2022, 1, 13, 11, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 8, 39, 56, tzinfo=datetime.timezone.utc), 'time_taken': 13228127.0, 'time_delta': '153 days, 2:28:47', 'additions': 64, 'deletions': 19, 'state': 'closed'}, {'id': 709087062, 'number': 1785, 'closed': datetime.datetime(2021, 8, 19, 2, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 11, 14, 55, tzinfo=datetime.timezone.utc), 'time_taken': 645520.0, 'time_delta': '7 days, 11:18:40', 'additions': 23, 'deletions': 54, 'state': 'closed'}, {'id': 707493182, 'number': 1783, 'closed': datetime.datetime(2021, 8, 11, 3, 14, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 17, 1, 25, tzinfo=datetime.timezone.utc), 'time_taken': 36796.0, 'time_delta': '10:13:16', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 705511599, 'number': 1780, 'closed': datetime.datetime(2021, 8, 13, 2, 35, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 14, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 563390.0, 'time_delta': '6 days, 12:29:50', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 703364590, 'number': 1775, 'closed': datetime.datetime(2021, 8, 17, 16, 33, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 11, 59, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1139604.0, 'time_delta': '13 days, 4:33:24', 'additions': 14, 'deletions': 6, 'state': 'closed'}, {'id': 692065714, 'number': 1732, 'closed': datetime.datetime(2021, 7, 30, 13, 16, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 10, 24, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1047114.0, 'time_delta': '12 days, 2:51:54', 'additions': 190, 'deletions': 144, 'state': 'closed'}, {'id': 685861352, 'number': 1717, 'closed': datetime.datetime(2021, 7, 8, 13, 45, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 9, 52, 24, tzinfo=datetime.timezone.utc), 'time_taken': 14013.0, 'time_delta': '3:53:33', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 680272301, 'number': 1692, 'closed': datetime.datetime(2021, 6, 30, 2, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 18, 28, 9, tzinfo=datetime.timezone.utc), 'time_taken': 29831.0, 'time_delta': '8:17:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 679724343, 'number': 1689, 'closed': datetime.datetime(2021, 7, 29, 3, 13, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 8, 38, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2572466.0, 'time_delta': '29 days, 18:34:26', 'additions': 429, 'deletions': 442, 'state': 'closed'}, {'id': 675470424, 'number': 1675, 'closed': datetime.datetime(2021, 12, 16, 15, 24, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 14, 22, 13, tzinfo=datetime.timezone.utc), 'time_taken': 15296545.0, 'time_delta': '177 days, 1:02:25', 'additions': 914, 'deletions': 468, 'state': 'closed'}, {'id': 673912684, 'number': 1665, 'closed': datetime.datetime(2021, 6, 20, 2, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 17, 48, 43, tzinfo=datetime.timezone.utc), 'time_taken': 32216.0, 'time_delta': '8:56:56', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 673599586, 'number': 1656, 'closed': datetime.datetime(2021, 6, 22, 14, 7, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 16, 27, 34, tzinfo=datetime.timezone.utc), 'time_taken': 337198.0, 'time_delta': '3 days, 21:39:58', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 670523148, 'number': 1646, 'closed': datetime.datetime(2021, 6, 16, 16, 38, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 15, 39, 46, tzinfo=datetime.timezone.utc), 'time_taken': 89930.0, 'time_delta': '1 day, 0:58:50', 'additions': 34, 'deletions': 13, 'state': 'closed'}, {'id': 668864914, 'number': 1637, 'closed': datetime.datetime(2021, 6, 12, 20, 0, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 13, 6, 29, tzinfo=datetime.timezone.utc), 'time_taken': 24835.0, 'time_delta': '6:53:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 662547142, 'number': 1621, 'closed': datetime.datetime(2021, 6, 13, 19, 4, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 18, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 693463.0, 'time_delta': '8 days, 0:37:43', 'additions': 156, 'deletions': 155, 'state': 'closed'}, {'id': 657760373, 'number': 1604, 'closed': datetime.datetime(2021, 6, 4, 15, 42, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 30, 17, 36, 47, tzinfo=datetime.timezone.utc), 'time_taken': 425148.0, 'time_delta': '4 days, 22:05:48', 'additions': 2257, 'deletions': 2, 'state': 'closed'}, {'id': 654594668, 'number': 1598, 'closed': datetime.datetime(2021, 5, 31, 19, 38, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 7, 27, 8, tzinfo=datetime.timezone.utc), 'time_taken': 389506.0, 'time_delta': '4 days, 12:11:46', 'additions': 28, 'deletions': 13, 'state': 'closed'}, {'id': 650629038, 'number': 1591, 'closed': datetime.datetime(2021, 5, 30, 4, 19, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 13, 34, 43, tzinfo=datetime.timezone.utc), 'time_taken': 657865.0, 'time_delta': '7 days, 14:44:25', 'additions': 54, 'deletions': 30, 'state': 'closed'}, {'id': 650603658, 'number': 1590, 'closed': datetime.datetime(2021, 5, 30, 4, 22, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 22, 10, 13, 50, tzinfo=datetime.timezone.utc), 'time_taken': 670099.0, 'time_delta': '7 days, 18:08:19', 'additions': 56, 'deletions': 11, 'state': 'closed'}, {'id': 645154697, 'number': 1577, 'closed': datetime.datetime(2021, 6, 12, 20, 3, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 14, 21, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2439739.0, 'time_delta': '28 days, 5:42:19', 'additions': 75, 'deletions': 178, 'state': 'closed'}, {'id': 610023920, 'number': 1504, 'closed': datetime.datetime(2021, 4, 8, 12, 46, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 17, 18, 25, tzinfo=datetime.timezone.utc), 'time_taken': 156491.0, 'time_delta': '1 day, 19:28:11', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 607848169, 'number': 1497, 'closed': datetime.datetime(2023, 11, 18, 17, 50, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 6, 37, 8, tzinfo=datetime.timezone.utc), 'time_taken': 82984381.0, 'time_delta': '960 days, 11:13:01', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 602275833, 'number': 1485, 'closed': datetime.datetime(2021, 3, 29, 0, 13, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 28, 17, 20, 31, tzinfo=datetime.timezone.utc), 'time_taken': 24775.0, 'time_delta': '6:52:55', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 588353917, 'number': 1437, 'closed': datetime.datetime(2021, 4, 10, 2, 43, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 9, 17, 35, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2711298.0, 'time_delta': '31 days, 9:08:18', 'additions': 525, 'deletions': 502, 'state': 'closed'}, {'id': 578632509, 'number': 1400, 'closed': datetime.datetime(2021, 4, 13, 4, 45, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 23, 17, 41, 35, tzinfo=datetime.timezone.utc), 'time_taken': 4187040.0, 'time_delta': '48 days, 11:04:00', 'additions': 344, 'deletions': 1228, 'state': 'closed'}, {'id': 571981404, 'number': 1321, 'closed': datetime.datetime(2021, 3, 24, 20, 4, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 11, 17, 19, 24, tzinfo=datetime.timezone.utc), 'time_taken': 3552314.0, 'time_delta': '41 days, 2:45:14', 'additions': 61, 'deletions': 68, 'state': 'closed'}, {'id': 544101854, 'number': 1205, 'closed': datetime.datetime(2023, 3, 7, 11, 9, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 22, 12, 48, 4, tzinfo=datetime.timezone.utc), 'time_taken': 69546085.0, 'time_delta': '804 days, 22:21:25', 'additions': 33, 'deletions': 4, 'state': 'closed'}, {'id': 544074547, 'number': 1204, 'closed': datetime.datetime(2021, 1, 27, 2, 57, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 22, 11, 54, 16, tzinfo=datetime.timezone.utc), 'time_taken': 3078200.0, 'time_delta': '35 days, 15:03:20', 'additions': 128, 'deletions': 61, 'state': 'closed'}, {'id': 542035507, 'number': 1183, 'closed': datetime.datetime(2020, 12, 21, 20, 4, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 17, 18, 5, 21, tzinfo=datetime.timezone.utc), 'time_taken': 352745.0, 'time_delta': '4 days, 1:59:05', 'additions': 58, 'deletions': 9, 'state': 'closed'}, {'id': 539008000, 'number': 1173, 'closed': datetime.datetime(2020, 12, 15, 19, 48, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 13, 19, 38, 58, tzinfo=datetime.timezone.utc), 'time_taken': 173360.0, 'time_delta': '2 days, 0:09:20', 'additions': 11, 'deletions': 32, 'state': 'closed'}, {'id': 518626460, 'number': 1078, 'closed': datetime.datetime(2020, 12, 15, 20, 7, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 16, 52, 25, tzinfo=datetime.timezone.utc), 'time_taken': 3035734.0, 'time_delta': '35 days, 3:15:34', 'additions': 197, 'deletions': 7, 'state': 'closed'}, {'id': 516149416, 'number': 1070, 'closed': datetime.datetime(2020, 12, 15, 15, 1, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 5, 15, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3454034.0, 'time_delta': '39 days, 23:27:14', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 474010280, 'number': 937, 'closed': datetime.datetime(2021, 1, 27, 15, 2, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 16, 9, 28, tzinfo=datetime.timezone.utc), 'time_taken': 13301561.0, 'time_delta': '153 days, 22:52:41', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 473981327, 'number': 936, 'closed': datetime.datetime(2020, 8, 26, 16, 42, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 26, 15, 21, 8, tzinfo=datetime.timezone.utc), 'time_taken': 4861.0, 'time_delta': '1:21:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 470884654, 'number': 920, 'closed': datetime.datetime(2020, 8, 24, 4, 10, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 12, 47, 36, tzinfo=datetime.timezone.utc), 'time_taken': 314571.0, 'time_delta': '3 days, 15:22:51', 'additions': 343, 'deletions': 211, 'state': 'closed'}, {'id': 470167193, 'number': 916, 'closed': datetime.datetime(2020, 11, 22, 4, 19, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 13, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 8174839.0, 'time_delta': '94 days, 14:47:19', 'additions': 15, 'deletions': 75, 'state': 'closed'}, {'id': 470130392, 'number': 915, 'closed': datetime.datetime(2020, 8, 20, 3, 26, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 12, 25, 52, tzinfo=datetime.timezone.utc), 'time_taken': 54030.0, 'time_delta': '15:00:30', 'additions': 25, 'deletions': 10, 'state': 'closed'}, {'id': 470042118, 'number': 914, 'closed': datetime.datetime(2020, 8, 19, 17, 52, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 9, 34, 32, tzinfo=datetime.timezone.utc), 'time_taken': 29883.0, 'time_delta': '8:18:03', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 468024526, 'number': 906, 'closed': datetime.datetime(2020, 8, 18, 17, 13, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 14, 45, 12, tzinfo=datetime.timezone.utc), 'time_taken': 354501.0, 'time_delta': '4 days, 2:28:21', 'additions': 127, 'deletions': 35, 'state': 'closed'}, {'id': 466861464, 'number': 904, 'closed': datetime.datetime(2020, 8, 19, 17, 42, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 15, 53, 13, tzinfo=datetime.timezone.utc), 'time_taken': 611358.0, 'time_delta': '7 days, 1:49:18', 'additions': 333, 'deletions': 239, 'state': 'closed'}, {'id': 465145424, 'number': 886, 'closed': datetime.datetime(2020, 8, 12, 13, 35, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 12, 20, 56, tzinfo=datetime.timezone.utc), 'time_taken': 263667.0, 'time_delta': '3 days, 1:14:27', 'additions': 26, 'deletions': 4, 'state': 'closed'}, {'id': 462802226, 'number': 875, 'closed': datetime.datetime(2020, 8, 8, 2, 23, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 14, 26, 13, tzinfo=datetime.timezone.utc), 'time_taken': 302240.0, 'time_delta': '3 days, 11:57:20', 'additions': 76, 'deletions': 34, 'state': 'closed'}, {'id': 461780523, 'number': 870, 'closed': datetime.datetime(2020, 8, 10, 18, 14, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 9, 1, 19, tzinfo=datetime.timezone.utc), 'time_taken': 724411.0, 'time_delta': '8 days, 9:13:31', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 460894257, 'number': 868, 'closed': datetime.datetime(2020, 8, 20, 4, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 8, 3, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1627795.0, 'time_delta': '18 days, 20:09:55', 'additions': 84, 'deletions': 4, 'state': 'closed'}, {'id': 459360730, 'number': 858, 'closed': datetime.datetime(2020, 8, 8, 2, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 16, 19, 48, tzinfo=datetime.timezone.utc), 'time_taken': 727591.0, 'time_delta': '8 days, 10:06:31', 'additions': 179, 'deletions': 12, 'state': 'closed'}, {'id': 458462469, 'number': 849, 'closed': datetime.datetime(2020, 8, 11, 16, 46, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 14, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1132926.0, 'time_delta': '13 days, 2:42:06', 'additions': 117, 'deletions': 35, 'state': 'closed'}, {'id': 458383229, 'number': 848, 'closed': datetime.datetime(2020, 8, 4, 12, 6, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 11, 40, 56, tzinfo=datetime.timezone.utc), 'time_taken': 519929.0, 'time_delta': '6 days, 0:25:29', 'additions': 196, 'deletions': 108, 'state': 'closed'}, {'id': 456128296, 'number': 830, 'closed': datetime.datetime(2020, 7, 25, 3, 4, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 7, 38, 39, tzinfo=datetime.timezone.utc), 'time_taken': 69978.0, 'time_delta': '19:26:18', 'additions': 147, 'deletions': 175, 'state': 'closed'}, {'id': 453688701, 'number': 811, 'closed': datetime.datetime(2020, 7, 24, 3, 24, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 17, 55, 57, tzinfo=datetime.timezone.utc), 'time_taken': 293331.0, 'time_delta': '3 days, 9:28:51', 'additions': 275, 'deletions': 18, 'state': 'closed'}, {'id': 452079528, 'number': 802, 'closed': datetime.datetime(2020, 7, 23, 1, 59, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 18, 49, 8, tzinfo=datetime.timezone.utc), 'time_taken': 371421.0, 'time_delta': '4 days, 7:10:21', 'additions': 17, 'deletions': 17, 'state': 'closed'}, {'id': 450275738, 'number': 795, 'closed': datetime.datetime(2020, 7, 24, 4, 18, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 15, 14, 24, tzinfo=datetime.timezone.utc), 'time_taken': 651840.0, 'time_delta': '7 days, 13:04:00', 'additions': 135, 'deletions': 70, 'state': 'closed'}, {'id': 448951069, 'number': 790, 'closed': datetime.datetime(2020, 7, 24, 2, 0, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 15, 23, 53, tzinfo=datetime.timezone.utc), 'time_taken': 815787.0, 'time_delta': '9 days, 10:36:27', 'additions': 214, 'deletions': 121, 'state': 'closed'}, {'id': 448878125, 'number': 789, 'closed': datetime.datetime(2020, 7, 22, 2, 21, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 14, 13, 23, 39, tzinfo=datetime.timezone.utc), 'time_taken': 651463.0, 'time_delta': '7 days, 12:57:43', 'additions': 34, 'deletions': 25, 'state': 'closed'}, {'id': 448366554, 'number': 783, 'closed': datetime.datetime(2020, 7, 17, 3, 50, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 16, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 299617.0, 'time_delta': '3 days, 11:13:37', 'additions': 97, 'deletions': 96, 'state': 'closed'}, {'id': 444862259, 'number': 771, 'closed': datetime.datetime(2020, 7, 14, 3, 22, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 15, 54, 11, tzinfo=datetime.timezone.utc), 'time_taken': 646117.0, 'time_delta': '7 days, 11:28:37', 'additions': 466, 'deletions': 252, 'state': 'closed'}, {'id': 443536293, 'number': 761, 'closed': datetime.datetime(2020, 7, 13, 3, 5, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 13, 59, 15, tzinfo=datetime.timezone.utc), 'time_taken': 911199.0, 'time_delta': '10 days, 13:06:39', 'additions': 281, 'deletions': 152, 'state': 'closed'}, {'id': 442754587, 'number': 756, 'closed': datetime.datetime(2020, 7, 2, 2, 0, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 14, 54, 23, tzinfo=datetime.timezone.utc), 'time_taken': 39960.0, 'time_delta': '11:06:00', 'additions': 15, 'deletions': 14, 'state': 'closed'}, {'id': 442678497, 'number': 755, 'closed': datetime.datetime(2020, 7, 2, 1, 48, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 12, 51, 13, tzinfo=datetime.timezone.utc), 'time_taken': 46664.0, 'time_delta': '12:57:44', 'additions': 34, 'deletions': 53, 'state': 'closed'}, {'id': 440097311, 'number': 736, 'closed': datetime.datetime(2020, 6, 26, 1, 39, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 15, 29, 42, tzinfo=datetime.timezone.utc), 'time_taken': 36595.0, 'time_delta': '10:09:55', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 438788813, 'number': 731, 'closed': datetime.datetime(2020, 7, 1, 1, 56, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 20, 0, 35, tzinfo=datetime.timezone.utc), 'time_taken': 626137.0, 'time_delta': '7 days, 5:55:37', 'additions': 179, 'deletions': 77, 'state': 'closed'}, {'id': 438030371, 'number': 728, 'closed': datetime.datetime(2020, 6, 25, 2, 48, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 15, 47, 26, tzinfo=datetime.timezone.utc), 'time_taken': 212478.0, 'time_delta': '2 days, 11:01:18', 'additions': 80, 'deletions': 85, 'state': 'closed'}, {'id': 437025601, 'number': 721, 'closed': datetime.datetime(2020, 6, 23, 2, 32, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 10, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 316598.0, 'time_delta': '3 days, 15:56:38', 'additions': 55, 'deletions': 83, 'state': 'closed'}, {'id': 433804729, 'number': 705, 'closed': datetime.datetime(2020, 6, 23, 2, 48, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 17, 31, 34, tzinfo=datetime.timezone.utc), 'time_taken': 897415.0, 'time_delta': '10 days, 9:16:55', 'additions': 56, 'deletions': 1, 'state': 'closed'}, {'id': 422453525, 'number': 670, 'closed': datetime.datetime(2020, 6, 13, 2, 35, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 24, 18, 47, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1669642.0, 'time_delta': '19 days, 7:47:22', 'additions': 150, 'deletions': 126, 'state': 'closed'}, {'id': 422330368, 'number': 664, 'closed': datetime.datetime(2020, 6, 20, 18, 8, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 23, 21, 38, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2406579.0, 'time_delta': '27 days, 20:29:39', 'additions': 13, 'deletions': 25, 'state': 'closed'}, {'id': 421002122, 'number': 657, 'closed': datetime.datetime(2020, 5, 30, 1, 37, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 20, 28, 5, tzinfo=datetime.timezone.utc), 'time_taken': 796139.0, 'time_delta': '9 days, 5:08:59', 'additions': 4, 'deletions': 12, 'state': 'closed'}, {'id': 419661176, 'number': 646, 'closed': datetime.datetime(2020, 5, 23, 1, 31, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 18, 12, 40, tzinfo=datetime.timezone.utc), 'time_taken': 371919.0, 'time_delta': '4 days, 7:18:39', 'additions': 56, 'deletions': 54, 'state': 'closed'}, {'id': 400382150, 'number': 493, 'closed': datetime.datetime(2020, 4, 9, 15, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 16, 42, 30, tzinfo=datetime.timezone.utc), 'time_taken': 169742.0, 'time_delta': '1 day, 23:09:02', 'additions': 12, 'deletions': 22, 'state': 'closed'}]"
