pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
667828383,r.univar: Add parallel support,"This PR implements parallelization for all r.univar options except for when ""extended (stats)"" flag is set to true. This is because there are dynamic allocation and sorting involved, which is trickier to implement, but this could be a work for the future.

Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without OpenMP (runs in CI)
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main
- [x] run valgrind",True,1634,https://api.github.com/repos/OSGeo/grass/pulls/1634,https://github.com/OSGeo/grass/pull/1634,closed,494,117,7,23,15,19,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-06-11 08:12:05+00:00,2022-08-30 13:35:45+00:00,38467420.0,"445 days, 5:23:40","[{'comment_id': 650462033, 'comment_body': 'test_r_univar.py should not be deleted. This benchmark_r_univar.py file is extra.', 'comment_created': datetime.datetime(2021, 6, 13, 3, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 650575434, 'comment_body': 'Should we add a ""nproc"" standard option for the parser (like e.g G_OPT_M_NPROCS)?\r\n`nprocs` is used in several Python scripts as well. So having a standard option could secure a harmonized way to handle such an option...', 'comment_created': datetime.datetime(2021, 6, 13, 20, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ninsbl', 'type': 'User'}, {'comment_id': 650578801, 'comment_body': ""@ninsbl That's a good idea."", 'comment_created': datetime.datetime(2021, 6, 13, 21, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 650580021, 'comment_body': 'Please check #1644.', 'comment_created': datetime.datetime(2021, 6, 13, 21, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 650584667, 'comment_body': 'Fails on my Linux machine too with the same message. What is the min version of GCC that this parallel code supports?', 'comment_created': datetime.datetime(2021, 6, 13, 22, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 650584867, 'comment_body': '* https://stackoverflow.com/a/13770822/16079666\r\n* https://stackoverflow.com/a/13203075/16079666', 'comment_created': datetime.datetime(2021, 6, 13, 22, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 650584905, 'comment_body': 'FYI, gcc 5.5.0', 'comment_created': datetime.datetime(2021, 6, 13, 22, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 650585081, 'comment_body': 'OK, all those variables are `const` and removing them from `shared` worked. I think `const`s are shared by default.', 'comment_created': datetime.datetime(2021, 6, 13, 22, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 653472123, 'comment_body': ""Right, I'll modify the code using the standard option."", 'comment_created': datetime.datetime(2021, 6, 17, 11, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 653473500, 'comment_body': ""I think I must've accidentally deleted the file when separating the scripts to respective directories, will fix it."", 'comment_created': datetime.datetime(2021, 6, 17, 11, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 654788876, 'comment_body': 'If I understand it right, reason for not using parallel version when extended is set, is lack of parallelization in calculation of extended statistics. If it is so, just add a comment here.\r\n```suggestion\r\n    /* Calculation of extended statistics is not parallelized yet */\r\n    if (!param.extended->answer) {\r\n```', 'comment_created': datetime.datetime(2021, 6, 19, 12, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 654790052, 'comment_body': 'Would it be worth to go here with Kahan–Babuska algorithm?', 'comment_created': datetime.datetime(2021, 6, 19, 12, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 670967785, 'comment_body': 'I think we can add this, but it is not the original behavior before this parallelization, perhaps we can do this in the next PR?', 'comment_created': datetime.datetime(2021, 7, 16, 5, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 680463710, 'comment_body': 'I assume this needs a rebase on top of current master.', 'comment_created': datetime.datetime(2021, 8, 1, 7, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 680466591, 'comment_body': ""Don't do any tricks if the input is invalid, just bail out completely (G_fatal_error). At the moment the code is incorrect – if one sets param.threads to 0, it will use abs(0) as the number of threads."", 'comment_created': datetime.datetime(2021, 8, 1, 7, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 680471155, 'comment_body': 'There is no need for round brackets around n_alloc.', 'comment_created': datetime.datetime(2021, 8, 1, 8, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 680480149, 'comment_body': 'Alright, will fix that.', 'comment_created': datetime.datetime(2021, 8, 1, 9, 16, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 691000986, 'comment_body': 'yeap I have rebased it.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 691002306, 'comment_body': 'yeap I have rebased it on master. now I have the script to use r.random.surface to generate if encounter OOM for r.surf.fractal.', 'comment_created': datetime.datetime(2021, 8, 18, 8, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}]","[{'commit_sha': '31da108a5aada1453f45c019f786ce5935b2d59b', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26b21947c68464624eed4e82dd1fe71f73494d57', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0edf5ab930c3daa5218066c761892766a88be737', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1992a595887c109852f3c0d06494c004fe187b86', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aadedd205acf9c350c851c681d6faf66dbfd22f5', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8c0c8009aebe5e930dbe3a57db387d072b01b45', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '950298d015c91cb0ab9a53ba849c77c1c020bc06', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a81a9e4b4436a0a984dffe40cf7f4750df045d4', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '744afaab20855b7aba7eb95c35127b987109b39b', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c160fb187bec54f8ee44d733d4bf5619cb768e', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '701df0c1ad579bb12d979b65ad408027ead4c04c', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '965f38c2151561f86cd8d0dd6f740466af3d0d43', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e918030aa21087268c550abb1b61f37c57642ee7', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c1b2191f1da245ba460a3208eefc45c8373eb05', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87d5fa387a67eddec92c8678373b9c1b1b436ae3', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4410244c02ff8f8b2b21b2b90d56dbcac8cfb3e', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4ad4ee8e4f130ac01c50a7bb40cd0c8483effa1', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd126c74fe4949f87f96c5ded6d0e5a8c224ba10a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d05e0372bc5ca72669b2ddfb2901d137a5692d', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b417984e3f97a0dd41c5a6e285202c01b4106d1', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7750c0ae1c63fd84bafab474f96db4885575fce', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a6cc6586c6c4e57c3effa498f5208e9f8c05792', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f52f07c053d70d3af71243fad4f59e4c9e129977', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
689956850,r.neighbors: implement parallelization with OpenMP,"This is a rework upon the revision to the first implementation of r.neighbors (#1654). It avoids using temporary file buffer to reduce unnecessary disk I/O which is not ideal in some systems. Instead, it allows the users to specify a parameter ""memory"" to indicate the amount of memory to be used for the output buffer. Furthermore, it exposes a ""nprocs"" parameter to allow users the amount of processing units to be used for computation. A benchmark script is also included under r.neighbors/benchmark to showcase how the performance scales with ""nprocs"", using 4 generated raster maps of size 50M, 100M, 200M and 400M respectively.

Checklists before merging:

- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without OpenMP (runs in CI)
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main",True,1724,https://api.github.com/repos/OSGeo/grass/pulls/1724,https://github.com/OSGeo/grass/pull/1724,closed,508,106,16,16,4,4,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-07-14 14:18:40+00:00,2022-04-26 13:35:34+00:00,24707814.0,"285 days, 23:16:54","[{'comment_id': 857168524, 'comment_body': 'Not implemented (used). Delete.', 'comment_created': datetime.datetime(2022, 4, 24, 19, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 857207574, 'comment_body': 'Update copyright year -2022 and AS to authors.', 'comment_created': datetime.datetime(2022, 4, 25, 1, 32, 37, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 857214205, 'comment_body': 'Missing indent (to the end of the block).', 'comment_created': datetime.datetime(2022, 4, 25, 2, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 858193006, 'comment_body': 'Confusing indent (too much).', 'comment_created': datetime.datetime(2022, 4, 26, 2, 54, 27, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}]","[{'commit_sha': 'db3c2487aace596ddcb0667eb347f102b46124da', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f8351f643334115106d61096bf4fd1860623015', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f7b24b9ec8791993b2d5eed6b26bfc515f3cb3c', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '619b469360767ffff36a9a7b022759f754046da4', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '218b0cf8d29cd6bb58deeca248359fa8c5310f5e', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1d2807986a1c35be1f976ea0c6922054a01ee4f', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78b2a8c40b7243f2254d7bf9e702a7169db7ccb8', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67920c0ddba4ef95edea2d9fd9c78b60c9e21c5b', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b67df1f3d817045602103fecb4ea91e09622473', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13ea567cf61be3892e820bde2004f2e8a4a9cd48', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f166a85bde40b88c092b3f1a2db975c05c9e61e9', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd76faa57e8b97ac51340c5d874161ffc90236d3a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a640d6806b6a9aa2319ca5695d0b8a0ebaa4f6b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31a159fd1c31135b8be9299826892f419bcb4de8', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b74cbb475e49a60162c5dec7c10f42fb97558860', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d252af4aaec75a420675e1ee045959ed94e7319', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
683149511,r.mfilter: implement parallelization with OpenMP,"Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without openmp
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main",True,1708,https://api.github.com/repos/OSGeo/grass/pulls/1708,https://github.com/OSGeo/grass/pull/1708,closed,703,77,11,15,18,4,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-07-04 10:19:35+00:00,2022-01-12 19:29:15+00:00,16621780.0,"192 days, 9:09:40","[{'comment_id': 667345319, 'comment_body': 'My version of nc_basic_spm_grass7 location does not have a slope map. Can it be replaced with something else to allow testing on a basic location?', 'comment_created': datetime.datetime(2021, 7, 10, 14, 22, 15, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 669239122, 'comment_body': ""@aaronsms Slope is missing in [the basic location](https://grass.osgeo.org/sampledata/north_carolina/nc_basic_spm_grass7.zip). It can be a good idea to use the basic location for writing test scripts.\r\n\r\n@marisn Any specific reasons why you don't (cannot?) use the full nc_spm_08_grass7?"", 'comment_created': datetime.datetime(2021, 7, 14, 2, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 669686090, 'comment_body': ""I will replace 'slope' with 'lakes'."", 'comment_created': datetime.datetime(2021, 7, 14, 14, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 669688643, 'comment_body': 'Why not `elevation`? ', 'comment_created': datetime.datetime(2021, 7, 14, 14, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'b294a25a122fdfc50e5eea7c7aedc508a3bededd', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c4ac3209284bbf5c2836a2a3f4986589520c089', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a625b78907261ed822b36f55883a46f6918d0df2', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b38ca24cdc8f963c182930d11e0794c622942484', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '533442a07563c11b7a8a8e2166642b3e09467b95', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd8aa0d3893a6ed95563b897e4068874189ef65', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0d2953ccb9f54c27631fa1fea8ee0e2dbdfaac6', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f34c9f0640e2588dae505bf94f839c34ec7d93f', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2169724e0cdb028dec59d4932ec0d9fbb713120', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '588175f92339ca8721d836159ea3407aee986b5c', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a1a341f3c7089614e3a7cf8b0e4da5a24f309c5', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1e32d299af54dd5714af9a2c48fcff4bbdd6a1', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486a7315f18c35f41e9d0ee9019a14b288b39660', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b09420dac3aeff0cb8f2853538ddc3becdcabfbc', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10eadef28db69eaedbe4db0a7aa9d854b46dd1ec', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
695916077,r.resamp.filter: implement parallelization with OpenMP,"Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without OpenMP
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main",True,1759,https://api.github.com/repos/OSGeo/grass/pulls/1759,https://github.com/OSGeo/grass/pull/1759,closed,484,55,6,12,2,2,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-07-23 12:46:58+00:00,2023-01-04 21:45:20+00:00,45824302.0,"530 days, 8:58:22","[{'comment_id': 687988014, 'comment_body': 'Delete this line if not used.\r\n```\r\nmain.c:169:12: warning: ‘nprocs’ defined but not used [-Wunused-variable]\r\n static int nprocs;\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 18, 30, 5, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 687988593, 'comment_body': 'Or did you mean to use the static `nprocs` above?', 'comment_created': datetime.datetime(2021, 8, 12, 18, 30, 54, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}]","[{'commit_sha': '2a5d76cf81c68edbabc9801d5102f2ccf5f34dc9', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e94dc8453abaa5f397bf90afa5a587d5f8757ca', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '973e00e90ee8c6686cc3c52ab56d6b4b0e08f549', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a719533a1d912f46f1814d531398f02120fd0dd', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bebfa9f5a4709c9e459e5064eec9052ecf6131b', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b73d25432715932e6070e88cb24b9e2060c804c', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '247019de03e948b1da98ee2590ba3d654e6eb74a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c8f4078aa742725f010f2f4e7615b179c94eecf', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a34587b6693e59a8d1ba89bc684eec54c9bdb28', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c132a06df3eade8bdd2008f1bd85e46e1ace0c89', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5924d6dc9c236cd6f2d6523440df9a1aefbb250', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2b1a20a2c5fda0cd15edb70996e474fb613b41e', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
701481448,r.resamp.interp: implement parallelization with OpenMP,"- Update Makefile
- Add memory and nprocs parameter
- Implement parallelization

Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without OpenMP
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main
- [x] run with valgrind",True,1771,https://api.github.com/repos/OSGeo/grass/pulls/1771,https://github.com/OSGeo/grass/pull/1771,closed,496,189,6,9,2,2,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-08-02 13:44:33+00:00,2022-12-09 16:09:43+00:00,42690310.0,"494 days, 2:25:10","[{'comment_id': 681418621, 'comment_body': 'The code is correct, but how about:\r\n```\r\nif (threads != 1)\r\n    G_warning(_(""GRASS is compiled without OpenMP support. Ignoring threads setting.""));\r\nthreads = 1;\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 4, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'marisn', 'type': 'User'}, {'comment_id': 682668573, 'comment_body': ""Hmm that sounds good, I'll do that for the other modules to be parallelized as well."", 'comment_created': datetime.datetime(2021, 8, 4, 14, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}]","[{'commit_sha': '93f5abb1a449aa5ad0acb82fb1b84f88eb72d681', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0480ba9f826f442e748cea434d47e8d8aff2d581', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfc7aefb37ec791cfaa1c00f937cbc400507d4d7', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70da77cc7b3917212e496d4c3cdaa50e05416970', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea36230fbbe70bec6b1f33d3c333b7aceef6348b', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55fbcb29422e29e869fc418f3c279a0b62d93c0', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2889f908a41a1f740218e01f9bcebbe74d048550', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4138ad82609d4d588576e000e0ddfee19cb3067b', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7484189e8f65f6876bd4117248d8acda14559c25', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
700892734,r.slope.aspect: implement parallelization with OpenMP,"Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without openmp
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main",True,1767,https://api.github.com/repos/OSGeo/grass/pulls/1767,https://github.com/OSGeo/grass/pull/1767,closed,1125,416,9,19,3,2,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-08-01 11:59:32+00:00,2022-03-10 04:26:54+00:00,19067242.0,"220 days, 16:27:22","[{'comment_id': 687965829, 'comment_body': '`row = 0;` to avoid\r\n```\r\nmain.c:1076:5: warning: ‘row’ may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n     G_percent(row, nrows, 2);\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 17, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 692944581, 'comment_body': 'Opps yeap it is supposed to be `G_percent(nrows, nrows, 2);`. Fixed it.', 'comment_created': datetime.datetime(2021, 8, 20, 13, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}]","[{'commit_sha': '43824bb520c14e788d40e789d2c8ce25ecc41704', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3d9d29682ac752263426cb299892f3f3d474a23', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab3976a98ed3fb9580fe7814ceddd6be3fc34f1', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88be6d17e06fa90e73e1550672e96781750ee8d1', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7968d1ed9b8702d3b81ea841ddf430ed5738d8e2', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c91dafcaf3e9b007680712364c0783a26d204e63', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a3b5bfdd1c7a22ea8a3ddfa3bfc6df825e51f2', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4901e15fba2aae2f8e13612a1d3684e2eab483d9', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bd99d6a43e71684cb45d6033e248850ce84be9a', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ceba629e632cb5736ccea6740daa7e4facee4ac', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d6fa55b33de6409a2d12bb796aafa31b462333', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af893284b931c0fc3850f52f95ffdf758342fca', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '236ca90f05c342a6740d1edc386852ada0a8db3f', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '879d5b20d0828d63c5d775ba6ceb700d9fcdcb1a', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c31582bf8b4f13a8c5e56bb42e244606ac9e926c', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f283a8989e25ba76218cd998d096431e34b4f1de', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4137142234167c60438d18428338d03faab0d83', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f20de903346a2d709f2d6f96b1ba2d36236fa0c1', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a75ab859d03c613039afd1ef9cdf97aa75f3f686', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
703539097,r.series: implement parallelization with OpenMP,"Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run tests without OpenMP (runs in CI)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main",True,1776,https://api.github.com/repos/OSGeo/grass/pulls/1776,https://github.com/OSGeo/grass/pull/1776,closed,569,114,9,14,4,7,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-08-04 14:16:18+00:00,2022-04-26 04:28:41+00:00,22860743.0,"264 days, 14:12:23","[{'comment_id': 687923301, 'comment_body': '`row = 0;` to avoid\r\n```\r\nmain.c:600:5: warning: ‘row’ may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n     G_percent(row, nrows, 2);\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 16, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 695793828, 'comment_body': 'yeap fixed this as well. Supposed to be G_percent(nrows, nrows, 2);', 'comment_created': datetime.datetime(2021, 8, 25, 14, 11, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}, {'comment_id': 837926314, 'comment_body': '...in MB.', 'comment_created': datetime.datetime(2022, 3, 29, 21, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 856193644, 'comment_body': 'Update copyright year `-2022` and AS to authors.', 'comment_created': datetime.datetime(2022, 4, 22, 12, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'wenzeslaus', 'type': 'User'}, {'comment_id': 857616185, 'comment_body': '```suggestion\r\n(default 300 MB) can also be provided to determine the size of the buffer in MB for\r\ncomputation.\r\n```', 'comment_created': datetime.datetime(2022, 4, 25, 13, 17, 56, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 857621990, 'comment_body': '```suggestion\r\n *               Martin Wegmann <wegmann biozentrum.uni-wuerzburg.de>,\r\n *               Aaron Saw Min Sern (OpenMP parallelization)\r\n * PURPOSE:      \r\n```', 'comment_created': datetime.datetime(2022, 4, 25, 13, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}, {'comment_id': 857623339, 'comment_body': '```suggestion\r\n * COPYRIGHT:    (C) 2002-2022 by the GRASS Development Team\r\n```', 'comment_created': datetime.datetime(2022, 4, 25, 13, 25, 18, tzinfo=datetime.timezone.utc), 'commenter': 'petrasovaa', 'type': 'User'}]","[{'commit_sha': 'dc52397a9a1faaa6dc3d7981abcc0e8cc5e21a2e', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '951dd817988f3205f4d07b0ec97b65d208c44127', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1033d12bfac0690fe1e8d6df8c98f6da5931993e', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e185722db131c0569656cdc7422488907f3c30a0', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4f92b792bf7ed1fb8513b3ac31d2e8a17d77b56', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6840593f2c27f87d8922eff5448aeb2a31597444', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5deeea232a969f250cb49f79ed9f0f0333d2714f', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd0fd41e2342eac3c209ff8b9493cbed3b9379c', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2adaea5f1f9000cfb27ac81774015f637b48240', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cefb8f9e4003d7a91d4266f56ccf1ff23d561a6', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab18cc868bc094d2e7c53bd9bed70aeb18886554', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc3aad4ae2f237efb109e6f1f79accc22c1b2f32', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cb9c3455b91450c33c6c256cb7eb6163e7ee896', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4840679fd4345f449ad56099adf5a65580fc6660', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4
707068372,r.patch: implement parallelization with OpenMP,"Checklists before merging:
- [x] code review
- [x] CI passes
- [x] performance section in documentation
- [x] confirm values in test are from the old version (run new tests with old code)
- [x] run tests without openmp
- [x] visual check of results with custom data (""looks good"" with non NC SPM dataset)
- [x] check that it works with really large data (16B cells)
- [x] run multi-core benchmark (no degraded performance with many threads)
- [x] run one core benchmark on many resolutions or many cell
- [x] rebase to main",True,1782,https://api.github.com/repos/OSGeo/grass/pulls/1782,https://github.com/OSGeo/grass/pull/1782,closed,352,39,8,9,9,2,3,0,"[{'name': 'enhancement'}, {'name': 'gsoc'}, {'name': 'raster'}]",2021-08-10 06:33:35+00:00,2022-03-04 04:25:35+00:00,17790720.0,"205 days, 21:52:00","[{'comment_id': 687900932, 'comment_body': '`row = 0;` to avoid\r\n```\r\nmain.c:250:5: warning: ‘row’ may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n     G_percent(row, nrows, 2);\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 16, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'HuidaeCho', 'type': 'User'}, {'comment_id': 692949349, 'comment_body': 'Yeap fixed it! Supposed to be `G_percent(nrows, nrows, 2)`.', 'comment_created': datetime.datetime(2021, 8, 20, 13, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aaronsms', 'type': 'User'}]","[{'commit_sha': '362f8b55a030a1bfe54a437e16aa9104222891bc', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d7bf498f9a37b6c28305a7afbae153e555566a6', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a95c891a29193a181c5dda42c2c7bfe0d2d8f0', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45dac96a2aa047608cc27928a32009e855a40aa8', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c56f0d71a60c137c37e38f86b68e4fddfc56a38', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c74a047de0845388f960025f12aaff7118eecdd', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e857a97049138255d32fdd2a9e7393b898bafdd', 'committer_username': 'aaronsms', 'committer_name': 'Aaron', 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 27, 15, 49, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00e102d6f6549d7d3b797ee52f6d8ed63fdbf000', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d60c5b0518bace2cb2e3e9fb8e1a6b59ded7ac5', 'committer_username': 'petrasovaa', 'committer_name': 'Anna Petrasova', 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 5, 23, 21, 14, tzinfo=datetime.timezone.utc)}]",Aaron,58265908,,User,,4,,2,4

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
187247007,grass,OSGeo/grass,C,297,816,46,123,22887,534,18,123,"[{'id': 1145739733, 'number': 2683, 'closed': datetime.datetime(2023, 11, 17, 21, 41, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 5, 4, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 30043933.0, 'time_delta': '347 days, 17:32:13', 'additions': 297, 'deletions': 157, 'state': 'closed'}, {'id': 707068372, 'number': 1782, 'closed': datetime.datetime(2022, 3, 4, 4, 25, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 6, 33, 35, tzinfo=datetime.timezone.utc), 'time_taken': 17790720.0, 'time_delta': '205 days, 21:52:00', 'additions': 352, 'deletions': 39, 'state': 'closed'}, {'id': 703539097, 'number': 1776, 'closed': datetime.datetime(2022, 4, 26, 4, 28, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 14, 16, 18, tzinfo=datetime.timezone.utc), 'time_taken': 22860743.0, 'time_delta': '264 days, 14:12:23', 'additions': 569, 'deletions': 114, 'state': 'closed'}, {'id': 701559302, 'number': 1772, 'closed': datetime.datetime(2021, 8, 5, 13, 39, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 15, 18, 45, tzinfo=datetime.timezone.utc), 'time_taken': 253251.0, 'time_delta': '2 days, 22:20:51', 'additions': 391, 'deletions': 387, 'state': 'closed'}, {'id': 701481448, 'number': 1771, 'closed': datetime.datetime(2022, 12, 9, 16, 9, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 13, 44, 33, tzinfo=datetime.timezone.utc), 'time_taken': 42690310.0, 'time_delta': '494 days, 2:25:10', 'additions': 496, 'deletions': 189, 'state': 'closed'}, {'id': 700892734, 'number': 1767, 'closed': datetime.datetime(2022, 3, 10, 4, 26, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 11, 59, 32, tzinfo=datetime.timezone.utc), 'time_taken': 19067242.0, 'time_delta': '220 days, 16:27:22', 'additions': 1125, 'deletions': 416, 'state': 'closed'}, {'id': 698465685, 'number': 1765, 'closed': datetime.datetime(2021, 7, 28, 17, 5, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 8, 11, 36, tzinfo=datetime.timezone.utc), 'time_taken': 32029.0, 'time_delta': '8:53:49', 'additions': 935, 'deletions': 922, 'state': 'closed'}, {'id': 695916077, 'number': 1759, 'closed': datetime.datetime(2023, 1, 4, 21, 45, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 12, 46, 58, tzinfo=datetime.timezone.utc), 'time_taken': 45824302.0, 'time_delta': '530 days, 8:58:22', 'additions': 484, 'deletions': 55, 'state': 'closed'}, {'id': 692405338, 'number': 1734, 'closed': datetime.datetime(2021, 7, 29, 1, 54, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 8, 48, 56, tzinfo=datetime.timezone.utc), 'time_taken': 839157.0, 'time_delta': '9 days, 17:05:57', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 689956850, 'number': 1724, 'closed': datetime.datetime(2022, 4, 26, 13, 35, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 14, 18, 40, tzinfo=datetime.timezone.utc), 'time_taken': 24707814.0, 'time_delta': '285 days, 23:16:54', 'additions': 508, 'deletions': 106, 'state': 'closed'}, {'id': 683149511, 'number': 1708, 'closed': datetime.datetime(2022, 1, 12, 19, 29, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 10, 19, 35, tzinfo=datetime.timezone.utc), 'time_taken': 16621780.0, 'time_delta': '192 days, 9:09:40', 'additions': 703, 'deletions': 77, 'state': 'closed'}, {'id': 673841860, 'number': 1663, 'closed': None, 'created': datetime.datetime(2021, 6, 19, 8, 2, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 305, 'deletions': 0, 'state': 'open'}, {'id': 672521311, 'number': 1654, 'closed': datetime.datetime(2021, 7, 16, 4, 28, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 11, 9, 52, tzinfo=datetime.timezone.utc), 'time_taken': 2481508.0, 'time_delta': '28 days, 17:18:28', 'additions': 294, 'deletions': 89, 'state': 'closed'}, {'id': 667828383, 'number': 1634, 'closed': datetime.datetime(2022, 8, 30, 13, 35, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 8, 12, 5, tzinfo=datetime.timezone.utc), 'time_taken': 38467420.0, 'time_delta': '445 days, 5:23:40', 'additions': 494, 'deletions': 117, 'state': 'closed'}, {'id': 610318320, 'number': 1514, 'closed': datetime.datetime(2021, 5, 6, 10, 33, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 4, 30, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2527408.0, 'time_delta': '29 days, 6:03:28', 'additions': 141, 'deletions': 22, 'state': 'closed'}]"
