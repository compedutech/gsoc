pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1373197090,"Resurrect: rustc_target: Add alignment to indirectly-passed by-value types, correcting the alignment of byval on x86 in the process.","Same as #111551, which I [accidentally closed](https://github.com/rust-lang/rust/pull/111551#issuecomment-1571222612) :/

---

This resurrects PR #103830, which has sat idle for a while.

Beyond #103830, this also:
- fixes byval alignment for types containing vectors on Darwin (see `tests/codegen/align-byval-vector.rs`)
- fixes byval alignment for overaligned types on x86 Windows (see `tests/codegen/align-byval.rs`)
- fixes ABI for types with 128bit requested alignment on ARM64 Linux (see `tests/codegen/aarch64-struct-align-128.rs`)

r? @nikic

---

@pcwalton's original PR description is reproduced below:

Commit 88e4d2c from five years ago removed
support for alignment on indirectly-passed arguments because of problems with
the `i686-pc-windows-msvc` target. Unfortunately, the `memcpy` optimizations I
recently added to LLVM 16 depend on this to forward `memcpy`s. This commit
attempts to fix the problems with `byval` parameters on that target and now
correctly adds the `align` attribute.

The problem is summarized in [this comment] by @eddyb. Briefly, 32-bit x86 has
special alignment rules for `byval` parameters: for the most part, their
alignment is forced to 4. This is not well-documented anywhere but in the Clang
source. I looked at the logic in Clang `TargetInfo.cpp` and tried to replicate
it here. The relevant methods in that file are
`X86_32ABIInfo::getIndirectResult()` and
`X86_32ABIInfo::getTypeStackAlignInBytes()`. The `align` parameter attribute
for `byval` parameters in LLVM must match the platform ABI, or miscompilations
will occur. Note that this doesn't use the approach suggested by eddyb, because
I felt it was overkill to store the alignment in `on_stack` when special
handling is really only needed for 32-bit x86.

As a side effect, this should fix #80127, because it will make the `align`
parameter attribute for `byval` parameters match the platform ABI on LLVM
x86-64.

[this comment]: #80822 (comment)",True,112157,https://api.github.com/repos/rust-lang/rust/pulls/112157,https://github.com/rust-lang/rust/pull/112157,closed,1251,93,32,26,44,8,4,1,"[{'name': 'T-compiler'}, {'name': 'S-waiting-on-bors'}, {'name': 'merged-by-bors'}, {'name': 'perf-regression'}]",2023-06-01 02:39:03+00:00,2023-07-15 17:29:21+00:00,3855018.0,"44 days, 14:50:18","[{'comment_id': 1225475648, 'comment_body': 'On further consideration, I\'m a bit worried about the alignment mismatch with the source pointer here. LangRef says:\r\n> The byval attribute also supports specifying an alignment with the align attribute. It indicates the alignment of the stack slot to form and the known alignment of the pointer specified to the call site. If the alignment is not specified, then the code generator makes a target-specific assumption.\r\n\r\nIf I\'m understanding what is going to happen here correctly, then the pointer we\'re passing to the call may have alignment lower than 4, which would violate the ""the known alignment of the pointer specified to the call site"" part of this.\r\n\r\nClang does specify `align 4` on the byval argument, but it also uses `align 4` for the corresponding alloca: https://clang.godbolt.org/z/cW1cPrnsr However, Rust uses `align 2`  for the `alloca`: https://rust.godbolt.org/z/db7qor7es So I think we\'ll get a mismatch here.', 'comment_created': datetime.datetime(2023, 6, 10, 17, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1225499682, 'comment_body': ""And this isn't working on accident, clang will also insert an explicit memcpy to a higher-aligned stack slot if necessary: https://clang.godbolt.org/z/5Yofxz3We\r\n\r\nI believe this is handled by the code starting at https://github.com/llvm/llvm-project/blob/0e7cfa59ebe9d87029ebf75bb4a05316dd3c3d63/clang/lib/CodeGen/CGCall.cpp#L5060 (this is case 2).\r\n\r\nI think we would need something like this as well."", 'comment_created': datetime.datetime(2023, 6, 10, 18, 11, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1225515649, 'comment_body': ""Yeah, we already have code to do this when passing packed struct fields. I'll extend it to this case as well.\r\n\r\n~I also plan to change `on_stack` to `Option<Align>` as eddyb originally suggested, since implicitly relying on `pointee_align` feels a bit more sketchy with this change.~ Edit: this would require changing every callsite that passes `None` to specify an alignment, and I don't want to risk changing behavior for other targets, so I'll leave it as is for now."", 'comment_created': datetime.datetime(2023, 6, 10, 18, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'erikdesjardins', 'type': 'User'}, {'comment_id': 1225823122, 'comment_body': 'Can you please also add a test for a `#[repr(transparent)]` struct around `ForceAlign8`?', 'comment_created': datetime.datetime(2023, 6, 11, 14, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1225876817, 'comment_body': ""Added, and fixed `repr(transparent)` (which I'm assuming should be the same as `ForceAlign8`), and added some other test cases"", 'comment_created': datetime.datetime(2023, 6, 11, 17, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'erikdesjardins', 'type': 'User'}, {'comment_id': 1225904163, 'comment_body': 'Hm, I wonder whether this is a bug in clang. It looks like MSVC uses the byval ABI for `__declspec(align(1))`: https://clang.godbolt.org/z/EEGE7cGEe', 'comment_created': datetime.datetime(2023, 6, 11, 19, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1225919722, 'comment_body': ""Ah, I was testing pack with MSVC too (and thankfully there's not another behavior change there, as your link shows), but I missed checking `align(1)`. I guess Clang has to be wrong here since MSVC basically dictates the Windows ABI, we just have to reverse engineer and replicate it...\r\n\r\nI'll change it to only pass by ref if the requested alignment is >4, which seems to be MSVC behavior.\r\n\r\nOpened https://github.com/llvm/llvm-project/issues/63257"", 'comment_created': datetime.datetime(2023, 6, 11, 20, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'erikdesjardins', 'type': 'User'}, {'comment_id': 1230356679, 'comment_body': ""Any bets on which of our targets has the wrong ABI for this?\r\n\r\nWe've seen weird special cases from -msvc and -gnu already, so I think it's time for Apple to get in the ring.\r\n\r\nEdit: just realized that the first special case I added was for Darwin vectors. Maybe all is well now. Either that or it'll be `riscv32-pc-sun-solaris`"", 'comment_created': datetime.datetime(2023, 6, 15, 2, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'erikdesjardins', 'type': 'User'}]","[{'commit_sha': '0becc89d4a75d14571b02fb34ec1e3a45c9fb9dc', 'committer_username': 'pcwalton', 'committer_name': 'Patrick Walton', 'committer_email': 'pcwalton@mimiga.net', 'commit_date': datetime.datetime(2009, 11, 25, 4, 40, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '102292655b896135be2970cc9b47b26ec3edea55', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be1d4e3e0b97ac07d6a76356a8714c0eaa39610b', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a07eb0abbd24e21716d476d7c363270c907f5d2e', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f7d3337d62927fb6211ce2200c4e0700169e674', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdaaf86cc03421dc96d755bc9e6c5984b124028d', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84ff2e3d1cf8a2fb55ff639e635b5ab3b8283428', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f4472e45101dae008f375f6a2a3162500e6bc21', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9d26aee6d2c67374cf9961b25a227d5d18d6c0', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d18929fbd343cd46e8a8216c0c8d67f9763216', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ec90f6f14a5c2c8cc454e78f87b7fc6347fe2f8', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7089321c6deabb3c25cf0ec829ca209f77b8ee5a', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed317e4a479b4bacf102188445d03fabfb81a2c5', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '209ed071bab1cad917c825c55f3a83feb72cd664', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e76446a9ff834b402c352b495cc1bb30c30d3cb', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f704396c0e26fd6de1cfb4e03e1749e9829a11ea', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65d11b5c6562c57d61bf0db88736da06b8b77423', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00b3eca0dfab4ccebbfb6614b83235cc82f9245f', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c1dbc3aec35daca455c9ba7e440651bcf16069a', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2591c30eaf30425812f42beb47bd2615a533e961', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e933b4e26947b04da70589110dacbdb2461e27d', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1e764cb3bc961a4395164a36c4e0cfd57e681a1', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c858d345b3028c7c1b66f36291baea9ce52cad5f', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecf2390fb0791f5f96507c11ed1f3b331f5e8b73', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f297f3200ffe3cb921a04c6b4eea944a72207eb4', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2daacf5af965090b885287f1d40e13ff5db724cf', 'committer_username': 'erikdesjardins', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2014, 5, 22, 20, 18, 14, tzinfo=datetime.timezone.utc)}]",,7673145,,User,,78,,0,17
1509071382,[SimplifyCFG] handle monotonic wrapped case for D150943,"This is a follow-up on the miscompile for wrapping the flag for the switch to the lookup table on SimplifyCFG. Checking the switch results' monotonicity isn't sufficient to say linear map calculation has no wrapping. Monotonicity is only necessary, and further checking whether wrapping happens on the maximum index is required to be sufficient.
For example( @mikaelholmen  gave ), https://alive2.llvm.org/ce/z/So_fzw
Total linear map `(-2, -1, 1, 2)  |→ (-4, -2, 0, 2)` is monotonic, but actual calculation contains wrapping `(-2, -1, 1, 2)  |→ (0, 1, 2, 3) (*2) |→ (0, 2, 4(wrapped), 6(wrapped)) (-4)|→ (-4, -2, 0, 2).`


Also on the Linear map calculation, checking the multiplication wrapping with monotonicity is enough.(If the addition is only wrapped not with multiplication, contradicts with monotonicity. )
",True,65882,https://api.github.com/repos/llvm/llvm-project/pulls/65882,https://github.com/llvm/llvm-project/pull/65882,closed,37,4,2,1,9,10,1,0,[{'name': 'llvm:transforms'}],2023-09-10 08:38:08+00:00,2023-09-14 12:26:11+00:00,359283.0,"4 days, 3:48:03","[{'comment_id': 1321018191, 'comment_body': 'Not sure if you really want to leave those ""; Assume 1"" comments etc that I made in the testcase when you submit it?', 'comment_created': datetime.datetime(2023, 9, 11, 5, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mikaelholmen', 'type': 'User'}, {'comment_id': 1321018327, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 9, 11, 5, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mikaelholmen', 'type': 'User'}, {'comment_id': 1321018444, 'comment_body': 'and here', 'comment_created': datetime.datetime(2023, 9, 11, 5, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mikaelholmen', 'type': 'User'}, {'comment_id': 1321018564, 'comment_body': 'and here', 'comment_created': datetime.datetime(2023, 9, 11, 5, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mikaelholmen', 'type': 'User'}, {'comment_id': 1321343471, 'comment_body': 'Oh, thanks! Sorry, that was just my copy-paste residue of your explanation. Removed.', 'comment_created': datetime.datetime(2023, 9, 11, 10, 37, 49, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1322292949, 'comment_body': 'NMon -> NonMonotonic would be slightly clearer imho.', 'comment_created': datetime.datetime(2023, 9, 12, 2, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1322293323, 'comment_body': 'You can directly use `(void)` on the return value, no need to store it into an unused variable.', 'comment_created': datetime.datetime(2023, 9, 12, 2, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1322294244, 'comment_body': 'Is the sadd_ov check here needed as well? If yes, is it possible to add a test case that needs it?', 'comment_created': datetime.datetime(2023, 9, 12, 2, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1322374861, 'comment_body': ""Thanks! Thinking carefully, if the first multiplication isn't wrapped, monotonicity is enough to see addition isn't wrapped. Remove Addition Wrap check."", 'comment_created': datetime.datetime(2023, 9, 12, 4, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1325539876, 'comment_body': 'MayMWrap -> MayWrap or MayMulWrap', 'comment_created': datetime.datetime(2023, 9, 14, 8, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}]","[{'commit_sha': '51affb0b68ff11a335f231a754656309ebd7c351', 'committer_username': 'khei4', 'committer_name': 'Kohei Asano', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 17, 5, 1, 33, tzinfo=datetime.timezone.utc)}]",Kohei Asano,32860920,,User,,63,,54,30
1435838799,Resurrect: rustc_llvm: Add a -Z `print-codegen-stats` option to expose LLVM statistics.,"This resurrects PR https://github.com/rust-lang/rust/pull/104000, which has sat idle for a while. And I want to see the effect of stack-move optimizations on LLVM (like https://reviews.llvm.org/D153453) :).

I have applied the changes requested by @oli-obk and @nagisa  https://github.com/rust-lang/rust/pull/104000#discussion_r1014625377 and https://github.com/rust-lang/rust/pull/104000#discussion_r1014642482 in the latest commits.

r? @oli-obk 

-----

LLVM has a neat [statistics](https://llvm.org/docs/ProgrammersManual.html#the-statistic-class-stats-option) feature that tracks how often optimizations kick in. It's very handy for optimization work. Since we expose the LLVM pass timings, I thought it made sense to expose the LLVM statistics too.



-----
(Edit: fix broken link
(Edit2: fix segmentation fault and use malloc 

If `rustc` is built with 
```toml
[llvm]
assertions = true
```
Then you can see like 
```
rustc +stage1 -Z print-codegen-stats -C opt-level=3  tmp.rs
===-------------------------------------------------------------------------===
                          ... Statistics Collected ...
===-------------------------------------------------------------------------===
         3 aa                           - Number of MayAlias results
       193 aa                           - Number of MustAlias results
       531 aa                           - Number of NoAlias results
...
```

And the current default build emits only 
```
$ rustc +stage1 -Z print-codegen-stats -C opt-level=3  tmp.rs
===-------------------------------------------------------------------------===
                          ... Statistics Collected ...
===-------------------------------------------------------------------------===
$ 
```
This might be better to emit the message to tell assertion flag necessity, but now I can't find how to do that...
",True,113723,https://api.github.com/repos/rust-lang/rust/pulls/113723,https://github.com/rust-lang/rust/pull/113723,closed,69,5,10,4,19,15,2,1,"[{'name': 'T-compiler'}, {'name': 'S-waiting-on-bors'}]",2023-07-15 12:41:59+00:00,2023-07-21 07:24:26+00:00,499347.0,"5 days, 18:42:27","[{'comment_id': 1265315629, 'comment_body': 'I would do something like this:\r\n```suggestion\r\nextern ""C"" const char *LLVMRustPrintPassTimings(size_t *Len) {\r\n  std::string buf;\r\n  raw_string_ostream SS(buf);\r\n  TimerGroup::printAll(SS);\r\n  SS.flush();\r\n  *Len = bug.length();\r\n  char *CStr = malloc(*Len);\r\n  memcpy(CStr, buf.c_str(), *Len);\r\n  return CStr;\r\n}\r\n```\r\nAnd then use from_raw_parts on the Rust side to create he `[u8]` slice.', 'comment_created': datetime.datetime(2023, 7, 17, 12, 55, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1265317163, 'comment_body': 'We expect stats to be valid UTF-8, so I would use `str::from_utf8` here and avoid making a second copy of the string.', 'comment_created': datetime.datetime(2023, 7, 17, 12, 56, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1267645765, 'comment_body': 'It seems better! I now know that [char is always 1 byte](https://en.cppreference.com/w/c/language/sizeof) and, as you discussed, this can save 1 byte! Thanks!', 'comment_created': datetime.datetime(2023, 7, 19, 7, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1267733905, 'comment_body': ""Nothing else in this file uses `usize`, please use `size_t` to make sure we don't rely on funny Rust<->C differences"", 'comment_created': datetime.datetime(2023, 7, 19, 8, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'oli-obk', 'type': 'User'}, {'comment_id': 1267735547, 'comment_body': 'This creates a slice that refers to the data from `cstr`. The next line frees this data, making the Rust slice dangling.', 'comment_created': datetime.datetime(2023, 7, 19, 8, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'oli-obk', 'type': 'User'}, {'comment_id': 1267738386, 'comment_body': ""Also don't even need utf8 validation, you could just write the bytes directly to stdout:\r\n\r\n```rust\r\nstd::io::stdout().write_all(timings).unwrap();\r\n```\r\n\r\nthis way you don't have the issue of preserving the data beyond the `free`"", 'comment_created': datetime.datetime(2023, 7, 19, 8, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'oli-obk', 'type': 'User'}, {'comment_id': 1267738593, 'comment_body': 'same UB here', 'comment_created': datetime.datetime(2023, 7, 19, 8, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'oli-obk', 'type': 'User'}, {'comment_id': 1267824891, 'comment_body': ""> This creates a slice that refers to the data from cstr. The next line frees this data, making the Rust slice dangling.\r\n\r\nYeah, that was a thing! \r\n\r\n> Also don't even need utf8 validation, you could just write the bytes directly to stdout:\r\n> \r\n> ```rust\r\n> std::io::stdout().write_all(timings).unwrap();\r\n> ```\r\n> \r\n> this way you don't have the issue of preserving the data beyond the `free`\r\n\r\nSeems reasonable! Thank you for the feedback! "", 'comment_created': datetime.datetime(2023, 7, 19, 9, 35, 16, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1267826491, 'comment_body': 'Oh, thanks! I should have seen around.', 'comment_created': datetime.datetime(2023, 7, 19, 9, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1268960341, 'comment_body': 'write_all is only necessary to skip utf8 validation below, here you can just print\r\n\r\n```suggestion\r\n                println!(""failed to get pass timings"");\r\n```', 'comment_created': datetime.datetime(2023, 7, 20, 5, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'oli-obk', 'type': 'User'}, {'comment_id': 1268970844, 'comment_body': 'Thanks! Applied and rebased.', 'comment_created': datetime.datetime(2023, 7, 20, 6, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1268998794, 'comment_body': ""There's the same situation below which you did not address yet"", 'comment_created': datetime.datetime(2023, 7, 20, 6, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'oli-obk', 'type': 'User'}, {'comment_id': 1269007522, 'comment_body': 'Oh, sorry... I applied.', 'comment_created': datetime.datetime(2023, 7, 20, 6, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}, {'comment_id': 1269027915, 'comment_body': 'This should use memcpy, not strcpy.', 'comment_created': datetime.datetime(2023, 7, 20, 7, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nikic', 'type': 'User'}, {'comment_id': 1269078292, 'comment_body': 'Thanks! I missed it you gave...', 'comment_created': datetime.datetime(2023, 7, 20, 7, 55, 8, tzinfo=datetime.timezone.utc), 'commenter': 'khei4', 'type': 'User'}]","[{'commit_sha': '2d47816cbaebb3b8f400b11fa122feae00fd5c58', 'committer_username': 'pcwalton', 'committer_name': 'Patrick Walton', 'committer_email': 'pcwalton@mimiga.net', 'commit_date': datetime.datetime(2009, 11, 25, 4, 40, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '138f522b590492d1ef80f1483382a2a678dec7d9', 'committer_username': 'pcwalton', 'committer_name': 'Patrick Walton', 'committer_email': 'pcwalton@mimiga.net', 'commit_date': datetime.datetime(2009, 11, 25, 4, 40, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d307c482271ea3575a13b6c04222911e7706189', 'committer_username': 'khei4', 'committer_name': 'Kohei Asano', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 17, 5, 1, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7bf20dfdcbedbba05445035bcabd4f706ba9e42', 'committer_username': 'khei4', 'committer_name': 'Kohei Asano', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 17, 5, 1, 33, tzinfo=datetime.timezone.utc)}]",Kohei Asano,32860920,,User,,63,,54,30
1448172101,Update to LLVM 17,"Expected LLVM 17.0.0 release date: Sep 5th
Rust 1.73 release date: Oct 5th

Compatibility changes in this PR:
 - Drop LLVM_RUSTLLVM check for target-cpu table, which no longer requires a patch with LLVM 17.
 - Update powerpc data layouts, which now include function alignment information. As usual, downgrade for older LLVM versions.
 - Adjust the stack-protector.rs test so that the stack smashing does not get optimized away.
 - Adjust path of crtbegin.c and crtend.c in compiler-rt.
 - Updated dist-riscv64-linux to use binutils 2.36 in order to recognize the zicsr feature, which is no longer part of the base ISA.
 - Fixed symlink for asm include directory on dist-various-2. We should use `/usr/include/x86_64-linux-gnu/asm` for the host, rather than `/usr/include/asm-generic`.

Upstream patches:
 - [x] https://reviews.llvm.org/D156525 (backported)

Perf run: https://perf.rust-lang.org/compare.html?start=f239bb6bea94d16d902c36d72b5cabdddefb3cab&end=8030d71a95a3ea79f5fc95232c32f9b78effb92d&stat=instructions:u

Fixes #109671.

Successful: dist-x86_64-linux, dist-aarch64-linux, dist-s390x-linux, dist-powerpc-linux, armhf-gnu, wasm32",True,114048,https://api.github.com/repos/rust-lang/rust/pulls/114048,https://github.com/rust-lang/rust/pull/114048,closed,38,27,25,8,73,0,7,1,"[{'name': 'A-testsuite'}, {'name': 'T-compiler'}, {'name': 'relnotes'}, {'name': 'T-bootstrap'}, {'name': 'S-waiting-on-bors'}, {'name': 'T-infra'}, {'name': 'merged-by-bors'}]",2023-07-25 10:32:47+00:00,2023-08-08 00:26:14+00:00,1173207.0,"13 days, 13:53:27",[],"[{'commit_sha': '8c1c7d37b29d72bad1f218798d121074918e9616', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '055dd282c5d17af5495ad125a08ec6b9d66062f1', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad7ea8b7e690e6000006b6fde630a2c8c4385019', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01cdc505d98b338eb5b28fb03e65f8d1d1731bd6', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5be397441ee0061b0d1437689b47b8ff18221460', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d37c2befb8d6b1ff1ec9451ddded1f6f5398b7b', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec599192737a593d9e0242f387b1de614311c2d4', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78678336527cdbabaa41e5e92e6645ed712b4160', 'committer_username': 'nikic', 'committer_name': 'Nikita Popov', 'committer_email': 'github@npopov.com', 'commit_date': datetime.datetime(2010, 3, 4, 21, 22, 25, tzinfo=datetime.timezone.utc)}]",Nikita Popov,216080,github@npopov.com,User,,108,,25,6155

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
724712,rust,rust-lang/rust,Rust,12414,96114,1478,6869,263943,10146,6,619,"[{'id': 2015954387, 'number': 129027, 'closed': None, 'created': datetime.datetime(2024, 8, 12, 22, 11, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 60, 'deletions': 333, 'state': 'open'}, {'id': 1901965563, 'number': 125949, 'closed': None, 'created': datetime.datetime(2024, 6, 4, 2, 10, 59, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 0, 'deletions': 34, 'state': 'open'}, {'id': 1885787611, 'number': 125472, 'closed': datetime.datetime(2024, 5, 26, 0, 38, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 24, 2, 56, 31, tzinfo=datetime.timezone.utc), 'time_taken': 164532.0, 'time_delta': '1 day, 21:42:12', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 1775892351, 'number': 122619, 'closed': datetime.datetime(2024, 4, 3, 22, 21, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 17, 4, 46, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1532075.0, 'time_delta': '17 days, 17:34:35', 'additions': 476, 'deletions': 89, 'state': 'closed'}, {'id': 1774933596, 'number': 122567, 'closed': datetime.datetime(2024, 3, 18, 19, 30, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 15, 20, 4, 50, tzinfo=datetime.timezone.utc), 'time_taken': 257162.0, 'time_delta': '2 days, 23:26:02', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1773212220, 'number': 122522, 'closed': datetime.datetime(2024, 3, 15, 1, 11, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 15, 0, 20, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3058.0, 'time_delta': '0:50:58', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 1771054284, 'number': 122462, 'closed': datetime.datetime(2024, 5, 4, 1, 34, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 13, 23, 16, tzinfo=datetime.timezone.utc), 'time_taken': 4414735.0, 'time_delta': '51 days, 2:18:55', 'additions': 8, 'deletions': 5, 'state': 'closed'}, {'id': 1764845007, 'number': 122325, 'closed': None, 'created': datetime.datetime(2024, 3, 11, 4, 13, 52, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 60, 'deletions': 21, 'state': 'open'}, {'id': 1764780928, 'number': 122320, 'closed': datetime.datetime(2024, 3, 11, 19, 0, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 11, 2, 58, 31, tzinfo=datetime.timezone.utc), 'time_taken': 57701.0, 'time_delta': '16:01:41', 'additions': 104, 'deletions': 17, 'state': 'closed'}, {'id': 1764604832, 'number': 122313, 'closed': datetime.datetime(2024, 3, 11, 1, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 10, 21, 36, 25, tzinfo=datetime.timezone.utc), 'time_taken': 12618.0, 'time_delta': '3:30:18', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1763754418, 'number': 122212, 'closed': datetime.datetime(2024, 3, 15, 2, 3, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 8, 22, 48, 6, tzinfo=datetime.timezone.utc), 'time_taken': 530096.0, 'time_delta': '6 days, 3:14:56', 'additions': 221, 'deletions': 75, 'state': 'closed'}, {'id': 1758000790, 'number': 122053, 'closed': datetime.datetime(2024, 4, 24, 5, 2, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 6, 2, 5, 12, tzinfo=datetime.timezone.utc), 'time_taken': 4244223.0, 'time_delta': '49 days, 2:57:03', 'additions': 234, 'deletions': 226, 'state': 'closed'}, {'id': 1757917368, 'number': 122051, 'closed': datetime.datetime(2024, 3, 6, 23, 54, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 6, 0, 14, 41, tzinfo=datetime.timezone.utc), 'time_taken': 85194.0, 'time_delta': '23:39:54', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1757911613, 'number': 122050, 'closed': datetime.datetime(2024, 3, 11, 6, 44, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 6, 0, 7, 3, tzinfo=datetime.timezone.utc), 'time_taken': 455865.0, 'time_delta': '5 days, 6:37:45', 'additions': 329, 'deletions': 132, 'state': 'closed'}, {'id': 1757841878, 'number': 122048, 'closed': datetime.datetime(2024, 3, 8, 4, 14, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 5, 23, 15, 7, tzinfo=datetime.timezone.utc), 'time_taken': 190747.0, 'time_delta': '2 days, 4:59:07', 'additions': 88, 'deletions': 9, 'state': 'closed'}, {'id': 1744767082, 'number': 121668, 'closed': datetime.datetime(2024, 3, 13, 17, 32, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 27, 5, 18, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1339996.0, 'time_delta': '15 days, 12:13:16', 'additions': 222, 'deletions': 19, 'state': 'closed'}, {'id': 1744688925, 'number': 121665, 'closed': datetime.datetime(2024, 3, 4, 0, 36, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 27, 3, 52, 58, tzinfo=datetime.timezone.utc), 'time_taken': 506600.0, 'time_delta': '5 days, 20:43:20', 'additions': 135, 'deletions': 189, 'state': 'closed'}, {'id': 1742057697, 'number': 121577, 'closed': datetime.datetime(2024, 3, 6, 2, 7, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 25, 6, 46, 21, tzinfo=datetime.timezone.utc), 'time_taken': 847281.0, 'time_delta': '9 days, 19:21:21', 'additions': 268, 'deletions': 333, 'state': 'closed'}, {'id': 1698050587, 'number': 120411, 'closed': datetime.datetime(2024, 2, 27, 11, 2, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 27, 4, 24, 39, tzinfo=datetime.timezone.utc), 'time_taken': 2702247.0, 'time_delta': '31 days, 6:37:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1669894465, 'number': 119758, 'closed': datetime.datetime(2024, 1, 9, 16, 47, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 9, 2, 42, 29, tzinfo=datetime.timezone.utc), 'time_taken': 50705.0, 'time_delta': '14:05:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1458885640, 'number': 114350, 'closed': datetime.datetime(2023, 8, 4, 9, 6, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 23, 24, 1, tzinfo=datetime.timezone.utc), 'time_taken': 207720.0, 'time_delta': '2 days, 9:42:00', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 1445047782, 'number': 113936, 'closed': datetime.datetime(2023, 7, 22, 3, 43, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 21, 22, 13, 1, tzinfo=datetime.timezone.utc), 'time_taken': 19828.0, 'time_delta': '5:30:28', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1387364153, 'number': 112516, 'closed': datetime.datetime(2023, 6, 27, 17, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 11, 4, 6, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1432054.0, 'time_delta': '16 days, 13:47:34', 'additions': 19, 'deletions': 15, 'state': 'closed'}, {'id': 1373197090, 'number': 112157, 'closed': datetime.datetime(2023, 7, 15, 17, 29, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 2, 39, 3, tzinfo=datetime.timezone.utc), 'time_taken': 3855018.0, 'time_delta': '44 days, 14:50:18', 'additions': 1251, 'deletions': 93, 'state': 'closed'}, {'id': 1358072564, 'number': 111807, 'closed': datetime.datetime(2023, 5, 23, 12, 47, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 20, 23, 46, 17, tzinfo=datetime.timezone.utc), 'time_taken': 219692.0, 'time_delta': '2 days, 13:01:32', 'additions': 84, 'deletions': 10, 'state': 'closed'}, {'id': 1349679522, 'number': 111551, 'closed': datetime.datetime(2023, 6, 1, 2, 11, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 14, 2, 2, 52, tzinfo=datetime.timezone.utc), 'time_taken': 1555697.0, 'time_delta': '18 days, 0:08:17', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1224323949, 'number': 107552, 'closed': datetime.datetime(2023, 2, 2, 22, 56, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 6, 2, 36, tzinfo=datetime.timezone.utc), 'time_taken': 147235.0, 'time_delta': '1 day, 16:53:55', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1214538953, 'number': 107248, 'closed': datetime.datetime(2023, 1, 26, 9, 14, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 24, 5, 10, 42, tzinfo=datetime.timezone.utc), 'time_taken': 187403.0, 'time_delta': '2 days, 4:03:23', 'additions': 229, 'deletions': 197, 'state': 'closed'}, {'id': 1185626201, 'number': 106474, 'closed': datetime.datetime(2023, 1, 6, 18, 16, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 5, 0, 27, 33, tzinfo=datetime.timezone.utc), 'time_taken': 150510.0, 'time_delta': '1 day, 17:48:30', 'additions': 31, 'deletions': 28, 'state': 'closed'}, {'id': 1159598426, 'number': 105578, 'closed': datetime.datetime(2022, 12, 14, 22, 24, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 11, 22, 34, 30, tzinfo=datetime.timezone.utc), 'time_taken': 258604.0, 'time_delta': '2 days, 23:50:04', 'additions': 32, 'deletions': 5, 'state': 'closed'}, {'id': 1158378930, 'number': 105545, 'closed': datetime.datetime(2023, 8, 1, 21, 27, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 11, 1, 29, 30, tzinfo=datetime.timezone.utc), 'time_taken': 20203105.0, 'time_delta': '233 days, 19:58:25', 'additions': 227, 'deletions': 584, 'state': 'closed'}, {'id': 1153399882, 'number': 105446, 'closed': datetime.datetime(2022, 12, 19, 1, 14, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 8, 7, 0, tzinfo=datetime.timezone.utc), 'time_taken': 929644.0, 'time_delta': '10 days, 18:14:04', 'additions': 76, 'deletions': 4, 'state': 'closed'}, {'id': 1150614687, 'number': 105412, 'closed': datetime.datetime(2022, 12, 7, 23, 10, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 7, 4, 19, 26, tzinfo=datetime.timezone.utc), 'time_taken': 67846.0, 'time_delta': '18:50:46', 'additions': 163, 'deletions': 374, 'state': 'closed'}, {'id': 967614397, 'number': 98121, 'closed': datetime.datetime(2022, 6, 16, 21, 5, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 2, 43, 27, tzinfo=datetime.timezone.utc), 'time_taken': 152531.0, 'time_delta': '1 day, 18:22:11', 'additions': 123, 'deletions': 0, 'state': 'closed'}, {'id': 966361067, 'number': 98078, 'closed': datetime.datetime(2022, 6, 15, 8, 20, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 14, 1, 57, tzinfo=datetime.timezone.utc), 'time_taken': 109399.0, 'time_delta': '1 day, 6:23:19', 'additions': 35, 'deletions': 1, 'state': 'closed'}, {'id': 912529246, 'number': 96197, 'closed': datetime.datetime(2022, 4, 22, 13, 56, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 19, 1, 35, 30, tzinfo=datetime.timezone.utc), 'time_taken': 303645.0, 'time_delta': '3 days, 12:20:45', 'additions': 795, 'deletions': 16, 'state': 'closed'}, {'id': 911397554, 'number': 96139, 'closed': datetime.datetime(2022, 4, 17, 22, 54, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 17, 6, 17, 16, tzinfo=datetime.timezone.utc), 'time_taken': 59856.0, 'time_delta': '16:37:36', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 911397535, 'number': 96138, 'closed': datetime.datetime(2022, 4, 17, 18, 14, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 17, 6, 17, 12, tzinfo=datetime.timezone.utc), 'time_taken': 43022.0, 'time_delta': '11:57:02', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 876889984, 'number': 94823, 'closed': datetime.datetime(2023, 5, 12, 11, 26, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 22, 12, 18, tzinfo=datetime.timezone.utc), 'time_taken': 36940474.0, 'time_delta': '427 days, 13:14:34', 'additions': 71, 'deletions': 31, 'state': 'closed'}, {'id': 872167110, 'number': 94638, 'closed': datetime.datetime(2022, 3, 7, 4, 48, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 5, 4, 59, 44, tzinfo=datetime.timezone.utc), 'time_taken': 172122.0, 'time_delta': '1 day, 23:48:42', 'additions': 26, 'deletions': 46, 'state': 'closed'}, {'id': 866379853, 'number': 94439, 'closed': datetime.datetime(2022, 2, 28, 22, 16, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 28, 4, 25, 25, tzinfo=datetime.timezone.utc), 'time_taken': 64281.0, 'time_delta': '17:51:21', 'additions': 14, 'deletions': 18, 'state': 'closed'}, {'id': 864921537, 'number': 94402, 'closed': datetime.datetime(2022, 3, 1, 11, 24, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 26, 17, 54, 47, tzinfo=datetime.timezone.utc), 'time_taken': 235768.0, 'time_delta': '2 days, 17:29:28', 'additions': 31, 'deletions': 87, 'state': 'closed'}, {'id': 863778492, 'number': 94373, 'closed': datetime.datetime(2022, 2, 27, 3, 33, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 20, 23, 3, tzinfo=datetime.timezone.utc), 'time_taken': 112209.0, 'time_delta': '1 day, 7:10:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 863777312, 'number': 94372, 'closed': datetime.datetime(2022, 3, 20, 1, 13, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 20, 21, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1918332.0, 'time_delta': '22 days, 4:52:12', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 859801219, 'number': 94229, 'closed': datetime.datetime(2022, 3, 2, 11, 21, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 19, 58, 53, tzinfo=datetime.timezone.utc), 'time_taken': 746565.0, 'time_delta': '8 days, 15:22:45', 'additions': 13, 'deletions': 87, 'state': 'closed'}, {'id': 859656682, 'number': 94221, 'closed': datetime.datetime(2022, 2, 27, 11, 45, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 21, 16, 29, 47, tzinfo=datetime.timezone.utc), 'time_taken': 501368.0, 'time_delta': '5 days, 19:16:08', 'additions': 420, 'deletions': 439, 'state': 'closed'}, {'id': 858607749, 'number': 94159, 'closed': datetime.datetime(2022, 3, 4, 10, 38, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 19, 15, 6, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1107096.0, 'time_delta': '12 days, 19:31:36', 'additions': 67, 'deletions': 16, 'state': 'closed'}, {'id': 858607094, 'number': 94158, 'closed': datetime.datetime(2022, 2, 28, 8, 25, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 19, 15, 5, 33, tzinfo=datetime.timezone.utc), 'time_taken': 753597.0, 'time_delta': '8 days, 17:19:57', 'additions': 98, 'deletions': 4, 'state': 'closed'}, {'id': 858606822, 'number': 94157, 'closed': datetime.datetime(2022, 2, 28, 0, 10, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 19, 15, 4, 50, tzinfo=datetime.timezone.utc), 'time_taken': 723914.0, 'time_delta': '8 days, 9:05:14', 'additions': 63, 'deletions': 8, 'state': 'closed'}, {'id': 857706344, 'number': 94130, 'closed': datetime.datetime(2022, 2, 25, 8, 9, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 21, 16, 7, tzinfo=datetime.timezone.utc), 'time_taken': 557603.0, 'time_delta': '6 days, 10:53:23', 'additions': 44, 'deletions': 66, 'state': 'closed'}, {'id': 857577578, 'number': 94127, 'closed': datetime.datetime(2022, 2, 26, 11, 58, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 19, 36, 39, tzinfo=datetime.timezone.utc), 'time_taken': 663693.0, 'time_delta': '7 days, 16:21:33', 'additions': 127, 'deletions': 53, 'state': 'closed'}, {'id': 856335181, 'number': 94110, 'closed': datetime.datetime(2022, 2, 18, 19, 34, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 3, 49, 47, tzinfo=datetime.timezone.utc), 'time_taken': 56712.0, 'time_delta': '15:45:12', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 856096251, 'number': 94106, 'closed': datetime.datetime(2022, 2, 18, 19, 36, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 17, 23, 6, 30, tzinfo=datetime.timezone.utc), 'time_taken': 73826.0, 'time_delta': '20:30:26', 'additions': 91, 'deletions': 94, 'state': 'closed'}, {'id': 840807127, 'number': 93670, 'closed': datetime.datetime(2022, 2, 13, 2, 40, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 5, 6, 29, 1, tzinfo=datetime.timezone.utc), 'time_taken': 677515.0, 'time_delta': '7 days, 20:11:55', 'additions': 94, 'deletions': 91, 'state': 'closed'}, {'id': 811671258, 'number': 92419, 'closed': datetime.datetime(2022, 1, 1, 16, 31, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 29, 20, 49, 56, tzinfo=datetime.timezone.utc), 'time_taken': 243689.0, 'time_delta': '2 days, 19:41:29', 'additions': 80, 'deletions': 9, 'state': 'closed'}, {'id': 795377202, 'number': 91569, 'closed': datetime.datetime(2021, 12, 13, 7, 30, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 5, 21, 36, 3, tzinfo=datetime.timezone.utc), 'time_taken': 640486.0, 'time_delta': '7 days, 9:54:46', 'additions': 56, 'deletions': 7, 'state': 'closed'}, {'id': 748032965, 'number': 89454, 'closed': datetime.datetime(2021, 10, 7, 6, 23, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 2, 2, 22, 10, tzinfo=datetime.timezone.utc), 'time_taken': 446478.0, 'time_delta': '5 days, 4:01:18', 'additions': 4, 'deletions': 38, 'state': 'closed'}, {'id': 721866138, 'number': 88449, 'closed': datetime.datetime(2021, 9, 5, 14, 55, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 29, 0, 36, 31, tzinfo=datetime.timezone.utc), 'time_taken': 656341.0, 'time_delta': '7 days, 14:19:01', 'additions': 10, 'deletions': 3, 'state': 'closed'}, {'id': 716400259, 'number': 88176, 'closed': datetime.datetime(2021, 8, 20, 19, 6, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 3, 5, 9, tzinfo=datetime.timezone.utc), 'time_taken': 57698.0, 'time_delta': '16:01:38', 'additions': 21, 'deletions': 56, 'state': 'closed'}, {'id': 712973570, 'number': 88056, 'closed': datetime.datetime(2021, 8, 17, 16, 43, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 17, 29, 53, tzinfo=datetime.timezone.utc), 'time_taken': 170040.0, 'time_delta': '1 day, 23:14:00', 'additions': 81, 'deletions': 21, 'state': 'closed'}, {'id': 605054186, 'number': 83698, 'closed': datetime.datetime(2021, 8, 26, 13, 30, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 5, 35, 56, tzinfo=datetime.timezone.utc), 'time_taken': 12815663.0, 'time_delta': '148 days, 7:54:23', 'additions': 615, 'deletions': 173, 'state': 'closed'}, {'id': 599869393, 'number': 83445, 'closed': datetime.datetime(2021, 3, 25, 10, 30, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 24, 17, 1, 52, tzinfo=datetime.timezone.utc), 'time_taken': 62897.0, 'time_delta': '17:28:17', 'additions': 65, 'deletions': 1, 'state': 'closed'}, {'id': 599205958, 'number': 83423, 'closed': datetime.datetime(2021, 4, 28, 16, 3, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 21, 36, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3090413.0, 'time_delta': '35 days, 18:26:53', 'additions': 190, 'deletions': 0, 'state': 'closed'}, {'id': 599081747, 'number': 83417, 'closed': datetime.datetime(2021, 8, 14, 22, 29, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 18, 20, 47, tzinfo=datetime.timezone.utc), 'time_taken': 12456528.0, 'time_delta': '144 days, 4:08:48', 'additions': 21, 'deletions': 56, 'state': 'closed'}, {'id': 593528084, 'number': 83177, 'closed': datetime.datetime(2021, 3, 23, 15, 4, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 16, 2, 44, 23, tzinfo=datetime.timezone.utc), 'time_taken': 649231.0, 'time_delta': '7 days, 12:20:31', 'additions': 178, 'deletions': 176, 'state': 'closed'}, {'id': 592579592, 'number': 83118, 'closed': datetime.datetime(2021, 3, 15, 14, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 17, 3, 33, tzinfo=datetime.timezone.utc), 'time_taken': 76106.0, 'time_delta': '21:08:26', 'additions': 109, 'deletions': 117, 'state': 'closed'}, {'id': 586308957, 'number': 82874, 'closed': datetime.datetime(2021, 3, 9, 4, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 7, 19, 9, 21, tzinfo=datetime.timezone.utc), 'time_taken': 120270.0, 'time_delta': '1 day, 9:24:30', 'additions': 76, 'deletions': 0, 'state': 'closed'}, {'id': 543000045, 'number': 80209, 'closed': datetime.datetime(2020, 12, 27, 4, 39, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 20, 1, 2, 19, tzinfo=datetime.timezone.utc), 'time_taken': 617854.0, 'time_delta': '7 days, 3:37:34', 'additions': 16, 'deletions': 27, 'state': 'closed'}, {'id': 529220069, 'number': 79547, 'closed': datetime.datetime(2020, 12, 2, 17, 36, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 30, 1, 17, 24, tzinfo=datetime.timezone.utc), 'time_taken': 231534.0, 'time_delta': '2 days, 16:18:54', 'additions': 16, 'deletions': 11, 'state': 'closed'}, {'id': 501935824, 'number': 77885, 'closed': datetime.datetime(2021, 1, 16, 6, 9, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 13, 2, 37, 48, tzinfo=datetime.timezone.utc), 'time_taken': 8220697.0, 'time_delta': '95 days, 3:31:37', 'additions': 62, 'deletions': 10, 'state': 'closed'}, {'id': 472659639, 'number': 75886, 'closed': datetime.datetime(2020, 9, 16, 3, 7, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 17, 22, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1935902.0, 'time_delta': '22 days, 9:45:02', 'additions': 78, 'deletions': 0, 'state': 'closed'}, {'id': 472232321, 'number': 75866, 'closed': datetime.datetime(2020, 12, 10, 2, 44, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 3, 13, 11, tzinfo=datetime.timezone.utc), 'time_taken': 9329474.0, 'time_delta': '107 days, 23:31:14', 'additions': 155, 'deletions': 36, 'state': 'closed'}, {'id': 452694576, 'number': 74526, 'closed': datetime.datetime(2020, 8, 3, 23, 32, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 19, 18, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1315407.0, 'time_delta': '15 days, 5:23:27', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 447678093, 'number': 74227, 'closed': datetime.datetime(2020, 7, 14, 20, 16, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 23, 10, 50, tzinfo=datetime.timezone.utc), 'time_taken': 335168.0, 'time_delta': '3 days, 21:06:08', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 444444955, 'number': 74069, 'closed': datetime.datetime(2020, 7, 18, 16, 8, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 18, 41, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1114037.0, 'time_delta': '12 days, 21:27:17', 'additions': 51, 'deletions': 7, 'state': 'closed'}, {'id': 436047937, 'number': 73453, 'closed': datetime.datetime(2020, 9, 25, 16, 56, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 19, 21, 42, tzinfo=datetime.timezone.utc), 'time_taken': 8631266.0, 'time_delta': '99 days, 21:34:26', 'additions': 228, 'deletions': 74, 'state': 'closed'}, {'id': 434289098, 'number': 73362, 'closed': datetime.datetime(2020, 6, 19, 12, 12, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 5, 6, 44, tzinfo=datetime.timezone.utc), 'time_taken': 371153.0, 'time_delta': '4 days, 7:05:53', 'additions': 44, 'deletions': 0, 'state': 'closed'}]"
75821432,llvm-project,llvm/llvm-project,LLVM,11311,27538,587,6412,508977,25380,662,2882,[]
