pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1331113604, DDS: Added subscriber support,"Aims to provide a subscriber support for the current DDS functionality in Ardupilot.
Note : based on the changes made in PR #23586
Current Scenario : 
![Screenshot from 2023-04-28 04-48-40](https://user-images.githubusercontent.com/62841337/235011233-cc4eff83-c7ea-4ff0-8335-4d57ce1d6659.png)
Special thanks to @Ryanf55 for initiating the said work on his [branch](https://github.com/Ryanf55/ardupilot/tree/joy-input) ",True,23629,https://api.github.com/repos/ArduPilot/ardupilot/pulls/23629,https://github.com/ArduPilot/ardupilot/pull/23629,closed,187,25,5,1,10,23,2,0,"[{'name': 'ROS'}, {'name': 'For-4.5'}]",2023-04-27 23:24:10+00:00,2023-06-01 01:38:00+00:00,2945630.0,"34 days, 2:13:50","[{'comment_id': 1200605341, 'comment_body': ""Let's just print the array length, or add protection that the `length >= 4`. If someone sends a Joy message with less than 4 fields, it will cause a runtime crash right now."", 'comment_created': datetime.datetime(2023, 5, 22, 14, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1200607366, 'comment_body': 'Change to `""""` because there is no data reader for time. Just Joy', 'comment_created': datetime.datetime(2023, 5, 22, 14, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1200613628, 'comment_body': 'Maybe remove? The example reader is only implemented  for `msgs/Joy`. If we did want to synchronise with an external clock we should use `rosgraph_msgs/Clock` on `rt/ap/clock`.', 'comment_created': datetime.datetime(2023, 5, 22, 14, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1200627166, 'comment_body': 'Agree', 'comment_created': datetime.datetime(2023, 5, 22, 14, 50, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1201346118, 'comment_body': 'Thanks for this  ! Have made the said changes ', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201346255, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201346496, 'comment_body': 'Have removed the said configurations ', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201430815, 'comment_body': 'Can you just remove the commented XML? ', 'comment_created': datetime.datetime(2023, 5, 23, 2, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1203072442, 'comment_body': 'Thanks for this .. Resolved !', 'comment_created': datetime.datetime(2023, 5, 23, 22, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1209591537, 'comment_body': 'normally we use uint8_t or uint16_t instead of ""int"".', 'comment_created': datetime.datetime(2023, 5, 29, 23, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 1209591776, 'comment_body': 'existing code but there\'s an ""int"" here too..', 'comment_created': datetime.datetime(2023, 5, 29, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 1209591836, 'comment_body': 'check return and not print if bad', 'comment_created': datetime.datetime(2023, 5, 29, 23, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592173, 'comment_body': 'if strlen() > 0\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592326, 'comment_body': 'strlen() > 0\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592806, 'comment_body': '```suggestion\r\n    uxrDeliveryControl delivery_control {\r\n```\r\n\r\nconstructs in-place rather than on-stack and copying in.  Compiler probably already does this - but this form also gives narrowing checking.\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 1210498188, 'comment_body': 'This is what returns a bool, just like the `serialize` functions, check this is `true`. ', 'comment_created': datetime.datetime(2023, 5, 30, 15, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1210529785, 'comment_body': 'thanks for the input ..have made the changes', 'comment_created': datetime.datetime(2023, 5, 30, 16, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210531115, 'comment_body': 'thanks for this ..have made the necessary changes to the integer variables', 'comment_created': datetime.datetime(2023, 5, 30, 16, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210531596, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532125, 'comment_body': 'done..have added a pointer now and a subsequent null pointer check', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 22, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532338, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532536, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210637277, 'comment_body': 'Thanks for this .. have added the said changes..Feel free to add your suggestions .. Thanks !!', 'comment_created': datetime.datetime(2023, 5, 30, 18, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}]","[{'commit_sha': '3d185a64696687039f0eacb26a6c2e1eadf73625', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1331113604, DDS: Added subscriber support,"Aims to provide a subscriber support for the current DDS functionality in Ardupilot.
Note : based on the changes made in PR #23586
Current Scenario : 
![Screenshot from 2023-04-28 04-48-40](https://user-images.githubusercontent.com/62841337/235011233-cc4eff83-c7ea-4ff0-8335-4d57ce1d6659.png)
Special thanks to @Ryanf55 for initiating the said work on his [branch](https://github.com/Ryanf55/ardupilot/tree/joy-input) ",True,23629,https://api.github.com/repos/ArduPilot/ardupilot/pulls/23629,https://github.com/ArduPilot/ardupilot/pull/23629,closed,187,25,5,1,10,23,2,0,"[{'name': 'ROS'}, {'name': 'For-4.5'}]",2023-04-27 23:24:10+00:00,2023-06-01 01:38:00+00:00,2945630.0,"34 days, 2:13:50","[{'comment_id': 1200605341, 'comment_body': ""Let's just print the array length, or add protection that the `length >= 4`. If someone sends a Joy message with less than 4 fields, it will cause a runtime crash right now."", 'comment_created': datetime.datetime(2023, 5, 22, 14, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1200607366, 'comment_body': 'Change to `""""` because there is no data reader for time. Just Joy', 'comment_created': datetime.datetime(2023, 5, 22, 14, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1200613628, 'comment_body': 'Maybe remove? The example reader is only implemented  for `msgs/Joy`. If we did want to synchronise with an external clock we should use `rosgraph_msgs/Clock` on `rt/ap/clock`.', 'comment_created': datetime.datetime(2023, 5, 22, 14, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1200627166, 'comment_body': 'Agree', 'comment_created': datetime.datetime(2023, 5, 22, 14, 50, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1201346118, 'comment_body': 'Thanks for this  ! Have made the said changes ', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201346255, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201346496, 'comment_body': 'Have removed the said configurations ', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201430815, 'comment_body': 'Can you just remove the commented XML? ', 'comment_created': datetime.datetime(2023, 5, 23, 2, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1203072442, 'comment_body': 'Thanks for this .. Resolved !', 'comment_created': datetime.datetime(2023, 5, 23, 22, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1209591537, 'comment_body': 'normally we use uint8_t or uint16_t instead of ""int"".', 'comment_created': datetime.datetime(2023, 5, 29, 23, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 1209591776, 'comment_body': 'existing code but there\'s an ""int"" here too..', 'comment_created': datetime.datetime(2023, 5, 29, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 1209591836, 'comment_body': 'check return and not print if bad', 'comment_created': datetime.datetime(2023, 5, 29, 23, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592173, 'comment_body': 'if strlen() > 0\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592326, 'comment_body': 'strlen() > 0\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592806, 'comment_body': '```suggestion\r\n    uxrDeliveryControl delivery_control {\r\n```\r\n\r\nconstructs in-place rather than on-stack and copying in.  Compiler probably already does this - but this form also gives narrowing checking.\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 1210498188, 'comment_body': 'This is what returns a bool, just like the `serialize` functions, check this is `true`. ', 'comment_created': datetime.datetime(2023, 5, 30, 15, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1210529785, 'comment_body': 'thanks for the input ..have made the changes', 'comment_created': datetime.datetime(2023, 5, 30, 16, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210531115, 'comment_body': 'thanks for this ..have made the necessary changes to the integer variables', 'comment_created': datetime.datetime(2023, 5, 30, 16, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210531596, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532125, 'comment_body': 'done..have added a pointer now and a subsequent null pointer check', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 22, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532338, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532536, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210637277, 'comment_body': 'Thanks for this .. have added the said changes..Feel free to add your suggestions .. Thanks !!', 'comment_created': datetime.datetime(2023, 5, 30, 18, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}]","[{'commit_sha': '3d185a64696687039f0eacb26a6c2e1eadf73625', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1331113604, DDS: Added subscriber support,"Aims to provide a subscriber support for the current DDS functionality in Ardupilot.
Note : based on the changes made in PR #23586
Current Scenario : 
![Screenshot from 2023-04-28 04-48-40](https://user-images.githubusercontent.com/62841337/235011233-cc4eff83-c7ea-4ff0-8335-4d57ce1d6659.png)
Special thanks to @Ryanf55 for initiating the said work on his [branch](https://github.com/Ryanf55/ardupilot/tree/joy-input) ",True,23629,https://api.github.com/repos/ArduPilot/ardupilot/pulls/23629,https://github.com/ArduPilot/ardupilot/pull/23629,closed,187,25,5,1,10,23,2,0,"[{'name': 'ROS'}, {'name': 'For-4.5'}]",2023-04-27 23:24:10+00:00,2023-06-01 01:38:00+00:00,2945630.0,"34 days, 2:13:50","[{'comment_id': 1200605341, 'comment_body': ""Let's just print the array length, or add protection that the `length >= 4`. If someone sends a Joy message with less than 4 fields, it will cause a runtime crash right now."", 'comment_created': datetime.datetime(2023, 5, 22, 14, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1200607366, 'comment_body': 'Change to `""""` because there is no data reader for time. Just Joy', 'comment_created': datetime.datetime(2023, 5, 22, 14, 36, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1200613628, 'comment_body': 'Maybe remove? The example reader is only implemented  for `msgs/Joy`. If we did want to synchronise with an external clock we should use `rosgraph_msgs/Clock` on `rt/ap/clock`.', 'comment_created': datetime.datetime(2023, 5, 22, 14, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1200627166, 'comment_body': 'Agree', 'comment_created': datetime.datetime(2023, 5, 22, 14, 50, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1201346118, 'comment_body': 'Thanks for this  ! Have made the said changes ', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201346255, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201346496, 'comment_body': 'Have removed the said configurations ', 'comment_created': datetime.datetime(2023, 5, 23, 0, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1201430815, 'comment_body': 'Can you just remove the commented XML? ', 'comment_created': datetime.datetime(2023, 5, 23, 2, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1203072442, 'comment_body': 'Thanks for this .. Resolved !', 'comment_created': datetime.datetime(2023, 5, 23, 22, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1209591537, 'comment_body': 'normally we use uint8_t or uint16_t instead of ""int"".', 'comment_created': datetime.datetime(2023, 5, 29, 23, 35, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 1209591776, 'comment_body': 'existing code but there\'s an ""int"" here too..', 'comment_created': datetime.datetime(2023, 5, 29, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 1209591836, 'comment_body': 'check return and not print if bad', 'comment_created': datetime.datetime(2023, 5, 29, 23, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592173, 'comment_body': 'if strlen() > 0\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592326, 'comment_body': 'strlen() > 0\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 39, 12, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1209592806, 'comment_body': '```suggestion\r\n    uxrDeliveryControl delivery_control {\r\n```\r\n\r\nconstructs in-place rather than on-stack and copying in.  Compiler probably already does this - but this form also gives narrowing checking.\r\n', 'comment_created': datetime.datetime(2023, 5, 29, 23, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 1210498188, 'comment_body': 'This is what returns a bool, just like the `serialize` functions, check this is `true`. ', 'comment_created': datetime.datetime(2023, 5, 30, 15, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1210529785, 'comment_body': 'thanks for the input ..have made the changes', 'comment_created': datetime.datetime(2023, 5, 30, 16, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210531115, 'comment_body': 'thanks for this ..have made the necessary changes to the integer variables', 'comment_created': datetime.datetime(2023, 5, 30, 16, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210531596, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532125, 'comment_body': 'done..have added a pointer now and a subsequent null pointer check', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 22, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532338, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210532536, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 5, 30, 16, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1210637277, 'comment_body': 'Thanks for this .. have added the said changes..Feel free to add your suggestions .. Thanks !!', 'comment_created': datetime.datetime(2023, 5, 30, 18, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}]","[{'commit_sha': '3d185a64696687039f0eacb26a6c2e1eadf73625', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1324749409,AP_DDS: added support for UDP transport,"enable UDP transport on SITL. It will be enabled on ChibiOS once ethernet support is merged to master
pair programmed with @arshPratap ",True,23586,https://api.github.com/repos/ArduPilot/ardupilot/pulls/23586,https://github.com/ArduPilot/ardupilot/pull/23586,closed,316,131,9,3,6,21,1,0,[{'name': 'ROS'}],2023-04-24 05:16:54+00:00,2023-05-03 05:22:43+00:00,777949.0,"9 days, 0:05:49","[{'comment_id': 1174792158, 'comment_body': 'Please document the params in the README. ', 'comment_created': datetime.datetime(2023, 4, 24, 5, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174793331, 'comment_body': 'Is the plan to only support one or the other? Would there be a strong reason to have redundant communication methods between ArduPilot and Companion computer? ', 'comment_created': datetime.datetime(2023, 4, 24, 5, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174795898, 'comment_body': 'Can you do this to protect the `atoi` call? \r\n\r\n```\r\ncont auto port_int = atoi(port);\r\nif (!port_int) {\r\n    return false;\r\n}', 'comment_created': datetime.datetime(2023, 4, 24, 5, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174799708, 'comment_body': 'add `const`?', 'comment_created': datetime.datetime(2023, 4, 24, 5, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174799884, 'comment_body': 'Add `const`?', 'comment_created': datetime.datetime(2023, 4, 24, 5, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174842477, 'comment_body': 'Please document this flag. Perhaps rename to `is_using_serial`?', 'comment_created': datetime.datetime(2023, 4, 24, 6, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1175210761, 'comment_body': 'Perhaps use `DDS_ENABLE` instead of `DDS_ENABLED`? Most of the other enable params use the former (except chute, tcal, plnd).  ', 'comment_created': datetime.datetime(2023, 4, 24, 12, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1175932450, 'comment_body': 'Can we drive this setting from whether UDP is enabled in the build? Otherwise, I think there will be overhead for all users, whether they use UDP or not. ', 'comment_created': datetime.datetime(2023, 4, 25, 1, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1177287328, 'comment_body': 'we could do both in the future, but for now it is simpler to have one\r\n', 'comment_created': datetime.datetime(2023, 4, 26, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177291874, 'comment_body': 'I checked and it has zero flash cost to have this set to 1 and not use it', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292007, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292047, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292082, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292157, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292242, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177296474, 'comment_body': 'Excellent. ', 'comment_created': datetime.datetime(2023, 4, 26, 3, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1182810812, 'comment_body': 'Remove? - creates a pair of streams which are not used (the pair of`uxrStreamId` created in the if-else below has `uxrStreamId.index` incremented).', 'comment_created': datetime.datetime(2023, 5, 2, 16, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1183176922, 'comment_body': ""Can you add `--enable-dds` too? It's missing. "", 'comment_created': datetime.datetime(2023, 5, 3, 1, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183177864, 'comment_body': 'Looks like some indent alignment issues here. ', 'comment_created': datetime.datetime(2023, 5, 3, 1, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183178349, 'comment_body': 'Spelling typo on initialize. \r\n\r\nAlso, do we need to add comments in the implementation file if the header already has them? ', 'comment_created': datetime.datetime(2023, 5, 3, 1, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183180871, 'comment_body': 'spelling is correct for Australian english :-)', 'comment_created': datetime.datetime(2023, 5, 3, 1, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': '0beb36a00b00184ec61f8704022c36402be75e28', 'committer_username': 'tridge', 'committer_name': 'Andrew Tridgell', 'committer_email': None, 'commit_date': datetime.datetime(2011, 6, 6, 4, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff697568c36ef76c4d9ef21dd94d70fc5a5bcf65', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ecb808e15004a84c66667d1f1f3a597990d8aa6', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Andrew Tridgell,831867,,User,,90,,3,1083
1324749409,AP_DDS: added support for UDP transport,"enable UDP transport on SITL. It will be enabled on ChibiOS once ethernet support is merged to master
pair programmed with @arshPratap ",True,23586,https://api.github.com/repos/ArduPilot/ardupilot/pulls/23586,https://github.com/ArduPilot/ardupilot/pull/23586,closed,316,131,9,3,6,21,1,0,[{'name': 'ROS'}],2023-04-24 05:16:54+00:00,2023-05-03 05:22:43+00:00,777949.0,"9 days, 0:05:49","[{'comment_id': 1174792158, 'comment_body': 'Please document the params in the README. ', 'comment_created': datetime.datetime(2023, 4, 24, 5, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174793331, 'comment_body': 'Is the plan to only support one or the other? Would there be a strong reason to have redundant communication methods between ArduPilot and Companion computer? ', 'comment_created': datetime.datetime(2023, 4, 24, 5, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174795898, 'comment_body': 'Can you do this to protect the `atoi` call? \r\n\r\n```\r\ncont auto port_int = atoi(port);\r\nif (!port_int) {\r\n    return false;\r\n}', 'comment_created': datetime.datetime(2023, 4, 24, 5, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174799708, 'comment_body': 'add `const`?', 'comment_created': datetime.datetime(2023, 4, 24, 5, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174799884, 'comment_body': 'Add `const`?', 'comment_created': datetime.datetime(2023, 4, 24, 5, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174842477, 'comment_body': 'Please document this flag. Perhaps rename to `is_using_serial`?', 'comment_created': datetime.datetime(2023, 4, 24, 6, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1175210761, 'comment_body': 'Perhaps use `DDS_ENABLE` instead of `DDS_ENABLED`? Most of the other enable params use the former (except chute, tcal, plnd).  ', 'comment_created': datetime.datetime(2023, 4, 24, 12, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1175932450, 'comment_body': 'Can we drive this setting from whether UDP is enabled in the build? Otherwise, I think there will be overhead for all users, whether they use UDP or not. ', 'comment_created': datetime.datetime(2023, 4, 25, 1, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1177287328, 'comment_body': 'we could do both in the future, but for now it is simpler to have one\r\n', 'comment_created': datetime.datetime(2023, 4, 26, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177291874, 'comment_body': 'I checked and it has zero flash cost to have this set to 1 and not use it', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292007, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292047, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292082, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292157, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292242, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177296474, 'comment_body': 'Excellent. ', 'comment_created': datetime.datetime(2023, 4, 26, 3, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1182810812, 'comment_body': 'Remove? - creates a pair of streams which are not used (the pair of`uxrStreamId` created in the if-else below has `uxrStreamId.index` incremented).', 'comment_created': datetime.datetime(2023, 5, 2, 16, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1183176922, 'comment_body': ""Can you add `--enable-dds` too? It's missing. "", 'comment_created': datetime.datetime(2023, 5, 3, 1, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183177864, 'comment_body': 'Looks like some indent alignment issues here. ', 'comment_created': datetime.datetime(2023, 5, 3, 1, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183178349, 'comment_body': 'Spelling typo on initialize. \r\n\r\nAlso, do we need to add comments in the implementation file if the header already has them? ', 'comment_created': datetime.datetime(2023, 5, 3, 1, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183180871, 'comment_body': 'spelling is correct for Australian english :-)', 'comment_created': datetime.datetime(2023, 5, 3, 1, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': '0beb36a00b00184ec61f8704022c36402be75e28', 'committer_username': 'tridge', 'committer_name': 'Andrew Tridgell', 'committer_email': None, 'commit_date': datetime.datetime(2011, 6, 6, 4, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff697568c36ef76c4d9ef21dd94d70fc5a5bcf65', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ecb808e15004a84c66667d1f1f3a597990d8aa6', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Andrew Tridgell,831867,,User,,90,,3,1083
1324749409,AP_DDS: added support for UDP transport,"enable UDP transport on SITL. It will be enabled on ChibiOS once ethernet support is merged to master
pair programmed with @arshPratap ",True,23586,https://api.github.com/repos/ArduPilot/ardupilot/pulls/23586,https://github.com/ArduPilot/ardupilot/pull/23586,closed,316,131,9,3,6,21,1,0,[{'name': 'ROS'}],2023-04-24 05:16:54+00:00,2023-05-03 05:22:43+00:00,777949.0,"9 days, 0:05:49","[{'comment_id': 1174792158, 'comment_body': 'Please document the params in the README. ', 'comment_created': datetime.datetime(2023, 4, 24, 5, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174793331, 'comment_body': 'Is the plan to only support one or the other? Would there be a strong reason to have redundant communication methods between ArduPilot and Companion computer? ', 'comment_created': datetime.datetime(2023, 4, 24, 5, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174795898, 'comment_body': 'Can you do this to protect the `atoi` call? \r\n\r\n```\r\ncont auto port_int = atoi(port);\r\nif (!port_int) {\r\n    return false;\r\n}', 'comment_created': datetime.datetime(2023, 4, 24, 5, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174799708, 'comment_body': 'add `const`?', 'comment_created': datetime.datetime(2023, 4, 24, 5, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174799884, 'comment_body': 'Add `const`?', 'comment_created': datetime.datetime(2023, 4, 24, 5, 39, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1174842477, 'comment_body': 'Please document this flag. Perhaps rename to `is_using_serial`?', 'comment_created': datetime.datetime(2023, 4, 24, 6, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1175210761, 'comment_body': 'Perhaps use `DDS_ENABLE` instead of `DDS_ENABLED`? Most of the other enable params use the former (except chute, tcal, plnd).  ', 'comment_created': datetime.datetime(2023, 4, 24, 12, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1175932450, 'comment_body': 'Can we drive this setting from whether UDP is enabled in the build? Otherwise, I think there will be overhead for all users, whether they use UDP or not. ', 'comment_created': datetime.datetime(2023, 4, 25, 1, 47, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1177287328, 'comment_body': 'we could do both in the future, but for now it is simpler to have one\r\n', 'comment_created': datetime.datetime(2023, 4, 26, 3, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177291874, 'comment_body': 'I checked and it has zero flash cost to have this set to 1 and not use it', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292007, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292047, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292082, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292157, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177292242, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 4, 26, 3, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1177296474, 'comment_body': 'Excellent. ', 'comment_created': datetime.datetime(2023, 4, 26, 3, 26, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1182810812, 'comment_body': 'Remove? - creates a pair of streams which are not used (the pair of`uxrStreamId` created in the if-else below has `uxrStreamId.index` incremented).', 'comment_created': datetime.datetime(2023, 5, 2, 16, 57, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1183176922, 'comment_body': ""Can you add `--enable-dds` too? It's missing. "", 'comment_created': datetime.datetime(2023, 5, 3, 1, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183177864, 'comment_body': 'Looks like some indent alignment issues here. ', 'comment_created': datetime.datetime(2023, 5, 3, 1, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183178349, 'comment_body': 'Spelling typo on initialize. \r\n\r\nAlso, do we need to add comments in the implementation file if the header already has them? ', 'comment_created': datetime.datetime(2023, 5, 3, 1, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1183180871, 'comment_body': 'spelling is correct for Australian english :-)', 'comment_created': datetime.datetime(2023, 5, 3, 1, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': '0beb36a00b00184ec61f8704022c36402be75e28', 'committer_username': 'tridge', 'committer_name': 'Andrew Tridgell', 'committer_email': None, 'commit_date': datetime.datetime(2011, 6, 6, 4, 46, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff697568c36ef76c4d9ef21dd94d70fc5a5bcf65', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ecb808e15004a84c66667d1f1f3a597990d8aa6', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Andrew Tridgell,831867,,User,,90,,3,1083
1409335067,AP_DDS: Added ROS 2 service support,"This is work in progress PR that aims to provide support for service support as requested in #23822 and will work as a foundation for #23363 . Currently we focus on providing support for Arming / Disarming motors.

@Ryanf55 @srmainwaring @tridge would like to know your thoughts on this",True,24145,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24145,https://github.com/ArduPilot/ardupilot/pull/24145,closed,248,25,11,2,24,77,2,0,"[{'name': 'Enhancement'}, {'name': 'ROS'}]",2023-06-27 08:13:35+00:00,2023-08-11 03:35:49+00:00,3871334.0,"44 days, 19:22:14","[{'comment_id': 1243896293, 'comment_body': 'Is there a reason this is separate from the existing class member variable`AP_DDS_Client::reliable_in`?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243897367, 'comment_body': 'Can you instead use the `[[maybe_unused]]` attribute instead of c-casts?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243898649, 'comment_body': 'If deserialization fails, this is the case you hit. Please check the return code of `ucdr_deserialize_bool`', 'comment_created': datetime.datetime(2023, 6, 27, 14, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243900548, 'comment_body': 'Can you check the object ID and request ID is intended for this service like we do in the subscriber reception? This will allow us to support multiple services instead of assuming there is only one. ', 'comment_created': datetime.datetime(2023, 6, 27, 14, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243901931, 'comment_body': 'What if serialization fails?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243902880, 'comment_body': 'What does the last parameter of zero mean? Can you make it a constexpr variable? ', 'comment_created': datetime.datetime(2023, 6, 27, 15, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243907694, 'comment_body': 'Why do you cast `i` to `int` when you can just use the size_t unsigned print formatter? \r\n`printf(""%zu\\n"", x);`', 'comment_created': datetime.datetime(2023, 6, 27, 15, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243912840, 'comment_body': 'What are the purpose of the comments that repeat the variable name?\r\nFeel free to use doxygen comments that explain a bit more like so:\r\n`//! @brief The request ID for the service`\r\n', 'comment_created': datetime.datetime(2023, 6, 27, 15, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243913178, 'comment_body': 'Missing newline at the end of this file.', 'comment_created': datetime.datetime(2023, 6, 27, 15, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243915362, 'comment_body': 'These look nice and easy to add :D', 'comment_created': datetime.datetime(2023, 6, 27, 15, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1244876008, 'comment_body': '@arshPratap and @Ryanf55 - we should add the messages and service definitions to `Tools/ros2` as we should not have dependencies on private repos in ArduPilot master. Example PR here: https://github.com/arshPratap/ardupilot/pull/8\r\n\r\nA similar comment applies to building the integration service (IS) bindings and the custom IS config. \r\n\r\nThe steps needed to run the example should be incorporated into the launch scripts so we can bring up the environment with a single command. This could go in a follow up PR as not having the integration service does not cause a failure yet (but does result in the services not being visible which may be confusing). ', 'comment_created': datetime.datetime(2023, 6, 28, 8, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1252796305, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252796570, 'comment_body': 'Resolved @Ryanf55 ', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252797060, 'comment_body': 'Thanks for this..have added it accordingly', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252797311, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 5, 9, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252798080, 'comment_body': '@Ryanf55  resolved', 'comment_created': datetime.datetime(2023, 7, 5, 9, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252800037, 'comment_body': '`on_request` function is a static member function and it causes some linking error when the said variables are defined as static members , hence have assigned them here', 'comment_created': datetime.datetime(2023, 7, 5, 9, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1260427848, 'comment_body': 'you should be able to call to AP_Arming like this:\r\n - AP::arming().arm(AP_Arming::Method::DDS)\r\n - AP::arming().disarm(AP_Arming::Method::DDS)\r\n\r\nyou will need to add DDS as an arming method in AP_Arming.h\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 12, 0, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1260428192, 'comment_body': 'why uint8_t cast?\r\n', 'comment_created': datetime.datetime(2023, 7, 12, 0, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1260732348, 'comment_body': '```suggestion\r\n        uxr_buffer_reply(uxr_session, reliable_out, replier_id, sample_id, reply_buffer, sizeof(result));\r\n```\r\n\r\nCorrecting my earlier suggestion. The last arg should be the size of the serialised data, not the buffer size.\r\n\r\nFixes [RTPS_READER_HISTORY Error].', 'comment_created': datetime.datetime(2023, 7, 12, 7, 34, 12, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1265803124, 'comment_body': 'Thanks a lot @srmainwaring ! Have made the requested changes', 'comment_created': datetime.datetime(2023, 7, 17, 19, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1265803474, 'comment_body': 'Thanks for this !', 'comment_created': datetime.datetime(2023, 7, 17, 19, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1265803763, 'comment_body': 'Done.. Thanks for this @tridge !', 'comment_created': datetime.datetime(2023, 7, 17, 19, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1271905701, 'comment_body': 'Revert `[[maybe_unused]]` as it is `--std=c++17`, which we are not currently using. @Ryanf55 do you agree?', 'comment_created': datetime.datetime(2023, 7, 24, 8, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271906536, 'comment_body': 'See comment above on `[[maybe_unused]]`.', 'comment_created': datetime.datetime(2023, 7, 24, 8, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271919505, 'comment_body': 'Replace this section with a standard ROS 2 service call to the arming service. It removes placing an additional dependency on the repo https://github.com/arshPratap/ardupilot_ros2.\r\n\r\nThe  command is:\r\n\r\n```bash\r\nros2 service call /arm_motors ap_custom_services/srv/ArmMotors ""{arm: True}""\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 8, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271925043, 'comment_body': 'Update this section to reflect that the message and service interfaces are defined in `ardupilot_msgs` (https://github.com/ArduPilot/ardupilot/pull/24277). ', 'comment_created': datetime.datetime(2023, 7, 24, 8, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272035402, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 10, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272035592, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 10, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272080864, 'comment_body': '```suggestion\r\n            ros2: {\r\n                request_type: ""ardupilot_msgs/ArmMotors:request"",\r\n                reply_type: ""ardupilot_msgs/ArmMotors:response""\r\n            }\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 10, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272081405, 'comment_body': '```suggestion\r\n- Run the following command : `ros2 service call /arm_motors ardupilot_msgs/srv/ArmMotors ""{arm: True}""`\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 10, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272206075, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 12, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272206217, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 12, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1277012090, 'comment_body': 'fixed to use trampolines so non-static', 'comment_created': datetime.datetime(2023, 7, 28, 2, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277012562, 'comment_body': 'these messages will be very annoying. You could have a DDS_OPTIONS parameter with a bit which enables debug. Otherwise add a debug() macro. See AP_BLHeli.cpp for a debug macro example, it would default off', 'comment_created': datetime.datetime(2023, 7, 28, 2, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013269, 'comment_body': 'result in the reply should be true if we successfully disarmed', 'comment_created': datetime.datetime(2023, 7, 28, 2, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013575, 'comment_body': 'see above comments on debug code', 'comment_created': datetime.datetime(2023, 7, 28, 2, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013840, 'comment_body': 'what is %zu ?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013995, 'comment_body': 'also see comments on debug code', 'comment_created': datetime.datetime(2023, 7, 28, 2, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014313, 'comment_body': 'why a size_t? maybe a uint16_t ?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014522, 'comment_body': 'why have the arrays when it is always 1?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014827, 'comment_body': '```\r\nuxr_run_session_until_all_status(&session, requestTimeoutMs, &requests, &status, 1)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 2, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014992, 'comment_body': 'only ever 1 in this code, no loop', 'comment_created': datetime.datetime(2023, 7, 28, 2, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1278182053, 'comment_body': 'These were planned to be removed once the implementation of RC input is complete. ', 'comment_created': datetime.datetime(2023, 7, 29, 0, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182554, 'comment_body': '`%zu` is for size_t type. \r\n\r\nhttps://cplusplus.com/reference/cstdio/printf/\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 29, 0, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182670, 'comment_body': ""The `ARRAY_SIZE` macro calls `sizeof()` which returns a `size_t`. Since ArduPilot doesn't support containers with range-based for loops, we must manually set the type, so I chose one that matched what was returned by `ARRAY_SIZE`.\r\n\r\nSince ArduPilot doesn't support containers with iterators that support [range-based for loops of C++11](https://en.cppreference.com/w/cpp/language/range-for), `size_t` seemed like the right choice."", 'comment_created': datetime.datetime(2023, 7, 29, 0, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182901, 'comment_body': 'Arsh is probably mirroring the other structure established where publishers and subscribers had multiple requests. Are you just concerned about flash overhead here? This code only runs during initialization ', 'comment_created': datetime.datetime(2023, 7, 29, 0, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285258270, 'comment_body': 'Just curious - what is the reason to make these optional debug messages, all at the same level? ', 'comment_created': datetime.datetime(2023, 8, 6, 20, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285270302, 'comment_body': '@Ryanf55 tridge requested for the session failure messages for topics and services to be made as debug messages .. so to keep things in line I made the status messages as debug', 'comment_created': datetime.datetime(2023, 8, 6, 22, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285271183, 'comment_body': ""Ok, I'll follow up with Tridge - Errors would now be silently swallowed, but other libraries are allowed to call `GCS_SEND_TEXT(MAV_SEVERITY_ERROR` during initialization."", 'comment_created': datetime.datetime(2023, 8, 6, 22, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285272655, 'comment_body': 'move to top of file', 'comment_created': datetime.datetime(2023, 8, 6, 22, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285272830, 'comment_body': 'if (arm)', 'comment_created': datetime.datetime(2023, 8, 6, 22, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285274093, 'comment_body': 'add comment explaining why 8', 'comment_created': datetime.datetime(2023, 8, 6, 23, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285275121, 'comment_body': 'should sizeof(result) be reply_ub.offset?\r\nmaybe use ucdr_buffer_length(reply_buffer) ?', 'comment_created': datetime.datetime(2023, 8, 6, 23, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285291019, 'comment_body': 'Can you add this to the README as one of the exposed topics? All the others are currently documented. ', 'comment_created': datetime.datetime(2023, 8, 7, 0, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285295770, 'comment_body': 'Why were these moved away from the pointers to a different part of the header?', 'comment_created': datetime.datetime(2023, 8, 7, 1, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285296778, 'comment_body': ""This has larger scope than needed. It's just used to create a copy of data once. Can you try deleting it?"", 'comment_created': datetime.datetime(2023, 8, 7, 1, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285296888, 'comment_body': ""Decrease the scope of this to where it's used."", 'comment_created': datetime.datetime(2023, 8, 7, 1, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285301304, 'comment_body': ""Is this the right link? It's not the integration service."", 'comment_created': datetime.datetime(2023, 8, 7, 1, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285363389, 'comment_body': 'Did you accidentally re-format the whole README? This indent is now messed up. ', 'comment_created': datetime.datetime(2023, 8, 7, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285363936, 'comment_body': '```suggestion\r\n- Install and setup [Integration Services](https://integration-service.docs.eprosima.com/en/latest/installation_manual/installation.html) (it would be good to have a separate workspace for this)\r\n```\r\nSpelling', 'comment_created': datetime.datetime(2023, 8, 7, 4, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285369524, 'comment_body': 'Added `ros2 service list` as the command ..since integration service creates another node .. but otherwise added the service description', 'comment_created': datetime.datetime(2023, 8, 7, 4, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285369592, 'comment_body': 'done resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285369951, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370018, 'comment_body': 'done .. resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370137, 'comment_body': 'fixed the link..thanks for pointing out', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370342, 'comment_body': 'I ran the astyle on the readme file..no worries..have reverted the change', 'comment_created': datetime.datetime(2023, 8, 7, 4, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370415, 'comment_body': 'Resolved\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 4, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285381328, 'comment_body': 'Thanks, yea `astyle` is only used for the C++ code. ', 'comment_created': datetime.datetime(2023, 8, 7, 5, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1286167339, 'comment_body': '```suggestion\r\n            debug(""Request for arming received"");\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 17, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1286167610, 'comment_body': '```suggestion\r\n            debug(""Request for disarming received"");\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 17, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1286205244, 'comment_body': 'Add a note that the `ROS2-SH` packages need to be built with additional flags:\r\n\r\n```bash\r\n--cmake-args -DMIX_ROS_PACKAGES=""example_interfaces ardupilot_msgs""\r\n```\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 17, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1287982266, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1287982362, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1287983364, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1289476334, 'comment_body': 'This should be an error - preserve the original levels please.', 'comment_created': datetime.datetime(2023, 8, 10, 2, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1289483917, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 10, 2, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}]","[{'commit_sha': '6c883ab595df7a46c6319274f423e50ce1cd4e65', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b77ebe3c3c12e75b21665cd75a916a874a345d', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1409335067,AP_DDS: Added ROS 2 service support,"This is work in progress PR that aims to provide support for service support as requested in #23822 and will work as a foundation for #23363 . Currently we focus on providing support for Arming / Disarming motors.

@Ryanf55 @srmainwaring @tridge would like to know your thoughts on this",True,24145,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24145,https://github.com/ArduPilot/ardupilot/pull/24145,closed,248,25,11,2,24,77,2,0,"[{'name': 'Enhancement'}, {'name': 'ROS'}]",2023-06-27 08:13:35+00:00,2023-08-11 03:35:49+00:00,3871334.0,"44 days, 19:22:14","[{'comment_id': 1243896293, 'comment_body': 'Is there a reason this is separate from the existing class member variable`AP_DDS_Client::reliable_in`?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243897367, 'comment_body': 'Can you instead use the `[[maybe_unused]]` attribute instead of c-casts?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243898649, 'comment_body': 'If deserialization fails, this is the case you hit. Please check the return code of `ucdr_deserialize_bool`', 'comment_created': datetime.datetime(2023, 6, 27, 14, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243900548, 'comment_body': 'Can you check the object ID and request ID is intended for this service like we do in the subscriber reception? This will allow us to support multiple services instead of assuming there is only one. ', 'comment_created': datetime.datetime(2023, 6, 27, 14, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243901931, 'comment_body': 'What if serialization fails?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243902880, 'comment_body': 'What does the last parameter of zero mean? Can you make it a constexpr variable? ', 'comment_created': datetime.datetime(2023, 6, 27, 15, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243907694, 'comment_body': 'Why do you cast `i` to `int` when you can just use the size_t unsigned print formatter? \r\n`printf(""%zu\\n"", x);`', 'comment_created': datetime.datetime(2023, 6, 27, 15, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243912840, 'comment_body': 'What are the purpose of the comments that repeat the variable name?\r\nFeel free to use doxygen comments that explain a bit more like so:\r\n`//! @brief The request ID for the service`\r\n', 'comment_created': datetime.datetime(2023, 6, 27, 15, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243913178, 'comment_body': 'Missing newline at the end of this file.', 'comment_created': datetime.datetime(2023, 6, 27, 15, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243915362, 'comment_body': 'These look nice and easy to add :D', 'comment_created': datetime.datetime(2023, 6, 27, 15, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1244876008, 'comment_body': '@arshPratap and @Ryanf55 - we should add the messages and service definitions to `Tools/ros2` as we should not have dependencies on private repos in ArduPilot master. Example PR here: https://github.com/arshPratap/ardupilot/pull/8\r\n\r\nA similar comment applies to building the integration service (IS) bindings and the custom IS config. \r\n\r\nThe steps needed to run the example should be incorporated into the launch scripts so we can bring up the environment with a single command. This could go in a follow up PR as not having the integration service does not cause a failure yet (but does result in the services not being visible which may be confusing). ', 'comment_created': datetime.datetime(2023, 6, 28, 8, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1252796305, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252796570, 'comment_body': 'Resolved @Ryanf55 ', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252797060, 'comment_body': 'Thanks for this..have added it accordingly', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252797311, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 5, 9, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252798080, 'comment_body': '@Ryanf55  resolved', 'comment_created': datetime.datetime(2023, 7, 5, 9, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252800037, 'comment_body': '`on_request` function is a static member function and it causes some linking error when the said variables are defined as static members , hence have assigned them here', 'comment_created': datetime.datetime(2023, 7, 5, 9, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1260427848, 'comment_body': 'you should be able to call to AP_Arming like this:\r\n - AP::arming().arm(AP_Arming::Method::DDS)\r\n - AP::arming().disarm(AP_Arming::Method::DDS)\r\n\r\nyou will need to add DDS as an arming method in AP_Arming.h\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 12, 0, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1260428192, 'comment_body': 'why uint8_t cast?\r\n', 'comment_created': datetime.datetime(2023, 7, 12, 0, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1260732348, 'comment_body': '```suggestion\r\n        uxr_buffer_reply(uxr_session, reliable_out, replier_id, sample_id, reply_buffer, sizeof(result));\r\n```\r\n\r\nCorrecting my earlier suggestion. The last arg should be the size of the serialised data, not the buffer size.\r\n\r\nFixes [RTPS_READER_HISTORY Error].', 'comment_created': datetime.datetime(2023, 7, 12, 7, 34, 12, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1265803124, 'comment_body': 'Thanks a lot @srmainwaring ! Have made the requested changes', 'comment_created': datetime.datetime(2023, 7, 17, 19, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1265803474, 'comment_body': 'Thanks for this !', 'comment_created': datetime.datetime(2023, 7, 17, 19, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1265803763, 'comment_body': 'Done.. Thanks for this @tridge !', 'comment_created': datetime.datetime(2023, 7, 17, 19, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1271905701, 'comment_body': 'Revert `[[maybe_unused]]` as it is `--std=c++17`, which we are not currently using. @Ryanf55 do you agree?', 'comment_created': datetime.datetime(2023, 7, 24, 8, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271906536, 'comment_body': 'See comment above on `[[maybe_unused]]`.', 'comment_created': datetime.datetime(2023, 7, 24, 8, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271919505, 'comment_body': 'Replace this section with a standard ROS 2 service call to the arming service. It removes placing an additional dependency on the repo https://github.com/arshPratap/ardupilot_ros2.\r\n\r\nThe  command is:\r\n\r\n```bash\r\nros2 service call /arm_motors ap_custom_services/srv/ArmMotors ""{arm: True}""\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 8, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271925043, 'comment_body': 'Update this section to reflect that the message and service interfaces are defined in `ardupilot_msgs` (https://github.com/ArduPilot/ardupilot/pull/24277). ', 'comment_created': datetime.datetime(2023, 7, 24, 8, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272035402, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 10, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272035592, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 10, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272080864, 'comment_body': '```suggestion\r\n            ros2: {\r\n                request_type: ""ardupilot_msgs/ArmMotors:request"",\r\n                reply_type: ""ardupilot_msgs/ArmMotors:response""\r\n            }\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 10, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272081405, 'comment_body': '```suggestion\r\n- Run the following command : `ros2 service call /arm_motors ardupilot_msgs/srv/ArmMotors ""{arm: True}""`\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 10, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272206075, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 12, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272206217, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 12, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1277012090, 'comment_body': 'fixed to use trampolines so non-static', 'comment_created': datetime.datetime(2023, 7, 28, 2, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277012562, 'comment_body': 'these messages will be very annoying. You could have a DDS_OPTIONS parameter with a bit which enables debug. Otherwise add a debug() macro. See AP_BLHeli.cpp for a debug macro example, it would default off', 'comment_created': datetime.datetime(2023, 7, 28, 2, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013269, 'comment_body': 'result in the reply should be true if we successfully disarmed', 'comment_created': datetime.datetime(2023, 7, 28, 2, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013575, 'comment_body': 'see above comments on debug code', 'comment_created': datetime.datetime(2023, 7, 28, 2, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013840, 'comment_body': 'what is %zu ?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013995, 'comment_body': 'also see comments on debug code', 'comment_created': datetime.datetime(2023, 7, 28, 2, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014313, 'comment_body': 'why a size_t? maybe a uint16_t ?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014522, 'comment_body': 'why have the arrays when it is always 1?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014827, 'comment_body': '```\r\nuxr_run_session_until_all_status(&session, requestTimeoutMs, &requests, &status, 1)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 2, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014992, 'comment_body': 'only ever 1 in this code, no loop', 'comment_created': datetime.datetime(2023, 7, 28, 2, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1278182053, 'comment_body': 'These were planned to be removed once the implementation of RC input is complete. ', 'comment_created': datetime.datetime(2023, 7, 29, 0, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182554, 'comment_body': '`%zu` is for size_t type. \r\n\r\nhttps://cplusplus.com/reference/cstdio/printf/\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 29, 0, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182670, 'comment_body': ""The `ARRAY_SIZE` macro calls `sizeof()` which returns a `size_t`. Since ArduPilot doesn't support containers with range-based for loops, we must manually set the type, so I chose one that matched what was returned by `ARRAY_SIZE`.\r\n\r\nSince ArduPilot doesn't support containers with iterators that support [range-based for loops of C++11](https://en.cppreference.com/w/cpp/language/range-for), `size_t` seemed like the right choice."", 'comment_created': datetime.datetime(2023, 7, 29, 0, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182901, 'comment_body': 'Arsh is probably mirroring the other structure established where publishers and subscribers had multiple requests. Are you just concerned about flash overhead here? This code only runs during initialization ', 'comment_created': datetime.datetime(2023, 7, 29, 0, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285258270, 'comment_body': 'Just curious - what is the reason to make these optional debug messages, all at the same level? ', 'comment_created': datetime.datetime(2023, 8, 6, 20, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285270302, 'comment_body': '@Ryanf55 tridge requested for the session failure messages for topics and services to be made as debug messages .. so to keep things in line I made the status messages as debug', 'comment_created': datetime.datetime(2023, 8, 6, 22, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285271183, 'comment_body': ""Ok, I'll follow up with Tridge - Errors would now be silently swallowed, but other libraries are allowed to call `GCS_SEND_TEXT(MAV_SEVERITY_ERROR` during initialization."", 'comment_created': datetime.datetime(2023, 8, 6, 22, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285272655, 'comment_body': 'move to top of file', 'comment_created': datetime.datetime(2023, 8, 6, 22, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285272830, 'comment_body': 'if (arm)', 'comment_created': datetime.datetime(2023, 8, 6, 22, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285274093, 'comment_body': 'add comment explaining why 8', 'comment_created': datetime.datetime(2023, 8, 6, 23, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285275121, 'comment_body': 'should sizeof(result) be reply_ub.offset?\r\nmaybe use ucdr_buffer_length(reply_buffer) ?', 'comment_created': datetime.datetime(2023, 8, 6, 23, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285291019, 'comment_body': 'Can you add this to the README as one of the exposed topics? All the others are currently documented. ', 'comment_created': datetime.datetime(2023, 8, 7, 0, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285295770, 'comment_body': 'Why were these moved away from the pointers to a different part of the header?', 'comment_created': datetime.datetime(2023, 8, 7, 1, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285296778, 'comment_body': ""This has larger scope than needed. It's just used to create a copy of data once. Can you try deleting it?"", 'comment_created': datetime.datetime(2023, 8, 7, 1, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285296888, 'comment_body': ""Decrease the scope of this to where it's used."", 'comment_created': datetime.datetime(2023, 8, 7, 1, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285301304, 'comment_body': ""Is this the right link? It's not the integration service."", 'comment_created': datetime.datetime(2023, 8, 7, 1, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285363389, 'comment_body': 'Did you accidentally re-format the whole README? This indent is now messed up. ', 'comment_created': datetime.datetime(2023, 8, 7, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285363936, 'comment_body': '```suggestion\r\n- Install and setup [Integration Services](https://integration-service.docs.eprosima.com/en/latest/installation_manual/installation.html) (it would be good to have a separate workspace for this)\r\n```\r\nSpelling', 'comment_created': datetime.datetime(2023, 8, 7, 4, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285369524, 'comment_body': 'Added `ros2 service list` as the command ..since integration service creates another node .. but otherwise added the service description', 'comment_created': datetime.datetime(2023, 8, 7, 4, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285369592, 'comment_body': 'done resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285369951, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370018, 'comment_body': 'done .. resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370137, 'comment_body': 'fixed the link..thanks for pointing out', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370342, 'comment_body': 'I ran the astyle on the readme file..no worries..have reverted the change', 'comment_created': datetime.datetime(2023, 8, 7, 4, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370415, 'comment_body': 'Resolved\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 4, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285381328, 'comment_body': 'Thanks, yea `astyle` is only used for the C++ code. ', 'comment_created': datetime.datetime(2023, 8, 7, 5, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1286167339, 'comment_body': '```suggestion\r\n            debug(""Request for arming received"");\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 17, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1286167610, 'comment_body': '```suggestion\r\n            debug(""Request for disarming received"");\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 17, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1286205244, 'comment_body': 'Add a note that the `ROS2-SH` packages need to be built with additional flags:\r\n\r\n```bash\r\n--cmake-args -DMIX_ROS_PACKAGES=""example_interfaces ardupilot_msgs""\r\n```\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 17, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1287982266, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1287982362, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1287983364, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1289476334, 'comment_body': 'This should be an error - preserve the original levels please.', 'comment_created': datetime.datetime(2023, 8, 10, 2, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1289483917, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 10, 2, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}]","[{'commit_sha': '6c883ab595df7a46c6319274f423e50ce1cd4e65', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b77ebe3c3c12e75b21665cd75a916a874a345d', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1409335067,AP_DDS: Added ROS 2 service support,"This is work in progress PR that aims to provide support for service support as requested in #23822 and will work as a foundation for #23363 . Currently we focus on providing support for Arming / Disarming motors.

@Ryanf55 @srmainwaring @tridge would like to know your thoughts on this",True,24145,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24145,https://github.com/ArduPilot/ardupilot/pull/24145,closed,248,25,11,2,24,77,2,0,"[{'name': 'Enhancement'}, {'name': 'ROS'}]",2023-06-27 08:13:35+00:00,2023-08-11 03:35:49+00:00,3871334.0,"44 days, 19:22:14","[{'comment_id': 1243896293, 'comment_body': 'Is there a reason this is separate from the existing class member variable`AP_DDS_Client::reliable_in`?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243897367, 'comment_body': 'Can you instead use the `[[maybe_unused]]` attribute instead of c-casts?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243898649, 'comment_body': 'If deserialization fails, this is the case you hit. Please check the return code of `ucdr_deserialize_bool`', 'comment_created': datetime.datetime(2023, 6, 27, 14, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243900548, 'comment_body': 'Can you check the object ID and request ID is intended for this service like we do in the subscriber reception? This will allow us to support multiple services instead of assuming there is only one. ', 'comment_created': datetime.datetime(2023, 6, 27, 14, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243901931, 'comment_body': 'What if serialization fails?', 'comment_created': datetime.datetime(2023, 6, 27, 14, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243902880, 'comment_body': 'What does the last parameter of zero mean? Can you make it a constexpr variable? ', 'comment_created': datetime.datetime(2023, 6, 27, 15, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243907694, 'comment_body': 'Why do you cast `i` to `int` when you can just use the size_t unsigned print formatter? \r\n`printf(""%zu\\n"", x);`', 'comment_created': datetime.datetime(2023, 6, 27, 15, 2, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243912840, 'comment_body': 'What are the purpose of the comments that repeat the variable name?\r\nFeel free to use doxygen comments that explain a bit more like so:\r\n`//! @brief The request ID for the service`\r\n', 'comment_created': datetime.datetime(2023, 6, 27, 15, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243913178, 'comment_body': 'Missing newline at the end of this file.', 'comment_created': datetime.datetime(2023, 6, 27, 15, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1243915362, 'comment_body': 'These look nice and easy to add :D', 'comment_created': datetime.datetime(2023, 6, 27, 15, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1244876008, 'comment_body': '@arshPratap and @Ryanf55 - we should add the messages and service definitions to `Tools/ros2` as we should not have dependencies on private repos in ArduPilot master. Example PR here: https://github.com/arshPratap/ardupilot/pull/8\r\n\r\nA similar comment applies to building the integration service (IS) bindings and the custom IS config. \r\n\r\nThe steps needed to run the example should be incorporated into the launch scripts so we can bring up the environment with a single command. This could go in a follow up PR as not having the integration service does not cause a failure yet (but does result in the services not being visible which may be confusing). ', 'comment_created': datetime.datetime(2023, 6, 28, 8, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1252796305, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 13, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252796570, 'comment_body': 'Resolved @Ryanf55 ', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252797060, 'comment_body': 'Thanks for this..have added it accordingly', 'comment_created': datetime.datetime(2023, 7, 5, 9, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252797311, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 5, 9, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252798080, 'comment_body': '@Ryanf55  resolved', 'comment_created': datetime.datetime(2023, 7, 5, 9, 8, 39, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1252800037, 'comment_body': '`on_request` function is a static member function and it causes some linking error when the said variables are defined as static members , hence have assigned them here', 'comment_created': datetime.datetime(2023, 7, 5, 9, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1260427848, 'comment_body': 'you should be able to call to AP_Arming like this:\r\n - AP::arming().arm(AP_Arming::Method::DDS)\r\n - AP::arming().disarm(AP_Arming::Method::DDS)\r\n\r\nyou will need to add DDS as an arming method in AP_Arming.h\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 12, 0, 40, 54, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1260428192, 'comment_body': 'why uint8_t cast?\r\n', 'comment_created': datetime.datetime(2023, 7, 12, 0, 41, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1260732348, 'comment_body': '```suggestion\r\n        uxr_buffer_reply(uxr_session, reliable_out, replier_id, sample_id, reply_buffer, sizeof(result));\r\n```\r\n\r\nCorrecting my earlier suggestion. The last arg should be the size of the serialised data, not the buffer size.\r\n\r\nFixes [RTPS_READER_HISTORY Error].', 'comment_created': datetime.datetime(2023, 7, 12, 7, 34, 12, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1265803124, 'comment_body': 'Thanks a lot @srmainwaring ! Have made the requested changes', 'comment_created': datetime.datetime(2023, 7, 17, 19, 20, 35, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1265803474, 'comment_body': 'Thanks for this !', 'comment_created': datetime.datetime(2023, 7, 17, 19, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1265803763, 'comment_body': 'Done.. Thanks for this @tridge !', 'comment_created': datetime.datetime(2023, 7, 17, 19, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1271905701, 'comment_body': 'Revert `[[maybe_unused]]` as it is `--std=c++17`, which we are not currently using. @Ryanf55 do you agree?', 'comment_created': datetime.datetime(2023, 7, 24, 8, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271906536, 'comment_body': 'See comment above on `[[maybe_unused]]`.', 'comment_created': datetime.datetime(2023, 7, 24, 8, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271919505, 'comment_body': 'Replace this section with a standard ROS 2 service call to the arming service. It removes placing an additional dependency on the repo https://github.com/arshPratap/ardupilot_ros2.\r\n\r\nThe  command is:\r\n\r\n```bash\r\nros2 service call /arm_motors ap_custom_services/srv/ArmMotors ""{arm: True}""\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 8, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1271925043, 'comment_body': 'Update this section to reflect that the message and service interfaces are defined in `ardupilot_msgs` (https://github.com/ArduPilot/ardupilot/pull/24277). ', 'comment_created': datetime.datetime(2023, 7, 24, 8, 32, 40, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272035402, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 10, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272035592, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 10, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272080864, 'comment_body': '```suggestion\r\n            ros2: {\r\n                request_type: ""ardupilot_msgs/ArmMotors:request"",\r\n                reply_type: ""ardupilot_msgs/ArmMotors:response""\r\n            }\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 10, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272081405, 'comment_body': '```suggestion\r\n- Run the following command : `ros2 service call /arm_motors ardupilot_msgs/srv/ArmMotors ""{arm: True}""`\r\n```', 'comment_created': datetime.datetime(2023, 7, 24, 10, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1272206075, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 12, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1272206217, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 24, 12, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1277012090, 'comment_body': 'fixed to use trampolines so non-static', 'comment_created': datetime.datetime(2023, 7, 28, 2, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277012562, 'comment_body': 'these messages will be very annoying. You could have a DDS_OPTIONS parameter with a bit which enables debug. Otherwise add a debug() macro. See AP_BLHeli.cpp for a debug macro example, it would default off', 'comment_created': datetime.datetime(2023, 7, 28, 2, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013269, 'comment_body': 'result in the reply should be true if we successfully disarmed', 'comment_created': datetime.datetime(2023, 7, 28, 2, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013575, 'comment_body': 'see above comments on debug code', 'comment_created': datetime.datetime(2023, 7, 28, 2, 26, 38, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013840, 'comment_body': 'what is %zu ?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277013995, 'comment_body': 'also see comments on debug code', 'comment_created': datetime.datetime(2023, 7, 28, 2, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014313, 'comment_body': 'why a size_t? maybe a uint16_t ?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 28, 26, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014522, 'comment_body': 'why have the arrays when it is always 1?', 'comment_created': datetime.datetime(2023, 7, 28, 2, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014827, 'comment_body': '```\r\nuxr_run_session_until_all_status(&session, requestTimeoutMs, &requests, &status, 1)\r\n```', 'comment_created': datetime.datetime(2023, 7, 28, 2, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1277014992, 'comment_body': 'only ever 1 in this code, no loop', 'comment_created': datetime.datetime(2023, 7, 28, 2, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1278182053, 'comment_body': 'These were planned to be removed once the implementation of RC input is complete. ', 'comment_created': datetime.datetime(2023, 7, 29, 0, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182554, 'comment_body': '`%zu` is for size_t type. \r\n\r\nhttps://cplusplus.com/reference/cstdio/printf/\r\n\r\n', 'comment_created': datetime.datetime(2023, 7, 29, 0, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182670, 'comment_body': ""The `ARRAY_SIZE` macro calls `sizeof()` which returns a `size_t`. Since ArduPilot doesn't support containers with range-based for loops, we must manually set the type, so I chose one that matched what was returned by `ARRAY_SIZE`.\r\n\r\nSince ArduPilot doesn't support containers with iterators that support [range-based for loops of C++11](https://en.cppreference.com/w/cpp/language/range-for), `size_t` seemed like the right choice."", 'comment_created': datetime.datetime(2023, 7, 29, 0, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1278182901, 'comment_body': 'Arsh is probably mirroring the other structure established where publishers and subscribers had multiple requests. Are you just concerned about flash overhead here? This code only runs during initialization ', 'comment_created': datetime.datetime(2023, 7, 29, 0, 15, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285258270, 'comment_body': 'Just curious - what is the reason to make these optional debug messages, all at the same level? ', 'comment_created': datetime.datetime(2023, 8, 6, 20, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285270302, 'comment_body': '@Ryanf55 tridge requested for the session failure messages for topics and services to be made as debug messages .. so to keep things in line I made the status messages as debug', 'comment_created': datetime.datetime(2023, 8, 6, 22, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285271183, 'comment_body': ""Ok, I'll follow up with Tridge - Errors would now be silently swallowed, but other libraries are allowed to call `GCS_SEND_TEXT(MAV_SEVERITY_ERROR` during initialization."", 'comment_created': datetime.datetime(2023, 8, 6, 22, 41, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285272655, 'comment_body': 'move to top of file', 'comment_created': datetime.datetime(2023, 8, 6, 22, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285272830, 'comment_body': 'if (arm)', 'comment_created': datetime.datetime(2023, 8, 6, 22, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285274093, 'comment_body': 'add comment explaining why 8', 'comment_created': datetime.datetime(2023, 8, 6, 23, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285275121, 'comment_body': 'should sizeof(result) be reply_ub.offset?\r\nmaybe use ucdr_buffer_length(reply_buffer) ?', 'comment_created': datetime.datetime(2023, 8, 6, 23, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1285291019, 'comment_body': 'Can you add this to the README as one of the exposed topics? All the others are currently documented. ', 'comment_created': datetime.datetime(2023, 8, 7, 0, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285295770, 'comment_body': 'Why were these moved away from the pointers to a different part of the header?', 'comment_created': datetime.datetime(2023, 8, 7, 1, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285296778, 'comment_body': ""This has larger scope than needed. It's just used to create a copy of data once. Can you try deleting it?"", 'comment_created': datetime.datetime(2023, 8, 7, 1, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285296888, 'comment_body': ""Decrease the scope of this to where it's used."", 'comment_created': datetime.datetime(2023, 8, 7, 1, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285301304, 'comment_body': ""Is this the right link? It's not the integration service."", 'comment_created': datetime.datetime(2023, 8, 7, 1, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285363389, 'comment_body': 'Did you accidentally re-format the whole README? This indent is now messed up. ', 'comment_created': datetime.datetime(2023, 8, 7, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285363936, 'comment_body': '```suggestion\r\n- Install and setup [Integration Services](https://integration-service.docs.eprosima.com/en/latest/installation_manual/installation.html) (it would be good to have a separate workspace for this)\r\n```\r\nSpelling', 'comment_created': datetime.datetime(2023, 8, 7, 4, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1285369524, 'comment_body': 'Added `ros2 service list` as the command ..since integration service creates another node .. but otherwise added the service description', 'comment_created': datetime.datetime(2023, 8, 7, 4, 39, 16, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285369592, 'comment_body': 'done resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285369951, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370018, 'comment_body': 'done .. resolved', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370137, 'comment_body': 'fixed the link..thanks for pointing out', 'comment_created': datetime.datetime(2023, 8, 7, 4, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370342, 'comment_body': 'I ran the astyle on the readme file..no worries..have reverted the change', 'comment_created': datetime.datetime(2023, 8, 7, 4, 41, 19, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285370415, 'comment_body': 'Resolved\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 4, 41, 32, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1285381328, 'comment_body': 'Thanks, yea `astyle` is only used for the C++ code. ', 'comment_created': datetime.datetime(2023, 8, 7, 5, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1286167339, 'comment_body': '```suggestion\r\n            debug(""Request for arming received"");\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 17, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1286167610, 'comment_body': '```suggestion\r\n            debug(""Request for disarming received"");\r\n```', 'comment_created': datetime.datetime(2023, 8, 7, 17, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1286205244, 'comment_body': 'Add a note that the `ROS2-SH` packages need to be built with additional flags:\r\n\r\n```bash\r\n--cmake-args -DMIX_ROS_PACKAGES=""example_interfaces ardupilot_msgs""\r\n```\r\n', 'comment_created': datetime.datetime(2023, 8, 7, 17, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1287982266, 'comment_body': 'Resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1287982362, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1287983364, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 9, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1289476334, 'comment_body': 'This should be an error - preserve the original levels please.', 'comment_created': datetime.datetime(2023, 8, 10, 2, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1289483917, 'comment_body': 'resolved', 'comment_created': datetime.datetime(2023, 8, 10, 2, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}]","[{'commit_sha': '6c883ab595df7a46c6319274f423e50ce1cd4e65', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b77ebe3c3c12e75b21665cd75a916a874a345d', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1431155065,Tools: add custom ROS 2 messages and service interfaces,"Add ROS 2 service interface to `Tools/ros2`.

- Defines a ROS 2 service interface for arming motors.
- Pre-requisite for https://github.com/ArduPilot/ardupilot/pull/24145.

",True,24277,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24277,https://github.com/ArduPilot/ardupilot/pull/24277,closed,55,0,3,1,6,0,1,0,[{'name': 'ROS'}],2023-07-12 12:04:07+00:00,2023-07-19 07:36:29+00:00,588742.0,"6 days, 19:32:22",[],"[{'commit_sha': '129419e3cba5981aea8a95645a036b21e9883094', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Rhys Mainwaring,24916364,rhys.mainwaring@me.com,User,,206,,0,71
1431155065,Tools: add custom ROS 2 messages and service interfaces,"Add ROS 2 service interface to `Tools/ros2`.

- Defines a ROS 2 service interface for arming motors.
- Pre-requisite for https://github.com/ArduPilot/ardupilot/pull/24145.

",True,24277,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24277,https://github.com/ArduPilot/ardupilot/pull/24277,closed,55,0,3,1,6,0,1,0,[{'name': 'ROS'}],2023-07-12 12:04:07+00:00,2023-07-19 07:36:29+00:00,588742.0,"6 days, 19:32:22",[],"[{'commit_sha': '129419e3cba5981aea8a95645a036b21e9883094', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Rhys Mainwaring,24916364,rhys.mainwaring@me.com,User,,206,,0,71
1431155065,Tools: add custom ROS 2 messages and service interfaces,"Add ROS 2 service interface to `Tools/ros2`.

- Defines a ROS 2 service interface for arming motors.
- Pre-requisite for https://github.com/ArduPilot/ardupilot/pull/24145.

",True,24277,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24277,https://github.com/ArduPilot/ardupilot/pull/24277,closed,55,0,3,1,6,0,1,0,[{'name': 'ROS'}],2023-07-12 12:04:07+00:00,2023-07-19 07:36:29+00:00,588742.0,"6 days, 19:32:22",[],"[{'commit_sha': '129419e3cba5981aea8a95645a036b21e9883094', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Rhys Mainwaring,24916364,rhys.mainwaring@me.com,User,,206,,0,71
1481416426,Tools : Added custom ROS-2 service definition for switching drive modes,"Added custom ROS-2 service definition for switching drive modes.
Service definition used from [here](https://github.com/arshPratap/ardupilot_ros2/blob/main/ap_custom_services/srv/ModeSelect.srv)
@Ryanf55 @srmainwaring @tridge ",True,24705,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24705,https://github.com/ArduPilot/ardupilot/pull/24705,closed,16,0,2,1,5,6,1,0,[{'name': 'ROS'}],2023-08-19 10:23:09+00:00,2023-09-01 07:49:34+00:00,1113985.0,"12 days, 21:26:25","[{'comment_id': 1299209571, 'comment_body': 'Please add trailing newline so you `cat` the file without messing up your terminal. ', 'comment_created': datetime.datetime(2023, 8, 19, 15, 6, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1299210335, 'comment_body': ""Is there a more maintainable way to link the modes that won't get out of date when the line numbers change? "", 'comment_created': datetime.datetime(2023, 8, 19, 15, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1299383102, 'comment_body': 'Perhaps we could just drop the line numbers and provide a link to respective wikis for more detail?\r\n', 'comment_created': datetime.datetime(2023, 8, 20, 14, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1299383819, 'comment_body': '```suggestion\r\n# Copter : https://github.com/ArduPilot/ardupilot/blob/master/ArduCopter/mode.h \r\n# Rover  : https://github.com/ArduPilot/ardupilot/blob/master/Rover/mode.h\r\n# Plane  : https://github.com/ArduPilot/ardupilot/blob/master/ArduPlane/mode.h\r\n```', 'comment_created': datetime.datetime(2023, 8, 20, 14, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1305105933, 'comment_body': 'int8 is signed? why not uint8 ?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1305106001, 'comment_body': 'why signed?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': 'aa4619c494fab1a4de8116a44bdc7db43d9279c1', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1481416426,Tools : Added custom ROS-2 service definition for switching drive modes,"Added custom ROS-2 service definition for switching drive modes.
Service definition used from [here](https://github.com/arshPratap/ardupilot_ros2/blob/main/ap_custom_services/srv/ModeSelect.srv)
@Ryanf55 @srmainwaring @tridge ",True,24705,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24705,https://github.com/ArduPilot/ardupilot/pull/24705,closed,16,0,2,1,5,6,1,0,[{'name': 'ROS'}],2023-08-19 10:23:09+00:00,2023-09-01 07:49:34+00:00,1113985.0,"12 days, 21:26:25","[{'comment_id': 1299209571, 'comment_body': 'Please add trailing newline so you `cat` the file without messing up your terminal. ', 'comment_created': datetime.datetime(2023, 8, 19, 15, 6, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1299210335, 'comment_body': ""Is there a more maintainable way to link the modes that won't get out of date when the line numbers change? "", 'comment_created': datetime.datetime(2023, 8, 19, 15, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1299383102, 'comment_body': 'Perhaps we could just drop the line numbers and provide a link to respective wikis for more detail?\r\n', 'comment_created': datetime.datetime(2023, 8, 20, 14, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1299383819, 'comment_body': '```suggestion\r\n# Copter : https://github.com/ArduPilot/ardupilot/blob/master/ArduCopter/mode.h \r\n# Rover  : https://github.com/ArduPilot/ardupilot/blob/master/Rover/mode.h\r\n# Plane  : https://github.com/ArduPilot/ardupilot/blob/master/ArduPlane/mode.h\r\n```', 'comment_created': datetime.datetime(2023, 8, 20, 14, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1305105933, 'comment_body': 'int8 is signed? why not uint8 ?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1305106001, 'comment_body': 'why signed?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': 'aa4619c494fab1a4de8116a44bdc7db43d9279c1', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1481416426,Tools : Added custom ROS-2 service definition for switching drive modes,"Added custom ROS-2 service definition for switching drive modes.
Service definition used from [here](https://github.com/arshPratap/ardupilot_ros2/blob/main/ap_custom_services/srv/ModeSelect.srv)
@Ryanf55 @srmainwaring @tridge ",True,24705,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24705,https://github.com/ArduPilot/ardupilot/pull/24705,closed,16,0,2,1,5,6,1,0,[{'name': 'ROS'}],2023-08-19 10:23:09+00:00,2023-09-01 07:49:34+00:00,1113985.0,"12 days, 21:26:25","[{'comment_id': 1299209571, 'comment_body': 'Please add trailing newline so you `cat` the file without messing up your terminal. ', 'comment_created': datetime.datetime(2023, 8, 19, 15, 6, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1299210335, 'comment_body': ""Is there a more maintainable way to link the modes that won't get out of date when the line numbers change? "", 'comment_created': datetime.datetime(2023, 8, 19, 15, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1299383102, 'comment_body': 'Perhaps we could just drop the line numbers and provide a link to respective wikis for more detail?\r\n', 'comment_created': datetime.datetime(2023, 8, 20, 14, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1299383819, 'comment_body': '```suggestion\r\n# Copter : https://github.com/ArduPilot/ardupilot/blob/master/ArduCopter/mode.h \r\n# Rover  : https://github.com/ArduPilot/ardupilot/blob/master/Rover/mode.h\r\n# Plane  : https://github.com/ArduPilot/ardupilot/blob/master/ArduPlane/mode.h\r\n```', 'comment_created': datetime.datetime(2023, 8, 20, 14, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1305105933, 'comment_body': 'int8 is signed? why not uint8 ?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 59, 37, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1305106001, 'comment_body': 'why signed?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': 'aa4619c494fab1a4de8116a44bdc7db43d9279c1', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1481453500,AP_DDS: Mode Switch Service,"This PR aims to add Mode Switch service and has a dependency on #24705 
@srmainwaring @Ryanf55 @tridge 
",True,24706,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24706,https://github.com/ArduPilot/ardupilot/pull/24706,closed,62,21,6,2,10,5,2,0,"[{'name': 'ROS'}, {'name': 'MergeOnCIPass'}]",2023-08-19 13:30:53+00:00,2023-09-10 23:50:14+00:00,1937961.0,"22 days, 10:19:21","[{'comment_id': 1305105351, 'comment_body': 'what is this for?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1311709898, 'comment_body': 'This is a merge issue, can you remove these lines? It is implemented just above.', 'comment_created': datetime.datetime(2023, 8, 31, 14, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1313103999, 'comment_body': ""The one thing I am unsure about is the circular includes. \r\n\r\nOddly enough, AP_Vehicle.h doesn't include AP_DDS_Client.h. "", 'comment_created': datetime.datetime(2023, 9, 1, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1313135355, 'comment_body': ""`AP_Vehicle.h` forward declares `AP_DDS_Client`, has a pointer member variable `dds_client`, and pulls the include into the translation unit. So I think that's ok. "", 'comment_created': datetime.datetime(2023, 9, 1, 14, 47, 19, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1319603959, 'comment_body': ""This is from the example. I think it is intended for use with the `uxr_run_session_until_all_status` version of the `uxr_run_session_*` functions, where you'd capture the `request_id` for each topic / replier when serialising into the buffer.\r\n"", 'comment_created': datetime.datetime(2023, 9, 8, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}]","[{'commit_sha': '2d328d47c42976c01f28b45d9d649de28947ffde', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5a6860dc2d47f5bbcb47baecafa389320bbadaf', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1481453500,AP_DDS: Mode Switch Service,"This PR aims to add Mode Switch service and has a dependency on #24705 
@srmainwaring @Ryanf55 @tridge 
",True,24706,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24706,https://github.com/ArduPilot/ardupilot/pull/24706,closed,62,21,6,2,10,5,2,0,"[{'name': 'ROS'}, {'name': 'MergeOnCIPass'}]",2023-08-19 13:30:53+00:00,2023-09-10 23:50:14+00:00,1937961.0,"22 days, 10:19:21","[{'comment_id': 1305105351, 'comment_body': 'what is this for?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1311709898, 'comment_body': 'This is a merge issue, can you remove these lines? It is implemented just above.', 'comment_created': datetime.datetime(2023, 8, 31, 14, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1313103999, 'comment_body': ""The one thing I am unsure about is the circular includes. \r\n\r\nOddly enough, AP_Vehicle.h doesn't include AP_DDS_Client.h. "", 'comment_created': datetime.datetime(2023, 9, 1, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1313135355, 'comment_body': ""`AP_Vehicle.h` forward declares `AP_DDS_Client`, has a pointer member variable `dds_client`, and pulls the include into the translation unit. So I think that's ok. "", 'comment_created': datetime.datetime(2023, 9, 1, 14, 47, 19, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1319603959, 'comment_body': ""This is from the example. I think it is intended for use with the `uxr_run_session_until_all_status` version of the `uxr_run_session_*` functions, where you'd capture the `request_id` for each topic / replier when serialising into the buffer.\r\n"", 'comment_created': datetime.datetime(2023, 9, 8, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}]","[{'commit_sha': '2d328d47c42976c01f28b45d9d649de28947ffde', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5a6860dc2d47f5bbcb47baecafa389320bbadaf', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1481453500,AP_DDS: Mode Switch Service,"This PR aims to add Mode Switch service and has a dependency on #24705 
@srmainwaring @Ryanf55 @tridge 
",True,24706,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24706,https://github.com/ArduPilot/ardupilot/pull/24706,closed,62,21,6,2,10,5,2,0,"[{'name': 'ROS'}, {'name': 'MergeOnCIPass'}]",2023-08-19 13:30:53+00:00,2023-09-10 23:50:14+00:00,1937961.0,"22 days, 10:19:21","[{'comment_id': 1305105351, 'comment_body': 'what is this for?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 58, 6, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1311709898, 'comment_body': 'This is a merge issue, can you remove these lines? It is implemented just above.', 'comment_created': datetime.datetime(2023, 8, 31, 14, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1313103999, 'comment_body': ""The one thing I am unsure about is the circular includes. \r\n\r\nOddly enough, AP_Vehicle.h doesn't include AP_DDS_Client.h. "", 'comment_created': datetime.datetime(2023, 9, 1, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1313135355, 'comment_body': ""`AP_Vehicle.h` forward declares `AP_DDS_Client`, has a pointer member variable `dds_client`, and pulls the include into the translation unit. So I think that's ok. "", 'comment_created': datetime.datetime(2023, 9, 1, 14, 47, 19, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}, {'comment_id': 1319603959, 'comment_body': ""This is from the example. I think it is intended for use with the `uxr_run_session_until_all_status` version of the `uxr_run_session_*` functions, where you'd capture the `request_id` for each topic / replier when serialising into the buffer.\r\n"", 'comment_created': datetime.datetime(2023, 9, 8, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'srmainwaring', 'type': 'User'}]","[{'commit_sha': '2d328d47c42976c01f28b45d9d649de28947ffde', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5a6860dc2d47f5bbcb47baecafa389320bbadaf', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1486182249,AP_DDS: Added verbose debugging output messages,"As discussed in #24145 , with @tridge .. I have converted several output messages to debugging based output messages.
Was planning to have the ERROR messages and the subsequent ERROR status messages be shown in deeper debugging levels.
@Ryanf55 @srmainwaring thoughts ?",False,24740,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24740,https://github.com/ArduPilot/ardupilot/pull/24740,open,43,18,2,1,3,4,1,0,[{'name': 'ROS'}],2023-08-23 10:37:14+00:00,,0.0,,"[{'comment_id': 1303198841, 'comment_body': 'Agree, can you figure out how to do this?', 'comment_created': datetime.datetime(2023, 8, 23, 15, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1303939953, 'comment_body': '@Ryanf55 updated the PR..could you take a look ?\r\nThanks', 'comment_created': datetime.datetime(2023, 8, 24, 7, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1305103995, 'comment_body': 'why not pass a debug level to the debug() macro? so:\r\n  debug(3, MAV_SEVERITY_INFO, ""DDS: an unimportant debug message"");\r\n', 'comment_created': datetime.datetime(2023, 8, 25, 3, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1305105474, 'comment_body': 'Could potentially just use the MAV_SEVERITY_LEVEL.... `MAV_SEVERITY_INFO` in this case.  Do you need the extra parameter?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}]","[{'commit_sha': '2669e2c46570d27a53330fa1ab6a0025e98f8433', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1486182249,AP_DDS: Added verbose debugging output messages,"As discussed in #24145 , with @tridge .. I have converted several output messages to debugging based output messages.
Was planning to have the ERROR messages and the subsequent ERROR status messages be shown in deeper debugging levels.
@Ryanf55 @srmainwaring thoughts ?",False,24740,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24740,https://github.com/ArduPilot/ardupilot/pull/24740,open,43,18,2,1,3,4,1,0,[{'name': 'ROS'}],2023-08-23 10:37:14+00:00,,0.0,,"[{'comment_id': 1303198841, 'comment_body': 'Agree, can you figure out how to do this?', 'comment_created': datetime.datetime(2023, 8, 23, 15, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1303939953, 'comment_body': '@Ryanf55 updated the PR..could you take a look ?\r\nThanks', 'comment_created': datetime.datetime(2023, 8, 24, 7, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1305103995, 'comment_body': 'why not pass a debug level to the debug() macro? so:\r\n  debug(3, MAV_SEVERITY_INFO, ""DDS: an unimportant debug message"");\r\n', 'comment_created': datetime.datetime(2023, 8, 25, 3, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1305105474, 'comment_body': 'Could potentially just use the MAV_SEVERITY_LEVEL.... `MAV_SEVERITY_INFO` in this case.  Do you need the extra parameter?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}]","[{'commit_sha': '2669e2c46570d27a53330fa1ab6a0025e98f8433', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16
1486182249,AP_DDS: Added verbose debugging output messages,"As discussed in #24145 , with @tridge .. I have converted several output messages to debugging based output messages.
Was planning to have the ERROR messages and the subsequent ERROR status messages be shown in deeper debugging levels.
@Ryanf55 @srmainwaring thoughts ?",False,24740,https://api.github.com/repos/ArduPilot/ardupilot/pulls/24740,https://github.com/ArduPilot/ardupilot/pull/24740,open,43,18,2,1,3,4,1,0,[{'name': 'ROS'}],2023-08-23 10:37:14+00:00,,0.0,,"[{'comment_id': 1303198841, 'comment_body': 'Agree, can you figure out how to do this?', 'comment_created': datetime.datetime(2023, 8, 23, 15, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Ryanf55', 'type': 'User'}, {'comment_id': 1303939953, 'comment_body': '@Ryanf55 updated the PR..could you take a look ?\r\nThanks', 'comment_created': datetime.datetime(2023, 8, 24, 7, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arshPratap', 'type': 'User'}, {'comment_id': 1305103995, 'comment_body': 'why not pass a debug level to the debug() macro? so:\r\n  debug(3, MAV_SEVERITY_INFO, ""DDS: an unimportant debug message"");\r\n', 'comment_created': datetime.datetime(2023, 8, 25, 3, 55, 58, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 1305105474, 'comment_body': 'Could potentially just use the MAV_SEVERITY_LEVEL.... `MAV_SEVERITY_INFO` in this case.  Do you need the extra parameter?', 'comment_created': datetime.datetime(2023, 8, 25, 3, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}]","[{'commit_sha': '2669e2c46570d27a53330fa1ab6a0025e98f8433', 'committer_username': 'arshPratap', 'committer_name': 'Arsh Pratap', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 29, 13, 52, 54, tzinfo=datetime.timezone.utc)}]",Arsh Pratap,62841337,,User,,57,,3,16

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
7512484,ardupilot,ArduPilot/ardupilot,C++,16997,10371,659,1074,64474,2445,71,1017,"[{'id': 1486182249, 'number': 24740, 'closed': None, 'created': datetime.datetime(2023, 8, 23, 10, 37, 14, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 43, 'deletions': 18, 'state': 'open'}, {'id': 1481453500, 'number': 24706, 'closed': datetime.datetime(2023, 9, 10, 23, 50, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 13, 30, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1937961.0, 'time_delta': '22 days, 10:19:21', 'additions': 62, 'deletions': 21, 'state': 'closed'}, {'id': 1481416426, 'number': 24705, 'closed': datetime.datetime(2023, 9, 1, 7, 49, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 10, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1113985.0, 'time_delta': '12 days, 21:26:25', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 1481396985, 'number': 24704, 'closed': datetime.datetime(2023, 8, 19, 13, 13, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 19, 8, 45, 51, tzinfo=datetime.timezone.utc), 'time_taken': 16068.0, 'time_delta': '4:27:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1409335067, 'number': 24145, 'closed': datetime.datetime(2023, 8, 11, 3, 35, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 8, 13, 35, tzinfo=datetime.timezone.utc), 'time_taken': 3871334.0, 'time_delta': '44 days, 19:22:14', 'additions': 248, 'deletions': 25, 'state': 'closed'}, {'id': 1331113604, 'number': 23629, 'closed': datetime.datetime(2023, 6, 1, 1, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 27, 23, 24, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2945630.0, 'time_delta': '34 days, 2:13:50', 'additions': 187, 'deletions': 25, 'state': 'closed'}, {'id': 1304508020, 'number': 23413, 'closed': datetime.datetime(2023, 4, 6, 10, 45, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 10, 22, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1383.0, 'time_delta': '0:23:03', 'additions': 7, 'deletions': 12, 'state': 'closed'}, {'id': 1303209268, 'number': 23403, 'closed': datetime.datetime(2023, 4, 14, 2, 5, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 5, 13, 32, 56, tzinfo=datetime.timezone.utc), 'time_taken': 736339.0, 'time_delta': '8 days, 12:32:19', 'additions': 90, 'deletions': 114, 'state': 'closed'}, {'id': 670534381, 'number': 17779, 'closed': datetime.datetime(2023, 3, 21, 22, 22, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 15, 53, 25, tzinfo=datetime.timezone.utc), 'time_taken': 55664952.0, 'time_delta': '644 days, 6:29:12', 'additions': 1375, 'deletions': 1, 'state': 'closed'}, {'id': 628389853, 'number': 17321, 'closed': datetime.datetime(2021, 6, 8, 6, 50, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 8, 47, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3276215.0, 'time_delta': '37 days, 22:03:35', 'additions': 21, 'deletions': 6, 'state': 'closed'}, {'id': 592559952, 'number': 16896, 'closed': datetime.datetime(2021, 4, 10, 0, 47, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 14, 15, 7, 43, tzinfo=datetime.timezone.utc), 'time_taken': 2281170.0, 'time_delta': '26 days, 9:39:30', 'additions': 8, 'deletions': 11, 'state': 'closed'}, {'id': 592557630, 'number': 16895, 'closed': None, 'created': datetime.datetime(2021, 3, 14, 14, 53, 26, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 19, 'deletions': 6, 'state': 'open'}, {'id': 582468658, 'number': 16779, 'closed': None, 'created': datetime.datetime(2021, 3, 1, 22, 15, 43, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 110, 'deletions': 15, 'state': 'open'}, {'id': 581434751, 'number': 16762, 'closed': datetime.datetime(2021, 3, 1, 22, 16, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 28, 1, 37, 39, tzinfo=datetime.timezone.utc), 'time_taken': 160751.0, 'time_delta': '1 day, 20:39:11', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 573209236, 'number': 16625, 'closed': None, 'created': datetime.datetime(2021, 2, 15, 2, 29, 35, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 39, 'deletions': 8, 'state': 'open'}, {'id': 572885632, 'number': 16617, 'closed': datetime.datetime(2022, 9, 26, 9, 53, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 13, 5, 9, 58, tzinfo=datetime.timezone.utc), 'time_taken': 50993029.0, 'time_delta': '590 days, 4:43:49', 'additions': 27, 'deletions': 3, 'state': 'closed'}, {'id': 572839889, 'number': 16613, 'closed': datetime.datetime(2024, 7, 25, 7, 2, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 23, 56, 8, tzinfo=datetime.timezone.utc), 'time_taken': 108716808.0, 'time_delta': '1258 days, 7:06:48', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 572810000, 'number': 16610, 'closed': datetime.datetime(2024, 3, 11, 10, 40, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 22, 23, 35, tzinfo=datetime.timezone.utc), 'time_taken': 96984997.0, 'time_delta': '1122 days, 12:16:37', 'additions': 16, 'deletions': 4, 'state': 'closed'}, {'id': 569687417, 'number': 16562, 'closed': datetime.datetime(2021, 5, 4, 23, 27, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 8, 18, 39, 20, tzinfo=datetime.timezone.utc), 'time_taken': 7361311.0, 'time_delta': '85 days, 4:48:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 568459416, 'number': 16530, 'closed': datetime.datetime(2021, 2, 8, 0, 12, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 5, 16, 15, 12, tzinfo=datetime.timezone.utc), 'time_taken': 201460.0, 'time_delta': '2 days, 7:57:40', 'additions': 0, 'deletions': 5, 'state': 'closed'}, {'id': 565073231, 'number': 16473, 'closed': datetime.datetime(2024, 7, 25, 7, 4, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 1, 10, 43, 1, tzinfo=datetime.timezone.utc), 'time_taken': 109714909.0, 'time_delta': '1269 days, 20:21:49', 'additions': 205, 'deletions': 10, 'state': 'closed'}, {'id': 556183668, 'number': 16338, 'closed': None, 'created': datetime.datetime(2021, 1, 16, 14, 35, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 2, 'deletions': 9, 'state': 'open'}, {'id': 552101187, 'number': 16284, 'closed': datetime.datetime(2021, 6, 18, 22, 59, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 9, 9, 4, 9, tzinfo=datetime.timezone.utc), 'time_taken': 13874150.0, 'time_delta': '160 days, 13:55:50', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 551095683, 'number': 16260, 'closed': datetime.datetime(2021, 2, 3, 2, 2, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 7, 14, 35, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2287664.0, 'time_delta': '26 days, 11:27:44', 'additions': 53, 'deletions': 31, 'state': 'closed'}, {'id': 548744235, 'number': 16229, 'closed': datetime.datetime(2021, 1, 5, 9, 43, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 5, 7, 55, 59, tzinfo=datetime.timezone.utc), 'time_taken': 6426.0, 'time_delta': '1:47:06', 'additions': 35, 'deletions': 11, 'state': 'closed'}, {'id': 545718610, 'number': 16141, 'closed': datetime.datetime(2020, 12, 27, 23, 46, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 26, 17, 45, 16, tzinfo=datetime.timezone.utc), 'time_taken': 108069.0, 'time_delta': '1 day, 6:01:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 545177214, 'number': 16132, 'closed': datetime.datetime(2021, 2, 3, 3, 45, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 24, 6, 58, tzinfo=datetime.timezone.utc), 'time_taken': 3530832.0, 'time_delta': '40 days, 20:47:12', 'additions': 5, 'deletions': 3, 'state': 'closed'}, {'id': 542884499, 'number': 16101, 'closed': datetime.datetime(2020, 12, 21, 11, 26, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 19, 6, 16, 17, tzinfo=datetime.timezone.utc), 'time_taken': 191414.0, 'time_delta': '2 days, 5:10:14', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 540305254, 'number': 16064, 'closed': None, 'created': datetime.datetime(2020, 12, 15, 14, 47, 24, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 20, 'deletions': 0, 'state': 'open'}, {'id': 536227037, 'number': 16028, 'closed': datetime.datetime(2020, 12, 11, 21, 27, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 10, 20, 17, 28, tzinfo=datetime.timezone.utc), 'time_taken': 90588.0, 'time_delta': '1 day, 1:09:48', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
