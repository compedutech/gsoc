pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
404373175,Improve and merge Cloud Input feature,"Improve Cloud Input feature based on the previous work:
- utilize `json-glib` to parse the result and validate the format;
- by default, send an asynchronous request via `libsoup`;
- sending request will be delayed with a given time (various between 0.2s and 2.0s, can be customized by user in setup page);
- a new request will be sent after cancelling the previous request, if the previous one is not completed;
- in the lookup table, the cloud candidate(s) will indicate some different steps: CANDIDATE_PENDING_TEXT(request has not yet been sent) -> CANDIDATE_LOADING_TEXT(request sent, not yet response) ->
candidate(s) from Cloud Input source/error information.",False,239,https://api.github.com/repos/libpinyin/ibus-libpinyin/pulls/239,https://github.com/libpinyin/ibus-libpinyin/pull/239,closed,1070,2,12,4,12,35,0,0,[],2020-04-16 13:32:22+00:00,2020-09-01 07:54:22+00:00,11902920.0,"137 days, 18:22:00","[{'comment_id': 423425031, 'comment_body': '如果将云输入的候选词固定在整句候选词后边如何？这样可以减少一个配置项。', 'comment_created': datetime.datetime(2020, 5, 12, 2, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 423425150, 'comment_body': '如果仅仅保留和整句结果一样长的云输入候选词如何？在仅有2个汉字时，仅保留前一个或两个结果；多个汉字时，仅仅保留和整句结果一样长的云输入候选词。', 'comment_created': datetime.datetime(2020, 5, 12, 2, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 423425221, 'comment_body': '如果将这个配置项，在代码中，写成常量如何？', 'comment_created': datetime.datetime(2020, 5, 12, 2, 24, 21, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 423425404, 'comment_body': '这个配置项仅仅放在 GSettings 中如何？我觉得大部分用户不会想去修改这个设置。另外，300ms 比较好；还是 800 ms 比较好？', 'comment_created': datetime.datetime(2020, 5, 12, 2, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 423474802, 'comment_body': '可以的，目前放在 UI 里用滑块选择时间，体验也不是很好。\r\n\r\n时间长短上面，我之前试了一下，按照我自己的打字速度， 500 ms - 600 ms 是刚好的。\r\n个人感觉如果用一些数据做支持会更好', 'comment_created': datetime.datetime(2020, 5, 12, 5, 44, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 423475232, 'comment_body': '整句候选词之后是指第一个 ngram 类型的候选之后吗？', 'comment_created': datetime.datetime(2020, 5, 12, 5, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 423484120, 'comment_body': '触发长度最小值限制为2如何？云输入功能本来就是为了增强词组和整句输入准确度，为单个字激活云输入事实上没有任何意义。', 'comment_created': datetime.datetime(2020, 5, 12, 6, 12, 42, tzinfo=datetime.timezone.utc), 'commenter': 'hillwoodroc', 'type': 'User'}, {'comment_id': 423594685, 'comment_body': '另外，Hillwood 提到单个汉字时，不触发云输入。', 'comment_created': datetime.datetime(2020, 5, 12, 9, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 423594977, 'comment_body': '是的，可以先使用 600 ms。大家可以自己试试，投票选择个默认值。有时间的话，可以进一步研究一下。', 'comment_created': datetime.datetime(2020, 5, 12, 9, 29, 48, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 423613774, 'comment_body': '推荐将云输入候选词放在 n-gram 类型的候选词之后，n-gram 类型的候选词可能有 1-3 个。', 'comment_created': datetime.datetime(2020, 5, 12, 10, 0, 38, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 432839760, 'comment_body': '> 这个配置项仅仅放在 GSettings 中如何？我觉得大部分用户不会想去修改这个设置。另外，300ms 比较好；还是 800 ms 比较好？\r\n\r\n在 libbopomofo 中是否应当移除云输入的配置项？我看之前的 lianna 的代码里有，就直接继承过来了。而目前只有拼音输入法使用了云输入', 'comment_created': datetime.datetime(2020, 5, 30, 12, 58, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 432863096, 'comment_body': '是否应当移除在 libbopomofo 中的云输入的配置项？', 'comment_created': datetime.datetime(2020, 5, 30, 15, 19, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 432863379, 'comment_body': '目前云输入页面已经精简至两个显式配置项：\r\n1. 是否启用\r\n2. 源\r\n\r\n可以不再使用一个单独的页面，放在general或者pinyin里吗？', 'comment_created': datetime.datetime(2020, 5, 30, 15, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 432864536, 'comment_body': '> 另外，Hillwood 提到单个汉字时，不触发云输入。\r\n\r\n目前版本在两个字符以上的拼音时才会添加云输入占位符。\r\n汉字应该是 utf-8 编码的吧？这样的话是 2-3 字节一个汉字，如何确定单个汉字长度？', 'comment_created': datetime.datetime(2020, 5, 30, 15, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 432920449, 'comment_body': '汉字在 utf-8 里面是 3-4 字节一个，大于等于6肯定就是词组不是单个汉字了。可以以本地输出的第一个候选词为判断依据，小于6判定为单个汉字不激活云功能，大于等于6判定为词组激活云功能。这是我的建议，如果实际实现会导致代码过于复杂，这也不是一个必须实现的功能。', 'comment_created': datetime.datetime(2020, 5, 31, 7, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'hillwoodroc', 'type': 'User'}, {'comment_id': 433007136, 'comment_body': '如果你的意思是把精简后的云功能设置整体移到拼音模式里面，我觉得比现在的好。从使用者的角度看，云词汇数量的设置可以保留，其他选项用户应该很少更改、默认值，可以隐藏在gsetting 里面。看看吴鹏的意见。', 'comment_created': datetime.datetime(2020, 6, 1, 1, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'hillwoodroc', 'type': 'User'}, {'comment_id': 433578806, 'comment_body': '可以考虑先移除 libbopomofo 中的云输入的配置项。\r\n如果有用户需要的话，可以以后再支持此功能。', 'comment_created': datetime.datetime(2020, 6, 2, 1, 53, 7, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 433580066, 'comment_body': '我觉得可以放到 general 或者 pinyin 页面里边。\r\n\r\n云词汇的话，一般输入法只会显示一个整句结果，仅仅保留整句结果即可。\r\n\r\n@hillwoodroc 欢迎继续讨论。:-)', 'comment_created': datetime.datetime(2020, 6, 2, 1, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 433580742, 'comment_body': '是的', 'comment_created': datetime.datetime(2020, 6, 2, 2, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 433581505, 'comment_body': '请考虑使用 g_utf8_strlen , 这个可以用来计算汉字长度。', 'comment_created': datetime.datetime(2020, 6, 2, 2, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 433606027, 'comment_body': '如果 libpinyin 和 ibus-pinyin 一样提供了拼音注音之间的映射表转换我觉得可以保留。', 'comment_created': datetime.datetime(2020, 6, 2, 3, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'hillwoodroc', 'type': 'User'}, {'comment_id': 433607109, 'comment_body': '怎么确定是整句呢？5个字以上？', 'comment_created': datetime.datetime(2020, 6, 2, 4, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'hillwoodroc', 'type': 'User'}, {'comment_id': 433636613, 'comment_body': 'libpinyin 应该可以从注音的解析结果，提取出拼音字符串的。', 'comment_created': datetime.datetime(2020, 6, 2, 5, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 433636966, 'comment_body': '如果云输入结果的长度和 libpinyin 第一个候选词一样，就可以认为是整句结果。', 'comment_created': datetime.datetime(2020, 6, 2, 5, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 434347941, 'comment_body': '好的，我看一下如何在注音输入法中使用，之前没注意到注音输入法那边', 'comment_created': datetime.datetime(2020, 6, 3, 6, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 436375269, 'comment_body': 'https://github.com/libpinyin/ibus-libpinyin/pull/239#discussion_r423425221\r\n> 如果将这个配置项，在代码中，写成常量如何？\r\n\r\n这个配置项应该已经移除了。\r\n\r\n这个配置项在之前的版本中表示的是拼音的长度。\r\n\r\n如果去除拼音长度的判断，只使用我们之前讨论的 UTF8 汉字的长度（我现在手上的代码版本是看第一个 n-gram 候选的长度）来判断，如何？', 'comment_created': datetime.datetime(2020, 6, 7, 15, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 436376050, 'comment_body': '已实现。这几天发现了几个小 bug 修复完毕后一起合并到这边。\r\n\r\nhttps://github.com/Inokinoki/ibus-libpinyin/commit/7148dbc5b22908dd584abdd3055d416625a5418c', 'comment_created': datetime.datetime(2020, 6, 7, 15, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 436429663, 'comment_body': '好的', 'comment_created': datetime.datetime(2020, 6, 8, 2, 15, 52, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 436430693, 'comment_body': '同意，我觉得只使用汉字的长度判断比较好。', 'comment_created': datetime.datetime(2020, 6, 8, 2, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 436432664, 'comment_body': 'google 云原生支持注音，百度的话只能转换了。注音和双拼一样有多种方案，这一点需要注意。', 'comment_created': datetime.datetime(2020, 6, 8, 2, 35, 12, tzinfo=datetime.timezone.utc), 'commenter': 'hillwoodroc', 'type': 'User'}, {'comment_id': 437951465, 'comment_body': '上周尝试了开启了一下注音输入法的云输入，了解了一下的实现。我发现它是直接把用户输入传给 libpinyin 去处理的，目前对 ibus-libbopomofo 这边来说，注音-拼音的转换不是完全透明的，而是在 libpinyin 中完成的。\r\n\r\n我打算暂时先移除配置项，之后再加上。先把这个 PR 完善好', 'comment_created': datetime.datetime(2020, 6, 10, 8, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 437958463, 'comment_body': '好的，同意，如果需要的话，可以在以后再加上。', 'comment_created': datetime.datetime(2020, 6, 10, 8, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 444043258, 'comment_body': '> 目前云输入页面已经精简至两个显式配置项：\r\n> \r\n>     1. 是否启用\r\n> \r\n>     2. 源\r\n> \r\n> \r\n> 可以不再使用一个单独的页面，放在general或者pinyin里吗？\r\n\r\n关于配置页面合并，云输入部分目前只有两个配置项了：\r\n![image](https://user-images.githubusercontent.com/8311300/85377482-72ae2480-b539-11ea-910b-bc05d78a3a35.png)\r\n\r\n而 General 和 Pinyin mode 目前配置项都是比较多的\r\n![image](https://user-images.githubusercontent.com/8311300/85377625-a721e080-b539-11ea-97ef-6037a8d6bfc0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8311300/85377680-bbfe7400-b539-11ea-8f5d-d9d1c0faafa3.png)\r\n\r\n配置面板的大小应该是根据最大的 tab 的大小来确定的。\r\n\r\n如果没有比较大的影响的话，我打算尝试把云输入的配置项放在 Pinyin mode 里面', 'comment_created': datetime.datetime(2020, 6, 23, 8, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 444078623, 'comment_body': '好的，同意放到 Pinyin mode 页面。', 'comment_created': datetime.datetime(2020, 6, 23, 9, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 445508327, 'comment_body': 'Done\r\n\r\n![image](https://user-images.githubusercontent.com/8311300/85716755-125fe400-b6ed-11ea-84e4-3812d3c25dd0.png)\r\n', 'comment_created': datetime.datetime(2020, 6, 25, 12, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}]","[{'commit_sha': '17dadcda0b3ac81cbbe021365406bb78bdde046c', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88baa5c8d03491ed48ac7ffee44df9537dc8b2f7', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a24c2cd139781418b97f9755125c8cff45b8720', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f10fb9817cec093754f4b6d79cbd43725d4c8c1', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}]",Inoki,8311300,inoki@inoki.cc,User,,130,,139,468
455502781,Cloud input second review,To keep commit history,False,260,https://api.github.com/repos/libpinyin/ibus-libpinyin/pulls/260,https://github.com/libpinyin/ibus-libpinyin/pull/260,closed,1259,8,14,37,7,11,0,0,[],2020-07-23 06:19:33+00:00,2020-09-01 07:54:10+00:00,3461677.0,"40 days, 1:34:37","[{'comment_id': 459257364, 'comment_body': 'How about using the following code?\r\n\r\n```\r\nString text;\r\n\r\nswitch (ret_code) {\r\ncase PARSER_NO_CANDIDATE:\r\n  text = CANDIDATE_NO_CANDIDATE_TEXT;\r\n  break;\r\ncase PARSER_INVALID_DATA:\r\n  text = CANDIDATE_INVALID_DATA_TEXT;\r\n  break;\r\ncase PARSER_BAD_FORMAT:\r\n  text = CANDIDATE_BAD_FORMAT_TEXT;\r\n  break;\r\n}\r\nfor (std::vector<EnhancedCandidate>::iterator pos = m_cloud_candidates_first_pos; pos != m_candidates_end_pos; ++pos) {\r\n        if (CANDIDATE_CLOUD_INPUT == pos->m_candidate_type) {\r\n             pos->m_display_string = text;\r\n        } else {\r\n           break;\r\n        }\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 7, 23, 7, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 459258203, 'comment_body': 'Please add more comment to make the parser easier to understand, thanks!', 'comment_created': datetime.datetime(2020, 7, 23, 7, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469773802, 'comment_body': 'Is it possible to move this method into class CloudCandidates?\r\n\r\nAnd use pinyin_get_full_pinyin_auxiliary_text function directly?', 'comment_created': datetime.datetime(2020, 8, 13, 8, 10, 37, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469775666, 'comment_body': '可否考虑将 m_cloud_source 和 m_parser 作为 class CloudCandidates 的成员变量缓存。\r\n\r\n在这里可以检测如果 m_cloud_source 发生变化，则更新 m_parser 的内容；如果没有变化，直接用缓存的 m_parser 变量即可。\r\n\r\n可以考虑将 class CloudCandidatesResponseParser 放入到 PYPCloudCandidates.h 中。', 'comment_created': datetime.datetime(2020, 8, 13, 8, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469780213, 'comment_body': '好像在 CloudCandidates::processCandidates 方法中，EnhancedCandidate 的 m_candidate_id 没有被初始化。\r\n\r\nm_candidate_id 一般赋值为 m_candidates 向量的下标。', 'comment_created': datetime.datetime(2020, 8, 13, 8, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469782370, 'comment_body': '个人觉得 m_delayed_time 和 m_cloud_candidates_number 是 m_config 的缓存，可以从 CloudCandidates 中移除。\r\n\r\n直接从 m_config 中读取即可，可以在需要的时候，声明 delayed_time 和 cloud_candidates_number 变量。', 'comment_created': datetime.datetime(2020, 8, 13, 8, 25, 37, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469786319, 'comment_body': '考虑将这个 setBopomofoMode 函数重命名为 setInputMode 如何？可以同时支持全拼，双拼和 Bopomofo.', 'comment_created': datetime.datetime(2020, 8, 13, 8, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469787457, 'comment_body': '好像这个 isBopomofoMode 方法没有使用到。', 'comment_created': datetime.datetime(2020, 8, 13, 8, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 469790875, 'comment_body': '好像同步请求，也不需要使用 guint parse (const gchar *data) 了吧？', 'comment_created': datetime.datetime(2020, 8, 13, 8, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'epico', 'type': 'User'}, {'comment_id': 471362993, 'comment_body': '像这样直接在开始时创建，之后每次都根据源复用 parser 的实例如何?', 'comment_created': datetime.datetime(2020, 8, 17, 9, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}, {'comment_id': 472017648, 'comment_body': '直接上屏的话，候选是带有 cloud 前缀的', 'comment_created': datetime.datetime(2020, 8, 18, 8, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Inokinoki', 'type': 'User'}]","[{'commit_sha': 'de140e775e3d6e13ffdece752890d1cb8ffe1b79', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '870cba0a29d74b715e24291ee43b27d332003544', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c8af89365dc8522223494b27c3fe2293044dacd', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1454a65a6842c553cb9d79538d0c4141f1091b', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fa203361e2034b61b70bdabf500721c2f0d102e', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d111859f7aae68383498d4a0b18c48fbfb29725', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02fbca59e0fca5d6c942c944edeb3616988adb4f', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a29cebf09e1eccc17560bc03b9bdb432742f2c8', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dddf5ba6dd3bc6af7e69647a539c2ad5908bc86a', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cf1a1e3190cfbbdefc6fbe2fb194b3da1510208', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0080e2044c0131b100ea48880d8ed9e614077064', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c73c8c9ebad7b69393c54fd7089329f417742aa', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0456bb9cb4bb844d4f3217c2d3352a847ef9e189', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69332b253d7304a3a51b834adccc6f1189471ef6', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7eb63c35e26901725f7fbc88f7e6a0f59034745', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6558e408d51d813e93f99856988146796555ce73', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2dcc1c966e6776b9c1f629f3568996144fde345', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b759d84ea8dd8074c1fc8654f652f2be3fc8bf6b', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60bad4b92b8eccb7cfce91c69c056b328b2f1dfb', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99ceb6ed77ef2790200a8f80267bcfa94340f9e5', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fd63f317c3c0b0b6e8fff60826324d7a13ce7bb', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f021afc263d1469c41d97562015a2e41f10d7f4f', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e543181b1960c0325684a31ac47b2db247f5421', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edad1a98ad05557b85e93b1762839846e9b82cb3', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92532e77f575581f6cf700147f381be11b773c5f', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e164e4a8cbcd29d4c86bd8c922c49fd8c83ba4f0', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f18470cc0a8361358192e0b66b8d20acbb0ff3e', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ff7aa61333bf314a51a4e15fe866de5db5d45a2', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1677ec8e4771c5cf5cd4f4a506ab77deeb700dbf', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ae4dec76b0349be211e509a87a9b1750d3a2ca5', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29407cc2e9befd3f990f17cd032205a52aa688e5', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8156a330be923f9e08c348e19792a96bb761b32b', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5005cc1f245ad0e903630b56df9d6a0f97767a90', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00eb6e0236a6b493d8ced448d726e837e5914cd1', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df1da53a7db4a3afb890e34892d3561e8b30d040', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f0d87bbf67b8a6ef2660406e1b8a4f4e58865a6', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ada275a015e6ac406a485eda47171df515fc961', 'committer_username': 'epico', 'committer_name': 'Peng Wu', 'committer_email': 'alexepico@gmail.com', 'commit_date': datetime.datetime(2010, 1, 28, 3, 44, 41, tzinfo=datetime.timezone.utc)}]",Inoki,8311300,inoki@inoki.cc,User,,130,,139,468
476925545,Add Cloud Input feature into ibus-libpinyin,"This brings Cloud Input feature to `ibus-libpinyin`:

- Asynchronous request: the network request will not block the behaviour of Input Method Engine, which brings better user experience;
- Delayed request: request will be sent when user stops typing, this can reduce Cloud Input server load and avoid redundant, useless requests;
- Response data validation: do a validation on the response content to make sure the data is complete and prevent crash;
- Cancellable request: the request already sent can be cancelled when the user is to type new content.

It supports all 3 input methods:

- Full Pinyin
- Double Pinyin
- Bopomofo



",True,278,https://api.github.com/repos/libpinyin/ibus-libpinyin/pulls/278,https://github.com/libpinyin/ibus-libpinyin/pull/278,closed,1257,5,14,5,1,0,0,0,[],2020-09-01 08:49:07+00:00,2020-09-02 03:40:13+00:00,67866.0,18:51:06,[],"[{'commit_sha': '62f0cfedafc0d7898ef5deabd92183452cb877d7', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96bd24168778f92632092023998f258522453ae4', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '929df11383b51153dff62a546d490f360da9fb00', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6a5f1ddfb3fa1f65498a3520dd45ca5d1bb0f60', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b52120adef9b7d7044b1d05df105b1103619769', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}]",Inoki,8311300,inoki@inoki.cc,User,,130,,139,468
429996993,Fix CMake build: missing ../data/table.conf,"Add data/table.conf as a output target from downloaded textual model data, so that it can be found during the build phase.",True,112,https://api.github.com/repos/libpinyin/libpinyin/pulls/112,https://github.com/libpinyin/libpinyin/pull/112,closed,1,0,1,1,3,0,0,0,[],2020-06-07 11:45:55+00:00,2020-06-08 03:32:40+00:00,56805.0,15:46:45,[],"[{'commit_sha': '93d9b4cdf0052a9fe5721b39b770334ab5ddc5f8', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}]",Inoki,8311300,inoki@inoki.cc,User,,130,,139,468
430859414,Fix include issue with auto-generated config.h,"Add `${CMAKE_BINARY_DIR}` into include path to make
`${CMAKE_BINARY_DIR}/config.h` visible to source codes.",True,113,https://api.github.com/repos/libpinyin/libpinyin/pulls/113,https://github.com/libpinyin/libpinyin/pull/113,closed,1,0,1,1,0,0,0,0,[],2020-06-08 07:27:19+00:00,2020-06-08 08:29:45+00:00,3746.0,1:02:26,[],"[{'commit_sha': 'f69331a993930dc21261f0fc481df53293cdaf03', 'committer_username': 'Inokinoki', 'committer_name': 'Inoki', 'committer_email': 'inoki@inoki.cc', 'commit_date': datetime.datetime(2014, 7, 30, 15, 8, 36, tzinfo=datetime.timezone.utc)}]",Inoki,8311300,inoki@inoki.cc,User,,130,,139,468

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4515590,ibus-libpinyin,libpinyin/ibus-libpinyin,C++,88,622,21,42,1745,76,5,0,"[{'id': 476925545, 'number': 278, 'closed': datetime.datetime(2020, 9, 2, 3, 40, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 8, 49, 7, tzinfo=datetime.timezone.utc), 'time_taken': 67866.0, 'time_delta': '18:51:06', 'additions': 1257, 'deletions': 5, 'state': 'closed'}, {'id': 455502781, 'number': 260, 'closed': datetime.datetime(2020, 9, 1, 7, 54, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 6, 19, 33, tzinfo=datetime.timezone.utc), 'time_taken': 3461677.0, 'time_delta': '40 days, 1:34:37', 'additions': 1259, 'deletions': 8, 'state': 'closed'}, {'id': 404373175, 'number': 239, 'closed': datetime.datetime(2020, 9, 1, 7, 54, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 13, 32, 22, tzinfo=datetime.timezone.utc), 'time_taken': 11902920.0, 'time_delta': '137 days, 18:22:00', 'additions': 1070, 'deletions': 2, 'state': 'closed'}, {'id': 388629109, 'number': 229, 'closed': datetime.datetime(2020, 3, 21, 17, 23, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 8, 38, 37, tzinfo=datetime.timezone.utc), 'time_taken': 549866.0, 'time_delta': '6 days, 8:44:26', 'additions': 1219, 'deletions': 2, 'state': 'closed'}, {'id': 385131857, 'number': 228, 'closed': datetime.datetime(2020, 3, 15, 8, 39, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 7, 10, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 683844.0, 'time_delta': '7 days, 21:57:24', 'additions': 1190, 'deletions': 3, 'state': 'closed'}]"
996447,libpinyin,libpinyin/libpinyin,C++,103,437,33,21,2045,13,13,1,"[{'id': 543668315, 'number': 142, 'closed': datetime.datetime(2020, 12, 23, 6, 19, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 21, 19, 1, 33, tzinfo=datetime.timezone.utc), 'time_taken': 127094.0, 'time_delta': '1 day, 11:18:14', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 525332022, 'number': 138, 'closed': datetime.datetime(2020, 11, 26, 3, 3, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 22, 18, 13, 18, tzinfo=datetime.timezone.utc), 'time_taken': 291032.0, 'time_delta': '3 days, 8:50:32', 'additions': 148, 'deletions': 0, 'state': 'closed'}, {'id': 525330823, 'number': 137, 'closed': datetime.datetime(2020, 11, 26, 3, 0, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 22, 18, 5, 3, tzinfo=datetime.timezone.utc), 'time_taken': 291349.0, 'time_delta': '3 days, 8:55:49', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 430859414, 'number': 113, 'closed': datetime.datetime(2020, 6, 8, 8, 29, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 7, 27, 19, tzinfo=datetime.timezone.utc), 'time_taken': 3746.0, 'time_delta': '1:02:26', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 429996993, 'number': 112, 'closed': datetime.datetime(2020, 6, 8, 3, 32, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 11, 45, 55, tzinfo=datetime.timezone.utc), 'time_taken': 56805.0, 'time_delta': '15:46:45', 'additions': 1, 'deletions': 0, 'state': 'closed'}]"
