pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
958376734,GSoC project: Tiled compatibility support Enigma,"### In A Nutshell - This project implements two importers: .tmx/.tsx file importers in RadialGM and .egm file importer in Tiled

My GSoC project spans into three PRs in three different projects of two separate organizations. The two organizations involved are Enigma-dev and Tiled. fundies and Josh are my mentors from Enigma-dev and bjorn is my mentor from Tiled.

- My first PR (this one which is main PR) [#2302](https://github.com/enigma-dev/enigma-dev/pull/2302) goes in [enigma-dev/enigma-dev](https://github.com/enigma-dev/enigma-dev) repository
- Second PR [#228 GSoC project: Tiled compatibility support RGM](https://github.com/enigma-dev/RadialGM/pull/228) goes in [enigma-dev/RadialGM](https://github.com/enigma-dev/RadialGM) repo
- Third PR [#3435 GSoC project: Enigma importer plugin](https://github.com/mapeditor/tiled/pull/3435) goes in [mapeditor/tiled](https://github.com/mapeditor/tiled) repo

Requirement: You have to use Arch linux OS specifically, as Enigma-dev's RadialGM only compiles in Arch linux at the time of writing these steps. Compiling RadialGM can be tough, so feel free to ping in enigma-dev [discord server](https://discord.gg/fzDeNd2b).

Steps to test the project:

1. Compile Enigma-dev's RadialGM project and Tiled projects. (Note that Enigma-dev's enigma-dev project is a submodule of RadialGM so it gets included with RadialGM)
2. Open terminal and change directory to RadialGM, checkout to PR [#228](https://github.com/enigma-dev/RadialGM/pull/228)
3. Change directory to RadialGM/Submodules/enigma-dev, checkout to PR [#2302](https://github.com/enigma-dev/enigma-dev/pull/2302)
4. Setup a system environment variable named ENIGMA_PATH and set its value to RadialGM/Submodules/enigma-dev. This path will be used by Tiled editor's ""enigma"" plugin.
5. Change directory to Tiled, checkout to PR [#3435](https://github.com/mapeditor/tiled/pull/3435)
6. Compile RadialGM and Tiled projects separately
7. Run RadialGM project to open RadialGM editor, test the TMX importer by importing some .tmx file
8. Run Tiled project to open Tiled editor, enable ""enigma"" plugin by checking it in Edit-Preferences-Plugins tab and finally test the EGM importer by importing some .egm file

Short demo video of the final outcome: https://www.youtube.com/watch?v=ZUJd5VhqQo8
Weekly project work logs: https://kartikshrivastava.github.io/

### Completed list of tasks in GSoC coding period:

Tiled TMX and TSX importer support status in RadialGM and enigma-dev:
- [x] Import individual TSX files
- [x] Replicate TSX Tileset to EGM Background
- [x] Import TMX file with external tileset
- [x] Replicate TMX Map to EGM Room
- [x] Replicate TMX object to EGM Room.tiles
- [x] Rotation, tint, horizontal/vertical flip and background color support
- [x] Import TMX file with internal tileset
- [x] Import TMX file with base64 zlib compressed tile data
- [x] Replicate TMX layer data to EGM Room.tiles
- [x] Import TMX file with base64 gzip compressed tile data
- [x] Import TMX file with base64 zstd compressed tile data
- [x] Import TMX file with CSV tile data
- [x] Add hexagonal map support
- [x] Add isometric map support
- [x] Add staggered isometric map support 
- [x] Separate existing Room.proto into GameMaker based GMRoom.proto and EGM+Tiled based EGMRoom.proto
- [x] Add Tiled specific ObjectGroup, TileLayer and Tilesets in EGMRoom.proto
- [x] Update RoomView to support newly added fields of ObjectGroup, TileLayer 
- [x] Add ""merge"" tmx project into egm project functionality
- [x] Add gtest for testing ObjectGroups correctness for importer .tmx file

Enigma's EGM importer support status in Tiled:
- [x] Add enigma plugin in Tiled
- [x] Update enigma plugin to depend on libEGM using qbs module
- [x] Add functionality to parse .egm file into protocol buffer
- [x] Add functionality to create a Tiled map using .egm based protocol buffer

### Follow-up list of subtasks after GSoC:
- [x] Add proper separation of GameMaker resources between EGMRoom.proto and GMRoom.proto
- [x] Add translation routine to convert GMRoom to EGMRoom, after loading GameMaker based formats in GMRoom
- [ ] Replicate Tiled animated tiles in RadialGM editor renderer and engine
- [ ] Add parallax effect
- [ ] Add more gtests
- [ ] Add support to wangsets in TMX importer
- [ ] Add support to rest of missing TMX features in EGMRoom (needs updates in RadialGM renderer and enigma enigne)
- [ ] Fix Tiled ci which is breaking due to missing libEGM headers
- [ ] Add support to missing features of internal tileset in EGMRoom",False,2302,https://api.github.com/repos/enigma-dev/enigma-dev/pulls/2302,https://github.com/enigma-dev/enigma-dev/pull/2302,open,3413,663,52,44,1,30,1,0,[{'name': 'GSOC-Done'}],2022-06-05 09:15:55+00:00,,0.0,,"[{'comment_id': 890160993, 'comment_body': '```suggestion\r\n  TSXTilesetLoader background_walker(background->mutable_background(), fPath);\r\n  doc.traverse(background_walker);\r\n```', 'comment_created': datetime.datetime(2022, 6, 6, 13, 42, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 890162345, 'comment_body': 'Would it make sense to translate the `tileset.name` attribute to the name of this tree node?', 'comment_created': datetime.datetime(2022, 6, 6, 13, 44, 19, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 890186643, 'comment_body': ""Does this `LoadResource` call eventually end up calling `TSXFileFormat::LoadProject`? I'm a little confused by the flow."", 'comment_created': datetime.datetime(2022, 6, 6, 14, 7, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 890376511, 'comment_body': 'Right, will update that along with root name set to ""/"".', 'comment_created': datetime.datetime(2022, 6, 6, 17, 33, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 890410268, 'comment_body': 'Well yes it gets called from `MainWindow::openFile(..)` which is a callee of `on_actionOpen_triggered(...)` caller.', 'comment_created': datetime.datetime(2022, 6, 6, 18, 14, 15, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 890410643, 'comment_body': 'Thanks for typo fix, will be more cautious now on!', 'comment_created': datetime.datetime(2022, 6, 6, 18, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 898304009, 'comment_body': 'This should be the same between the xml-based readers. Feel free to abstract this and use an include rather than copy-pasting.', 'comment_created': datetime.datetime(2022, 6, 15, 18, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'fundies', 'type': 'User'}, {'comment_id': 898693648, 'comment_body': 'Alright will try', 'comment_created': datetime.datetime(2022, 6, 16, 5, 2, 4, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 919597161, 'comment_body': ""Do we need this property when the tmx field has the same name? You'll notice we omit the gmx attributes when the name is he same."", 'comment_created': datetime.datetime(2022, 7, 13, 2, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 919600946, 'comment_body': ""Haven't seen the rest of the PR, yet, but are these annotations useful? Are we able to sort by tag number (in this case, 7 and 8) and just comma-separate, in all cases?"", 'comment_created': datetime.datetime(2022, 7, 13, 2, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 919603066, 'comment_body': 'Can you copy over the license, as well?', 'comment_created': datetime.datetime(2022, 7, 13, 2, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 919604215, 'comment_body': 'In the header, you can just put `using ::base64_encode;` (etc) instead of declaring them as wrapper impls, here.', 'comment_created': datetime.datetime(2022, 7, 13, 2, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 919605410, 'comment_body': 'Did Robert write this? Or is this Zlib-licensed Zlib code? We should include a license header either way.', 'comment_created': datetime.datetime(2022, 7, 13, 2, 59, 13, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 919606031, 'comment_body': 'Where did this logic go? Was it unused...? It does look a little hacky.', 'comment_created': datetime.datetime(2022, 7, 13, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'JoshDreamland', 'type': 'User'}, {'comment_id': 919624058, 'comment_body': ""I'm only loading the values of those fields which has tmx extension, rest are ignored. I also realized that number of fields not directly corresponding to tmx attributes >> number of fields which have direct link. So I decided to keep tmx for same name fields as well."", 'comment_created': datetime.datetime(2022, 7, 13, 3, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 919625822, 'comment_body': ""I didn't get that. Like sorting and comma-separate thing? Are you talking about proto fields extension, then it loads automatically. Here is loading logic https://github.com/KartikShrivastava/enigma-dev/blob/5614cfbd6d67e668d1170ce7a52f6ffb9f89d2f6/CommandLine/libEGM/General/tiled_util.cpp#L36"", 'comment_created': datetime.datetime(2022, 7, 13, 3, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 919630557, 'comment_body': ""I copied it to zlib_util.cpp where its used, just didn't put it in Decoder class, as it wasn't there previously as well. Its static right now."", 'comment_created': datetime.datetime(2022, 7, 13, 4, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 919630587, 'comment_body': ""I'm not sure if its zlib-licensed code, I copied it from gmk so copied its license."", 'comment_created': datetime.datetime(2022, 7, 13, 4, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 919630654, 'comment_body': 'Did that but is not it less readable and more confusing?', 'comment_created': datetime.datetime(2022, 7, 13, 4, 12, 57, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 919630672, 'comment_body': 'Copied', 'comment_created': datetime.datetime(2022, 7, 13, 4, 13, 1, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 950024476, 'comment_body': ""Unless there is some reason I'm missing, it doesn't generally make sense to pass an `int` (4 bytes) to a function as a `const int &` (8 bytes, at least on 64-bit systems)."", 'comment_created': datetime.datetime(2022, 8, 19, 9, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 950025300, 'comment_body': ""If we're going to do these comparisons a lot (like, for each tile), it could be a good idea to avoid doing string comparisons."", 'comment_created': datetime.datetime(2022, 8, 19, 9, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 950027030, 'comment_body': '```suggestion\r\n   * @brief Stores staggered isometric map details in heap\r\n```', 'comment_created': datetime.datetime(2022, 8, 19, 10, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 950030772, 'comment_body': 'There may be reasons to prefer aggregation, but in this case I would be inclined to derive `HexMapUtil` from `StaggerUtil` instead.\r\n\r\nRegarding the naming, I\'m a bit confused about the choice of ""Util"", since at least personally I expect a utility to do something rather than just store some data. Maybe ""Info"", ""Parameters"" or ""Properties"" would be more suitable (or shorter versions, if you prefer).', 'comment_created': datetime.datetime(2022, 8, 19, 10, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 950199746, 'comment_body': 'Is size of `const int &` is 8 bytes? I just did that going by the general idea of using `const` wherever possible. And reference is to make copy cheap.', 'comment_created': datetime.datetime(2022, 8, 19, 13, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 950219015, 'comment_body': ""Well, you can't make copying an `int` any cheaper. It's 32-bit, so 4 bytes, whereas a reference, which is really the same as a pointer, is nowadays usually 64-bit, so 8 bytes. In addition to passing around more bytes to do the function call, you're adding a level of indirection. This means that in the function, it will need to use the reference to get the actual value.\r\n\r\nUsing references makes sense for huge structures, or even to avoid heap allocations (as would be the case when passing `std::string` by value), but it makes no sense for small types that are fast to copy."", 'comment_created': datetime.datetime(2022, 8, 19, 13, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bjorn', 'type': 'User'}, {'comment_id': 950230888, 'comment_body': 'Nice, I never learned this before. Will fix that.', 'comment_created': datetime.datetime(2022, 8, 19, 14, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 951119844, 'comment_body': 'Replaced string staggerIndex and staggerAxis with enum class members', 'comment_created': datetime.datetime(2022, 8, 22, 7, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}, {'comment_id': 951121745, 'comment_body': ""Admittedly I'm pretty bad at naming, updated those structs with Info suffix and inherited StaggerInfo from HexMapInfo"", 'comment_created': datetime.datetime(2022, 8, 22, 7, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'KartikShrivastava', 'type': 'User'}]","[{'commit_sha': 'a723e88f2bf0a1edf427ae113ad3f45b97ba18f4', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a8b85b980be57fcf204a04912c751f41136ac91', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc8e86987e17c2c635d8b6efd86589da8c813a56', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e1e6994cc94d4e45d0cef2d10e9083e05b250ac', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aec2829792dc95fe3dd4043d395eab8a9abe50cb', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d81313eff8a05d042640eb6e1575c6a58e507e1', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ea925f97837b309a02fa6bb476bbf08004d3acf', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477adc1586e7bf66ed3aa902cc8ea96161b37ba6', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82cc729fb810a0d0df14d55996eefa107a6835a4', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49ab54376c8b8193a3c349f337c1baf95e162ad2', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '829d4ef0fb1b159b4c23f9e0edc7e7ed3ddca336', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a85d177b17edd87836a9b2c998a21bd419b493f7', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e91e5f39d343df9dd07ef3b1455446d3e985e22f', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21c2c6b122ecadf0b4b69341cc053007833108c1', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3e08171db0464a899a9ade46990d6b01888b686', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5614cfbd6d67e668d1170ce7a52f6ffb9f89d2f6', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55673b2590a50a842b06c076f7d1491d57bce6b3', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '593fb3d1df7442471e2305330d465ac236263c46', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e04e22acce855d32fae56dc149a2849c437d644', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '527009867343232d32bdd9ebfd78e85d66e1da89', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac9223bf94c142eeed4333d8f24ae6c79f337edb', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cf682993af9ca25ae4bf4130ed3ecec2c9b1fef', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5899fbe7d7591772ab3fbc73eb42fe18d8964b', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7273269cb7c9452b38d504637b5ee2030e962b5f', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8415a8cd2f1d31d6cd71a48fd85e11d5ce3d26b', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96ac8a82d35e6bc6bb793fef0c41cd0558e59370', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0ea4ea7745f888fd74e5dda8332819b30bc0d75', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebf6f07ac68f06d770b8b8aff3d0682425248c9b', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f1b870335eb2edd36512a4f152400d8cee0a078', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c50fff095b7e630e9d54a8aaf34c9e0b32563f49', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6040eafa4f8c4bebe5dc0b373f0c48473a1056', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f555dfd199d5e7a2032b629f1c7deb76d076b0e', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1769b4eed64aa799547d9ca35c8ea29f04d3f6f4', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26150404fa233835102eb339f67e47cda936fc98', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2866a1adf9a42f6ae57dca1db548831c3c844eb', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '068660c7a379c6a298d33555bfcc4a948df06c1f', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '661784da2518c343da1eb44714f8e582cf76f842', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aabdda156b3b84cc926e6dbcd0c932c51158e372', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f0d5004fceb01fe3f9fda675ac630ed79df1ad', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76b2848e3cb7384508cad91e9126a75af9d43b16', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c024ff7b09c9349c0002dedab30128aa6a7dced5', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50f1cf2bc719390ef7764ba46a2b9744eb1d2261', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db73bd5fdabb87ad7a6e0d7a90e3604fb5cc4681', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '411f672d73c22a3f8340a7789171258ae0130fe7', 'committer_username': 'KartikShrivastava', 'committer_name': 'Kartik', 'committer_email': None, 'commit_date': datetime.datetime(2017, 3, 19, 8, 42, 26, tzinfo=datetime.timezone.utc)}]",Kartik,26518513,,User,,41,,11,13

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
3319723,enigma-dev,enigma-dev/enigma-dev,C++,120,335,31,69,4788,149,50,37,"[{'id': 1387077794, 'number': 2344, 'closed': None, 'created': datetime.datetime(2023, 6, 10, 8, 59, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 1, 'state': 'open'}, {'id': 1024574833, 'number': 2315, 'closed': datetime.datetime(2022, 8, 14, 12, 25, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 12, 5, 53, 43, tzinfo=datetime.timezone.utc), 'time_taken': 196307.0, 'time_delta': '2 days, 6:31:47', 'additions': 81, 'deletions': 1, 'state': 'closed'}, {'id': 962685178, 'number': 2303, 'closed': datetime.datetime(2022, 6, 12, 7, 8, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 9, 10, 20, 31, tzinfo=datetime.timezone.utc), 'time_taken': 247665.0, 'time_delta': '2 days, 20:47:45', 'additions': 6, 'deletions': 10, 'state': 'closed'}, {'id': 958376734, 'number': 2302, 'closed': None, 'created': datetime.datetime(2022, 6, 5, 9, 15, 55, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3413, 'deletions': 663, 'state': 'open'}, {'id': 892607485, 'number': 2293, 'closed': datetime.datetime(2022, 4, 22, 3, 47, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 29, 6, 9, 37, tzinfo=datetime.timezone.utc), 'time_taken': 2065081.0, 'time_delta': '23 days, 21:38:01', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 882013325, 'number': 2289, 'closed': datetime.datetime(2022, 3, 18, 7, 50, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 17, 2, 24, 31, tzinfo=datetime.timezone.utc), 'time_taken': 105973.0, 'time_delta': '1 day, 5:26:13', 'additions': 28, 'deletions': 4, 'state': 'closed'}]"
