pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1422736950,Image Light Feature - GSOC 2023,"This PR is for the work under the GSOC 2023 project ""Improving p5.js WebGL/3d functionality by adding support for image-based lighting in p5.js WebGL mode.""

### Project Description:
This project aims to add lightning to a 3D object, using the surrounding environment as a single light source, which is generally called Image-Based Lightning. In simple words, one can very quickly drop in an image from real life to use as surrounding lights, rather than continuously tweaking the colors and positions of ambient, point, etc lights. 


### Changes:
This includes the whole progress broken down into steps. The boxes will be checked off according to the progress made.
- [x] CubeMap Convolution
- [x] PBR and Irradiance Lighting
- [x] Pre-filtering environment map
- [x] Pre-computing the BRDF


### Screenshots of the change:
<!-- If applicable, add screenshots depicting the changes. -->

### PR Checklist
- [x] `npm test`
- [x] `npm run build` passes
- [x] `npm run lint` passes
- [x] Inline documentation is included/updated
- [x] Examples included/updated
- [x] Functions Descriptions and Documentation is included/updated

The project is completed and here are some screenshots and videos demonstrating the work.

Image of Example 1
![example 1](https://github.com/processing/p5.js/assets/77334487/8d818df0-17a8-4332-b369-bcb79a5afc67)

Video of Example 1
https://github.com/processing/p5.js/assets/77334487/44b30c77-33c1-41d0-ada5-282424978832



Image oF Example 2
![example 2](https://github.com/processing/p5.js/assets/77334487/e46f24b8-2713-4d2b-8392-744585da6a5b)


Video of Example 2
https://github.com/processing/p5.js/assets/77334487/a0a6b3f9-b25b-451f-961e-b2970cb9e907

",True,6255,https://api.github.com/repos/processing/p5.js/pulls/6255,https://github.com/processing/p5.js/pull/6255,closed,684,120,24,56,3,83,1,0,[{'name': 'Area:WebGL'}],2023-07-06 11:36:55+00:00,2023-11-03 11:40:20+00:00,10368205.0,"120 days, 0:03:25","[{'comment_id': 1263155801, 'comment_body': 'Do we use this function?', 'comment_created': datetime.datetime(2023, 7, 14, 0, 13, 57, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1263155876, 'comment_body': 'Maybe where we use 3.14159 right now we can use the `const float PI` we defined earlier, and add more decimals to that?', 'comment_created': datetime.datetime(2023, 7, 14, 0, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1263721300, 'comment_body': 'Nope, I actually re-wrote the function in line 22. The function N2E is the one being used for now. I think I should remove the function on line 10 and rename the function at line 22.', 'comment_created': datetime.datetime(2023, 7, 14, 13, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1263722287, 'comment_body': ""Sure, I'll clean up this file. It has some extra code as well."", 'comment_created': datetime.datetime(2023, 7, 14, 13, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1285916066, 'comment_body': ""I think we don't need to declare this any more now that we have `blurryTextures` below"", 'comment_created': datetime.datetime(2023, 8, 7, 14, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1285923197, 'comment_body': ""If we're going to use `img` as a light source, it means we'll need the blurry version of its texture in order to pass into the shader. If `this.blurryTextures(img)` is defined, then we've already made the blurry texture in a previous frame and don't need to do anything more here. If not though, that's when we need to run the commented out code below to make it, and then after line 512 we'll need to store it with `this.blurryTextures.set(img, newGraphic)`"", 'comment_created': datetime.datetime(2023, 8, 7, 14, 12, 2, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1285926829, 'comment_body': ""We could alternatively do this if statement right before we do `shader.setUniform('equiRectangularTextures', this.blurryTextures.get(this.activeImageLight));` later on. The idea is that we need that texture to exist by that point"", 'comment_created': datetime.datetime(2023, 8, 7, 14, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1285932718, 'comment_body': 'I think the main difference between the blurry textures we store here and the textures already used by RendererGL is that for normal textures, we just make a new p5.Texture directly from the input. For this though, the input is non-blurry, and we want to store the blurry version, so somewhere (maybe in here actually?) we should run the shader to generate the blurry image onto a graphic and store that instead.', 'comment_created': datetime.datetime(2023, 8, 7, 14, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1285938335, 'comment_body': ""If we decide to make `getBlurryTexture` compute and store the blurry texture if it doesn't yet exist, instead of doing `blurryTextures.get()` here, we could do `this.getBlurryTexture(this.activeImageLight)`"", 'comment_created': datetime.datetime(2023, 8, 7, 14, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1286896254, 'comment_body': 'nit: blurryTexture or inputBlurryTexture', 'comment_created': datetime.datetime(2023, 8, 8, 10, 0, 32, tzinfo=datetime.timezone.utc), 'commenter': 'TanviKumar', 'type': 'User'}, {'comment_id': 1286908631, 'comment_body': ""Sure, I will remove this. I was going to ask you about this, that's the reason I marked it as repetition."", 'comment_created': datetime.datetime(2023, 8, 8, 10, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1286920677, 'comment_body': 'Can this be used from another common constant file? Would be better to have a value closer to real PI, since 3.14159 is closer to 3.142', 'comment_created': datetime.datetime(2023, 8, 8, 10, 24, 4, tzinfo=datetime.timezone.utc), 'commenter': 'TanviKumar', 'type': 'User'}, {'comment_id': 1286921758, 'comment_body': 'nit: A clearer name for this if possible', 'comment_created': datetime.datetime(2023, 8, 8, 10, 25, 8, tzinfo=datetime.timezone.utc), 'commenter': 'TanviKumar', 'type': 'User'}, {'comment_id': 1286922720, 'comment_body': 'Identation is off', 'comment_created': datetime.datetime(2023, 8, 8, 10, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'TanviKumar', 'type': 'User'}, {'comment_id': 1291199984, 'comment_body': 'We actually refactored this function completely in which this line was removed.', 'comment_created': datetime.datetime(2023, 8, 11, 10, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1291208195, 'comment_body': 'I don\'t think we have a file for constants because mostly constants are taken via the ""MATH"" object but it isn\'t available in shader languages according to my knowledge.  \r\n\r\nWe can do `#define PI 3.141592` at the top of this file.\r\nAnother possible option is to do  `#define PI 3.141592` in the `\\webgl\\shaders\\webgl2Compatibility.glsl` file.\r\n\r\nI am not sure which one is better.', 'comment_created': datetime.datetime(2023, 8, 11, 11, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1291212661, 'comment_body': 'The `map(vale, min1, min2, max1, max2)` function is converting the range of `value` from [min1 to max1] to [min2 to max2].\r\n\r\nSo should we make it something like `convertRange()` or `mapRange()` maybe?', 'comment_created': datetime.datetime(2023, 8, 11, 11, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1291213912, 'comment_body': 'Thanks, corrected it :)', 'comment_created': datetime.datetime(2023, 8, 11, 11, 10, 40, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1291440930, 'comment_body': 'This function mirrors https://p5js.org/reference/#/p5/map so maybe we could link to that reference page + add a comment description of what it does?', 'comment_created': datetime.datetime(2023, 8, 11, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1291443084, 'comment_body': ""For now since we only use this here and we don't use pi anywhere else in a shader yet (to my surprise, haha) I think we can keep it in this file for now, and if we find we need to use it in another file too (maybe we need it for the specular shader?) we can factor it out into a new shader constants file at that point"", 'comment_created': datetime.datetime(2023, 8, 11, 14, 56, 41, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1371686183, 'comment_body': 'To darken the dark parts:\r\n\r\n```suggestion\r\n  return pow(outColor.xyz, 10.0);\r\n```', 'comment_created': datetime.datetime(2023, 10, 25, 12, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1371702605, 'comment_body': 'We can also try adding like `* 0.5` or something at the end if we think it\'s still generally too bright.\r\n\r\nThe motivation (which is maybe worth adding in a comment) is to try to extract just the highlights from the image. In a high dynamic range image format, the highlights would just have much higher values, so this wouldn\'t be necessary, but in pngs and jpgs, they\'re ""tone mapped"" so that the brightness is flattened, so we\'re trying to undo the flattening with this.', 'comment_created': datetime.datetime(2023, 10, 25, 12, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1371714077, 'comment_body': 'I guess more specific to p5: we sort of want to try to match the look that we get with point lights when using the same `specularMaterial()` and `shininess()`.', 'comment_created': datetime.datetime(2023, 10, 25, 12, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1371723882, 'comment_body': 'Btw, I think the indentation looks off on Github because this line uses tabs and the next line uses spaces. Maybe vscode has as button to convert everything to spaces?', 'comment_created': datetime.datetime(2023, 10, 25, 12, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373013211, 'comment_body': ""Looks like tests are failing because `pow` needs both parameters to be the same type :') So maybe this needs to be:\r\n```suggestion\r\n  return pow(outColor.xyz, vec3(10.0));\r\n```"", 'comment_created': datetime.datetime(2023, 10, 26, 11, 34, 41, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373475120, 'comment_body': ""In addition to the example we're going to add, some thing to mention in the description for this:\r\n- we treat the image as the texture for a big spherical light around the scene\r\n- The image's diffuse light will be affected by `fill()` and the specular reflections will be affected by `specularMaterial()` and `shininess()`"", 'comment_created': datetime.datetime(2023, 10, 26, 16, 57, 37, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373479253, 'comment_body': ""oh I just noticed, I think right now this doesn't get reset in `push`/`pop`, so we'd need to add to the `push` method here to do something similar to this: https://github.com/processing/p5.js/blob/d713b35e79866c5bf79fbcf338ff8761da846248/src/webgl/p5.RendererGL.js#L1583-L1583\r\ne.g.\r\n```js\r\nproperties.activeImageLight = this.activeImageLight;\r\n```"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373481065, 'comment_body': 'Maybe we can be a bit more specific here and say that this is what `_setImageLightUniforms` looks at to see if it needs to send uniforms to the fill shader', 'comment_created': datetime.datetime(2023, 10, 26, 17, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373484983, 'comment_body': ""Maybe we can rephrase this into sentences so it's a bit easier to read? Also, for each map, we should say what the keys and values are. E.g. for this one, it maps a `p5.Image` used by `imageLight()` to a `p5.Graphics` containing the combined light it sends to each direction."", 'comment_created': datetime.datetime(2023, 10, 26, 17, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373486644, 'comment_body': 'This one maps the input `p5.Image` to a `p5.MipmapTexture`. Worth mentioning that we use a mipmap texture because it can contain light from multiple roughness levels.', 'comment_created': datetime.datetime(2023, 10, 26, 17, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373487394, 'comment_body': ""Slight update to this: we don't set it to true, we set it to a `p5.Image`. Instead of checking if it's true, we check if it's not null"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373487581, 'comment_body': 'Do we still need this line?', 'comment_created': datetime.datetime(2023, 10, 26, 17, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373488004, 'comment_body': 'Maybe we can rename this to `getDiffusedTexture` for consistency?', 'comment_created': datetime.datetime(2023, 10, 26, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373489298, 'comment_body': 'I think we renamed `blurryTexture` to `diffusedTextures`. Also we can mention that we only create it if it does not already exist.', 'comment_created': datetime.datetime(2023, 10, 26, 17, 11, 7, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373489798, 'comment_body': 'I think we can take out this one', 'comment_created': datetime.datetime(2023, 10, 26, 17, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373490227, 'comment_body': 'This can also be removed', 'comment_created': datetime.datetime(2023, 10, 26, 17, 11, 59, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373492188, 'comment_body': ""We could mention that it's OK that it's small because it's going to be really blurry and smooth anyway"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 13, 47, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373493515, 'comment_body': ""Maybe worth mentioning that they're different roughness levels too. The rougher it is, the smaller the size, because rougher surfaces are blurrier/less detailed"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373494009, 'comment_body': ""Similar to above, this only creates it if it doesn't already exist"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373494679, 'comment_body': ""This one probably doesn't need a comment, since it doesn't add much over the code itself"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373495522, 'comment_body': 'This is just for debugging, right? We can probably remove this if block now', 'comment_created': datetime.datetime(2023, 10, 26, 17, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373496381, 'comment_body': 'Another spot where we can rename to `diffusedTextures` for consistency', 'comment_created': datetime.datetime(2023, 10, 26, 17, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373496967, 'comment_body': 'I think we can take this note out now', 'comment_created': datetime.datetime(2023, 10, 26, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373497181, 'comment_body': 'I think we can take this one out too', 'comment_created': datetime.datetime(2023, 10, 26, 17, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373498290, 'comment_body': 'We should mention that the 8 here is because we have 8 levels in the mipmap', 'comment_created': datetime.datetime(2023, 10, 26, 17, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373499417, 'comment_body': 'Did we want to copy the precision from the fragment shader to here?', 'comment_created': datetime.datetime(2023, 10, 26, 17, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373500515, 'comment_body': ""oh actually we probably want this to be `highp`; this basically gets ignored by the webgl driver on desktop, but on mobile it's actually used, and in my experience any time we have normals, the precision makes a big difference on the visual fidelity\r\n```suggestion\r\nprecision highp float;\r\n```"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 21, 25, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373500871, 'comment_body': ""We can remove this function since we aren't using it"", 'comment_created': datetime.datetime(2023, 10, 26, 17, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1373508965, 'comment_body': 'oh should we be using your implementation of `nTOE` from the other fragment shaders instead of this? If I recall correctly, this is the older implementation that has a bug where it only uses the 0-PI range, which you fixed in your updated `nTOE`.\r\n\r\nI think using `nTOE` would also mean we can remove the `map` function above since this is all that uses it.', 'comment_created': datetime.datetime(2023, 10, 26, 17, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374146884, 'comment_body': 'I\'ll manually do this, vscode has a feature for this but it\'s messes up the whole file. It\'s kinda like prettier, the way prettier messes up more than it cleans :"")', 'comment_created': datetime.datetime(2023, 10, 27, 6, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1374153324, 'comment_body': ""Done, i'm testing after the changes. If nToE works, which it will very likely. I'll remove the `mapTextureToNormal` one."", 'comment_created': datetime.datetime(2023, 10, 27, 7, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1374795232, 'comment_body': 'nit: ""relatively very huge light in a form of a sphere"" could maybe be ""an infinitely large sphere light""', 'comment_created': datetime.datetime(2023, 10, 27, 16, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374795815, 'comment_body': '```suggestion\r\n * the first one is creating an irradiance map from the\r\n```', 'comment_created': datetime.datetime(2023, 10, 27, 16, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374795940, 'comment_body': '```suggestion\r\n * The second one is managing reflections based on the shininess\r\n```', 'comment_created': datetime.datetime(2023, 10, 27, 16, 22, 3, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374796179, 'comment_body': '```suggestion\r\n * and shininess().\r\n```', 'comment_created': datetime.datetime(2023, 10, 27, 16, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374799092, 'comment_body': 'We can take out the commented out lines in this sketch I think', 'comment_created': datetime.datetime(2023, 10, 27, 16, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374817404, 'comment_body': ""Right now the example is pretty wide and squishes the code: \r\n![image](https://github.com/processing/p5.js/assets/5315059/dac59d43-cfcb-4f2c-aa9c-1bfe52545877)\r\n\r\nMaybe we can use a smaller size, like 100x100, shrink the box to maybe `box(25)`, and also add one of the sphere maps we've been testing with to the `docs/yuidoc-p5-theme/assets` folder?"", 'comment_created': datetime.datetime(2023, 10, 27, 16, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374818722, 'comment_body': 'Maybe to prevent the background clipping into the box we can do:\r\n```js\r\npush();\r\ntranslate(0, 0, -200);\r\nscale(2);\r\nimage(img, 0, 0, width, height);\r\npop();\r\n```', 'comment_created': datetime.datetime(2023, 10, 27, 16, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374822232, 'comment_body': 'Maybe for variety, for this second example, we can use a sphere', 'comment_created': datetime.datetime(2023, 10, 27, 16, 44, 27, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374861991, 'comment_body': ""Looks like something might be up still:\r\n![image](https://github.com/processing/p5.js/assets/5315059/0f6ca301-86f7-4a63-bad9-bb0028c07eab)\r\n\r\nI noticed that we had a note for diffused light to use the word normal instead of `R`. When I use that, it looks like this:\r\n![image](https://github.com/processing/p5.js/assets/5315059/68955a40-ce1c-4b4e-b6d1-bce474eb9dbf)\r\n\r\nI tried using a two-toned background to check against and it seems like it's kind of flipping it:\r\n![image](https://github.com/processing/p5.js/assets/5315059/8862c67d-4b04-4a2d-91b2-ae43fb55e5c5)\r\n\r\n\r\nThat looks a bit more correct, but it looks like the green is on the side? I think that might be because in other files, we used theta and phi differently, but here, we want to return `vec2(theta, phi)` instead of the other way around (I think that makes sense that the x axis is theta here since that's the one whose range is 2*PI. That's different than in the other shaders, which is a little odd, but at least we tested those independently and they seem fine.) That looks like this:\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/74d75ff8-65c4-4b35-b6ac-f8ed9b6e080a)\r\n\r\nso that still seems 90 degrees off, but in a different axis this time. I tried cycling -90 degrees in the theta axis. This seems to look right, and that's using `vec2 angles = vec2( fract(theta + 0.75), 1.0 - phi );`\r\n![image](https://github.com/processing/p5.js/assets/5315059/6e1c9d0a-b2b0-488c-94e5-610a26d1ade3)\r\n\r\nWith just diffuse: \r\n![image](https://github.com/processing/p5.js/assets/5315059/7a714e26-5e04-4273-bd41-752bce061d47)\r\n\r\nWith specular:\r\n![image](https://github.com/processing/p5.js/assets/5315059/62841b14-96a0-4c94-85cf-5b3ed1578a38)\r\n\r\n```suggestion\r\n  vec2 angles = vec2( fract(theta + 0.75), 1.0 - phi );\r\n```"", 'comment_created': datetime.datetime(2023, 10, 27, 17, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374879193, 'comment_body': ""I tried changing `imageLight()` with `lights()` in a sketch to see if they could be roughly equivalent. I think 10 might be a bit too aggressive for the diffuse light unfortunately. I tried playing around with some other curves:\r\n\r\n<table>\r\n<tr>\r\n<th>Lighting call</th>\r\n<th>\r\n\r\n```glsl\r\npow(\r\n  texture.xyz,\r\n  vec3(10.0)\r\n);\r\n```\r\n\r\n</th>\r\n<th>\r\n\r\n```glsl\r\ntexture.xyz;\r\n```\r\n\r\n</th>\r\n<th>\r\n\r\n```glsl\r\nsmoothstep(\r\n  vec3(0.),\r\n  vec3(0.8),\r\n  texture.xyz\r\n);\r\n```\r\n\r\n</th>\r\n<tr>\r\n<td>\r\n\r\n```js\r\nimageLight(img);\r\n```\r\n\r\n</td>\r\n<td>\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/fb2a5f09-d4d0-4ff7-90a2-0b632311cc32)\r\n\r\n</td>\r\n<td>\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/2f8a27a2-3c38-4965-b0b2-d73a16934c0f)\r\n\r\n</td>\r\n<td>\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/bb1b9140-fe8a-466e-be57-dba171ac8e78)\r\n\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```js\r\nlights()\r\n```\r\n\r\n</td>\r\n<td>\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/7cf85b78-705d-45fc-bb2b-d178d546e55f)\r\n\r\n</td>\r\n<td>\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/7cf85b78-705d-45fc-bb2b-d178d546e55f)\r\n\r\n</td>\r\n<td>\r\n\r\n![image](https://github.com/processing/p5.js/assets/5315059/7cf85b78-705d-45fc-bb2b-d178d546e55f)\r\n\r\n</td>\r\n</tr>\r\n</table>\r\n\r\nSo although it's not physically accurate or anything, maybe doing this will help make it easier for people to switch from `lights()` to `imageLight()`? This maps texture values from 0-0.8 to 0-1 along a smooth curve:\r\n```suggestion\r\n  return smoothstep(vec3(0.0), vec3(0.8), texture.xyz);\r\n```"", 'comment_created': datetime.datetime(2023, 10, 27, 17, 44, 33, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1374882874, 'comment_body': ""I feel like I don't notice much change in visual after going halfway through the slider, so maybe for this example a range of 0-400 would be better?"", 'comment_created': datetime.datetime(2023, 10, 27, 17, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1375179241, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 5, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375179247, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 5, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375179256, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 5, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375179274, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 5, 57, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180279, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 6, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180517, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 6, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180634, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2023, 10, 28, 6, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180768, 'comment_body': 'makes sense, done', 'comment_created': datetime.datetime(2023, 10, 28, 6, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180924, 'comment_body': 'Done, removed the rotate functions, and changed the shape to sphere.\r\n', 'comment_created': datetime.datetime(2023, 10, 28, 6, 11, 3, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180966, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 6, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375180991, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 6, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375181019, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 28, 6, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375181896, 'comment_body': 'done, changed the `nToE` name to `mapTextureToNormal` for better understanding name.', 'comment_created': datetime.datetime(2023, 10, 28, 6, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375182402, 'comment_body': 'Changed the suggested line, but do i have to change the line \r\n```\r\n  // use worldNormal instead of R\r\n  vec2 newTexCoor = mapTextureToNormal( R );\r\n```\r\nDid you use worldNormal or R in this function?', 'comment_created': datetime.datetime(2023, 10, 28, 6, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375182945, 'comment_body': 'Done for `caluculateImageDiffuse`, should I do this for `calculateImageSpecular` are well?', 'comment_created': datetime.datetime(2023, 10, 28, 6, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1375235893, 'comment_body': '```suggestion\r\n * The image light simulates light from all the directions.\r\n```', 'comment_created': datetime.datetime(2023, 10, 28, 11, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1375236690, 'comment_body': 'I think specular looks ok how it is, the inconsistency is fine as long as it looks ok.', 'comment_created': datetime.datetime(2023, 10, 28, 11, 18, 56, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1375238398, 'comment_body': '> Did you use worldNormal or R in this function?\r\n\r\nI think that one should be `worldNormal`.\r\n\r\nI double checked the suggested code and I think maybe I was testing without that by accident though -- I think when using the world normal, to get the example with the stripes to work, it would be this:\r\n\r\n```glsl\r\nvec2 angles = vec2( fract(theta + 0.25), 1.0 - phi );\r\n```\r\n\r\n(Basically, 0.25 instead of 0.75, which is like rotating by pi.)', 'comment_created': datetime.datetime(2023, 10, 28, 11, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1376235420, 'comment_body': '> \r\n\r\ndone', 'comment_created': datetime.datetime(2023, 10, 30, 13, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}, {'comment_id': 1376282521, 'comment_body': 'I think this still needs to be changed to `worldNormal` (and I believe that means we can remove lines 113 and 114 here too.)', 'comment_created': datetime.datetime(2023, 10, 30, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'davepagurek', 'type': 'User'}, {'comment_id': 1377294969, 'comment_body': ""Done, I have commented out the lines to test it. If the tests pass then I'll completely remove this section."", 'comment_created': datetime.datetime(2023, 10, 31, 9, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'AryanKoundal', 'type': 'User'}]","[{'commit_sha': '50a0c14fc93798ccb7b2a20318017f12b1f69eb3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dfa600cdf604861695f411de8bf766bf38f9291c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '05216948c8c853a1dd35bf4858a161e040c36d45', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b155bac98fbbc4b1766d4576b32480e8e5cb6032', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '34e6438d4f3d959a439d3ee5775a80d18f3cdd0a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '916f5be61afa03363588388fd911345da02e2d63', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c59ae6cb98c786503f757e24f0f72c7a8de3d78e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8b1e19ce2341bcae4b68e5296c953b952ad34f37', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5287a4f8c09fd91d6046ae893e844558553f6f08', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b05bca6e10d94b919428711ff54f05f6f943f3fc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f6899a8131eb2152b835ce86715f8a4649ec5cb6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8cd57756f45de8a2c4d5a9102948a41df3ce679f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3c9bf12b9a1cd7c7cf8c80c3167fc054edbde0cc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '701cbee6dff557f5c0db57b6d9150e53392e129a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4c63de59d03a4ae14854d04db66521064c5acb2b', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9837dcdb98f4e07784e650695e620f17c2622e1', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5546093583ab07f3b2334f6141b9013ee7b23b52', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98af50fa42f1b7070caddfe0cfb339e7cf1d482e', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dbbff5fcd6eb3417367ec8fefba2fcd092eb5f7', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '711c5f587edca835ddbb9295b96473e8e8a79db0', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52c4d42902c1de3b55ab91f368eceff00fe75188', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0121439bd22cd207432bb9397fd42484f1f3dc2d', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e9cd8a7bc957a92ba004e22c284b3413e7a1662', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cf062dc65204592d210041663e8d6a0cc468b5c', 'committer_username': 'davepagurek', 'committer_name': 'Dave Pagurek', 'committer_email': 'dave@davepagurek.com', 'commit_date': datetime.datetime(2013, 8, 26, 19, 27, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93a24285d7a39b072217eb0711deac7676a7597a', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c19b3caaf322095e5c68f534124f7e4fc79258', 'committer_username': 'davepagurek', 'committer_name': 'Dave Pagurek', 'committer_email': 'dave@davepagurek.com', 'commit_date': datetime.datetime(2013, 8, 26, 19, 27, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b80360178162eec4a0328441524aedf94031a4dc', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc0ef6adbd45dee0679bcee1e21c96aa28411508', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f3a19d7ce9a63bfb5e8a71e6141c89434c526e', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d6f00b8e7954a9b238242c4042bcdc33f3e692', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a0c3fce71ae611bb2c776862289452b6b19f063', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0860bd74e52a135c93d44201b343f7db7a60a1e5', 'committer_username': 'davepagurek', 'committer_name': 'Dave Pagurek', 'committer_email': 'dave@davepagurek.com', 'commit_date': datetime.datetime(2013, 8, 26, 19, 27, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ade514a877951578ae405870f72b0691aeef8f6', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07371e83491f8307a2a4473759fb5cd332a13aff', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25a711b0d0b1df46ca20e36db574a28b39551baa', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c04d9166e644b2a179dc81a79c07695feb379b86', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dbe8a07194369bd41ebaa8553b22d54e5d61dcc', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cac577535d03a99c234a6d6e24b45974abd2be6', 'committer_username': 'davepagurek', 'committer_name': 'Dave Pagurek', 'committer_email': 'dave@davepagurek.com', 'commit_date': datetime.datetime(2013, 8, 26, 19, 27, 47, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5547d7dcbdf30621c8df9fc1f578deeb61b64f0a', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff3973dbfc80281f46135ffa69aa4f9b0c32d974', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b37afe5fa8b2ca7f4b18b3787995e22943a4faa5', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69008c0082c6586120f61b45a12b4238f96af32c', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd713b35e79866c5bf79fbcf338ff8761da846248', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6656e90df07d53552126ebdda64b4c2748a0043f', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '374051bf4dfa6a169283ab49349365a1fdc1860a', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b964403b7dcdc69895f95dd29ad53b7a3007dbea', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e7c3bc25a9000542249c35765d41911da987b18', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14aed5939aa9a70d64375b1d00b308e08e0b17c0', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d99712310e612d7f6642aca7afb6a5165d62e17', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fe2890802f6166a4645d0c6c0e4ba35ffe394bb', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fec78a4d15999ac49a90769c449e2399fb75c65', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94e639b7416117f1d9acb68341e508993f5d4cb3', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2c0f1e13bb62203dab03fef3d4e455fdac742a0', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e68f9f04f94f6cfce5803d9859057a05b865067f', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6df91eccb7b241044c3846f63ddc230c371ccb79', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe5e0db90a99c780cb0f902fe8d944670d04f003', 'committer_username': 'AryanKoundal', 'committer_name': 'Aryan Koundal', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 12, 12, 56, 7, tzinfo=datetime.timezone.utc)}]",Aryan Koundal,77334487,,User,,22,,36,45

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
8424040,p5.js,processing/p5.js,JavaScript,3256,21320,498,753,13058,313,7,40,"[{'id': 1534579808, 'number': 6442, 'closed': datetime.datetime(2023, 11, 3, 12, 1, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 28, 17, 16, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3091517.0, 'time_delta': '35 days, 18:45:17', 'additions': 150, 'deletions': 0, 'state': 'closed'}, {'id': 1422736950, 'number': 6255, 'closed': datetime.datetime(2023, 11, 3, 11, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 11, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 10368205.0, 'time_delta': '120 days, 0:03:25', 'additions': 684, 'deletions': 120, 'state': 'closed'}, {'id': 1236992140, 'number': 6012, 'closed': datetime.datetime(2023, 2, 13, 23, 13, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 10, 16, 44, 35, tzinfo=datetime.timezone.utc), 'time_taken': 282557.0, 'time_delta': '3 days, 6:29:17', 'additions': 60, 'deletions': 37, 'state': 'closed'}, {'id': 1223343633, 'number': 5986, 'closed': datetime.datetime(2023, 2, 1, 17, 16, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 14, 3, 3, tzinfo=datetime.timezone.utc), 'time_taken': 97987.0, 'time_delta': '1 day, 3:13:07', 'additions': 5, 'deletions': 2, 'state': 'closed'}]"
