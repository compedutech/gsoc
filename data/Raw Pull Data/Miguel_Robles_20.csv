pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1386625497,Tutorial ,,True,1,https://api.github.com/repos/mzmine/vector_db/pulls/1,https://github.com/mzmine/vector_db/pull/1,closed,2348347,1,53,28,0,25,0,0,[],2023-06-09 19:05:34+00:00,2023-11-06 07:58:14+00:00,12919960.0,"149 days, 12:52:40","[{'comment_id': 1282011333, 'comment_body': 'typo\r\n\r\nplural of spectrum is spectra', 'comment_created': datetime.datetime(2023, 8, 2, 14, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282013182, 'comment_body': 'maybe put all those txt files in a separate folder with meaningful name', 'comment_created': datetime.datetime(2023, 8, 2, 14, 44, 45, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282015019, 'comment_body': 'spectrums should be spectrum if its one or spectra if multiple\r\n\r\nnot so important though', 'comment_created': datetime.datetime(2023, 8, 2, 14, 46, 6, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282024598, 'comment_body': 'if you cut the mz range to 1000 are you also removing the spectra with precursor mz >1000?', 'comment_created': datetime.datetime(2023, 8, 2, 14, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282026562, 'comment_body': 'best would be if you add a linter and code formatter to your project. \r\nblack is pretty good. There are tutorials how to add to PyCharm ', 'comment_created': datetime.datetime(2023, 8, 2, 14, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282028160, 'comment_body': 'a general advice for formats. \r\nits good to either do tab or comma delimited files (csv, tsv) or to use json. Thats easy to auto parse', 'comment_created': datetime.datetime(2023, 8, 2, 14, 54, 49, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282029268, 'comment_body': 'always good to add some comments as to why factors are used etc', 'comment_created': datetime.datetime(2023, 8, 2, 14, 55, 36, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282032468, 'comment_body': 'best stick to python guidelines. \r\nSimpleVectorization would be the class name\r\nsimple_vectorization the method name', 'comment_created': datetime.datetime(2023, 8, 2, 14, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282073877, 'comment_body': 'create a dict with all the index names for file names and then the function that should be called. func tools partial can do this', 'comment_created': datetime.datetime(2023, 8, 2, 15, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1282080942, 'comment_body': 'definitely try the naive vectorization where you bin the spectra. \r\nSo go from mz 20 to mz 1000 or so and bin in 0.05 windows or similar. So just add all the intensities within that window to a number.\r\nNot sure what input milvus and other databases support but the intensities could be reduced in precision.', 'comment_created': datetime.datetime(2023, 8, 2, 15, 34, 14, tzinfo=datetime.timezone.utc), 'commenter': 'robinschmid', 'type': 'User'}, {'comment_id': 1301439309, 'comment_body': 'This function is never used', 'comment_created': datetime.datetime(2023, 8, 22, 10, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368589239, 'comment_body': 'It might make more sense to unite functions for the scores calculation in the same file', 'comment_created': datetime.datetime(2023, 10, 23, 12, 36, 22, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368599730, 'comment_body': 'Remove the commented lines here', 'comment_created': datetime.datetime(2023, 10, 23, 12, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368607881, 'comment_body': ""Remove this code as it's no longer used"", 'comment_created': datetime.datetime(2023, 10, 23, 12, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368608180, 'comment_body': 'Remove ', 'comment_created': datetime.datetime(2023, 10, 23, 12, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368620940, 'comment_body': 'Did you time how long does it take? And can you estimate how computationally demanding will be this training for the final lib of ~1 million spectra?', 'comment_created': datetime.datetime(2023, 10, 23, 12, 57, 7, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368623998, 'comment_body': 'Why did you choose this particular number of iterations? Also, you can increase the number of workers (depending on number of cores on your system) to speed up training', 'comment_created': datetime.datetime(2023, 10, 23, 12, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368631049, 'comment_body': 'The same note on simple_vectorization.py and simple_vectorization2.py - those do not need to be separated, you can unite them into one class. ', 'comment_created': datetime.datetime(2023, 10, 23, 13, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368634393, 'comment_body': 'When is this function used? At the moment it is not very obvious (due to the lack of structure in the main and the necessity to introduce manual changes). Either logically unite it with some of the existing classes, or write docstring', 'comment_created': datetime.datetime(2023, 10, 23, 13, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368642405, 'comment_body': ""Plot title should change depending on the scores you're plotting"", 'comment_created': datetime.datetime(2023, 10, 23, 13, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368642918, 'comment_body': ""Don't show the plot, save it to png with appropriate name"", 'comment_created': datetime.datetime(2023, 10, 23, 13, 12, 58, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368643245, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 10, 23, 13, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368694816, 'comment_body': ""We're filtering out spectra with m/z > 1000 later with matchms filtering. Would it make sense to exclude them already here? @robinschmid, what do you think?"", 'comment_created': datetime.datetime(2023, 10, 23, 13, 41, 15, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}, {'comment_id': 1368698393, 'comment_body': ""Do you actually have use cases when you pass only one array? I'd say it would make code cleaner if there were no if statement. Not critical though "", 'comment_created': datetime.datetime(2023, 10, 23, 13, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'omokshyna', 'type': 'User'}]","[{'commit_sha': '9ddb33ef29c9ea54d82fba4ac0251311a3a1d576', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59841b9faeafaf00741206ac17710e061cb8d81', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f47b775596d65a5abb5b8a674e9ac5dccde05e37', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a5fc3f26688910e1092619f178c4070a123408', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '921deffdb905da9affc038b60f3dfae72866766a', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaed72aabe70fbd0e055f05d537844af36f1f19', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a54116ebfc3b5f8c8e783e2524b2d74821d27fa', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4332472031fb8d8a4f46897d71b2845919d5e71', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee990fbc1c2d823e0be5251f8844de523ee837ac', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ffabd8e98093d45e7c942aeed5102df2739da82', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23ad8a1d7719f9744d864d724049bf81117d1be8', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d9dd7c52c65fb551140f926928b87c78b395cff', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc71634d5643913904093912c24bcf8b17866fbf', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2acf9ce944d6f69817aa67b48c07d0aabacefde8', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fff04d9dad9fa656c68d21ebc7aa04a18f74fd3f', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eff643c245ce0cf6a5f655cd8b828a989883120', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fb5fbe5e4cceb51f144dd9b886e535f42c5869c', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '547e7bbe1e751b5776e8a6e410b79838da1b16cf', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b605274b1b831cd0c3b74b6e76b7fc6ce108eb16', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac4f6454a16cdabaa0c9df5511b3afa341c5fbf', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40fbd62a6b813facb66f5bebce2ba7d9590f3a28', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07382b2ba23d32be0b921e6206680a0f5354d77e', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f738090124c78d545d9cda731566e76e7aae3577', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e83292b85687a9891c8db606ff7777eda51b96dd', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '355dd53dfb2a0cd59d85cb0173c18d3f1a3ab382', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84d14b9e2e49700c44473228f03f22934ccd8616', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0ea474676deeb2e7191c4b94e89173265c59177', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65444f4203341b13817a8e64d30e7b3636324cdb', 'committer_username': 'miguelroblesuriel', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2022, 12, 8, 10, 19, 17, tzinfo=datetime.timezone.utc)}]",,120097028,,User,,5,,0,0

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
648138851,vector_db,mzmine/vector_db,Python,3,0,4,2,30,0,1,0,"[{'id': 1386625497, 'number': 1, 'closed': datetime.datetime(2023, 11, 6, 7, 58, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 9, 19, 5, 34, tzinfo=datetime.timezone.utc), 'time_taken': 12919960.0, 'time_delta': '149 days, 12:52:40', 'additions': 2348347, 'deletions': 1, 'state': 'closed'}]"
