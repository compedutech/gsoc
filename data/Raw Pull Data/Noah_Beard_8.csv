pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
457361228,SkeletonIK changes and bug fixes,"Changes to SkeletonIK:
* Removed the pointers to PhysicalBone in the code, as they were unused.
* Forward ported the SkeletonIK bone scaling fix I made from Godot 3.2 to Godot 4.0. I realized that even with my current GSoC work, the SkeletonIK node will probably need to be updated to give everyone time to transition to the new SkeletonModification system.
* Fixed issue where the root bone in the IK chain would not rotate correctly. ~~It is not the most ideal fix, but it works while all of the other changes and fixes I tried did not~~. Closes #39893.
  * Turns out the issue was the `update_chain` function being called in `solve`. Removing the function fixes the issue and has no adverse effects in any of the projects I tested. The SkeletonIK node still works with AnimationPlayer nodes (Skeleton3D or otherwise) and when moved around in the scene.
* Fixed issue where the scale of the Skeleton node would change the position of the target for SkeletonIK. ~~Now the target's world transform is converted to a global pose, which fixes the issue.~~ Fixed by converting the target's world transform a global pose on each solve. Closes #40466.

________

These changes can probably be cherry picked to Godot 3, since many of the bugs are present in both versions. If it is needed or wanted, I can make a Godot 3 PR with the same changes.",True,40774,https://api.github.com/repos/godotengine/godot/pulls/40774,https://github.com/godotengine/godot/pull/40774,closed,7,24,2,1,8,0,2,0,"[{'name': 'bug'}, {'name': 'topic:core'}]",2020-07-27 19:36:36+00:00,2021-03-12 10:25:30+00:00,19666134.0,"227 days, 14:48:54",[],"[{'commit_sha': 'a622649876374ffef9b92b581c255cc5d29cd203', 'committer_username': 'TwistedTwigleg', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 15, 14, 6, tzinfo=datetime.timezone.utc)}]",,25082678,,User,,24,,3,57
439261002,[3.x] SkeletonEditorPlugin backport,"This PR is a backport of the SkeletonEditorPlugin that @fire created, with the modifications I added for Godot 4.0. I tested and everything seems to be working like it does in the Godot 4.0/master version.

Closes #35652 and supersedes #39090
Edit: Fixed the linked issue. I accidentally had the wrong one.",False,39796,https://api.github.com/repos/godotengine/godot/pulls/39796,https://github.com/godotengine/godot/pull/39796,closed,743,74,9,2,13,0,4,0,"[{'name': 'bug'}, {'name': 'enhancement'}, {'name': 'archived'}, {'name': 'topic:editor'}]",2020-06-24 14:51:29+00:00,2023-02-02 22:54:55+00:00,82368206.0,"953 days, 8:03:26",[],"[{'commit_sha': 'bfe6f2710f30b0a19a94c77b7e3ffbe1191de5b3', 'committer_username': 'fire', 'committer_name': 'K. S. Ernest (iFire) Lee', 'committer_email': None, 'commit_date': datetime.datetime(2008, 11, 3, 0, 14, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12412594dd610ddaabf7d4519cdb1947a69b7a35', 'committer_username': 'TwistedTwigleg', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 15, 14, 6, tzinfo=datetime.timezone.utc)}]",,25082678,,User,,24,,3,57
443543846,Godot 3.2 IK demo SkeletonIK error fix,"Fixed bug in the IK demo where the SkeletonIK scene would print an error. The issue is that the target nodes are initialized after the SkeletonIK node. Moving the nodes fixed the issue and now no more errors are printed.
",True,495,https://api.github.com/repos/godotengine/godot-demo-projects/pulls/495,https://github.com/godotengine/godot-demo-projects/pull/495,closed,24,24,1,1,1,0,1,0,[{'name': 'bug'}],2020-07-02 14:12:00+00:00,2020-07-02 17:56:30+00:00,13470.0,3:44:30,[],"[{'commit_sha': '1ad95a443fe63d59112e186e9e8866a955e76a68', 'committer_username': 'TwistedTwigleg', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 15, 14, 6, tzinfo=datetime.timezone.utc)}]",,25082678,,User,,24,,3,57
439292140,[3.2] Fixed SkeletonIK not working with scaled skeletons,"Closes #25544

The issue turns out to be that the target in the minimum replication project given, in the linked issue, is a child node of the scaled bone. This means it is also being scaled when the Skeleton is scaled. Scaling *only* the Skeleton/Armature node or increasing the scale of the IK target relative to the parent's scale also fixes the issue.
However, IK probably shouldn't be affecting the scale of bones, since IK is really only for rotation. To prevent this, the scale calculated in the IK chain is discarded before being applied to the Skeleton. This should fix any issues where the bone's are scaled when being operated on by IK.

This PR is targeted towards Godot 3.2, as the reworked IK in Godot 4.0/master does not exhibit this issue.",True,39803,https://api.github.com/repos/godotengine/godot/pulls/39803,https://github.com/godotengine/godot/pull/39803,closed,5,1,1,1,12,5,2,0,"[{'name': 'bug'}, {'name': 'topic:core'}]",2020-06-24 15:42:44+00:00,2020-07-06 14:16:58+00:00,1031654.0,"11 days, 22:34:14","[{'comment_id': 444991692, 'comment_body': 'This was just a general fix I applied while looking through the code. It does not change the functionality of the IK in any way.', 'comment_created': datetime.datetime(2020, 6, 24, 15, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 444992555, 'comment_body': 'Is there a better way to remove only the scale from a Basis? Would the `orthonormalized` function work?', 'comment_created': datetime.datetime(2020, 6, 24, 15, 45, 3, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 445050052, 'comment_body': ""You might have to handle the non-uniform scaling removal. I don't know if that's possible.."", 'comment_created': datetime.datetime(2020, 6, 24, 17, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 445139234, 'comment_body': ""I'm *hoping* it will not be an issue, as after normalizing I apply whatever scale is set in the global position, which should reapply any non-uniform scales. It could be an issue though, I had not thought to test this. For most cases though, it should (fingers crossed) be okay."", 'comment_created': datetime.datetime(2020, 6, 24, 20, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 448134095, 'comment_body': 'You can use this: https://github.com/godotengine/godot/blob/master/core/math/basis.cpp#L74', 'comment_created': datetime.datetime(2020, 7, 1, 6, 5, 25, tzinfo=datetime.timezone.utc), 'commenter': 'AndreaCatania', 'type': 'User'}]","[{'commit_sha': '3dc466b244a28c4adb7567c99528aa15c13aee14', 'committer_username': 'TwistedTwigleg', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 15, 14, 6, tzinfo=datetime.timezone.utc)}]",,25082678,,User,,24,,3,57
424572777,Skeleton and Skeleton inspector low-level changes,"Some low-level changes to both the Skeleton3D and the awesome new Skeleton3D inspector!

Changes:
- [x] ~~Made the `Bone` struct in `Skeleton3D` public so it can be used if/when needed for the gizmo/sub-gizmo system.~~ Removed! It can be added again later.
- [x] Added helper functions for converting transforms from bone space to world space, and vise versa.
- [x] Updated the `Skeleton3D` class reference with the new functions, and filled out some of the existing functions.
- [x] ~~(Tried exposing the `Bone` struct to GDScript and found it was clunky to use and the functions provided in Skeleton were better suited. A few commits are related to this, but the code added was removed afterwards)~~
- [x] Changed the icon used in the `Skeleton3D` inspector to the BoneAttachement, so the bones shown in the inspector use the bone icon.
- [x] Changed the `Skeleton3D` inspector to use `EditorPropertyTransform` instead of EditorSpinSliders for the transform/matrix.
- [x] Created a new function in `EditorPropertyTransform` that allows the UI to be set with a passed-in transform.
- [x] Use `EditorPropertyVector3` for the translation section of the `Skeleton3D` inspector
- [x] Use `EditorPropertyVector3` for the rotation section of the `Skeleton3D` inspector
- [x] Use `EditorPropertyVector3` for the scale section of the `Skeleton3D` inspector
- [x] Placed the Transform/Matrix into a sub-section, so it mirrors the style used in `Node3D`.
  * I thought about putting the position, rotation, and scale also in sub-sections, but I'm not sure there would be much benefit. Usability wise, I think just having the Transform/Matrix in a sub-section is probably fine.
- [x] Fix Travis error(s)

Additional PR ideas:
* Add per-bone inspector visibility.
  * This should make it easier to manipulate bones in meshes that have 24+ bones in them, as the unnecessary/infrequently used bones can be hidden away until needed. Might be a tad complex to implement.
  * Note: this is just for the inspector. The bones would still be visible on the 3D model. It is just for ease of use when working on 3D models with a lot of bones.
* Make a list of child bones in the Bone struct so it is easier to process parent-child relations.
* Make a gizmo/sub-gizmo system for manipulating bones
  * Not sure on the complexity of this. Hard to know what sub-tasks will be needed until I start working on it.
* Add a search/filter box so it is easier to find bones.
  * Thanks to @slapin for the suggestion!

~**Note**: the commits are a bit messy, but it is because I didn't want to accidentally lose work/changes as I go along. I will clean them up if needed, or they can be squashed into a single commit upon being merged. Either way is fine with me.~ Fixed!

*Disclaimer: This work is part of the GSOC 2020 program.*",True,39126,https://api.github.com/repos/godotengine/godot/pulls/39126,https://github.com/godotengine/godot/pull/39126,closed,210,240,7,1,27,36,3,0,"[{'name': 'enhancement'}, {'name': 'topic:core'}, {'name': 'topic:editor'}]",2020-05-28 15:41:36+00:00,2020-06-16 07:30:23+00:00,1612127.0,"18 days, 15:48:47","[{'comment_id': 431959944, 'comment_body': 'Which world transform is it?\r\n\r\n* The ""global transform"" from the root node to the bone\r\n* The ""world transform"" from the skeleton node to the bone. It\'s probably this one.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 431960800, 'comment_body': 'The latter. I will revise this so it is more clearly stated :+1: ', 'comment_created': datetime.datetime(2020, 5, 28, 16, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 431960854, 'comment_body': ""At some point it would be good to convert this to the new callable interface, but I didn't because it made backporting to 3.2 harder.\r\n\r\nWill you backport this to 3.2?"", 'comment_created': datetime.datetime(2020, 5, 28, 16, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 431965675, 'comment_body': 'Yeah, using the callable interface might have been better, but I figured it was best to follow the style already used in the class (and it was what I am already familiar with, so a win-win!)\r\n\r\nI can probably backport the changes to Godot 3.2 once this PR is merged. At very least, I can backport the EditorPropertyTransform and EditorPropertyVector3 changes.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 431969115, 'comment_body': ""I'll try to get https://github.com/godotengine/godot/pull/39090 merged, or alternatively you can take over the pr."", 'comment_created': datetime.datetime(2020, 5, 28, 16, 30, 16, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 431971207, 'comment_body': 'This one is a global transform right?\r\n\r\nA spatial is relation to the root node. While the bone is in relation to the skeleton or just the bone.\r\n\r\nEdited:\r\n\r\nThis is in relation to the skeleton node. I get annoyed at the overloaded coordinate space terms.', 'comment_created': datetime.datetime(2020, 5, 28, 16, 33, 36, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 431971516, 'comment_body': 'Or did you write spatial as a shorthand for Transform3D?', 'comment_created': datetime.datetime(2020, 5, 28, 16, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 431972176, 'comment_body': ""The custom pose is an addition to the bone rest.\r\n\r\nEdited: Wanted to make it clear in the docs. Sorry, if I'm pedantic."", 'comment_created': datetime.datetime(2020, 5, 28, 16, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 431997484, 'comment_body': 'Whatever works best for you works for me.', 'comment_created': datetime.datetime(2020, 5, 28, 17, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 432549151, 'comment_body': 'Are these being used in this pr directly?', 'comment_created': datetime.datetime(2020, 5, 29, 15, 5, 50, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 432549618, 'comment_body': ""You're free to add it your subgizmos pr though."", 'comment_created': datetime.datetime(2020, 5, 29, 15, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 432571961, 'comment_body': 'Exposing would require the struct to be a resource with all the wrappers and gdscript bindings. ', 'comment_created': datetime.datetime(2020, 5, 29, 15, 42, 29, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 432575530, 'comment_body': ""> Exposing would require the struct to be a resource with all the wrappers and gdscript bindings.\r\n\r\nI know, I went down that route. Adding the custom resource with all the wrappers and GDScript bindings was 3-4 of the squished commits! I ultimately found it was not worth the extra complexity and using the Struct was more clunky than just using the functions in Skeleton.\r\n\r\nI can probably remove those functions and move the Bone struct back to a private struct now. As you said, if the sub-gizmo needs it, it can be changed again. I'll make a PR with these changes soon."", 'comment_created': datetime.datetime(2020, 5, 29, 15, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 432597064, 'comment_body': 'The last pr should be combined with the pr that made the change so it has a change commit. Note that history is lost here.', 'comment_created': datetime.datetime(2020, 5, 29, 16, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 432671036, 'comment_body': ""I tried, but the rebase gets all messed up when I try to move the commit to override the first commit. Is there a way to rebase and reorder the commits without the log getting messed up? I tried moving the actual `fixup`/`squash` line so it was under the initial commit, and it didn't work. There was merge conflicts for every single commit, even for those that would otherwise be unaffected."", 'comment_created': datetime.datetime(2020, 5, 29, 18, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 432691380, 'comment_body': ""It's tricky, and that's why I squish all of my commits together, because it makes porting to 3.2 easier. (One cherry pick and then fix conflicts.)"", 'comment_created': datetime.datetime(2020, 5, 29, 19, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 433366923, 'comment_body': 'Typo:\r\n\r\nlkie -> like\r\n\r\nThis happens a few times more.\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 1, 17, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 433367300, 'comment_body': 'Second typo.', 'comment_created': datetime.datetime(2020, 6, 1, 17, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 438612394, 'comment_body': ""How is this different from get_global_transform() * p_bone_transform?\r\n\r\nAlso this appears to be the global transform of the skeleton and the local bone transform? \r\n\r\nThis isn't the transform needed to go from the skeleton node to the bone from the root spatial node transform."", 'comment_created': datetime.datetime(2020, 6, 11, 8, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 438613720, 'comment_body': ""Also, above information can be calculated when the process order of the bone struct is calculated. then the global transform of the skeleton can be fetched.\r\n\r\nTL;DR, why isn't this in the bone struct?"", 'comment_created': datetime.datetime(2020, 6, 11, 8, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 438815735, 'comment_body': '> How is this different from get_global_transform() * p_bone_transform?\r\n\r\nHmm, it might not be any different, thinking about it. If that snippet works, then that would be ideal. I will need to test! I am all for using simpler, easier to understand code :+1: \r\n\r\n> Also this appears to be the global transform of the skeleton and the local bone transform?\r\n\r\nHere\'s what the function is intended to be used for, which hopefully can help better explain more about it:\r\n\r\nThe function is for taking a bone global pose (`global_pose`, `global_pose_override`, or one of the local poses converted to a global pose) and returns a transform that is the bone\'s position in the scene. `bone_transform_to_world_transform` is so you can do computations with the transform as if it is a global transform received from a Node3D. Then, when you are finished using the transform in the scene and want to apply it to the bone transform, you can use `world_transform_to_bone_transform` to get the transform as a global pose, when then you can apply.\r\n\r\nHopefully that helps clear things up a bit. It is kinda hard to explain, but it can be extremely useful to have when you need it.\r\nI""m not totally happy with the naming though. I\'d prefer to change the name(s) of the functions in #39353 rather than here though, just because said PR builds on top of this one. I am thinking a more descriptive name would be something like `global_pose_to_world_transform` and `world_transform_to_global_pose`.\r\n\r\n> TL;DR, why isn\'t this in the bone struct?\r\n\r\nA few reasons:\r\n\r\nThe first reason is that the helper functions may be called using multiple different transforms, like the newly introduced `local_pose_override` in my draft PR or the existing `global_pose_override`. Ultimately, it would probably only ever by the two override poses that ever get used with these functions, but then the Bone struct would need an additional two transforms.\r\n\r\nThe second reason is that including it in the Bone struct would increase the computations for those using just the Skeleton3D node. If possible, I figure it is best to try and make the IK code mostly separate and limit the performance impact it could have for those not using it.\r\n\r\nThe third reason is that, with how the IK needs to be run, it would be recalculated more often than needed as the bones in the chain are iteratively updated. Keeping it a separate function means it is only used when needed. Especially for iterative IK, like FABRIK, CCDIK, etc, the cost could add up quickly when calculating it every time one of the bones changes. Keeping it out of the Bone struct avoids this issue entirely.', 'comment_created': datetime.datetime(2020, 6, 11, 14, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 438822800, 'comment_body': ""I'm not sure which is faster, keeping the data in the bones struct vs going from the bone all the way to the parent bone every time the function is called. \r\n\r\nProbably need to test it. \r\n\r\nWe thought that recreating all the transforms from the bone all the way to the bone chain root would be expensive, but it's really better done as a bench mark with 300-500 bones.\r\n\r\nYou do need to iterate to the root of the bone chain operation, but as mentioned it's undecided keeping the data as part of the struct is slower than recomputing every function call."", 'comment_created': datetime.datetime(2020, 6, 11, 14, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'fire', 'type': 'User'}, {'comment_id': 440110104, 'comment_body': '```suggestion\r\n\t\t\t\tReturns whether the bone rest for the bone at [code]bone_idx[/code] is disabled.\r\n```', 'comment_created': datetime.datetime(2020, 6, 15, 11, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440113304, 'comment_body': 'There should not be empty lines, nor cosmetic line breaks (line on line 218) in the XML. Each line == a paragraph.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440113722, 'comment_body': 'This applies to several of the descriptions below.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 37, 15, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440115228, 'comment_body': 'Yes please use `connect_mp` here instead of keeping the compat method. That removes the need to bind the method just to connect to it.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440115773, 'comment_body': ""Can `Basis()` stay on a single line? With `clang-format` this isn't really more readable than a one liner."", 'comment_created': datetime.datetime(2020, 6, 15, 11, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440116214, 'comment_body': 'Ensure that there is a separation line between all function definitions.', 'comment_created': datetime.datetime(2020, 6, 15, 11, 42, 36, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440116491, 'comment_body': 'I guess this should be removed?', 'comment_created': datetime.datetime(2020, 6, 15, 11, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440116718, 'comment_body': ""Shouldn't this be `Ref<Texture2D>`?"", 'comment_created': datetime.datetime(2020, 6, 15, 11, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440184857, 'comment_body': 'Empty line here.', 'comment_created': datetime.datetime(2020, 6, 15, 13, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440186871, 'comment_body': 'Sorry about that! I thought I got them all. It should be fixed now.', 'comment_created': datetime.datetime(2020, 6, 15, 13, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 440323166, 'comment_body': ""@akien-mga - Sorry, didn't see this comment until now! I tried changing the `connect_compact` to `connect_mp`, but there does not appear to be a `connect_mp` function, at least not in the version of master I used last.\r\n\r\nWas the function just recently added, like in the last week or two? If not, how do I use the function? I did a project wide search, but `connect_mp` didn't show any results."", 'comment_created': datetime.datetime(2020, 6, 15, 17, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}, {'comment_id': 440353465, 'comment_body': ""Sorry that was a typo. It's `connect`, and the callable argument should use `callable_mp(this, &ClassName::method_name)`."", 'comment_created': datetime.datetime(2020, 6, 15, 18, 5, 7, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440446210, 'comment_body': ""Since you use `callable_mp` which refers to the function pointer directly, you don't need to bind the method. Similarly, all three other pre-existing bindings can be removed (and thus the whole `_bind_methods` override)."", 'comment_created': datetime.datetime(2020, 6, 15, 21, 4, 34, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 440453403, 'comment_body': ""I removed the `_bind_methods` override since it's no longer needed. :+1: "", 'comment_created': datetime.datetime(2020, 6, 15, 21, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TwistedTwigleg', 'type': 'User'}]","[{'commit_sha': '24905becb26771e14c05d0976628cd494513f49a', 'committer_username': 'TwistedTwigleg', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 1, 12, 15, 14, 6, tzinfo=datetime.timezone.utc)}]",,25082678,,User,,24,,3,57

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
15634981,godot,godotengine/godot,C++,19981,88222,1515,2967,66550,13396,14,2860,"[{'id': 758746069, 'number': 53821, 'closed': datetime.datetime(2021, 10, 16, 21, 54, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 14, 22, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 170550.0, 'time_delta': '1 day, 23:22:30', 'additions': 72, 'deletions': 45, 'state': 'closed'}, {'id': 749000407, 'number': 53394, 'closed': datetime.datetime(2021, 10, 4, 18, 26, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 4, 14, 29, 50, tzinfo=datetime.timezone.utc), 'time_taken': 14226.0, 'time_delta': '3:57:06', 'additions': 4, 'deletions': 8, 'state': 'closed'}, {'id': 731940904, 'number': 52575, 'closed': datetime.datetime(2023, 1, 15, 19, 7, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 11, 14, 27, 15, tzinfo=datetime.timezone.utc), 'time_taken': 42439226.0, 'time_delta': '491 days, 4:40:26', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 714662968, 'number': 51820, 'closed': datetime.datetime(2021, 8, 18, 6, 55, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 0, 54, 27, tzinfo=datetime.timezone.utc), 'time_taken': 21673.0, 'time_delta': '6:01:13', 'additions': 10, 'deletions': 9, 'state': 'closed'}, {'id': 705910540, 'number': 51368, 'closed': datetime.datetime(2021, 8, 16, 13, 37, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 7, 15, 57, 7, tzinfo=datetime.timezone.utc), 'time_taken': 769210.0, 'time_delta': '8 days, 21:40:10', 'additions': 6027, 'deletions': 286, 'state': 'closed'}, {'id': 653050813, 'number': 49087, 'closed': datetime.datetime(2021, 5, 26, 7, 34, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 1, 32, 54, tzinfo=datetime.timezone.utc), 'time_taken': 21725.0, 'time_delta': '6:02:05', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 651418108, 'number': 49031, 'closed': datetime.datetime(2021, 5, 24, 16, 35, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 15, 24, 21, tzinfo=datetime.timezone.utc), 'time_taken': 4261.0, 'time_delta': '1:11:01', 'additions': 11, 'deletions': 8, 'state': 'closed'}, {'id': 624688555, 'number': 48251, 'closed': datetime.datetime(2021, 5, 8, 8, 40, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 22, 2, 44, tzinfo=datetime.timezone.utc), 'time_taken': 902274.0, 'time_delta': '10 days, 10:37:54', 'additions': 76, 'deletions': 92, 'state': 'closed'}, {'id': 622617681, 'number': 48166, 'closed': datetime.datetime(2021, 5, 8, 21, 6, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 24, 17, 13, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1223609.0, 'time_delta': '14 days, 3:53:29', 'additions': 77, 'deletions': 90, 'state': 'closed'}, {'id': 616319689, 'number': 47933, 'closed': datetime.datetime(2021, 4, 15, 21, 3, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 19, 49, 43, tzinfo=datetime.timezone.utc), 'time_taken': 4401.0, 'time_delta': '1:13:21', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 614788063, 'number': 47872, 'closed': datetime.datetime(2021, 6, 5, 23, 29, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 21, 58, 16, tzinfo=datetime.timezone.utc), 'time_taken': 4584664.0, 'time_delta': '53 days, 1:31:04', 'additions': 6586, 'deletions': 608, 'state': 'closed'}, {'id': 612015847, 'number': 47738, 'closed': datetime.datetime(2021, 4, 9, 7, 0, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 22, 52, 7, tzinfo=datetime.timezone.utc), 'time_taken': 29289.0, 'time_delta': '8:08:09', 'additions': 70, 'deletions': 16, 'state': 'closed'}, {'id': 602263969, 'number': 47441, 'closed': datetime.datetime(2021, 4, 7, 14, 25, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 28, 16, 2, 55, tzinfo=datetime.timezone.utc), 'time_taken': 858156.0, 'time_delta': '9 days, 22:22:36', 'additions': 71, 'deletions': 16, 'state': 'closed'}, {'id': 595998447, 'number': 47147, 'closed': datetime.datetime(2021, 3, 18, 22, 45, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 22, 26, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1154.0, 'time_delta': '0:19:14', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 475572380, 'number': 41584, 'closed': datetime.datetime(2020, 8, 29, 10, 51, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 28, 18, 21, 4, tzinfo=datetime.timezone.utc), 'time_taken': 59422.0, 'time_delta': '16:30:22', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 457361228, 'number': 40774, 'closed': datetime.datetime(2021, 3, 12, 10, 25, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 19, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 19666134.0, 'time_delta': '227 days, 14:48:54', 'additions': 7, 'deletions': 24, 'state': 'closed'}, {'id': 448362721, 'number': 40347, 'closed': datetime.datetime(2021, 4, 13, 23, 1, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 16, 28, 57, tzinfo=datetime.timezone.utc), 'time_taken': 23697159.0, 'time_delta': '274 days, 6:32:39', 'additions': 6665, 'deletions': 599, 'state': 'closed'}, {'id': 439292140, 'number': 39803, 'closed': datetime.datetime(2020, 7, 6, 14, 16, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 15, 42, 44, tzinfo=datetime.timezone.utc), 'time_taken': 1031654.0, 'time_delta': '11 days, 22:34:14', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 439261002, 'number': 39796, 'closed': datetime.datetime(2023, 2, 2, 22, 54, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 14, 51, 29, tzinfo=datetime.timezone.utc), 'time_taken': 82368206.0, 'time_delta': '953 days, 8:03:26', 'additions': 743, 'deletions': 74, 'state': 'closed'}, {'id': 429475573, 'number': 39353, 'closed': datetime.datetime(2021, 8, 7, 15, 58, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 22, 20, 1, tzinfo=datetime.timezone.utc), 'time_taken': 36869896.0, 'time_delta': '426 days, 17:38:16', 'additions': 5891, 'deletions': 258, 'state': 'closed'}, {'id': 424572777, 'number': 39126, 'closed': datetime.datetime(2020, 6, 16, 7, 30, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 28, 15, 41, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1612127.0, 'time_delta': '18 days, 15:48:47', 'additions': 210, 'deletions': 240, 'state': 'closed'}, {'id': 154694495, 'number': 13320, 'closed': datetime.datetime(2017, 11, 28, 19, 3, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 26, 20, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 169103.0, 'time_delta': '1 day, 22:58:23', 'additions': 68, 'deletions': 0, 'state': 'closed'}, {'id': 154686259, 'number': 13313, 'closed': datetime.datetime(2017, 11, 28, 3, 15, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 26, 16, 31, 12, tzinfo=datetime.timezone.utc), 'time_taken': 125082.0, 'time_delta': '1 day, 10:44:42', 'additions': 25, 'deletions': 0, 'state': 'closed'}, {'id': 154259551, 'number': 13194, 'closed': datetime.datetime(2017, 11, 23, 13, 34, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 22, 21, 34, 7, tzinfo=datetime.timezone.utc), 'time_taken': 57636.0, 'time_delta': '16:00:36', 'additions': 40, 'deletions': 14, 'state': 'closed'}, {'id': 153987805, 'number': 13152, 'closed': datetime.datetime(2017, 11, 22, 17, 6, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 21, 20, 3, tzinfo=datetime.timezone.utc), 'time_taken': 75784.0, 'time_delta': '21:03:04', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 153966487, 'number': 13147, 'closed': datetime.datetime(2017, 11, 22, 18, 47, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 21, 18, 23, 18, tzinfo=datetime.timezone.utc), 'time_taken': 87878.0, 'time_delta': '1 day, 0:24:38', 'additions': 241, 'deletions': 27, 'state': 'closed'}, {'id': 135503255, 'number': 10322, 'closed': datetime.datetime(2017, 8, 16, 15, 14, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 8, 13, 18, 26, 55, tzinfo=datetime.timezone.utc), 'time_taken': 247636.0, 'time_delta': '2 days, 20:47:16', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 135401540, 'number': 10260, 'closed': datetime.datetime(2017, 8, 16, 15, 33, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 8, 11, 19, 19, 7, tzinfo=datetime.timezone.utc), 'time_taken': 418465.0, 'time_delta': '4 days, 20:14:25', 'additions': 984, 'deletions': 984, 'state': 'closed'}, {'id': 129058953, 'number': 9522, 'closed': datetime.datetime(2017, 7, 17, 21, 37, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 7, 5, 21, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1037420.0, 'time_delta': '12 days, 0:10:20', 'additions': 85, 'deletions': 3, 'state': 'closed'}, {'id': 128692481, 'number': 9489, 'closed': datetime.datetime(2017, 7, 8, 21, 53, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 7, 3, 20, 50, 31, tzinfo=datetime.timezone.utc), 'time_taken': 435775.0, 'time_delta': '5 days, 1:02:55', 'additions': 37, 'deletions': 2, 'state': 'closed'}, {'id': 128670896, 'number': 9486, 'closed': datetime.datetime(2017, 7, 3, 20, 11, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 7, 3, 17, 34, 24, tzinfo=datetime.timezone.utc), 'time_taken': 9436.0, 'time_delta': '2:37:16', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 128431107, 'number': 9457, 'closed': datetime.datetime(2017, 7, 3, 21, 43, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 30, 18, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 269034.0, 'time_delta': '3 days, 2:43:54', 'additions': 26, 'deletions': 25, 'state': 'closed'}, {'id': 127349751, 'number': 9355, 'closed': datetime.datetime(2017, 7, 11, 9, 11, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 25, 2, 2, 48, tzinfo=datetime.timezone.utc), 'time_taken': 1408122.0, 'time_delta': '16 days, 7:08:42', 'additions': 229, 'deletions': 2, 'state': 'closed'}, {'id': 126629539, 'number': 9296, 'closed': datetime.datetime(2017, 6, 26, 21, 37, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 20, 21, 4, 37, tzinfo=datetime.timezone.utc), 'time_taken': 520369.0, 'time_delta': '6 days, 0:32:49', 'additions': 127, 'deletions': 18, 'state': 'closed'}, {'id': 126205114, 'number': 9259, 'closed': datetime.datetime(2017, 6, 20, 21, 5, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 6, 18, 22, 44, 13, tzinfo=datetime.timezone.utc), 'time_taken': 166883.0, 'time_delta': '1 day, 22:21:23', 'additions': 1448, 'deletions': 282, 'state': 'closed'}]"
60349380,godot-demo-projects,godotengine/godot-demo-projects,GDScript,1575,5640,165,172,1387,76,13,32,"[{'id': 443543846, 'number': 495, 'closed': datetime.datetime(2020, 7, 2, 17, 56, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 14, 12, tzinfo=datetime.timezone.utc), 'time_taken': 13470.0, 'time_delta': '3:44:30', 'additions': 24, 'deletions': 24, 'state': 'closed'}, {'id': 368706081, 'number': 382, 'closed': datetime.datetime(2020, 2, 17, 23, 34, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 29, 18, 36, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1659482.0, 'time_delta': '19 days, 4:58:02', 'additions': 392, 'deletions': 209, 'state': 'closed'}, {'id': 245977179, 'number': 299, 'closed': datetime.datetime(2020, 1, 22, 1, 22, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 1, 18, 21, 26, 32, tzinfo=datetime.timezone.utc), 'time_taken': 31809366.0, 'time_delta': '368 days, 3:56:06', 'additions': 400, 'deletions': 258, 'state': 'closed'}, {'id': 185280245, 'number': 257, 'closed': datetime.datetime(2018, 5, 1, 23, 43, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 5, 1, 21, 24, 26, tzinfo=datetime.timezone.utc), 'time_taken': 8364.0, 'time_delta': '2:19:24', 'additions': 306, 'deletions': 48, 'state': 'closed'}, {'id': 183469150, 'number': 246, 'closed': datetime.datetime(2018, 4, 24, 0, 52, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 4, 23, 15, 18, 10, tzinfo=datetime.timezone.utc), 'time_taken': 34475.0, 'time_delta': '9:34:35', 'additions': 62, 'deletions': 170, 'state': 'closed'}, {'id': 175706642, 'number': 226, 'closed': datetime.datetime(2018, 3, 31, 3, 5, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 3, 17, 15, 49, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1163770.0, 'time_delta': '13 days, 11:16:10', 'additions': 6814, 'deletions': 0, 'state': 'closed'}, {'id': 175661471, 'number': 225, 'closed': datetime.datetime(2018, 3, 17, 15, 42, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 3, 16, 22, 39, 18, tzinfo=datetime.timezone.utc), 'time_taken': 61411.0, 'time_delta': '17:03:31', 'additions': 6814, 'deletions': 0, 'state': 'closed'}, {'id': 166598961, 'number': 210, 'closed': datetime.datetime(2018, 4, 2, 2, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 2, 1, 17, 14, 28, tzinfo=datetime.timezone.utc), 'time_taken': 5130965.0, 'time_delta': '59 days, 9:16:05', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 163236787, 'number': 199, 'closed': datetime.datetime(2018, 1, 16, 17, 23, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 16, 17, 11, 8, tzinfo=datetime.timezone.utc), 'time_taken': 730.0, 'time_delta': '0:12:10', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 161500841, 'number': 184, 'closed': datetime.datetime(2018, 1, 9, 19, 16, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 6, 23, 38, 3, tzinfo=datetime.timezone.utc), 'time_taken': 243512.0, 'time_delta': '2 days, 19:38:32', 'additions': 235, 'deletions': 60, 'state': 'closed'}, {'id': 161496035, 'number': 183, 'closed': datetime.datetime(2018, 1, 6, 23, 40, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 6, 21, 6, 43, tzinfo=datetime.timezone.utc), 'time_taken': 9223.0, 'time_delta': '2:33:43', 'additions': 881, 'deletions': 346, 'state': 'closed'}, {'id': 161492752, 'number': 182, 'closed': datetime.datetime(2018, 1, 9, 19, 20, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2018, 1, 6, 19, 32, 4, tzinfo=datetime.timezone.utc), 'time_taken': 258488.0, 'time_delta': '2 days, 23:48:08', 'additions': 72, 'deletions': 0, 'state': 'closed'}, {'id': 156041697, 'number': 108, 'closed': datetime.datetime(2018, 1, 15, 15, 47, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 3, 2, 4, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3764583.0, 'time_delta': '43 days, 13:43:03', 'additions': 569, 'deletions': 38, 'state': 'closed'}, {'id': 155969569, 'number': 103, 'closed': datetime.datetime(2017, 12, 2, 9, 38, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 12, 1, 22, 13, 49, tzinfo=datetime.timezone.utc), 'time_taken': 41057.0, 'time_delta': '11:24:17', 'additions': 314, 'deletions': 101, 'state': 'closed'}, {'id': 150609511, 'number': 89, 'closed': datetime.datetime(2020, 1, 22, 23, 51, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 11, 3, 19, 22, 22, tzinfo=datetime.timezone.utc), 'time_taken': 70000171.0, 'time_delta': '810 days, 4:29:31', 'additions': 649, 'deletions': 0, 'state': 'closed'}, {'id': 146580883, 'number': 75, 'closed': datetime.datetime(2017, 10, 29, 15, 46, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 10, 14, 1, 35, 7, tzinfo=datetime.timezone.utc), 'time_taken': 1347071.0, 'time_delta': '15 days, 14:11:11', 'additions': 598, 'deletions': 0, 'state': 'closed'}, {'id': 136614400, 'number': 55, 'closed': datetime.datetime(2017, 9, 4, 7, 49, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 8, 19, 17, 15, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1348420.0, 'time_delta': '15 days, 14:33:40', 'additions': 2255, 'deletions': 0, 'state': 'closed'}, {'id': 136342454, 'number': 53, 'closed': datetime.datetime(2020, 1, 26, 20, 47, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2017, 8, 17, 20, 9, 45, tzinfo=datetime.timezone.utc), 'time_taken': 77071051.0, 'time_delta': '892 days, 0:37:31', 'additions': 1914, 'deletions': 0, 'state': 'closed'}]"
