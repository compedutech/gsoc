pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
684435472,WIP: Parsec API for the new Elm parser,"This is PR is the first step in an effort to integrate the parser from the Elm compiler into elm-format as part of a GSOC project ([project proposal](https://github.com/elm-tooling/gsoc-projects/issues/13)).

This PR removes the dependency on [parsec](https://hackage.haskell.org/package/parsec) and [indents](https://hackage.haskell.org/package/indents-0.3.3) which have been used by elm-format to parse Elm code. The API these libraries provided has been replaced with drop-in replacement modules (located in `Text.Parsec.*`) compatible with elm-format. These replacement modules are implemented in terms of the new Elm parser (located in `Parse.Primitives` and copied from the Elm compiler). `new-parser-2021-notes.md` in the project root goes into more detail on some specifics relating to this project.

~~The entire test suite passes.~~",True,740,https://api.github.com/repos/avh4/elm-format/pulls/740,https://github.com/avh4/elm-format/pull/740,closed,723,131,13,42,1,1,0,0,[],2021-07-06 14:37:26+00:00,2021-07-13 19:05:27+00:00,620881.0,"7 days, 4:28:01","[{'comment_id': 669028523, 'comment_body': 'If I remember correctly, elm-format will never output CRs, but it does read them.  For ones in literal strings, it will convert them to an escape sequence.  And for ones elsewhere, it will treat them either as newlines or whitespace (I forget which).', 'comment_created': datetime.datetime(2021, 7, 13, 18, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}]","[{'commit_sha': 'b3f8f7e955926b781e6e9a4f15734d6039ebc367', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd269887cb2c6a7da6da24f1a71825cf52f973652', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f89e4b43abfd41069c024c8f9da583cc18cc2891', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89a2f1d8de5306dc66cc1508d924259364b73ceb', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4736dea8ec95b83bc575ac7eb89f913734ddcea4', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652439dde3eee3d29a54e97c3157c0d145bebad3', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17a18765b0070aebd187b0f1a18568146f6ffa2c', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ad843691038dc002d66c570cd20c369a0d4e0f4', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee3efc05ccb2b13c8ee65b56ffd583ea21b6d1c', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f96aacd7ce6a2647951e36882dc38060db7ccdd7', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc240069518ff0832a95fef215669523930cfcf7', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9751b1548a41e3542c7715fb24ca1ae9f501b2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96d71873b9033b3ea1d02a505da574301697fba0', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59c8005437ab28cd0f2ad6cbbad6d4e62dcd9274', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f9943e10f7c51a54fd2bf00acc63b664bc1a447', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6be94906a521c946f090b7896bfc1b3d0e9e65ae', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ede21e5fbad35a0269c51d4c07ef69d3717f9ebb', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aebee4b95cc35368bd01e81275ad035b7fb82169', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae493e97a60f80bd052139fe722073f9d48ba8d0', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d1884059ad5bfa91db056b8ddbefd9309091b89', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1229beb6f14a09da49403a8df6b0d23e3e470bb9', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a084e35439f82b9313a5c7f8d03f51138725798', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf4ff6e034f992e992382b2f64a441f4e188e659', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '857321e2eb483c7b6cfa5b9c0cb2ee8f5efa6895', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d944e38c7d83a4f2d71c2a826ff7fdf2614270', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5790310b4b4b7416b0d38c84ee9dcd8a6010324', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cf95cc37995e70d803556c1c81334a0ee4c2853', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e9bc478b01a879d02d4a2541d2ebef6015f1b27', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f72ac39bdc7d1e1a5cd3682439a4ac8985a8c4aa', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9efbd5243b7d939c3e518b490e9cf6ac4683b6a2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3205db81de455589f11fad2e94913619404ddb57', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffc444305ae17e129d5280a3326c0d58fe660fd9', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07314c3693745c581735c32ba17d1c3725f27eaf', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '039ee9a177caa205a119ecaaae9ca4be3e07b048', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c628dac42e65daca4e794de6f51269c96aa18072', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '684387710d7d3de905939209050f292b682461b3', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23bf7fb48ce73358c3c7d441435eeb00ad01133a', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18592bd4a4ef47f9ee7e34b1d7f9453d7183edd0', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b87a30d7efcfb3022c4a5d08f326f910b9032983', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf4fed6e0ae834c0cea8654ca32e063841b5b48d', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '544b6ccddcc9ba196825ceaa5ae691d7bed57683', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcdb3f81225ff9046a056cfcec71eecd2ccb258f', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}]",Emma Bastås,22533224,emma.bastas@protonmail.com,User,,21,,5,12
687244166,Bugfixes and small improvments to the parsec adapter,"This PR fixes two bugs found in #740 and adds some other improvments.

The three important changes are:
* The initial indentation level is set to 1 instead of 0. Row and column numbering starts at 1 so initial indentation now matches that. (see 425321d)
* `Text.Parsec.Indent.withPos` restores to the previous indentation before calling a continuation. (see 26dc657)
* `Text.Parsec.Pos.updatePos` can now handle tabs. (see 06c17f3)

Some less important changes:
* `Text.Parsec.Combinator.eof` gets an implementation exactly matching the parsec implementation.
* `Text.Parsec.Combinator.anyToken` gets an implementation (`eof` needs it)
* `Text.Parsec.Prim.(<?>)` gets an actual implementation instead of just leaving the parser unchanged, although the implementation might not exactly match the parsec behaviour.

It looks to me like the test suite passes with these additional commits.",True,742,https://api.github.com/repos/avh4/elm-format/pulls/742,https://github.com/avh4/elm-format/pull/742,closed,34,23,5,7,0,0,0,1,[],2021-07-10 22:11:51+00:00,2021-07-20 16:44:17+00:00,844346.0,"9 days, 18:32:26",[],"[{'commit_sha': '06c17f3a2da28fd6a32a33c1bf7828746cfea3e2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '546d1bf296b19ccb5b0c5ad8c82baa7a1f1a56a6', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e76dfdf1722eddd9c5f9bff4435c1834719cf649', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1189c1c448f4c0a827d18d9832ab96a0bacf651', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b074e60463092231625ff68c6e8102beaead305c', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0cb2ff9744a1925ac23f80d5cd10dc0e389413e', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14ca05d30a20ef8025f4a8d25f4b94e23a7dae2f', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}]",Emma Bastås,22533224,emma.bastas@protonmail.com,User,,21,,5,12
689444014,Parsec API refactor,"A refactoring of the parsec-like API, including the ""documentation"" in `new-parser-2021-notes.md`

### Parsec-like API refactor
All of the modules providing the parsec-like API are merged into one single module. I.e. all functions found in `Text.*` are moved into `Parse.ParsecAdapter`. This means that all modules using the parsec-like API have had import statements changed resulting in the large file change count for this PR.

### ""Documentation"" refactor
Notes found in `new-parser-2021-notes.md` which have been taken during the course of the parsec-like API work have been moved to more appropriate places, like source code comments and a [Github issue](https://github.com/avh4/elm-format/issues/741), and the document has been removed.

### Behavioral changes
The only change to the behavior of the parsec-like API can be found in bc58b34, a minor fix to the error message of a function.

### Other refactorings
`Parse.Helpers.failure` has been re-implemented without the use of `getInput` and `setInput`, so that they can be removed from the API. This functions was re-implemented in elm/compiler at one point as well: https://github.com/elm/compiler/blob/9f6c60cec62a21f8eb205949f7a7115b60fd5832/src/Parse/Primitives.hs#L100",True,743,https://api.github.com/repos/avh4/elm-format/pulls/743,https://github.com/avh4/elm-format/pull/743,closed,836,1007,30,5,0,0,0,0,[],2021-07-13 22:31:57+00:00,2021-08-11 05:53:14+00:00,2445677.0,"28 days, 7:21:17",[],"[{'commit_sha': '2223bfece9c328f1ba95bcee7946f81e0587f9cc', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6c8624f54241057f4e588c54cefc61a5a4ddb87', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69c4780c32c5bbddb266fc3de74f46ffb4584cf2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092ebd1f798d324a36213bb8327c43ad9d7afbdf', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d325a85ae93a4fe680e243be70cc3cc66af52c9', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}]",Emma Bastås,22533224,emma.bastas@protonmail.com,User,,21,,5,12
713832441,Misc refactors to the Elm compiler's parser integration code,"Apart from small changes and improvements there is one notable refactors in this PR

### Refactor the parsec adapter's error type

---
elm-format doesn't report errors anyways, why care?
* Good error reporting can aid in debugging.
* We might want to report errors in some context (jsonAST?) at some point, at least let's not actively dismantle existing error reporting infrastructure.
* Great effort has been expended to give the Elm compiler good error reporting infrastructure, it would be a shame to not utilize it.
---

Parsec errors are essentially strings with some additional metadata. The Elm compiler on the other hand defines all possible parse errors as custom types inside `Reporting.Error.Syntax`. With this approach no information is lost when a parse error is propagated from the lowest level parser through the higher level ones. The higher level ones just construct higher level errors with the lower level errors as children.

393c7ee redefines parsecs error type. Instead of a single string with metadata it's now possible to create a tree structure, kind of like a generic/untyped version of the Elm compilers errors, it looks like this:
https://github.com/avh4/elm-format/blob/393c7eea66dd438a00bcdc66e2176eb8180f87d8/elm-format-lib/src/Parse/ParsecAdapter.hs#L348-L351
https://github.com/avh4/elm-format/blob/393c7eea66dd438a00bcdc66e2176eb8180f87d8/elm-format-lib/src/Parse/ParsecAdapter/Message.hs#L4-L7

9770e47  Integrates the parsec errors with the Elm compilers errors. Additional leaf variants are added to `Message` so that the error types from the compiler parsing code can be added as children to a parsec error without first needing to convert to a string. 

What the `Message` type looks like now: (note that `String`, `Char` and `Number` refer to custom error types)
https://github.com/avh4/elm-format/blob/9770e4744392fdb5441a1ebc89f654a7d86033b3/elm-format-lib/src/Reporting/Error/Syntax.hs#L105-L111",True,748,https://api.github.com/repos/avh4/elm-format/pulls/748,https://github.com/avh4/elm-format/pull/748,closed,395,657,27,12,1,1,0,0,[],2021-08-17 00:43:05+00:00,2021-08-21 07:46:55+00:00,371030.0,"4 days, 7:03:50","[{'comment_id': 689955475, 'comment_body': ""`errorPos` crashes on empty error. I realize that it's possible to define `ParseError` to make _impossible state impossible._ But since Nil isn't exposed outside this module and since it's never used to construct an empty error I figured this was ok. That said I'm not opposed to changing this"", 'comment_created': datetime.datetime(2021, 8, 17, 0, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}]","[{'commit_sha': '21e8b5208c886ea1c502caa2cc2d8d692b1000ef', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ee810fbf7dd260198e87350f06d3b0b17a9b525', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2818e69af6adb350f370663cd45c38ce1d0b385', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87cbcd534de028edaa9b7fa6723f07164dc31cdd', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '393c7eea66dd438a00bcdc66e2176eb8180f87d8', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '316079380810588984f8690ed779bbc5f8dade06', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9770e4744392fdb5441a1ebc89f654a7d86033b3', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54034e40cc277fddaaef5ae25990edefd85737b5', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc93493e94c5c4c1c8dd5a251a16bb67796c74af', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '821c20e4f945286e1bd6540ed67e58dd7ed6ee37', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '490ad32bd5d5af76854a31666c05623b2cba204c', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '618c35f9a57983a07c7bda2a5134dd6d8bf43966', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}]",Emma Bastås,22533224,emma.bastas@protonmail.com,User,,21,,5,12
702408225,Use code from the Elm compiler to parse strings,"This PR focuses on migrating string and char literal parsing to use code from the Elm compiler.

7781377 Starts by copying over code from the Elm compiler verbatim. Some declarations that won't be needed are commented out, and `Reporting.Error.Syntax` is merged with the existing code in that module.

The major changes take place in 67d646d and 1a21c57 where the behaviors of `Elm.String` and `Parse.String`  are changed. The `ES.String`'s returned by `Parse.String.string` and `Parse.String.character` no longer represents raw strings as they should be written to JS, instead they represent the input string, but _normalized_ so that escape sequences have been replaced by the actual Unicode characters they represent. Input: `🐂\u{1F402}\x1F402`. Returned by parser: `f0 9f 90 82 f0 9f 90 82 f0 9f 90 82`

`Parse.Literal`'s `chr` and `str` are changed to use the new parsers in c2e023f (and again in 1a21c57)  and 4fcffba respectively.

f20232d, db8e002 and ~a92f6a8~ 356ce1b just reintroduces parsing features specific to elm-format",True,746,https://api.github.com/repos/avh4/elm-format/pulls/746,https://github.com/avh4/elm-format/pull/746,closed,3182,1206,37,24,1,7,0,1,[],2021-08-03 16:02:12+00:00,2021-08-11 06:02:06+00:00,655194.0,"7 days, 13:59:54","[{'comment_id': 681914679, 'comment_body': 'We should add a ""please report ..."" error for the fallback branch.', 'comment_created': datetime.datetime(2021, 8, 3, 16, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}, {'comment_id': 681920538, 'comment_body': '? might not have been necessary to combine these after all?', 'comment_created': datetime.datetime(2021, 8, 3, 16, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}, {'comment_id': 681927829, 'comment_body': ""As you noted, we should look at doing this in the parse step so that the AST does not contain the CR's"", 'comment_created': datetime.datetime(2021, 8, 3, 16, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}, {'comment_id': 682102978, 'comment_body': 'Error message added in 8dca014', 'comment_created': datetime.datetime(2021, 8, 3, 21, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 682106975, 'comment_body': 'This is a silly mistake that does not compile, should be `do  s <- Parse.String.character toExpecation toError`. Fixed in ef5ef6a', 'comment_created': datetime.datetime(2021, 8, 3, 21, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 682123362, 'comment_body': ""b106094 reverts this commit.\r\n\r\n356ce1b adds this feature to the parse step instead. When a CR is seen the string parsers looks ahead and checks if there's an LF following. If so, it behaves as it would if encountering just an LF, but the pointer is incremented by 2 instead of 1.\r\n"", 'comment_created': datetime.datetime(2021, 8, 3, 21, 44, 56, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 683521314, 'comment_body': 'This is adressed in 5a2d419.\r\n\r\n#### Background if interested.\r\nTL;DR: I\'ve changed my mind an now agree with Aarons comment, better to _not_ combine them after all.\r\n\r\nThe reason the Elm compiler has these two variants in the first place is because when encountering ""normal escapes"" (i.e `\\[a-z]`), it can just include them as is in the JS output. Whereas `\\u{....}` escapes needs to be transformed. In the original compiler code, `ES.Slice` is used for ""normal escapes"" and `ES.CodePoint` for `\\u{....}` style.\r\n\r\nhttps://github.com/avh4/elm-format/blob/778137761cd11f8a3010967d4fbd0ea8c945a0a1/elm-format-lib/src/Parse/String.hs#L79-L83\r\n\r\nBut in elm-format we normalize all escape sequences regardless so this distinction becomes less significant. The two branches have become very similar now:\r\n\r\nhttps://github.com/avh4/elm-format/blob/5a2d41983098bace966c082c638ff83668c87645/elm-format-lib/src/Parse/String.hs#L78-L82\r\n\r\nAn urge arises to generalize and have a single variant and branch for this which is indeed quite straightforward. But there is a value in having the code be similar to the compiler, which is why I agree with reverting to two variants again.    ', 'comment_created': datetime.datetime(2021, 8, 5, 14, 43, 7, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}]","[{'commit_sha': '2223bfece9c328f1ba95bcee7946f81e0587f9cc', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6c8624f54241057f4e588c54cefc61a5a4ddb87', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69c4780c32c5bbddb266fc3de74f46ffb4584cf2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092ebd1f798d324a36213bb8327c43ad9d7afbdf', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d325a85ae93a4fe680e243be70cc3cc66af52c9', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '778137761cd11f8a3010967d4fbd0ea8c945a0a1', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2e023f17b1b3b861ff66278106f49c5dd7e50b6', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d3936773b9fab594fb8ab7abd294373d9badd09', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67d646dd84fbe3c5f7743bbdd450f54818210036', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a21c578c18e12a8455b8cdaff0e23ff9cccd93d', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f20232d518faf7b4258c43b32b0eeffe7f25ce8a', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7133fdb457a76326e05a22ef9d4a167455ebdf1', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fcffbaa9877232295b0fff40857853669c99a16', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '802d5cbbba2d3c453b6e61e85a2739e88fe4d183', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db8e002e448ab75eb241f350df4e6e8809ce485a', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a92f6a8c85d0f2989497b1f23d7c7b6973ec247f', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef5ef6a22f589d97debd32265f3be1e2d74c42b1', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dca0144e0458ab10e2a3c98273e9f631a3cb883', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1060941be9c8fb679b05d3aa832d5ea8f62cc22', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '356ce1b2ed3b4914538d38b5ae8f4a3517a819cd', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8f4fe7afe57c83453223da247a4e56d309aa5d', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7879bffde73cf7d78aafe7765bc8b8b3cf81ce0f', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a2d41983098bace966c082c638ff83668c87645', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc6a7ed1fd4d7e7355d6e3c2a7a1a02b300c8f55', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}]",Emma Bastås,22533224,emma.bastas@protonmail.com,User,,21,,5,12
707442879,Use code from Elm compiler to parse numbers,"This PR focuses on migrating int and float literal parsing to use code from the Elm compiler.

### The commits in order of creation:

388e707 and 7b93d0f starts off by uncommenting and copying over declarations from the Elm compiler that will be needed for number parsing. a84ba10 fixes basic compile errors.

a73a37e, efbea12 and 1ae84b4 Includes the basic changes to the compilers number parsers to make them work with elm-format.

8450d4b Changes the Integer representation from `Int` to `Int64` to retain the behavior described in #635 (Weather or not this behavior is desirable or not might not be determined yet, but let's not change the behavior without thinking thoroughly about it first)

30b5241 Makes the number parsers work with Elm 10.17's `[n..m]`-style list literals.

And finally elm-format is made to use these parsers in e691d73",True,747,https://api.github.com/repos/avh4/elm-format/pulls/747,https://github.com/avh4/elm-format/pull/747,closed,256,275,3,10,0,8,0,0,[],2021-08-10 15:10:36+00:00,2021-08-16 00:39:41+00:00,466145.0,"5 days, 9:29:05","[{'comment_id': 686118098, 'comment_body': ""`chompHex` is used in `Parse.String` when parsing Unicode escapes. Changing from `Int` to `Int64` here would therefore spill over into `Parse.String`, `Elm.String` and `Reporting.Error.Syntax`. This is why this function has been given this more general type signature instead.\r\n\r\nNot sure this is the right thing to do though. Other options could be just letting the type change spill over or use `fromIntegral` to convert back to `Int` in `Parse.String`\r\n\r\n**Update:** As we've discussed there are other ways to do this and there's no major reason to pick one over the other. But this approach makes the smallest amount of changes to the code, and is therefore preferable."", 'comment_created': datetime.datetime(2021, 8, 10, 15, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 686123856, 'comment_body': ""As we've discussed earlier @avh4, parsing floats is _difficult_ and best to just use `read` or similar functions and save ourselves time and sanity.\r\n\r\nI didn't manage to find an equivalent of read for `Text` or `ByteString` and have stuck with the `read` function used before. At least we can be confident that the float parsing behavior will stay the same."", 'comment_created': datetime.datetime(2021, 8, 10, 15, 29, 48, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 689160292, 'comment_body': ""This is fine to keep either way, but I'm just curious if `Show` was added simply for debugging, or if it was necessary for things to compile?"", 'comment_created': datetime.datetime(2021, 8, 15, 23, 37, 45, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}, {'comment_id': 689161739, 'comment_body': '👍 And I think this is safe because previously going into `chompFraction` with a second `.` would always result in an error, and the only change now is that if there is a valid range syntax, that will be parsed as valid?', 'comment_created': datetime.datetime(2021, 8, 15, 23, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}, {'comment_id': 689163375, 'comment_body': 'Yes, that is correct.\r\n\r\nLooking ahead for a second `.` also retains the same behavior as [Parse.Literals.decimals](https://github.com/avh4/elm-format/pull/747/commits/e691d73cda22d9a05cb3b53f7e28c00cfb9c5ab2#diff-aaaf99696880972a84fa197f3fb95b771e2ee24e7fbc6cc5e59ffe520c92c835L64) which was the function that parsed the decimal bit previously', 'comment_created': datetime.datetime(2021, 8, 16, 0, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 689165493, 'comment_body': ""This is actually needed for now. `show` is used chuck the errors onto a parsec error message.\r\nHere's an example.\r\n\r\nhttps://github.com/avh4/elm-format/blob/8bbada66239b8c0a7c217d6d80cac3db21e7bbff/elm-format-lib/src/Parse/Literal.hs#L23\r\n\r\nI also vaguely recall some test helpers relying on `show` to display error messages."", 'comment_created': datetime.datetime(2021, 8, 16, 0, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}, {'comment_id': 689166417, 'comment_body': ""Ah okay, so it's needed here but not in elm-compiler because we're using Strings for errors, instead of elm-compiler's customer error type?"", 'comment_created': datetime.datetime(2021, 8, 16, 0, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'avh4', 'type': 'User'}, {'comment_id': 689167862, 'comment_body': ""Yes,\r\nif we ever get to the point where all of the parsers have migrated away from parsec then we'll be able to use Elm compiler-style errors all the way, and we wouldn't need `show` (at least not for this reason). Converting the errors to strings done when compiler-style parsers are used in parsec-style parsers, i.e at the border between the old and new code.\r\n\r\n(spoiler: In the refactoring PR that I'm currently working on I'll be presenting an attempt at changing the parsec error type so that the Elm compiler's errors can be included without having to be converted to strings)"", 'comment_created': datetime.datetime(2021, 8, 16, 0, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'emmabastas', 'type': 'User'}]","[{'commit_sha': '388e707a64cbd2a4dea55e8897a52491f6407bb2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b93d0ff6a6767f8d81a06d88a5c6209e610da82', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a84ba104fdc3d1cdbbc33eadb483cee38ebf2d65', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a73a37e6116fcfe2955da6a4fb2b75f7f71c0001', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efbea12f0631a271c40ab28fd54a9d439a935792', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ae84b40b61a3f78b79ef9086df4e6f87d381100', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8450d4bbe01998615bf712d2abc10d51546916fc', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30b5241a3af52e965d683583d74af0b7bbe8e62a', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e691d73cda22d9a05cb3b53f7e28c00cfb9c5ab2', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bbada66239b8c0a7c217d6d80cac3db21e7bbff', 'committer_username': 'emmabastas', 'committer_name': 'Emma Bastås', 'committer_email': 'emma.bastas@protonmail.com', 'commit_date': datetime.datetime(2016, 9, 29, 23, 56, 37, tzinfo=datetime.timezone.utc)}]",Emma Bastås,22533224,emma.bastas@protonmail.com,User,,21,,5,12

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
42377692,elm-format,avh4/elm-format,Haskell,145,1307,25,62,2099,225,20,12,"[{'id': 713832441, 'number': 748, 'closed': datetime.datetime(2021, 8, 21, 7, 46, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 0, 43, 5, tzinfo=datetime.timezone.utc), 'time_taken': 371030.0, 'time_delta': '4 days, 7:03:50', 'additions': 395, 'deletions': 657, 'state': 'closed'}, {'id': 707442879, 'number': 747, 'closed': datetime.datetime(2021, 8, 16, 0, 39, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 15, 10, 36, tzinfo=datetime.timezone.utc), 'time_taken': 466145.0, 'time_delta': '5 days, 9:29:05', 'additions': 256, 'deletions': 275, 'state': 'closed'}, {'id': 702408225, 'number': 746, 'closed': datetime.datetime(2021, 8, 11, 6, 2, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 3, 16, 2, 12, tzinfo=datetime.timezone.utc), 'time_taken': 655194.0, 'time_delta': '7 days, 13:59:54', 'additions': 3182, 'deletions': 1206, 'state': 'closed'}, {'id': 689444014, 'number': 743, 'closed': datetime.datetime(2021, 8, 11, 5, 53, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 22, 31, 57, tzinfo=datetime.timezone.utc), 'time_taken': 2445677.0, 'time_delta': '28 days, 7:21:17', 'additions': 836, 'deletions': 1007, 'state': 'closed'}, {'id': 687244166, 'number': 742, 'closed': datetime.datetime(2021, 7, 20, 16, 44, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 22, 11, 51, tzinfo=datetime.timezone.utc), 'time_taken': 844346.0, 'time_delta': '9 days, 18:32:26', 'additions': 34, 'deletions': 23, 'state': 'closed'}, {'id': 684435472, 'number': 740, 'closed': datetime.datetime(2021, 7, 13, 19, 5, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 14, 37, 26, tzinfo=datetime.timezone.utc), 'time_taken': 620881.0, 'time_delta': '7 days, 4:28:01', 'additions': 723, 'deletions': 131, 'state': 'closed'}]"
