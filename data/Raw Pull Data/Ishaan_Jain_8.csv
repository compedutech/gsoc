pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1526681434,Add Artificial Information Filter,,False,234,https://api.github.com/repos/observingClouds/xbitinfo/pulls/234,https://github.com/observingClouds/xbitinfo/pull/234,closed,0,0,0,0,3,22,0,0,[],2023-09-22 14:27:37+00:00,2024-03-28 05:29:51+00:00,16210934.0,"187 days, 15:02:14","[{'comment_id': 1339345286, 'comment_body': 'Your function is returning a modified cdf and not keepbits. I would name the function therefore accordingly, like `get_cdf_without_artificial_information`.', 'comment_created': datetime.datetime(2023, 9, 27, 23, 46, 4, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1339348723, 'comment_body': 'To make this more general and also allow for different filters in the future, I would give your filter a name and make its options optional keyword arguments:\r\n\r\n```suggestion\r\n    information_filter=None,\r\n    **kwargs\r\n```', 'comment_created': datetime.datetime(2023, 9, 27, 23, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1339350179, 'comment_body': 'Please add a [docstring](https://en.wikipedia.org/wiki/Docstring) that explains what the function is doing and what each parameter means. Take the docstring from `get_keepbits` as an example.', 'comment_created': datetime.datetime(2023, 9, 27, 23, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1339353606, 'comment_body': 'I guess you calculate the sum over the exponent and sign bits of a float32 number here. Can you make this more general so that it will work for any float and integer? You could for example extract the type information from the info_per_bit dataset.', 'comment_created': datetime.datetime(2023, 9, 27, 23, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1339355476, 'comment_body': '`first_Ninebits_sum >= threshold * infSum`  is fixed for each iteration within this loop and will not change. You can therefor move this part of the condition outside of the `for` loop and skip this loop entirely if `first_Ninebits_sum >= threshold * infSum` is not met.', 'comment_created': datetime.datetime(2023, 9, 28, 0, 1, 57, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1340190300, 'comment_body': 'If I am understanding your comment correctly ,I think you missed line 396 where I am updating the first_Ninebits_sum on every iteration. So it will keep changing on every iteration. ', 'comment_created': datetime.datetime(2023, 9, 28, 13, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Ishaanj18', 'type': 'User'}, {'comment_id': 1340354932, 'comment_body': ""True, you tricked me with the naming of `first_Ninebits_sum`, which sounds like it shouldn't change ;) maybe you can rename the variable or introduce an additional one."", 'comment_created': datetime.datetime(2023, 9, 28, 15, 46, 37, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1340389711, 'comment_body': 'Yes I thought of changing it earlier too. Will do it now', 'comment_created': datetime.datetime(2023, 9, 28, 16, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Ishaanj18', 'type': 'User'}, {'comment_id': 1345128512, 'comment_body': 'You do not need to import this. `xb.get_keepbits` should do it.', 'comment_created': datetime.datetime(2023, 10, 4, 3, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345138456, 'comment_body': 'How about:\r\n```suggestion\r\n        Minimum cumulative sum of information content before artificial information filter is applied.\r\n```\r\nPercentage would actually be for the range 0 to 100, but you are rather using a fraction here.', 'comment_created': datetime.datetime(2023, 10, 4, 3, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345139384, 'comment_body': 'Maybe you can add how this is actually implemented here. How does the filter work?', 'comment_created': datetime.datetime(2023, 10, 4, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345140390, 'comment_body': 'The user does not no yet what kind of gradient it is. Please add some more information about it. This might also get clearer with additional formation in the general description as noted above.', 'comment_created': datetime.datetime(2023, 10, 4, 3, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345144289, 'comment_body': 'Could you give the filter a name, like `gradient` so we can add additional filters in the future?\r\n```suggestion\r\n            if information_filter == ""gradient"":\r\n```\r\nYou need to adapt this of course also at other places.', 'comment_created': datetime.datetime(2023, 10, 4, 3, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345147072, 'comment_body': 'Do you intend to add artificial information here? Could you just add a comment above these lines describing what you are doing here?', 'comment_created': datetime.datetime(2023, 10, 4, 3, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345149831, 'comment_body': ""Could you please add a doctoring to this test as well? I guess you are testing here whether the keepbits stay the same after applying the filter? That's great! The `air_temperature` dataset assumably does not have any artificial information, so I am missing one additional test, where the application of the filter actually does make a difference. This could potentially be integrated into your above's test."", 'comment_created': datetime.datetime(2023, 10, 4, 3, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345150347, 'comment_body': 'Could you add these additional parameters to the `get_keepbits` docstring and explain them there? Thanks!', 'comment_created': datetime.datetime(2023, 10, 4, 3, 38, 5, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1345155906, 'comment_body': 'Yes I have added information from my side here, Is that fine?', 'comment_created': datetime.datetime(2023, 10, 4, 3, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ishaanj18', 'type': 'User'}, {'comment_id': 1348274901, 'comment_body': ""Can you push your edits. I currently can't see any added comments."", 'comment_created': datetime.datetime(2023, 10, 6, 6, 0, 6, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1357734270, 'comment_body': 'Could you assign the information filter here and at other places to the `None` object? It means that information_filter is basically not set. Currently, it is set to the string `""None""`.\r\n```suggestion\r\n        information_filter=None,\r\n```', 'comment_created': datetime.datetime(2023, 10, 13, 4, 4, 16, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1357736591, 'comment_body': ""We don't need a loop here and can just divide the entire array by its sum\r\n```suggestion\r\n            cdf_array = cdf_array / cdf_array[infbits]\r\n```"", 'comment_created': datetime.datetime(2023, 10, 13, 4, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1357737812, 'comment_body': 'You can use python indexing here, or in this case [numpy indexing](https://numpy.org/doc/stable/user/basics.indexing.html)\r\n```suggestion\r\n            cdf_array[infbits + 1,:] = 1\r\n```', 'comment_created': datetime.datetime(2023, 10, 13, 4, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1365648852, 'comment_body': 'Sorry, it should be\r\n```suggestion\r\n            cdf_array[(infbits + 1):] = 1\r\n```', 'comment_created': datetime.datetime(2023, 10, 19, 14, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}]",[],Ishaanj18,93217075,,User,,20,,9,7
1517763449,"added data types UInt16,UInt32,UInt64 to bitinformation_wrapper.jl",,True,233,https://api.github.com/repos/observingClouds/xbitinfo/pulls/233,https://github.com/observingClouds/xbitinfo/pull/233,closed,6,15,1,4,2,0,0,0,[],2023-09-15 18:25:38+00:00,2023-09-20 05:03:14+00:00,383856.0,"4 days, 10:37:36",[],"[{'commit_sha': 'df73f3e6b1ddc3dd06ca5f11c1e33e80db12eb5a', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6c5147b2aab12ee171de11c7f0719259cb16b37', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6c80c5e343c2423e88ef6a3d8e0b653172461e6', 'committer_username': 'milankl', 'committer_name': 'Milan Klöwer', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 13, 46, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '755a11b80d86028a90e1591a8568682db9fddf07', 'committer_username': 'milankl', 'committer_name': 'Milan Klöwer', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 13, 46, 16, tzinfo=datetime.timezone.utc)}]",Ishaanj18,93217075,,User,,20,,9,7
1302055401,fixes #76,Added an additional keepbits parameter in bitround_along_dim.,True,188,https://api.github.com/repos/observingClouds/xbitinfo/pulls/188,https://github.com/observingClouds/xbitinfo/pull/188,closed,177,21,4,58,12,13,0,0,[],2023-04-04 17:56:39+00:00,2023-06-15 05:51:33+00:00,6177294.0,"71 days, 11:54:54","[{'comment_id': 1164606469, 'comment_body': 'Hi @Ishaanj18,\r\nThank you for adding this test. It is currently however not executed as it is only treated as comment in the docstring. The doctest syntax starts with `>>>` for commands and `` for the expected output.\r\nAs the test is more elaborate, you should move these lines to https://github.com/observingClouds/xbitinfo/blob/main/tests/test_bitround.py', 'comment_created': datetime.datetime(2023, 4, 12, 20, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1164607435, 'comment_body': 'There you can also test if the `ValueError` is raised when expected.', 'comment_created': datetime.datetime(2023, 4, 12, 20, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1169771267, 'comment_body': ""`np.random.rand` shouldn't be used in a test without a [random seed](https://en.wikipedia.org/wiki/Random_seed) as the results won't otherwise be deterministic. Can't you just use the `air_temperature` dataset we are already using in these tests? "", 'comment_created': datetime.datetime(2023, 4, 18, 9, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1169773935, 'comment_body': 'This looks suspicious. Is there a reason why you use different tests for different latitude slices?', 'comment_created': datetime.datetime(2023, 4, 18, 9, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1169777040, 'comment_body': 'I would encourage you to add tests for\r\n- a ValueError is raised when both keepbits and inflevels are provided\r\n- a ValueError is raised when none of keepbits and inflevels are provided', 'comment_created': datetime.datetime(2023, 4, 18, 9, 50, 42, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1172226379, 'comment_body': 'Great! This is what I had in mind. Thanks for implementing this.', 'comment_created': datetime.datetime(2023, 4, 20, 8, 3, 53, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1172227487, 'comment_body': '```suggestion\r\n\r\n```\r\nwe do not need to call this twice. You already called that a few lines above.', 'comment_created': datetime.datetime(2023, 4, 20, 8, 4, 54, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1172230471, 'comment_body': '```suggestion\r\ndef test_bitround_along_dim(air_temperature):\r\n    # test for inflevels\r\n    ds = air_temperature\r\n```\r\nWe load the air temperature dataset in the main part of this test because it is used by several tests.', 'comment_created': datetime.datetime(2023, 4, 20, 8, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1206238725, 'comment_body': 'Hi @Ishaanj18,\r\nAs far as I can tell from just looking at your changes this looks all good. I would just prefer, if you could still keep the option here so provide `inflevels`.', 'comment_created': datetime.datetime(2023, 5, 26, 4, 52, 14, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1206262615, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2023, 5, 26, 5, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ishaanj18', 'type': 'User'}, {'comment_id': 1218976667, 'comment_body': 'This is a very clever idea! Nice!', 'comment_created': datetime.datetime(2023, 6, 6, 6, 16, 20, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1218987901, 'comment_body': 'Either `inflevels` OR `keepbits` need to be provided. Now it is implemented that both need to be provided, which can lead to inconsistencies as they relate to each other and one can inferred from the other.', 'comment_created': datetime.datetime(2023, 6, 6, 6, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'observingClouds', 'type': 'User'}, {'comment_id': 1223935802, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2023, 6, 9, 7, 17, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ishaanj18', 'type': 'User'}]","[{'commit_sha': '5d2b3a9ac2b88ee05f6506a0a414fc8a555e1637', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfa6c22f012d8a251beecfbb714af4f4135f8e9', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd38eadceb9b72f3db10b5eecb7be480a9cd306c9', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f3ff983474f023a72e0d538262f3f1bb3d934c4', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fcce0c2344394b41d61cf9ba95247fca15dd398', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06f24f5a05b6a17f77c4708363651b247834dee9', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feb47424ac23e1488afce69c70733d0cb8276cff', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df05a886612db63fe332639a8ffbce3733045303', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a02be029055c04157de9dc00741b96d3bb9c5ff', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2edd28138a6a22e5d66ca614dbc415677e3ce3c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c89df904f3c6e214f77f97ac08d803da751289e9', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c107c9c385155466a66192fcac583288f293b40b', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f077f6e092ec8b1e411cc8bbe595ae88c047454', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb9e2487d267c35d6e8cba3ee2ce893699c4c866', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da992ed9ffd3f0afb20a164eacb97ccded985bc', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06134f91f7663451d8d3de576de2f0618c7922b4', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08d7ef276c3d78bdf6193217eafc1de28302b14a', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04760dab3d1cd165b38353f823c949607c67fe8', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b7a2646eabb34becde71b99441e0fce3c29789', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b4bb2b36bc919dd2756dd0f9a898565b80adc0a', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bf81ca358565e9a833fef2b8ba6fcf56dcdd706', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0755c6251a610f17d01253d62d6c7b4a796acc7a', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c24285689ba31f98c01109c8d21cc4cb7c1ed5a', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a8450562e8e93d03a5f4996791813402a4f578c', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92524372435ee348a2b91ade889a621c3c231cfd', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9326a552a4bd1e63bd8f760da7d74162245632e1', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3de81df80dd3edc1058d2c3072e635ae4dd42da1', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4aa84ac076b482ad5f7fd6a5974a95c2d88af9e5', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '257b5bc32cd5e60d58886e4d1217582b65907a5f', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a62fd11a2b02e8f2277a200184eaea841387b656', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1b9be28ad8b6519bc80cd1f4bd56d19f4da69fc', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3355a6fd47074c12a7ddfc7c4ab5aa442a39b4f2', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b1cf714d90cacfde570d666f0cfe91cae104ce0', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1112afa186989d8698a666ab2ccb2426545e163a', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70e31e7157e5e99109c6b8ced4f987a08b6e720b', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8df638f22887cc0bf2468bacb38f807aaf715267', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5585024acbf5f22b96bda06f7b1910b8c3881a56', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7ccf82742ae73014c65a68e2df4e2c80843df4c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13704636e28d2ed94dd3cadd7f601763be16d006', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f4450e2540b3cbe159e295b98144268b9ac0da', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '958238c3aab3aef00c147d3c5b260098d2a6c0fc', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9650c72b22029d28f760d07abb14347da47d7be', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bccb85110b3a4da9bd643fd908d74924761a827c', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842e0c7355bc9d756a950a506fda967953f3d590', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99802c870bff9f861ecdb9a243bee81f53f8c11f', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc37a28a84244d32d551757ea6a080ef37d81843', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a9cca3c9b7219fed649ab70f870ccfa92bfcdfe', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee8eac9d1f84f490ad741cde691d0916e413feb5', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82bdf8ba72f7f1dd85a61d0d4402862957733a32', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a72c7c94f41a67ba15d6c5bd8400af257311dcc', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4b575ae57f3334d59fac7870d4be3afb86a6faa', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be98733696802ba6bc5a7c9c995318ffbf8e1cd8', 'committer_username': 'pre-commit-ci[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2020, 6, 13, 0, 9, 59, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a46db36e6e020ed63ab00204d8440a2eb36f30e', 'committer_username': 'Ishaanj18', 'committer_name': 'Ishaanj18', 'committer_email': None, 'commit_date': datetime.datetime(2021, 10, 26, 17, 29, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95fc574149553b0b13d82f704d8680612a3a645a', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c569507a0e27b5f270f5d84bb22efd1ab2b263c', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd6f09fd301ef4641ebe5ce6eeadbeb04deb9e19', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '414e595e71d7ba18cf7755732521c8cd2c57b99d', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b3fe4fed5899e8e678678e961ab9241063b8b4', 'committer_username': 'observingClouds', 'committer_name': 'Hauke Schulz', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 26, 15, 15, 38, tzinfo=datetime.timezone.utc)}]",Ishaanj18,93217075,,User,,20,,9,7

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
476252206,xbitinfo,observingClouds/xbitinfo,Python,21,52,3,16,655,21,3,2,"[{'id': 1795410039, 'number': 273, 'closed': datetime.datetime(2024, 4, 17, 8, 7, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 28, 6, 53, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1732453.0, 'time_delta': '20 days, 1:14:13', 'additions': 820, 'deletions': 337, 'state': 'closed'}, {'id': 1587794714, 'number': 244, 'closed': datetime.datetime(2023, 11, 6, 4, 1, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 6, 3, 54, 16, tzinfo=datetime.timezone.utc), 'time_taken': 430.0, 'time_delta': '0:07:10', 'additions': 279, 'deletions': 2, 'state': 'closed'}, {'id': 1526681434, 'number': 234, 'closed': datetime.datetime(2024, 3, 28, 5, 29, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 14, 27, 37, tzinfo=datetime.timezone.utc), 'time_taken': 16210934.0, 'time_delta': '187 days, 15:02:14', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 1517763449, 'number': 233, 'closed': datetime.datetime(2023, 9, 20, 5, 3, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 15, 18, 25, 38, tzinfo=datetime.timezone.utc), 'time_taken': 383856.0, 'time_delta': '4 days, 10:37:36', 'additions': 6, 'deletions': 15, 'state': 'closed'}, {'id': 1302055401, 'number': 188, 'closed': datetime.datetime(2023, 6, 15, 5, 51, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 4, 17, 56, 39, tzinfo=datetime.timezone.utc), 'time_taken': 6177294.0, 'time_delta': '71 days, 11:54:54', 'additions': 177, 'deletions': 21, 'state': 'closed'}, {'id': 1300985955, 'number': 185, 'closed': datetime.datetime(2023, 5, 26, 5, 25, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 4, 3, 27, 10, tzinfo=datetime.timezone.utc), 'time_taken': 4499905.0, 'time_delta': '52 days, 1:58:25', 'additions': 28, 'deletions': 0, 'state': 'closed'}]"
