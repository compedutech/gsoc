pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
932971882,Hide Events Frontend,"# Problem
To hide events, API endpoints were implemented at #1942. But no frontend exists for the implemented PR, hence this PR tries to implement one. (The backend PR hasn't been merged yet, hence, this PR is a descendant of the backend PR. If further changes are made to that PR, changes would be merged here)


# Solution
Frontend with an UI like this has been coded in this PR
![image](https://user-images.githubusercontent.com/11733600/167739678-b9bdbe7c-a4c5-417f-85cb-d22ce1bfd9b0.png)


",True,1986,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1986,https://github.com/metabrainz/listenbrainz-server/pull/1986,closed,313,22,8,12,1,7,0,0,[],2022-05-10 23:15:02+00:00,2022-05-18 21:18:02+00:00,684180.0,"7 days, 22:03:00","[{'comment_id': 872497521, 'comment_body': ""If this method returns only one item the name probably shouldn't be plural:\r\n```suggestion\r\ndef get_user_timeline_event_by_id(id: int) -> UserTimelineEvent:\r\n```"", 'comment_created': datetime.datetime(2022, 5, 13, 15, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 872524207, 'comment_body': 'Not sure we want to show an alert toast, because the visual feedback  of the event being hidden should be enough', 'comment_created': datetime.datetime(2022, 5, 13, 15, 32, 28, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 872524962, 'comment_body': 'This could potentially be useful:\r\n```suggestion\r\n      newAlert(""danger"", error.toString(), <>Could not hide event</>);\r\n```', 'comment_created': datetime.datetime(2022, 5, 13, 15, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 872525652, 'comment_body': 'Same as above, probably no need for a toast notification', 'comment_created': datetime.datetime(2022, 5, 13, 15, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 872532017, 'comment_body': 'Great choice of id ðŸ¥‡ ', 'comment_created': datetime.datetime(2022, 5, 13, 15, 38, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 873550499, 'comment_body': 'Inversely to my original comment, the docline says ""Retrieves all eventsâ€¦"" so here the  plural name `get_hidden_timeline_events` was appropriate', 'comment_created': datetime.datetime(2022, 5, 16, 10, 7, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 876090326, 'comment_body': 'Pluralizing makes sense, thanks for catching it! :D', 'comment_created': datetime.datetime(2022, 5, 18, 16, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}]","[{'commit_sha': '0d4070a5520b03c9df27fd0a5124dd8d6acaa553', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e71708be2ff8714a719516aeb00e131be0d58de9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4c2e1741a11702ecdfaf4c8b191c8ef3733f759', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc615fbf963043e8d5c318f5b5f65d3f16927b01', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98363b0a33ecf425e14ef34b39d5185b328f8f81', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c146b63ecd005f8674993c5005233d47912015b', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cc3a7d330b04b184559d08cf5a9a4e5dd8e6af9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7bbb28ede87af4d358ee2deb413ebe85bf48637', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d4298f5f929148033107812ce94b88ad0519658', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '045a625482e6d2fc12db9a97434dfa3de55b82b5', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f89b732708bf65e10d364ea2d214bee9a21bad6', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9953159be09cebf2698b2a86097c63f9fd3bf59c', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}]","Shatabarto ""Rik"" Bhattacharya",11733600,rik61072@gmail.com,User,,31,,13,61
933848770,Removing extra Z from missing MB data API and view,"<!--
    Hello! Thanks for submitting a pull request to ListenBrainz. We appreciate
    your time and interest in helping our project!

    Use this template to help us review your change. Not everything is required,
    depending on your change. Keep or delete what is relevant for your change.
    Remember that it helps us review if you give more helpful info for us to
    understand your change.

    Ensure that you've read through and followed the Contributing Guidelines, in
    ./github/CONTRIBUTING.md.
-->

# Problem
Earlier we had manually add `Z` at the end of timestamps to denote UTC timezone. Now spark adds the Z and hence this causes double Z
![image](https://user-images.githubusercontent.com/11733600/167888140-18c42d4a-d21f-467b-9502-549c70d89309.png)
![image](https://user-images.githubusercontent.com/11733600/167888196-01d0a75f-079a-4066-a8c0-79b01568738c.png)

<!--
    What problem are you trying to fix? What does this change address? Please try to
    think of people who do not have the context you have on the problem.

    Mention and link a JIRA ticket if there is one that's relevant.
-->



# Solution
Removed the Z from API, view and tests
<!--
    The details of your change. Talk about technical details, considerations, or
    other interesting points. If you have a lot to say, be more detailed in this
    section.
-->



",True,1987,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1987,https://github.com/metabrainz/listenbrainz-server/pull/1987,closed,0,21,3,1,0,0,0,0,[],2022-05-11 15:28:06+00:00,2022-05-12 10:14:24+00:00,67578.0,18:46:18,[],"[{'commit_sha': '41fecbe0f3f8a770fabe0befa46ea65a2cc2362a', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}]","Shatabarto ""Rik"" Bhattacharya",11733600,rik61072@gmail.com,User,,31,,13,61
777984144,Missing MusicBrainz Data Page,"
# Problem
Displaying all the missing MusicBrainz data that spark has found till now, and adding an option to make users submit those data in MusicBrainz


# Solution
Made a public URL for each user where you can see each user's missing data and submit them. Also I have altered `ListenCard` quite a bit and need @MonkeyDo's opinion on it, since he is the one working on the whole `ListenCard` component revamp.

# Action
Need opinions on these things
- Spark outputs timestamp as `""2021-11-09 21:53:13""`. This is not any particular standard from what I know of. I have added a Z at the end to show that it is GMT, hence `""2021-11-09 21:53:13Z""`. But since this is not a standard thing, it may break things in older browsers. (Its generally advised that Date object should not parse the timestamp string unless it's a certain popular ISO Standard)
- Double click won't add the data, the user has to click the plus, I took this decision as an UX point of view, since in listen card, double click will mean play, but might not necessarily mean the same here in this case, since adding data is more effortful than listening.
- Don't have any tests for the link that serves the template , as the test will be merely a `self.assert200(response)` test. But I won't mind writing it.

",True,1726,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/1726,https://github.com/metabrainz/listenbrainz-server/pull/1726,closed,1070,18,16,28,11,32,0,1,[],2021-11-10 20:33:18+00:00,2021-12-21 20:00:22+00:00,3540424.0,"40 days, 23:27:04","[{'comment_id': 747595863, 'comment_body': ""Here's a proposition for another way to do this:\r\n\r\nAs you mentioned, I recently did a lot of refactoring of the ListenCard to use it everywhere, and found myself needing to be able to extend the functionality.\r\nInstead of implementing each functionality directly in ListenCard (which would become very messy) I opted for passing some menu options as props (`additionalMenuItems`) to the ListenCard component, for any non-generic functionality.\r\n\r\nYou'll be able to move the `submitMissingData` method to the MissingMBData component and pass a menu item as prop to the ListenCard components.\r\nYou can see an example of this here: https://github.com/metabrainz/listenbrainz-server/blob/43d4c9df9cbeef480670065204859292961f70f7/listenbrainz/webserver/static/js/src/playlists/PlaylistItemCard.tsx#L64-L87\r\n\r\nYou'll probably need to bing the method like this `action={this.submitMissingData.bind(this, data)}` to ensure calling submitMissingData with the correct piece of data.\r\nSimilarly as what you did with the button, you can pass `icon={faPlus}` and the title as well."", 'comment_created': datetime.datetime(2021, 11, 11, 15, 27, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 747597440, 'comment_body': ""This is a potentially useful feature, but I have 2 comments:\r\n1. You also need to check disablePlay on line 276 (`onDoubleClick={this.playListen}`)\r\n2. Why don't we want this page to be playable?"", 'comment_created': datetime.datetime(2021, 11, 11, 15, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 747600385, 'comment_body': 'This seems to me like a very odd way to go about this.\r\n\r\nAll this should be achievable with the `fetch` API ([docs here](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)), which will take a javascript object as input (`{name: listen.track_metadata.release_name || """", â€¦}`) \r\n\r\nThere\'s a decent example code with `method: \'POST\'` you can use as a base in that page (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options)', 'comment_created': datetime.datetime(2021, 11, 11, 15, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 747602554, 'comment_body': ""As explained in more detail below, we won't need this prop."", 'comment_created': datetime.datetime(2021, 11, 11, 15, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 747703856, 'comment_body': ""hey, so I wanted to discuss this too, since it indeed is a very odd way to do this, but I assure you, I did try fetch before opting for this obscure method\r\n\r\nI had made myself an HTML form that would populate the musicbrainz form, my purpose was to submit it, record the submission in my browser, and copy it as a fetch request so I could use it in my code. But that didn't seem to work out (never redirected). I even tried to manually write the fetch but it **never redirected**. I played around with the redirect field of the object passed to the fetch, and it still didn't work.\r\n\r\nI will look into it more, and update you on this. Thank you so much!"", 'comment_created': datetime.datetime(2021, 11, 11, 17, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 747746532, 'comment_body': 'I recant myself!\r\nAs we discussed on IRC, and after a bit of research, this is actually the right method to achieve the result we are looking for.\r\n\r\nThe HTML content returned with the request response cannot be opened by the browser when using the fetch API. Booo !\r\n\r\nCreating a hidden form and submitting it programmatically is an elegant solution in comparison to pretty much all the other options I thought of, and also less risky (this default browser function works with CORS, cookies, redirects, etc. ; not sure whatever hacky workaround we come up with willâ€¦).\r\n\r\n\r\nI would just suggest to add a `redirect_uri` (as per [the docs](https://musicbrainz.org/doc/Development/Release_Editor_Seeding), bottom of the page) to redirect to LB on successful MB form submission.\r\nI guess `redirect_uri = window.location.href` ?\r\n\r\nAnd also to add an `edit_note` textarea element, something along the lines of  ""Seeded by the ListenBrainz missing data page: ${window.location.href}""', 'comment_created': datetime.datetime(2021, 11, 11, 19, 1, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 747761955, 'comment_body': 'Ah, maybe instead of using redirect_uri you can set the form element\'s target property to ""_blank"" , that should open it in a new tab. Haven\'t tried that myself so take with a pinch of salt :)\r\n', 'comment_created': datetime.datetime(2021, 11, 11, 19, 27, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 748338966, 'comment_body': ""I also think we should add a comment at the top to explain why we're doing it this way.\r\nMaybe something along the lines of `The POST request returns an html page, which we can't do anything with in fetch. Instead we need to use a native html form, which once submitted will redirect to the MusicBrainz page appropriately.`?"", 'comment_created': datetime.datetime(2021, 11, 12, 14, 40, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 748910507, 'comment_body': ""Hi, sorry for replying late, I hadn't opened GitHub in the weekend. But I hear you, and I will implement it accordingly. \r\n\r\n>it programmatically is an elegant solution in comparison to pretty much all the other options I thought of, and also less risky\r\n\r\nikr! And I tried to think of potential alternatives, and one idea struck me, that was to create modal and then putting an iframe in there. But I realised that the serious music submitters will go back and forth into checking the MB database so they would need the back and front button of the browser, so the redirection using form seems like the best method till now. Which is why I didn't raise this idea in IRC.\r\n\r\n\r\nYou are also right about adding a comment to describe the reasoning behind the weird solution.\r\n\r\nI will also try the `_blank` solution and let you know if it works or not.\r\n\r\n> Add an `edit_note` textarea element     \r\n\r\nThat sounds quite neat, because suppose the user knows that some data is wrong, the person can just fill the form from scratch. (Seems like that was your intention). So I will add that. Thank you so much @MonkeyDo . Once again, really sorry for the late reply :D"", 'comment_created': datetime.datetime(2021, 11, 14, 21, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 749233572, 'comment_body': ""To be clear, the `edit_note` I was thinking of would just be added to the form to identify that the data was auto-filled by ListenBrainz, the same way other auto-importers do it* and wouldn't be shown to the user on LB.\r\nThey can always add to it in the MB form if they wish.\r\n\r\n* See for example this edit note: https://musicbrainz.org/edit/84600395#note-84600395-1"", 'comment_created': datetime.datetime(2021, 11, 15, 11, 25, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 752411239, 'comment_body': ""Ah that's helpful, this makes it seem more legitimate. I am gonna add this. Thanks! "", 'comment_created': datetime.datetime(2021, 11, 18, 16, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 753092067, 'comment_body': 'I this this is a good stab at solving it. Having the possibility to have additional icons/buttons/items here makes sense and could be useful in other cases.\r\n\r\nWe can make it even more generic to allow for more flexibility: what if I want just a bit of text, or a logo, orâ€¦ here instead of a button?\r\n\r\nWhat we can do is accept a JSX element without assuming any specific structure, the same way we do above (line 309) with `{additionalMenuItems}`: we just render it as-is.\r\nI would suggest to follow the same naming convention with something like `additionalActions` instead of customIcon.\r\nThe prop would be `additionalActions?: JSX.Element;`.\r\n\r\nHere on line 327 you would simply have `{additionalActions}`. Since the prop is optional, React know not to render anything if it is `undefined`.\r\n\r\n\r\nWith that set up, you\'ll be able to create a ListenCard with arbitrary content defined in another component.\r\nSo in MissingMBData.tsx, you\'ll have something like this:\r\n```\r\n{missingData.map((data) => {\r\n\tconst addToMBAction = (<button\r\n\t\t\ttitle=""Add to MusicBrainz""\r\n\t\t\tclassName=""btn-transparent""\r\n\t\t\tonClick={this.submitMissingData.bind(this,data)}\r\n\t\t\ttype=""button""\r\n\t\t>\r\n\t\t\t<FontAwesomeIcon size=""2x"" icon={faPlus} />\r\n\t\t</button>);\r\n\t\t\r\n\treturn (<ListenCard\r\n\t\t[...listencard props here]\r\n\t\tadditionalActions={addToMBAction}\r\n\t/>);\r\n})\r\n```\r\n\r\nNote the `this.submitMissingData.bind(this, data)`; not sure if you are familiar with that [weird JS syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#syntax); it basically says ""when you call that function, call it with these arguments: first one is the `this` context in the function, following ones are arguments passed to the function.\r\nIn this case, that\'s equivalent to `onClick={()=>{this.submitMissingData(data)}}`', 'comment_created': datetime.datetime(2021, 11, 19, 10, 56, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 753092838, 'comment_body': ""With the method suggested above we won't need this anymore.\r\nI appreciate the effort to make it clean and tidy, by the way!\r\nIn this specific case I think having more flexibility is desirable."", 'comment_created': datetime.datetime(2021, 11, 19, 10, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 753093186, 'comment_body': 'Awesome, thanks :)', 'comment_created': datetime.datetime(2021, 11, 19, 10, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 753095004, 'comment_body': ""Since you are using a css class here, it's preferable to define styles for that class in  CSS (.less files) instead of inlined, which becomes hard to maintain pretty quickly.\r\n\r\nIs this parent element needed by the way? The ListenCard should take up 100% of the parent's width."", 'comment_created': datetime.datetime(2021, 11, 19, 11, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757457592, 'comment_body': ""This code is duplicated below when passing listens to BrainzPlayer.\r\nLet's make sure we only do this once, both so that modifications only need to be done in one place and also to use less resources.\r\n\r\nYou can create an array of `missingDataAsListens` on line 168 right before `return (â€¦`,\r\nand then:\r\n1. Since the two arrays have the same elements you can directly refer to that array here: `missingData.map((data, index) => { const listen = missingDataAsListens[index];` \r\n2. You can pass it directly to BrainzPlayer: `<BrainzPlayer listens={missingDataAsListens} â€¦`"", 'comment_created': datetime.datetime(2021, 11, 26, 12, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757458818, 'comment_body': ""Since you opened this PR, we've removed the `direction` prop from BrainzPlayer.\r\nIf you merge the master branch in yours, you'll probably see a warning about this prop, and need to remove it."", 'comment_created': datetime.datetime(2021, 11, 26, 12, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757462333, 'comment_body': ""This doesn't look quite right, and we haven't had to do this anywhere else that I can remember.\r\nSo at first glance the issue is that the listened_at string sent by the back-end is in the wrong format, and should be fixed there rather than hacking around it in the front-end which is more brittle."", 'comment_created': datetime.datetime(2021, 11, 26, 12, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757624091, 'comment_body': '```suggestion\r\n                        title=""Add to MusicBrainz""\r\n```', 'comment_created': datetime.datetime(2021, 11, 26, 16, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757624724, 'comment_body': '```suggestion\r\n                      <ListenControl\r\n                        class=""btn btn-sm btn-success""\r\n```\r\n\r\nWill make it look like this. I mainly wanted to make it very clear where the user has to click. What do you think?\r\n![image](https://user-images.githubusercontent.com/6179856/143611916-945df26c-555f-45ac-8294-4056ae65b900.png)\r\n', 'comment_created': datetime.datetime(2021, 11, 26, 16, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757625763, 'comment_body': ""I think this should explain a little bit more what it's about, aiming for users who have come to LB but do not know or understand what MB is, or why they would need to send them anything.\r\nI don't have a clear suggestion at the moment, and my brain is failing me.\r\nPerhaps we can come up with a good description as a group on the IRC channel?"", 'comment_created': datetime.datetime(2021, 11, 26, 16, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757627282, 'comment_body': '```suggestion\r\n    <div id=""react-container""/>\r\n```\r\n\r\nI think these nested containers are superfluous, and we don\'t need that `well` class making the background grey.', 'comment_created': datetime.datetime(2021, 11, 26, 16, 57, 41, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757628250, 'comment_body': 'I think we can remove this containing div entirely and remove one layer of nesting.', 'comment_created': datetime.datetime(2021, 11, 26, 16, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 757683318, 'comment_body': 'That is a good idea', 'comment_created': datetime.datetime(2021, 11, 26, 20, 17, 32, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757683426, 'comment_body': 'Yes! Indeed looks better!', 'comment_created': datetime.datetime(2021, 11, 26, 20, 18, 1, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757684088, 'comment_body': 'Spark gives off timestamp as GMT. So I added a Z at the end to make the browser understand that. Or else it would automatically assume the timestamp to be of local time zone. I infact read up a bit and realised that Date constructor parsing non standard timestamp string should be kind of avoided for consistency reasons (across different browsers). So I think we should discuss this in IRC. ', 'comment_created': datetime.datetime(2021, 11, 26, 20, 21, 17, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757818276, 'comment_body': 'Ahh fair point, a very embarrassingly silly mistake from my side. Added the brainzplayer in later commits and somehow missed the duplication part :P.', 'comment_created': datetime.datetime(2021, 11, 27, 21, 6, 31, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757818282, 'comment_body': 'Will it be okay if this line is removed during the tackling of merge conflict? Since changing this rn here at my branch will cause trouble to test the page locally.', 'comment_created': datetime.datetime(2021, 11, 27, 21, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757818298, 'comment_body': 'Getting rid of the first div (that has row class), makes the footer glitch. The second div (that has well) makes the page non responsive, but I have removed the well class. Hope that works. Hence I have not removed any div.\r\n\r\n(If there are any other methods to get the same effect, while making the codebase better, please do let me know, since I am not as adept in frontend as my backend, so feel free to drop advice and to be pedantic, as it will help me get better.)', 'comment_created': datetime.datetime(2021, 11, 27, 21, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757818553, 'comment_body': 'Adds a string in white, by the plus, are you sure it would look good? I can put it in if you want.', 'comment_created': datetime.datetime(2021, 11, 27, 22, 4, 30, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 757818581, 'comment_body': '`btn btn-sm` makes the + non visible. Hence I put `btn-primary btn-success`, but there is a weird border around it', 'comment_created': datetime.datetime(2021, 11, 27, 22, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 773271139, 'comment_body': 'No, my mistake !', 'comment_created': datetime.datetime(2021, 12, 21, 16, 17, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'c520b014fad8c1db62f6ec9ec18db4ea565b0aaa', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22afaa19892f4b3fe36aa85ebffbb3a5b6518c7f', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34e9f569115644100be28028c632cad20bc0c0ff', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '132ae15a019ceac751cf398e45e42e7db9e350f9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dad491cb5e9da3d9a3806562b1aa7c1ada8405a9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26be16bdd32fbaec18d3586e69d4b1fdbd6fdde2', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83a155edb849b52ddbef7c51d86ba8b332379dc4', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f31a7d501a006051c0a4f1fe82fd180ef8cfa62c', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15fb1baa0d3dbba69e128824456dec3ecbff87dd', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ba8ce887bbef42743e6e819ceb311f83f1e63b', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a259f073ae737f7d28850411a9a2e0e812c81ba', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9997a66f62f4a0b41c75580fb8bc1588b7136d8', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd19659e6536a4caeb950e8cc4c0c13232fe0dee7', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a874c803bee0a0d3c01dc4e0f377befacbd539c0', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c181b60c360574ba773446272d7d1909d0994af9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe0fb1c082696f8a5799ca8c3f5e1f5de5307a1a', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '260e65ce6ac3c8c78fa7b2df55157cfa6ff3d260', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd94d0120e65dfce98c7c5680739874e0007fc128', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '251bef03779c958e601444cfd42f276ed3cba5cf', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7027963b1c1457cc0afd69112be35afbac5cff5', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67e57794b20395ac2bea05b233b8028f6459fc9a', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a182a627bb462fd25a2680c63f03ba238e678048', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '571d676080f54499d017ffcf9317ab67801549cd', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f469257d394e3790845f4530c4c4b24bfb552e1c', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a3af931d03da20812e8947cb6206709925fd506', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '177375309d18aeb9096ab7b8ba41d2f753425d05', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '727b2908d4bed04b60825871d9b1f28467111969', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b41ce4761093d1713e120fbf068f07440e6d106', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}]","Shatabarto ""Rik"" Bhattacharya",11733600,rik61072@gmail.com,User,,31,,13,61
989022355,Personal recommendation backend,"This PR implements the backend that is necessary to support sending personal recording recommendation to your followers.

The backend is implemented in the following manner:
- When personal recommendation is given by user A to user B
- First it is checked that if B is a follower of A or not
- If yes, then A's id is added to `user_id` column of `user_timeline_event` table, while the details of B and the song and text of the recommendation is stored in the metadata

_This PR will only implement the backend needed for personal recommendation. Implementation of hiding of personal recording recommendation will be implemented as separate PR_",True,2055,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/2055,https://github.com/metabrainz/listenbrainz-server/pull/2055,closed,459,9,8,22,2,16,0,0,[],2022-07-06 16:21:39+00:00,2022-08-10 09:40:22+00:00,2999923.0,"34 days, 17:18:43","[{'comment_id': 921849967, 'comment_body': 'Can inherit this from `RecordingRecommendationMetadata` instead of `BaseModel` and then add the new fields only.', 'comment_created': datetime.datetime(2022, 7, 15, 6, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 921851121, 'comment_body': 'We use APIListen for general recommendations so how about inherit this from APIListen and the new fields. See APIPinEvent for reference.', 'comment_created': datetime.datetime(2022, 7, 15, 6, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 921854732, 'comment_body': 'One possible issue is that the following relationship changes after the recommendation was made. In that case, this lookup will fail. My suggestion would be to join with the user table in the SQL query and return the username from there.\r\n\r\nAlso, would be nice to add a test case for this scenario.', 'comment_created': datetime.datetime(2022, 7, 15, 6, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 921874195, 'comment_body': ""Note that this case doesn't happen in general recommendations because there we show recommendations from whomever we are currently following."", 'comment_created': datetime.datetime(2022, 7, 15, 7, 3, 28, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 921878888, 'comment_body': ""I am unsure about this one. If we assign recommendee_id later on then it won't be validated. But if we do it for each user then the remaining fields are validated multiple times. That is a bit wasteful but unless we know its a noticeable slowdown, I suggest that we validate recommendee_id as well.\r\n\r\nTo be clear, validate each metadata first and throw a 400 if any validation error happens. After all are validated, then start inserting in database."", 'comment_created': datetime.datetime(2022, 7, 15, 7, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 928384301, 'comment_body': ""These tests look good we should probably also add 1 more where the user tries to recommend to a user they don't follow."", 'comment_created': datetime.datetime(2022, 7, 25, 3, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 928384847, 'comment_body': ""In this test, it would be nice to test that the personal recommendation is still after the user has unfollowed the user who recommended. Whether we want to show those or not, may be a choice but the aim of the test is to ensure that case doesn't crash the page."", 'comment_created': datetime.datetime(2022, 7, 25, 3, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 928407980, 'comment_body': ""I reformatted the query myself to make a bit easier to read. Hope you don't mind."", 'comment_created': datetime.datetime(2022, 7, 25, 3, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 928444174, 'comment_body': ""AFAIK, `(user_timeline_event.metadata ->> 'followers')::jsonb` should be equivalent to `user_timeline_event.metadata -> 'followers'`. Notice one less arrow. `->` keeps the output as jsonb whereas `->>` converts it to text. Since we want jsonb here anyway use the former and avoid the cast. Also, no need to cast user_id to jsonb, just casting to text is sufficient.\r\n\r\nSee https://stackoverflow.com/a/46206119 for reference."", 'comment_created': datetime.datetime(2022, 7, 25, 3, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 928449940, 'comment_body': ""There should be a is_following check here for all users, no? I'd suggest to create a new function db_follow which receives an array and checks that the users follows all of the other users. Also, the metadata will need to convert usernames  of the person to whom the track is recommended into user ids. \r\n\r\nWe want this so that external api users can easily use this api (they don't have access to listenbrainz user ids , at least not by our intention). Secondly, so that everything keeps working smoothly when a user renames themself."", 'comment_created': datetime.datetime(2022, 7, 25, 3, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 931963554, 'comment_body': 'Nit: followers is probably a better name.', 'comment_created': datetime.datetime(2022, 7, 28, 8, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 931970381, 'comment_body': 'Docstring missing.', 'comment_created': datetime.datetime(2022, 7, 28, 9, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 931971129, 'comment_body': ""can change to `SELECT 't'`"", 'comment_created': datetime.datetime(2022, 7, 28, 9, 5, 33, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 931976549, 'comment_body': 'We should probably call the key name in the api `users` instead of followers because we may want to change the follower restriction in future etc.', 'comment_created': datetime.datetime(2022, 7, 28, 9, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 931977279, 'comment_body': ""Probably also add that You cannot tracks to people who don't follow you."", 'comment_created': datetime.datetime(2022, 7, 28, 9, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 931978376, 'comment_body': 'We will always the user name available in the view so we can just use that and avoid this join.', 'comment_created': datetime.datetime(2022, 7, 28, 9, 12, 56, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}]","[{'commit_sha': '3d1e92285f4e7c13d2c2d073b47f3636cc3eabe0', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f95bffa59659b70dbd88dcee5baa0cb9eab3a0f4', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '553b150765e7435ae056320fde02379cafdc5f76', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44d7baa62146170045e9cc2cfa63db74b1150dde', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8f857ee8c8c44c1cf0026c9a2fdcc7da025d513', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f55abdeeda40a1203ebf0b2a5899f5700d68ff8a', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91b7df93224c9bd2f6771eb3bafe9a9afac94fa6', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f76488c731546699e4293633b03264b05960a2', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f56ea365766e063b7fd4151c799f66115803b470', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f10b16103da821685a1ad53a852a4b505a6ca6f4', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '034c27423bb833456d90eef3b155e837c78ffa55', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e131d174942120ef36b820b31b1a6dd82c930f49', 'committer_username': 'amCap1712', 'committer_name': 'Kartik Ohri', 'committer_email': 'kartikohri13@gmail.com', 'commit_date': datetime.datetime(2017, 4, 19, 2, 7, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2939361b4d3b3ad7710a75a7ea8f1ceb9996e7c2', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c676c6b9375f51c4b05ad3b70bd0cf57d99b678', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bae6bb65706bb2e9a7e8ff6615862af99ce499a5', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4008577c1e8f5115798e85d3c9bae74a9479822a', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbee82ac526c0ad2e11b812baab9d151b7f7324c', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98b044ba883e152a4e6d685995ce6dc36c368fd8', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39a3851c908f33d2729a6ad49b41df8b3fccea8d', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80cedeac3ca477949f14389db3f03b2cb65c35ac', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '435161d71c9c05fc5492f95b0b1f99e51f2ac33e', 'committer_username': 'amCap1712', 'committer_name': 'Kartik Ohri', 'committer_email': 'kartikohri13@gmail.com', 'commit_date': datetime.datetime(2017, 4, 19, 2, 7, 5, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9185901fcc54b43ce0ce1d74558c6508a6dd39d7', 'committer_username': 'amCap1712', 'committer_name': 'Kartik Ohri', 'committer_email': 'kartikohri13@gmail.com', 'commit_date': datetime.datetime(2017, 4, 19, 2, 7, 5, tzinfo=datetime.timezone.utc)}]","Shatabarto ""Rik"" Bhattacharya",11733600,rik61072@gmail.com,User,,31,,13,61
1039960662,Personal Recommendation Frontend,"<!--
    Hello! Thanks for submitting a pull request to ListenBrainz. We appreciate
    your time and interest in helping our project!

    Use this template to help us review your change. Not everything is required,
    depending on your change. Keep or delete what is relevant for your change.
    Remember that it helps us review if you give more helpful info for us to
    understand your change.

    Ensure that you've read through and followed the Contributing Guidelines, in
    ./github/CONTRIBUTING.md.
-->

# Problem
The backend for personal recommendation has already been merged, but to recommend, we need a frontend, this PR (draft PR for now) attempts to solve that.
<!--
    What problem are you trying to fix? What does this change address? Please try to
    think of people who do not have the context you have on the problem.

    Mention and link a JIRA ticket if there is one that's relevant.
-->



# Solution
Creating a modal and choosing followers to whom you want to recommend. UI/UX of this PR has been followed according to the [GSoC proposal](https://community.metabrainz.org/t/gsoc-2022-personal-recommendation-of-a-track/578905) for the same
<!--
    The details of your change. Talk about technical details, considerations, or
    other interesting points. If you have a lot to say, be more detailed in this
    section.
-->


",True,2131,https://api.github.com/repos/metabrainz/listenbrainz-server/pulls/2131,https://github.com/metabrainz/listenbrainz-server/pull/2131,closed,1153,6,21,35,20,40,0,0,[],2022-08-29 16:56:37+00:00,2022-11-09 16:12:38+00:00,6218161.0,"71 days, 23:16:01","[{'comment_id': 968314448, 'comment_body': ""Bit of a detail, but let's follow the naming convention used in other files: `personal-recommendation-modal.less`"", 'comment_created': datetime.datetime(2022, 9, 12, 11, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968511198, 'comment_body': ""Ah, this isn't quite the React way of doing things. You shouldn't be modifying the state directly.\r\nIs that why you have this exclamation point to shut typescript up? :p\r\n\r\nInstead, you want to set the state to a new value, in this case which includes the previous values. Here's how you do this succinctly with the [object spread syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax):\r\n\r\n```suggestion\r\n    this.setState({ users: uniq([â€¦users, user]), suggestions: [] });\r\n```\r\nThe `â€¦users` will fill all the values from the users array into our new arry, and we also add the new `user` string."", 'comment_created': datetime.datetime(2022, 9, 12, 14, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968514050, 'comment_body': 'I wonder if you could get away with having only the `closeAction` prop, and using its presence or absence to determine whether you should render the icon.\r\n\r\nperhaps even using the `isFunction` utility from lodash:\r\n\r\n```suggestion\r\n        {isFunction(closeAction) && (\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 14, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968517451, 'comment_body': 'Similarly to the comment above, we want to avoid mutating the state directly.\r\nWe can use the native filter method to return a new array that excludes certain values\r\n```suggestion\r\n    this.setState({ users: users.filter((element) => element !== user) });\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 14, 49, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968529538, 'comment_body': ""This isn't quite how you should be using the filter method.\r\nFrom the docs:\r\n> The filter() method creates a shallow copy of a portion of a given array, filtered down to just the elements from the given array *that pass the test implemented by the provided function*.\r\n\r\nSo in short your filter method should return a boolean true or false. Any element that passes the test will be in the new returned array.\r\n\r\nI assume this is what you wanted to implement:\r\n```suggestion\r\n    if (event?.target?.value) {\r\n      const suggestions = followers.filter(username => includes(username, event.target.value));\r\n      this.setState({ suggestions });\r\n    } else {\r\n      this.setState({ suggestions: [] });\r\n    }\r\n```"", 'comment_created': datetime.datetime(2022, 9, 12, 14, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968537220, 'comment_body': 'I wonder about the phrasing here, it sounds a bit off.\r\nPerhaps it would make more sense to say something like `You recommended this track to ${users.length} user${users.length >1 ? \'s\' : \'\'}`\r\n\r\nSimilarly in the error I would just say ""Error while recommending a track""\r\n\r\nWhat do you think?', 'comment_created': datetime.datetime(2022, 9, 12, 15, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968538262, 'comment_body': 'These can be grouped like so:\r\n\r\n```suggestion\r\n    const { track_name, artist_name } = recordingToPersonallyRecommend.track_metadata;\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 15, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968543398, 'comment_body': ""It's best no to have anonymous functions defined in the render method, because they will get re-created on every re-render (in theory that's not optimal).\r\n\r\nWhat you want is to have a method defined on the class such as `onCloseModal` that will call setState.\r\nYou will also want to refactor the code to get followers that you have in `componentDidMount` into its own method `getFollowers`, so that you can call it from componentDidMount and from onCloseModal without having duplicate code.\r\n\r\nP.S: why do we need to update the followers list when we close the modal? These two things don't seem like they should be related"", 'comment_created': datetime.datetime(2022, 9, 12, 15, 11, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968550115, 'comment_body': 'Why the need for the `!`?\r\nThat\'s usually a ""bad smell"" (as programmers call it) and point to the type not being well defined.\r\n\r\nI see in `PersonalRecommendationModalState` the arrays are also described as being potentially `null`, but looking at the code they will never be so and should simply be an array.\r\nFor example in the constructor you explicitly set them as an empty array, and in all your setState calls you are careful and always set them to arrays too.\r\nThat way the need for the `!` will go away.', 'comment_created': datetime.datetime(2022, 9, 12, 15, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968551807, 'comment_body': 'I think this is left over from previous wording\r\n```suggestion\r\n                (Optional)\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 15, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968552904, 'comment_body': 'Y u no specllheck?\r\n\r\n:p \r\nJokes aside, what is the rationale for disabling this?', 'comment_created': datetime.datetime(2022, 9, 12, 15, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968554820, 'comment_body': ""Since you already have a .less file defined for this component, I'd like to see all the `style={â€¦` in this file moved to LESS definitions instead. It's much easier to keep things up to date when the style are defined in only one place."", 'comment_created': datetime.datetime(2022, 9, 12, 15, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968557457, 'comment_body': ""Same comment as on the other file, I don't think the prop can be `null` so this should be:\r\n```suggestion\r\n  suggestions?: Array<string>;\r\n```\r\n\r\nThe `?` already marks it as optional, which translates to `Array<string> | undefined`.\r\n\r\n\r\nWith that change, the `!` on line 14 should be removed."", 'comment_created': datetime.datetime(2022, 9, 12, 15, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968564926, 'comment_body': 'These should probably be:\r\nI assume blurb content could be an empty string rather than null, and same for an empty users array\r\n```suggestion\r\n  blurb_content: string;\r\n  users: Array<string>;\r\n```', 'comment_created': datetime.datetime(2022, 9, 12, 15, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968565739, 'comment_body': ""Another `!` I'd like to see removed ;)"", 'comment_created': datetime.datetime(2022, 9, 12, 15, 30, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968567346, 'comment_body': ""I'd like to see another test to ensure the button is not rendered if `closeButton` is false  (or according to my suggestion above if `closeAction`  is not a Function)"", 'comment_created': datetime.datetime(2022, 9, 12, 15, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968570954, 'comment_body': ""Flagging this, but I don't have a direct suggestion:\r\nwe're moving away from using MSIDs as our primary ids for anything, so this feature should be based first on the `recordingMBID`  and only if not available should it be the `recordingMSID`.\r\nSimilarly in the API call on the back end we should use MBID first with an optional fallback to MSID"", 'comment_created': datetime.datetime(2022, 9, 12, 15, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 968575102, 'comment_body': 'Please remove the `!`  once the type has been corrected.', 'comment_created': datetime.datetime(2022, 9, 12, 15, 39, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 973956984, 'comment_body': 'Hi, sorry for the late reply as I was busy conducting Software Freedom Day event :)\r\n\r\nI disabled spellcheck because other modals have it disabled (Pin Recording Modal and CB Review Modal)\r\nI did think if it\'s needed or not, but then I realized that I often use ""Hinglish"" (Hindi but with latin script) which might come off as wrong in the textbox.', 'comment_created': datetime.datetime(2022, 9, 19, 7, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 973963526, 'comment_body': 'I see, this is interesting, I will make changes to the backend and frontend. But I have a question\r\nAll the mbid fields in local machine are usually empty. If we do move, development will get hard. I believe we should work on some mechanism to generate dummy MB for development purposes. What do you say?', 'comment_created': datetime.datetime(2022, 9, 19, 8, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 973999859, 'comment_body': ""Makes sense, thanks\r\n\r\n> P.S: why do we need to update the followers list when we close the modal? These two things don't seem like they should be related\r\n\r\nI did it mostly for the UX\r\nfor example, when someone sends you an email, you would refresh until you get the email. Similarly, suppose you are recommending someone, and you wrote a huge recommendation, only to realise that someone doesn't follow you, and you make ask that person to follow you. But sadly you would have to reload the whole page to have an updated list."", 'comment_created': datetime.datetime(2022, 9, 19, 8, 45, 5, tzinfo=datetime.timezone.utc), 'commenter': 'hrik2001', 'type': 'User'}, {'comment_id': 975498625, 'comment_body': ""I think that's not a bad idea, but maybe not the right design for that.\r\nWithout a clear indication I wouldn't suspect that the list would refresh automatically.\r\nMaybe a well-placed refresh button might be helpful for that? I wonder how much use it will get, but at the same time if it just calls a function that is already implemented it doesn't cost anything to add it."", 'comment_created': datetime.datetime(2022, 9, 20, 15, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 975502051, 'comment_body': ""Hm, interesting . Didn't realize that was the case on the pin modal.\r\nI tentatively think we shouldn't disable it (for either modal, but let's focus on this one for this PR).\r\nIf we're struggling to find a rationale for disabling it it's probably best to keep browser defaults that users would expect."", 'comment_created': datetime.datetime(2022, 9, 20, 15, 14, 18, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 975579765, 'comment_body': 'For posterity: there was some discussion on IRC about this, lucifer suggested using an existing script to populate the local DB with an album from MusicBrainz: https://listenbrainz.readthedocs.io/en/latest/developers/commands.html#develop-sh-manage-submit-release', 'comment_created': datetime.datetime(2022, 9, 20, 16, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 996899821, 'comment_body': ""Is there a changed required here? I have no visibility on how the whole MBID vs MSID thing is implemented on the back-end so you'll have to tell me :)\r\nOr do we want to change both front-end and back-end at the same time in a separate PR?"", 'comment_created': datetime.datetime(2022, 10, 17, 10, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 996907296, 'comment_body': 'Since https://github.com/metabrainz/listenbrainz-server/pull/2153, recommendations support both MBID and MSID. Either one of the two is sufficient.', 'comment_created': datetime.datetime(2022, 10, 17, 10, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 996909209, 'comment_body': 'Thanks Captain @amCap1712 !\r\nSo no change needed then?', 'comment_created': datetime.datetime(2022, 10, 17, 10, 49, 14, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 996912729, 'comment_body': 'IIUC, a change is needed to allow for the case when there is only mbid present. Instead of `Boolean(getRecordingMSID(listen))`, something like \r\n`Boolean(getRecordingMSID(listen)) ||Boolean(getRecordingMBID(listen))` I guess?', 'comment_created': datetime.datetime(2022, 10, 17, 10, 52, 35, tzinfo=datetime.timezone.utc), 'commenter': 'amCap1712', 'type': 'User'}, {'comment_id': 997054536, 'comment_body': 'Making this smaller and gray text, as well as adding a missing space:\r\n```suggestion\r\n                <small> (Optional)</small>\r\n```\r\nThis also requires changing some css used for the character count: currently the rule is applied to all `<small>` elements (`#PersonalRecommendationModal small`), so we probably want to add a className `character-count` (for example) to the corresponding element and target that instead (`#PersonalRecommendationModal .character-count`\r\n\r\nBefore \r\n![image](https://user-images.githubusercontent.com/6179856/196186981-d7304e0a-e8dc-4667-990c-cb4bf62c843f.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/6179856/196187322-be3ce1ca-726c-4171-b838-ea16771d5985.png)\r\n', 'comment_created': datetime.datetime(2022, 10, 17, 13, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997058381, 'comment_body': 'I think what would be great here would be to use the recording name instead.\r\nMaybe something like `Recommend <b>${track_name}</b> to a friend`, what do you think ?\r\n\r\n![image](https://user-images.githubusercontent.com/6179856/196189205-870f243f-bf78-4ce0-b845-36909d2023e2.png)\r\n', 'comment_created': datetime.datetime(2022, 10, 17, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997065882, 'comment_body': ""I wonder what this should look like if the user doesn't have any followers to recommend to.\r\nI think maybe instead of the modal body below we can return a bit of text explaining that in order to recommend directly to another user they need to follow you, that you can follow people by clicking next to their username on their listens page, and finally that closing and reopening this popup window will refresh the list."", 'comment_created': datetime.datetime(2022, 10, 17, 13, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997069461, 'comment_body': 'I\'m on the fence with the wording (both here and on the listencard dropdown menu item).\r\nWhat do you think of ""Send to a friend"" or ""Send to a follower""?\r\nOr if we want to stay with ""recommend"", ""Recommend to a follower""?\r\n\r\nYou could ask around on the IRC channel, perhaps someone else has a good idea.', 'comment_created': datetime.datetime(2022, 10, 17, 13, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997078370, 'comment_body': '~~In the same discussion about phrasing, how about ""UserX recommended you a track"" or ""UserX sent you a track"" ?~~\r\nNow that I saw the other end of it (i.e. on my own feed), I see that wouldn\'t work (""You recommended you a track"").\r\nBack to the drawing board for that oneâ€¦\r\n', 'comment_created': datetime.datetime(2022, 10, 17, 13, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997083766, 'comment_body': '```suggestion\r\n          Sent to: {eventMetadata.users.map((userName) => {\r\n```', 'comment_created': datetime.datetime(2022, 10, 17, 13, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997084049, 'comment_body': 'Can we put this in the less file instead?', 'comment_created': datetime.datetime(2022, 10, 17, 13, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997085832, 'comment_body': ""Here you can add another expectation:\r\n`expect(mockAction).toHaveBeenCalledWith(expected arguments)`\r\njust to make sure it's called with the right arguments"", 'comment_created': datetime.datetime(2022, 10, 17, 13, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 997089709, 'comment_body': 'The ""belt and braces"" approach here is to first ensure that the state is indeed what you expect as a ""normal"" condition before you take an action.\r\nIn this case, it means adding `expect(wrapper.state(""blurbContent"")).toEqual(""hii"");` right after your setState call.\r\n\r\n', 'comment_created': datetime.datetime(2022, 10, 17, 13, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1006790483, 'comment_body': '@hrik2001 We still need the change that lucifer suggested above.\r\nYou can use `Boolean(recordingMBID)` since we already use that for `isListenReviewable`', 'comment_created': datetime.datetime(2022, 10, 27, 12, 11, 39, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1006831274, 'comment_body': 'Bump :)', 'comment_created': datetime.datetime(2022, 10, 27, 12, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}, {'comment_id': 1013236734, 'comment_body': ""Missed this one on the previous passes :)\r\nI'm guessing this should be\r\n```suggestion\r\n  .character-count {\r\n```"", 'comment_created': datetime.datetime(2022, 11, 3, 17, 53, 38, tzinfo=datetime.timezone.utc), 'commenter': 'MonkeyDo', 'type': 'User'}]","[{'commit_sha': 'bb7797a3d3c1ff4b14ca121ad5a82515f0f2d945', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ad7cad1a77ea87eb2481ea7cf0e31bc861ea95d', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7228055463bc67fb1e5feee6c364760486c1c7a3', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe87d9bf429fc0f9173d587def1bd9284f917417', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dd8db72c20424ecefcbcd9f028092e2ffd64bae', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c600412c20176475e560050792aaa29af48ad3e8', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7abb71fb3866364953013c63373f053cfa2ed1d', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20bf554dc805c6f341225d56f9ec5e6a1d4c1356', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '629c4ff31396088560ba0eeec64c63e83497a608', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '103f693862a39a6a9f09eeffcfaab0eca1a1e4f9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8582422f34f3aef89706ede77cd94685c1b3c540', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '294601cf460afa66c2733b06db63f997695087dc', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '379a8b08c2c994bf4d9d9f83300f12b550584401', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd669880748e686039772cdefcfe5cd78a28eec6a', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca791608e0fae6d6baa226e369aee2025302b8d0', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b446aea6211f9e377a0a3ac7924da4e5f170e9', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3dfb3411c64464fa4c19a1712ed1ae7066f5923', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b229577eae0ccee202b9666a23baf4c130fb3911', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '076f12b897f93692c04d22db95ab40d244290605', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96f7ba64891f08b7fcbcdb80ad0d0134a8723309', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd60b975b130d7aab8622f65989d30a3b59e3b657', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98c002b3ac81f5a673e66b49546f10d28ee8ee22', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8da1580ba51fc61304ab80f9fddaab29623de8a1', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16e4f26d28ebe6f71b46eb4dc79f373a76ef528f', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67d20121adec94064aa30037d46f2ee98b2e3b8', 'committer_username': 'MonkeyDo', 'committer_name': 'Monkey Do', 'committer_email': None, 'commit_date': datetime.datetime(2013, 12, 13, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d269ed5a78837c13d4620eba506932c7756abf', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a163fc92b15a5a70715c0eb08b54b9dffe17edc', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26bc03d7bf9224f178a34bdf17b58df1a7422f36', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a59c589147a7068851750e424efd923b7e942bf', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16bdd252410679885ed70a883d68fd9cc1f94871', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8eb9dbd0ea73c7c1b0fe1671751b401a639786', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0deebe69b6fd8d2b0974f288ec7344704aaf6bf', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f68be9c5f97078d24156f43864f8680b449a0089', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fb26e0bf420091796862af43aa5d9234fd67498', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c504ac8f213197ffcdd46fe07971fd24cd5329c', 'committer_username': 'hrik2001', 'committer_name': 'Shatabarto ""Rik"" Bhattacharya', 'committer_email': 'rik61072@gmail.com', 'commit_date': datetime.datetime(2015, 3, 31, 7, 56, 36, tzinfo=datetime.timezone.utc)}]","Shatabarto ""Rik"" Bhattacharya",11733600,rik61072@gmail.com,User,,31,,13,61

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
41960013,listenbrainz-server,metabrainz/listenbrainz-server,Python,208,669,33,120,11859,14,82,14,"[{'id': 1039960662, 'number': 2131, 'closed': datetime.datetime(2022, 11, 9, 16, 12, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 16, 56, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6218161.0, 'time_delta': '71 days, 23:16:01', 'additions': 1153, 'deletions': 6, 'state': 'closed'}, {'id': 989022355, 'number': 2055, 'closed': datetime.datetime(2022, 8, 10, 9, 40, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 16, 21, 39, tzinfo=datetime.timezone.utc), 'time_taken': 2999923.0, 'time_delta': '34 days, 17:18:43', 'additions': 459, 'deletions': 9, 'state': 'closed'}, {'id': 933848770, 'number': 1987, 'closed': datetime.datetime(2022, 5, 12, 10, 14, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 11, 15, 28, 6, tzinfo=datetime.timezone.utc), 'time_taken': 67578.0, 'time_delta': '18:46:18', 'additions': 0, 'deletions': 21, 'state': 'closed'}, {'id': 932971882, 'number': 1986, 'closed': datetime.datetime(2022, 5, 18, 21, 18, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 10, 23, 15, 2, tzinfo=datetime.timezone.utc), 'time_taken': 684180.0, 'time_delta': '7 days, 22:03:00', 'additions': 313, 'deletions': 22, 'state': 'closed'}, {'id': 900030115, 'number': 1942, 'closed': datetime.datetime(2022, 5, 15, 16, 26, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 5, 10, 26, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3477600.0, 'time_delta': '40 days, 6:00:00', 'additions': 709, 'deletions': 5, 'state': 'closed'}, {'id': 855923453, 'number': 1870, 'closed': datetime.datetime(2022, 3, 7, 19, 57, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 17, 20, 40, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1552663.0, 'time_delta': '17 days, 23:17:43', 'additions': 376, 'deletions': 463, 'state': 'closed'}, {'id': 847358432, 'number': 1854, 'closed': datetime.datetime(2022, 2, 17, 13, 16, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 10, 30, 9, tzinfo=datetime.timezone.utc), 'time_taken': 528379.0, 'time_delta': '6 days, 2:46:19', 'additions': 24, 'deletions': 5, 'state': 'closed'}, {'id': 815458208, 'number': 1809, 'closed': datetime.datetime(2022, 1, 20, 7, 40, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 6, 11, 48, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1194742.0, 'time_delta': '13 days, 19:52:22', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 814865746, 'number': 1808, 'closed': datetime.datetime(2022, 1, 12, 17, 35, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 5, 16, 35, 42, tzinfo=datetime.timezone.utc), 'time_taken': 608407.0, 'time_delta': '7 days, 1:00:07', 'additions': 32, 'deletions': 4, 'state': 'closed'}, {'id': 811188508, 'number': 1803, 'closed': datetime.datetime(2022, 2, 4, 16, 16, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 28, 23, 27, 28, tzinfo=datetime.timezone.utc), 'time_taken': 3257316.0, 'time_delta': '37 days, 16:48:36', 'additions': 185, 'deletions': 1, 'state': 'closed'}, {'id': 777984144, 'number': 1726, 'closed': datetime.datetime(2021, 12, 21, 20, 0, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 20, 33, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3540424.0, 'time_delta': '40 days, 23:27:04', 'additions': 1070, 'deletions': 18, 'state': 'closed'}, {'id': 731026522, 'number': 1610, 'closed': datetime.datetime(2021, 9, 29, 19, 53, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 23, 7, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1716361.0, 'time_delta': '19 days, 20:46:01', 'additions': 286, 'deletions': 0, 'state': 'closed'}, {'id': 728146936, 'number': 1606, 'closed': datetime.datetime(2021, 9, 10, 8, 43, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 6, 19, 21, 40, tzinfo=datetime.timezone.utc), 'time_taken': 307336.0, 'time_delta': '3 days, 13:22:16', 'additions': 74, 'deletions': 0, 'state': 'closed'}]"
