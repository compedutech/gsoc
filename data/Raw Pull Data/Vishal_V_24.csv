pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
719800838,Bump tensorflow from 2.3.1 to 2.5.1 in /finegan,"Bumps [tensorflow](https://github.com/tensorflow/tensorflow) from 2.3.1 to 2.5.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/tensorflow/tensorflow/releases"">tensorflow's releases</a>.</em></p>
<blockquote>
<h2>TensorFlow 2.5.1</h2>
<h1>Release 2.5.1</h1>
<p>This release introduces several vulnerability fixes:</p>
<ul>
<li>Fixes a heap out of bounds access in sparse reduction operations (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37635"">CVE-2021-37635</a>)</li>
<li>Fixes a floating point exception in <code>SparseDenseCwiseDiv</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37636"">CVE-2021-37636</a>)</li>
<li>Fixes a null pointer dereference in <code>CompressElement</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37637"">CVE-2021-37637</a>)</li>
<li>Fixes a null pointer dereference in <code>RaggedTensorToTensor</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37638"">CVE-2021-37638</a>)</li>
<li>Fixes a null pointer dereference and a heap OOB read arising from operations restoring tensors (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37639"">CVE-2021-37639</a>)</li>
<li>Fixes an integer division by 0 in sparse reshaping (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37640"">CVE-2021-37640</a>)</li>
<li>Fixes a division by 0 in <code>ResourceScatterDiv</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37642"">CVE-2021-37642</a>)</li>
<li>Fixes a heap OOB in <code>RaggedGather</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37641"">CVE-2021-37641</a>)</li>
<li>Fixes a <code>std::abort</code> raised from <code>TensorListReserve</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37644"">CVE-2021-37644</a>)</li>
<li>Fixes a null pointer dereference in <code>MatrixDiagPartOp</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37643"">CVE-2021-37643</a>)</li>
<li>Fixes an integer overflow due to conversion to unsigned (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37645"">CVE-2021-37645</a>)</li>
<li>Fixes a bad allocation error in <code>StringNGrams</code> caused by integer conversion (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37646"">CVE-2021-37646</a>)</li>
<li>Fixes a null pointer dereference in <code>SparseTensorSliceDataset</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37647"">CVE-2021-37647</a>)</li>
<li>Fixes an incorrect validation of <code>SaveV2</code> inputs (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37648"">CVE-2021-37648</a>)</li>
<li>Fixes a null pointer dereference in <code>UncompressElement</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37649"">CVE-2021-37649</a>)</li>
<li>Fixes a segfault and a heap buffer overflow in <code>{Experimental,}DatasetToTFRecord</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37650"">CVE-2021-37650</a>)</li>
<li>Fixes a heap buffer overflow in <code>FractionalAvgPoolGrad</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37651"">CVE-2021-37651</a>)</li>
<li>Fixes a use after free in boosted trees creation (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37652"">CVE-2021-37652</a>)</li>
<li>Fixes a division by 0 in <code>ResourceGather</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37653"">CVE-2021-37653</a>)</li>
<li>Fixes a heap OOB and a <code>CHECK</code> fail in <code>ResourceGather</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37654"">CVE-2021-37654</a>)</li>
<li>Fixes a heap OOB in <code>ResourceScatterUpdate</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37655"">CVE-2021-37655</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in <code>RaggedTensorToSparse</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37656"">CVE-2021-37656</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in <code>MatrixDiagV*</code> ops (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37657"">CVE-2021-37657</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in <code>MatrixSetDiagV*</code> ops (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37658"">CVE-2021-37658</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr and heap OOB in binary cwise ops (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37659"">CVE-2021-37659</a>)</li>
<li>Fixes a division by 0 in inplace operations (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37660"">CVE-2021-37660</a>)</li>
<li>Fixes a crash caused by integer conversion to unsigned (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37661"">CVE-2021-37661</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in boosted trees (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37662"">CVE-2021-37662</a>)</li>
<li>Fixes a heap OOB in boosted trees (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37664"">CVE-2021-37664</a>)</li>
<li>Fixes vulnerabilities arising from incomplete validation in <code>QuantizeV2</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37663"">CVE-2021-37663</a>)</li>
<li>Fixes vulnerabilities arising from incomplete validation in MKL requantization (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37665"">CVE-2021-37665</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in <code>RaggedTensorToVariant</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37666"">CVE-2021-37666</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in unicode encoding (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37667"">CVE-2021-37667</a>)</li>
<li>Fixes an FPE in <code>tf.raw_ops.UnravelIndex</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37668"">CVE-2021-37668</a>)</li>
<li>Fixes a crash in NMS ops caused by integer conversion to unsigned (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37669"">CVE-2021-37669</a>)</li>
<li>Fixes a heap OOB in <code>UpperBound</code> and <code>LowerBound</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37670"">CVE-2021-37670</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in map operations (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37671"">CVE-2021-37671</a>)</li>
<li>Fixes a heap OOB in <code>SdcaOptimizerV2</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37672"">CVE-2021-37672</a>)</li>
<li>Fixes a <code>CHECK</code>-fail in <code>MapStage</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37673"">CVE-2021-37673</a>)</li>
<li>Fixes a vulnerability arising from incomplete validation in <code>MaxPoolGrad</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37674"">CVE-2021-37674</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in shape inference (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37676"">CVE-2021-37676</a>)</li>
<li>Fixes a division by 0 in most convolution operators (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37675"">CVE-2021-37675</a>)</li>
<li>Fixes vulnerabilities arising from missing validation in shape inference for <code>Dequantize</code> (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37677"">CVE-2021-37677</a>)</li>
<li>Fixes an arbitrary code execution due to YAML deserialization (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37678"">CVE-2021-37678</a>)</li>
<li>Fixes a heap OOB in nested <code>tf.map_fn</code> with <code>RaggedTensor</code>s (<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37679"">CVE-2021-37679</a>)</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/tensorflow/tensorflow/blob/master/RELEASE.md"">tensorflow's changelog</a>.</em></p>
<blockquote>
<h1>Release 2.5.1</h1>
<p>This release introduces several vulnerability fixes:</p>
<ul>
<li>Fixes a heap out of bounds access in sparse reduction operations
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37635"">CVE-2021-37635</a>)</li>
<li>Fixes a floating point exception in <code>SparseDenseCwiseDiv</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37636"">CVE-2021-37636</a>)</li>
<li>Fixes a null pointer dereference in <code>CompressElement</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37637"">CVE-2021-37637</a>)</li>
<li>Fixes a null pointer dereference in <code>RaggedTensorToTensor</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37638"">CVE-2021-37638</a>)</li>
<li>Fixes a null pointer dereference and a heap OOB read arising from operations
restoring tensors
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37639"">CVE-2021-37639</a>)</li>
<li>Fixes an integer division by 0 in sparse reshaping
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37640"">CVE-2021-37640</a>)</li>
<li>Fixes a division by 0 in <code>ResourceScatterDiv</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37642"">CVE-2021-37642</a>)</li>
<li>Fixes a heap OOB in <code>RaggedGather</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37641"">CVE-2021-37641</a>)</li>
<li>Fixes a <code>std::abort</code> raised from <code>TensorListReserve</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37644"">CVE-2021-37644</a>)</li>
<li>Fixes a null pointer dereference in <code>MatrixDiagPartOp</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37643"">CVE-2021-37643</a>)</li>
<li>Fixes an integer overflow due to conversion to unsigned
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37645"">CVE-2021-37645</a>)</li>
<li>Fixes a bad allocation error in <code>StringNGrams</code> caused by integer conversion
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37646"">CVE-2021-37646</a>)</li>
<li>Fixes a null pointer dereference in <code>SparseTensorSliceDataset</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37647"">CVE-2021-37647</a>)</li>
<li>Fixes an incorrect validation of <code>SaveV2</code> inputs
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37648"">CVE-2021-37648</a>)</li>
<li>Fixes a null pointer dereference in <code>UncompressElement</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37649"">CVE-2021-37649</a>)</li>
<li>Fixes a segfault and a heap buffer overflow in
<code>{Experimental,}DatasetToTFRecord</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37650"">CVE-2021-37650</a>)</li>
<li>Fixes a heap buffer overflow in <code>FractionalAvgPoolGrad</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37651"">CVE-2021-37651</a>)</li>
<li>Fixes a use after free in boosted trees creation
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37652"">CVE-2021-37652</a>)</li>
<li>Fixes a division by 0 in <code>ResourceGather</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37653"">CVE-2021-37653</a>)</li>
<li>Fixes a heap OOB and a <code>CHECK</code> fail in <code>ResourceGather</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37654"">CVE-2021-37654</a>)</li>
<li>Fixes a heap OOB in <code>ResourceScatterUpdate</code>
(<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37655"">CVE-2021-37655</a>)</li>
<li>Fixes an undefined behavior arising from reference binding to nullptr in
<code>RaggedTensorToSparse</code></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/8222c1cfc866126111f23bd9872998480cebf2c1""><code>8222c1c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/51381"">#51381</a> from tensorflow/mm-fix-r2.5-build</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/d5842603e03504d8ed30b0622e03869899c9f41d""><code>d584260</code></a> Disable broken/flaky test</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/f6c6ce30bab35320e5da6e25fbdd8c369de75ab7""><code>f6c6ce3</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/51367"">#51367</a> from tensorflow-jenkins/version-numbers-2.5.1-17468</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/3ca781272c60959f3a24a2b440f2f275aab71a76""><code>3ca7812</code></a> Update version numbers to 2.5.1</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/4fdf683c878574bc2c39fe8ac152ffc26183efb6""><code>4fdf683</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/51361"">#51361</a> from tensorflow/mm-update-relnotes-on-r2.5</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/05fc01aa0ffe973a2b1517bd92479e38f5d2c72a""><code>05fc01a</code></a> Put CVE numbers for fixes in parentheses</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/bee1dc4a6116b53101fc8773f43662a89514847d""><code>bee1dc4</code></a> Update release notes for the new patch release</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/47beb4c1987293659784d6aa1dfaacc86bc07d84""><code>47beb4c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/50597"">#50597</a> from kruglov-dmitry/v2.5.0-sync-abseil-cmake-bazel</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/6f39597952e230d2a782547380cdf8143bdcdc5d""><code>6f39597</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49383"">#49383</a> from ashahab/abin-load-segfault-r2.5</li>
<li><a href=""https://github.com/tensorflow/tensorflow/commit/0539b34641ee0773f07d859fe69dc0dfc71069d3""><code>0539b34</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/48979"">#48979</a> from liufengdb/r2.5-cherrypick</li>
<li>Additional commits viewable in <a href=""https://github.com/tensorflow/tensorflow/compare/v2.3.1...v2.5.1"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tensorflow&package-manager=pip&previous-version=2.3.1&new-version=2.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/Vishal-V/GSoC-TensorFlow-2020/network/alerts).

</details>",True,5,https://api.github.com/repos/Vishal-V/GSoC-TensorFlow-2020/pulls/5,https://github.com/Vishal-V/GSoC-TensorFlow-2020/pull/5,closed,1,1,1,1,0,0,1,0,[{'name': 'dependencies'}],2021-08-25 16:05:53+00:00,2021-08-26 10:44:31+00:00,67118.0,18:38:38,[],"[{'commit_sha': 'c2c010032a773a61bfef57265cf3c27d0b14ab63', 'committer_username': 'dependabot[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 16, 22, 34, 25, tzinfo=datetime.timezone.utc)}]",,49699333,,Bot,,0,,0,0
476390890,FineGAN - Partial Implementation TF 2.3 (Community),"# Description

> :memo: Implement Hierarchical Disentanglement for Fine-Grained Object Generation - FineGAN. 
>  
> * State-of-the-art for CUB 200, CUB 128x128, Stanford Cars and Stanford Dogs datasets.  
> * Hierarchical Deep Generative Model (Several moving parts trained end-to-end).  
> * Reproduce the paper results and benchmark it on the 3 datasets.  
> * Publish documentation and prepare Colab demo.  
> * Publish pre-trained SavedModel files at TensorFlow Hub.  
> * Completed implementation and merge solves #8705

## Type of change
- [x] A new research paper code implementation  
  
  
## Key Features
  
- [x] TensorFlow 2.3.0
- [ ] Inference example (Demo)
- [x] Eager mode training with `tf.GradientTape` [If Required]
- [ ] [Default] Graph mode training with `model.train_on_batch`
- [x] Functional model with `tf.keras.layers.Layer`
- [x] Subclassing model with `tf.keras.Model`
- [x] Input pipeline using `tf.data` and `tfds`
- [ ] Tensorflow Serving
- [x] Vectorized transformations
- [x] GPU accelerated
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License
  
## Tests

> :memo: [WIP] Code Reviews and Tests Pending.
>  
> * [WIP] Provide instructions so we can reproduce.  
> * [WIP] Please also list any relevant details for your test configuration.  

**Test Configuration**:
> * Config `.yml` files and Config class included.

## Checklist

- [x] I have signed the [Contributor License Agreement](https://github.com/tensorflow/models/wiki/Contributor-License-Agreements).
- [x] I have read [guidelines for pull request](https://github.com/tensorflow/models/wiki/Submitting-a-pull-request).
- [x] My code follows the [coding guidelines](https://github.com/tensorflow/models/wiki/Coding-guidelines).
- [ ] I have performed a self [code review](https://github.com/tensorflow/models/wiki/Code-review) of my own code.
- [x] I have commented my code, particularly in hard-to-understand areas.
- [x] I have made corresponding changes to the documentation.
- [ ] My changes generate no new warnings.
- [ ] I have added tests that prove my fix is effective or that my feature works.
",False,9173,https://api.github.com/repos/tensorflow/models/pulls/9173,https://github.com/tensorflow/models/pull/9173,closed,1170,0,11,6,2,0,3,1,"[{'name': 'cla: yes'}, {'name': 'stat:awaiting review'}, {'name': 'type:community request'}]",2020-08-31 16:05:21+00:00,2020-10-02 19:38:49+00:00,2777608.0,"32 days, 3:33:28",[],"[{'commit_sha': '14bb808508840203e729705a80f95412267eb375', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9287bd23b9f8cc78e8f827ef9484f43addbbcc7e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a42a0a9418998592876f65e067add5fa38cabae', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8eb501b2890d4abdef801b526aa98b3304f2e4', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc82d0b53bed67cb872dc17ab187e0886fac6b2', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf27fb41db0dd20f8c47e4bf982c7351cb932f8', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
441594655,[WIP] Unsupervised Hierarchical Disentanglement for Fine-Grained Object Generation and Discovery [Research],"# Description

> :memo: Implement Hierarchical Disentanglement for Fine-Grained Object Generation - FineGAN. 
>  
> * State-of-the-art for CUB 200, CUB 128x128, Stanford Cars and Stanford Dogs datasets.  
> * Hierarchical Deep Generative Model (Several moving parts trained end-to-end).  
> * Reproduce the paper results and benchmark it on the 3 datasets.  
> * Publish documentation and prepare Colab demo.  
> * Publish pre-trained SavedModel files at TensorFlow Hub.  
> * Completed implementation and merge solves #8705

## Type of change
- [x] A new research paper code implementation  
  
  
## Key Features
  
- [x] TensorFlow 2.2.0
- [ ] Inference example (Colab Demo)
- [ ] Transfer learning example (Inception-ResNet Backbone)
- [x] Eager mode training with `tf.GradientTape` [If Required]
- [ ] [Default] Graph mode training with `model.train_on_batch`
- [x] Functional model with `tf.keras.layers.Layer`
- [x] Subclassing model with `tf.keras.Model`
- [x] Input pipeline using `tf.data` and `tfds`
- [ ] Tensorflow Serving
- [x] Vectorized transformations
- [x] GPU accelerated
- [ ] Fully integrated with `absl-py` from [abseil.io](https://abseil.io)
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License
  
## Tests

> :memo: [WIP] Code Reviews and Tests Pending.
>  
> * [WIP] Provide instructions so we can reproduce.  
> * [WIP] Please also list any relevant details for your test configuration.  

**Test Configuration**:
> * Config `.yml` files and Config class included.

## Checklist

- [x] I have signed the [Contributor License Agreement](https://github.com/tensorflow/models/wiki/Contributor-License-Agreements).
- [x] I have read [guidelines for pull request](https://github.com/tensorflow/models/wiki/Submitting-a-pull-request).
- [x] My code follows the [coding guidelines](https://github.com/tensorflow/models/wiki/Coding-guidelines).
- [ ] I have performed a self [code review](https://github.com/tensorflow/models/wiki/Code-review) of my own code.
- [x] I have commented my code, particularly in hard-to-understand areas.
- [x] I have made corresponding changes to the documentation.
- [ ] My changes generate no new warnings.
- [ ] I have added tests that prove my fix is effective or that my feature works.
",False,8750,https://api.github.com/repos/tensorflow/models/pulls/8750,https://github.com/tensorflow/models/pull/8750,closed,1093,0,12,22,1,0,1,0,[{'name': 'cla: yes'}],2020-06-29 19:04:40+00:00,2020-08-14 20:56:12+00:00,3981092.0,"46 days, 1:51:32",[],"[{'commit_sha': '8a6cd31365c0c696312b7a416723c65237189986', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc09bf56548d301e98952253d2ba45391e8c727e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2339476974747c5721e2e6297f41b386ff19c43', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f4a55c714040e202552637e40efb9124fac5ae', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4364b12335a9ce73b37061277af5bb45493ac496', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c73f5bc8d38c966157e213ed55864926b51b8b52', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef00145a6ff2f4a4f6635c893c5b62c8f4897bce', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a50c45a8f08204614b8590bf400741b229e118e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef55390fe0f30ee1011185e21f89486d9a17e53', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5be8f303ee68106fe3b658de5063affc821356bd', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a65cc30f45db1c3c46b90f290fe72cfdf977573d', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c0956b0222b702f547ba601aa075a65be865352', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac644b6051f10aa534b6e7b25dde01a5646dd07', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '584e7e39d5aaafa408344107721ca53660a2f18c', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b99182ac653b68af0a812446e4aca9c41344cddd', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '298470c54173806bbe7a72bfdef2310ba22fb788', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d70515455cb95ce8515bdc4dc1bcde5a1b184fb', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e32bf7273bef7b703669e9ae3c8b6631e42777', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dbdebd0ee06076dba823f91f81adc1ad21dc6d7', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35de1467fa2e3160a1c87f8ec02eab43a7925d75', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57fce3742afc126a826e18d0001547029dcd7dfc', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4844c3aec7add43e17c293609ff7ced67b3700', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
476390890,FineGAN - Partial Implementation TF 2.3 (Community),"# Description

> :memo: Implement Hierarchical Disentanglement for Fine-Grained Object Generation - FineGAN. 
>  
> * State-of-the-art for CUB 200, CUB 128x128, Stanford Cars and Stanford Dogs datasets.  
> * Hierarchical Deep Generative Model (Several moving parts trained end-to-end).  
> * Reproduce the paper results and benchmark it on the 3 datasets.  
> * Publish documentation and prepare Colab demo.  
> * Publish pre-trained SavedModel files at TensorFlow Hub.  
> * Completed implementation and merge solves #8705

## Type of change
- [x] A new research paper code implementation  
  
  
## Key Features
  
- [x] TensorFlow 2.3.0
- [ ] Inference example (Demo)
- [x] Eager mode training with `tf.GradientTape` [If Required]
- [ ] [Default] Graph mode training with `model.train_on_batch`
- [x] Functional model with `tf.keras.layers.Layer`
- [x] Subclassing model with `tf.keras.Model`
- [x] Input pipeline using `tf.data` and `tfds`
- [ ] Tensorflow Serving
- [x] Vectorized transformations
- [x] GPU accelerated
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License
  
## Tests

> :memo: [WIP] Code Reviews and Tests Pending.
>  
> * [WIP] Provide instructions so we can reproduce.  
> * [WIP] Please also list any relevant details for your test configuration.  

**Test Configuration**:
> * Config `.yml` files and Config class included.

## Checklist

- [x] I have signed the [Contributor License Agreement](https://github.com/tensorflow/models/wiki/Contributor-License-Agreements).
- [x] I have read [guidelines for pull request](https://github.com/tensorflow/models/wiki/Submitting-a-pull-request).
- [x] My code follows the [coding guidelines](https://github.com/tensorflow/models/wiki/Coding-guidelines).
- [ ] I have performed a self [code review](https://github.com/tensorflow/models/wiki/Code-review) of my own code.
- [x] I have commented my code, particularly in hard-to-understand areas.
- [x] I have made corresponding changes to the documentation.
- [ ] My changes generate no new warnings.
- [ ] I have added tests that prove my fix is effective or that my feature works.
",False,9173,https://api.github.com/repos/tensorflow/models/pulls/9173,https://github.com/tensorflow/models/pull/9173,closed,1170,0,11,6,2,0,3,1,"[{'name': 'cla: yes'}, {'name': 'stat:awaiting review'}, {'name': 'type:community request'}]",2020-08-31 16:05:21+00:00,2020-10-02 19:38:49+00:00,2777608.0,"32 days, 3:33:28",[],"[{'commit_sha': '14bb808508840203e729705a80f95412267eb375', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9287bd23b9f8cc78e8f827ef9484f43addbbcc7e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a42a0a9418998592876f65e067add5fa38cabae', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8eb501b2890d4abdef801b526aa98b3304f2e4', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc82d0b53bed67cb872dc17ab187e0886fac6b2', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf27fb41db0dd20f8c47e4bf982c7351cb932f8', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
441594655,[WIP] Unsupervised Hierarchical Disentanglement for Fine-Grained Object Generation and Discovery [Research],"# Description

> :memo: Implement Hierarchical Disentanglement for Fine-Grained Object Generation - FineGAN. 
>  
> * State-of-the-art for CUB 200, CUB 128x128, Stanford Cars and Stanford Dogs datasets.  
> * Hierarchical Deep Generative Model (Several moving parts trained end-to-end).  
> * Reproduce the paper results and benchmark it on the 3 datasets.  
> * Publish documentation and prepare Colab demo.  
> * Publish pre-trained SavedModel files at TensorFlow Hub.  
> * Completed implementation and merge solves #8705

## Type of change
- [x] A new research paper code implementation  
  
  
## Key Features
  
- [x] TensorFlow 2.2.0
- [ ] Inference example (Colab Demo)
- [ ] Transfer learning example (Inception-ResNet Backbone)
- [x] Eager mode training with `tf.GradientTape` [If Required]
- [ ] [Default] Graph mode training with `model.train_on_batch`
- [x] Functional model with `tf.keras.layers.Layer`
- [x] Subclassing model with `tf.keras.Model`
- [x] Input pipeline using `tf.data` and `tfds`
- [ ] Tensorflow Serving
- [x] Vectorized transformations
- [x] GPU accelerated
- [ ] Fully integrated with `absl-py` from [abseil.io](https://abseil.io)
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License
  
## Tests

> :memo: [WIP] Code Reviews and Tests Pending.
>  
> * [WIP] Provide instructions so we can reproduce.  
> * [WIP] Please also list any relevant details for your test configuration.  

**Test Configuration**:
> * Config `.yml` files and Config class included.

## Checklist

- [x] I have signed the [Contributor License Agreement](https://github.com/tensorflow/models/wiki/Contributor-License-Agreements).
- [x] I have read [guidelines for pull request](https://github.com/tensorflow/models/wiki/Submitting-a-pull-request).
- [x] My code follows the [coding guidelines](https://github.com/tensorflow/models/wiki/Coding-guidelines).
- [ ] I have performed a self [code review](https://github.com/tensorflow/models/wiki/Code-review) of my own code.
- [x] I have commented my code, particularly in hard-to-understand areas.
- [x] I have made corresponding changes to the documentation.
- [ ] My changes generate no new warnings.
- [ ] I have added tests that prove my fix is effective or that my feature works.
",False,8750,https://api.github.com/repos/tensorflow/models/pulls/8750,https://github.com/tensorflow/models/pull/8750,closed,1093,0,12,22,1,0,1,0,[{'name': 'cla: yes'}],2020-06-29 19:04:40+00:00,2020-08-14 20:56:12+00:00,3981092.0,"46 days, 1:51:32",[],"[{'commit_sha': '8a6cd31365c0c696312b7a416723c65237189986', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc09bf56548d301e98952253d2ba45391e8c727e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2339476974747c5721e2e6297f41b386ff19c43', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51f4a55c714040e202552637e40efb9124fac5ae', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4364b12335a9ce73b37061277af5bb45493ac496', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c73f5bc8d38c966157e213ed55864926b51b8b52', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef00145a6ff2f4a4f6635c893c5b62c8f4897bce', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a50c45a8f08204614b8590bf400741b229e118e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef55390fe0f30ee1011185e21f89486d9a17e53', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5be8f303ee68106fe3b658de5063affc821356bd', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a65cc30f45db1c3c46b90f290fe72cfdf977573d', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c0956b0222b702f547ba601aa075a65be865352', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eac644b6051f10aa534b6e7b25dde01a5646dd07', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '584e7e39d5aaafa408344107721ca53660a2f18c', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b99182ac653b68af0a812446e4aca9c41344cddd', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '298470c54173806bbe7a72bfdef2310ba22fb788', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d70515455cb95ce8515bdc4dc1bcde5a1b184fb', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e32bf7273bef7b703669e9ae3c8b6631e42777', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dbdebd0ee06076dba823f91f81adc1ad21dc6d7', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35de1467fa2e3160a1c87f8ec02eab43a7925d75', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57fce3742afc126a826e18d0001547029dcd7dfc', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f4844c3aec7add43e17c293609ff7ced67b3700', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
476390890,FineGAN - Partial Implementation TF 2.3 (Community),"# Description

> :memo: Implement Hierarchical Disentanglement for Fine-Grained Object Generation - FineGAN. 
>  
> * State-of-the-art for CUB 200, CUB 128x128, Stanford Cars and Stanford Dogs datasets.  
> * Hierarchical Deep Generative Model (Several moving parts trained end-to-end).  
> * Reproduce the paper results and benchmark it on the 3 datasets.  
> * Publish documentation and prepare Colab demo.  
> * Publish pre-trained SavedModel files at TensorFlow Hub.  
> * Completed implementation and merge solves #8705

## Type of change
- [x] A new research paper code implementation  
  
  
## Key Features
  
- [x] TensorFlow 2.3.0
- [ ] Inference example (Demo)
- [x] Eager mode training with `tf.GradientTape` [If Required]
- [ ] [Default] Graph mode training with `model.train_on_batch`
- [x] Functional model with `tf.keras.layers.Layer`
- [x] Subclassing model with `tf.keras.Model`
- [x] Input pipeline using `tf.data` and `tfds`
- [ ] Tensorflow Serving
- [x] Vectorized transformations
- [x] GPU accelerated
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License
  
## Tests

> :memo: [WIP] Code Reviews and Tests Pending.
>  
> * [WIP] Provide instructions so we can reproduce.  
> * [WIP] Please also list any relevant details for your test configuration.  

**Test Configuration**:
> * Config `.yml` files and Config class included.

## Checklist

- [x] I have signed the [Contributor License Agreement](https://github.com/tensorflow/models/wiki/Contributor-License-Agreements).
- [x] I have read [guidelines for pull request](https://github.com/tensorflow/models/wiki/Submitting-a-pull-request).
- [x] My code follows the [coding guidelines](https://github.com/tensorflow/models/wiki/Coding-guidelines).
- [ ] I have performed a self [code review](https://github.com/tensorflow/models/wiki/Code-review) of my own code.
- [x] I have commented my code, particularly in hard-to-understand areas.
- [x] I have made corresponding changes to the documentation.
- [ ] My changes generate no new warnings.
- [ ] I have added tests that prove my fix is effective or that my feature works.
",False,9173,https://api.github.com/repos/tensorflow/models/pulls/9173,https://github.com/tensorflow/models/pull/9173,closed,1170,0,11,6,2,0,3,1,"[{'name': 'cla: yes'}, {'name': 'stat:awaiting review'}, {'name': 'type:community request'}]",2020-08-31 16:05:21+00:00,2020-10-02 19:38:49+00:00,2777608.0,"32 days, 3:33:28",[],"[{'commit_sha': '14bb808508840203e729705a80f95412267eb375', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9287bd23b9f8cc78e8f827ef9484f43addbbcc7e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a42a0a9418998592876f65e067add5fa38cabae', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8eb501b2890d4abdef801b526aa98b3304f2e4', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc82d0b53bed67cb872dc17ab187e0886fac6b2', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf27fb41db0dd20f8c47e4bf982c7351cb932f8', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
476390890,FineGAN - Partial Implementation TF 2.3 (Community),"# Description

> :memo: Implement Hierarchical Disentanglement for Fine-Grained Object Generation - FineGAN. 
>  
> * State-of-the-art for CUB 200, CUB 128x128, Stanford Cars and Stanford Dogs datasets.  
> * Hierarchical Deep Generative Model (Several moving parts trained end-to-end).  
> * Reproduce the paper results and benchmark it on the 3 datasets.  
> * Publish documentation and prepare Colab demo.  
> * Publish pre-trained SavedModel files at TensorFlow Hub.  
> * Completed implementation and merge solves #8705

## Type of change
- [x] A new research paper code implementation  
  
  
## Key Features
  
- [x] TensorFlow 2.3.0
- [ ] Inference example (Demo)
- [x] Eager mode training with `tf.GradientTape` [If Required]
- [ ] [Default] Graph mode training with `model.train_on_batch`
- [x] Functional model with `tf.keras.layers.Layer`
- [x] Subclassing model with `tf.keras.Model`
- [x] Input pipeline using `tf.data` and `tfds`
- [ ] Tensorflow Serving
- [x] Vectorized transformations
- [x] GPU accelerated
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License
  
## Tests

> :memo: [WIP] Code Reviews and Tests Pending.
>  
> * [WIP] Provide instructions so we can reproduce.  
> * [WIP] Please also list any relevant details for your test configuration.  

**Test Configuration**:
> * Config `.yml` files and Config class included.

## Checklist

- [x] I have signed the [Contributor License Agreement](https://github.com/tensorflow/models/wiki/Contributor-License-Agreements).
- [x] I have read [guidelines for pull request](https://github.com/tensorflow/models/wiki/Submitting-a-pull-request).
- [x] My code follows the [coding guidelines](https://github.com/tensorflow/models/wiki/Coding-guidelines).
- [ ] I have performed a self [code review](https://github.com/tensorflow/models/wiki/Code-review) of my own code.
- [x] I have commented my code, particularly in hard-to-understand areas.
- [x] I have made corresponding changes to the documentation.
- [ ] My changes generate no new warnings.
- [ ] I have added tests that prove my fix is effective or that my feature works.
",False,9173,https://api.github.com/repos/tensorflow/models/pulls/9173,https://github.com/tensorflow/models/pull/9173,closed,1170,0,11,6,2,0,3,1,"[{'name': 'cla: yes'}, {'name': 'stat:awaiting review'}, {'name': 'type:community request'}]",2020-08-31 16:05:21+00:00,2020-10-02 19:38:49+00:00,2777608.0,"32 days, 3:33:28",[],"[{'commit_sha': '14bb808508840203e729705a80f95412267eb375', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9287bd23b9f8cc78e8f827ef9484f43addbbcc7e', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a42a0a9418998592876f65e067add5fa38cabae', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d8eb501b2890d4abdef801b526aa98b3304f2e4', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cc82d0b53bed67cb872dc17ab187e0886fac6b2', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf27fb41db0dd20f8c47e4bf982c7351cb932f8', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
476440109,On the Expressivity of Random Features in CNNs - TF 2.3 (Community),"# Only BatchNorm
  
[![Paper](http://img.shields.io/badge/paper-arXiv.2003.00152-B3181B.svg)](https://arxiv.org/pdf/2003.00152.pdf) 
<!-- [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Vishal-V/tf-models/blob/master/...)   -->

This repository is the unofficial implementation of the following [[Paper]](https://arxiv.org/pdf/2003.00152.pdf).

* Training BatchNorm and Only BatchNorm: On the Expressivity of Random Features in CNNs

## Description/Abstract

Batch normalization (BatchNorm) has become an indispensable tool for training
deep neural networks, yet it is still poorly understood. Although previous work
has typically focused on studying its normalization component, BatchNorm also
adds two per-feature trainable parameters—a coefficient and a bias—whose role
and expressive power remain unclear. To study this question, we investigate the
performance achieved when training only these parameters and freezing all others
at their random initializations. We find that doing so leads to surprisingly high
performance. For example, sufficiently deep ResNets reach 82% (CIFAR-10) and
32% (ImageNet, top-5) accuracy in this configuration, far higher than when training
an equivalent number of randomly chosen parameters elsewhere in the network.
BatchNorm achieves this performance in part by naturally learning to disable
around a third of the random features. Not only do these results highlight the
under-appreciated role of the affine parameters in BatchNorm, but—in a broader
sense—they characterize the expressive power of neural networks constructed
simply by shifting and rescaling random features.

 
  
<!-- ## History

> :memo: Provide a changelog. -->
  
## Key Features

- [x] TensorFlow 2.3.0
- [x] Inference example (Colab Demo)
- [x] Graph mode training with `model.fit`
- [x] Functional model with `tf.keras.layers`
- [x] Input pipeline using `tf.data` and `tfds`
- [x] GPU accelerated
- [ ] Fully integrated with `absl-py` from [abseil.io](https://abseil.io)
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License

## Requirements

[![TensorFlow 2.3](https://img.shields.io/badge/tensorflow-2.3-brightgreen)](https://github.com/tensorflow/tensorflow/releases/tag/v2.3.0)
[![Python 3.7](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-382/)


To install requirements:

```setup
pip install -r requirements.txt
```

## Results
#
### Image Classification (Only BatchNorm weights) 
 
| Model name | Download | Top 1 Accuracy |
|------------|----------|----------------|
| ResNet-14 (N=2)| [Checkpoint](https://drive.google.com/...) | 46.67% |
| ResNet-32 (N=5)| [Checkpoint](https://drive.google.com/...) | 51.29% |
| ResNet-56 (N=9)| [Checkpoint](https://drive.google.com/...) | 55.21% |
| ResNet-110 (N=18)| [Checkpoint](https://drive.google.com/...) | 65.19% |
| ResNet-218 (N=36)| [Checkpoint](https://drive.google.com/...) | 70.09% |
| ResNet-434 (N=72)| [Checkpoint](https://drive.google.com/...) | 73.67% |
| ResNet-866 (N=144)| [Checkpoint](https://drive.google.com/...) | 77.83% |
#  
## Dataset

`CIFAR10` dataset - 10 classes with 50,000 images in the train set and 10,000 images in the test set.
  

## Training

> :memo: Provide training information.  
>  
> * Provide details for preprocessing, hyperparameters, random seeds, and environment.  
> * Provide a command line example for training.  

Please run this command line for training.

```shell
python3 resnet_cifar.py
```
This trains the OnlyBN model for the ResNet-14 architecture. Replace `num_blocks` with the appropriate value for 'N' from the results table above to train the respective ResNet architecture.  
  
## Evaluation
<!-- 
> :memo: Provide an evaluation script with details of how to reproduce results.  
>  
> * Describe data preprocessing / postprocessing steps.  
> * Provide a command line example for evaluation.   -->

Please run this command line for evaluation.

```shell
python3 ...
```

## References

> :memo: Provide links to references.  

## Citation

> :memo: Make your repository citable.  
>  
> * Reference: [Making Your Code Citable](https://guides.github.com/activities/citable-code/)  

If you want to cite this repository in your research paper, please use the following information.

## Authors or Maintainers

* Vishal Vinod ([@Vishal-V](https://github.com/Vishal-V))
  
This project is licensed under the terms of the **Apache License 2.0**.
",False,9174,https://api.github.com/repos/tensorflow/models/pulls/9174,https://github.com/tensorflow/models/pull/9174,closed,2923,0,6,1,2,0,2,1,"[{'name': 'cla: yes'}, {'name': 'stat:awaiting review'}]",2020-08-31 17:45:02+00:00,2020-10-02 19:37:18+00:00,2771536.0,"32 days, 1:52:16",[],"[{'commit_sha': 'c45ab2c10e7e3b9444c85c08e9b6345ac7631a73', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203
476440109,On the Expressivity of Random Features in CNNs - TF 2.3 (Community),"# Only BatchNorm
  
[![Paper](http://img.shields.io/badge/paper-arXiv.2003.00152-B3181B.svg)](https://arxiv.org/pdf/2003.00152.pdf) 
<!-- [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Vishal-V/tf-models/blob/master/...)   -->

This repository is the unofficial implementation of the following [[Paper]](https://arxiv.org/pdf/2003.00152.pdf).

* Training BatchNorm and Only BatchNorm: On the Expressivity of Random Features in CNNs

## Description/Abstract

Batch normalization (BatchNorm) has become an indispensable tool for training
deep neural networks, yet it is still poorly understood. Although previous work
has typically focused on studying its normalization component, BatchNorm also
adds two per-feature trainable parameters—a coefficient and a bias—whose role
and expressive power remain unclear. To study this question, we investigate the
performance achieved when training only these parameters and freezing all others
at their random initializations. We find that doing so leads to surprisingly high
performance. For example, sufficiently deep ResNets reach 82% (CIFAR-10) and
32% (ImageNet, top-5) accuracy in this configuration, far higher than when training
an equivalent number of randomly chosen parameters elsewhere in the network.
BatchNorm achieves this performance in part by naturally learning to disable
around a third of the random features. Not only do these results highlight the
under-appreciated role of the affine parameters in BatchNorm, but—in a broader
sense—they characterize the expressive power of neural networks constructed
simply by shifting and rescaling random features.

 
  
<!-- ## History

> :memo: Provide a changelog. -->
  
## Key Features

- [x] TensorFlow 2.3.0
- [x] Inference example (Colab Demo)
- [x] Graph mode training with `model.fit`
- [x] Functional model with `tf.keras.layers`
- [x] Input pipeline using `tf.data` and `tfds`
- [x] GPU accelerated
- [ ] Fully integrated with `absl-py` from [abseil.io](https://abseil.io)
- [x] Clean implementation
- [x] Following the best practices
- [x] Apache 2.0 License

## Requirements

[![TensorFlow 2.3](https://img.shields.io/badge/tensorflow-2.3-brightgreen)](https://github.com/tensorflow/tensorflow/releases/tag/v2.3.0)
[![Python 3.7](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-382/)


To install requirements:

```setup
pip install -r requirements.txt
```

## Results
#
### Image Classification (Only BatchNorm weights) 
 
| Model name | Download | Top 1 Accuracy |
|------------|----------|----------------|
| ResNet-14 (N=2)| [Checkpoint](https://drive.google.com/...) | 46.67% |
| ResNet-32 (N=5)| [Checkpoint](https://drive.google.com/...) | 51.29% |
| ResNet-56 (N=9)| [Checkpoint](https://drive.google.com/...) | 55.21% |
| ResNet-110 (N=18)| [Checkpoint](https://drive.google.com/...) | 65.19% |
| ResNet-218 (N=36)| [Checkpoint](https://drive.google.com/...) | 70.09% |
| ResNet-434 (N=72)| [Checkpoint](https://drive.google.com/...) | 73.67% |
| ResNet-866 (N=144)| [Checkpoint](https://drive.google.com/...) | 77.83% |
#  
## Dataset

`CIFAR10` dataset - 10 classes with 50,000 images in the train set and 10,000 images in the test set.
  

## Training

> :memo: Provide training information.  
>  
> * Provide details for preprocessing, hyperparameters, random seeds, and environment.  
> * Provide a command line example for training.  

Please run this command line for training.

```shell
python3 resnet_cifar.py
```
This trains the OnlyBN model for the ResNet-14 architecture. Replace `num_blocks` with the appropriate value for 'N' from the results table above to train the respective ResNet architecture.  
  
## Evaluation
<!-- 
> :memo: Provide an evaluation script with details of how to reproduce results.  
>  
> * Describe data preprocessing / postprocessing steps.  
> * Provide a command line example for evaluation.   -->

Please run this command line for evaluation.

```shell
python3 ...
```

## References

> :memo: Provide links to references.  

## Citation

> :memo: Make your repository citable.  
>  
> * Reference: [Making Your Code Citable](https://guides.github.com/activities/citable-code/)  

If you want to cite this repository in your research paper, please use the following information.

## Authors or Maintainers

* Vishal Vinod ([@Vishal-V](https://github.com/Vishal-V))
  
This project is licensed under the terms of the **Apache License 2.0**.
",False,9174,https://api.github.com/repos/tensorflow/models/pulls/9174,https://github.com/tensorflow/models/pull/9174,closed,2923,0,6,1,2,0,2,1,"[{'name': 'cla: yes'}, {'name': 'stat:awaiting review'}]",2020-08-31 17:45:02+00:00,2020-10-02 19:37:18+00:00,2771536.0,"32 days, 1:52:16",[],"[{'commit_sha': 'c45ab2c10e7e3b9444c85c08e9b6345ac7631a73', 'committer_username': 'Vishal-V', 'committer_name': 'Vishal Vinod', 'committer_email': 'vishal114186@gmail.com', 'commit_date': datetime.datetime(2016, 5, 30, 14, 43, 18, tzinfo=datetime.timezone.utc)}]",Vishal Vinod,19651608,vishal114186@gmail.com,User,,83,,87,203

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
267200220,GSoC-TensorFlow-2020,Vishal-V/GSoC-TensorFlow-2020,Jupyter Notebook,3,15,4,2,51,4,5,4,"[{'id': 1289862262, 'number': 20, 'closed': None, 'created': datetime.datetime(2023, 3, 25, 1, 33, 18, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 1, 'state': 'open'}, {'id': 1289862190, 'number': 19, 'closed': None, 'created': datetime.datetime(2023, 3, 25, 1, 33, 8, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 1, 'state': 'open'}, {'id': 1130768621, 'number': 18, 'closed': datetime.datetime(2023, 3, 25, 1, 33, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 21, 23, 28, 3, tzinfo=datetime.timezone.utc), 'time_taken': 10634718.0, 'time_delta': '123 days, 2:05:18', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1130768288, 'number': 17, 'closed': datetime.datetime(2023, 3, 25, 1, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 21, 23, 27, 45, tzinfo=datetime.timezone.utc), 'time_taken': 10634726.0, 'time_delta': '123 days, 2:05:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 974438721, 'number': 16, 'closed': None, 'created': datetime.datetime(2022, 6, 22, 2, 42, 57, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 1, 'state': 'open'}, {'id': 974412128, 'number': 15, 'closed': None, 'created': datetime.datetime(2022, 6, 22, 2, 17, 25, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1, 'deletions': 1, 'state': 'open'}, {'id': 948706214, 'number': 14, 'closed': datetime.datetime(2022, 11, 21, 23, 28, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 20, 54, 54, tzinfo=datetime.timezone.utc), 'time_taken': 15474792.0, 'time_delta': '179 days, 2:33:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 948697500, 'number': 13, 'closed': datetime.datetime(2022, 11, 21, 23, 27, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 20, 49, 23, tzinfo=datetime.timezone.utc), 'time_taken': 15475105.0, 'time_delta': '179 days, 2:38:25', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 945931577, 'number': 12, 'closed': datetime.datetime(2022, 5, 26, 20, 54, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 24, 17, 21, 23, tzinfo=datetime.timezone.utc), 'time_taken': 185614.0, 'time_delta': '2 days, 3:33:34', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 945921590, 'number': 11, 'closed': datetime.datetime(2022, 5, 26, 20, 49, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 24, 17, 16, 10, tzinfo=datetime.timezone.utc), 'time_taken': 185596.0, 'time_delta': '2 days, 3:33:16', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 844626126, 'number': 10, 'closed': datetime.datetime(2022, 5, 24, 17, 21, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 2, 35, 24, tzinfo=datetime.timezone.utc), 'time_taken': 8952362.0, 'time_delta': '103 days, 14:46:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 844591994, 'number': 9, 'closed': datetime.datetime(2022, 5, 24, 17, 16, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 1, 51, 25, tzinfo=datetime.timezone.utc), 'time_taken': 8954688.0, 'time_delta': '103 days, 15:24:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 777955570, 'number': 8, 'closed': datetime.datetime(2022, 2, 10, 2, 35, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 19, 54, 58, tzinfo=datetime.timezone.utc), 'time_taken': 7886429.0, 'time_delta': '91 days, 6:40:29', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 777951198, 'number': 7, 'closed': datetime.datetime(2022, 2, 10, 1, 51, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 10, 19, 51, 1, tzinfo=datetime.timezone.utc), 'time_taken': 7884026.0, 'time_delta': '91 days, 6:00:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 719807194, 'number': 6, 'closed': datetime.datetime(2021, 8, 26, 10, 44, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 16, 9, 57, tzinfo=datetime.timezone.utc), 'time_taken': 66855.0, 'time_delta': '18:34:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 719800838, 'number': 5, 'closed': datetime.datetime(2021, 8, 26, 10, 44, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 16, 5, 53, tzinfo=datetime.timezone.utc), 'time_taken': 67118.0, 'time_delta': '18:38:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 650022984, 'number': 4, 'closed': datetime.datetime(2021, 8, 25, 16, 9, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 14, 40, 46, tzinfo=datetime.timezone.utc), 'time_taken': 8299753.0, 'time_delta': '96 days, 1:29:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 546366353, 'number': 3, 'closed': datetime.datetime(2021, 8, 25, 16, 5, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 29, 7, 24, 52, tzinfo=datetime.timezone.utc), 'time_taken': 20680863.0, 'time_delta': '239 days, 8:41:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 493346634, 'number': 2, 'closed': datetime.datetime(2020, 12, 29, 7, 24, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 25, 20, 10, 33, tzinfo=datetime.timezone.utc), 'time_taken': 8162045.0, 'time_delta': '94 days, 11:14:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 493325337, 'number': 1, 'closed': datetime.datetime(2020, 12, 29, 7, 24, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 25, 19, 23, 52, tzinfo=datetime.timezone.utc), 'time_taken': 8164831.0, 'time_delta': '94 days, 12:00:31', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
51117837,models,tensorflow/models,Python,45808,76913,2732,931,9443,1247,97,179,"[{'id': 1996904345, 'number': 11243, 'closed': None, 'created': datetime.datetime(2024, 7, 31, 18, 4, 51, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 29, 'deletions': 26, 'state': 'open'}, {'id': 1996904189, 'number': 11242, 'closed': None, 'created': datetime.datetime(2024, 7, 31, 18, 4, 46, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 121, 'deletions': 119, 'state': 'open'}, {'id': 1996904086, 'number': 11241, 'closed': None, 'created': datetime.datetime(2024, 7, 31, 18, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 33, 'deletions': 31, 'state': 'open'}, {'id': 1996904014, 'number': 11240, 'closed': None, 'created': datetime.datetime(2024, 7, 31, 18, 4, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1423, 'deletions': 1636, 'state': 'open'}, {'id': 1996903936, 'number': 11239, 'closed': None, 'created': datetime.datetime(2024, 7, 31, 18, 4, 38, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6, 'deletions': 6, 'state': 'open'}, {'id': 1996903844, 'number': 11238, 'closed': None, 'created': datetime.datetime(2024, 7, 31, 18, 4, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 68, 'deletions': 161, 'state': 'open'}, {'id': 1696463508, 'number': 11149, 'closed': datetime.datetime(2024, 1, 29, 23, 24, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 26, 0, 20, 52, tzinfo=datetime.timezone.utc), 'time_taken': 342241.0, 'time_delta': '3 days, 23:04:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1696462966, 'number': 11148, 'closed': datetime.datetime(2024, 1, 29, 23, 23, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 26, 0, 20, 2, tzinfo=datetime.timezone.utc), 'time_taken': 342234.0, 'time_delta': '3 days, 23:03:54', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 956995883, 'number': 10664, 'closed': datetime.datetime(2022, 6, 3, 5, 5, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 3, 4, 8, 31, tzinfo=datetime.timezone.utc), 'time_taken': 3408.0, 'time_delta': '0:56:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
