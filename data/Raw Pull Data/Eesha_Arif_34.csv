pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
659447732,Fix Part of #10474: Cover more files with TS strict checks,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->


1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Make TS Checks strict for 
-  `assets/constants.ts`
-  `assets/rich_text_components_definitions.ts`   
-  `core/templates/app-events/app-events.ts` 
-  `core/templates/components/entity-creation-services/collection-creation-backend-api.service.ts`
-  `core/templates/components/entity-creation-services/collection-creation-backend-api.service.spec.ts` 
-  `core/templates/components/entity-creation-services/exploration-creation-backend-api.service.ts`
-  `core/templates/components/material.module.ts`
-  `core/templates/domain/promo_bar/promo-bar.model.ts`
-  `core/templates/domain/promo_bar/promo-bar.model.spec.ts`
-  `core/templates/domain/user/user-info.model.ts` 
-  `core/templates/domain/user/user-info.model.spec.ts`
-  `core/templates/services/contextual/window-ref.service.ts`
-  `core/templates/services/contextual/window-ref.service.spec.ts`

**Errors:** This PR covers 5 errors
Removed `skillRightsModel`
![image](https://user-images.githubusercontent.com/43031234/120400270-f9c56880-c356-11eb-85a7-ab7633b2f1c3.png)


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".
## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).

",True,12962,https://api.github.com/repos/oppia/oppia/pulls/12962,https://github.com/oppia/oppia/pull/12962,closed,32,15,6,15,27,30,1,2,[{'name': 'PR: LGTM'}],2021-06-01 23:01:34+00:00,2021-06-12 17:08:27+00:00,929213.0,"10 days, 18:06:53","[{'comment_id': 643649410, 'comment_body': 'Probably add a comment at declarations about why ` | null` has been added as a type here, this will help reviewers to review PRs quickly.', 'comment_created': datetime.datetime(2021, 6, 2, 4, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 643649488, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 2, 4, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 643652956, 'comment_body': ""I'm not sure of the property usage here, adding `| undefined` as type could also solve the issue,why do we need to initialize it with an empty string?"", 'comment_created': datetime.datetime(2021, 6, 2, 4, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 646196972, 'comment_body': ""yes, you are right... we shouldn't initialize it with anything actually. This value is initialized inside the Event classes which extend this baseEvent class. Like stated above, the only purpose of this class is to ensure that `Type` exists."", 'comment_created': datetime.datetime(2021, 6, 6, 22, 35, 26, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 646197037, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 6, 22, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 646197057, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 6, 22, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 646330144, 'comment_body': 'These files were removed with merge of #12790  ,we can remove them from list(this is also causing type checks to fail)', 'comment_created': datetime.datetime(2021, 6, 7, 7, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 646672508, 'comment_body': '```suggestion\r\n    ExplorationCreationBackendApiService;\r\n```', 'comment_created': datetime.datetime(2021, 6, 7, 15, 2, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 646675528, 'comment_body': ""```suggestion\r\n  // The '_skillId' can be null for an interstitial SkillRights object.\r\n  // Check function 'createInterstitialSkillRights' for reference.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 7, 15, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 646677051, 'comment_body': ""```suggestion\r\n  // The default value of the following three properties of 'UserInfo' object\r\n  // should be null, these default values are used when the user is\r\n  // not logged in. Check function 'createDefault' for reference.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 7, 15, 6, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 646678700, 'comment_body': '@EeshaArif This is not addressed.', 'comment_created': datetime.datetime(2021, 6, 7, 15, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 646775208, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 7, 16, 51, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 646930023, 'comment_body': ""Please explain in more detail why it can be null and what a value of null actually means. (See comment below for _preferredSiteLanguageCode, _username, _email.)\r\n\r\nIf you just refer to an existing impl, then that raises the question of whether the impl can be improved so that this is not the case. So it's not a sufficient explanation."", 'comment_created': datetime.datetime(2021, 6, 7, 20, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646930295, 'comment_body': 'It suffices to say ""The following three properties are set to null when the user is not logged in."" That is sufficient justification which constructively explains the meaning of a ""null"" value here.', 'comment_created': datetime.datetime(2021, 6, 7, 20, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 647111729, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 8, 5, 1, 34, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647111747, 'comment_body': 'Have updated the comment to be a little shorter.', 'comment_created': datetime.datetime(2021, 6, 8, 5, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647172631, 'comment_body': ""You don't need the reference to the function (second sentence). See my previous comment about the impl not being relevant. (You only need that part in a comment to the reviewer on the Files Changed tab, and in such comments it might make sense to provide a direct link to the function in question.)"", 'comment_created': datetime.datetime(2021, 6, 8, 7, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 647173777, 'comment_body': ""As I mentioned in the previous comment, this doesn't suffice. You would need to explain the **conceptual reason** for why skill ID has to remain null, similar to the comment for _preferredSiteLanguageCode etc. If there is no good reason, then it may be necessary to refactor the implementation slightly to get rid of the need for the interstitial object. If this is not possible, you should explain clearly why it is impossible to do this."", 'comment_created': datetime.datetime(2021, 6, 8, 7, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 647927922, 'comment_body': '@seanlip \r\nThe way the following comment explains, the interstitial object created is bound to the Skill Editor and will be retained till the time the Skill Editor is active and hence, it needs to have some initial values. When the actual object loads from the backend, the values of the interstitial object **itself** are updated and this update propagates through the Skill Editor.\r\nhttps://github.com/oppia/oppia/blob/45bbb461593eb7b2f861b584e16bf6d9094986b7/core/templates/pages/skill-editor-page/services/skill-editor-state.service.ts#L166-L176\r\n\r\nThe `_skillId` will initially be **(does not remain)** `null` since it is not bound to an actual skill in the backend, it is just used as a placeholder for the Skill Editor until the skill from the backend loads and its values can be populated and used.\r\n\r\nThe same approach has been used for `ConceptCardObject`, `TopicObject` and `SubtopicObject`.\r\n\r\nIn conclusion:\r\n\r\nWe need to create a `SkillRights` and `Skill` object which is bound to the Skill Editor when it initially opens and these objects are retained. The value of `_skillId` of this object is `null` initially because the actual `_skillId` of the skill needs to be loaded from the backend. When it is loaded, the value of `_skillId` of the original object is updated.  ', 'comment_created': datetime.datetime(2021, 6, 9, 2, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647931645, 'comment_body': ""oh alright! I'll keep note of this."", 'comment_created': datetime.datetime(2021, 6, 9, 3, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647939114, 'comment_body': ""But at the point the skill editor is opened, wouldn't we already know the skill ID? For instance, wouldn't the skill ID already be in the URL? I feel like I might be missing something here.\r\n\r\nAlso, you mention that the actual skillId needs to be loaded from the backend. Why does this not apply for the other properties of the skill?"", 'comment_created': datetime.datetime(2021, 6, 9, 3, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 647944328, 'comment_body': 'yes, the `skillId` will be present and is used to load both the `Skill` and `SkillRights` object associated with that specific Id. \r\n\r\nMaybe I worded it wrong, the actual `Skill` and `SkillRights` object needs to be loaded from the backend and then we use the values of all the properties of these objects to populate the Skill Editor.\r\n\r\nSince I mentioned the same approach being used for `Topic`, we initialize all the values to a default, not just the `skillId` when we initially open the editor. \r\nhttps://github.com/oppia/oppia/blob/45bbb461593eb7b2f861b584e16bf6d9094986b7/core/templates/domain/topic/topic-rights.model.ts#L86-L89', 'comment_created': datetime.datetime(2021, 6, 9, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647944762, 'comment_body': 'The default values are used since we do not know the initial values of the properties associated with the Ids since the objects are being loaded from the backend.', 'comment_created': datetime.datetime(2021, 6, 9, 3, 49, 22, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647965450, 'comment_body': ""Perhaps I'm missing something, but why does SkillRights need a skillId in the first place, anyway?\r\n\r\nI also don't see anything corresponding to this in the backend. So I'm wondering, what happens if we get rid of the skillId completely from here, and rely on the Skill object instead as the source of truth for that?"", 'comment_created': datetime.datetime(2021, 6, 9, 4, 55, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 647977890, 'comment_body': ""`skillId` is used to get the `SkillsRight` object given its Id. I am not sure by what you mean by getting rid of the `skillId` property since then we won't be able to identify which skill has that rights. Were you referring to adding the `can_edit_skill_description` property to the `Skill` Object itself and getting rid of the `SkillRights`?"", 'comment_created': datetime.datetime(2021, 6, 9, 5, 31, 13, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 647979323, 'comment_body': ""No, I'm just a bit confused about why skillId (or this entire object) is needed at all, since we don't actually store rights for skills.\r\n\r\nLet's look at the `can_edit_skill_description` property. Is it ever different for different skills on the page? If not, then there's no point in duplicating it for every single skill, right -- it should just be something in a generally-accessible service?"", 'comment_created': datetime.datetime(2021, 6, 9, 5, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 647985839, 'comment_body': 'I checked the permissions and you are right, it is not different for different skills on the page.', 'comment_created': datetime.datetime(2021, 6, 9, 5, 51, 12, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 648473646, 'comment_body': 'Then let\'s get rid of this object altogether and move the ""can edit skill description"" into a service (either the existing one or a new one, whichever makes sense). Will that work? You can consult with @kevintab95 if needed.', 'comment_created': datetime.datetime(2021, 6, 9, 16, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 648762849, 'comment_body': '@vojtechjelinek suggested moving the `can_edit_skill_description`  property to `UserInfo`. \r\nhttps://github.com/oppia/oppia/blob/c714eeb320e0ebf9fe400403569428933658d3f1/core/templates/domain/user/user-info.model.ts#L31-L40\r\n@kevintab95 what do you think about this approach?', 'comment_created': datetime.datetime(2021, 6, 10, 0, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 649287529, 'comment_body': 'Will cover this file in a separate PR.', 'comment_created': datetime.datetime(2021, 6, 10, 15, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': 'a593f809993bec912f50e0afb59a504c7fe57cb8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d899780cb29453a632ba68c32fd54be8af79d5b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d4652a4798850edf852c4fe99776591ba1796da', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c1522049cabdedf8d7dd960be997de703e0bec', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a061578ae3a885b55357790d5b7e1fdc34642f75', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8eae0f3eaa24a1e60d3105b099f9d5c2f346a36', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d3763104c60dfe9126c72b9a41f547211d1bd40', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f509b8a5dc160fd11b628681af69dd81683d9d54', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3adb743bbfedaccedc973280f24793ef0ad43a8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6a29d4865638be9bd8c039fee3d0afcef994d99', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a479fe4bc41c3539e9ee38212eac4563df0d469b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cbb9cf9a21ad268bea544b084ebba2c84a6f5a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c738ab38c156f8926ee144200d9a16088542253c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03d84113ebdd9230e94e27abd4ea5e3e35fc4369', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '738c4b71e4a0ca0e4bda3967380ee022c0c5d187', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
667781863,Fix Part of #10474: Cover some files with TS strict checks - 2,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 
2. This PR does the following: Covers the following files with TS strict checks
   1. `core/templates/domain/classifier/prediction-result.model.ts""` + spec
   2. `core/templates/domain/feedback_message/ThreadMessageSummary.model.ts` + spec
   3. `core/templates/filters/string-utility-filters/truncate-and-capitalize.pipe.ts` + spec
   4. `core/templates/filters/summarize-nonnegative-number.pipe.ts`
   5. `core/templates/services/contextual/url.service.ts` + spec
   6. `core/templates/services/guppy-configuration.service.ts` + spec
   7. `core/templates/services/site-analytics.service.ts` + spec

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
Covers 7 errors:
![Screenshot from 2021-06-11 12-27-59](https://user-images.githubusercontent.com/43031234/121648549-111bf880-cab1-11eb-8661-9ad63188e539.png)


<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13050,https://api.github.com/repos/oppia/oppia/pulls/13050,https://github.com/oppia/oppia/pull/13050,closed,29,20,6,14,15,17,1,2,[{'name': 'PR: LGTM'}],2021-06-11 07:33:52+00:00,2021-06-18 00:20:07+00:00,578775.0,"6 days, 16:46:15","[{'comment_id': 649839089, 'comment_body': 'Is there a use case in codebase where `maxNumberOfCharacters` has been passed as null ?(Apart from the tests)', 'comment_created': datetime.datetime(2021, 6, 11, 9, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650454265, 'comment_body': 'I could not find any usecase of this pipe inside the codebase, but having a None value for `maxNumberOfCharacters` makes sense. We can also refactor it and make `maxNumberOfCharacters` an optional parameter but a `CapitalizePipe` already exists for this purpose.', 'comment_created': datetime.datetime(2021, 6, 13, 1, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650497783, 'comment_body': ""This is used in `collection-summary-tile` , `exploration-summary-tile` and `information-card-modal` but with `maxNumberOfCharacters` as a parameter. I also think that this property can be null as mentioned in the test but making this optional would be better than making it null? I'm not sure if we make this ' | null ' then we have to use it like {{ .. | truncateAndCapitalize: null }} or just {{ .. | truncateAndCapitalize }} , can you confirm?"", 'comment_created': datetime.datetime(2021, 6, 13, 9, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650640338, 'comment_body': 'I think making it optional brings a certain level of ambiguity with what the pipe is doing. When making it `| null`, we would have to specify an argument for the parameter since `null` is a value. So, we will have to use it like ` {{ .. | truncateAndCapitalize: null }} `. \r\n\r\nIn any case, keeping the `null` value makes sense logically. wdyt?', 'comment_created': datetime.datetime(2021, 6, 14, 4, 18, 31, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650685658, 'comment_body': ' One would prefer to use `CapitalizePipe` instead of this notation `{{ .. | truncateAndCapitalize: null }}` then , I think the respective test should be removed here and we should make this property mandatory? @vojtechjelinek wdyt about this?', 'comment_created': datetime.datetime(2021, 6, 14, 6, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650686223, 'comment_body': ""`eslint-disable-next-line` why is this needed here? Also we're checking for input to exist in `if` condition so why would it be a empty string. Maybe check for not to be empty string as well?"", 'comment_created': datetime.datetime(2021, 6, 14, 6, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650686485, 'comment_body': ""Can we explain a bit more about `Pick` in a single or two line here? Since this might be the first place we're using this notation"", 'comment_created': datetime.datetime(2021, 6, 14, 6, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 652328330, 'comment_body': 'I do think it is pretty self explanatory and not needed. We were not explaining `Record<>` anywhere in the code either, since it is a built-in type for typescript.', 'comment_created': datetime.datetime(2021, 6, 16, 3, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652331960, 'comment_body': '`eslint-disable-next-line` is needed for the following reason:\r\n![Screenshot from 2021-06-16 08-57-49](https://user-images.githubusercontent.com/43031234/122155712-fbc41700-ce80-11eb-9069-ff497b6c8334.png)\r\n\r\nand I am not sure by what you mean by why it would be an empty string? and checking for it to be an empty string?', 'comment_created': datetime.datetime(2021, 6, 16, 3, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652452557, 'comment_body': ""I mean why is this comment needed at all, it was not there before? Something like this should work: \r\n``` typescript\r\n    if (!input && input === '') {\r\n      return input;\r\n    }\r\n    let words = input.trim().match(/\\S+/g);\r\n\r\n    // Capitalize the first word and add it to the result.\r\n    if (words === null) {\r\n      throw new Error('No words found');\r\n    }\r\n    let result = words[0].charAt(0).toUpperCase() + words[0].slice(1);\r\n```\r\nI have added the condition where we check for it to be an empty string so if null or undefined return the same string and if empty then also return empty. You will have to add a test for error thrown."", 'comment_created': datetime.datetime(2021, 6, 16, 8, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 652453712, 'comment_body': ""I still think the particular test case should be removed, I'm approving to unblock my review!!"", 'comment_created': datetime.datetime(2021, 6, 16, 8, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 652639519, 'comment_body': 'Yeah, lets make it required.', 'comment_created': datetime.datetime(2021, 6, 16, 12, 28, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 652643252, 'comment_body': 'Yeah, I would agree with @mridul-netizen approach.', 'comment_created': datetime.datetime(2021, 6, 16, 12, 33, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 652643715, 'comment_body': '```suggestion\r\n  // Check https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 12, 34, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 653641194, 'comment_body': ""The `eslint-disable-next-line` was needed because I used a `(!) non-null assertion`  for the line\r\n```typescript\r\nlet words = input.trim().match(/\\S+/g)!;\r\n```\r\n\r\nThe comment was needed to explain why `words` can never be `null`. `match()` for this particular regexp will only return `null` on an empty string. Now, since `!input` will be also be `true` for when `input == ''` and this condition was already being checked before the statement where `match()` was called, `words` will simply just never be `null`.\r\n\r\nTaking a look at @mridul-netizen approach, the following condition can **never** happen: We cannot even write tests for it. It is unreachable.\r\n```typescript\r\nif (words === null) {\r\n      throw new Error('No words found');\r\n    }\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 14, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 653663932, 'comment_body': ""```suggestion\r\n    Pick<Location, 'href' | 'origin' | 'pathname' | 'hash' | 'search'>;\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 15, 16, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 653669875, 'comment_body': ""```suggestion\r\n    // The following regexp match will only return 'null' on an empty input\r\n    // string, the empty string condition is already being checked above. \r\n    // Non-null assertion is used to make the TypeScript typing happy.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 15, 21, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': '5c60361246a80e8a116ec7b52e1d415d44344f85', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2e64394bcccbf198d2c2320641d5bd2b6924c96', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5285af3a838a272aafa7482fa9bc12e35834892d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a268249256287790b4176794568ed9b4db91e8de', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd36775abd0639f61aaac481b23d637b9370106d4', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4fdee442523fd258bdb02f559a0e6668379ba33', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4d935ff79d6d86b9a1e0f1d95248fb6142ae1fb', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0e367bca6aa93531375b10d850b2b133897facb', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281fa3d382b6b797d09d2af16eb8e78a368a090f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff619e24f0512f87fe4b9f9c1db5f953a695ae67', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '668ba482a03a704f5542a551910bf81cdc4d7f91', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cafb855d08eed406ca260909700c61dafdb11dbe', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b8a9040935379f68d4df6d56182b7760a7d662', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '623c757d0fd2541d5c842f9c912333ebb1b200ae', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
666928607,Fix part of #10474: Cover some files with TS strict checks - 3,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Cover the following files with TS Strict checks:
`core/templates/components/profile-link-directives/profile-link-image-backend-api.service.ts and spec`
`core/templates/domain/summary/learner-exploration-summary.model.ts and spec`
`core/templates/domain/skill/rubric.model.ts`
`core/templates/base-components/loading-message.component.ts`
`core/templates/components/common-layout-directives/common-elements/lazy-loading.component.ts`
`core/templates/components/common-layout-directives/common-elements/loading-dots.component.ts`
`core/templates/components/profile-link-directives/profile-link-image.component.ts`

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
fixes 4 errors:
![Screenshot from 2021-06-10 18-05-28](https://user-images.githubusercontent.com/43031234/121540263-c7cf9880-ca1f-11eb-9b53-518479026f3f.png)


<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13043,https://api.github.com/repos/oppia/oppia/pulls/13043,https://github.com/oppia/oppia/pull/13043,closed,27,9,4,22,27,23,0,2,[],2021-06-10 14:07:18+00:00,2021-06-29 12:07:51+00:00,1634433.0,"18 days, 22:00:33","[{'comment_id': 649706188, 'comment_body': 'Should we rather mention point number here like [TS-7-1] along with the link?\r\n(After wiki gets updated)', 'comment_created': datetime.datetime(2021, 6, 11, 5, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 649708260, 'comment_body': ""[optional]\r\n```suggestion\r\n  // It will return a 'null' Promise in the following cases:\r\n  // 1. The user is not logged in\r\n  // 2. The user didn't uploaded a profile picture\r\n  // 3. The player is in preview mode.\r\n```"", 'comment_created': datetime.datetime(2021, 6, 11, 5, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 649708338, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 11, 5, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 649710736, 'comment_body': ""@vojtechjelinek recommended putting up a small description alongside the link of the wiki. When the wiki is up, I think we can put the link to the specific section and then there won't be a need to specify the case number explicitly. what do you think?"", 'comment_created': datetime.datetime(2021, 6, 11, 5, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 649711569, 'comment_body': 'I think this is more neat, thanks @mridul-netizen!', 'comment_created': datetime.datetime(2021, 6, 11, 6, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 649713920, 'comment_body': 'Yes the exact link to that particular case would be fine!', 'comment_created': datetime.datetime(2021, 6, 11, 6, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650454868, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 13, 1, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650455186, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 13, 1, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650559701, 'comment_body': 'Commented this on your other PR, please use the same comment here.', 'comment_created': datetime.datetime(2021, 6, 13, 18, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650559741, 'comment_body': ""```suggestion\r\n  // This function will return a 'null' Promise in the following cases:\r\n```"", 'comment_created': datetime.datetime(2021, 6, 13, 18, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650559786, 'comment_body': ""```suggestion\r\n  // 2. The user didn't upload a profile picture\r\n```"", 'comment_created': datetime.datetime(2021, 6, 13, 18, 17, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650559834, 'comment_body': ""Who is 'player' in the two previous points you're talking about 'user'."", 'comment_created': datetime.datetime(2021, 6, 13, 18, 18, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650559841, 'comment_body': '```suggestion\r\n      Promise<string | null> {\r\n```', 'comment_created': datetime.datetime(2021, 6, 13, 18, 18, 23, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650559854, 'comment_body': '```suggestion\r\n      this.profileImageUrl\r\n    ).then((base64ProfilePicture: string | null) => {\r\n```', 'comment_created': datetime.datetime(2021, 6, 13, 18, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650636491, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 14, 3, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650654006, 'comment_body': '![Screenshot from 2021-06-14 10-14-43](https://user-images.githubusercontent.com/43031234/121842198-69453b80-ccf9-11eb-9871-0abf7a68dc5c.png)\r\nIt is referring to the above when the player in the exploration editor is in preview mode.', 'comment_created': datetime.datetime(2021, 6, 14, 5, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 651009899, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```\r\nditto elsewhere\r\n', 'comment_created': datetime.datetime(2021, 6, 14, 14, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 651011309, 'comment_body': 'Okay, try to explain it in the comment in a better way then.', 'comment_created': datetime.datetime(2021, 6, 14, 14, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 651016542, 'comment_body': 'Why these can be undfined?', 'comment_created': datetime.datetime(2021, 6, 14, 14, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 652353180, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 16, 5, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652354817, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 16, 5, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652355389, 'comment_body': 'since they were not preceded by a decorator, the properties are not, be default, initialized in the lifecycle hooks but in this case, they were. Have corrected.', 'comment_created': datetime.datetime(2021, 6, 16, 5, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652627374, 'comment_body': '```suggestion\r\n  // 3. The user uses preview mode inside the exploration editor.\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 12, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': '001086f970b4cf07b379f241315cc136927b69fd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7df4d18bc065bfa7d8a9b6e78bf96d52ce08cd9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ef57555681a87593a342c334c7534b554fa3e15', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebd84a4bfe5408a717ecbc73ec2c53abaa8afd0e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb8d5994a5b719cbd83a002e3fd83e345e1ceea2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321595b5c6a633750350517bc4f39c35288006da', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '944be499fe41480217f70e082e6d8cb3e901eb01', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '800cf6e93a454b559345a212a4c9205426c2f335', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e1015ef7923dbe33e6156c1dc57b988b8a5af7', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5ce3d7cb5c9c82b04e71e024b0ad36aa68cda8b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84a357bbfd7576794bdb96400faa666e6b13ffc1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84ab30cb0aa276a2b84e8c26037bea12abf1fb40', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b801c3972b274757a9f0c97c1d561bb32925c7d5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53d545908433b4e8d306ec5d2a5fde37ded42ef6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a34f7fe3700574eab0e1782fb9ca28bf7a04568', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94f5ac57368606ec210e0ed75790b9764f897c7a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54e035edc3fba43aad7442e1ca160e4ff609f546', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff3d8976497bfa95021c7581b351c442285fa29d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc0b1b3f8123a69f9a1efd097335f9ca41e22eb5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad73677033cb10a75ec29d647b523f36e66dba0f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '591d6eaf012e3a97144ff397ec7bd8819b211d99', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '781905f75dd394054198ba1e25d59b5cbbdf3ada', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
667614622,Fix Part of #10474: Cover some files with TS strict checks - 4,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes TS Checks strict for:
    1. `core/templates/components/forms/custom-forms-directives/audio-file-uploader.component.ts and spec`
    2. `core/templates/components/profile-link-directives/profile-link-text.component.ts`
    3. `core/templates/components/skills-mastery-list/skills-mastery-list.constants.ts`
    4. `core/templates/domain/skill/skill-domain.constants.ts`
    5. `core/templates/domain/skill/skill-mastery.model.ts and spec`
    6. `core/templates/components/common-layout-directives/common-elements/confirm-or-cancel-modal.component + spec`
    7. `core/templates/domain/skill/skill-summary.model.ts and spec`
    8. `core/templates/pages/story-editor-page/story-editor-page.constants.ts`
    9. `core/templates/domain/skill/short-skill-summary.model.ts and spec`
   10. `core/templates/domain/topic/topic-domain.constants.ts`
   11. `core/templates/domain/topics_and_skills_dashboard/topics-and-skills-dashboard-domain.constants.ts`
   12. `core/templates/filters/string-utility-filters/filter-for-matching-substring.pipe.ts`

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
Covers 6 errors:

![Screenshot from 2021-06-10 20-56-53](https://user-images.githubusercontent.com/43031234/121623436-20874b80-ca89-11eb-95c7-971bab78c118.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13047,https://api.github.com/repos/oppia/oppia/pulls/13047,https://github.com/oppia/oppia/pull/13047,closed,34,12,4,14,23,17,1,1,[{'name': 'PR: LGTM'}],2021-06-11 02:55:29+00:00,2021-06-17 23:59:31+00:00,594242.0,"6 days, 21:04:02","[{'comment_id': 649656699, 'comment_body': 'This condition is already being checked here:\r\n\r\nhttps://github.com/oppia/oppia/blob/14d9f1e8b59fd6dd5c3ccea8fe4fb903379e20f9/core/templates/components/forms/custom-forms-directives/audio-file-uploader.component.ts#L59-L65\r\n\r\n`file` will exist whenever `validateUploadedFile` is called. It was an unreachable condition and was removed.', 'comment_created': datetime.datetime(2021, 6, 11, 3, 2, 55, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 649710642, 'comment_body': 'Should these be refractored to contain point [TS-7-1] as a reference?', 'comment_created': datetime.datetime(2021, 6, 11, 5, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 649713071, 'comment_body': 'Okay, but we should tackle this returned error message and place it in `addAudio` function maybe something like\r\n```\r\n if (!file) {\r\n      this.fileClear.emit();\r\n      this.errorMessage = this.validateUploadedFile(file);\r\n      return;\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 6, 11, 6, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 649713196, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 6, 11, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 649737594, 'comment_body': ""ummm, I don't think there is a need to display the message in the first place. The save button is **disabled** whenever the file is not uploaded. \r\n\r\nThe way the `!file` condition reaches is when we have uploaded a file already and then we attempt to re-upload a file but cancel it.\r\nHence if we make the change you have suggested above then the following happens. \r\n\r\nhttps://user-images.githubusercontent.com/43031234/121644424-699cc700-caac-11eb-824b-24988121f0ac.mp4\r\n\r\n\r\nI think it is more of a UX decision, having the save button disabled with the **no file chosen** displayed alongside `choose file` button and **also** displaying the error message seems redundant, don't you think?"", 'comment_created': datetime.datetime(2021, 6, 11, 6, 59, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 649770831, 'comment_body': 'Not sure, but this error message only display on clicking the cancel button and not for the first time, so I think this should be a right behaviour? @srijanreddy98 @vojtechjelinek wdyt?', 'comment_created': datetime.datetime(2021, 6, 11, 7, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650455932, 'comment_body': 'I am not quite sure about the context, which behavior should be the right one?', 'comment_created': datetime.datetime(2021, 6, 13, 1, 44, 32, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650481150, 'comment_body': 'Approving to unblock my review, I only have last concern with these changes @srijanreddy98 @vojtechjelinek PTAL!', 'comment_created': datetime.datetime(2021, 6, 13, 7, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650560150, 'comment_body': 'Use the same format as in the other PRs.', 'comment_created': datetime.datetime(2021, 6, 13, 18, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650560486, 'comment_body': ""I'm fine with both approaches, but I think uploading the file and then doing it again but clicking the cancel number is so rare case that I'm fine with removing the code."", 'comment_created': datetime.datetime(2021, 6, 13, 18, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650560595, 'comment_body': 'On the other hand, looking at this function separately I think the condition should be kept since `null` is not a valid file.', 'comment_created': datetime.datetime(2021, 6, 13, 18, 25, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650638344, 'comment_body': '@vojtechjelinek Take a look at the following code as stated above. \r\n\r\nhttps://github.com/oppia/oppia/blob/14d9f1e8b59fd6dd5c3ccea8fe4fb903379e20f9/core/templates/components/forms/custom-forms-directives/audio-file-uploader.component.ts#L59-L65\r\n\r\n `null` will not be passed as an argument for `file` since the condition is already being checked. Hence, even if we keep the condition, it will never be reached.\r\n', 'comment_created': datetime.datetime(2021, 6, 14, 4, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650638696, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 14, 4, 10, 33, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 651007665, 'comment_body': ""That doesn't really matter, but now I realize that the `null` cannot get there now since it will be typechecked. I'm fine with removing it then."", 'comment_created': datetime.datetime(2021, 6, 14, 14, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 651007996, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```\r\nditto elsewhere', 'comment_created': datetime.datetime(2021, 6, 14, 14, 38, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 652345759, 'comment_body': 'alright.', 'comment_created': datetime.datetime(2021, 6, 16, 4, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652345895, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 16, 4, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '3c83f46214a79d0a51cc31744068c1b7b43467f9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ec29dc6c896ec3e85c705f2a027e31402abccd2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aafcd1109cc8862e609f830d8eee0331a835c1a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f2b63dbc6a9c4c20e73d1381a223b5800bbfca0', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d80a3c4f043f1671f2173d7ed77876a4ff4c720', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '438494d880a7b8739eb000623a5e27b361a621f6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0f37b55a60f9b3d88ff534c0e2882eb2fc26b49', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8f21db2d17a6a6f4ba5d1dbe427d04bc36a8f5f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac071d1fba174dbfe9584ba32489fad2239b02b3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '639559ef6f5368339d16a0efe290a4c40f66a89f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21e577aaf37d9804f06bf4bdcc82a8fd0367bf53', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80348ee75466119f1148d1ebabeb602d5b91a904', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f531feb65307f01c2983db3414348afcbd6bea40', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed6347db33ccf43fbd2193644eae555f786d9b2d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
668717404,Fix Part of #10474: Cover some files with TS strict checks - 5,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Covers the following files with TS Strict checks:
   1. `extensions/objects/templates/html-editor.component.ts`    
   2. `extensions/objects/templates/int-editor.component.ts`    
   3. `extensions/objects/templates/list-of-tabs-editor.component.ts` 
   4. `extensions/objects/templates/list-of-unicode-string-editor.component.ts`
   5. `extensions/objects/templates/logic-error-category-editor.component.ts`
   6. `extensions/objects/templates/nonnegative-int-editor.component.ts`
   7. `extensions/objects/templates/positive-int-editor.component.ts`
   8. `extensions/objects/templates/positive-int-editor.component.spec.ts`
   10. `extensions/objects/templates/sanitized-url-editor.component.ts`
   11. `extensions/objects/templates/set-of-unicode-string-editor.component.ts`
   12. `core/templates/services/external-rte-save.service.spec.ts`

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
Covers 17 errors:
![Screenshot from 2021-06-12 07-16-47](https://user-images.githubusercontent.com/43031234/121762927-390f6880-cb52-11eb-948b-85858915e7c0.png)
![Screenshot from 2021-06-12 08-45-05](https://user-images.githubusercontent.com/43031234/121764077-868fd380-cb5a-11eb-87ad-27c911a85674.png)


<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13057,https://api.github.com/repos/oppia/oppia/pulls/13057,https://github.com/oppia/oppia/pull/13057,closed,90,26,11,27,15,20,1,1,[{'name': 'PR: LGTM'}],2021-06-12 02:46:46+00:00,2021-06-17 23:37:54+00:00,507068.0,"5 days, 20:51:08","[{'comment_id': 650480514, 'comment_body': 'Can leave a line after this.', 'comment_created': datetime.datetime(2021, 6, 13, 7, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650480677, 'comment_body': 'leave a line here', 'comment_created': datetime.datetime(2021, 6, 13, 7, 3, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 650559166, 'comment_body': '```suggestion\r\n  // These properties are initialized using Angular lifecycle hooks \r\n  // and we need to do non-null assertion, for more information see\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 13, 18, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650559207, 'comment_body': 'Ditto in other places.', 'comment_created': datetime.datetime(2021, 6, 13, 18, 12, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650635017, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 14, 3, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650635034, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 14, 3, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650635855, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 14, 3, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 650995726, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 14, 14, 24, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650995887, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2021, 6, 14, 14, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 650996347, 'comment_body': 'Should you use `Record` here?', 'comment_created': datetime.datetime(2021, 6, 14, 14, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 652326072, 'comment_body': 'We would still have to declare an interface if we use `Record<,>` here. We can do `validators: Record<string, string>[]` but not `validators: Record<id, string>[]`. \r\nAs can be seen in [record type](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype)', 'comment_created': datetime.datetime(2021, 6, 16, 3, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652326777, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652326833, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652326906, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 42, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652326975, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652327030, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 42, 53, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652327093, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652327135, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652327190, 'comment_body': '```suggestion\r\n  // https://github.com/oppia/oppia/wiki/Guide-on-defining-types#ts-7-1\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 652327607, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 6, 16, 3, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': 'cd55affa374d3cd951a89c24ee60d8b3890668b3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25ba8cbac5d79e7971837f853fd57a4687e71028', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '924eaf7ac770914bd57f5e18f92e0bfd9f674124', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f55ae2250a57f73128072bed49921e97085a06', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd71b5a5ebf2bef933d1e071801b4dbc12f9984f6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '261e4891a712c34042cffac9fd9b47fb9c044daf', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25b055dfeeb84fc67ede3d55a02001ef8cf245a5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42f8d59a275d2ee7c6977f1f19209a5d3b641c67', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038ff9feb55964f96a66fd02e51291b364ebbd82', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6627d72a2996b6f9a5c8ab4f6885a545146e3748', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92c395008831c076f060ed2c8d21536fa78c0b2a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2e8c753bd04b65314abc80746e4f8ad4f021717', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71f8e0ba4f1e8e88fe2f6808b084eb6eaf58f732', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a3cc97f926e14bd65495d091d7199fd024e0590', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c43126ccd51024c278a8514148e350cc9ee2deae', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ca5c9b70708676d1c147153f882540427ead080', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8395b67172fa2c7443d4d8096e9a6c97a93c2409', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52427ee4a9aac0a92489c8c27159df0a84e89c33', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e664469fa1ba6cea26ba479eb52d31d6de044a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb7ae9399cd7fb82183311e258f82809103c6169', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70f75655ad172000d61de059f55a836b28740eca', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f9b7762c50c83998c05cf035daa3fae9834afc6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c77ff8e978611fc6ce70d63404c2109efd20b5a5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a8a023bcfa1cf32f9bc16d7b03d3f81f2806ca6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a3523ba0f89efcf7025e5ded22313d1d511f2d1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e33630501817e3f6a893f602c66e6c7b3ba1366a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc4b38e010c12c0b19e9aa8c1a63ec18afcadf5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
680276462,Fix Part of #10474: Cover some files with TS strict checks - 6,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes typescript checks strict for the following files:
     1. core/templates/domain/platform_feature/feature-status-summary.model.ts
     1. core/templates/pages/exploration-editor-page/services/editor-first-time-events.service.spec.ts
     1. core/templates/pages/exploration-editor-page/services/editor-first-time-events.service.ts
     1. core/templates/pages/learner-dashboard-page/suggestion-modal/learner-dashboard-suggestion-modal.component.ts
     1. core/templates/pages/learner-dashboard-page/suggestion-modal/suggestion-modal-for-learner-dashboard.service.spec.ts
     1. core/templates/pages/learner-dashboard-page/suggestion-modal/suggestion-modal-for-learner-dashboard.service.ts
     1. core/templates/services/bottom-navbar-status.service.spec.ts
     1. core/templates/services/platform-feature.service.spec.ts
     1. core/templates/services/platform-feature.service.ts
     1. core/templates/services/schema-undefined-last-element.service.spec.ts
     1. core/templates/services/schema-undefined-last-element.service.ts
     1. extensions/interactions/CodeRepl/directives/oppia-short-response-code-repl.component.ts
     1. extensions/interactions/Continue/directives/oppia-response-continue.component.spec.ts
     1. extensions/interactions/Continue/directives/oppia-response-continue.component.ts
     1. extensions/interactions/Continue/directives/oppia-short-response-continue.component.spec.ts
     1. extensions/interactions/Continue/directives/oppia-short-response-continue.component.ts
     1. extensions/interactions/FractionInput/directives/oppia-short-response-fraction-input.component.spec.ts
     1. extensions/interactions/ImageClickInput/directives/oppia-response-image-click-input.component.ts
     1. extensions/interactions/InteractiveMap/directives/oppia-short-response-interactive-map.component.ts
     1. extensions/interactions/LogicProof/directives/oppia-short-response-logic-proof.component.ts
     1. extensions/interactions/MultipleChoiceInput/directives/oppia-short-response-multiple-choice-input.component.ts


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
**Errors:** Covers 21 files with 44 errors
![Screenshot from 2021-06-29 23-27-14](https://user-images.githubusercontent.com/43031234/123848850-99afeb00-d931-11eb-8662-ddc77e128965.png)
![Screenshot from 2021-06-29 23-28-25](https://user-images.githubusercontent.com/43031234/123849015-c49a3f00-d931-11eb-8b8e-81c76f23846b.png)
![Screenshot from 2021-06-29 23-30-50](https://user-images.githubusercontent.com/43031234/123849308-15119c80-d932-11eb-8c55-eb450ead1da5.png)
![Screenshot from 2021-06-29 23-31-46](https://user-images.githubusercontent.com/43031234/123849422-37a3b580-d932-11eb-95ec-1d70bfea4481.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13263,https://api.github.com/repos/oppia/oppia/pulls/13263,https://github.com/oppia/oppia/pull/13263,closed,211,140,22,11,15,6,1,2,[{'name': 'PR: LGTM'}],2021-06-29 18:35:22+00:00,2021-07-07 17:13:11+00:00,686269.0,"7 days, 22:37:49","[{'comment_id': 660882754, 'comment_body': 'Not sure about the existing code here, `.get` returns a value of type ` V | undefined` and `.has` returns a boolean. So why are we returning some value of type `V` (not undefined with the check present) in a function having return type of boolean. Should `.get` be replaced by `.has` ?', 'comment_created': datetime.datetime(2021, 6, 29, 18, 54, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 660889737, 'comment_body': ""I don't think there is a need of `?` operator, Can you check once ?"", 'comment_created': datetime.datetime(2021, 6, 29, 19, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 660896462, 'comment_body': 'Should an error be thrown if `sessionId` and `sessionIdInDev` are undefined?', 'comment_created': datetime.datetime(2021, 6, 29, 19, 15, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 661138340, 'comment_body': 'The return type `boolean` is referring to the `flag` which we get from the map `featureNameToFlag`. \r\nThe only way `get(featureName)` returns `undefined` is if there is no entry for that featureName inside the map. `has()` was being used to make sure there is an entry for that `featureName` before calling `get()` but the compiler could not implicitly figure out that `get()` would not return `undefined` and hence still gave out a warning. \r\n\r\nSo, I removed the `has()` and directly called `get()` which gives out the same error as before if the entry is not present.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 661139339, 'comment_body': 'No, there is no need since we are returning `null` if both `sessionId` and `sessionIdInDev` are `undefined`', 'comment_created': datetime.datetime(2021, 6, 30, 5, 22, 51, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 661140328, 'comment_body': 'yes, `opt` could actually be `undefined` so there is a need for `?` operator.', 'comment_created': datetime.datetime(2021, 6, 30, 5, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': 'db2db260726cab5da3d1208a1515c00602057c6c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e05174fafa8afcb09d469692d1ff774f4133a0f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '768bc6580ecd5c3513309ee6bdf43ba114485bd5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e196fca97402a994df0445b4a3edbe1a49dcce6b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a8d70cc88fc645840dbce37e6362899ffc643b3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c086ebbfa20c61e79ac75db638cacb50246a61b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '069a62c2139b359954b712b175b738f59fd9d81d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73546b64ce0907b08dd8b587d3659d8816d76e01', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '610558de37e3836ea2cd7e438ebb676b32468824', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aef704a66f412c8cc6e1c729dc1600ebb8af39d8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9915dff93afa5ff3caf5db37db4298a1931ffa8e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
680817585,Fix Part of #10474: Cover some files with TS strict checks - 7,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474.
2. This PR does the following: Adds TS Strict checks for the following files:

core/templates/components/common-layout-directives/common-elements/promo-bar.component.ts
core/templates/components/common-layout-directives/navigation-bars/side-navigation-bar.component.ts
core/templates/domain/admin/job.model.spec.ts
core/templates/domain/admin/job.model.ts
core/templates/domain/exploration/exploration-metadata.model.spec.ts
core/templates/domain/feedback_message/feedback-message-summary.model.ts
core/templates/filters/string-utility-filters/truncate-at-first-line.pipe.spec.ts
extensions/classifiers/text-input.tokenizer.spec.ts
extensions/classifiers/text-input.tokenizer.ts
extensions/interactions/LogicProof/directives/oppia-response-logic-proof.component.ts
extensions/interactions/MultipleChoiceInput/directives/oppia-response-multiple-choice-input.component.ts
extensions/interactions/MultipleChoiceInput/directives/oppia-response-multiple-choice-input.component.spec.ts
extensions/interactions/SetInput/directives/oppia-response-set-input.component.ts
extensions/interactions/SetInput/directives/oppia-short-response-set-input.component.ts
extensions/interactions/TextInput/directives/oppia-response-text-input.component.ts
extensions/interactions/TextInput/directives/oppia-short-response-text-input.component.ts
extensions/objects/templates/real-editor.component.ts
extensions/objects/templates/set-of-translatable-html-content-ids-editor.component.ts
extensions/objects/templates/subtitled-html-editor.component.ts
extensions/interactions/MultipleChoiceInput/directives/oppia-short-response-multiple-choice-input.component.spec.ts


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
Covers 20 files with 37 errors:
![Screenshot from 2021-06-30 17-08-21](https://user-images.githubusercontent.com/43031234/123957907-d4fbf980-d9c5-11eb-9767-bc3a9ade1b56.png)
![Screenshot from 2021-06-30 17-09-45](https://user-images.githubusercontent.com/43031234/123958036-0379d480-d9c6-11eb-948d-8c44bfdf0f4f.png)
![Screenshot from 2021-07-08 13-17-54](https://user-images.githubusercontent.com/43031234/124887799-f032be80-dfee-11eb-8217-add0afd7a34b.png)
![Screenshot from 2021-07-14 16-49-21](https://user-images.githubusercontent.com/43031234/125617278-fa1e1dae-fe52-42e4-95a3-68c353abad88.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13270,https://api.github.com/repos/oppia/oppia/pulls/13270,https://github.com/oppia/oppia/pull/13270,closed,134,68,21,23,19,8,1,1,[{'name': 'PR: LGTM'}],2021-06-30 12:10:56+00:00,2021-07-09 09:32:02+00:00,768066.0,"8 days, 21:21:06","[{'comment_id': 661533144, 'comment_body': 'Why making a boolean undefined ? Can we make this property to be not optional as when this is undefined it will be false only?', 'comment_created': datetime.datetime(2021, 6, 30, 14, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 661546491, 'comment_body': 'Checkout this once, if we make the return type of this function to ` | null` then `textInputTokens` at `TextInputPredictionService` will have a null value and the method to which `textInputTokens` is passed i.e. `.vectorize` at `CountVectorizerService` also supports a null value. So either make the return type of function to `| null` or remove `null` as the type at `CountVectorizerService`. I think we should make the return type to be `| null` here.', 'comment_created': datetime.datetime(2021, 6, 30, 14, 46, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 662754632, 'comment_body': 'we are actually getting the data through http requests and the JSON object being returned for `recentJobData` would not have this property. so, even if we keep the type as `boolean`, the value will still be `undefined` when we get the object.\r\n\r\nhttps://github.com/oppia/oppia/blob/d33731cb23e79e9d460172825e8825a5fd6a2d7d/core/templates/pages/release-coordinator-page/services/release-coordinator-backend-api.service.ts#L78-L93', 'comment_created': datetime.datetime(2021, 7, 2, 5, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 662767479, 'comment_body': 'yes, making the return type `null` makes more sense, Updated!', 'comment_created': datetime.datetime(2021, 7, 2, 6, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 662793534, 'comment_body': 'Not really sure what you meant here, maybe mentors can help @srijanreddy98 @vojtechjelinek PTAL', 'comment_created': datetime.datetime(2021, 7, 2, 7, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 663308242, 'comment_body': '@brianrodri has a better understanding of this... Is there a chance that `canBeCanceled` be undefined?', 'comment_created': datetime.datetime(2021, 7, 3, 3, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663366587, 'comment_body': 'I think the response could have it missing, but we should keep it as a boolean here (if it _is_ missing, then just make it false)', 'comment_created': datetime.datetime(2021, 7, 3, 13, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'brianrodri', 'type': 'User'}, {'comment_id': 663443787, 'comment_body': 'done! it is `false` wherever it is missing ', 'comment_created': datetime.datetime(2021, 7, 4, 4, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '2967f2d0bd3c880f46ce1c2eda0f44adeb78c4a2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '257bd23f6241e1e425d2bd04205246413b55ddce', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021822a41bb6493ff390d20b11b509e9b583f569', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef394fc32044fd7dae5d935de3a3bbdc21333f59', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f7a5bb18aae412597bb7fb84bbfb26db61ef14c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34c27f7de6a4dc6c6b39280d4d318b77461adef2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52ba7cdd4ee9ed002ebd064ae6832eb9a252d115', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0906a973eeb92dc9b1dc3740bea5cf827c9e3609', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33734926bf163876c261d13613ba769a02018888', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb5ca65991f3ff68c4093f3cb820fa3fa8362148', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e66d0554229cc2ce735096852abe95de68420def', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4af922e5fa3a6e6d06c125d8f7b6aa0920eaa678', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de6cfe9d524a783a9c0ba602944702309b951efb', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4762f4a2bcbe3e40380313c8801a39909736335c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8b0f77066640cd59ec416e164dab2369a999cc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877ce1d36e32e2191436f4c29f78c7d0e0fcc22b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '994ae19e0613471ebfa9c855783b4ed86aafd694', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd69ced940a5937da4a379288dc7f8b97ad9782f3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af73743dfbd2b4c07d5d3119f9a8c17ff8acea5c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd203bbdb1a3aa4c0e487a60e1ca5bc536d0865fc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '699fb70b1f233eeda0cb6eb02b0b674461992013', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6327b9fdac44be0fab37eb1272175f868c4cd3f1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cbc39a22310b639ccc192ad3162644ce2affdb6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
682973070,Fix Part of #10474: Cover some files with TS strict checks - 8,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes TS checks strict for the following files:
    1. core/templates/domain/objects/NumberWithUnitsObjectFactory.ts
    1.  core/templates/domain/objects/NumberWithUnitsObjectFactorySpec.ts
    1.  core/templates/services/interaction-specs.service.ts
    1.  extensions/interactions/AlgebraicExpressionInput/directives/algebraic-expression-input-validation.service.spec.ts
    1.  extensions/interactions/AlgebraicExpressionInput/directives/algebraic-expression-input-validation.service.ts
    1.  extensions/interactions/CodeRepl/directives/code-repl-validation.service.spec.ts
    1.  extensions/interactions/Continue/directives/continue-validation.service.spec.ts
    1.  extensions/interactions/DragAndDropSortInput/directives/drag-and-drop-sort-input-validation.service.spec.ts
    1.  extensions/interactions/DragAndDropSortInput/directives/drag-and-drop-sort-input-validation.service.ts
    1.  extensions/interactions/EndExploration/directives/end-exploration-validation.service.spec.ts
    1.  extensions/interactions/EndExploration/directives/end-exploration-validation.service.ts
    1.  extensions/interactions/GraphInput/directives/graph-input-validation.service.spec.ts
    1.  extensions/interactions/GraphInput/directives/graph-input-validation.service.ts
    1.  extensions/interactions/ImageClickInput/directives/image-click-input-validation.service.spec.ts
    1.  extensions/interactions/ImageClickInput/directives/image-click-input-validation.service.ts
    1.  extensions/interactions/InteractiveMap/directives/interactive-map-validation.service.spec.ts
    1.  extensions/interactions/InteractiveMap/directives/interactive-map-validation.service.ts
    1.  extensions/interactions/ItemSelectionInput/directives/item-selection-input-validation.service.spec.ts
    1.  extensions/interactions/ItemSelectionInput/directives/item-selection-input-validation.service.ts
    1.  extensions/interactions/LogicProof/directives/logic-proof-validation.service.spec.ts
    1.  extensions/interactions/MathEquationInput/directives/math-equation-input-validation.service.spec.ts
    1.  extensions/interactions/MathEquationInput/directives/math-equation-input-validation.service.ts
    1.  extensions/interactions/MultipleChoiceInput/directives/multiple-choice-input-validation.service.spec.ts
    1.  extensions/interactions/MultipleChoiceInput/directives/multiple-choice-input-validation.service.ts
    1.  extensions/interactions/MusicNotesInput/directives/music-notes-input-rules.service.spec.ts
    1.  extensions/interactions/MusicNotesInput/directives/music-notes-input-rules.service.ts
    1.  extensions/interactions/NumberWithUnits/directives/number-with-units-validation.service.spec.ts
    1.  extensions/interactions/NumberWithUnits/directives/number-with-units-validation.service.ts
    1.  extensions/interactions/NumericExpressionInput/directives/numeric-expression-input-validation.service.spec.ts
    1.  extensions/interactions/NumericExpressionInput/directives/numeric-expression-input-validation.service.ts
    1.  extensions/interactions/NumericInput/directives/numeric-input-validation.service.spec.ts
    1.  extensions/interactions/NumericInput/directives/numeric-input-validation.service.ts
    1.  extensions/interactions/SetInput/directives/set-input-validation.service.spec.ts
    1.  extensions/interactions/TextInput/directives/text-input-rules.service.spec.ts
    1.  extensions/interactions/TextInput/directives/text-input-rules.service.ts
    2.  extensions/interactions/NumberWithUnits/directives/number-with-units-rules.service.spec.ts
    3. extensions/interactions/NumericExpressionInput/directives/numeric-expression-input-rules.service.spec.ts
    4. extensions/interactions/FractionInput/directives/fraction-input-validation.service.ts
    5. extensions/interactions/FractionInput/directives/fraction-input-validation.service.spec.ts


## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
Covers 39 files with 107 errors:
![Screenshot from 2021-07-03 10-49-30](https://user-images.githubusercontent.com/43031234/124344558-664cb500-dbec-11eb-9679-78ae4b551727.png)
![Screenshot from 2021-07-03 10-50-13](https://user-images.githubusercontent.com/43031234/124344575-7a90b200-dbec-11eb-81c7-a3d1b4e004cc.png)
![Screenshot from 2021-07-03 10-50-45](https://user-images.githubusercontent.com/43031234/124344589-8da38200-dbec-11eb-96c9-bc7a92d82363.png)
![Screenshot from 2021-07-03 10-51-12](https://user-images.githubusercontent.com/43031234/124344599-9e53f800-dbec-11eb-8613-1e8a2cc29df7.png)
![Screenshot from 2021-07-03 10-51-50](https://user-images.githubusercontent.com/43031234/124344613-b461b880-dbec-11eb-909b-c7e715fe5f72.png)
![Screenshot from 2021-07-03 10-52-19](https://user-images.githubusercontent.com/43031234/124344619-c93e4c00-dbec-11eb-9314-8630fe3e5b92.png)
![Screenshot from 2021-07-03 10-52-44](https://user-images.githubusercontent.com/43031234/124344629-d65b3b00-dbec-11eb-8f74-a21bf8b64a6c.png)
![Screenshot from 2021-07-04 11-09-35](https://user-images.githubusercontent.com/43031234/124374904-5d291a00-dcb8-11eb-931e-8609b8c45c46.png)
![Screenshot from 2021-07-04 11-23-23](https://user-images.githubusercontent.com/43031234/124375194-56030b80-dcba-11eb-9d28-ed01572d2cf2.png)
![Screenshot from 2021-07-04 11-24-10](https://user-images.githubusercontent.com/43031234/124375202-674c1800-dcba-11eb-862f-70ffcd3197e3.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13293,https://api.github.com/repos/oppia/oppia/pulls/13293,https://github.com/oppia/oppia/pull/13293,closed,365,188,43,25,23,11,1,1,[{'name': 'PR: LGTM'}],2021-07-03 05:53:24+00:00,2021-07-08 16:06:52+00:00,468808.0,"5 days, 10:13:28","[{'comment_id': 663329367, 'comment_body': '```suggestion\r\n      const _readableNoteName: ReadableNoteNames = note.readableNoteName;\r\n```\r\nUsing underscore before variable names looks more better or you can use a different name, Can you make the changes here and elsewhere in this PR ?', 'comment_created': datetime.datetime(2021, 7, 3, 7, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 663329838, 'comment_body': 'I think we should return a different error depending if `stringValueRegExp` is null', 'comment_created': datetime.datetime(2021, 7, 3, 7, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 663330459, 'comment_body': ""seems like you haven't added the corresponding test for this error in the spec file"", 'comment_created': datetime.datetime(2021, 7, 3, 7, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 663335073, 'comment_body': '`stringValueRegExp` returns `null` if the input contains anything other than a digit (0-9). I think the error message already asserts that scenario.', 'comment_created': datetime.datetime(2021, 7, 3, 8, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 663341519, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 663341535, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 3, 9, 15, 22, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 663593049, 'comment_body': 'If null is an accepted value, then add it to the function definition in the service. `defaultOutcome: Outcome | null)`', 'comment_created': datetime.datetime(2021, 7, 5, 1, 48, 59, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663594672, 'comment_body': 'If we are checking for this, than it is a valid input to the function and should be added as part of the type def of that argument.', 'comment_created': datetime.datetime(2021, 7, 5, 1, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 664369928, 'comment_body': 'here we expect a `non-null` default outcome and hence the type of  parameter `outcome` is not `Outcome | null`', 'comment_created': datetime.datetime(2021, 7, 6, 8, 58, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 664397844, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 7, 6, 9, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 664397863, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 7, 6, 9, 35, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '32b31ff6478c40013a7fb0629ecd541216903808', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa7fed73e601f315e5edb5cfd066a2323ae8103c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63fc50c1e91ac3fdf40143594962ee2d27dce27b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a9adb2419a907b1bd34d9e6722c9fa4423d12a5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429d7af21bf75f636a0ba3b0872898ba2272b384', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70080363a1022d533c591f6b26c5072a2f867fb1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '600ba7480642654ed94394850d3d0d4d88dc2843', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f782b8b7627efb3d7cc1aa850ec963824d93633', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb049be66d397c182a41c0dc5a0b97e483ed0060', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c4da42b944b0fb410464aca214b71253e8d778f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4c119778276cbe057ad96754513d2ca01994596', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '074abe71ae43d8f7484c79ada217d118566ddb4e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a112c50a802d6991972512af56ae85a3202947e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '035f9a3abf330a4a45148cfaf60b7370e33f4223', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5303aacc3686c715f431006e249e90bab37d4146', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3973dad7b720aa4dc8d08c532d260ae5a716ceac', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e190133698428e80189256b1361c8769154c149', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2dbd60f10f9cba19f123882577639f68aac6c8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5220e12a3dbdeee802c594b6f26cdcb29570553d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83312689a1621f12bef5b486170b472be6940f7f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c519aee42b3ce6d1964e40581bc597a7479a8c72', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48c8f7532bdad158756775dde1376fa5c7ec84aa', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3da057ea648ad40b6fb6a9a31e83bd9e60a3434e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59be3aa503a93886ee62484f7d70c99e12584eae', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcb2f0fd0596c1c1aa9694696661a1dc5d435326', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
683146255,Fix Part of #10474: Cover some files with TS strict checks - 9,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes TS checks strict for the following files:
   1. core/templates/components/ratings/rating-computation/rating-computation.service.ts
   2. core/templates/domain/exploration/WrittenTranslationObjectFactory.ts
   3. core/templates/domain/exploration/WrittenTranslationsObjectFactory.ts
   4. core/templates/domain/exploration/WrittenTranslationsObjectFactorySpec.ts
   5. core/templates/expressions/expression-evaluator.service.ts
   6. core/templates/expressions/expression-syntax-tree.service.spec.ts
   7. core/templates/expressions/expression-syntax-tree.service.ts
   8. core/templates/filters/string-utility-filters/capitalize.pipe.spec.ts
   9. core/templates/filters/string-utility-filters/sort-by.pipe.ts
   10. core/templates/filters/string-utility-filters/sort-by.pipe.spec.ts
   11. extensions/objects/templates/drag-and-drop-positive-int-editor.component.ts

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
Covers 11 files with 18 errors:
![Screenshot from 2021-07-04 14-50-59](https://user-images.githubusercontent.com/43031234/124380676-69709f80-dcd7-11eb-92da-c14f13661ec4.png)
![Screenshot from 2021-07-04 14-52-20](https://user-images.githubusercontent.com/43031234/124380681-78575200-dcd7-11eb-8032-14ec12df22a7.png)
![Screenshot from 2021-07-04 14-53-16](https://user-images.githubusercontent.com/43031234/124380710-9755e400-dcd7-11eb-9969-0526db57513e.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13304,https://api.github.com/repos/oppia/oppia/pulls/13304,https://github.com/oppia/oppia/pull/13304,closed,78,44,12,17,14,9,0,2,[],2021-07-04 09:54:09+00:00,2021-07-08 13:16:41+00:00,357752.0,"4 days, 3:22:32","[{'comment_id': 663595622, 'comment_body': 'If it is not a valid input type, then it should not be tested. If it is tested, then it should be a part of typedef of that argument.', 'comment_created': datetime.datetime(2021, 7, 5, 2, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663595664, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 5, 2, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663595711, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 5, 2, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663595745, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2021, 7, 5, 2, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 664421746, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 10, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 664421821, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 10, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 664421877, 'comment_body': 'done.', 'comment_created': datetime.datetime(2021, 7, 6, 10, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 664421916, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 6, 10, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 664424410, 'comment_body': 'The generic type `T` does not allow `null` or `undefined` values as an argument.', 'comment_created': datetime.datetime(2021, 7, 6, 10, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '6c7843d8723a5ef0843ce049cc85cbe3d7c747b1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ac252bc495c6ff2de4443cf349b51dea7d7937', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2bc07efc4e8354d55982ec5cfec81682dfe2b97', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '122688feda435a106a891a4062f297261b979bc9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10c8e4cb8a625525b54edb4809cf2e3d28b72ece', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '394bff5bf4dfc60adf3364fb40a766eb29df4bc7', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f0a531e5bf803028db7620846a88f09cff6e33', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0956327b6ff98d2974b659264321802e79252f8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c78b082ff427235caaeb1e2780bb304afec799af', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64894813d5b960bec42a19c22d413fdc31d2729b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9f4338613cb52e0590802c1a5fd530656dd07a6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd18be6df3b348ff5febe369ad6cd703ac0bec8d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '621318e0081c0fbe143821330a1369d578b2620b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f01a90268df1681d1bd800cde9a0033b4fa49959', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a040fe0f666a4685e0f2204d3bccc27313b1dc78', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1b9850c4de98b75f190347c5021c27a7e1869b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01fd57908e9e89a039a45cdac2359deacd266a16', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
687305094,Fix Part of #10474: Cover some files with TS strict checks - 10  ,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Make ts checks strict for the following files and adds other files with no errors in config file:
    1. core/templates/components/common-layout-directives/common-elements/sharing-links.component.spec.ts
    2. core/templates/components/common-layout-directives/common-elements/sharing-links.component.ts
    3. core/templates/components/entity-creation-services/collection-creation.service.spec.ts
    4. core/templates/services/messenger.service.ts
    5. core/templates/services/messenger.service.spec.ts
    5. core/templates/domain/summary/exploration-summary-backend-api.service.spec.ts
    6. core/templates/domain/summary/exploration-summary-backend-api.service.ts
    7. core/templates/services/speech-synthesis-chunker.service.spec.ts
    8. core/templates/services/speech-synthesis-chunker.service.ts
    9. extensions/interactions/FractionInput/directives/oppia-response-fraction-input.component.spec.ts
    10. extensions/interactions/GraphInput/directives/graph-input-rules.service.spec.ts
    11. extensions/interactions/GraphInput/directives/graph-input-rules.service.ts
    12. extensions/interactions/ImageClickInput/directives/oppia-short-response-image-click-input.component.spec.ts
    13. extensions/interactions/ImageClickInput/directives/oppia-short-response-image-click-input.component.ts
    14. extensions/interactions/RatioExpressionInput/directives/ratio-expression-input-validation.service.spec.ts
    15. extensions/interactions/RatioExpressionInput/directives/ratio-expression-input-validation.service.ts
    16. core/templates/services/prevent-page-unload-event.service.spec.ts
    17. core/templates/services/prevent-page-unload-event.service.ts
## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
Covers 18 files with errors:
![Screenshot from 2021-07-09 18-06-22](https://user-images.githubusercontent.com/43031234/125190239-91bb4980-e255-11eb-9264-70ea11e18170.png)
![Screenshot from 2021-07-09 17-55-49](https://user-images.githubusercontent.com/43031234/125190240-93850d00-e255-11eb-8353-696f637b2d45.png)
![Screenshot from 2021-07-09 17-55-26](https://user-images.githubusercontent.com/43031234/125190241-94b63a00-e255-11eb-9e87-3449bcfceae6.png)
![Screenshot from 2021-07-09 17-55-04](https://user-images.githubusercontent.com/43031234/125190242-95e76700-e255-11eb-8425-753709e843bc.png)

**note:** `collection-creation.service.ts` has no error after #13371 and is removed from the list of files with errors fixed in this PR.

![Screenshot from 2021-07-15 20-26-30](https://user-images.githubusercontent.com/43031234/125814397-e680a691-a7fc-4c54-9d40-46b321aaa260.png)
![Screenshot from 2021-07-15 23-58-29](https://user-images.githubusercontent.com/43031234/125941048-47172a0a-88bb-415e-bff2-3cc683b6d244.png)
![Screenshot from 2021-07-25 14-48-52](https://user-images.githubusercontent.com/43031234/126894945-9d06dcbd-c3e6-4bc1-8c86-b0ed1a603bbf.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13368,https://api.github.com/repos/oppia/oppia/pulls/13368,https://github.com/oppia/oppia/pull/13368,closed,381,221,23,54,40,79,0,1,[],2021-07-11 09:39:18+00:00,2021-08-05 14:39:11+00:00,2177993.0,"25 days, 4:59:53","[{'comment_id': 671430890, 'comment_body': ""If we're testing for `null` as an explorationId then should we also have it as a type ? If not can we alter this test so that we don't use null at all? Maybe empty strings is also an invalid value ? "", 'comment_created': datetime.datetime(2021, 7, 16, 17, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671438556, 'comment_body': 'Can we also change this to an interface ?', 'comment_created': datetime.datetime(2021, 7, 16, 18, 7, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671446680, 'comment_body': 'Can we use the variables for these strings at each case ?', 'comment_created': datetime.datetime(2021, 7, 16, 18, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671455238, 'comment_body': 'Is this redundant ?', 'comment_created': datetime.datetime(2021, 7, 16, 18, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671457945, 'comment_body': '```suggestion\r\n  _preventPageUnloadEventHandlerBind!: (\r\n    this: Window, ev: BeforeUnloadEvent) => void;\r\n```', 'comment_created': datetime.datetime(2021, 7, 16, 18, 42, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671458156, 'comment_body': 'This should also be not required with above change', 'comment_created': datetime.datetime(2021, 7, 16, 18, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671459350, 'comment_body': 'Would it make more sense if we will add ` | undefined` as a type here ?', 'comment_created': datetime.datetime(2021, 7, 16, 18, 45, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671470407, 'comment_body': 'Should the particular test case be removed if undefined is not a valid value ?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671474095, 'comment_body': '`angular.isNumber` is an ajs method, we should not use it in Angular2+ code ? I looked for alternatives and found `isNumeric` method from rxjs, can you look into this or suggest some other alternative you find more suitable ?. ', 'comment_created': datetime.datetime(2021, 7, 16, 19, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671478227, 'comment_body': 'Please add a comment on why this can be null ?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 23, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671482478, 'comment_body': 'Can you confirm if `this: HTMLElement` is required ? Here and below.', 'comment_created': datetime.datetime(2021, 7, 16, 19, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671483415, 'comment_body': 'By this I meant `{ stateName: string }`', 'comment_created': datetime.datetime(2021, 7, 16, 19, 34, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 671664098, 'comment_body': 'we use `(!)` in places where we are sure it would never be `null` or `undefined`. That s not the case here. Like in the test if `removeListener()` is called before adding a listener, `_preventPageUnloadEventHandlerBind` will be `undefined`', 'comment_created': datetime.datetime(2021, 7, 17, 9, 38, 39, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671664244, 'comment_body': ""doesn't `?` serve the same purpose? It adds `| undefined` to the type"", 'comment_created': datetime.datetime(2021, 7, 17, 9, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671664360, 'comment_body': 'addressed above', 'comment_created': datetime.datetime(2021, 7, 17, 9, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671664450, 'comment_body': 'it was not needed. removed', 'comment_created': datetime.datetime(2021, 7, 17, 9, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671678532, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 17, 11, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671678799, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 17, 11, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671678864, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 17, 11, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671679881, 'comment_body': 'moved them to `services.constants.ts`', 'comment_created': datetime.datetime(2021, 7, 17, 11, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671679994, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 7, 17, 11, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671680201, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 17, 11, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671682060, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 17, 11, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 671700346, 'comment_body': 'I think using `?` is making the property optional and making it `| undefined` means that we can assign a value of undefined to that particular variable.', 'comment_created': datetime.datetime(2021, 7, 17, 13, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672359316, 'comment_body': 'when we make a property optional, it is actually implicitly being made of union type with `| undefined`. but I have explicitly updated the type with `| undefined` since we are assigning it an `undefined` value.', 'comment_created': datetime.datetime(2021, 7, 19, 14, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 672371265, 'comment_body': 'Please add a comment explaining why these can be null', 'comment_created': datetime.datetime(2021, 7, 19, 14, 52, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672443268, 'comment_body': '```suggestion\r\n        let queryString = (\r\n          `sdk=joey&`\r\n          `u=${this.serverName}/${this.activityUrlFragment}/${this.activityId}&`\r\n          `display=popup&`\r\n          `ref=plugin&`\r\n          `src=share_button`\r\n        )\r\n        return `https://www.facebook.com/sharer/sharer.php?${queryString}`;\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 16, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672443954, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2021, 7, 19, 16, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672446906, 'comment_body': 'Ayn way to make the callback params more strict?', 'comment_created': datetime.datetime(2021, 7, 19, 16, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672448119, 'comment_body': 'Why cannot we use `Record`?', 'comment_created': datetime.datetime(2021, 7, 19, 16, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672448607, 'comment_body': 'Thanks for fixing this!', 'comment_created': datetime.datetime(2021, 7, 19, 16, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672449612, 'comment_body': ""I'm not strictly against this approach, but isn't there a simpler way to do this?"", 'comment_created': datetime.datetime(2021, 7, 19, 16, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672451776, 'comment_body': '```suggestion\r\n    expect(preventPageUnloadEventService.isListenerActive()).toBeFalse();\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 16, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672451900, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2021, 7, 19, 16, 28, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672463124, 'comment_body': 'Why is this needed?', 'comment_created': datetime.datetime(2021, 7, 19, 16, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672463267, 'comment_body': 'Why is this needed?', 'comment_created': datetime.datetime(2021, 7, 19, 16, 44, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672464912, 'comment_body': ""```suggestion\r\n    // The permutation will be 'null' when there are no more \r\n    // lexicographical permutation of vertices.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 16, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672467050, 'comment_body': 'Do we need the `typeof` check here?', 'comment_created': datetime.datetime(2021, 7, 19, 16, 49, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672471702, 'comment_body': 'Not sure what the note means?', 'comment_created': datetime.datetime(2021, 7, 19, 16, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672485595, 'comment_body': ""```suggestion\r\n          <MathExpressionContent>(_this.htmlEscaper.escapedJsonToObj(\r\n            // 'Node.textContent' only returns 'null' if the Node is a\r\n            // 'document' or a 'DocType'. '_mathContentAttr' is neither.\r\n            <string> _mathContentAttr.textContent)));\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 17, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672486148, 'comment_body': ""```suggestion\r\n        // 'Node.textContent' only returns 'null' if the Node is a\r\n        // 'document' or a 'DocType'. '_newTextAttr' is neither.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 17, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672486266, 'comment_body': ""```suggestion\r\n          <keyof NamedNodeMap> 'text-with-value'] as Attr;\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 17, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672486393, 'comment_body': '```suggestion\r\n    const rteCompSpecsKeys = <RTEComponentSpecsKey[]> Object.keys(\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 17, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672486705, 'comment_body': '```suggestion\r\n        // Variable newTextContent ends with a "" character, so this is being\r\n        // ignored in the condition below.\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 17, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 672487582, 'comment_body': '```suggestion\r\n        return (\r\n          newTextContent && newTextContent !== \'""\' ?\r\n          newTextContent + \' \' : \'\'\r\n        );\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 17, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 673093047, 'comment_body': ""We could use `Record<'stateName', string>` here but an interface has been declared for all the other Data types and for the sake of consistency, using an interface seems like a cleaner approach."", 'comment_created': datetime.datetime(2021, 7, 20, 12, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673436974, 'comment_body': ""I could not come up with a simpler approach since the strict checks don't pass due to the fact that each method takes a different type of data as an argument and that type explicitly needs to be separated.\r\n\r\nif we use it as a conjunction;\r\n```\r\nlet payload = this.getPayload[messageTitle](messageData);\r\n``` \r\nthen the compiler expects `messageData`  to be of type `HeightChangeData & ExplorationCompletedData & StateTransitionData & so on` (since the method to use will be decided on runtime) and not `HeightChangeData | ExplorationCompletedData | StateTransitionData | so on`"", 'comment_created': datetime.datetime(2021, 7, 20, 19, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673466814, 'comment_body': '`prev` and `cur` values are of type `number | null`. The typescript checks do not allow adding (+) objects which are `null`. This is because the `+` operator is supposed to be used with strings or numbers', 'comment_created': datetime.datetime(2021, 7, 20, 20, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673466903, 'comment_body': 'addressed above', 'comment_created': datetime.datetime(2021, 7, 20, 20, 24, 32, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673474248, 'comment_body': ""`angular.isNumber()` returned `false` for strings like '`3'`, `'1'` etc and I used an alternative for the same approach. But after taking a closer look, we are passing `numberOfTerms.value` of the customization arguments and they will be of type number so the `typeof` check is definitely redundant.  \r\n\r\nremoved"", 'comment_created': datetime.datetime(2021, 7, 20, 20, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673545802, 'comment_body': 'The note was actually made in PR [#12103](https://github.com/oppia/oppia/pull/12103)\r\n```\r\n...rule input to be 1-indexed, not 0-indexed. In other words, we don\'t want the lesson \r\nimplementor to have a rule like ""make sure the 0-th term of the ratio equals..."" since\r\nthe 0-th term doesn\'t exist. \r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 22, 56, 5, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673546779, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 20, 22, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673546952, 'comment_body': 'made them slightly stricter ', 'comment_created': datetime.datetime(2021, 7, 20, 22, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673547040, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 20, 22, 59, 22, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673547171, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 20, 22, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 674397389, 'comment_body': 'The URL is the same everywhere, so you can build it up in a variable and then just put it everywhere.', 'comment_created': datetime.datetime(2021, 7, 21, 22, 55, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674399044, 'comment_body': 'Can you create a type variable for this?', 'comment_created': datetime.datetime(2021, 7, 21, 23, 0, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674400223, 'comment_body': 'Ah, okay, that makes sense.', 'comment_created': datetime.datetime(2021, 7, 21, 23, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674400833, 'comment_body': 'Ah, okay, this is code duplicity though, can you fix it?', 'comment_created': datetime.datetime(2021, 7, 21, 23, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674401675, 'comment_body': ""Can you add the whole comment in the code? (I just realized you didn't add this but it will make this easier to read)."", 'comment_created': datetime.datetime(2021, 7, 21, 23, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 675502065, 'comment_body': 'IMO it would be cleaner to just initialize these values with 0 if they are null.\r\n```suggestion\r\n        prev = (prev === null) ? 0 : prev;\r\n        curr = (curr === null) ? 0 : curr;\r\n```\r\nYou can do this here and elsewhere.', 'comment_created': datetime.datetime(2021, 7, 23, 11, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 676130685, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 11, 28, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676130709, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 7, 25, 11, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676192064, 'comment_body': 'Why the underscore prefix?', 'comment_created': datetime.datetime(2021, 7, 25, 19, 33, 8, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676193210, 'comment_body': ""Why don't use the constant here?"", 'comment_created': datetime.datetime(2021, 7, 25, 19, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676193258, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2021, 7, 25, 19, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676193873, 'comment_body': 'Please explain while null can be returned.', 'comment_created': datetime.datetime(2021, 7, 25, 19, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676193944, 'comment_body': 'Please explain why it can contain nulls.', 'comment_created': datetime.datetime(2021, 7, 25, 19, 50, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676668988, 'comment_body': 'Have changed the implementation slightly [here]( https://github.com/oppia/oppia/pull/13368/files#diff-c22f802d64e2299c875d07099008824015bfd25b1a449b7247d80825a341588eR158)\r\n\r\n```typescript\r\ntype MessengerPayloadKey = keyof typeof ServicesConstants.MESSENGER_PAYLOAD;\r\n...\r\nsendMessage(messageTitle: MessengerPayloadKey, messageData: Object): void { \r\n  ...\r\n}\r\n```\r\n\r\nI felt like this implementation is more strict whenever we use `sendMessage()`. we cannot call it with another messageTitle except the accepted ones which are the keys in `ServicesConstants.MESSENGER_PAYLOAD`. \r\n\r\nif we keep the type as `string`, \r\n```typescript\r\nsendMessage(messageTitle: string, messageData: Object): void { ...\r\n```\r\nthen we would need to cater the situation when an invalid messageTitle is passed as an argument. This could be done but the above approach seemed more clean to me.  ', 'comment_created': datetime.datetime(2021, 7, 26, 14, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676706596, 'comment_body': 'updated. It will return `number[]` due to the implementation in `reduce()`', 'comment_created': datetime.datetime(2021, 7, 26, 15, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676706684, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 26, 15, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676708429, 'comment_body': 'I used the underscore at places to indicate a variable only used for type casting but it is not the case here. updated', 'comment_created': datetime.datetime(2021, 7, 26, 15, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676760318, 'comment_body': 'Hmm, I see, but can we still use the constants here? It should be possible to type the constants correctly, right?', 'comment_created': datetime.datetime(2021, 7, 26, 16, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676852733, 'comment_body': 'Have changed the implementation again to use constants instead. In the previous implementation, we were passing keys instead of the values of the keys ', 'comment_created': datetime.datetime(2021, 7, 26, 18, 40, 43, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 677075089, 'comment_body': 'Considering the logic is changed (somewhat) here, have you tested this part manually? ', 'comment_created': datetime.datetime(2021, 7, 27, 2, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 677517822, 'comment_body': 'You can do this\r\n```suggestion\r\ntype MessageTitles = typeof ServicesConstants.MESSENGER_PAYLOAD[\r\n  keyof typeof ServicesConstants.MESSENGER_PAYLOAD\r\n];\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 14, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 677825284, 'comment_body': '@DubeySandeep yes, have tested this', 'comment_created': datetime.datetime(2021, 7, 27, 21, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 677827620, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 27, 21, 55, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 678554454, 'comment_body': 'Not resolved.', 'comment_created': datetime.datetime(2021, 7, 28, 18, 30, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': '04581b17a963a2908dd310ccac110d372b0056d2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0d429bdf3c5144b5b7e90ef30e5bf0023abc298', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0feb8d97693e77a9d29056089562e3177f0d8619', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8175f9a083f8dca35db1fb2bee85644eca3c7b73', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec292f358176bebd9d51ad638d225afbff740dbb', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3be4859a864193290f7a30d663678915b50aed55', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d6acd4d89359a4d54b214bc55cba363f9afb5e7', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dcf50d0059ae809d0a10b4e96330cfc7c1a4066', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6f4973e8628ca3289b1a1bc96c2a0052c0bc14c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a68f2037bb93e781d6eb2f8626db3e4bacb823de', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359b66f10e9c0850465671700047a5c2022d3dcc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359a43b1cf452fd2a64c97f6d2cd8ae828e171bc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37c8acbb9a4d132fea0cde48b1ba6c5ea5a6b5bd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3558d886264613c28e1df42641d567b79e8859d4', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd6f8bbcf0c7bac73c55141edad63f0a936d00b1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9c8712343e12b59478c4f60e5e39a801f464299', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12b106719efc535357f4fd4982e56085660e09fe', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c13ddc622418c7514c66572e7067c42cdb16d3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a25924cd20ff1ab4b90885212d373ac7b04eb69', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0236bb9b16e836fbfaeafe9931e07198c2d9c754', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a349913621902414c4ef8606b7adeb686f19f32', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b010ab517a62bbccdd2aa819c5c789044316fc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '890ccdda916b220bc7746637ce4a1b030898df02', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9ebaef2c67dd53bf95ec753fcfd1699b1ca71b3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69bac35c3b6284d91f0e97bb204c8cd10fbca642', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b45a65c61fae70510503133b3022352db7b37ed5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba11146ef586353fbfd366a689d3fc8fd1f157ae', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2230d74c823b183ac1cbf8759c69367c51f143e1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2139225124e159e70877ac3383123561d10987f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bc9ce60d1e85be9c4a99d5ff56b92ecec07c7af', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c4a10925bb09180c835d4ecf8f98b481687c67a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d9db7b577bd060f8c08f53844ae4092be7aeebb', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66d842c5cb3b193c3155751801bc573265f5ca69', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0c839b57939a86ab882889027258fc0dd8ce7d8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a32b8f27547353e2f774698aaecaf3563a67e944', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd7ea5ff2c2f52336d6683c5c0d50cfed4dd05c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa54ae464fb9a151ca5053c703774324742548f4', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84121002c55bca3f86b384816eee670ca921a0d1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edae8897fd2f7f5cc69437143fc1a0e26212a27f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a8db9d4055e95adb56c03330e0fa6dd97446b94', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b322544d26afd5402597e1f232cf35feb9d0d62', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a86f8214303c49f62d64bf845f8159cdbcbb5f28', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8de38d2ee4dae3926a76074a2b1ac591205b93bc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '758bc0964c422f6bfaace6849df191ce8ab1cc4d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '148d9d0d3a17f8c75971374d505ce3f9f22bcdee', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54aa62d9e368dfeeb68a4cab981a3f9f3d8a653a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0308e2d0e4424cbde8973798c2ed12dc30944bd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fa412e69d7ea7859cf6e8ea9974fd550146172e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63fc21eba1847f25a44f6bbb3097e7579ba0f354', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ede71b14af48c9e8e44c35c3b273e69f2a28b0e7', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b12cb506c4126c92f25338e2bd8749928ad9e3e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b144082a199e87ca6a897da411711356ac7e6a93', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f71bd03e90503897a184b2164bccac70addeade0', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08a25be4852561ddda7d8290d7445a649c29f665', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
692531086,Fix Part of #10474: Cover some files with TS strict checks - 11,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474.
2. This PR does the following: Makes TS checks strict for the following files:
   1. core/templates/components/entity-creation-services/exploration-creation.service.spec.ts
   2. core/templates/components/entity-creation-services/exploration-creation.service.ts
   3. core/templates/domain/exploration/stats-reporting-backend-api.service.ts
   4. core/templates/domain/review_test/review-test-backend-api.service.ts (url.service.ts updated)
   4. core/templates/domain/review_test/review-test-backend-api.service.spec.ts
   5. core/templates/domain/skill/concept-card-backend-api.service.spec.ts
   6. core/templates/domain/skill/concept-card-backend-api.service.ts
   7. core/templates/domain/statistics/playthrough-backend-api.service.spec.ts
   8. core/templates/domain/story/story-validation.service.ts
   9. core/templates/domain/story/story-validation.service.spec.ts
   10. core/templates/domain/story_viewer/story-viewer-backend-api.service.spec.ts
   11. core/templates/domain/topic/topic-creation-backend-api.service.spec.ts
   12. core/templates/domain/topic/topic-rights-backend-api.service.ts
   13. core/templates/domain/topic/topic-rights-backend-api.service.spec.ts
   14. core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts
   15. core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts
   16. core/templates/pages/email-dashboard-pages/email-dashboard-data.service.ts
   17. core/templates/pages/exploration-player-page/services/exploration-recommendations.service.spec.ts
   18. core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts
   19. core/templates/pages/topics-and-skills-dashboard-page/topics-and-skills-dashboard-page.service.spec.ts
   20. core/templates/services/exploration-features-backend-api.service.spec.ts
   21. core/templates/services/playthrough-issues-backend-api.service.spec.ts
   22. core/templates/services/playthrough-issues-backend-api.service.ts
   23. extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts
   25. core/templates/domain/exploration/exploration-permissions-backend-api.service.ts (context.service.ts updated)

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

<details>
  <summary>Covers 25 files with errors:</summary>
  
```
Compiling and testing typescript...
Errors found during compilation

core/templates/components/entity-creation-services/exploration-creation.service.spec.ts(170,11): error TS2532: Object is possibly 'undefined'.

core/templates/components/entity-creation-services/exploration-creation.service.spec.ts(170,19): error TS2339: Property 'dataFilter' does not exist on type 'string | AjaxSettings<any>'.

  Property 'dataFilter' does not exist on type 'string'.

core/templates/components/entity-creation-services/exploration-creation.service.ts(37,3): error TS2564: Property 'explorationCreationInProgress' has no initializer and is not definitely assigned in the constructor.

core/templates/components/entity-creation-services/exploration-creation.service.ts(63,11): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/components/entity-creation-services/exploration-creation.service.ts(103,11): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/exploration/exploration-permissions-backend-api.service.ts(43,9): error TS2322: Type 'string | undefined' is not assignable to type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/domain/exploration/exploration-permissions-backend-api.service.ts(48,9): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/exploration/exploration-permissions-backend-api.service.ts(51,13): error TS2345: Argument of type 'ArrayBuffer' is not assignable to parameter of type 'ExplorationPermissionsBackendDict'.

  Type 'ArrayBuffer' is missing the following properties from type 'ExplorationPermissionsBackendDict': 'can_unpublish', 'can_release_ownership', 'can_publish', 'can_voiceover', and 4 more.

core/templates/domain/exploration/state-interaction-stats-backend-api.service.ts(51,9): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/exploration/state-interaction-stats-backend-api.service.ts(56,52): error TS2339: Property 'visualizations_info' does not exist on type 'ArrayBuffer'.

core/templates/domain/exploration/state-interaction-stats-backend-api.service.ts(57,13): error TS7006: Parameter 'visInfoDict' implicitly has an 'any' type.

core/templates/domain/exploration/stats-reporting-backend-api.service.ts(61,7): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/exploration/stats-reporting-backend-api.service.ts(62,9): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ readonly ANSWER_SUBMITTED: ""/explorehandler/answer_submitted_event/<exploration_id>""; readonly EXPLORATION_COMPLETED: ""/explorehandler/exploration_complete_event/<exploration_id>""; ... 7 more ...; readonly STATS_EVENTS: ""/explorehandler/stats_events/<exploration_id>""; }'.

  No index signature with a parameter of type 'string' was found on type '{ readonly ANSWER_SUBMITTED: ""/explorehandler/answer_submitted_event/<exploration_id>""; readonly EXPLORATION_COMPLETED: ""/explorehandler/exploration_complete_event/<exploration_id>""; ... 7 more ...; readonly STATS_EVENTS: ""/explorehandler/stats_events/<exploration_id>""; }'.

core/templates/domain/review_test/review-test-backend-api.service.spec.ts(29,7): error TS2322: Type 'null' is not assignable to type 'ReviewTestBackendApiService'.

core/templates/domain/review_test/review-test-backend-api.service.spec.ts(32,7): error TS2322: Type 'null' is not assignable to type 'UrlService'.

core/templates/domain/review_test/review-test-backend-api.service.ts(44,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/review_test/review-test-backend-api.service.ts(47,11): error TS2322: Type 'string | undefined' is not assignable to type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/domain/review_test/review-test-backend-api.service.ts(49,11): error TS2322: Type 'string | undefined' is not assignable to type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/domain/review_test/review-test-backend-api.service.ts(56,9): error TS2345: Argument of type 'ArrayBuffer' is not assignable to parameter of type 'ReviewTestBackendDict'.

  Type 'ArrayBuffer' is missing the following properties from type 'ReviewTestBackendDict': 'story_name', 'skill_descriptions'

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(29,7): error TS2322: Type 'null' is not assignable to type 'ConceptCardBackendApiService'.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(32,7): error TS7034: Variable 'sampleResponse1' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(33,7): error TS7034: Variable 'sampleResponse2' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(34,7): error TS7034: Variable 'sampleResponse3' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(35,7): error TS7034: Variable 'conceptCardSampleResponse1' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(37,7): error TS7034: Variable 'conceptCardSampleResponse3' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(167,17): error TS7005: Variable 'sampleResponse1' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(172,9): error TS7005: Variable 'conceptCardSampleResponse1' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(188,17): error TS7005: Variable 'sampleResponse3' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(193,9): error TS7005: Variable 'conceptCardSampleResponse3' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(203,44): error TS7005: Variable 'conceptCardSampleResponse1' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(204,45): error TS7005: Variable 'conceptCardSampleResponse3' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(209,22): error TS7005: Variable 'sampleResponse2' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(214,18): error TS7005: Variable 'sampleResponse1' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(246,43): error TS7005: Variable 'conceptCardSampleResponse1' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.spec.ts(252,15): error TS7005: Variable 'sampleResponse1' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.ts(58,9): error TS7034: Variable 'conceptCardObjects' implicitly has type 'any[]' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.ts(60,44): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/skill/concept-card-backend-api.service.ts(63,43): error TS2339: Property 'concept_card_dicts' does not exist on type 'ArrayBuffer'.

core/templates/domain/skill/concept-card-backend-api.service.ts(64,36): error TS7006: Parameter 'conceptCardDict' implicitly has an 'any' type.

core/templates/domain/skill/concept-card-backend-api.service.ts(69,27): error TS7005: Variable 'conceptCardObjects' implicitly has an 'any[]' type.

core/templates/domain/skill/concept-card-backend-api.service.ts(83,9): error TS7034: Variable 'uncachedSkillIds' implicitly has type 'any[]' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.ts(89,12): error TS7005: Variable 'uncachedSkillIds' implicitly has an 'any[]' type.

core/templates/domain/skill/concept-card-backend-api.service.ts(95,11): error TS7034: Variable 'conceptCards' implicitly has type 'any[]' in some locations where its type cannot be determined.

core/templates/domain/skill/concept-card-backend-api.service.ts(107,40): error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

core/templates/domain/skill/concept-card-backend-api.service.ts(110,68): error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

core/templates/domain/skill/concept-card-backend-api.service.ts(114,33): error TS7005: Variable 'conceptCards' implicitly has an 'any[]' type.

core/templates/domain/skill/concept-card-backend-api.service.ts(120,62): error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

core/templates/domain/skill/concept-card-backend-api.service.ts(123,29): error TS7005: Variable 'conceptCards' implicitly has an 'any[]' type.

core/templates/domain/statistics/learner-answer-details-backend-api.service.ts(54,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/statistics/playthrough-backend-api.service.spec.ts(66,9): error TS2322: Type 'null' is not assignable to type 'ExplorationStartCustomizationArgs | AnswerSubmitCustomizationArgs | ExplorationQuitCustomizationArgs'.

core/templates/domain/statistics/playthrough-backend-api.service.ts(46,5): error TS2322: Type 'ArrayBuffer' is not assignable to type 'void'.

core/templates/domain/statistics/playthrough-backend-api.service.ts(46,33): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/story/story-validation.service.spec.ts(25,7): error TS2322: Type 'null' is not assignable to type 'StoryValidationService'.

core/templates/domain/story/story-validation.service.spec.ts(26,7): error TS2322: Type 'null' is not assignable to type 'StoryContentsObjectFactory'.

core/templates/domain/story/story-validation.service.ts(35,9): error TS7034: Variable 'issues' implicitly has type 'any[]' in some locations where its type cannot be determined.

core/templates/domain/story/story-validation.service.ts(42,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/story/story-validation.service.ts(55,57): error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/domain/story/story-validation.service.ts(90,12): error TS7005: Variable 'issues' implicitly has an 'any[]' type.

core/templates/domain/story_viewer/story-viewer-backend-api.service.spec.ts(32,7): error TS2322: Type 'null' is not assignable to type 'StoryViewerBackendApiService'.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(78,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(80,71): error TS2345: Argument of type 'ArrayBuffer' is not assignable to parameter of type 'StoryPlaythroughBackendDict'.

  Type 'ArrayBuffer' is missing the following properties from type 'StoryPlaythroughBackendDict': 'story_id', 'story_nodes', 'story_title', 'story_description', and 2 more.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(103,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(106,25): error TS2339: Property 'summaries' does not exist on type 'ArrayBuffer'.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(107,11): error TS7006: Parameter 'expSummary' implicitly has an 'any' type.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(109,26): error TS2339: Property 'next_node_id' does not exist on type 'ArrayBuffer'.

core/templates/domain/story_viewer/story-viewer-backend-api.service.ts(110,34): error TS2339: Property 'ready_for_review_test' does not exist on type 'ArrayBuffer'.

core/templates/domain/topic/topic-creation-backend-api.service.spec.ts(32,7): error TS2322: Type 'null' is not assignable to type 'CsrfTokenService'.

core/templates/domain/topic/topic-creation-backend-api.service.spec.ts(33,7): error TS2322: Type 'null' is not assignable to type 'HttpTestingController'.

core/templates/domain/topic/topic-creation-backend-api.service.spec.ts(34,7): error TS2322: Type 'null' is not assignable to type 'TopicCreationBackendApiService'.

core/templates/domain/topic/topic-creation-backend-api.service.spec.ts(35,7): error TS2322: Type 'null' is not assignable to type 'NewlyCreatedTopic'.

core/templates/domain/topic/topic-creation-backend-api.service.spec.ts(36,7): error TS2322: Type 'null' is not assignable to type 'ImageData[]'.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(28,7): error TS2322: Type 'null' is not assignable to type 'TopicRightsBackendApiService'.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(31,7): error TS7034: Variable 'successHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(32,7): error TS7034: Variable 'failHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(60,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(60,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(69,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(70,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(75,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(75,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(84,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(85,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(90,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(90,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(99,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(100,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(103,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(103,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(112,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(113,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(118,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(118,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(130,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(131,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(142,9): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(142,25): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(155,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(156,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(178,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(178,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(183,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(188,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(192,57): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(193,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(193,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(201,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(202,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(206,57): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(207,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(207,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(216,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.spec.ts(217,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/topic/topic-rights-backend-api.service.ts(53,25): error TS2769: No overload matches this call.

  Overload 1 of 15, '(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 2 of 15, '(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(54,7): error TS2345: Argument of type '(response: TopicRightsBackendDict) => void' is not assignable to parameter of type '(value: ArrayBuffer) => void | PromiseLike<void>'.

  Types of parameters 'response' and 'value' are incompatible.

    Type 'ArrayBuffer' is missing the following properties from type 'TopicRightsBackendDict': 'published', 'can_publish_topic', 'can_edit_topic'

core/templates/domain/topic/topic-rights-backend-api.service.ts(76,7): error TS2769: No overload matches this call.

  Overload 1 of 15, '(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 2 of 15, '(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(77,7): error TS2345: Argument of type '(response: TopicRightsBackendResponse) => void' is not assignable to parameter of type '(value: ArrayBuffer) => void | PromiseLike<void>'.

  Types of parameters 'response' and 'value' are incompatible.

    Type 'ArrayBuffer' is missing the following properties from type 'TopicRightsBackendResponse': 'topic_id', 'topic_is_published', 'manager_ids'

core/templates/domain/topic/topic-rights-backend-api.service.ts(78,9): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(99,25): error TS2769: No overload matches this call.

  Overload 1 of 15, '(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 2 of 15, '(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(113,39): error TS2345: Argument of type '(value: TopicRightsBackendDict | PromiseLike<TopicRightsBackendDict>) => void' is not assignable to parameter of type '(value?: TopicRightsBackendDict | undefined) => void'.

  Types of parameters 'value' and 'value' are incompatible.

    Type 'TopicRightsBackendDict | undefined' is not assignable to type 'TopicRightsBackendDict | PromiseLike<TopicRightsBackendDict>'.

      Type 'undefined' is not assignable to type 'TopicRightsBackendDict | PromiseLike<TopicRightsBackendDict>'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(130,17): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(134,11): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(135,19): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(157,5): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(166,43): error TS2345: Argument of type '(value: TopicRightsBackendResponse | PromiseLike<TopicRightsBackendResponse>) => void' is not assignable to parameter of type '(value?: TopicRightsBackendResponse | undefined) => void'.

  Types of parameters 'value' and 'value' are incompatible.

    Type 'TopicRightsBackendResponse | undefined' is not assignable to type 'TopicRightsBackendResponse | PromiseLike<TopicRightsBackendResponse>'.

      Type 'undefined' is not assignable to type 'TopicRightsBackendResponse | PromiseLike<TopicRightsBackendResponse>'.

core/templates/domain/topic/topic-rights-backend-api.service.ts(183,44): error TS2345: Argument of type '(value: TopicRightsBackendResponse | PromiseLike<TopicRightsBackendResponse>) => void' is not assignable to parameter of type '(value?: TopicRightsBackendResponse | undefined) => void'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(34,7): error TS2322: Type 'null' is not assignable to type 'ContributionOpportunitiesBackendApiService'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(37,7): error TS2322: Type 'null' is not assignable to type 'UrlInterpolationService'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(63,7): error TS7034: Variable 'sampleSkillOpportunitiesResponse' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(64,7): error TS7034: Variable 'sampleTranslationOpportunitiesResponse' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(65,7): error TS7034: Variable 'sampleVoiceoverOpportunitiesResponse' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(116,24): error TS7005: Variable 'sampleSkillOpportunitiesResponse' implicitly has an 'any' type.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(174,24): error TS7005: Variable 'sampleTranslationOpportunitiesResponse' implicitly has an 'any' type.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.spec.ts(233,24): error TS7005: Variable 'sampleVoiceoverOpportunitiesResponse' implicitly has an 'any' type.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(112,7): error TS2769: No overload matches this call.

  Overload 1 of 15, '(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: ""events""; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; }): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 2 of 15, '(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: ""response""; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; }): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 3 of 15, '(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(117,34): error TS2339: Property 'opportunities' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(118,9): error TS7006: Parameter 'dict' implicitly has an 'any' type.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(122,26): error TS2339: Property 'next_cursor' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(123,20): error TS2339: Property 'more' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(139,7): error TS2769: No overload matches this call.

  Overload 1 of 15, '(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: ""events""; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; }): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 2 of 15, '(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: ""response""; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; }): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 3 of 15, '(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(144,34): error TS2339: Property 'opportunities' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(145,9): error TS7006: Parameter 'dict' implicitly has an 'any' type.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(149,26): error TS2339: Property 'next_cursor' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(150,20): error TS2339: Property 'more' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(165,7): error TS2769: No overload matches this call.

  Overload 1 of 15, '(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: ""events""; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; }): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 2 of 15, '(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: ""response""; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; }): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

  Overload 3 of 15, '(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe?: ""body"" | undefined; params?: HttpParams | { [param: string]: string | string[]; } | undefined; reportProgress?: boolean | undefined; responseType?: ""json"" | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<...>', gave the following error.

    Argument of type 'string | null' is not assignable to parameter of type 'string'.

      Type 'null' is not assignable to type 'string'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(170,34): error TS2339: Property 'opportunities' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(171,9): error TS7006: Parameter 'dict' implicitly has an 'any' type.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(175,26): error TS2339: Property 'next_cursor' does not exist on type 'ArrayBuffer'.

core/templates/pages/contributor-dashboard-page/services/contribution-opportunities-backend-api.service.ts(176,20): error TS2339: Property 'more' does not exist on type 'ArrayBuffer'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(32,9): error TS2322: Type 'null' is not assignable to type 'CsrfTokenService'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(33,9): error TS2322: Type 'null' is not assignable to type 'EmailDashboardDataService'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(96,66): error TS2769: No overload matches this call.

  Overload 1 of 3, '(expected: Expected<ArrayLike<string>>, expectationFailOutput?: any): Promise<void>', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>>'.

  Overload 2 of 3, '(expected: Expected<ArrayLike<string>> | ArrayContaining<string>): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>> | ArrayContaining<string>'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(103,9): error TS2322: Type '10' is not assignable to type 'null'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(115,52): error TS2345: Argument of type '{ inactive_in_last_n_days: null; has_not_logged_in_for_n_days: null; created_at_least_n_exps: null; created_fewer_than_n_exps: null; edited_at_least_n_exps: null; edited_fewer_than_n_exps: null; }' is not assignable to parameter of type 'QueryData'.

  Property 'inactive_in_last_n_days' is incompatible with index signature.

    Type 'null' is not assignable to type 'number | boolean'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(236,9): error TS2322: Type '10' is not assignable to type 'null'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(249,54): error TS2345: Argument of type '{ inactive_in_last_n_days: null; has_not_logged_in_for_n_days: null; created_at_least_n_exps: null; created_fewer_than_n_exps: null; edited_at_least_n_exps: null; edited_fewer_than_n_exps: null; }' is not assignable to parameter of type 'QueryData'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.spec.ts(299,52): error TS2345: Argument of type '{ inactive_in_last_n_days: null; has_not_logged_in_for_n_days: null; created_at_least_n_exps: null; created_fewer_than_n_exps: null; edited_at_least_n_exps: null; edited_fewer_than_n_exps: null; }' is not assignable to parameter of type 'QueryData'.

core/templates/pages/email-dashboard-pages/email-dashboard-data.service.ts(34,3): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.spec.ts(113,9): error TS2322: Type 'string | undefined' is not assignable to type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts(36,3): error TS2322: Type 'null' is not assignable to type 'boolean'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts(37,3): error TS2322: Type 'null' is not assignable to type 'boolean'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts(38,3): error TS2322: Type 'null' is not assignable to type 'boolean'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts(39,3): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts(63,5): error TS2322: Type 'string | undefined' is not assignable to type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/exploration-recommendations.service.ts(74,62): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/pages/topics-and-skills-dashboard-page/topics-and-skills-dashboard-page.service.spec.ts(32,7): error TS2322: Type 'null' is not assignable to type 'TopicsAndSkillsDashboardPageService'.

core/templates/pages/topics-and-skills-dashboard-page/topics-and-skills-dashboard-page.service.spec.ts(146,5): error TS2322: Type 'null' is not assignable to type 'string | undefined'.

core/templates/services/exploration-features-backend-api.service.spec.ts(27,7): error TS2322: Type 'null' is not assignable to type 'ExplorationFeaturesBackendApiService'.

core/templates/services/exploration-stats-backend-api.service.ts(39,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/services/exploration-stats-backend-api.service.ts(43,13): error TS2345: Argument of type '(dict: ExplorationStatsBackendDict) => ExplorationStats' is not assignable to parameter of type '(value: ArrayBuffer) => ExplorationStats | PromiseLike<ExplorationStats>'.

  Types of parameters 'dict' and 'value' are incompatible.

    Type 'ArrayBuffer' is missing the following properties from type 'ExplorationStatsBackendDict': 'exp_id', 'exp_version', 'num_starts', 'num_actual_starts', and 2 more.

core/templates/services/playthrough-issues-backend-api.service.spec.ts(29,7): error TS2322: Type 'null' is not assignable to type 'HttpTestingController'.

core/templates/services/playthrough-issues-backend-api.service.spec.ts(30,7): error TS2322: Type 'null' is not assignable to type 'PlaythroughIssuesBackendApiService'.

core/templates/services/playthrough-issues-backend-api.service.spec.ts(32,7): error TS2322: Type 'null' is not assignable to type 'PlaythroughIssueObjectFactory'.

core/templates/services/playthrough-issues-backend-api.service.ts(49,7): error TS2322: Type 'null' is not assignable to type 'PlaythroughIssue[]'.

core/templates/services/playthrough-issues-backend-api.service.ts(57,19): error TS2322: Type 'PlaythroughIssue[]' is not assignable to type 'null'.

core/templates/services/playthrough-issues-backend-api.service.ts(90,32): error TS2531: Object is possibly 'null'.

core/templates/services/playthrough-issues-backend-api.service.ts(91,15): error TS7006: Parameter 'issue' implicitly has an 'any' type.

core/templates/services/playthrough-issues-backend-api.service.ts(93,15): error TS2531: Object is possibly 'null'.

core/templates/services/playthrough-issues-backend-api.service.ts(107,5): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/services/playthrough-issues-backend-api.service.ts(115,5): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/services/playthrough-issues-backend-api.service.ts(123,5): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/services/state-top-answers-stats-backend-api.service.ts(42,7): error TS2345: Argument of type 'string | null' is not assignable to parameter of type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/services/state-top-answers-stats-backend-api.service.ts(45,75): error TS2345: Argument of type 'ArrayBuffer' is not assignable to parameter of type 'StateTopAnswersStatsBackendDict'.

  Type 'ArrayBuffer' is missing the following properties from type 'StateTopAnswersStatsBackendDict': 'answers', 'interaction_ids'

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(36,12): error TS7008: Member 'answer' implicitly has an 'any' type.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(43,3): error TS7008: Member 'mapOptions' implicitly has an 'any' type.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(44,3): error TS7008: Member 'mapMarkers' implicitly has an 'any' type.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(50,32): error TS7006: Parameter 'lat' implicitly has an 'any' type.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(50,37): error TS7006: Parameter 'lng' implicitly has an 'any' type.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(88,23): error TS7053: Element implicitly has an 'any' type because expression of type '0' can't be used to index type 'Object'.

  Property '0' does not exist on type 'Object'.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(88,34): error TS7053: Element implicitly has an 'any' type because expression of type '1' can't be used to index type 'Object'.

  Property '1' does not exist on type 'Object'.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(90,31): error TS7053: Element implicitly has an 'any' type because expression of type '0' can't be used to index type 'Object'.

  Property '0' does not exist on type 'Object'.

extensions/interactions/InteractiveMap/directives/oppia-response-interactive-map.component.ts(90,42): error TS7053: Element implicitly has an 'any' type because expression of type '1' can't be used to index type 'Object'.

  Property '1' does not exist on type 'Object'.

```
</details>

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13426,https://api.github.com/repos/oppia/oppia/pulls/13426,https://github.com/oppia/oppia/pull/13426,closed,255,138,29,29,22,39,1,1,[{'name': 'PR: LGTM'}],2021-07-19 11:42:31+00:00,2021-07-29 15:46:11+00:00,878620.0,"10 days, 4:03:40","[{'comment_id': 672527717, 'comment_body': ""Are they null or optional ?\r\nif null:\r\n```suggestion\r\n      // 'collectionId', 'storyId' and 'currentNodeId' can be null\r\n      // since they may not be present in the URL.\r\n```\r\nIf they were optional the type would've been like this `collectionId?: string`"", 'comment_created': datetime.datetime(2021, 7, 19, 18, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672532883, 'comment_body': ""I've tackled this here https://github.com/oppia/oppia/pull/13394/files#r672509934. I think `getNodeIndex` should return -1 for all invalid values making undefined a valid case here. Can you make the same changes to that file instead ?"", 'comment_created': datetime.datetime(2021, 7, 19, 18, 29, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672534478, 'comment_body': 'Use a more appropriate `topicName` here', 'comment_created': datetime.datetime(2021, 7, 19, 18, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672540848, 'comment_body': 'This should not be undefined now, right ?', 'comment_created': datetime.datetime(2021, 7, 19, 18, 40, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672542790, 'comment_body': 'Why can this be undefined ?', 'comment_created': datetime.datetime(2021, 7, 19, 18, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 672548813, 'comment_body': '```This component is used at `exploration-player-page` and `practice-session-page` with different usage at both places. The author profiles section exist for former one and the URL contains a valid explorationId while it lacks for the latter. Try-catch here is for catching the error thrown from context-service at getExplorationId so that the component behaves properly at both the places.```', 'comment_created': datetime.datetime(2021, 7, 19, 18, 52, 41, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 673588179, 'comment_body': 'done, please suggest any changes you may prefer', 'comment_created': datetime.datetime(2021, 7, 21, 1, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673588249, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 21, 1, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673588270, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 21, 1, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673588287, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 21, 1, 2, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673588351, 'comment_body': 'yes, done', 'comment_created': datetime.datetime(2021, 7, 21, 1, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 673588457, 'comment_body': 'changed the implementation slightly to remove `undefined` from the type', 'comment_created': datetime.datetime(2021, 7, 21, 1, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 674913537, 'comment_body': '```suggestion\r\n      pageSize: number, cursor: string | null\r\n  ): Promise<EmailDashboardQueryResults> {\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 15, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674914203, 'comment_body': ""```suggestion\r\n      // 'collectionId', 'storyId' and 'currentNodeId' can be null\r\n      // since they may not be present in the URL.\r\n      collectionId: string | null, \r\n      storyId: string | null,\r\n      currentNodeId: string | null, \r\n      explorationId: string\r\n  ): Promise<LearnerExplorationSummary[]> {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 22, 15, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674918635, 'comment_body': 'Add an explanation for this.', 'comment_created': datetime.datetime(2021, 7, 22, 15, 27, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674919788, 'comment_body': 'Introduce a type variable for this.', 'comment_created': datetime.datetime(2021, 7, 22, 15, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674921441, 'comment_body': '```suggestion\r\n    ).toPromise().then((response) => {\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 15, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674921797, 'comment_body': 'Move this to previous line.', 'comment_created': datetime.datetime(2021, 7, 22, 15, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674922229, 'comment_body': 'Add a comment why this can be `null`, ditto below.', 'comment_created': datetime.datetime(2021, 7, 22, 15, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674924236, 'comment_body': 'But why we needed to replace the `if` with `try`?', 'comment_created': datetime.datetime(2021, 7, 22, 15, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674925398, 'comment_body': ""```suggestion\r\n    throw new Error(\r\n      'ContextService should not be used outside the '\r\n      'context of an exploration or a question.'\r\n    );\r\n```"", 'comment_created': datetime.datetime(2021, 7, 22, 15, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674925893, 'comment_body': 'And why is this moved?', 'comment_created': datetime.datetime(2021, 7, 22, 15, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674927503, 'comment_body': 'Previously we resolved with `null`, now we resolve with `[]`, is that fine?', 'comment_created': datetime.datetime(2021, 7, 22, 15, 37, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 674928226, 'comment_body': 'Create type variable for this.', 'comment_created': datetime.datetime(2021, 7, 22, 15, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676136561, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 12, 13, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676137933, 'comment_body': '`getExplorationId()` is supposed to be used inside the context of an exploration or a question and no where else. It is used correctly everywhere except at `core/templates/pages/exploration-player-page/layout-directives/exploration-footer.component.ts`. The reason the `throw()` statement was moved inside `ContextService` is because at all the other places getExplorationId was being called, we would have had to put a check for it when it returns `undefined` which leads to very redundant code which can be avoided.\r\n\r\nwhen we used `if` and called `this.contextService.getExplorationId()`. It was throwing an error in the console when used at `practice-session-page` . we expect this behavior to happen as explained in the comment. This was leading the e2e tests to fail since the console should have no errors.', 'comment_created': datetime.datetime(2021, 7, 25, 12, 23, 43, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676138167, 'comment_body': 'addressed above [here](https://github.com/oppia/oppia/pull/13426/files#r676137933)', 'comment_created': datetime.datetime(2021, 7, 25, 12, 25, 40, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676146436, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 13, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676146442, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 13, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676146451, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 13, 26, 39, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676146459, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 13, 26, 45, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676146504, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 13, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676147101, 'comment_body': 'yes, I have made changes in the file which reflect resolving with `[ ]`. `null` was being used to indicate that the cachedIssues have not been fetched. an empty list serves the same purpose. ', 'comment_created': datetime.datetime(2021, 7, 25, 13, 31, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676147128, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 7, 25, 13, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676150364, 'comment_body': 'done. Below we are returning the same property ', 'comment_created': datetime.datetime(2021, 7, 25, 13, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676198471, 'comment_body': 'Thanks for a thorough explanation, I think this is a bit of codesmell, do you have any idea for a better long term refactor? If yes, could you add a TODO for how to handle it in the future? Maybe create different footer for the practice page?', 'comment_created': datetime.datetime(2021, 7, 25, 20, 30, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676198501, 'comment_body': 'Ok, my suggestion still applies though.', 'comment_created': datetime.datetime(2021, 7, 25, 20, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 676622317, 'comment_body': 'done, created an issue #13494 ', 'comment_created': datetime.datetime(2021, 7, 26, 13, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 676626187, 'comment_body': 'ah yes, done!', 'comment_created': datetime.datetime(2021, 7, 26, 13, 54, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '771902f2d118c9197bdd8163fc66c3d905055448', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37292569cc3dc6494125e8d5afec0fc009b465c1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5299aeb55896f9400244c724aac47109d4b6e6c3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a8097ae282072e5bff04ca78ac1175920ce83fe', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bcd252700722c5d2793132e38437973e540b167', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4404864598f3e68db6967c18d4053efdab432113', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a005e36589a6960810c0a4309593f9c98964678', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3de804d7f5b42b5c799d22d739d5562979622db', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '396327cbb11576113d5579179f9b39d42f384dd1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c43b365ef3a27f2e87a5771ddbae9854b89210e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ded79f8abd4cbf0c689e400329248796b478cedc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cca892136480b8d9a1beeff15110c4188a97a14', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94549f8df09945d13dc3009cd79d54bfb5dc6908', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '572af866b84b797f3c338dca5a77211f903cce75', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30e23bf9b69f1a2e5cd966b321825dfdd800d179', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e3e5e23659a6881b4be22669660de4d7291e6ab', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '451b3c2e44146b9f4642c33fa187c80d333153c8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '612f81397aba3e6542a7ba4f2fe6263ffcd250c7', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '393eb262b498badcba5612559f0fec014ffd35a6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d426bda363b93ee2d3f0ca5d31e776be15c6c1f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ab9832cc3ec65aae51ca78ab33085b8e50dba77', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ac9823b7a65a8d2da9a86c8cc5a2bebec7dd4e7', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '026a0f42169752278a1cd672c0f19cc6e19e03cd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5073a6cfc95abaa20228f1234b1c4f962f7087c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7b4001a9a31e018fb8e44fa539c099264f98308', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b5f7426e47512ce2cbd4ad3e17efec1b633302f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '607a004e9c486017644470448b800502b79bef3f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04490bf232af1671a838844cbc2f3f63f0550fec', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea381a71b59a4225806a41fbabaf44014ceabb16', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
699829990,Fix Part of #10474: Cover some files with TS strict checks - 12,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes TS checks strict for the following files with errors
     1. core/templates/components/button-directives/create-activity-button.component.spec.ts 
     35. core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts 
     23.  core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts 
     22. core/templates/components/common-layout-directives/common-elements/attribution-guide.component.ts 
     22. core/templates/domain/skill/SkillObjectFactory.ts 
     42.  core/templates/domain/skill/SkillObjectFactorySpec.ts 
     25. .core/templates/pages/creator-dashboard-page/modal-templates/create-activity-modal.component.ts 
     4. core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts 
     11. core/templates/pages/exploration-editor-page/translation-tab/services/translation-tab-active-content-id.service.ts 
      4. core/templates/pages/learner-dashboard-page/suggestion-modal/learner-dashboard-suggestion-modal.component.spec.ts 
      2. core/templates/pages/topics-and-skills-dashboard-page/modals/delete-skill-modal.component.spec.ts 
      7.  core/templates/pages/topics-and-skills-dashboard-page/modals/delete-skill-modal.component.ts 
      12. core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.spec.ts 
      12. core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.ts 
      4.  core/templates/services/attribution.service.ts 
      21.  core/templates/services/audio-player.service.ts 
      22.  core/templates/services/audio-player.service.spec.ts 
      4.  core/templates/services/keyboard-shortcut.service.spec.ts 
      17. extensions/rich_text_components/Skillreview/directives/oppia-noninteractive-skillreview.component.ts 

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
<details>
<summary>Covers 19 files with errors:
</summary>

```

Compiling and testing typescript...
Errors found during compilation

core/templates/components/button-directives/create-activity-button.component.spec.ts(42,17): error TS7006: Parameter 'val' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(48,7): error TS7034: Variable 'execCommandSpy' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(56,41): error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(57,42): error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(71,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(85,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(107,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(124,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(151,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(176,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(202,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.spec.ts(225,12): error TS7005: Variable 'execCommandSpy' implicitly has an 'any' type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(75,11): error TS2531: Object is possibly 'null'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(79,7): error TS2322: Type 'HTMLElement | null' is not assignable to type 'HTMLElement'.

  Type 'null' is not assignable to type 'HTMLElement'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(86,30): error TS2532: Object is possibly 'undefined'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(94,23): error TS2532: Object is possibly 'undefined'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(125,7): error TS2722: Cannot invoke an object which is possibly 'undefined'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(151,7): error TS2722: Cannot invoke an object which is possibly 'undefined'.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(180,35): error TS2538: Type 'undefined' cannot be used as an index type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(186,41): error TS2538: Type 'undefined' cannot be used as an index type.

core/templates/components/ck-editor-helpers/ck-editor-copy-content.service.ts(187,48): error TS2538: Type 'undefined' cannot be used as an index type.

core/templates/components/common-layout-directives/common-elements/attribution-guide.component.ts(88,26): error TS2345: Argument of type 'ChildNode | null' is not assignable to parameter of type 'Node'.

  Type 'null' is not assignable to type 'Node'.

core/templates/components/common-layout-directives/common-elements/attribution-guide.component.ts(89,23): error TS2345: Argument of type 'ChildNode | null' is not assignable to parameter of type 'Node'.

  Type 'null' is not assignable to type 'Node'.

core/templates/components/common-layout-directives/common-elements/attribution-guide.component.ts(91,5): error TS2531: Object is possibly 'null'.

core/templates/components/common-layout-directives/common-elements/attribution-guide.component.ts(92,5): error TS2531: Object is possibly 'null'.

core/templates/components/common-layout-directives/common-elements/attribution-guide.component.ts(94,5): error TS2531: Object is possibly 'null'.

core/templates/domain/skill/SkillObjectFactory.ts(152,5): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/skill/SkillObjectFactory.ts(186,5): error TS2322: Type 'null' is not assignable to type 'string[]'.

core/templates/domain/skill/SkillObjectFactory.ts(221,7): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/domain/skill/SkillObjectFactory.ts(252,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(35,7): error TS2322: Type 'null' is not assignable to type 'SkillObjectFactory'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(36,7): error TS2322: Type 'null' is not assignable to type 'ConceptCardObjectFactory'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(37,7): error TS2322: Type 'null' is not assignable to type 'MisconceptionObjectFactory'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(40,7): error TS7034: Variable 'misconceptionDict1' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/SkillObjectFactorySpec.ts(41,7): error TS7034: Variable 'misconceptionDict2' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/SkillObjectFactorySpec.ts(42,7): error TS7034: Variable 'rubricDict' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/SkillObjectFactorySpec.ts(43,7): error TS7034: Variable 'skillContentsDict' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/SkillObjectFactorySpec.ts(44,7): error TS7034: Variable 'skillDict' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/SkillObjectFactorySpec.ts(45,7): error TS7034: Variable 'skillDifficulties' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/skill/SkillObjectFactorySpec.ts(130,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(135,9): error TS7005: Variable 'misconceptionDict1' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(137,9): error TS7005: Variable 'misconceptionDict2' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(139,36): error TS7005: Variable 'rubricDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(141,54): error TS7005: Variable 'skillContentsDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(150,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(152,56): error TS7005: Variable 'misconceptionDict2' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(157,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(163,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(167,9): error TS7005: Variable 'misconceptionDict2' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(171,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(182,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(187,7): error TS7005: Variable 'skillDifficulties' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(191,37): error TS7005: Variable 'skillDifficulties' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(201,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(222,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(223,43): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(228,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/domain/skill/SkillObjectFactorySpec.ts(229,59): error TS2769: No overload matches this call.

  Overload 1 of 3, '(expected: Expected<ArrayLike<string>>, expectationFailOutput?: any): Promise<void>', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>>'.

  Overload 2 of 3, '(expected: Expected<ArrayLike<string>> | ArrayContaining<string>): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>> | ArrayContaining<string>'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(234,35): error TS2769: No overload matches this call.

  Overload 1 of 3, '(expected: Expected<ArrayLike<string>>, expectationFailOutput?: any): Promise<void>', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>>'.

  Overload 2 of 3, '(expected: Expected<ArrayLike<string>> | ArrayContaining<string>): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>> | ArrayContaining<string>'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(242,51): error TS2769: No overload matches this call.

  Overload 1 of 3, '(expected: Expected<ArrayLike<string>>, expectationFailOutput?: any): Promise<void>', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>>'.

  Overload 2 of 3, '(expected: Expected<ArrayLike<string>> | ArrayContaining<string>): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>> | ArrayContaining<string>'.

core/templates/domain/skill/SkillObjectFactorySpec.ts(248,58): error TS7005: Variable 'skillDict' implicitly has an 'any' type.

core/templates/pages/creator-dashboard-page/modal-templates/create-activity-modal.component.ts(31,3): error TS2564: Property 'explorationImageUrl' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/creator-dashboard-page/modal-templates/create-activity-modal.component.ts(32,3): error TS2564: Property 'collectionImageUrl' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/creator-dashboard-page/modal-templates/create-activity-modal.component.ts(33,3): error TS2322: Type 'null' is not assignable to type 'boolean'.

core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts(25,7): error TS7034: Variable 'tutorialEventsBackendApiService' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts(26,7): error TS2322: Type 'null' is not assignable to type 'HttpTestingController'.

core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts(48,5): error TS7005: Variable 'tutorialEventsBackendApiService' implicitly has an 'any' type.

core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts(69,7): error TS7005: Variable 'tutorialEventsBackendApiService' implicitly has an 'any' type.

core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts(91,5): error TS7005: Variable 'tutorialEventsBackendApiService' implicitly has an 'any' type.

core/templates/pages/exploration-editor-page/services/tutorial-events-backend-api.service.spec.ts(112,7): error TS7005: Variable 'tutorialEventsBackendApiService' implicitly has an 'any' type.

core/templates/pages/exploration-editor-page/translation-tab/services/translation-tab-active-content-id.service.ts(38,5): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-editor-page/translation-tab/services/translation-tab-active-content-id.service.ts(42,5): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-editor-page/translation-tab/services/translation-tab-active-content-id.service.ts(51,5): error TS2322: Type 'string' is not assignable to type 'null'.

core/templates/pages/exploration-editor-page/translation-tab/services/translation-tab-active-content-id.service.ts(52,5): error TS2322: Type 'string' is not assignable to type 'null'.

core/templates/pages/learner-dashboard-page/suggestion-modal/learner-dashboard-suggestion-modal.component.spec.ts(34,3): error TS2322: Type 'undefined' is not assignable to type 'Directive'.

core/templates/pages/learner-dashboard-page/suggestion-modal/learner-dashboard-suggestion-modal.component.spec.ts(34,10): error TS2352: Conversion of type 'typeof _' to type 'undefined' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.

core/templates/pages/topics-and-skills-dashboard-page/modals/delete-skill-modal.component.spec.ts(40,27): error TS7006: Parameter 'resp' implicitly has an 'any' type.

core/templates/pages/topics-and-skills-dashboard-page/modals/delete-skill-modal.component.ts(30,3): error TS2564: Property 'skillId' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/topics-and-skills-dashboard-page/modals/delete-skill-modal.component.ts(31,3): error TS2564: Property 'topicsAssignments' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.spec.ts(42,27): error TS7006: Parameter 'resp' implicitly has an 'any' type.

core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.spec.ts(86,7): error TS2322: Type 'null' is not assignable to type 'TopicAssignmentsSummary'.

core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.spec.ts(104,5): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.ts(41,3): error TS2564: Property 'skillId' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.ts(42,3): error TS2564: Property 'topicsAssignments' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/topics-and-skills-dashboard-page/modals/unassign-skill-from-topics-modal.component.ts(45,3): error TS2564: Property 'selectedTopics' has no initializer and is not definitely assigned in the constructor.

core/templates/services/attribution.service.ts(50,60): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/services/attribution.service.ts(52,60): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/services/audio-player.service.ts(54,46): error TS7006: Parameter 'successCallback' implicitly has an 'any' type.

core/templates/services/audio-player.service.ts(54,63): error TS7006: Parameter 'errorCallback' implicitly has an 'any' type.

core/templates/services/audio-player.service.ts(100,33): error TS2345: Argument of type 'number | null' is not assignable to parameter of type 'number | undefined'.

  Type 'null' is not assignable to type 'number | undefined'.

core/templates/services/audio-player.service.ts(109,7): error TS2531: Object is possibly 'null'.

core/templates/services/audio-player.service.ts(118,5): error TS2531: Object is possibly 'null'.

core/templates/services/audio-player.service.ts(194,5): error TS2322: Type 'boolean | null' is not assignable to type 'boolean'.

  Type 'null' is not assignable to type 'boolean'.
b""core/templates/services/audio-player.service.spec.ts(35,7): error TS7034: Variable 'successHandler' implicitly has type 'any' in some locations where its type cannot be determined.\n""
b""core/templates/services/audio-player.service.spec.ts(36,7): error TS7034: Variable 'failHandler' implicitly has type 'any' in some locations where its type cannot be determined.\n""
b""core/templates/services/audio-player.service.spec.ts(65,14): error TS7006: Parameter 'evt' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(65,19): error TS7006: Parameter 'func' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(103,9): error TS7005: Variable 'successHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(103,25): error TS7005: Variable 'failHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(106,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(107,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(319,14): error TS7006: Parameter 'evt' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(319,19): error TS7006: Parameter 'func' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(432,12): error TS7006: Parameter 'evt' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(432,17): error TS7006: Parameter 'func' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(458,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(458,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(461,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.\n""
b""core/templates/services/audio-player.service.spec.ts(462,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.\n""

core/templates/services/keyboard-shortcut.service.spec.ts(50,7): error TS7034: Variable 'windowRef' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/services/keyboard-shortcut.service.spec.ts(52,7): error TS7034: Variable 'keyboardShortcutService' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/services/keyboard-shortcut.service.spec.ts(96,19): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(97,5): error TS7005: Variable 'keyboardShortcutService' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(100,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(103,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(105,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(108,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(110,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(113,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(115,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(118,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(120,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(123,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(125,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(128,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(130,12): error TS7005: Variable 'windowRef' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(136,7): error TS7005: Variable 'keyboardShortcutService' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(141,5): error TS7005: Variable 'keyboardShortcutService' implicitly has an 'any' type.

core/templates/services/keyboard-shortcut.service.spec.ts(155,5): error TS7005: Variable 'keyboardShortcutService' implicitly has an 'any' type.

extensions/rich_text_components/Skillreview/directives/oppia-noninteractive-skillreview.component.ts(50,12): error TS2564: Property 'skillIdWithValue' has no initializer and is not definitely assigned in the constructor.

extensions/rich_text_components/Skillreview/directives/oppia-noninteractive-skillreview.component.ts(51,12): error TS2564: Property 'textWithValue' has no initializer and is not definitely assigned in the constructor.

extensions/rich_text_components/Skillreview/directives/oppia-noninteractive-skillreview.component.ts(52,3): error TS2564: Property 'skillId' has no initializer and is not definitely assigned in the constructor.

extensions/rich_text_components/Skillreview/directives/oppia-noninteractive-skillreview.component.ts(53,3): error TS2564: Property 'linkText' has no initializer and is not definitely assigned in the constructor.

extensions/rich_text_components/Skillreview/directives/oppia-noninteractive-skillreview.component.ts(86,31): error TS7006: Parameter 'event' implicitly has an 'any' type.

```
</details>

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13520,https://api.github.com/repos/oppia/oppia/pulls/13520,https://github.com/oppia/oppia/pull/13520,closed,189,93,22,37,32,47,0,1,[],2021-07-29 20:44:04+00:00,2021-08-17 07:12:30+00:00,1592906.0,"18 days, 10:28:26","[{'comment_id': 681010497, 'comment_body': ""try this\r\n```typescript\r\nckEditorStub = {\r\n      id: 'editor1',\r\n      insertHtml: (html: string) => {},\r\n      execCommand: (commandName: string): boolean => true,\r\n    } as CKEDITOR.editor;\r\n```\r\nditto below"", 'comment_created': datetime.datetime(2021, 8, 2, 14, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681015287, 'comment_body': 'Add a comment explaining why this can be null', 'comment_created': datetime.datetime(2021, 8, 2, 14, 23, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681015815, 'comment_body': 'Can leave a line above', 'comment_created': datetime.datetime(2021, 8, 2, 14, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681019913, 'comment_body': 'This is stacked on https://github.com/oppia/oppia/pull/13368 right ? Is the type `null[]` correct or should it be `null` ?', 'comment_created': datetime.datetime(2021, 8, 2, 14, 29, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681022992, 'comment_body': 'Not really sure if this is the right thing to do because directive is used in other spec files by simply injecting', 'comment_created': datetime.datetime(2021, 8, 2, 14, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681024368, 'comment_body': 'Should we throw an error here is `_currentTrack` is null ?', 'comment_created': datetime.datetime(2021, 8, 2, 14, 34, 45, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681065464, 'comment_body': 'yes and type `null[]` is correct', 'comment_created': datetime.datetime(2021, 8, 2, 15, 24, 53, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681069842, 'comment_body': 'discussed this approach with @vojtechjelinek. ', 'comment_created': datetime.datetime(2021, 8, 2, 15, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681072035, 'comment_body': 'The comment is added at the file above [here](https://github.com/oppia/oppia/pull/13520/files#diff-e8e22befb8adc87a41c837f7b4ce4a8fd8c1bd2e7c767531033672e452e3965cR46-R47)', 'comment_created': datetime.datetime(2021, 8, 2, 15, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681075112, 'comment_body': 'Thanks! done', 'comment_created': datetime.datetime(2021, 8, 2, 15, 37, 10, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681075745, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 2, 15, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681140870, 'comment_body': 'yes, done!', 'comment_created': datetime.datetime(2021, 8, 2, 17, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681354967, 'comment_body': 'Why this? And can we do this?\r\n```suggestion\r\n      Boolean(offsetParent.dataset.ckeWidgetId) ||\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 0, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681355302, 'comment_body': ""```suggestion\r\n    // 'currentTrack' is not null since the track is playing and that is why we use '?'.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 3, 0, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681355697, 'comment_body': '```suggestion\r\n  private async _loadAsync(\r\n      filename: string,\r\n      successCallback: (value: void | PromiseLike<void>) => void,\r\n      errorCallback: (reason?: string[]) => void\r\n  ) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 0, 50, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681355990, 'comment_body': '```suggestion\r\n          summaries[0].human_readable_contributors_summary :\r\n          <HumanReadableContributorsSummary> {}\r\n        );\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 0, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681357053, 'comment_body': 'Please add a comment explaining this.', 'comment_created': datetime.datetime(2021, 8, 3, 0, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681357757, 'comment_body': 'Was this interface wrong before?', 'comment_created': datetime.datetime(2021, 8, 3, 0, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681357951, 'comment_body': '`successCallback: (value: ExplorationSummaryBackendDict) => void,`', 'comment_created': datetime.datetime(2021, 8, 3, 0, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681358058, 'comment_body': '```suggestion\r\n      }\r\n    ).toPromise().then((summaries: ExplorationSummaryBackendDict) => {\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 0, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681358273, 'comment_body': '```suggestion\r\n    skills.push(\r\n      skillObjectFactory.createFromBackendDict(skillBackendDict).toBackendDict()\r\n    );\r\n```', 'comment_created': datetime.datetime(2021, 8, 3, 0, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681358953, 'comment_body': 'Would it actually be possible to refactor this object to only be created for skills with ID?', 'comment_created': datetime.datetime(2021, 8, 3, 1, 0, 13, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681359157, 'comment_body': ""```suggestion\r\n  // This will return 'null' if the passed difficulty \r\n  // does not match any difficulty in the rubrics.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 3, 1, 0, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681359252, 'comment_body': ""```suggestion\r\n      throw new Error('The skill IDs are not defined');\r\n```"", 'comment_created': datetime.datetime(2021, 8, 3, 1, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681359475, 'comment_body': ""```suggestion\r\n    // undisplayed <iframe>. That is why we can use '?'.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 3, 1, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 681656892, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 11, 4, 10, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681657955, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 11, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681658527, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 11, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681659157, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 11, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681684801, 'comment_body': 'yes, it was declared wrong before. The correct is the following \r\nhttps://github.com/oppia/oppia/blob/f3354073aab833940ebd92f8c59914e250dc0c9c/core/domain/summary_services.py#L77-L85', 'comment_created': datetime.datetime(2021, 8, 3, 11, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681686078, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 11, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681686131, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 11, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681711078, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 12, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681711827, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 12, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681713041, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 3, 12, 32, 36, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 681716180, 'comment_body': 'The change was made because the values of `offsetParent.dataset.ckeWidgetId` could either be `null` or `string` and not `boolean`. The suggested change is made ', 'comment_created': datetime.datetime(2021, 8, 3, 12, 36, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684686605, 'comment_body': 'should we create an issue to remove the usage of interstitial items in the code? This may be a big refactor', 'comment_created': datetime.datetime(2021, 8, 7, 22, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684889889, 'comment_body': '@EeshaArif Have you tested the changes in this file? (through UI)', 'comment_created': datetime.datetime(2021, 8, 9, 3, 57, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 685134724, 'comment_body': ""Yep, you can do that. But I would also expect a small analysis on how complicated would this actually be, since now we don't have anything specific."", 'comment_created': datetime.datetime(2021, 8, 9, 12, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685136117, 'comment_body': ""Actually now I think about it shouldn't this throw error instead?"", 'comment_created': datetime.datetime(2021, 8, 9, 12, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685188715, 'comment_body': 'Please explain the `void` here with a comment.', 'comment_created': datetime.datetime(2021, 8, 9, 13, 23, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687071662, 'comment_body': 'It was the type of `resolve`, updated the type. After successful loading, the success callback is called and returned with no value passed.', 'comment_created': datetime.datetime(2021, 8, 11, 18, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687223544, 'comment_body': 'yes, have tested this thoroughly', 'comment_created': datetime.datetime(2021, 8, 11, 21, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687223929, 'comment_body': 'yes, tested this as well. there was no case where it was returning null. updated.', 'comment_created': datetime.datetime(2021, 8, 11, 21, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687483792, 'comment_body': 'Have created an issue #13637 and also a PR [13638](https://github.com/oppia/oppia/pull/13638) to address this', 'comment_created': datetime.datetime(2021, 8, 12, 8, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687835392, 'comment_body': ""```suggestion\r\n  // 'currentTrackFilename','currentTrack' and 'lastPauseOrSeekPos'\r\n  // will be 'null' when the track is not selected or ended.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 12, 15, 23, 4, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687891330, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 16, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '04aa66202920b5508c3cb3ad3108784d7bab43d2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aabf8137376e0bf3292109b1722030aa50ddb0b3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb64f5f523ee6a735d465d1e88fd7dbfd036269', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33c914fea30a20c78e53e48075d305e434563fa5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9c7fc8b14a0258fce5944df74dc0859f36da392', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '978fbf15863e681679006633134c4167ec81df4f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00d2386ae09828075d9a3a1d49c42665e9091e4f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f160df2551ab51e02dc9f512556469af212060d1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcaaf10c97622a65fbacba8ed4e7840c64a1f70c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ca13c0889b51ca4661e59305b1c528f475aabf9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '804fa3e91b329eafc8f57770e053583c64745306', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61735946a5e584eecdcdb1a79cbfd825bbf8bb15', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad192e0f2378b3c1ce9fd82bd0085177187c9b09', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8bf7e41493953d1dc0f373f0401282ae80f62df', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c85766eb558c5fa2acdd1e4c12d7efa2b491e60', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3a98b113c9c1ed975f7aaf14b3727411896d12b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d53ed5f1b13de35b033e2138481df20c837c4e6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c0cafca24d1c97beb97c9d9884c05ad7f8b33a3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b18b9629ff96f495b415962a8848e72c6dea3296', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c713d4af217b9fb1995195010b026d72ff41d38b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2b72862e31596e416033ae8f9f8d152f44656b5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8191d9c4c356711d9ff55d1c237fa3433a77808b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e8aa7683fcea832aabc9d536db1afd1eb2f6db3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c3ea5f03f28ef122ad3c8064e52992f8c1ee289', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f75eb53cc8dd04d7adba841091d19b3789d44c61', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e406c57be006e76e302b07ac4ce3077a35925121', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37675c60e5c4ab2618dafc5e5be9d77e4ccdd6fd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcfd1f04ba710849a4ba464c2ba0ca3036670b81', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf1dd19e2a9dc12d31ecc48d61812aea78b53c90', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbc59255d12d9b7a5fdb638ffed6fd4f32e6d5a0', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed1af2c6b8a97cac93c89147e4d0ba1f1402f0ea', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaf7c4556d62a06fc0bad4cce5a26e5b180ea37e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74fbe93ef7eb7badc334747bcb949f6eb70d479a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8af148a41040a9d5d1af28b5aa9860fdec70ea1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67cf98d6e072dcfd0fe16534f5e0289cb490d8a2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bbc6e1b17cc0754d9ff67e7ac360fb5d148ead0', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b7153d6c6f4b78832ab2115bceb8971810675db', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
701726128,Fix Part of #10474: Cover some files with TS strict checks - 13,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes TS checks strict for the following files with errors:
    1. ""core/templates/components/entity-creation-services/skill-creation.service.spec.ts"",
    1. ""core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts"",
    1. ""core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts"",
    1. ""core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts"",
    1. ""core/templates/domain/blog/blog-post.model.spec.ts"",
    1. ""core/templates/domain/blog/blog-post.model.ts"",
    1. ""core/templates/domain/utilities/url-interpolation.service.spec.ts"",
    1. ""core/templates/i18n/missing-translation-custom-handler.spec.ts"",
    1. ""core/templates/i18n/missing-translation-custom-handler.ts"",
    1. ""core/templates/i18n/translate-cache.factory.spec.ts"",
    1. ""core/templates/i18n/translate-custom-parser.spec.ts"",
    1. ""core/templates/pages/about-page/about-page.component.spec.ts"",
    1. ""core/templates/pages/blog-admin-page/blog-admin-page.component.spec.ts"",
    1. ""core/templates/pages/blog-admin-page/blog-admin-page.component.ts"",
    1. ""core/templates/pages/blog-admin-page/services/blog-admin-data.service.spec.ts"",
    1. ""core/templates/pages/blog-admin-page/services/blog-admin-data.service.ts"",
    1. ""core/templates/pages/blog-dashboard-page/blog-card/blog-card.component.ts"",
    1. ""core/templates/pages/classroom-page/classroom-page.component.ts"",
    1. ""core/templates/pages/review-test-page/review-test-engine.service.spec.ts"",
    1. ""core/templates/services/exploration-stats.service.spec.ts"",
    1. ""core/templates/services/exploration-stats.service.ts"",
    1. ""core/templates/services/page-title.service.ts"",
    1. ""core/templates/services/suggestion-modal.service.spec.ts""

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
<details>
<summary>Covers 23 files with errors</summary>

```
Compiling and testing typescript...
Errors found during compilation

core/templates/components/entity-creation-services/skill-creation.service.spec.ts(24,7): error TS2322: Type 'null' is not assignable to type 'SkillCreationService'.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(27,7): error TS2322: Type 'null' is not assignable to type 'CsrfTokenService'.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(28,7): error TS7034: Variable 'successHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(29,7): error TS7034: Variable 'failHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(98,33): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(98,49): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(111,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(112,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(125,13): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(125,29): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(135,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(136,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(149,13): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(149,29): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(160,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(161,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(173,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(173,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(183,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(184,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(195,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(195,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(208,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(209,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(224,30): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(224,46): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(233,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(234,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(249,30): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(249,46): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(262,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(263,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(279,34): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(279,50): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(288,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(289,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(302,34): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(302,50): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(315,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog-admin/blog-admin-backend-api.service.spec.ts(316,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(28,7): error TS7034: Variable 'successHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(29,7): error TS7034: Variable 'failHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(77,46): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(77,62): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(85,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(86,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(92,9): error TS2322: Type '{ id: string; author_username: string; title: string; summary: string; thumbnail_filename: string; tags: string[]; url_fragment: string; last_updated: string; published_on: string; }' is not assignable to type 'never'.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(94,9): error TS2322: Type '{ id: string; author_username: string; title: string; summary: string; thumbnail_filename: string; tags: string[]; url_fragment: string; last_updated: string; published_on: string; }' is not assignable to type 'never'.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(96,9): error TS2322: Type 'BlogPostSummary' is not assignable to type 'never'.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(98,9): error TS2322: Type 'BlogPostSummary' is not assignable to type 'never'.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(99,48): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(99,64): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(107,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(108,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(114,48): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(114,64): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(127,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(128,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(133,38): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(133,54): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(142,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(143,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(148,40): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(148,56): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(161,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-dashboard-backend-api.service.spec.ts(162,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(28,7): error TS7034: Variable 'successHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(29,7): error TS7034: Variable 'failHandler' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(78,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(78,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(86,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(87,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(93,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(93,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(107,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(108,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(113,7): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(113,23): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(124,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(125,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(132,9): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(132,25): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(145,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(146,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(161,49): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(161,65): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(169,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(171,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(182,46): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(182,62): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(195,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(196,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(205,16): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(205,32): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(214,12): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(215,12): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(225,18): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(225,34): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(239,14): error TS7005: Variable 'successHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post-editor-backend-api.service.spec.ts(240,14): error TS7005: Variable 'failHandler' implicitly has an 'any' type.

core/templates/domain/blog/blog-post.model.spec.ts(63,5): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/domain/blog/blog-post.model.ts(108,7): error TS2380: The return type of a 'get' accessor must be assignable to its 'set' accessor type

  Type 'null' is not assignable to type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(43,61): error TS2345: Argument of type '{ origin: string; }' is not assignable to parameter of type 'Location'.

  Type '{ origin: string; }' is missing the following properties from type 'Location': ancestorOrigins, hash, host, hostname, and 8 more.

core/templates/domain/utilities/url-interpolation.service.spec.ts(77,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string, arg1: InterpolationValuesType) => string, thisArg: UrlInterpolationService, arg0: string, arg1: InterpolationValuesType): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string, thisArg: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]): (...args: (string | InterpolationValuesType)[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string'.

      Types of parameters 'urlTemplate' and 'args' are incompatible.

        Type 'string | InterpolationValuesType' is not assignable to type 'string'.

          Type 'InterpolationValuesType' is not assignable to type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(79,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string, arg1: {}) => string, thisArg: UrlInterpolationService, arg0: string, arg1: {}): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string, thisArg: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]): (...args: (string | InterpolationValuesType)[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(81,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string, arg1: {}) => string, thisArg: UrlInterpolationService, arg0: string, arg1: {}): () => string', gave the following error.

    Argument of type 'undefined' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string, thisArg: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]): (...args: (string | InterpolationValuesType)[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(86,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: """", arg1: InterpolationValuesType) => string, thisArg: UrlInterpolationService, arg0: """", arg1: InterpolationValuesType): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'InterpolationValuesType'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string, thisArg: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]): (...args: (string | InterpolationValuesType)[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: (string | InterpolationValuesType)[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(91,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: { ...; }, arg0: ""url"", arg1: InterpolationValuesType) => string, thisArg: { alertsService: undefined; }, arg0: ""url"", arg1: InterpolationValuesType): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'InterpolationValuesType'.

  Overload 2 of 6, '(this: (this: { ...; }, ...args: (string | InterpolationValuesType)[]) => string, thisArg: { alertsService: undefined; }, ...args: (string | InterpolationValuesType)[]): (...args: (string | InterpolationValuesType)[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: { alertsService: undefined; }, ...args: (string | InterpolationValuesType)[]) => string'.

      Types of parameters 'urlTemplate' and 'args' are incompatible.

        Type 'string | InterpolationValuesType' is not assignable to type 'string'.

          Type 'InterpolationValuesType' is not assignable to type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(95,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: { ...; }, arg0: ""url"", arg1: InterpolationValuesType) => string, thisArg: { alertsService: undefined; }, arg0: ""url"", arg1: InterpolationValuesType): () => string', gave the following error.

    Argument of type 'undefined' is not assignable to parameter of type 'InterpolationValuesType'.

  Overload 2 of 6, '(this: (this: { ...; }, ...args: (string | InterpolationValuesType)[]) => string, thisArg: { alertsService: undefined; }, ...args: (string | InterpolationValuesType)[]): (...args: (string | InterpolationValuesType)[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: { alertsService: undefined; }, ...args: (string | InterpolationValuesType)[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(100,7): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: { ...; }, arg0: ""/test_url/<param>"", arg1: InterpolationValuesType) => string, thisArg: { alertsService: undefined; }, arg0: ""/test_url/<param>"", arg1: InterpolationValuesType): () => string', gave the following error.

    Argument of type 'string' is not assignable to parameter of type 'InterpolationValuesType'.

  Overload 2 of 6, '(this: (this: { alertsService: undefined; }, ...args: (""value"" | ""/test_url/<param>"")[]) => string, thisArg: { alertsService: undefined; }, ...args: (""value"" | ""/test_url/<param>"")[]): (...args: (""value"" | ""/test_url/<param>"")[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: { alertsService: undefined; }, ...args: (""value"" | ""/test_url/<param>"")[]) => string'.

      Types of parameters 'interpolationValues' and 'args' are incompatible.

        Type 'string' is not assignable to type 'InterpolationValuesType'.

          Type 'string' is not assignable to type 'InterpolationValuesType'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(105,7): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: { ...; }, arg0: ""/test_url/<param>"", arg1: InterpolationValuesType) => string, thisArg: { alertsService: undefined; }, arg0: ""/test_url/<param>"", arg1: InterpolationValuesType): () => string', gave the following error.

    Argument of type 'string[]' is not assignable to parameter of type 'InterpolationValuesType'.

      Index signature is missing in type 'string[]'.

  Overload 2 of 6, '(this: (this: { alertsService: undefined; }, ...args: ""/test_url/<param>""[]) => string, thisArg: { alertsService: undefined; }, ...args: ""/test_url/<param>""[]): (...args: ""/test_url/<param>""[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: { alertsService: undefined; }, ...args: ""/test_url/<param>""[]) => string'.

      Types of parameters 'interpolationValues' and 'args' are incompatible.

        Type 'string' is not assignable to type 'InterpolationValuesType'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(241,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType) => string, thisArg: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType): () => string', gave the following error.

    Type 'number' is not assignable to type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string, thisArg: UrlInterpolationService, ...args: ""/test_url/<page>""[]): (...args: ""/test_url/<page>""[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string'.

      Types of parameters 'interpolationValues' and 'args' are incompatible.

        Type 'string' is not assignable to type 'InterpolationValuesType'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(246,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType) => string, thisArg: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType): () => string', gave the following error.

    Type '{}' is not assignable to type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string, thisArg: UrlInterpolationService, ...args: ""/test_url/<page>""[]): (...args: ""/test_url/<page>""[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(251,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType) => string, thisArg: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType): () => string', gave the following error.

    Type 'never[]' is not assignable to type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string, thisArg: UrlInterpolationService, ...args: ""/test_url/<page>""[]): (...args: ""/test_url/<page>""[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(256,12): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType) => string, thisArg: UrlInterpolationService, arg0: ""/test_url/<page>"", arg1: InterpolationValuesType): () => string', gave the following error.

    Type 'RegExp' is not assignable to type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string, thisArg: UrlInterpolationService, ...args: ""/test_url/<page>""[]): (...args: ""/test_url/<page>""[]) => string', gave the following error.

    The 'this' context of type '(urlTemplate: string, interpolationValues: InterpolationValuesType) => string' is not assignable to method's 'this' of type '(this: UrlInterpolationService, ...args: ""/test_url/<page>""[]) => string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(322,44): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string) => string, thisArg: UrlInterpolationService, arg0: string): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: string[]) => string, thisArg: UrlInterpolationService, ...args: string[]): (...args: string[]) => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(327,44): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string) => string, thisArg: UrlInterpolationService, arg0: string): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: string[]) => string, thisArg: UrlInterpolationService, ...args: string[]): (...args: string[]) => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(332,58): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string) => string, thisArg: UrlInterpolationService, arg0: string): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: string[]) => string, thisArg: UrlInterpolationService, ...args: string[]): (...args: string[]) => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(337,50): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string) => string, thisArg: UrlInterpolationService, arg0: string): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: string[]) => string, thisArg: UrlInterpolationService, ...args: string[]): (...args: string[]) => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(342,44): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string) => string, thisArg: UrlInterpolationService, arg0: string): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: string[]) => string, thisArg: UrlInterpolationService, ...args: string[]): (...args: string[]) => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/domain/utilities/url-interpolation.service.spec.ts(347,50): error TS2769: No overload matches this call.

  Overload 1 of 6, '(this: (this: UrlInterpolationService, arg0: string) => string, thisArg: UrlInterpolationService, arg0: string): () => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

  Overload 2 of 6, '(this: (this: UrlInterpolationService, ...args: string[]) => string, thisArg: UrlInterpolationService, ...args: string[]): (...args: string[]) => string', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/i18n/missing-translation-custom-handler.spec.ts(29,9): error TS2322: Type 'null' is not assignable to type 'TranslateService'.

core/templates/i18n/missing-translation-custom-handler.spec.ts(38,9): error TS2322: Type 'null' is not assignable to type 'TranslateService'.

core/templates/i18n/missing-translation-custom-handler.ts(26,14): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ readonly I18N_LIBRARY_PAGE_TITLE_FRAGMENT_FOR_WEB: ""Library""; readonly I18N_LIBRARY_LOADING: ""Loading""; readonly I18N_SIGNUP_PAGE_SUBTITLE: ""Registration""; readonly I18N_SIGNUP_PAGE_TITLE_FRAGMENT_FOR_WEB: ""Oppia""; ... 7 more ...; readonly I18N_SIGNUP_LOADING: ""Loading""; }'.

  No index signature with a parameter of type 'string' was found on type '{ readonly I18N_LIBRARY_PAGE_TITLE_FRAGMENT_FOR_WEB: ""Library""; readonly I18N_LIBRARY_LOADING: ""Loading""; readonly I18N_SIGNUP_PAGE_SUBTITLE: ""Registration""; readonly I18N_SIGNUP_PAGE_TITLE_FRAGMENT_FOR_WEB: ""Oppia""; ... 7 more ...; readonly I18N_SIGNUP_LOADING: ""Loading""; }'.

core/templates/i18n/translate-cache.factory.spec.ts(31,65): error TS2345: Argument of type 'null' is not assignable to parameter of type 'TranslateService'.

core/templates/i18n/translate-cache.factory.spec.ts(46,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'TranslateService'.

core/templates/i18n/translate-custom-parser.spec.ts(65,59): error TS2345: Argument of type 'null' is not assignable to parameter of type '{ [key: string]: string | number | boolean; } | undefined'.

core/templates/i18n/translate-custom-parser.spec.ts(83,43): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Object'.

core/templates/pages/about-page/about-page.component.spec.ts(55,7): error TS7034: Variable 'component' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/about-page/about-page.component.spec.ts(59,14): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(64,14): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(73,5): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(77,12): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(86,7): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(90,14): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(100,7): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/about-page/about-page.component.spec.ts(104,14): error TS7005: Variable 'component' implicitly has an 'any' type.

core/templates/pages/blog-admin-page/blog-admin-page.component.spec.ts(110,24): error TS2345: Argument of type 'null' is not assignable to parameter of type 'void'.

core/templates/pages/blog-admin-page/blog-admin-page.component.spec.ts(112,24): error TS2345: Argument of type 'null' is not assignable to parameter of type 'void'.

core/templates/pages/blog-admin-page/blog-admin-page.component.spec.ts(124,56): error TS2769: No overload matches this call.

  Overload 1 of 3, '(expected: Expected<ArrayLike<string>>, expectationFailOutput?: any): Promise<void>', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>>'.

  Overload 2 of 3, '(expected: Expected<ArrayLike<string>> | ArrayContaining<string>): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Expected<ArrayLike<string>> | ArrayContaining<string>'.

core/templates/pages/blog-admin-page/blog-admin-page.component.spec.ts(234,9): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/blog-admin-page/blog-admin-page.component.spec.ts(240,9): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/blog-admin-page/blog-admin-page.component.ts(51,3): error TS7008: Member 'roleToActions' implicitly has an 'any' type.

core/templates/pages/blog-admin-page/blog-admin-page.component.ts(53,3): error TS2564: Property 'formData' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/blog-admin-page/blog-admin-page.component.ts(74,9): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/blog-admin-page/blog-admin-page.component.ts(175,7): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

core/templates/pages/blog-admin-page/services/blog-admin-data.service.spec.ts(26,7): error TS2322: Type 'null' is not assignable to type 'BlogAdminDataService'.

core/templates/pages/blog-admin-page/services/blog-admin-data.service.ts(32,5): error TS2322: Type 'null' is not assignable to type 'Promise<BlogAdminPageData>'.

core/templates/pages/blog-dashboard-page/blog-card/blog-card.component.ts(33,3): error TS2564: Property 'authorProfilePictureUrl' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/blog-dashboard-page/blog-card/blog-card.component.ts(55,7): error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.

  Type 'undefined' is not assignable to type 'string'.

core/templates/pages/classroom-page/classroom-page.component.ts(40,3): error TS2564: Property 'classroomData' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/review-test-page/review-test-engine.service.spec.ts(23,7): error TS2322: Type 'null' is not assignable to type 'ReviewTestEngineService'.

core/templates/services/exploration-stats.service.spec.ts(41,5): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.

core/templates/services/exploration-stats.service.spec.ts(54,40): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.

core/templates/services/exploration-stats.service.spec.ts(63,44): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.

core/templates/services/exploration-stats.service.spec.ts(70,42): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.

core/templates/services/exploration-stats.service.spec.ts(83,44): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.

core/templates/services/exploration-stats.service.ts(31,11): error TS2322: Type 'null' is not assignable to type 'Promise<ExplorationStats>'.

core/templates/services/page-title.service.ts(27,3): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/services/page-title.service.ts(28,3): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/services/suggestion-modal.service.spec.ts(23,7): error TS7034: Variable 'sms' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/services/suggestion-modal.service.spec.ts(25,12): error TS7006: Parameter 'paramDict' implicitly has an 'any' type.

core/templates/services/suggestion-modal.service.spec.ts(26,14): error TS7006: Parameter 'message' implicitly has an 'any' type.

core/templates/services/suggestion-modal.service.spec.ts(40,5): error TS7005: Variable 'sms' implicitly has an 'any' type.

core/templates/services/suggestion-modal.service.spec.ts(52,5): error TS7005: Variable 'sms' implicitly has an 'any' type.

core/templates/services/suggestion-modal.service.spec.ts(60,5): error TS7005: Variable 'sms' implicitly has an 'any' type.


```

</details>

For `page-title.service.ts`: 
The errors were fixed after merging [#13459](https://github.com/oppia/oppia/pull/13459) in this PR.

The setPageTitle() was actually not setting the navbar titles of the pages, it was instead setting the document titles. (The <title></title> inside the html <head></head>)
The navbar or page titles are actually only set for mobile. (No page titles exist for non-mobily).
I have created a PR #13684 to rename the set/getPageTitle to set/getDocumentTitle to avoid confusion.

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If @vojtechjelinek  since I have added `page-title.service` in the `tsconfig-strict` this PR. I am just mentioning the @vojtechjelinek on further inspection,you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13555,https://api.github.com/repos/oppia/oppia/pulls/13555,https://github.com/oppia/oppia/pull/13555,closed,206,140,24,27,31,35,1,2,[{'name': 'PR: LGTM'}],2021-08-02 19:28:59+00:00,2021-08-16 23:07:18+00:00,1222699.0,"14 days, 3:38:19","[{'comment_id': 681807168, 'comment_body': 'Have tried this creating a MockWindowRef and injecting the `WindowRef` itself ? ', 'comment_created': datetime.datetime(2021, 8, 3, 14, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681824508, 'comment_body': '`uibModalInstance` is used in ajs, since the file is migrated should we use ngbModalInstance here ? Ditto in the service as well', 'comment_created': datetime.datetime(2021, 8, 3, 14, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 681824926, 'comment_body': 'I am not sure what this  comment meant. Can you please elaborate ?', 'comment_created': datetime.datetime(2021, 8, 3, 14, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 683411937, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 5, 12, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 683413420, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 5, 12, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 683767199, 'comment_body': '@srijanreddy98 can let us know whether we should use this or not.', 'comment_created': datetime.datetime(2021, 8, 5, 20, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684251730, 'comment_body': 'Why can this be null ? Please add a comment', 'comment_created': datetime.datetime(2021, 8, 6, 13, 50, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684253719, 'comment_body': 'Why are we assigning same type as that of the value here (Line 43)? ', 'comment_created': datetime.datetime(2021, 8, 6, 13, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684275151, 'comment_body': 'Can we do non-null assertion here ? Removing null from the constructor. See https://github.com/oppia/oppia/pull/13459#discussion_r683037845', 'comment_created': datetime.datetime(2021, 8, 6, 14, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684277391, 'comment_body': 'Can we do non-null assertion here ?', 'comment_created': datetime.datetime(2021, 8, 6, 14, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684671707, 'comment_body': ""no, i don't think that would be appropriate... these titles are actually null. they don't exist for certain pages"", 'comment_created': datetime.datetime(2021, 8, 7, 19, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684687167, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 7, 22, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684687279, 'comment_body': 'The comment has been added above [here](https://github.com/oppia/oppia/pull/13555/files#diff-6dba440ad698d9e90b7b7b18e490358b5a556451ca38093bcedcbe9fd17f281cR33-R35)', 'comment_created': datetime.datetime(2021, 8, 7, 23, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684687713, 'comment_body': 'I have refactored the code to make it more readable. We are creating a mock `alertsObject` which has a property `alertsService` ', 'comment_created': datetime.datetime(2021, 8, 7, 23, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684722967, 'comment_body': '@srijanreddy98 PTAL!', 'comment_created': datetime.datetime(2021, 8, 8, 6, 25, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 685339033, 'comment_body': 'This relates to our discussion on your other PR.', 'comment_created': datetime.datetime(2021, 8, 9, 16, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685340662, 'comment_body': 'Why is this variable prefixed with `_` can we remove it?', 'comment_created': datetime.datetime(2021, 8, 9, 16, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685340882, 'comment_body': 'Should we use `@ts-expect-error`?', 'comment_created': datetime.datetime(2021, 8, 9, 16, 23, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685341092, 'comment_body': 'ditto elsewhere', 'comment_created': datetime.datetime(2021, 8, 9, 16, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685345112, 'comment_body': 'Can we remove this? Ditto elsewhere.', 'comment_created': datetime.datetime(2021, 8, 9, 16, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685348964, 'comment_body': 'Is it possible to get rid of this somehow?', 'comment_created': datetime.datetime(2021, 8, 9, 16, 34, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685351785, 'comment_body': ""Didn't you also migrate this file in a different PR?"", 'comment_created': datetime.datetime(2021, 8, 9, 16, 38, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685354393, 'comment_body': 'Hmm, can we get rid of the `undefined`?', 'comment_created': datetime.datetime(2021, 8, 9, 16, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685355558, 'comment_body': 'Not sure if I understand this.', 'comment_created': datetime.datetime(2021, 8, 9, 16, 43, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687489565, 'comment_body': '#13637 Have created the issue.', 'comment_created': datetime.datetime(2021, 8, 12, 8, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687492251, 'comment_body': ""This was done for better readability since the `alertsObject`'s **property** `alertsService` is assigned this(`_alertsService`) value. \r\n```typescript\r\nlet alertsObject: Record<'alertsService', AlertsService>;\r\n....\r\n....\r\nalertsObject = { alertsService: _alertsService };\r\n```"", 'comment_created': datetime.datetime(2021, 8, 12, 8, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687494586, 'comment_body': 'Using `ts-expect-error` gives TS errors of `unused directive` since the `tsconfig.json` file is not set to `strict`. This is because the errors only occur in strict mode,', 'comment_created': datetime.datetime(2021, 8, 12, 8, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687495560, 'comment_body': 'yes, this was a dependency so made the changes here as well. This file is listed as `ready` in only one PR though', 'comment_created': datetime.datetime(2021, 8, 12, 8, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687500631, 'comment_body': 'updated comment. `submitUpdateRoleForm` is called when the update role button is clicked. It will be disabled of the `newRole` is `null` and hence `newRole` will always have a value when this method is called and for that reason, typecasting is safe.', 'comment_created': datetime.datetime(2021, 8, 12, 8, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687537359, 'comment_body': 'Since `newRole` is set through a dropdown, I think the only correct way to avoid this would be by setting a default value for the role in the dropdown.\r\nThe initial value being `null` for dropdowns with no default value in forms is a common practice ', 'comment_created': datetime.datetime(2021, 8, 12, 9, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687545741, 'comment_body': ""the property `publishedOn` is an optional property for when the blog post has not been published yet (they are draft). I don't think there is a way to get rid of `undefined` in this scenario"", 'comment_created': datetime.datetime(2021, 8, 12, 9, 28, 31, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687563532, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 9, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688844095, 'comment_body': 'Makes sense.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688844172, 'comment_body': 'Much better now, thanks.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688844507, 'comment_body': 'Ok, same comments as in the other PR also apply here.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 29, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': '891fc8d033c2763245bbd1ab7d234c155a0703f9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53ed3639d3685b3c8f6a1cad1aad92d1e6857ab1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49f5ac7779961e75db3edbfbca1b6bf7462f2e06', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b130e94b1ebaa8cc81dd6e5cb9a966e9dc2f569', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de075939ef5c5af6f268fd34a6f32d86953d122b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a36eb727ecb46f77f104882142a4c2df645fb2bd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52f411d99dd0d8e0376fa36bbe686453f7829e50', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '092cd31ae2977011f5680a0df934f6ddda9bce8c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13818525645ef6b99423c72a6cbec01d4b7870d5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51311b8adf89a296be391bf71317734a076b2f38', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39238249aa850f042de1c07fdb31a148b20853d9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b67b09ad40531f007aa4bcdbd2791a29ae2cfc5a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccee92489c9397386498db15ce6f7429ecef04df', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea3c01d68ff4c6cf69070e3cee5739ed5b43b155', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b9bd0e3ca1a1ecef46633ca8c73e80becb1661', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efe7beed1614af8881b3e29bd7a1fa0f3376244a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b35494954510937962cb265b6571689b80e480b2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5494251d7725b14d88cdfe84ffb75f994dbcd70', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93af8109aa95beb6475db5ba3fd702a7c2ab0c50', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25af8e29af209ecb99ac804ac7587d069758ff33', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4e9d255f4fc30bb11c879d1adfe3ddcb14502d6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94d9e109e4b5908e032f1a21174d54914f6d05da', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e2323f0438eb156637b1d1dce07d4264e52bf3c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b0e55993c49ea75bce05078504ded54a686223f', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dc2e5bacee7db79e92a20d4c326cb8723adf293', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcbc7302d2864e9cbed8281abaf19e476495abdc', 'committer_username': 'vojtechjelinek', 'committer_name': 'Vojtěch Jelínek', 'committer_email': 'vojtech.jelinek@hey.com', 'commit_date': datetime.datetime(2014, 12, 10, 14, 8, 25, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f248027b4d07d55a915e783c0e966a06c972c65', 'committer_username': 'vojtechjelinek', 'committer_name': 'Vojtěch Jelínek', 'committer_email': 'vojtech.jelinek@hey.com', 'commit_date': datetime.datetime(2014, 12, 10, 14, 8, 25, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
704064159,Fix Part of #10474: Cover some files with TS strict checks - 14,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Makes TS checks strict for 
    1. ""core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts"",
    1. ""core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts"",
    1. ""core/templates/components/question-difficulty-selector/question-difficulty-selector.component.spec.ts"",
    1. ""core/templates/components/question-difficulty-selector/question-difficulty-selector.component.ts"",
    1. ""core/templates/domain/state_card/state-card.model.spec.ts"",
    1. ""core/templates/domain/state_card/state-card.model.ts"",
    1. ""core/templates/pages/exploration-player-page/services/content-translation-language.service.ts"",
    1. ""core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts"",
    1. ""core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts"",
    1. ""core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts"",
    1. ""core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts"",
    1. ""core/templates/pages/exploration-player-page/services/player-position.service.spec.ts"",
    1. ""core/templates/pages/exploration-player-page/services/player-position.service.ts"",
    1. ""core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts"",
    1. ""core/templates/pages/exploration-player-page/services/player-transcript.service.ts"",
    1. ""core/templates/services/guppy-initialization.service.spec.ts"",
    1. ""core/templates/services/local-storage.service.spec.ts"",
    1. ""core/templates/services/local-storage.service.ts"",
    1. ""extensions/interactions/interaction-attributes-extractor.service.spec.ts"",
    1. ""extensions/interactions/interaction-attributes-extractor.service.ts"",
    2. extensions/objects/templates/custom-osk-letters-editor.component.ts
    1. ""extensions/objects/templates/number-with-units-editor.component.ts""
   

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
<details>
<summary> Covers 22 files with errors </summary>

```
Compiling and testing typescript...
Errors found during compilation

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(54,7): error TS2322: Type '() => string' is not assignable to type 'null'.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(58,19): error TS7006: Parameter 'file' implicitly has an 'any' type.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(59,7): error TS2721: Cannot invoke an object which is possibly 'null'.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(68,7): error TS2322: Type '() => string' is not assignable to type 'null'.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(72,9): error TS7032: Property 'src' implicitly has type 'any', because its set accessor lacks a parameter type annotation.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(72,13): error TS7006: Parameter 'url' implicitly has an 'any' type.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(73,7): error TS2721: Cannot invoke an object which is possibly 'null'.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.spec.ts(78,44): error TS7006: Parameter 'dataUri' implicitly has an 'any' type.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(42,12): error TS2564: Property 'bgColor' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(43,12): error TS2564: Property 'uploadedImage' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(44,12): error TS2564: Property 'aspectRatio' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(45,12): error TS2564: Property 'previewDescription' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(46,12): error TS2564: Property 'previewDescriptionBgColor' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(47,12): error TS2564: Property 'previewFooter' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(48,12): error TS2564: Property 'previewTitle' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(49,12): error TS2564: Property 'allowedBgColors' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(50,12): error TS2564: Property 'tempBgColor' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(51,12): error TS2564: Property 'dimensions' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(52,12): error TS2564: Property 'openInUploadMode' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(53,12): error TS2564: Property 'uploadedImageMimeType' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(57,3): error TS2564: Property 'file' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(58,3): error TS2564: Property 'tags' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(59,3): error TS2564: Property 'attrs' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(60,3): error TS2564: Property 'imgSrc' has no initializer and is not definitely assigned in the constructor.

core/templates/components/forms/custom-forms-directives/edit-thumbnail-modal.component.ts(61,3): error TS2564: Property 'invalidTagsAndAttributes' has no initializer and is not definitely assigned in the constructor.

core/templates/components/question-difficulty-selector/question-difficulty-selector.component.spec.ts(53,7): error TS2322: Type 'null' is not assignable to type '_MatRadioButtonBase'.

core/templates/components/question-difficulty-selector/question-difficulty-selector.component.ts(30,12): error TS7008: Member 'skillIdToRubricsObject' implicitly has an 'any' type.

core/templates/components/question-difficulty-selector/question-difficulty-selector.component.ts(31,12): error TS2564: Property 'skillWithDifficulty' has no initializer and is not definitely assigned in the constructor.

core/templates/components/question-difficulty-selector/question-difficulty-selector.component.ts(39,9): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ readonly Easy: 0.3; readonly Medium: 0.6; readonly Hard: 0.9; }'.

  No index signature with a parameter of type 'string' was found on type '{ readonly Easy: 0.3; readonly Medium: 0.6; readonly Hard: 0.9; }'.

core/templates/domain/state_card/state-card.model.spec.ts(41,7): error TS7034: Variable '_sampleCard' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/domain/state_card/state-card.model.spec.ts(105,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(106,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(107,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(108,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(110,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(111,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(112,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(113,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(128,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(143,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(144,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(145,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(146,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(147,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(151,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(155,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(159,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(160,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(161,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(167,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(168,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(172,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(173,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(174,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(178,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(179,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(182,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(186,5): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.spec.ts(187,12): error TS7005: Variable '_sampleCard' implicitly has an 'any' type.

core/templates/domain/state_card/state-card.model.ts(116,24): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ ImageClickInput: { can_have_solution: boolean; show_generic_submit_button: boolean; instructions: string; is_trainable: boolean; narrow_instructions: string; description: string; needs_summary: boolean; ... 8 more ...; rule_descriptions: { ...; }; }; ... 19 more ...; RatioExpressionInput: { ...; }; }'.

  No index signature with a parameter of type 'string' was found on type '{ ImageClickInput: { can_have_solution: boolean; show_generic_submit_button: boolean; instructions: string; is_trainable: boolean; narrow_instructions: string; description: string; needs_summary: boolean; ... 8 more ...; rule_descriptions: { ...; }; }; ... 19 more ...; RatioExpressionInput: { ...; }; }'.

core/templates/domain/state_card/state-card.model.ts(124,5): error TS2322: Type 'Solution | null' is not assignable to type 'Solution'.

  Type 'null' is not assignable to type 'Solution'.

core/templates/domain/state_card/state-card.model.ts(130,26): error TS2538: Type 'null' cannot be used as an index type.

core/templates/domain/state_card/state-card.model.ts(131,28): error TS2538: Type 'null' cannot be used as an index type.

core/templates/domain/state_card/state-card.model.ts(149,25): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ ImageClickInput: { can_have_solution: boolean; show_generic_submit_button: boolean; instructions: string; is_trainable: boolean; narrow_instructions: string; description: string; needs_summary: boolean; ... 8 more ...; rule_descriptions: { ...; }; }; ... 19 more ...; RatioExpressionInput: { ...; }; }'.

  No index signature with a parameter of type 'string' was found on type '{ ImageClickInput: { can_have_solution: boolean; show_generic_submit_button: boolean; instructions: string; is_trainable: boolean; narrow_instructions: string; description: string; needs_summary: boolean; ... 8 more ...; rule_descriptions: { ...; }; }; ... 19 more ...; RatioExpressionInput: { ...; }; }'.

core/templates/domain/state_card/state-card.model.ts(155,7): error TS2322: Type 'null' is not assignable to type 'InteractionCustomizationArgs'.

core/templates/domain/state_card/state-card.model.ts(164,9): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ ImageClickInput: { can_have_solution: boolean; show_generic_submit_button: boolean; instructions: string; is_trainable: boolean; narrow_instructions: string; description: string; needs_summary: boolean; ... 8 more ...; rule_descriptions: { ...; }; }; ... 19 more ...; RatioExpressionInput: { ...; }; }'.

  No index signature with a parameter of type 'string' was found on type '{ ImageClickInput: { can_have_solution: boolean; show_generic_submit_button: boolean; instructions: string; is_trainable: boolean; narrow_instructions: string; description: string; needs_summary: boolean; ... 8 more ...; rule_descriptions: { ...; }; }; ... 19 more ...; RatioExpressionInput: { ...; }; }'.

core/templates/domain/state_card/state-card.model.ts(186,7): error TS2322: Type 'null' is not assignable to type 'InputResponsePair'.

core/templates/domain/state_card/state-card.model.ts(193,7): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/domain/state_card/state-card.model.ts(200,7): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/content-translation-language.service.ts(44,11): error TS2564: Property 'currentContentLanguageCode' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/exploration-player-page/services/content-translation-language.service.ts(52,5): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/content-translation-language.service.ts(102,11): error TS2322: Type 'string | null' is not assignable to type 'string'.

  Type 'null' is not assignable to type 'string'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(193,64): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(221,12): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(229,12): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(253,12): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(261,12): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(284,12): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(292,12): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.spec.ts(443,70): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(49,11): error TS2564: Property 'explorationLanguageCode' has no initializer and is not definitely assigned in the constructor.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(101,7): error TS2538: Type 'null' cannot be used as an index type.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(125,7): error TS2538: Type 'null' cannot be used as an index type.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(139,13): error TS2538: Type 'undefined' cannot be used as an index type.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(172,9): error TS2531: Object is possibly 'null'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(216,13): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Object | Object[]'.

  No index signature with a parameter of type 'string' was found on type 'Object | Object[]'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(223,7): error TS2538: Type 'null' cannot be used as an index type.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(228,11): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'InteractionCustomizationArgs'.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(250,15): error TS2538: Type 'null' cannot be used as an index type.

core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts(264,13): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'BaseTranslatableObject'.

  No index signature with a parameter of type 'string' was found on type 'BaseTranslatableObject'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(28,7): error TS7034: Variable 'hasms' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(31,7): error TS7034: Variable 'firstHint' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(31,18): error TS7034: Variable 'secondHint' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(31,30): error TS7034: Variable 'thirdHint' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(32,7): error TS7034: Variable 'solution' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(80,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(80,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(80,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(80,42): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(82,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(83,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(84,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(85,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(86,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(87,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(94,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(95,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(96,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(97,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(98,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(99,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(100,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(105,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(106,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(107,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(108,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(109,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(110,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(111,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(112,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(113,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(117,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(123,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(123,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(123,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(123,42): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(125,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(126,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(127,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(128,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(129,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(133,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(134,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(135,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(136,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(137,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(138,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(143,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(144,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(145,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(146,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(147,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(148,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(149,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(154,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(154,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(154,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(154,42): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(156,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(161,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(161,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(161,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(161,42): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(165,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(166,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(168,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(173,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(173,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(173,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(173,42): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(175,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(175,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(175,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(175,41): error TS7005: Variable 'thirdHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(175,53): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(176,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(178,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(179,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(180,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(181,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(185,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(186,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(187,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(188,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(189,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(193,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(194,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(195,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(196,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(197,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(198,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(202,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(203,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(204,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(205,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(206,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(207,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(208,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(212,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(218,7): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(218,20): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(218,31): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(218,44): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(226,7): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(226,23): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(236,7): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(236,20): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(236,31): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(236,44): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(238,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(239,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(240,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(241,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(246,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(248,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(249,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(250,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(251,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(253,7): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(255,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(256,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(257,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(258,14): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(263,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(263,18): error TS7005: Variable 'firstHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(263,29): error TS7005: Variable 'secondHint' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(263,42): error TS7005: Variable 'solution' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(265,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(266,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(267,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(268,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(270,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(271,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(274,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(276,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(278,5): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(283,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(284,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(285,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(286,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(291,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.spec.ts(297,12): error TS7005: Variable 'hasms' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(45,3): error TS2322: Type 'null' is not assignable to type 'Solution'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(72,20): error TS2769: No overload matches this call.

  Overload 1 of 3, '(timeoutId: Timeout): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Timeout'.

  Overload 2 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

  Overload 3 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(75,5): error TS2322: Type 'Timeout' is not assignable to type 'null'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(88,9): error TS2322: Type 'Timeout' is not assignable to type 'null'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(113,20): error TS2769: No overload matches this call.

  Overload 1 of 3, '(timeoutId: Timeout): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Timeout'.

  Overload 2 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

  Overload 3 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(143,20): error TS2769: No overload matches this call.

  Overload 1 of 3, '(timeoutId: Timeout): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Timeout'.

  Overload 2 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

  Overload 3 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(147,20): error TS2769: No overload matches this call.

  Overload 1 of 3, '(timeoutId: Timeout): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Timeout'.

  Overload 2 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

  Overload 3 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

core/templates/pages/exploration-player-page/services/hints-and-solution-manager.service.ts(178,20): error TS2769: No overload matches this call.

  Overload 1 of 3, '(timeoutId: Timeout): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'Timeout'.

  Overload 2 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

  Overload 3 of 3, '(handle?: number | undefined): void', gave the following error.

    Argument of type 'null' is not assignable to parameter of type 'number | undefined'.

core/templates/pages/exploration-player-page/services/player-position.service.spec.ts(33,7): error TS7034: Variable 'pts' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/player-position.service.spec.ts(34,7): error TS2322: Type 'null' is not assignable to type 'PlayerPositionService'.

core/templates/pages/exploration-player-page/services/player-position.service.spec.ts(76,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-position.service.spec.ts(78,58): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-position.service.spec.ts(80,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-position.service.spec.ts(82,58): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-position.service.ts(50,5): error TS2322: Type 'Function' is not assignable to type 'null'.

core/templates/pages/exploration-player-page/services/player-position.service.ts(60,9): error TS2345: Argument of type 'null' is not assignable to parameter of type 'number'.

core/templates/pages/exploration-player-page/services/player-position.service.ts(69,5): error TS2322: Type 'number' is not assignable to type 'null'.

core/templates/pages/exploration-player-page/services/player-position.service.ts(72,7): error TS2721: Cannot invoke an object which is possibly 'null'.

core/templates/pages/exploration-player-page/services/player-position.service.ts(81,5): error TS2322: Type 'null' is not assignable to type 'number'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(28,7): error TS7034: Variable 'pts' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(29,7): error TS7034: Variable 'atls' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(37,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(40,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(41,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(42,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(45,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(46,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(48,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(50,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(51,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(52,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(55,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(56,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(57,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(63,7): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(66,9): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(67,9): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(68,7): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(71,9): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(72,9): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(73,7): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(76,9): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(77,9): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(78,14): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(79,14): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(83,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(86,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(87,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(89,21): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(97,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(100,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(101,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(102,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(105,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(106,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(107,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(109,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(110,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(111,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(112,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(116,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(119,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(120,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(121,22): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(124,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(125,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(128,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(129,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(130,18): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(133,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(136,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(137,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(140,18): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(145,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(148,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(149,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(150,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(152,7): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(157,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(158,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(160,21): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(170,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(174,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(177,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(178,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(179,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(182,7): error TS2345: Argument of type 'null' is not assignable to parameter of type 'Interaction'.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(183,7): error TS7005: Variable 'atls' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(184,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(185,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(186,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(187,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(188,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(189,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(191,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(192,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(193,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(194,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(195,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(196,5): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.spec.ts(197,12): error TS7005: Variable 'pts' implicitly has an 'any' type.

core/templates/pages/exploration-player-page/services/player-transcript.service.ts(101,7): error TS2322: Type 'null' is not assignable to type 'string'.

core/templates/services/guppy-initialization.service.spec.ts(37,10): error TS7006: Parameter '_' implicitly has an 'any' type.

core/templates/services/guppy-initialization.service.spec.ts(52,7): error TS2322: Type 'null' is not assignable to type 'GuppyInitializationService'.

core/templates/services/local-storage.service.spec.ts(26,9): error TS7034: Variable 'localStorageService' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/services/local-storage.service.spec.ts(29,11): error TS7034: Variable 'changeList' implicitly has type 'any[]' in some locations where its type cannot be determined.

core/templates/services/local-storage.service.spec.ts(33,21): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(37,21): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(40,9): error TS7034: Variable 'draftOne' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/services/local-storage.service.spec.ts(41,9): error TS7034: Variable 'draftTwo' implicitly has type 'any' in some locations where its type cannot be determined.

core/templates/services/local-storage.service.spec.ts(51,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(55,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(56,27): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(57,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(58,27): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(59,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(60,36): error TS7005: Variable 'draftOne' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(61,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(62,36): error TS7005: Variable 'draftTwo' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(66,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(67,27): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(68,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(69,36): error TS7005: Variable 'draftOne' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(74,25): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(77,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(78,27): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(79,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(84,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(85,27): error TS7005: Variable 'changeList' implicitly has an 'any[]' type.

core/templates/services/local-storage.service.spec.ts(86,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(87,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(92,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(93,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(96,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(97,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(102,13): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(103,7): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.spec.ts(104,14): error TS7005: Variable 'localStorageService' implicitly has an 'any' type.

core/templates/services/local-storage.service.ts(85,7): error TS2532: Object is possibly 'undefined'.

core/templates/services/local-storage.service.ts(85,20): error TS2339: Property 'setItem' does not exist on type 'false | Storage'.

  Property 'setItem' does not exist on type 'false'.

core/templates/services/local-storage.service.ts(99,9): error TS2532: Object is possibly 'undefined'.

core/templates/services/local-storage.service.ts(99,22): error TS2339: Property 'getItem' does not exist on type 'false | Storage'.

  Property 'getItem' does not exist on type 'false'.

core/templates/services/local-storage.service.ts(114,7): error TS2532: Object is possibly 'undefined'.

core/templates/services/local-storage.service.ts(114,20): error TS2339: Property 'removeItem' does not exist on type 'false | Storage'.

  Property 'removeItem' does not exist on type 'false'.

core/templates/services/local-storage.service.ts(124,7): error TS2532: Object is possibly 'undefined'.

core/templates/services/local-storage.service.ts(124,20): error TS2339: Property 'setItem' does not exist on type 'false | Storage'.

  Property 'setItem' does not exist on type 'false'.

core/templates/services/local-storage.service.ts(136,9): error TS2532: Object is possibly 'undefined'.

core/templates/services/local-storage.service.ts(136,22): error TS2339: Property 'getItem' does not exist on type 'false | Storage'.

  Property 'getItem' does not exist on type 'false'.

extensions/interactions/interaction-attributes-extractor.service.spec.ts(28,7): error TS2322: Type 'null' is not assignable to type 'InteractionAttributesExtractorService'.

extensions/interactions/interaction-attributes-extractor.service.spec.ts(29,7): error TS2322: Type 'null' is not assignable to type 'HtmlEscaperService'.

extensions/interactions/interaction-attributes-extractor.service.ts(62,21): error TS7006: Parameter 'caSpec' implicitly has an 'any' type.

extensions/interactions/interaction-attributes-extractor.service.ts(65,7): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

extensions/interactions/interaction-attributes-extractor.service.ts(67,52): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Object'.

  No index signature with a parameter of type 'string' was found on type 'Object'.

extensions/interactions/interaction-attributes-extractor.service.ts(78,7): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.

  No index signature with a parameter of type 'string' was found on type '{}'.

extensions/interactions/interaction-attributes-extractor.service.ts(78,26): error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'InteractionCustomizationArgs'.

  No index signature with a parameter of type 'string' was found on type 'InteractionCustomizationArgs'.

extensions/objects/templates/number-with-units-editor.component.ts(31,12): error TS7008: Member 'modalId' implicitly has an 'any' type.

extensions/objects/templates/number-with-units-editor.component.ts(32,12): error TS7008: Member 'value' implicitly has an 'any' type.

extensions/objects/templates/number-with-units-editor.component.ts(34,3): error TS2564: Property 'numberWithUnitsString' has no initializer and is not definitely assigned in the constructor.

extensions/objects/templates/number-with-units-editor.component.ts(35,3): error TS2564: Property 'errorMessage' has no initializer and is not definitely assigned in the constructor.

extensions/objects/templates/custom-osk-letters-editor.component.ts(35,12): error TS7008: Member 'value' implicitly has an 'any' type.

```
</details>

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13578,https://api.github.com/repos/oppia/oppia/pulls/13578,https://github.com/oppia/oppia/pull/13578,closed,463,252,25,35,28,79,0,1,[],2021-08-04 21:46:36+00:00,2021-08-18 17:01:19+00:00,1192483.0,"13 days, 19:14:43","[{'comment_id': 686289791, 'comment_body': ""Should we then return `null` instead of `''` if `interactionId` doesn't exists ?"", 'comment_created': datetime.datetime(2021, 8, 10, 20, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686290135, 'comment_body': 'Reason why this can null?', 'comment_created': datetime.datetime(2021, 8, 10, 20, 14, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686291121, 'comment_body': 'Add a comment for `| null`', 'comment_created': datetime.datetime(2021, 8, 10, 20, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686291735, 'comment_body': 'Can this be refractored to not use null at all ?', 'comment_created': datetime.datetime(2021, 8, 10, 20, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686292234, 'comment_body': 'Why can this be undefined ?', 'comment_created': datetime.datetime(2021, 8, 10, 20, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686293848, 'comment_body': 'Should an be thrown instead ? Ditto below', 'comment_created': datetime.datetime(2021, 8, 10, 20, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686296256, 'comment_body': ""Why is the logic in if check changed ? The condition will pass if `writtenTranslation` is null, undefined or `''`."", 'comment_created': datetime.datetime(2021, 8, 10, 20, 24, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686297621, 'comment_body': 'Can we leave this undefined using non-null assertion ?', 'comment_created': datetime.datetime(2021, 8, 10, 20, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686299707, 'comment_body': ""Can this be refractored to not use null at all ? We shouldn't use `| null` just because they're initiailized with null"", 'comment_created': datetime.datetime(2021, 8, 10, 20, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 686300288, 'comment_body': 'This is a getter, I think we should cater these errors at places where this function is used .', 'comment_created': datetime.datetime(2021, 8, 10, 20, 30, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 687795469, 'comment_body': 'yes, done', 'comment_created': datetime.datetime(2021, 8, 12, 14, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687798785, 'comment_body': 'added comment', 'comment_created': datetime.datetime(2021, 8, 12, 14, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687800464, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 14, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687808707, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 15, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687812456, 'comment_body': 'hmmm... I think this will cause e2e tests to fail', 'comment_created': datetime.datetime(2021, 8, 12, 15, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687820288, 'comment_body': 'There are scenarios where the `wriitenTranslation` does not exist and the e2e test was failing since `.translation` property did not exist for it. Logically, we need to continue further in the loop if there is at least one translation. So this check does not change the logic at all', 'comment_created': datetime.datetime(2021, 8, 12, 15, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687833538, 'comment_body': 'yes, updated', 'comment_created': datetime.datetime(2021, 8, 12, 15, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687845908, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 15, 31, 3, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687846020, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 12, 15, 31, 9, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687851775, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 12, 15, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687991383, 'comment_body': 'initialize with false', 'comment_created': datetime.datetime(2021, 8, 12, 18, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 687991623, 'comment_body': 'A separate interface for this would look more clearer', 'comment_created': datetime.datetime(2021, 8, 12, 18, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 688154318, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 23, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688156207, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 12, 23, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688845635, 'comment_body': 'This is already defined in other places, should we rather reuse it?', 'comment_created': datetime.datetime(2021, 8, 14, 1, 39, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688845680, 'comment_body': '```suggestion\r\n      Boolean(interactionId) && \r\n      INTERACTION_SPECS[<InteractionSpecsKey>interactionId].is_terminal\r\n    );\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 40, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688845798, 'comment_body': 'I would expand this into normal ifs, this is not really readable.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688845860, 'comment_body': ""```suggestion\r\n  // Some interaction specifications do not have instructions, thus we return 'null' in that case.\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 1, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688845911, 'comment_body': 'Again, expand this please.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846054, 'comment_body': 'Move this (`INTERACTION_SPECS[<InteractionSpecsKey>interactionId].display_mode`) to a variable so that the code is more readable.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 43, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846230, 'comment_body': '```\r\nlet languageDescription = (\r\n  <string> this.languageUtilService.getContentLanguageDescription(\r\n    languageCode\r\n  )\r\n);\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846306, 'comment_body': 'Why?', 'comment_created': datetime.datetime(2021, 8, 14, 1, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846342, 'comment_body': '```suggestion\r\n    if (\r\n      !writtenTranslation ||\r\n      !this._isValidStringTranslation(writtenTranslation)\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846422, 'comment_body': '```suggestion\r\n    const writtenTranslation: WrittenTranslation | null = (\r\n      content.contentId ? \r\n      writtenTranslations.translationsMapping[content.contentId][languageCode] : \r\n      null\r\n    );\r\n```\r\n\r\nor maybe even expand this.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846511, 'comment_body': 'Should we throw an error if the content is of a different type?', 'comment_created': datetime.datetime(2021, 8, 14, 1, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846576, 'comment_body': '```suggestion\r\n      <InteractionSpecKey>interactionId\r\n    ].customization_arg_specs;\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 48, 44, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846635, 'comment_body': '```suggestion\r\n              <string>ruleInputValue.contentId\r\n            ][languageCode];\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846713, 'comment_body': '```suggestion\r\n            if (\r\n              !writtenTranslation ||\r\n              writtenTranslation.translation.length === 0\r\n            ) {\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688846884, 'comment_body': 'Should this be moved up? It seems to me that usually, we place this as up as possible.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688847184, 'comment_body': 'Why do we need the casting? ', 'comment_created': datetime.datetime(2021, 8, 14, 1, 53, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688847374, 'comment_body': '```suggestion\r\n      Object.defineProperty(caBackendDict, caName, { \r\n        value: {\r\n          value: this.htmlEscaperService.escapedJsonToObj(\r\n            attributes[attributesKey].toString()\r\n          ),\r\n        },\r\n        enumerable: true\r\n      });\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 55, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688847446, 'comment_body': 'Reorder the inputs, outputs, and other variables.', 'comment_created': datetime.datetime(2021, 8, 14, 1, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688911414, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 10, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688911542, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 10, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688911802, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 10, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688911909, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 10, 16, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688912059, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 10, 17, 53, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922006, 'comment_body': 'done, the if statement was added because without it whenever `interactionid` will not exist, something like the following error will occur\r\n```\r\ncannot read property display_mode of undefined\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 11, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922082, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922236, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 1, 21, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922603, 'comment_body': ""I don't believe that's necessary since the `content` parameter type is `SubtitledHtml | SubtitledUnicode` so the argument can only be either of the two.\r\nhttps://github.com/oppia/oppia/blob/a4a3c2b7c673e928264919b595f51222ddd8e2c5/core/templates/pages/exploration-player-page/services/content-translation-manager.service.ts#L119-L123"", 'comment_created': datetime.datetime(2021, 8, 14, 12, 5, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922799, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922880, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688922960, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 9, 6, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688923056, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688923715, 'comment_body': ""It is possible that `this.storage` does not exist or the user does not have permission to access it but we are already checking this condition by calling `isStorageAvailable()` at the `if` statement so the typecast is safe but the compiler still can't make this conclusion of storage being available and hence we needed to typecast it.\r\n\r\nhttps://github.com/oppia/oppia/blob/a4a3c2b7c673e928264919b595f51222ddd8e2c5/core/templates/services/local-storage.service.ts#L67-L69"", 'comment_created': datetime.datetime(2021, 8, 14, 12, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688923796, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688923865, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 12, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688929314, 'comment_body': 'updated to throw error on `contentId` being null', 'comment_created': datetime.datetime(2021, 8, 14, 13, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689150669, 'comment_body': ""@mridul-netizen Didn't you also define this somewhere (`InteractionSpecsKey`)? We should probably think what is the ideal place for it."", 'comment_created': datetime.datetime(2021, 8, 15, 22, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689151189, 'comment_body': '```suggestion\r\n        !INTERACTION_SPECS[<InteractionSpecsKey>interactionId].is_linear\r\n```', 'comment_created': datetime.datetime(2021, 8, 15, 22, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689151530, 'comment_body': 'What about?\r\n```suggestion\r\n    if (interactionId) {\r\n      var interactionDisplayMode = (\r\n        INTERACTION_SPECS[<InteractionSpecsKey>interactionId].display_mode);\r\n    } else {\r\n      var interactionDisplayMode = null;\r\n    }\r\n```', 'comment_created': datetime.datetime(2021, 8, 15, 22, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689152124, 'comment_body': ""```suggestion\r\n      throw new Error('Content ID does not exist');\r\n```"", 'comment_created': datetime.datetime(2021, 8, 15, 22, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689152132, 'comment_body': 'ditto below', 'comment_created': datetime.datetime(2021, 8, 15, 22, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689152371, 'comment_body': '```suggestion\r\n    const writtenTranslation: WrittenTranslation | null = (\r\n      writtenTranslations.translationsMapping[content.contentId][languageCode]);\r\n```', 'comment_created': datetime.datetime(2021, 8, 15, 22, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689152568, 'comment_body': '```suggestion\r\n          attr.value, <Schema>caSpec.schema);\r\n```', 'comment_created': datetime.datetime(2021, 8, 15, 22, 34, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689152940, 'comment_body': 'ah, okay, can we add a comment?', 'comment_created': datetime.datetime(2021, 8, 15, 22, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689173528, 'comment_body': 'I have added the type to `core/templates/pages/interaction-specs.constants.ts` since its where the constant was defined and `INTERACTION_SPECS` were being imported from `interactions/interaction_specs.json`. \r\n\r\nAlso, updated some files to use `InteractionSpecsConstants.INTERACTION_SPECS` instead of directly importing `INTERACTION_SPECS`from the json file.', 'comment_created': datetime.datetime(2021, 8, 16, 0, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689173652, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 0, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689174566, 'comment_body': 'done\r\nhave to specify the type twice because Subsequent variable declarations must have the same type. At one branch it is `string` and at the other `null` so need to specify the union type twice.', 'comment_created': datetime.datetime(2021, 8, 16, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689174923, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 0, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689175070, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 1, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689175313, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 16, 1, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689178823, 'comment_body': 'added comments but I feel like they may be redundant.', 'comment_created': datetime.datetime(2021, 8, 16, 1, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689558349, 'comment_body': 'Thanks! That makes sense! ', 'comment_created': datetime.datetime(2021, 8, 16, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 690514974, 'comment_body': ""@EeshaArif I think `interactionId` can be null here, you'll have to add an `if` check as you've done in other functions below. This also leads to the failure here https://github.com/oppia/oppia/pull/13578/checks?check_run_id=3351908463"", 'comment_created': datetime.datetime(2021, 8, 17, 16, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 690522553, 'comment_body': ""umm, are you sure its not a flake? This expression will be short-circuited and if `Boolean(interactionId)` is `false` then ` InteractionSpecsConstants.INTERACTION_SPECS[ <InteractionSpecsKey>interactionId].is_terminal);` won't be executed.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 8, 17, 16, 14, 29, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 690526216, 'comment_body': 'The failure is same here as well https://github.com/oppia/oppia/pull/13578/checks?check_run_id=3351907231', 'comment_created': datetime.datetime(2021, 8, 17, 16, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 690765805, 'comment_body': 'Thanks @mridul-netizen , have fixed the issue. it was in `player-position.service`', 'comment_created': datetime.datetime(2021, 8, 17, 22, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': 'fb13d5ce7449675693c1c94b8b6f34b051ceed6b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82ad3f85eb3c1ce374fc10822fee581452c881c6', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1d83cc0ea5a377fa855284ccea18addc004c4f1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c1621b95b9dcd39e45edb23b381a9bbb237818', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf64b9a941b2f164022ee138d442f410cc79b81a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e08b24dcd1bb636e43c65694b0ffedcdb3bf49b5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecde1c63ff12612417a4d739b5dc3e3d1203eb95', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc606c33bc664b31f28448af720ee12949c9130a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e59c3384cef2aeb2b9abb32b2365735f9f06fbc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9d6775a80d44ec8eb082f856c325ac0fa0855d1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b1750b3b49110730a21e4d9804dced39e06685e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '258e968ddb71184fd48b77b9588f5eb82fecd110', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf8cdaaacd926eadc3fae01133bcc147d7531147', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'afb526c99d58c97885bb53b43dc78dd9ba99fcdf', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '123c68470ae051bee5a3298143e6c5864e4718a8', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75f0369fb760015ac638dfe685f5ca24419cd506', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcd762705ae07e11e4db9e02419ab49cf5dff04e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb5d3216b5b591859ae60fa8d58dc18e6e437102', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf18baeefc680e3dcec90e098be736c06491b069', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42f137984721e57dd33e6c6326ee7f5565c2a48a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4038da355799af4ba8028cbddbf7ff16a2e4561c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a1d707b5a65a4a4848005785c4afa4f867bb14', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e58a030bc03fc08901d719343eea864c1a9a146', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31a309fa8967e2051b7c976dafec32ae2153e18b', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fbfac1fe221fdeeaaf10e202fbbf2eafa79e363', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13a4402fb3262d0115bfdb014faf1bd09dc2b8cc', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af5dbb4f1b60a18ad3ae3e07917bb93c936cb0c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fdf82312aa14247af87a9ef574d446b690cca06', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '173cbfdb1a2fab0281f838466cea83b0d21171a4', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '090d00edf3f82bc655285afe2ba381dbc2476864', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c44a7e0b253dcd643c258082838223656999e188', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8e4b426bb0b10391fef2b02daa0eb09548de888', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a182e00941cebc803fa0277487e748c61d160fd', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '782bb8086c4f80331cee79ef551702141b3a2f68', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2682829655f50962a9a7f92a8d944ae8370dd4a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
705954695,Fix Part of #10474: Cover some files with TS strict checks - 15,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Enables TS strict mode in the following files with errors:

    1. ""core/templates/domain/jobs/beam-job-run.model.ts"",
    1. ""core/templates/pages/login-page/login-page.component.spec.ts"",
    1. ""core/templates/pages/logout-page/logout-page.component.spec.ts"",
    1. ""core/templates/pages/maintenance-page/maintenance-page.component.spec.ts"",
    1. ""core/templates/pages/participation-playbook/playbook.component.spec.ts"",
    1. ""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts"",
    1. ""core/templates/pages/preferences-page/form-fields/preferred-language-selector.component.ts"",
    1. ""core/templates/pages/preferences-page/form-fields/preferred-languages.component.spec.ts"",
    1. ""core/templates/pages/preferences-page/form-fields/preferred-languages.component.ts"",
    1. ""core/templates/pages/preferences-page/form-fields/subject-interests.component.spec.ts"",
    1. ""core/templates/pages/preferences-page/form-fields/subject-interests.component.ts"",
    1. ""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.spec.ts"",
    1. ""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.ts"",
    1. ""core/templates/pages/preferences-page/preferences-page.component.ts"",
    1. ""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts"",
    1. ""extensions/objects/templates/filepath-editor.component.ts"",
    1. ""extensions/objects/templates/normalized-string-editor.component.ts"",
    1. ""extensions/objects/templates/real-editor.component.spec.ts"",
    1. ""extensions/objects/templates/subtitled-unicode-editor.component.ts"",
    1. ""extensions/objects/templates/translatable-html-content-id.component.ts"",
    1. ""extensions/objects/templates/translatable-set-of-normalized-string-editor.component.ts"",
    1. ""extensions/objects/templates/translatable-set-of-unicode-string-editor.component.ts"",
    1. ""extensions/objects/templates/unicode-string-editor.component.ts"",

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->
<details>
<summary>Covers 23 files with errors</summary>

```
Compiling and testing typescript...
Errors found during compilation

b""core/templates/domain/jobs/beam-job-run.model.ts(143,5): error TS2322: Type 'string | null' is not assignable to type 'string'.\n""
b""  Type 'null' is not assignable to type 'string'.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(36,7): error TS2322: Type 'null' is not assignable to type 'string'.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(56,28): error TS7006: Parameter '_' implicitly has an 'any' type.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(60,18): error TS7006: Parameter '_' implicitly has an 'any' type.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(66,20): error TS2454: Variable 'resolve' is used before being assigned.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(67,19): error TS2454: Variable 'reject' is used before being assigned.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(168,7): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(182,51): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(199,51): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(214,51): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.\n""
b""core/templates/pages/login-page/login-page.component.spec.ts(232,51): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.\n""
b""core/templates/pages/logout-page/logout-page.component.spec.ts(29,7): error TS2322: Type 'null' is not assignable to type 'string'.\n""
b""core/templates/pages/logout-page/logout-page.component.spec.ts(49,28): error TS7006: Parameter '_' implicitly has an 'any' type.\n""
b""core/templates/pages/logout-page/logout-page.component.spec.ts(53,18): error TS7006: Parameter '_' implicitly has an 'any' type.\n""
b""core/templates/pages/logout-page/logout-page.component.spec.ts(59,20): error TS2454: Variable 'resolve' is used before being assigned.\n""
b""core/templates/pages/logout-page/logout-page.component.spec.ts(60,19): error TS2454: Variable 'reject' is used before being assigned.\n""
b""core/templates/pages/maintenance-page/maintenance-page.component.spec.ts(31,7): error TS2322: Type 'null' is not assignable to type 'DocumentAttributeCustomizationService'.\n""
b""core/templates/pages/participation-playbook/playbook.component.spec.ts(58,9): error TS2721: Cannot invoke an object which is possibly 'null'.\n""
b""core/templates/pages/participation-playbook/playbook.component.spec.ts(66,16): error TS7006: Parameter 'val' implicitly has an 'any' type.\n""
b""core/templates/pages/participation-playbook/playbook.component.spec.ts(92,7): error TS7034: Variable 'siteAnalyticsService' implicitly has type 'any' in some locations where its type cannot be determined.\n""
b""core/templates/pages/participation-playbook/playbook.component.spec.ts(131,7): error TS7005: Variable 'siteAnalyticsService' implicitly has an 'any' type.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(36,7): error TS7034: Variable 'component' implicitly has type 'any' in some locations where its type cannot be determined.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(46,14): error TS7005: Variable 'component' implicitly has an 'any' type.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(50,5): error TS7005: Variable 'component' implicitly has an 'any' type.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(52,12): error TS7005: Variable 'component' implicitly has an 'any' type.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(54,12): error TS7005: Variable 'component' implicitly has an 'any' type.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(55,12): error TS7005: Variable 'component' implicitly has an 'any' type.\n""
b""core/templates/pages/partnerships-page/partnerships-page.component.spec.ts(56,12): error TS7005: Variable 'component' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-language-selector.component.ts(32,12): error TS2564: Property 'preferredLanguageCode' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-language-selector.component.ts(35,12): error TS2564: Property 'choices' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-language-selector.component.ts(36,3): error TS2564: Property 'filteredChoices' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-language-selector.component.ts(37,12): error TS2564: Property 'entity' has no initializer and is not definitely assigned in the constructor.\n""
b'core/templates/pages/preferences-page/form-fields/preferred-languages.component.spec.ts(64,11): error TS2349: This expression is not callable.\n'
b""  Not all constituents of type 'PartialObserver<any> | ((value: any) => void) | ((value: any) => void)' are callable.\n""
b""    Type 'NextObserver<any>' has no call signatures.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-languages.component.spec.ts(64,11): error TS2723: Cannot invoke an object which is possibly 'null' or 'undefined'.\n""
b'core/templates/pages/preferences-page/form-fields/preferred-languages.component.spec.ts(74,11): error TS2349: This expression is not callable.\n'
b""  Not all constituents of type 'PartialObserver<any> | ((value: any) => void) | ((value: any) => void)' are callable.\n""
b""    Type 'NextObserver<any>' has no call signatures.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-languages.component.spec.ts(74,11): error TS2723: Cannot invoke an object which is possibly 'null' or 'undefined'.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-languages.component.ts(30,12): error TS2564: Property 'preferredLanguages' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-languages.component.ts(31,12): error TS2564: Property 'choices' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-languages.component.ts(38,26): error TS2564: Property 'chipList' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/preferred-languages.component.ts(39,31): error TS2564: Property 'languageInput' has no initializer and is not definitely assigned in the constructor.\n""
b'core/templates/pages/preferences-page/form-fields/subject-interests.component.spec.ts(69,11): error TS2349: This expression is not callable.\n'
b""  Not all constituents of type 'PartialObserver<any> | ((value: any) => void) | ((value: any) => void)' are callable.\n""
b""    Type 'NextObserver<any>' has no call signatures.\n""
b""core/templates/pages/preferences-page/form-fields/subject-interests.component.spec.ts(69,11): error TS2723: Cannot invoke an object which is possibly 'null' or 'undefined'.\n""
b""core/templates/pages/preferences-page/form-fields/subject-interests.component.ts(41,26): error TS2564: Property 'chipList' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/form-fields/subject-interests.component.ts(42,38): error TS2564: Property 'subjectInterestInput' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.spec.ts(96,24): error TS7006: Parameter 'options' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.ts(33,3): error TS2564: Property 'uploadedImage' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.ts(37,3): error TS7008: Member 'cropper' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.ts(38,32): error TS2564: Property 'croppableImageRef' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.ts(63,7): error TS2322: Type 'SafeResourceUrl | null' is not assignable to type 'SafeResourceUrl'.\n""
b""  Type 'null' is not assignable to type 'SafeResourceUrl'.\n""
b""core/templates/pages/preferences-page/modal-templates/edit-profile-picture-modal.component.ts(79,5): error TS2322: Type 'null' is not assignable to type 'SafeResourceUrl'.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(40,3): error TS2564: Property 'subjectInterests' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(41,3): error TS7008: Member 'preferredLanguageCodes' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(42,3): error TS2564: Property 'preferredSiteLanguageCode' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(43,3): error TS2564: Property 'preferredAudioLanguageCode' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(44,3): error TS2564: Property 'subjectInterestsChangeAtLeastOnce' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(46,3): error TS2564: Property 'profilePictureDataUrl' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(50,3): error TS2564: Property 'email' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(51,3): error TS7008: Member 'AUDIO_LANGUAGE_CHOICES' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(52,3): error TS2564: Property 'hasPageLoaded' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(53,3): error TS2564: Property 'userBio' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(54,3): error TS2564: Property 'defaultDashboard' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(55,3): error TS2564: Property 'canReceiveEmailUpdates' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(56,3): error TS2564: Property 'canReceiveEditorRoleEmail' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(57,3): error TS2564: Property 'canReceiveSubscriptionEmail' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(58,3): error TS2564: Property 'canReceiveFeedbackMessageEmail' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(59,3): error TS2564: Property 'subscriptionList' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(60,3): error TS2564: Property 'userCanDeleteAccount' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(61,3): error TS2564: Property 'TAG_REGEX_STRING' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(62,3): error TS2564: Property 'LANGUAGE_CHOICES' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(63,3): error TS7008: Member 'SITE_LANGUAGE_CHOICES' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(66,3): error TS2564: Property 'userCanExportAccount' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(85,25): error TS7006: Parameter 'updateType' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(85,37): error TS7006: Parameter 'data' implicitly has an 'any' type.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(186,7): error TS2322: Type 'string | null' is not assignable to type 'string'.\n""
b""  Type 'null' is not assignable to type 'string'.\n""
b""core/templates/pages/preferences-page/preferences-page.component.ts(187,7): error TS2322: Type 'string | null' is not assignable to type 'string'.\n""
b""  Type 'null' is not assignable to type 'string'.\n""
b""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts(40,3): error TS2564: Property 'statusMessage' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts(41,3): error TS2564: Property 'activeTab' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts(42,3): error TS2564: Property 'memoryCacheProfile' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts(43,3): error TS2564: Property 'memoryCacheDataFetched' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts(44,3): error TS2564: Property 'promoBarConfigForm' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/pages/release-coordinator-page/release-coordinator-page.component.ts(45,3): error TS2564: Property 'submitButtonDisabled' has no initializer and is not definitely assigned in the constructor.\n""
b""core/templates/services/page-title.service.ts(27,3): error TS2322: Type 'null' is not assignable to type 'string'.\n""
b""core/templates/services/page-title.service.ts(28,3): error TS2322: Type 'null' is not assignable to type 'string'.\n""
b""extensions/objects/templates/filepath-editor.component.ts(28,12): error TS7008: Member 'modalId' implicitly has an 'any' type.\n""
b""extensions/objects/templates/filepath-editor.component.ts(29,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b""extensions/objects/templates/normalized-string-editor.component.ts(31,12): error TS7008: Member 'alwaysEditable' implicitly has an 'any' type.\n""
b""extensions/objects/templates/normalized-string-editor.component.ts(32,12): error TS7008: Member 'initArgs' implicitly has an 'any' type.\n""
b""extensions/objects/templates/normalized-string-editor.component.ts(33,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b""extensions/objects/templates/normalized-string-editor.component.ts(36,3): error TS2564: Property 'active' has no initializer and is not definitely assigned in the constructor.\n""
b""extensions/objects/templates/real-editor.component.spec.ts(85,27): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string | number'.\n""
b""extensions/objects/templates/real-editor.component.spec.ts(101,27): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string | number'.\n""
b""extensions/objects/templates/subtitled-unicode-editor.component.ts(27,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b'extensions/objects/templates/translatable-html-content-id.component.spec.ts(49,39): error TS2769: No overload matches this call.\n'
b""  Overload 1 of 3, '(expected: Expected<ArrayLike<never>>, expectationFailOutput?: any): Promise<void>', gave the following error.\n""
b""    Argument of type '{ val: string; }[]' is not assignable to parameter of type 'Expected<ArrayLike<never>>'.\n""
b""      Type '{ val: string; }[]' is not assignable to type '{ [x: number]: ExpectedRecursive<never>; length: ExpectedRecursive<number>; }'.\n""
b'        Index signatures are incompatible.\n'
b""          Type '{ val: string; }' is not assignable to type 'ExpectedRecursive<never>'.\n""
b""            Property 'asymmetricMatch' is missing in type '{ val: string; }' but required in type 'ObjectContaining<never>'.\n""
b""  Overload 2 of 3, '(expected: Expected<ArrayLike<never>> | ArrayContaining<never>): void', gave the following error.\n""
b""    Argument of type '{ val: string; }[]' is not assignable to parameter of type 'Expected<ArrayLike<never>> | ArrayContaining<never>'.\n""
b""      Type '{ val: string; }[]' is not assignable to type '{ [x: number]: ExpectedRecursive<never>; length: ExpectedRecursive<number>; }'.\n""
b""extensions/objects/templates/translatable-html-content-id.component.ts(29,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b""extensions/objects/templates/translatable-html-content-id.component.ts(30,12): error TS7008: Member 'initArgs' implicitly has an 'any' type.\n""
b""extensions/objects/templates/translatable-html-content-id.component.ts(33,3): error TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.\n""
b""extensions/objects/templates/translatable-html-content-id.component.ts(34,3): error TS2564: Property 'currentValue' has no initializer and is not definitely assigned in the constructor.\n""
b""extensions/objects/templates/translatable-html-content-id.component.ts(41,55): error TS2339: Property 'val' does not exist on type 'never'.\n""
b""extensions/objects/templates/translatable-set-of-normalized-string-editor.component.ts(26,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b""extensions/objects/templates/translatable-set-of-unicode-string-editor.component.ts(27,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b""extensions/objects/templates/unicode-string-editor.component.ts(32,12): error TS7008: Member 'alwaysEditable' implicitly has an 'any' type.\n""
b""extensions/objects/templates/unicode-string-editor.component.ts(33,12): error TS7008: Member 'initArgs' implicitly has an 'any' type.\n""
b""extensions/objects/templates/unicode-string-editor.component.ts(34,12): error TS7008: Member 'value' implicitly has an 'any' type.\n""
b""extensions/objects/templates/unicode-string-editor.component.ts(37,3): error TS2564: Property 'active' has no initializer and is not definitely assigned in the constructor.\n""

```

</details>

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13598,https://api.github.com/repos/oppia/oppia/pulls/13598,https://github.com/oppia/oppia/pull/13598,closed,239,121,29,17,27,89,0,1,[],2021-08-07 22:49:26+00:00,2021-08-16 17:21:17+00:00,757911.0,"8 days, 18:31:51","[{'comment_id': 684775643, 'comment_body': 'Comment missing', 'comment_created': datetime.datetime(2021, 8, 8, 13, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684775962, 'comment_body': 'Can we do non-null assertion here ?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 32, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684776097, 'comment_body': 'I think an interface would be more appropriate here ?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 33, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684776163, 'comment_body': 'Missing comment for non-null assertion', 'comment_created': datetime.datetime(2021, 8, 8, 13, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684776201, 'comment_body': 'Initialize booleans with false value', 'comment_created': datetime.datetime(2021, 8, 8, 13, 33, 53, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684776243, 'comment_body': 'Initialize booleans with false', 'comment_created': datetime.datetime(2021, 8, 8, 13, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684776581, 'comment_body': 'Are we assigning `undefined` to `value` anywhere ?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 36, 21, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684776629, 'comment_body': 'Why are these optional ?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684777098, 'comment_body': 'Not sure of the type here, but i think replacing unknown everywhere with string should work . Can you try making the changes and see if the tests pass ?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 40, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684777113, 'comment_body': 'Leave a line after this', 'comment_created': datetime.datetime(2021, 8, 8, 13, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684777179, 'comment_body': 'Why are these optional ?', 'comment_created': datetime.datetime(2021, 8, 8, 13, 41, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684777224, 'comment_body': 'Initialize with false', 'comment_created': datetime.datetime(2021, 8, 8, 13, 41, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684777830, 'comment_body': 'There is a case where it is used in a function and not defined in the same, hence non-null assertion will not be appropriate here', 'comment_created': datetime.datetime(2021, 8, 8, 13, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684795972, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684796947, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684797027, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684797419, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684797526, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 18, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684797779, 'comment_body': 'no, but the value can be empty in the form so I think this case should be catered', 'comment_created': datetime.datetime(2021, 8, 8, 16, 20, 7, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684798275, 'comment_body': 'referring to [this](https://github.com/oppia/oppia/pull/13598/files#diff-ad16fe0512aa3873b573c43b2ff0eed2e8066175d99fe7e137881a98fcf5a128R81-R86). It is possible that in the form the current and previous values have not been specified.', 'comment_created': datetime.datetime(2021, 8, 8, 16, 23, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684798416, 'comment_body': 'Again, referring to [this](https://github.com/oppia/oppia/pull/13598/files#diff-e681d211f31834396c3bb234d2d42ef9aadc4d75d746ab5847c352c9a9167a6cR84-R91). It is possible that in the form the current and previous values have not been specified.', 'comment_created': datetime.datetime(2021, 8, 8, 16, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684798514, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684798669, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 8, 16, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684800248, 'comment_body': 'done, waiting for e2e checks', 'comment_created': datetime.datetime(2021, 8, 8, 16, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 684967558, 'comment_body': ""But you catered it with a if check, right ? Making it ` | undefined` would mean that we're assigning an undefined value (`this.cropper = undefined`) to it somewhere, which is not the case here."", 'comment_created': datetime.datetime(2021, 8, 9, 7, 27, 7, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684968672, 'comment_body': '`subjectInterestsChangeAtLeastOnce` initialize this one as well', 'comment_created': datetime.datetime(2021, 8, 9, 7, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684970080, 'comment_body': 'I think usage of `null` should be removed and we should return ` | undefined` at getters below', 'comment_created': datetime.datetime(2021, 8, 9, 7, 31, 49, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684972390, 'comment_body': ""I think that ` | undefined` would mean that we're assigning an undefined value to the property. Doing non-null assertion should be fine."", 'comment_created': datetime.datetime(2021, 8, 9, 7, 36, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 684972857, 'comment_body': 'Not initialized ?', 'comment_created': datetime.datetime(2021, 8, 9, 7, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 685227441, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 9, 14, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 685228240, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 9, 14, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 685228639, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 9, 14, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 685228923, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 9, 14, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 685229697, 'comment_body': 'hmmm, I think using `null` seems like a more cleaner approach. ', 'comment_created': datetime.datetime(2021, 8, 9, 14, 12, 38, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 685288460, 'comment_body': 'Why?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685288724, 'comment_body': 'Why does this return `null` too?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685304574, 'comment_body': ""```suggestion\r\n    public location: string = '', public searchParams: string = '') {}\r\n```"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 37, 48, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685305114, 'comment_body': 'Also since this is just a spec file I think it might be fine to keep the `null` here.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 38, 31, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685305403, 'comment_body': ""```suggestion\r\n    public location: string = '', public searchParams: string = '') {}\r\n```"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685305566, 'comment_body': 'ditto with the `null` here', 'comment_created': datetime.datetime(2021, 8, 9, 15, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685305853, 'comment_body': 'Why is this added?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 39, 27, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685306298, 'comment_body': '(the comma)', 'comment_created': datetime.datetime(2021, 8, 9, 15, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685310154, 'comment_body': 'Should we keep the order of these properties? So that inputs are first, outputs second and the rest after that?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685313693, 'comment_body': 'Should this be moved up so that we know that the comment also refers to these lines?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 48, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685319180, 'comment_body': ""Why is this set to `''` initialy?"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685319573, 'comment_body': 'Missing type?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685322024, 'comment_body': 'Hmm, in what cases can the mobile (sub)title be `null`?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 58, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685322326, 'comment_body': '```suggestion\r\n  id: string;\r\n  text: string;\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 15, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685324574, 'comment_body': ""This is the union of the types? Maybe for better usability let's define the non-email preferences separately (not exported) and then do \r\n```typescript\r\nexport type PreferencesBackendDict = (\r\n  EmailPreferencesBackendDict &\r\n  NonEmailPreferencesBackendDict\r\n);\r\n```\r\n\r\nMaybe with a comment included explaining this union."", 'comment_created': datetime.datetime(2021, 8, 9, 16, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685324939, 'comment_body': '```suggestion\r\n      data: boolean | string | string[] | EmailPreferencesBackendDict\r\n  ): Promise<UpdatePreferencesResponse> {\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 16, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685326779, 'comment_body': 'Should comment be added?', 'comment_created': datetime.datetime(2021, 8, 9, 16, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685327907, 'comment_body': 'Why `_unicode` and not `unicode`?', 'comment_created': datetime.datetime(2021, 8, 9, 16, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685328730, 'comment_body': '```suggestion\r\ntype TranslatableHtmlContentIdEditorChoices = { val: string }[];\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 16, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 685328970, 'comment_body': '```suggestion\r\n  @Input() initArgs!: { choices: TranslatableHtmlContentIdEditorChoices };\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 16, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 686176627, 'comment_body': 'updated comment', 'comment_created': datetime.datetime(2021, 8, 10, 17, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686177004, 'comment_body': 'Returns the same property `color` of `MatIcon`. comment added', 'comment_created': datetime.datetime(2021, 8, 10, 17, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686178719, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 17, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686179602, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 17, 29, 3, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686179869, 'comment_body': 'removed', 'comment_created': datetime.datetime(2021, 8, 10, 17, 29, 20, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686182234, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 10, 17, 32, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686182852, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 17, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686183525, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 10, 17, 34, 20, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686187234, 'comment_body': 'They are actually initialized using angular lifecycle hook `ngOnInIt` and are initialized using `UserInfoModel` getUsername() and `getEmail()` and when the user is not logged in, these methods return `null`. \r\nupdated ', 'comment_created': datetime.datetime(2021, 8, 10, 17, 39, 25, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686187682, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 17, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686194166, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 17, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686194743, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 17, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686212197, 'comment_body': 'The type was declared keeping [this](https://github.com/oppia/oppia/pull/13598/files#diff-135c37ade52eb46ea97dac9e5e8b8beb4dfbb1a78599d663f201a5c4a0b1e8b0R37-R41) in view. \r\n\r\nI could not figure out a definite reason why it has been used with an underscore. Should it be updated without one instead?', 'comment_created': datetime.datetime(2021, 8, 10, 18, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686212631, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 18, 15, 13, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686212835, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 10, 18, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686213911, 'comment_body': 'added comment', 'comment_created': datetime.datetime(2021, 8, 10, 18, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686279439, 'comment_body': 'There are only a few places where the mobile subtitle is set like that of the topic editor and skill editor. (The name of the topic/skill is the subtitle)\r\n![Screenshot from 2021-08-11 00-26-55](https://user-images.githubusercontent.com/43031234/128926385-4c919ba0-059e-470a-b78b-600a0907dda7.png)\r\n\r\nAt other places, like that of the exploration editor, the subtitle is not set and will be null there.\r\n![Screenshot from 2021-08-11 00-52-13](https://user-images.githubusercontent.com/43031234/128926454-6c1dc21a-0c6a-4bb3-9c1a-cc1455e96d66.png)\r\n\r\n', 'comment_created': datetime.datetime(2021, 8, 10, 19, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 686856493, 'comment_body': 'Why is this changed? I think `toBeNull` is prefered.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 56, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 686857485, 'comment_body': 'Why is this changed? I think `toBeNull` is prefered.', 'comment_created': datetime.datetime(2021, 8, 11, 13, 57, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687030372, 'comment_body': ""Hmm, okay, but I don't see the reason why this needs to be done in TS, why this cannot be handled just by CSS? Is there any case where the titles actually differ between mobile and non-mobily (except for the case where it is not shown)?"", 'comment_created': datetime.datetime(2021, 8, 11, 17, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687111190, 'comment_body': 'intersection ≠ union', 'comment_created': datetime.datetime(2021, 8, 11, 19, 24, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687112974, 'comment_body': ""The link is not working for me (it doesn't show the specific location) could you tell me the name of the file you're pointing to?"", 'comment_created': datetime.datetime(2021, 8, 11, 19, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687119776, 'comment_body': 'Yes, this type is **not** a union of those two interfaces. union implies that it could be either `EmailPreferencesBackendDict` or `NonEmailPreferencesBackendDict`. But in our case, the type has to include the properties of **both** the interfaces and not just one and thats why an intersection was used.\r\nhttps://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#intersection-types ', 'comment_created': datetime.datetime(2021, 8, 11, 19, 38, 24, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687121454, 'comment_body': ""yes, it is the same file `extensions/objects/templates/subtitled-unicode-editor.component.ts`. I was pointing to it's `updateValue` method\r\n\r\nhttps://github.com/oppia/oppia/blob/37c24c46e6fc5a9ee1e8df6fb62d55737fa1ced3/extensions/objects/templates/subtitled-unicode-editor.component.ts#L34-L39"", 'comment_created': datetime.datetime(2021, 8, 11, 19, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687759414, 'comment_body': 'I did check and I could not find any place where the titles differ like you said. @mridul-netizen used non-null assertion [here](https://github.com/oppia/oppia/commit/5daa0b1bbcb4146065f99222a88217d212ed02d1) and the PR has been merged. The titles are set using the angular lifecycle hooks though.', 'comment_created': datetime.datetime(2021, 8, 12, 14, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687763825, 'comment_body': 'ah a mistake, updated', 'comment_created': datetime.datetime(2021, 8, 12, 14, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687764042, 'comment_body': 'updated', 'comment_created': datetime.datetime(2021, 8, 12, 14, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 687844780, 'comment_body': 'Ohhh, can we add the link to the comment and maybe an explanation that this is not set intersection? The naming that TS uses is a bit confusing (at least for me) because in set theory union and intersection have a slightly different meaning than here. When I see union or intersection mentioned I will immediately think of sets and try to use understand it by that.', 'comment_created': datetime.datetime(2021, 8, 12, 15, 30, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687846730, 'comment_body': 'Okay, I see.', 'comment_created': datetime.datetime(2021, 8, 12, 15, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 687908470, 'comment_body': 'yes, the set theory does imply a different meaning. updated comment!', 'comment_created': datetime.datetime(2021, 8, 12, 16, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688842173, 'comment_body': '```suggestion\r\n// Note: Intersection in TypeScript is used differently than in set theory,\r\n// the latter implies that the type will include only the properties that are\r\n// are the same in both the interfaces whereas the former includes all the\r\n// properties from both the interfaces. For more information, check\r\n// https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html#intersection-types\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 1, 10, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688842973, 'comment_body': ""Not sure to which exact file you're referring to in the linked commit.\r\n\r\nBut from my understanding, it is possible to do this in CSS and we can remove the Angular mobile titles? Can we do it? Feel free to create an issue and TODO for this."", 'comment_created': datetime.datetime(2021, 8, 14, 1, 17, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688993199, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 21, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688993657, 'comment_body': '@vojtechjelinek on further inspection, the `setPageTitle()` was actually not setting the navbar titles of the pages, it was instead setting the document titles. (The `<title></title>` inside the html `<head></head>`)\r\nThe navbar or page titles are actually only set for mobile. (No page titles exist for non-mobily).\r\nI have created a PR #13684 to rename the set/getPageTitle to set/getDocumentTitle to avoid confusion.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689092001, 'comment_body': 'Okay, moving with this to #13684', 'comment_created': datetime.datetime(2021, 8, 15, 13, 43, 24, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}]","[{'commit_sha': 'f62c61a8f1cec8d5bbd6a81f7c9d501ac4c01966', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4afd6ae79ced5640a4e9b76756c6c0b99227773', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '636acc72849eadec6d0e4a6d79338a83e853bd32', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ed687340e7dadd84856a2d4d491248afe523875', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44d9417bfa50ceb8ead65d7980b08b7dfb744347', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a64c5880a358409612c1b8ba59a508cf2598f66c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aab6fa0641f3007fac38cf50e980de57bc4db5db', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac655bbb2bf69a6bda46e0c8ee5bae7391b318b3', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c3c540557c8fa5a30708543b21a988d855b28e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bb0f339e8907d713a36543cdeeaeea09fbf2f3a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4a2cf66689d86fee9b73e10ad98573895418bea', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '775ea0d6d433cee53c664ea07ce647c316256424', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b6881ed330b1ff4203bab71135430805982d562', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74277c15921d42e542a121338c3a0ad6f530020e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e7eca9d9ef8b874503107453c2c14adcec7ba67', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bdef4bdd664cbe6b750fb0dfd4de782baf5762e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94ca1af9b2cd7860cec09158533b07d84e454602', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
701463878,Update tsconfig-strict to cover directories,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #10474 .
2. This PR does the following: Includes directories in tsconfig-strict.json which have been covered with TS Strict checks

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13551,https://api.github.com/repos/oppia/oppia/pulls/13551,https://github.com/oppia/oppia/pull/13551,closed,46,151,2,71,4,6,0,2,[],2021-08-02 13:22:12+00:00,2021-08-03 00:21:38+00:00,39566.0,10:59:26,"[{'comment_id': 680968507, 'comment_body': 'nit: Sort in alphabetical order', 'comment_created': datetime.datetime(2021, 8, 2, 13, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 680971376, 'comment_body': ""```suggestion\r\nimport { ExplorationTaskBackendDict, ExplorationTaskModel } from 'domain/improvements/exploration-task.model';\r\n```\r\nChange imports to a single line. Do the same for the rest of the imports in this file."", 'comment_created': datetime.datetime(2021, 8, 2, 13, 29, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 680977503, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 2, 13, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 680977635, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 2, 13, 36, 38, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 691944850, 'comment_body': '@EeshaArif Please note that replacing these files with `""extensions/rich_text_components/Link/*.ts"",` won\'t work because the directores inside these folder are not covered, to cover these you\'ll have to introduce `extensions/rich_text_components/Link/directives/*.ts` this file path. Can you please go through current and this PR https://github.com/oppia/oppia/pull/13707 to prevent such cases ?', 'comment_created': datetime.datetime(2021, 8, 19, 9, 28, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mridul-netizen', 'type': 'User'}, {'comment_id': 692113734, 'comment_body': 'done, covered in #13707', 'comment_created': datetime.datetime(2021, 8, 19, 13, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': 'a039af21e21348475fafc592aac34cb2c8238a1f', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e096f18582ae44652d0481deef0611fe5a61a2f0', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f46563776c9f2c44f58d50db24e78eb74027a2', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c7084e5c36eb913074d2c6aebc77c2642f0f7ce', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce5bb381045abcbdce9cf0b1bb8a32c923c29c4', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaa0b25f48bdf48fb64c6fe3f548a59d440558fd', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdebc0d3e014fe7ccc40e978a73834c255b81c0a', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc6068200bd0291bea037ba72f4bf5e5c70ff750', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '036402ea3f737940fff317c488c05bc383145ee9', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc061dcac391028d7bb452144a21ec9dd4a390b1', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35e56bdefb38d8623ebb230093cc23566bf3b54d', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81f554e689f34badcd6ba2974618db33f333e0ea', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a37f4399bc4e3ad76da586708e046364e4ce3c7d', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97a729b4fa9f0e8c6d5a90528eee1c2b72f0d498', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097890954aaf062d820439a7b0cf966615c45f45', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcaeedd607a4b096f14ac6d2148cc6f3f60f4e2e', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aef2f62ac3ae5e8915d74716c0fe64c27ff0063a', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503237f61ec37c8cbd1c400f2fb9d5b1a6ed020f', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fdbc158df348ba1920baf6189a5f1cea9fef471', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7677b244182d3df261fbef251b63c3e73683d870', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0da83756ca134ef7c9a30211135ea1a3d36e738', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5091bf47d10af75c80c1dfc10b9f727bd99b5d0c', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ee244d3024e7d99d0c711017907b017e5ad84a2', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68469bb0df8b1d155a6fa712eeb56611a99006a4', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73d88bb6b88e69b869a01f895ad84d233c04161a', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1cece5490b0103969d90635d3cc337a12f16e6', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '165562e19b81242484bd3cfb815ca339cb4e90e8', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8afda28c1dab2032682478172ea0cdd1a92bc72', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2647606a938e0a9ef10f1b10818e7e880ad3e36', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6488d15e678f7ebe05912a6701c9b9eb660cc54e', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33624a202eaa5b98ccb069d4485528769a336aa5', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '889c7641935976ef004aeebea42dc35e1a971352', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03e76a58723477393cbf1cf607f0afd80138888d', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb91453093e3db5f2fb063f01a882ca1d2f0bf71', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4062e70c63494a0c21ffb6288f0a9f34e092e03', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16a5f94407a8fb14a0fda77ee6463ae9c0774301', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c28eecc6ade8fab13ec7c92474ad7595b39dce', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fddc56e036150360d7ff58a99a8bc2b99556a38', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66cad3e7f4a1467b1eef3c3b3615229539772023', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c518f98707a84b62b0931ed964318a853aa0df36', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8e7f952022e026da441913d54068d41a6080831', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54aa8a0b961bcc24b2b49b6992e5c5160a29eda7', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '847239fddc61f27b589411be1079191a1cd1135b', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74a5feba265b113ce68b6e1989c7f60cc634885c', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e1c8ecf88cef4944035769507a4cf9b3ed1ae40', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c296aeb028932b3138a154c8bf4922a7a7ab9cc', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c0f24f4d418efe95cfeada440329138f0fc161e', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc48def8a55e9d7e1023f9886119cad0a76bf025', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9831f63ffba53a0fcc6b566486e07b8eab032a', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34e35bac6d9c2ffbd0c7b256c2c4c9b33091cf2f', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c09e48e7a843f06f3c6f3769e2f440993c8ce5af', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54866fe66e7c71b4d32ac979d94f5165b57641d6', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cba3d89bdd2af5ba438ba2a4014a791d3faebdcb', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9ab4c8e646513a64a4b448c8c33908a51ac0ef4', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef4ea44693df6f328b27e34e3962e64afc2cdeb', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae0dc711308ce5641c0d4c312f15a601cf2cfbed', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b92ecb3250bd86ff60ad1bdb05b698741e2989e4', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65179cefbe425c62514431aa9b3843423d19df00', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12fa725e1b55f8fc22bc08f820fc8091e4850621', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00f858d361becbf6ff710f5161aa300c0153d3c7', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '276cf03c2a96771aafa74f2284eb88191e88ad36', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ff11cf40ac6ffdf3f226787c85e6917f7c9b37', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368352ebbad2d9865887f11dd31a7ce3ec704270', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de9a05a886929fa149ef0624591eb814bbd4edd1', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e22f1f4ac2fa47b11827d78a1603143ce2e2778e', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84fcf546724222ede10e9957ec9e66f2788e989e', 'committer_username': 'mridul-netizen', 'committer_name': 'mridul-netizen', 'committer_email': 'mridulsetia18@gmail.com', 'commit_date': datetime.datetime(2020, 1, 31, 17, 30, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca215b71f2fb4576c46251704f8fe143a6563261', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfef965684619bd4f90700ff0a1a2cbafc4cb494', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af961a92c6885be07c962bdaa8f13a2f26d4c715', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75927955abd5a72a9a6f423e5f5d72e99b4bfb84', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12334ed2f26809d9ebe39e608478af16e41090a9', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40
710420719,"Fix Part of #13637: Remove interstitial Skills, SkillRights and Concept Card","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #13637 .
2. This PR does the following: Removes the use of interstitial Skills, SkillRights and Concept Card

## Essential Checklist

- [x] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
**Before Change:**
![Screenshot from 2021-08-12 12-22-10](https://user-images.githubusercontent.com/43031234/129157449-55a6e261-55fd-4f96-878a-3586dc4eb4fd.png)

**After Change:**
The loading screen appears instead of the interstitial objects.
![Screenshot from 2021-08-12 12-23-53](https://user-images.githubusercontent.com/43031234/129155660-50ba4e2f-c2a0-4f9f-b632-644481a3e517.png)

<!--
Add videos/screenshots of the user-facing interface in various display sizes (mainly phone, tablet, and desktop display size) to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13638,https://api.github.com/repos/oppia/oppia/pulls/13638,https://github.com/oppia/oppia/pull/13638,closed,215,150,21,13,12,26,0,1,[],2021-08-12 07:57:45+00:00,2021-08-17 16:40:00+00:00,463335.0,"5 days, 8:42:15","[{'comment_id': 688916695, 'comment_body': '```suggestion\r\n      RecordedVoiceovers.createFromBackendDict({\r\n        voiceovers_mapping: {\r\n          COMPONENT_NAME_EXPLANATION: {}\r\n        }\r\n      })\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 11, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688916825, 'comment_body': 'This can be on one line.', 'comment_created': datetime.datetime(2021, 8, 14, 11, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688916943, 'comment_body': '```suggestion\r\n      RecordedVoiceovers.createFromBackendDict({\r\n        voiceovers_mapping: {\r\n          COMPONENT_NAME_EXPLANATION: {}\r\n        }\r\n      })\r\n    );\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 11, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917091, 'comment_body': '```suggestion\r\n      RecordedVoiceovers.createFromBackendDict({\r\n        voiceovers_mapping: {\r\n          COMPONENT_NAME_EXPLANATION: {}\r\n        }\r\n      })\r\n    );\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 11, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917110, 'comment_body': 'Can we get rid of this somehow?', 'comment_created': datetime.datetime(2021, 8, 14, 11, 9, 59, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917176, 'comment_body': ""```suggestion\r\n    skillEditorStateService.setSkillRights(SkillRights.createFromBackendDict({\r\n      skill_id: 'skill_id',\r\n      can_edit_skill_description: true,\r\n    }));\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 11, 10, 39, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917265, 'comment_body': 'What for every other load?', 'comment_created': datetime.datetime(2021, 8, 14, 11, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917272, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2021, 8, 14, 11, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917366, 'comment_body': 'Could you explain why is this added?', 'comment_created': datetime.datetime(2021, 8, 14, 11, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917408, 'comment_body': '```suggestion\r\n      RecordedVoiceovers.createFromBackendDict({\r\n        voiceovers_mapping: {\r\n          COMPONENT_NAME_EXPLANATION: {}\r\n        }\r\n      })\r\n```', 'comment_created': datetime.datetime(2021, 8, 14, 11, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688917446, 'comment_body': ""```suggestion\r\n        ctrl.htmlData = (\r\n          ctrl.skill ?\r\n          ctrl.skill.getConceptCard().getExplanation().html :\r\n          'loading review material'\r\n        );\r\n```"", 'comment_created': datetime.datetime(2021, 8, 14, 11, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688932296, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688932371, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688932427, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 43, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688932491, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 43, 34, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688932572, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688932695, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688932779, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 13, 47, 21, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688934012, 'comment_body': 'comment updated', 'comment_created': datetime.datetime(2021, 8, 14, 14, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688934013, 'comment_body': 'updated comment', 'comment_created': datetime.datetime(2021, 8, 14, 14, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688934031, 'comment_body': 'comment updated', 'comment_created': datetime.datetime(2021, 8, 14, 14, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688936627, 'comment_body': 'done', 'comment_created': datetime.datetime(2021, 8, 14, 14, 26, 48, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 688992637, 'comment_body': ""What is meant by 'reload' here?"", 'comment_created': datetime.datetime(2021, 8, 14, 21, 14, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 688996521, 'comment_body': 'It is reloaded in certain scenarios such as when we change the tabs inside the skill editor, the skill loads again from the backend. Similarly, when a change is made in the editor, the skill is updated and the contents are copied to the object.', 'comment_created': datetime.datetime(2021, 8, 14, 21, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}, {'comment_id': 689098285, 'comment_body': 'Ah, right, I thought it is talking about page reload. Could we write ""data reload"" instead?', 'comment_created': datetime.datetime(2021, 8, 15, 14, 30, 22, tzinfo=datetime.timezone.utc), 'commenter': 'vojtechjelinek', 'type': 'User'}, {'comment_id': 689101069, 'comment_body': 'done!', 'comment_created': datetime.datetime(2021, 8, 15, 14, 50, 51, tzinfo=datetime.timezone.utc), 'commenter': 'EeshaArif', 'type': 'User'}]","[{'commit_sha': '2f63f426c1f5096eec4b84587fc2fc3b4fce1da5', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '504eb56709a88474463f04178d16eb04cfbcc307', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66a94fc944cf07d531373364bfb2176f10b1ce4c', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce504890e3fcf4ba13bb45bddf23176747b15670', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41c9ae8ef4ad681ea45128b61eb0e5b7f4e64958', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d9ec4d95326c6a6d88578f365faa47cfe944353', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '410741dca5c4066fbc883aa2ab3fce139b43a738', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2646e8790d71bb84c1fe34b624a47f2968893e8e', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cff093e080d37b700d76c46cb1e0968566b998', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce1b88b45d7cd131344a546e95a97bc3f1034c4a', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '599ac5bc734b625e7099e84e0914cfce0eee770d', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06aee0576c92278ea12d4d559dc8e30f1bfe63f1', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7944c3b9004e1b3d7ad0b2003ac9278577b96c2', 'committer_username': 'EeshaArif', 'committer_name': 'EeshaArif', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 6, 9, 15, 33, tzinfo=datetime.timezone.utc)}]",EeshaArif,43031234,,User,,17,,4,40

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3839,5716,240,775,15750,1420,417,26,"[{'id': 715428059, 'number': 13707, 'closed': datetime.datetime(2021, 8, 26, 11, 12, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 21, 26, 34, tzinfo=datetime.timezone.utc), 'time_taken': 654338.0, 'time_delta': '7 days, 13:45:38', 'additions': 21, 'deletions': 73, 'state': 'closed'}, {'id': 712838161, 'number': 13684, 'closed': datetime.datetime(2021, 9, 23, 1, 42, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 21, 17, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3385474.0, 'time_delta': '39 days, 4:24:34', 'additions': 118, 'deletions': 116, 'state': 'closed'}, {'id': 710420719, 'number': 13638, 'closed': datetime.datetime(2021, 8, 17, 16, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 7, 57, 45, tzinfo=datetime.timezone.utc), 'time_taken': 463335.0, 'time_delta': '5 days, 8:42:15', 'additions': 215, 'deletions': 150, 'state': 'closed'}, {'id': 705954695, 'number': 13598, 'closed': datetime.datetime(2021, 8, 16, 17, 21, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 7, 22, 49, 26, tzinfo=datetime.timezone.utc), 'time_taken': 757911.0, 'time_delta': '8 days, 18:31:51', 'additions': 239, 'deletions': 121, 'state': 'closed'}, {'id': 704064159, 'number': 13578, 'closed': datetime.datetime(2021, 8, 18, 17, 1, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 21, 46, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1192483.0, 'time_delta': '13 days, 19:14:43', 'additions': 463, 'deletions': 252, 'state': 'closed'}, {'id': 701726128, 'number': 13555, 'closed': datetime.datetime(2021, 8, 16, 23, 7, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 19, 28, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1222699.0, 'time_delta': '14 days, 3:38:19', 'additions': 206, 'deletions': 140, 'state': 'closed'}, {'id': 701463878, 'number': 13551, 'closed': datetime.datetime(2021, 8, 3, 0, 21, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 13, 22, 12, tzinfo=datetime.timezone.utc), 'time_taken': 39566.0, 'time_delta': '10:59:26', 'additions': 46, 'deletions': 151, 'state': 'closed'}, {'id': 699829990, 'number': 13520, 'closed': datetime.datetime(2021, 8, 17, 7, 12, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 20, 44, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1592906.0, 'time_delta': '18 days, 10:28:26', 'additions': 189, 'deletions': 93, 'state': 'closed'}, {'id': 692531086, 'number': 13426, 'closed': datetime.datetime(2021, 7, 29, 15, 46, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 11, 42, 31, tzinfo=datetime.timezone.utc), 'time_taken': 878620.0, 'time_delta': '10 days, 4:03:40', 'additions': 255, 'deletions': 138, 'state': 'closed'}, {'id': 687305094, 'number': 13368, 'closed': datetime.datetime(2021, 8, 5, 14, 39, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 9, 39, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2177993.0, 'time_delta': '25 days, 4:59:53', 'additions': 381, 'deletions': 221, 'state': 'closed'}, {'id': 683146255, 'number': 13304, 'closed': datetime.datetime(2021, 7, 8, 13, 16, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 9, 54, 9, tzinfo=datetime.timezone.utc), 'time_taken': 357752.0, 'time_delta': '4 days, 3:22:32', 'additions': 78, 'deletions': 44, 'state': 'closed'}, {'id': 682973070, 'number': 13293, 'closed': datetime.datetime(2021, 7, 8, 16, 6, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 5, 53, 24, tzinfo=datetime.timezone.utc), 'time_taken': 468808.0, 'time_delta': '5 days, 10:13:28', 'additions': 365, 'deletions': 188, 'state': 'closed'}, {'id': 680817585, 'number': 13270, 'closed': datetime.datetime(2021, 7, 9, 9, 32, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 12, 10, 56, tzinfo=datetime.timezone.utc), 'time_taken': 768066.0, 'time_delta': '8 days, 21:21:06', 'additions': 134, 'deletions': 68, 'state': 'closed'}, {'id': 680276462, 'number': 13263, 'closed': datetime.datetime(2021, 7, 7, 17, 13, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 18, 35, 22, tzinfo=datetime.timezone.utc), 'time_taken': 686269.0, 'time_delta': '7 days, 22:37:49', 'additions': 211, 'deletions': 140, 'state': 'closed'}, {'id': 668717404, 'number': 13057, 'closed': datetime.datetime(2021, 6, 17, 23, 37, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 2, 46, 46, tzinfo=datetime.timezone.utc), 'time_taken': 507068.0, 'time_delta': '5 days, 20:51:08', 'additions': 90, 'deletions': 26, 'state': 'closed'}, {'id': 667781863, 'number': 13050, 'closed': datetime.datetime(2021, 6, 18, 0, 20, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 7, 33, 52, tzinfo=datetime.timezone.utc), 'time_taken': 578775.0, 'time_delta': '6 days, 16:46:15', 'additions': 29, 'deletions': 20, 'state': 'closed'}, {'id': 667614622, 'number': 13047, 'closed': datetime.datetime(2021, 6, 17, 23, 59, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 2, 55, 29, tzinfo=datetime.timezone.utc), 'time_taken': 594242.0, 'time_delta': '6 days, 21:04:02', 'additions': 34, 'deletions': 12, 'state': 'closed'}, {'id': 666928607, 'number': 13043, 'closed': datetime.datetime(2021, 6, 29, 12, 7, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 14, 7, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1634433.0, 'time_delta': '18 days, 22:00:33', 'additions': 27, 'deletions': 9, 'state': 'closed'}, {'id': 659447732, 'number': 12962, 'closed': datetime.datetime(2021, 6, 12, 17, 8, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 23, 1, 34, tzinfo=datetime.timezone.utc), 'time_taken': 929213.0, 'time_delta': '10 days, 18:06:53', 'additions': 32, 'deletions': 15, 'state': 'closed'}, {'id': 628390424, 'number': 12700, 'closed': datetime.datetime(2021, 6, 6, 12, 23, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 8, 51, 37, tzinfo=datetime.timezone.utc), 'time_taken': 3123133.0, 'time_delta': '36 days, 3:32:13', 'additions': 73, 'deletions': 63, 'state': 'closed'}, {'id': 622857280, 'number': 12643, 'closed': datetime.datetime(2021, 5, 20, 17, 2, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 25, 23, 12, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2137776.0, 'time_delta': '24 days, 17:49:36', 'additions': 180, 'deletions': 74, 'state': 'closed'}, {'id': 610700310, 'number': 12462, 'closed': datetime.datetime(2021, 4, 10, 12, 51, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 7, 14, 9, 17, tzinfo=datetime.timezone.utc), 'time_taken': 254556.0, 'time_delta': '2 days, 22:42:36', 'additions': 96, 'deletions': 3, 'state': 'closed'}, {'id': 608649789, 'number': 12429, 'closed': datetime.datetime(2021, 4, 7, 1, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 5, 1, 32, 44, tzinfo=datetime.timezone.utc), 'time_taken': 173987.0, 'time_delta': '2 days, 0:19:47', 'additions': 26, 'deletions': 20, 'state': 'closed'}, {'id': 608387685, 'number': 12423, 'closed': datetime.datetime(2021, 4, 5, 11, 17, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 13, 39, 51, tzinfo=datetime.timezone.utc), 'time_taken': 164237.0, 'time_delta': '1 day, 21:37:17', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 608180691, 'number': 12411, 'closed': datetime.datetime(2021, 4, 5, 21, 10, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 18, 46, 46, tzinfo=datetime.timezone.utc), 'time_taken': 267814.0, 'time_delta': '3 days, 2:23:34', 'additions': 4, 'deletions': 2, 'state': 'closed'}]"
