pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
661696491,Add parser for PyPI packages,"#1018 

- [x] Add parser
- [x] Add tests
- [x] Add a CSV file holding the vendor, package pairs for mapping
- [x] Documentation (#1187)",True,1165,https://api.github.com/repos/intel/cve-bin-tool/pulls/1165,https://github.com/intel/cve-bin-tool/pull/1165,closed,426,23,17,14,3,6,0,0,[],2021-06-04 11:44:20+00:00,2021-06-16 17:03:08+00:00,1055928.0,"12 days, 5:18:48","[{'comment_id': 645507270, 'comment_body': ""I wasn't sure about the error code so I left it as -4 since that made more sense to me than adding more codes"", 'comment_created': datetime.datetime(2021, 6, 4, 11, 45, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 645509268, 'comment_body': 'I realised it late that the test for valid requirements.txt will fail depending on the system since I collect the versions using `pip list`.\r\nIf any package is updated then the version will be different from `PARSED_TRIAGE_DATA`', 'comment_created': datetime.datetime(2021, 6, 4, 11, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 645509866, 'comment_body': ""So the tests need to be updated in a way that it won't fail no matter the version. But I'm not sure how to approach this :("", 'comment_created': datetime.datetime(2021, 6, 4, 11, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 645907234, 'comment_body': ""I don't think negative error codes are a good idea, see #1135. This is something that should be changed outside of this PR though, just wanted to mention as you are touching this area."", 'comment_created': datetime.datetime(2021, 6, 4, 23, 48, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Molkree', 'type': 'User'}, {'comment_id': 650393133, 'comment_body': 'Used a separate `requirements.txt` with pinned packages', 'comment_created': datetime.datetime(2021, 6, 12, 13, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 652869067, 'comment_body': ""I think we'll resolve the error codes issue in a separate PR.  -4 should be fine for now."", 'comment_created': datetime.datetime(2021, 6, 16, 16, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': '3ee28bfa5902b664d16a856a91a4a24bb3bcf85d', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e40f728f4a045a5d25dc065a6b9facc13fd72697', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e47584f2b194957c53b360dad1b11c511231b88', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58d242493b52c8b51c5db50683774cc9209daf93', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '610f6496c065049c483aad9f090cdd883b81ace7', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7528ac31d57bb2a8cd6c639d74919600694a33cd', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb050cb4c1eda845e9a2c104cac37227b76440bf', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8a1da2b10e0b156947c07afea9520db4bb58b9a', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ceed6ec226f132754035d130e2d4eb495ea1ac3', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5de3a4460f840ee51f276ad3c3bcc68f750e47f9', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4941889966b464ce690d4c64235e0631ffad55ef', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '910f5bce20ac9e586b513c1e84d0330810d23ed9', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd2744acb3e891770d4bbdb437b73e03ef463a60', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '996ab643c3ba15b95a2a87502973e72828245fc0', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
673635505,Helper Script - extraction and regex finding process,"- [ ] change current regex to verbose regex for commenting?
- [ ] add logs to explain, what's happening...
- [ ] refactor after #1185 gets merged",True,1182,https://api.github.com/repos/intel/cve-bin-tool/pulls/1182,https://github.com/intel/cve-bin-tool/pull/1182,closed,335,49,2,33,7,11,0,0,[],2021-06-18 17:44:23+00:00,2021-06-30 00:18:26+00:00,974043.0,"11 days, 6:34:03","[{'comment_id': 654600415, 'comment_body': 'this the raw string pattern that I decided to go with. I would be iterating over it as I test this on more files. Is this implementation okay??', 'comment_created': datetime.datetime(2021, 6, 18, 18, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 654609905, 'comment_body': ""The last meeting helped a lot with this!!! :)\r\nThe `clean_path` is for the logs and I think I would be removing it later. I'm parsing all the files in the .rpm file and then am searching for the desired strings in it and then returning these in a list.\r\n\r\nI wanted suggestions over whether I should scan over all the files or not.*example*: busybox contains -\r\n```\r\n/data.cpio\r\n/usr/lib/.build-id/1e/2a6ad3feaed3fbb308145c8db69f0dd936b427\r\n/usr/share/man/man1/busybox.1.gz\r\n/usr/share/doc/busybox/LICENSE\r\n/usr/share/doc/busybox/README\r\n/sbin/busybox\r\n```\r\n\r\n1) should I be scanning over `.cpio`?\r\n2) The README and LICENSE should be ignored? The `man/` directory should be ignored?\r\n3) Or should I just search in files which have the product_name in their filename (generally these files only contain the strings that we are looking for... this was the pattern that I observed) *or* should I just be ignoring files to scan?\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 18, 18, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 654819203, 'comment_body': '@peb-peb The scanfile routine in the VersionScanner class checks the type of file and unless it identifies as an executable binary, the file will be ignored. This will mean files such as LICENSE and README will autonatically be ignored. Try running the `file` command and see what it reports. Contents of an archive files (e.g. .gz) will be extracted to a temporary directory before checking the file.', 'comment_created': datetime.datetime(2021, 6, 19, 17, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'anthonyharrison', 'type': 'User'}, {'comment_id': 654892911, 'comment_body': ""I'm reusing these from `scan_file()` in `VersionScanner()`. I've sent a pr, breaking down `scan_file()` accordingly (I would be updating this once #1185 gets merged or it's decided what should be done about this...)."", 'comment_created': datetime.datetime(2021, 6, 20, 7, 43, 21, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 654893940, 'comment_body': ""@anthonyharrison I've implemented these changes now."", 'comment_created': datetime.datetime(2021, 6, 20, 7, 51, 26, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 658354294, 'comment_body': 'This docstring could be a bit better:\r\n- Contributor... to what?  of what?\r\n- Why would these contributors want to know these things?\r\n- What are they going to do with the output of the script?\r\n\r\nI\'d go with something more like \r\n""Helps contributors who want to write a new cve-bin-tool checker find common filenames, version strings, and other necessary data for building a binary checker.""\r\n\r\nOr if you\'d like a one-liner, maybe just skip who\'s using it and explain only what it does.\r\n\r\n""Helps find common strings and other components needed to build a cve-bin-tool checker""\r\n', 'comment_created': datetime.datetime(2021, 6, 24, 23, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 658355258, 'comment_body': ""Awesome.  let's merge #1185 first and then refactor this."", 'comment_created': datetime.datetime(2021, 6, 24, 23, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 658358842, 'comment_body': 'Did you mean to use unescaped periods here?  . means ""match any one character"" and `\\.` means ""match only the character `.`""   I\'m guessing you either want to use either `\\.` (match a period) or `[.-]` (match a period or a dash) here.', 'comment_created': datetime.datetime(2021, 6, 24, 23, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 658360168, 'comment_body': ""But other than that comment, yes this is a fine place to start iterating.  \r\n\r\nf you want an immediate iteration, I'd add a couple of whitespace characters in to the pattern so that you could match, say\r\nproduct1.2.3\r\nproduct 1.2.3\r\nproduct-1.2.3\r\nproduct.1.2.3\r\n\r\nand maybe others.  so that would change your pattern to include a [ -.]? block between the product name and the semantic version pattern.\r\n\r\nYou might also want to match a 1.2 pattern (i.e. a shorter semantic version) by having some question marks (match 0 or 1 characters) for the last period and a * (match 0 or more) on the last digit.  \r\n\r\nAnd this one is definitely for future iteration, but you'll likely want to handle things like 2.3.4rc1, 2.1.post1, and some of the distro-specific version additions eventually."", 'comment_created': datetime.datetime(2021, 6, 24, 23, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 658581892, 'comment_body': ""@ terriko I've updated the regex pattern to `product(.*)([0-9]+[.-][0-9]+([.-][0-9]+)?)`.\r\nThe `(.*)` would help to match patterns like\r\nproduct version 1.2.3\r\nproduct v1.2.3(1)\r\n\r\nYou could see if these regex's match at [pythex.org](https://pythex.org/). (I've used this to make regexes for the patterns).\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 25, 8, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'peb-peb', 'type': 'User'}, {'comment_id': 661042616, 'comment_body': ""Doesn't need to be in this PR, but did you want to add some sort of entry point for your helper script in a future revision?  (e.g. add it to https://github.com/intel/cve-bin-tool/blob/main/setup.py the way we did with csv2cve)"", 'comment_created': datetime.datetime(2021, 6, 30, 0, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': 'fa475b53eea22ce5ea5da9387b11fa41320c8b0c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a240a8ea9ca8744e601b29791dff698b2fb30516', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae1e0a89c61e02e2fc808498ea0b7c6b3b434e0', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3147f9b6a3aa102b10d98beaf51fe1921036db4c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0705ee281a43172925f2d5c1ffe46669d4eeebc', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '096c412eaaa2ed619d9b3d2d7804586154ba6f05', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b24056ad9afd41cec99167e823c977650b408ac', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe9ce2cdb2f3d5e1a6cec43c48784546f2648b11', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1149c1f4bc5f2dc0ea7bdd9c9949ded73a1577d6', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94083838cb42d02dbb5af8beb5bef3d37999599d', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38cceeebe027382cd8be81fc0803e82eb79c804b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5bcfecd3596a3c4ed0a0fc91f33ec83d5bc2f46', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c91192d6b965dfcac8f21fc19b4afaf2c84e946d', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0936b9e58fe9cbe1ba48d06ebee5eb601aa07fc2', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54aefc81dfa107dbba3d96d1b38f1ae3e1f861ad', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8195993062877f735d231662623bee740db4f255', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eed6bdd2209f3743a465cd6953f09e2a648be690', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faa8088738e28dd52b3af7564d94b4190b586a4a', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7f39a8158d9e91527b67e47f7fc001ace948a3e', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73efb6d155ca9303e883bac4e43b15332499d839', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99d4cff731b73a3119fe52af1853d9873533c809', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab26ae144731cfba767c4d10efb674a1a8c93d94', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c03e95d0de2fb2be1d9f271cc8ac9da2662624cf', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ff34fb5062afb2bb460e1a5ae51845ff02622b9', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dd5d7124ac7243f9172631aef5207200c38ffb5', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68f8438cc36e8650656830c3425d8d665d11e5cd', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ba9a07873dde04d673619552da17293467a23c5', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b2b7326c9fadda1f7f419072b7c3d210c6bb436', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '416eec83b03d5725096f1af70f0cec1b4a39bb2e', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea8b5abf1fef71af98c5f33b3b5c978b5f06e13b', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbc4b1eae041fe70ceb0fa71799db03405f00fc5', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00e3ac08880dce887371216565d7e03edbec8934', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ab11295d5a57981fb2bb4df8097ccde4088220c', 'committer_username': 'peb-peb', 'committer_name': 'Harsh', 'committer_email': None, 'commit_date': datetime.datetime(2021, 1, 16, 14, 32, 31, tzinfo=datetime.timezone.utc)}]",Harsh,77539004,,User,,36,,22,27
678455304,Centos package list parser,"#1018 
- [x] Package list parser
- [x] Tests 
- [x] Docs ",True,1203,https://api.github.com/repos/intel/cve-bin-tool/pulls/1203,https://github.com/intel/cve-bin-tool/pull/1203,closed,80,31,7,9,2,0,0,0,[],2021-06-27 04:56:54+00:00,2021-06-30 16:30:41+00:00,300827.0,"3 days, 11:33:47",[],"[{'commit_sha': '0d138ef76b14b40fd5b0e0c246dc80eb3db6c542', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7479061a7714e815e0d8cc19d722ecb271d5c6ad', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '706c4611a3d79de20f898e1b1b199172c200ed35', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3c786bd6314edd14b10b52a5db83b46e1f7ddf', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b08dd8ae7200c5b1636075799aa463c7ffae530d', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef239c18591de38f23253ef60135a8ce5cb34f51', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27931ee9960b4b2b136b0aaec9de7a5674546b86', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e378aa4208fefa87c8d35e30336559d19dbf1b5b', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f99714352f41b23dc9af1763ae8f50b0370cdd10', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
681709183,feat(package-list-parser): dpkg and rpm package list parser support,"#1018 
Add support for distros that use `dpkg` and `rpm` package managers.",True,1209,https://api.github.com/repos/intel/cve-bin-tool/pulls/1209,https://github.com/intel/cve-bin-tool/pull/1209,closed,18,15,3,3,1,0,0,0,[],2021-07-01 10:14:29+00:00,2021-07-07 00:01:52+00:00,481643.0,"5 days, 13:47:23",[],"[{'commit_sha': '0a58ee0945413dac56e4eddb6fccf1c6bfd8ca00', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a0b839f314e56a3e3d00169aa772ae6c41a29ed', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b872c634b81d222126e0905d76e22b53d8d22d34', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
687128000,feat(package-list-parser): Add support for distros using pacman package manager,#1018 ,True,1235,https://api.github.com/repos/intel/cve-bin-tool/pulls/1235,https://github.com/intel/cve-bin-tool/pull/1235,closed,49,8,3,2,1,1,0,0,[],2021-07-10 05:00:27+00:00,2021-07-14 02:52:38+00:00,337931.0,"3 days, 21:52:11","[{'comment_id': 669242118, 'comment_body': 'Do we have a way for the user to see on the command line which package managers are supported?  That might be a good future feature.', 'comment_created': datetime.datetime(2021, 7, 14, 2, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': 'aabd1b3717d141e2f78a73035f9c7a15b37ca67c', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2949ae5ac5c395b514a05fb6802c3ce6c0d28c1', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
696334972,feat(backports): Add output backport fixes for debian based distros,"#1018 
Fix #1339 

- [x] - Backported fix utility
- [x] - Tests
- [x] - Docs (#1344)",True,1273,https://api.github.com/repos/intel/cve-bin-tool/pulls/1273,https://github.com/intel/cve-bin-tool/pull/1273,closed,224,0,4,12,5,8,0,0,[],2021-07-24 11:14:18+00:00,2021-08-17 23:39:10+00:00,2118292.0,"24 days, 12:24:52","[{'comment_id': 675986704, 'comment_body': ""I've used `requests` library to fetch the JSON data.\r\nI read through cvedb.py and there we use something called session to fetch the data. But I didn't get how to we used it in https://github.com/intel/cve-bin-tool/blob/444927906ae1ff707d7680a5d7eb10b57d342c1f/cve_bin_tool/cvedb.py#L119-L131 \r\n\r\ncan this be re-used over here?"", 'comment_created': datetime.datetime(2021, 7, 24, 11, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 678315235, 'comment_body': 'Used `urllib` instead :D', 'comment_created': datetime.datetime(2021, 7, 28, 13, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 683864974, 'comment_body': '```suggestion\r\n        help=""Lists backported fixes if available from Linux distribution"",\r\n```\r\n\r\n""produce"" to me makes it sound like cve-bin-tool is going to magically fix all your things with backports.  Let\'s make it clear that it\'s just indicating backported fixes available from your linux distribution.', 'comment_created': datetime.datetime(2021, 8, 6, 0, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 683866316, 'comment_body': 'It may be useful for users to be able to list backport information even if the machine being used for scanning isn\'t running debian itself.  I\'m thinking particularly of folk who might be running cve-bin-tool in a separate CI system or running it on a downloads server, but it might also be important for other debian-based distros whose names we don\'t know yet. \r\n\r\nLet\'s figure out if there\'s a nice way to do that.  Could backports/debian_backports.py take an argument (say from a `--backported-fixes=debian` option, and have the default be ""local_system"" that grabs distro.id() or something) instead of distro.id()?  ', 'comment_created': datetime.datetime(2021, 8, 6, 0, 25, 26, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 683868315, 'comment_body': ""And yes, I know it's ridiculous to imagine cve-bin-tool doing that, but I have definitely experienced such magical thinking in the software world!"", 'comment_created': datetime.datetime(2021, 8, 6, 0, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 684118748, 'comment_body': 'If the user specify an option `debian` how will the system recognise whether which version of debian the user wants? 🤔 \r\nMaybe something like `debian-bullseye, debian-buster` and so on for the choices?\r\nOr maybe stick to the latest version?', 'comment_created': datetime.datetime(2021, 8, 6, 10, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 686393905, 'comment_body': 'I like having `debian-bullseye` etc. as options.  Not sure the best way to communicate the availability of these options to users, but maybe just documenting it in Manual.md?', 'comment_created': datetime.datetime(2021, 8, 10, 23, 48, 35, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 688971247, 'comment_body': ""The help message got very messy from the long list of options. So I'll add these options in MANUAL.md."", 'comment_created': datetime.datetime(2021, 8, 14, 17, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}]","[{'commit_sha': '2489fcfda356df37e44176d5bd05de039ff0d613', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d7f9125b3abffe4a028a5632a771ae50eb660b3', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1e81997f41a85f808844b7953c1b82e478848e6', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c101f87afadeea1f69570007c25fea84c821309', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8446f1511fc44ae3f0f912b1ff28dcb80fda1523', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '869b89977800a50cb8dc8b92f519a071b7aa1c3d', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76840ad72085b8ce450ed1c83b83f1484cbca1a1', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d4943659078a4165d8416f1ed331f42ded5b019', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4676aa49cb1fcd62face173f99a3586634b411d0', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bea6e84a4ba4b26ebf7f4514c7ae12eb51f97e01', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c0236d911a7b6338aa0802d55261eeca51b4d93', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77746ca76eef757f8c24503d604c3b2cb558f2fd', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
685028209,refactor(scanner): scan strings without splitting the lines,"~~Attemp to add multiline regex support for #1200 and possibly other checkers which may need multiline regex.~~

The strings obtained by scanning the binaries are further splitted and iterated to scan for versions in our tool using regex. Instead of splitting the lines we could directly employ regex to find the version in the string which will increase the performance by a lot.

Old Benchmark: https://github.com/intel/cve-bin-tool/pull/1227#issuecomment-877772563
New Benchmark: https://github.com/intel/cve-bin-tool/pull/1227#issuecomment-881434989",True,1227,https://api.github.com/repos/intel/cve-bin-tool/pulls/1227,https://github.com/intel/cve-bin-tool/pull/1227,closed,36,62,10,2,8,8,0,0,[],2021-07-07 09:34:51+00:00,2021-07-21 16:36:26+00:00,1234895.0,"14 days, 7:01:35","[{'comment_id': 669090176, 'comment_body': ""Why is this just a string? Shouldn't it be a comment?"", 'comment_created': datetime.datetime(2021, 7, 13, 20, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Molkree', 'type': 'User'}, {'comment_id': 669269800, 'comment_body': 'got mixed with docstring and comment 😅', 'comment_created': datetime.datetime(2021, 7, 14, 4, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 671174106, 'comment_body': ""the Ubuntu package doesn't get detected by the systemd checker and was returning `UNKNOWN` version. I'm still investigating why it doesn't work here."", 'comment_created': datetime.datetime(2021, 7, 16, 11, 33, 20, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 671415005, 'comment_body': ""the `--generated pattern for cve-bin-tool` is removed since we don't create checkers for python packages now."", 'comment_created': datetime.datetime(2021, 7, 16, 17, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 671606751, 'comment_body': 'resolved in 212f35a1b1961c163245301535ee602b7396bbeb', 'comment_created': datetime.datetime(2021, 7, 17, 4, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 671607046, 'comment_body': ""All the tests passed fine without function overriding \r\nI'll take a deeper look at if we need to keep it after this PR is merged."", 'comment_created': datetime.datetime(2021, 7, 17, 4, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 671725863, 'comment_body': '```suggestion\r\n            new_guess = match.group(1).strip()\r\n            break\r\n```\r\nThis `new_guess2` is kinda useless if you `break` now, every match will be longer than an empty string so you can simplify this.', 'comment_created': datetime.datetime(2021, 7, 17, 17, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Molkree', 'type': 'User'}, {'comment_id': 672801709, 'comment_body': 'This is not the optimal solution.\r\nI tried \r\n```\r\ndef __init__(self, filename=""""):\r\n        self.filename = filename\r\n        self.output = """"                   <<\r\n\r\n    async def aio_parse(self):\r\n        async with FileIO(self.filename, ""rb"") as f:\r\n            tmp = []\r\n            async for line in f:\r\n                for char in line:\r\n                    # remove all unprintable characters\r\n                    if char in Strings.PRINTABLE:\r\n                        tmp.append(chr(char))\r\n                    elif tmp:\r\n                        self.output += """".join(tmp)        <<\r\n                        tmp = []\r\n        return self.output\r\n```\r\nand \r\n```\r\ndef __init__(self, filename=""""):\r\n        self.filename = filename\r\n        self.output = """"                   <<\r\n\r\n    async def aio_parse(self):\r\n        async with FileIO(self.filename, ""rb"") as f:\r\n            tmp = []\r\n            async for line in f:\r\n                for char in line:\r\n                    # remove all unprintable characters\r\n                    if char in Strings.PRINTABLE:\r\n                        tmp.append(chr(char))\r\n                    elif tmp:\r\n                        self.output += ""\\n"".join(tmp)        <<\r\n                        tmp = []\r\n        return self.output\r\n```\r\nbut the 1st code doesn\'t detect multiline regexes and 2nd doesn\'t detect anything.\r\n\r\nedit: I wasn\'t adding ""\\n"" at the end of the string at 1st code 🤦🏼\u200d♂️', 'comment_created': datetime.datetime(2021, 7, 20, 4, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}]","[{'commit_sha': 'b240fa0f2dcfc63147896d2aac289094860a1153', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18ef68c72be69888c26df35641efece12da99808', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
665958672,Add dpkg checker,"Website: https://wiki.debian.org/dpkg
CVEs: https://www.cvedetails.com/product/18928/?q=Dpkg
",True,1170,https://api.github.com/repos/intel/cve-bin-tool/pulls/1170,https://github.com/intel/cve-bin-tool/pull/1170,closed,67,0,6,1,1,0,0,0,[],2021-06-09 14:19:42+00:00,2021-06-15 23:07:25+00:00,550063.0,"6 days, 8:47:43",[],"[{'commit_sha': '1869a1533fe7b0609c0dabff231b04507ee9a21d', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
673972084,Add logrotate Checker,CVEs: https://www.cvedetails.com/product/20629/?q=Logrotate,True,1184,https://api.github.com/repos/intel/cve-bin-tool/pulls/1184,https://github.com/intel/cve-bin-tool/pull/1184,closed,62,0,6,1,4,0,0,0,[],2021-06-20 04:23:17+00:00,2021-06-22 23:28:21+00:00,241504.0,"2 days, 19:05:04",[],"[{'commit_sha': '2ab015914b244e0cc3a4860073a1dc0bd92cf40d', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
674353299,Add ftp checker,CVEs: https://www.cvedetails.com/vendor/2/?q=FTP,True,1186,https://api.github.com/repos/intel/cve-bin-tool/pulls/1186,https://github.com/intel/cve-bin-tool/pull/1186,closed,41,0,5,2,2,2,0,0,[],2021-06-21 08:50:49+00:00,2021-06-23 18:58:16+00:00,209247.0,"2 days, 10:07:27","[{'comment_id': 656626476, 'comment_body': ""I think this comment should say ftp?  (I'm guessing you forgot to change it when you re-used the file)"", 'comment_created': datetime.datetime(2021, 6, 22, 22, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 656723337, 'comment_body': 'Oops! Fixed it 😅 ', 'comment_created': datetime.datetime(2021, 6, 23, 3, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}]","[{'commit_sha': 'ff6c3b3c2b177b637a1b33dc0107405bdcc671f4', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef345610a35973b1f4aaea2add27166e9f1097bd', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
676777554,Add checker for bolt,"
CVEs: https://www.cvedetails.com/product/64828/Boltcms-Bolt.html?vendor_id=21391",True,1193,https://api.github.com/repos/intel/cve-bin-tool/pulls/1193,https://github.com/intel/cve-bin-tool/pull/1193,closed,53,0,6,4,4,2,0,0,[],2021-06-24 04:22:31+00:00,2021-06-30 16:32:11+00:00,562180.0,"6 days, 12:09:40","[{'comment_id': 658272169, 'comment_body': '```suggestion\r\n```\r\nAnything that matches the first pattern will also match the second, so we might as well remove the one on line 22 and just keep the one on line 23.', 'comment_created': datetime.datetime(2021, 6, 24, 20, 48, 27, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 658466030, 'comment_body': 'Fixed it 👍🏼 ', 'comment_created': datetime.datetime(2021, 6, 25, 4, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}]","[{'commit_sha': '7b21a329087ffc9def39976bd438cb63b4f4db44', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2765ea84b2200c667e188b0a60886f5023db9a51', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a8d7c2a8b49eb64cfbd1cab13672ab3cb01a0c5', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '691cb004f678533522c870ae4aafe71b4513ef31', 'committer_username': 'terriko', 'committer_name': 'Terri Oda', 'committer_email': 'terri.oda@intel.com', 'commit_date': datetime.datetime(2012, 2, 15, 8, 43, 56, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
677708908,Universal PyPI package checker,"Since almost all python packages follow the same pattern storing their versions and package name (METADATA and PKG-INFO), I put together this PR and it could scan almost all python packages (I don't know if packages come without METADATA or PKG-INFO files). 
The vendor values are fetched by using `VendorFetch` from package list parser utility. 
I'm skeptical about this PR since it sounds too good to be true but it does work.

A sample scan on a bunch of python packages
```
╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                   CVE BINARY TOOL                                                    ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

 • cve-bin-tool Report Generated: 2021-06-26  14:57:30                                                                  
 • Time of last update of CVE Data: 2021-06-25  14:53:50                                                                
╭─────────────────╮
│  NewFound CVEs  │
╰─────────────────╯
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┓
┃ Vendor                     ┃ Product      ┃ Version ┃ CVE Number     ┃ Severity ┃ Score (CVSS Version) ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━┩
│ aio-libs_project           │ aiohttp      │ 3.7.4   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ hyper                      │ hyper        │ 0.7.0   │ CVE-2016-10932 │ MEDIUM   │ 4.8 (v3)             │
│ hyper                      │ hyper        │ 0.7.0   │ CVE-2017-18587 │ MEDIUM   │ 5.3 (v3)             │
│ hyper                      │ hyper        │ 0.7.0   │ CVE-2020-35863 │ CRITICAL │ 9.8 (v3)             │
│ python                     │ pypiserver   │ 1.3.2   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ ipython                    │ ipython      │ 7.16.1  │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ python                     │ hpack        │ 4.0.0   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ gnu                        │ gcc          │ 8.3.1   │ CVE-2019-15847 │ HIGH     │ 7.5 (v3)             │
│ gcc                        │ gcc          │ 8.3.1   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ python                     │ setuptools   │ 50.3.2  │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ libexpat                   │ expat        │ 2.2.8   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ libexpat_project           │ libexpat     │ 2.2.8   │ CVE-2013-0340  │ MEDIUM   │ 6.8 (v2)             │
│ python_software_foundation │ python       │ 2.7.18  │ CVE-2007-4559  │ MEDIUM   │ 6.8 (v2)             │
│ python                     │ python       │ 2.7.18  │ CVE-2009-2940  │ HIGH     │ 7.5 (v2)             │
│ python                     │ python       │ 2.7.18  │ CVE-2009-3720  │ MEDIUM   │ 5 (v2)               │
│ python                     │ python       │ 2.7.18  │ CVE-2015-5652  │ HIGH     │ 7.2 (v2)             │
│ python                     │ python       │ 2.7.18  │ CVE-2017-17522 │ HIGH     │ 8.8 (v3)             │
│ python                     │ python       │ 2.7.18  │ CVE-2017-18207 │ MEDIUM   │ 6.5 (v3)             │
│ python                     │ python       │ 2.7.18  │ CVE-2019-20907 │ HIGH     │ 7.5 (v3)             │
│ python                     │ python       │ 2.7.18  │ CVE-2019-9674  │ HIGH     │ 7.5 (v3)             │
│ python                     │ python       │ 2.7.18  │ CVE-2021-23336 │ MEDIUM   │ 5.9 (v3)             │
│ python                     │ python       │ 2.7.18  │ CVE-2021-28667 │ HIGH     │ 7.5 (v3)             │
│ python                     │ rsa          │ 3.4.2   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ python                     │ urllib3      │ 1.26.5  │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
│ vinay_sajip                │ python-gnupg │ 0.4.6   │ UNKNOWN        │ UNKNOWN  │ 0 (v0)               │
└────────────────────────────┴──────────────┴─────────┴────────────────┴──────────┴──────────────────────┘
```",True,1199,https://api.github.com/repos/intel/cve-bin-tool/pulls/1199,https://github.com/intel/cve-bin-tool/pull/1199,closed,46,5,2,3,1,0,0,0,[],2021-06-25 07:56:29+00:00,2021-06-30 00:20:03+00:00,404614.0,"4 days, 16:23:34",[],"[{'commit_sha': '3ca6ac6d930f23f2eb202d3501be5927a2652c84', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4de25f34d424b0d4dc9e2741c8ea2357010941e5', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88142b8b88a84e4c253c824114deef0ba26737de', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
677784020,feat(checker): Add gnome-shell checker,"Website: https://wiki.gnome.org/Projects/GnomeShell
CVEs: https://www.cvedetails.com/product/20202/?q=Gnome-shell",True,1200,https://api.github.com/repos/intel/cve-bin-tool/pulls/1200,https://github.com/intel/cve-bin-tool/pull/1200,closed,56,0,5,4,5,2,1,0,[{'name': 'signature needs work'}],2021-06-25 09:51:40+00:00,2021-07-22 19:16:10+00:00,2366670.0,"27 days, 9:24:30","[{'comment_id': 660967725, 'comment_body': ""My gut says this string is likely to generate false positives eventually.  Is there anything better available, and if not, can we at least try grepping all the gnome package strings (or maybe the strings for a wider range of linux packages) to make sure this isn't a config pattern used elsewhere?  "", 'comment_created': datetime.datetime(2021, 6, 29, 21, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 661542284, 'comment_body': 'There are nearly 100 different packages listed while searching ""gnome"", of which plenty of them starts with `gnome-shell`.\r\nAnd I think these packages could most probably hit false positives.\r\n\r\nI looked through the strings in `gnome-shell` a bit and found the version strings are placed as\r\n```\r\nvar PACKAGE_NAME = \'gnome-shell\';\r\nvar PACKAGE_VERSION = \'40.2\';\r\n```\r\nin adjacent lines. But `VERSION_PATTERNS` doesn\'t have multi-line support atm.So patterns like `var PACKAGE_NAME = \'gnome-shell\';\\nvar PACKAGE_VERSION = \'([0-9]+\\.[0-9]+(\\.[0-9]+)?)\';` doesn\'t work.\r\n\r\nSo I\'m wondering if I should close this or try tinkering with enabling multiline support.', 'comment_created': datetime.datetime(2021, 6, 30, 14, 41, 44, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}]","[{'commit_sha': 'c091ff2d94f26d0683df81bc4f1b0bce5cd7e496', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff21c4fce8a43aeea0929fce932684b41292553', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79e52d0c609daf517e4bfbb7cdbdf04992d662fb', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '327de3270077ab4a0777b6860f4b63b43458623a', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
678640935,Add checker for accountsservice,"Website: https://www.freedesktop.org/wiki/Software/AccountsService
CVEs: 
https://www.cvedetails.com/product/63450/?q=accountsservice
           https://www.cvedetails.com/product/27451/Canonical-Accountsservice.html?vendor_id=4781
           https://www.cvedetails.com/product/48266/Freedesktop-Accountsservice.html?vendor_id=7971
           https://www.cvedetails.com/product/63450/Accountsservice-Project-Accountsservice.html?vendor_id=21123",True,1205,https://api.github.com/repos/intel/cve-bin-tool/pulls/1205,https://github.com/intel/cve-bin-tool/pull/1205,closed,57,0,6,1,1,0,0,0,[],2021-06-28 02:09:54+00:00,2021-06-29 21:11:28+00:00,154894.0,"1 day, 19:01:34",[],"[{'commit_sha': '745359098c6be28a9a1230c7cee6d137ab342998', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
679551513,Add Checker for bubblewrap,CVEs:https://www.cvedetails.com/vendor/16078/?q=Bubblewrap+Project,True,1206,https://api.github.com/repos/intel/cve-bin-tool/pulls/1206,https://github.com/intel/cve-bin-tool/pull/1206,closed,52,0,6,1,1,0,0,0,[],2021-06-29 03:16:23+00:00,2021-06-29 21:04:25+00:00,64082.0,17:48:02,[],"[{'commit_sha': '6f4ea0564e6d0c4c062a89ae1e44151ed31c82ba', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
683173645,feat(checker): Add enscript Checker,"Website: https://www.gnu.org/software/enscript/
CVEs: https://www.cvedetails.com/product/1800/?q=Enscript",True,1216,https://api.github.com/repos/intel/cve-bin-tool/pulls/1216,https://github.com/intel/cve-bin-tool/pull/1216,closed,60,0,6,1,1,2,0,0,[],2021-07-04 13:19:47+00:00,2021-07-07 00:10:15+00:00,211828.0,"2 days, 10:50:28","[{'comment_id': 664950002, 'comment_body': 'I notice you have to add the checker in two __init__.py files.  Is there any way we could make it so we only have one canonical list of checkers?', 'comment_created': datetime.datetime(2021, 7, 7, 0, 3, 44, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 664951286, 'comment_body': ""I filed issue #1223 to look into this later, since it's not something that needs to be fixed in this checker specifically."", 'comment_created': datetime.datetime(2021, 7, 7, 0, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': '2aea11330d865f909b8fe5195a300dcb9a084772', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
683173862,feat(checker): Add cryptsetup Checker,CVEs: https://www.cvedetails.com/product/35660/?q=Cryptsetup,True,1217,https://api.github.com/repos/intel/cve-bin-tool/pulls/1217,https://github.com/intel/cve-bin-tool/pull/1217,closed,60,0,6,1,0,0,0,0,[],2021-07-04 13:21:12+00:00,2021-07-07 00:11:48+00:00,211836.0,"2 days, 10:50:36",[],"[{'commit_sha': '084ce11c38f3aa3d4df51990ea763b445283862a', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
683569275,feat(checker): Add cronie Checker,CVEs: https://www.cvedetails.com/product/18871/?q=Cronie,True,1221,https://api.github.com/repos/intel/cve-bin-tool/pulls/1221,https://github.com/intel/cve-bin-tool/pull/1221,closed,41,0,6,2,1,0,0,0,[],2021-07-05 10:18:05+00:00,2021-07-14 18:54:00+00:00,808555.0,"9 days, 8:35:55",[],"[{'commit_sha': 'b67df4769dd837d65969c35a8494aea8f796fe93', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34de9fa35757734468ff96c808f719b02bc6a2ff', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
683584060,feat(checker): Add gpgme Checker,"CVEs: 
https://www.cvedetails.com/product/94121/?q=Gpgme
           https://www.cvedetails.com/product/10513/GNU-Gpgme.html?vendor_id=72",True,1222,https://api.github.com/repos/intel/cve-bin-tool/pulls/1222,https://github.com/intel/cve-bin-tool/pull/1222,closed,58,0,6,1,0,0,0,0,[],2021-07-05 10:38:26+00:00,2021-07-06 23:11:43+00:00,131597.0,"1 day, 12:33:17",[],"[{'commit_sha': 'a1415b56e3e49f8a3ccc7a3d2fe68bca19d59bb1', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
687133598,feat(checker): Add gupnp Checker,"Website: https://wiki.gnome.org/Projects/GUPnP
CVEs: https://www.cvedetails.com/product/95568/?q=Gupnp
",True,1236,https://api.github.com/repos/intel/cve-bin-tool/pulls/1236,https://github.com/intel/cve-bin-tool/pull/1236,closed,56,0,6,1,1,0,0,0,[],2021-07-10 05:57:37+00:00,2021-07-14 02:53:31+00:00,334554.0,"3 days, 20:55:54",[],"[{'commit_sha': 'a2392fc3fee29b284ebd8abc360a892834584a70', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
687262881,feat(checker): Add hunspell Checker,"Website: https://hunspell.github.io/
CVEs: https://www.cvedetails.com/product/60308/?q=Hunspell",True,1238,https://api.github.com/repos/intel/cve-bin-tool/pulls/1238,https://github.com/intel/cve-bin-tool/pull/1238,closed,59,0,6,2,1,4,0,0,[],2021-07-11 02:13:47+00:00,2021-07-14 18:53:03+00:00,319156.0,"3 days, 16:39:16","[{'comment_id': 669245405, 'comment_body': ""hah, that's one heck of a version pattern. Clever devs!"", 'comment_created': datetime.datetime(2021, 7, 14, 3, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 669245683, 'comment_body': ""This seems unlikely to be correct, and if it is, it's going to cause false positives with https://en.wikipedia.org/wiki/Hostapd"", 'comment_created': datetime.datetime(2021, 7, 14, 3, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}, {'comment_id': 669251561, 'comment_body': ""that happened since I used hostapd checker file as boilerplate and somehow `FILENAME_PATTERNS` didn't get caught in my eyes. Now I wonder if long tests doesn't depend on `FILENAME_PATTERNS`"", 'comment_created': datetime.datetime(2021, 7, 14, 3, 22, 48, tzinfo=datetime.timezone.utc), 'commenter': 'BreadGenie', 'type': 'User'}, {'comment_id': 669870231, 'comment_body': ""I believe if you have duplicate filename patterns (and duplicate version matching patterns) cve-bin-tool will match both, so I wouldn't expect either test to fail.  We had an issue suggesting we should make some match-this-but-any-other-known-checker tests but they haven't been implemented.  It'd be pretty simple to write an assert that does that, although you'd have to allow for some to double-match with glibc I imagine."", 'comment_created': datetime.datetime(2021, 7, 14, 18, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'terriko', 'type': 'User'}]","[{'commit_sha': '89aef24533e5ec265b9b9a1b6a242825d3cd49a0', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd176cef9939fdba0f330a7c6a3b5ea8661da07ed', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
687504674,feat(checker): Add kexec-tools Checker,CVEs: https://www.cvedetails.com/product/27100/?q=Kexec-tools,True,1242,https://api.github.com/repos/intel/cve-bin-tool/pulls/1242,https://github.com/intel/cve-bin-tool/pull/1242,closed,49,0,6,2,2,0,0,0,[],2021-07-12 04:46:03+00:00,2021-07-14 18:47:25+00:00,223282.0,"2 days, 14:01:22",[],"[{'commit_sha': '1fd245a5a78e15def1d1f9c1b2714fb0f77d56dd', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed595dded41573356e91a2c8c70c346124219a5', 'committer_username': 'terriko', 'committer_name': 'Terri Oda', 'committer_email': 'terri.oda@intel.com', 'commit_date': datetime.datetime(2012, 2, 15, 8, 43, 56, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
691844673,feat(checker): Add Lua Checker,"Website: https://lua.org/
CVEs: https://www.cvedetails.com/product/28436/?q=LUA",True,1257,https://api.github.com/repos/intel/cve-bin-tool/pulls/1257,https://github.com/intel/cve-bin-tool/pull/1257,closed,59,0,5,1,0,0,0,0,[],2021-07-17 05:22:26+00:00,2021-07-21 19:33:25+00:00,396659.0,"4 days, 14:10:59",[],"[{'commit_sha': '25d8122c07b9f58a2725c360726e6e7c00f0fc12', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
692030979,feat(checker): Add mdadm Checker,CVEs: https://www.cvedetails.com/product/56966/?q=Mdadm,True,1261,https://api.github.com/repos/intel/cve-bin-tool/pulls/1261,https://github.com/intel/cve-bin-tool/pull/1261,closed,69,0,5,1,1,0,0,0,[],2021-07-18 05:13:25+00:00,2021-07-21 19:41:11+00:00,311266.0,"3 days, 14:27:46",[],"[{'commit_sha': 'a72c5d1933a8fa3f5f94f39863c42ba494fc272e', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
692209438,feat(checker): Add mtr Checker,CVEs: https://www.cvedetails.com/product/2103/?q=MTR,True,1263,https://api.github.com/repos/intel/cve-bin-tool/pulls/1263,https://github.com/intel/cve-bin-tool/pull/1263,closed,58,0,5,1,1,0,0,0,[],2021-07-19 02:11:00+00:00,2021-07-21 19:43:08+00:00,235928.0,"2 days, 17:32:08",[],"[{'commit_sha': 'b400bdc6c3066fa832c2da45043335ff696f89d7', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
694235869,feat(checker): Add TrouSerS checker,CVEs:https://www.cvedetails.com/vendor/23743/?q=Trousers+Project,True,1266,https://api.github.com/repos/intel/cve-bin-tool/pulls/1266,https://github.com/intel/cve-bin-tool/pull/1266,closed,69,0,5,1,1,0,0,0,[],2021-07-21 10:09:39+00:00,2021-07-21 19:46:15+00:00,34596.0,9:36:36,[],"[{'commit_sha': '3f78984041f44f227c7d936ff850225b368e576c', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
696357735,feat(checker): Add open-vm-tools Checker,CVEs: https://www.cvedetails.com/product/20666/?q=Open-vm-tools,True,1275,https://api.github.com/repos/intel/cve-bin-tool/pulls/1275,https://github.com/intel/cve-bin-tool/pull/1275,closed,59,0,6,1,1,0,0,0,[],2021-07-24 14:19:12+00:00,2021-07-27 22:56:14+00:00,290222.0,"3 days, 8:37:02",[],"[{'commit_sha': '65d092d15f981499026b3f4de23a10e04dc38f15', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
696438868,feat(checker): Add nano Checker,"Website: https://www.nano-editor.org/
CVEs: https://www.cvedetails.com/product/19122/?q=Nano",True,1277,https://api.github.com/repos/intel/cve-bin-tool/pulls/1277,https://github.com/intel/cve-bin-tool/pull/1277,closed,69,0,5,1,1,0,0,0,[],2021-07-25 04:05:30+00:00,2021-07-27 22:57:09+00:00,240699.0,"2 days, 18:51:39",[],"[{'commit_sha': '4238021b609c6cb533cf1662d09db0e4f7f7fab9', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
696654069,feat(checker): Add pscs-lite Checker,"Website: https://pcsclite.apdu.fr/
CVEs: https://www.cvedetails.com/product/19618/?q=Pcsc-lite",True,1280,https://api.github.com/repos/intel/cve-bin-tool/pulls/1280,https://github.com/intel/cve-bin-tool/pull/1280,closed,52,0,5,1,1,0,0,0,[],2021-07-26 03:35:41+00:00,2021-07-27 22:57:44+00:00,156123.0,"1 day, 19:22:03",[],"[{'commit_sha': '52160a9b86b52151182ce65facb08fe5427e6e5c', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
697466116,feat(checker): Add poppler Checker,"Website: http://poppler.freedesktop.org/
CVEs: 
https://www.cvedetails.com/product/6675/?q=Poppler
https://www.cvedetails.com/vulnerability-list/vendor_id-7971/product_id-24992/Freedesktop-Poppler.html",True,1283,https://api.github.com/repos/intel/cve-bin-tool/pulls/1283,https://github.com/intel/cve-bin-tool/pull/1283,closed,69,0,5,1,1,0,0,0,[],2021-07-27 01:44:06+00:00,2021-07-27 23:01:30+00:00,76644.0,21:17:24,[],"[{'commit_sha': 'ddf125364d786f5ef4561091dbe8a38cdc3884a3', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
698335276,feat(checker): Add pigz Checker,"Website: http://www.zlib.net/pigz/
CVEs: https://www.cvedetails.com/product/27527/?q=Pigz",True,1288,https://api.github.com/repos/intel/cve-bin-tool/pulls/1288,https://github.com/intel/cve-bin-tool/pull/1288,closed,65,0,5,1,0,0,0,0,[],2021-07-28 03:35:19+00:00,2021-07-29 23:11:00+00:00,156941.0,"1 day, 19:35:41",[],"[{'commit_sha': '596bbfa205dadb1495837ca3600de63e4202f53e', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60
699134064,feat(checker): Add sane-backends Checker,"Website: http://www.sane-project.org/
CVEs: https://www.cvedetails.com/vendor/16236/?q=Sane-backends+Project",True,1292,https://api.github.com/repos/intel/cve-bin-tool/pulls/1292,https://github.com/intel/cve-bin-tool/pull/1292,closed,48,0,5,1,1,0,0,0,[],2021-07-29 01:58:59+00:00,2021-08-03 23:12:20+00:00,508401.0,"5 days, 21:13:21",[],"[{'commit_sha': '0e4edc4fda160109e30f3cd37801137740e2fa45', 'committer_username': 'BreadGenie', 'committer_name': 'Suhail', 'committer_email': None, 'commit_date': datetime.datetime(2020, 4, 19, 14, 6, 49, tzinfo=datetime.timezone.utc)}]",Suhail,63963181,,User,,15,,46,60

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
165313961,cve-bin-tool,intel/cve-bin-tool,Python,449,1168,29,199,2762,149,31,18,"[{'id': 1123821821, 'number': 2349, 'closed': datetime.datetime(2022, 11, 16, 20, 58, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 16, 4, 55, 32, tzinfo=datetime.timezone.utc), 'time_taken': 57779.0, 'time_delta': '16:02:59', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 1122912588, 'number': 2347, 'closed': datetime.datetime(2022, 11, 16, 20, 55, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 15, 13, 45, 54, tzinfo=datetime.timezone.utc), 'time_taken': 112157.0, 'time_delta': '1 day, 7:09:17', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1083722676, 'number': 2107, 'closed': datetime.datetime(2022, 10, 11, 22, 46, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 11, 19, 2, 51, tzinfo=datetime.timezone.utc), 'time_taken': 13426.0, 'time_delta': '3:43:46', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 1081564591, 'number': 2095, 'closed': datetime.datetime(2022, 10, 10, 20, 3, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 10, 5, 39, 46, tzinfo=datetime.timezone.utc), 'time_taken': 51811.0, 'time_delta': '14:23:31', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 1081077666, 'number': 2091, 'closed': datetime.datetime(2022, 10, 10, 20, 5, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 8, 18, 31, 23, tzinfo=datetime.timezone.utc), 'time_taken': 178445.0, 'time_delta': '2 days, 1:34:05', 'additions': 53, 'deletions': 0, 'state': 'closed'}, {'id': 1080979878, 'number': 2086, 'closed': datetime.datetime(2022, 10, 10, 20, 9, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 8, 10, 12, 48, tzinfo=datetime.timezone.utc), 'time_taken': 208612.0, 'time_delta': '2 days, 9:56:52', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 1039841573, 'number': 1925, 'closed': datetime.datetime(2022, 10, 31, 20, 23, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 29, 15, 9, 18, tzinfo=datetime.timezone.utc), 'time_taken': 5462074.0, 'time_delta': '63 days, 5:14:34', 'additions': 289, 'deletions': 135, 'state': 'closed'}, {'id': 1029946567, 'number': 1893, 'closed': datetime.datetime(2022, 8, 25, 19, 49, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 18, 12, 41, 8, tzinfo=datetime.timezone.utc), 'time_taken': 630476.0, 'time_delta': '7 days, 7:07:56', 'additions': 152, 'deletions': 159, 'state': 'closed'}, {'id': 1012810953, 'number': 1849, 'closed': datetime.datetime(2022, 8, 1, 17, 13, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 16, 17, 55, tzinfo=datetime.timezone.utc), 'time_taken': 176130.0, 'time_delta': '2 days, 0:55:30', 'additions': 46, 'deletions': 296, 'state': 'closed'}, {'id': 1012799908, 'number': 1847, 'closed': datetime.datetime(2022, 8, 1, 17, 7, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 15, 53, 22, tzinfo=datetime.timezone.utc), 'time_taken': 177231.0, 'time_delta': '2 days, 1:13:51', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 1009738753, 'number': 1837, 'closed': datetime.datetime(2022, 7, 27, 16, 30, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 14, 26, tzinfo=datetime.timezone.utc), 'time_taken': 7494.0, 'time_delta': '2:04:54', 'additions': 18, 'deletions': 18, 'state': 'closed'}, {'id': 1009504629, 'number': 1835, 'closed': datetime.datetime(2022, 7, 27, 16, 33, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 27, 10, 51, 13, tzinfo=datetime.timezone.utc), 'time_taken': 20545.0, 'time_delta': '5:42:25', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 1006620325, 'number': 1824, 'closed': datetime.datetime(2022, 7, 26, 23, 0, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 24, 20, 35, 19, tzinfo=datetime.timezone.utc), 'time_taken': 181529.0, 'time_delta': '2 days, 2:25:29', 'additions': 142, 'deletions': 133, 'state': 'closed'}, {'id': 996716641, 'number': 1782, 'closed': datetime.datetime(2022, 7, 19, 21, 45, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 13, 59, 32, tzinfo=datetime.timezone.utc), 'time_taken': 459967.0, 'time_delta': '5 days, 7:46:07', 'additions': 2, 'deletions': 7, 'state': 'closed'}, {'id': 844741909, 'number': 1577, 'closed': datetime.datetime(2022, 2, 10, 6, 27, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 10, 5, 48, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2322.0, 'time_delta': '0:38:42', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 843780343, 'number': 1573, 'closed': datetime.datetime(2022, 2, 22, 21, 56, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 9, 11, 6, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1162199.0, 'time_delta': '13 days, 10:49:59', 'additions': 22, 'deletions': 3, 'state': 'closed'}, {'id': 840865425, 'number': 1569, 'closed': datetime.datetime(2022, 2, 16, 16, 44, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 5, 13, 27, 59, tzinfo=datetime.timezone.utc), 'time_taken': 962164.0, 'time_delta': '11 days, 3:16:04', 'additions': 34, 'deletions': 37, 'state': 'closed'}, {'id': 835427312, 'number': 1564, 'closed': datetime.datetime(2022, 2, 9, 11, 15, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 17, 24, 30, tzinfo=datetime.timezone.utc), 'time_taken': 841864.0, 'time_delta': '9 days, 17:51:04', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 816796710, 'number': 1513, 'closed': datetime.datetime(2022, 1, 26, 1, 4, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 8, 4, 55, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1541317.0, 'time_delta': '17 days, 20:08:37', 'additions': 246, 'deletions': 78, 'state': 'closed'}, {'id': 805818120, 'number': 1466, 'closed': datetime.datetime(2021, 12, 20, 19, 15, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 18, 9, 17, 58, tzinfo=datetime.timezone.utc), 'time_taken': 208649.0, 'time_delta': '2 days, 9:57:29', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 795998097, 'number': 1458, 'closed': datetime.datetime(2021, 12, 8, 2, 9, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 6, 15, 28, 11, tzinfo=datetime.timezone.utc), 'time_taken': 124890.0, 'time_delta': '1 day, 10:41:30', 'additions': 32, 'deletions': 19, 'state': 'closed'}, {'id': 785386801, 'number': 1445, 'closed': datetime.datetime(2021, 11, 23, 22, 58, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 21, 12, 50, 22, tzinfo=datetime.timezone.utc), 'time_taken': 209289.0, 'time_delta': '2 days, 10:08:09', 'additions': 75, 'deletions': 17, 'state': 'closed'}, {'id': 772565768, 'number': 1434, 'closed': datetime.datetime(2021, 11, 3, 17, 38, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 16, 40, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3441.0, 'time_delta': '0:57:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 769640486, 'number': 1432, 'closed': datetime.datetime(2021, 11, 18, 19, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 30, 3, 46, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1699784.0, 'time_delta': '19 days, 16:09:44', 'additions': 19, 'deletions': 22, 'state': 'closed'}, {'id': 767403424, 'number': 1425, 'closed': datetime.datetime(2021, 10, 28, 17, 24, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 27, 13, 12, 18, tzinfo=datetime.timezone.utc), 'time_taken': 101514.0, 'time_delta': '1 day, 4:11:54', 'additions': 22, 'deletions': 9, 'state': 'closed'}, {'id': 766352421, 'number': 1417, 'closed': datetime.datetime(2021, 11, 18, 19, 45, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 11, 20, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2017481.0, 'time_delta': '23 days, 8:24:41', 'additions': 49, 'deletions': 72, 'state': 'closed'}, {'id': 766131938, 'number': 1415, 'closed': datetime.datetime(2021, 11, 2, 23, 33, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 7, 4, 26, tzinfo=datetime.timezone.utc), 'time_taken': 664138.0, 'time_delta': '7 days, 16:28:58', 'additions': 26, 'deletions': 17, 'state': 'closed'}, {'id': 766112060, 'number': 1413, 'closed': datetime.datetime(2021, 10, 27, 19, 56, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 26, 6, 31, 35, tzinfo=datetime.timezone.utc), 'time_taken': 134719.0, 'time_delta': '1 day, 13:25:19', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 759698581, 'number': 1394, 'closed': datetime.datetime(2021, 10, 19, 23, 41, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 16, 17, 57, 25, tzinfo=datetime.timezone.utc), 'time_taken': 279856.0, 'time_delta': '3 days, 5:44:16', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 758247284, 'number': 1390, 'closed': datetime.datetime(2021, 10, 21, 16, 52, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 14, 11, 19, 1, tzinfo=datetime.timezone.utc), 'time_taken': 624786.0, 'time_delta': '7 days, 5:33:06', 'additions': 116, 'deletions': 2, 'state': 'closed'}, {'id': 731865383, 'number': 1365, 'closed': datetime.datetime(2021, 9, 21, 22, 50, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 11, 3, 50, 55, tzinfo=datetime.timezone.utc), 'time_taken': 932351.0, 'time_delta': '10 days, 18:59:11', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 731272547, 'number': 1364, 'closed': datetime.datetime(2021, 10, 13, 16, 19, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 10, 8, 47, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2878345.0, 'time_delta': '33 days, 7:32:25', 'additions': 15, 'deletions': 57, 'state': 'closed'}, {'id': 730240196, 'number': 1363, 'closed': datetime.datetime(2021, 10, 13, 16, 29, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 9, 6, 13, 7, tzinfo=datetime.timezone.utc), 'time_taken': 2974606.0, 'time_delta': '34 days, 10:16:46', 'additions': 224, 'deletions': 163, 'state': 'closed'}, {'id': 714749542, 'number': 1344, 'closed': datetime.datetime(2021, 8, 18, 16, 25, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 5, 13, 52, tzinfo=datetime.timezone.utc), 'time_taken': 40271.0, 'time_delta': '11:11:11', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 701097340, 'number': 1301, 'closed': datetime.datetime(2021, 8, 3, 21, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 4, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 147348.0, 'time_delta': '1 day, 16:55:48', 'additions': 14, 'deletions': 9, 'state': 'closed'}, {'id': 700808036, 'number': 1295, 'closed': datetime.datetime(2021, 8, 4, 16, 44, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 1, 2, 36, 36, tzinfo=datetime.timezone.utc), 'time_taken': 310067.0, 'time_delta': '3 days, 14:07:47', 'additions': 25, 'deletions': 55, 'state': 'closed'}, {'id': 699134064, 'number': 1292, 'closed': datetime.datetime(2021, 8, 3, 23, 12, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 1, 58, 59, tzinfo=datetime.timezone.utc), 'time_taken': 508401.0, 'time_delta': '5 days, 21:13:21', 'additions': 48, 'deletions': 0, 'state': 'closed'}, {'id': 698341251, 'number': 1289, 'closed': datetime.datetime(2021, 8, 2, 20, 21, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 3, 55, 59, tzinfo=datetime.timezone.utc), 'time_taken': 491105.0, 'time_delta': '5 days, 16:25:05', 'additions': 33, 'deletions': 24, 'state': 'closed'}, {'id': 698335276, 'number': 1288, 'closed': datetime.datetime(2021, 7, 29, 23, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 3, 35, 19, tzinfo=datetime.timezone.utc), 'time_taken': 156941.0, 'time_delta': '1 day, 19:35:41', 'additions': 65, 'deletions': 0, 'state': 'closed'}, {'id': 697466116, 'number': 1283, 'closed': datetime.datetime(2021, 7, 27, 23, 1, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 1, 44, 6, tzinfo=datetime.timezone.utc), 'time_taken': 76644.0, 'time_delta': '21:17:24', 'additions': 69, 'deletions': 0, 'state': 'closed'}, {'id': 696654069, 'number': 1280, 'closed': datetime.datetime(2021, 7, 27, 22, 57, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 3, 35, 41, tzinfo=datetime.timezone.utc), 'time_taken': 156123.0, 'time_delta': '1 day, 19:22:03', 'additions': 52, 'deletions': 0, 'state': 'closed'}, {'id': 696438868, 'number': 1277, 'closed': datetime.datetime(2021, 7, 27, 22, 57, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 25, 4, 5, 30, tzinfo=datetime.timezone.utc), 'time_taken': 240699.0, 'time_delta': '2 days, 18:51:39', 'additions': 69, 'deletions': 0, 'state': 'closed'}, {'id': 696357735, 'number': 1275, 'closed': datetime.datetime(2021, 7, 27, 22, 56, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 14, 19, 12, tzinfo=datetime.timezone.utc), 'time_taken': 290222.0, 'time_delta': '3 days, 8:37:02', 'additions': 59, 'deletions': 0, 'state': 'closed'}, {'id': 696356273, 'number': 1274, 'closed': datetime.datetime(2021, 7, 27, 20, 44, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 14, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 283047.0, 'time_delta': '3 days, 6:37:27', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 696334972, 'number': 1273, 'closed': datetime.datetime(2021, 8, 17, 23, 39, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 11, 14, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2118292.0, 'time_delta': '24 days, 12:24:52', 'additions': 224, 'deletions': 0, 'state': 'closed'}, {'id': 694235869, 'number': 1266, 'closed': datetime.datetime(2021, 7, 21, 19, 46, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 10, 9, 39, tzinfo=datetime.timezone.utc), 'time_taken': 34596.0, 'time_delta': '9:36:36', 'additions': 69, 'deletions': 0, 'state': 'closed'}, {'id': 692209438, 'number': 1263, 'closed': datetime.datetime(2021, 7, 21, 19, 43, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 2, 11, tzinfo=datetime.timezone.utc), 'time_taken': 235928.0, 'time_delta': '2 days, 17:32:08', 'additions': 58, 'deletions': 0, 'state': 'closed'}, {'id': 692030979, 'number': 1261, 'closed': datetime.datetime(2021, 7, 21, 19, 41, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 5, 13, 25, tzinfo=datetime.timezone.utc), 'time_taken': 311266.0, 'time_delta': '3 days, 14:27:46', 'additions': 69, 'deletions': 0, 'state': 'closed'}, {'id': 691844673, 'number': 1257, 'closed': datetime.datetime(2021, 7, 21, 19, 33, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 5, 22, 26, tzinfo=datetime.timezone.utc), 'time_taken': 396659.0, 'time_delta': '4 days, 14:10:59', 'additions': 59, 'deletions': 0, 'state': 'closed'}, {'id': 691190591, 'number': 1256, 'closed': datetime.datetime(2021, 7, 19, 19, 20, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 16, 4, 37, 44, tzinfo=datetime.timezone.utc), 'time_taken': 312193.0, 'time_delta': '3 days, 14:43:13', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 687504674, 'number': 1242, 'closed': datetime.datetime(2021, 7, 14, 18, 47, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 12, 4, 46, 3, tzinfo=datetime.timezone.utc), 'time_taken': 223282.0, 'time_delta': '2 days, 14:01:22', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 687263005, 'number': 1239, 'closed': datetime.datetime(2021, 7, 14, 3, 4, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 2, 14, 54, tzinfo=datetime.timezone.utc), 'time_taken': 262163.0, 'time_delta': '3 days, 0:49:23', 'additions': 55, 'deletions': 0, 'state': 'closed'}, {'id': 687262881, 'number': 1238, 'closed': datetime.datetime(2021, 7, 14, 18, 53, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 2, 13, 47, tzinfo=datetime.timezone.utc), 'time_taken': 319156.0, 'time_delta': '3 days, 16:39:16', 'additions': 59, 'deletions': 0, 'state': 'closed'}, {'id': 687133598, 'number': 1236, 'closed': datetime.datetime(2021, 7, 14, 2, 53, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 5, 57, 37, tzinfo=datetime.timezone.utc), 'time_taken': 334554.0, 'time_delta': '3 days, 20:55:54', 'additions': 56, 'deletions': 0, 'state': 'closed'}, {'id': 687128000, 'number': 1235, 'closed': datetime.datetime(2021, 7, 14, 2, 52, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 5, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 337931.0, 'time_delta': '3 days, 21:52:11', 'additions': 49, 'deletions': 8, 'state': 'closed'}, {'id': 685028209, 'number': 1227, 'closed': datetime.datetime(2021, 7, 21, 16, 36, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 9, 34, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1234895.0, 'time_delta': '14 days, 7:01:35', 'additions': 36, 'deletions': 62, 'state': 'closed'}, {'id': 684836256, 'number': 1224, 'closed': datetime.datetime(2021, 7, 15, 16, 40, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 3, 52, 41, tzinfo=datetime.timezone.utc), 'time_taken': 737297.0, 'time_delta': '8 days, 12:48:17', 'additions': 7, 'deletions': 111, 'state': 'closed'}, {'id': 683584060, 'number': 1222, 'closed': datetime.datetime(2021, 7, 6, 23, 11, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 10, 38, 26, tzinfo=datetime.timezone.utc), 'time_taken': 131597.0, 'time_delta': '1 day, 12:33:17', 'additions': 58, 'deletions': 0, 'state': 'closed'}, {'id': 683569275, 'number': 1221, 'closed': datetime.datetime(2021, 7, 14, 18, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 10, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 808555.0, 'time_delta': '9 days, 8:35:55', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 683173862, 'number': 1217, 'closed': datetime.datetime(2021, 7, 7, 0, 11, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 13, 21, 12, tzinfo=datetime.timezone.utc), 'time_taken': 211836.0, 'time_delta': '2 days, 10:50:36', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 683173645, 'number': 1216, 'closed': datetime.datetime(2021, 7, 7, 0, 10, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 13, 19, 47, tzinfo=datetime.timezone.utc), 'time_taken': 211828.0, 'time_delta': '2 days, 10:50:28', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 683172897, 'number': 1215, 'closed': datetime.datetime(2021, 7, 6, 21, 2, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 13, 14, 52, tzinfo=datetime.timezone.utc), 'time_taken': 200874.0, 'time_delta': '2 days, 7:47:54', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 681709183, 'number': 1209, 'closed': datetime.datetime(2021, 7, 7, 0, 1, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 10, 14, 29, tzinfo=datetime.timezone.utc), 'time_taken': 481643.0, 'time_delta': '5 days, 13:47:23', 'additions': 18, 'deletions': 15, 'state': 'closed'}, {'id': 679551513, 'number': 1206, 'closed': datetime.datetime(2021, 6, 29, 21, 4, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 3, 16, 23, tzinfo=datetime.timezone.utc), 'time_taken': 64082.0, 'time_delta': '17:48:02', 'additions': 52, 'deletions': 0, 'state': 'closed'}, {'id': 678640935, 'number': 1205, 'closed': datetime.datetime(2021, 6, 29, 21, 11, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 2, 9, 54, tzinfo=datetime.timezone.utc), 'time_taken': 154894.0, 'time_delta': '1 day, 19:01:34', 'additions': 57, 'deletions': 0, 'state': 'closed'}, {'id': 678455304, 'number': 1203, 'closed': datetime.datetime(2021, 6, 30, 16, 30, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 4, 56, 54, tzinfo=datetime.timezone.utc), 'time_taken': 300827.0, 'time_delta': '3 days, 11:33:47', 'additions': 80, 'deletions': 31, 'state': 'closed'}, {'id': 677810518, 'number': 1202, 'closed': datetime.datetime(2021, 6, 29, 23, 56, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 10, 32, 58, tzinfo=datetime.timezone.utc), 'time_taken': 393817.0, 'time_delta': '4 days, 13:23:37', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 677784020, 'number': 1200, 'closed': datetime.datetime(2021, 7, 22, 19, 16, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 9, 51, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2366670.0, 'time_delta': '27 days, 9:24:30', 'additions': 56, 'deletions': 0, 'state': 'closed'}, {'id': 677708908, 'number': 1199, 'closed': datetime.datetime(2021, 6, 30, 0, 20, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 7, 56, 29, tzinfo=datetime.timezone.utc), 'time_taken': 404614.0, 'time_delta': '4 days, 16:23:34', 'additions': 46, 'deletions': 5, 'state': 'closed'}, {'id': 676795434, 'number': 1194, 'closed': datetime.datetime(2021, 6, 24, 23, 12, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 5, 11, 56, tzinfo=datetime.timezone.utc), 'time_taken': 64810.0, 'time_delta': '18:00:10', 'additions': 5, 'deletions': 98, 'state': 'closed'}, {'id': 676777554, 'number': 1193, 'closed': datetime.datetime(2021, 6, 30, 16, 32, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 4, 22, 31, tzinfo=datetime.timezone.utc), 'time_taken': 562180.0, 'time_delta': '6 days, 12:09:40', 'additions': 53, 'deletions': 0, 'state': 'closed'}, {'id': 675329195, 'number': 1187, 'closed': datetime.datetime(2021, 6, 23, 16, 55, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 11, 24, 6, tzinfo=datetime.timezone.utc), 'time_taken': 106305.0, 'time_delta': '1 day, 5:31:45', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 674353299, 'number': 1186, 'closed': datetime.datetime(2021, 6, 23, 18, 58, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 8, 50, 49, tzinfo=datetime.timezone.utc), 'time_taken': 209247.0, 'time_delta': '2 days, 10:07:27', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 673972084, 'number': 1184, 'closed': datetime.datetime(2021, 6, 22, 23, 28, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 4, 23, 17, tzinfo=datetime.timezone.utc), 'time_taken': 241504.0, 'time_delta': '2 days, 19:05:04', 'additions': 62, 'deletions': 0, 'state': 'closed'}, {'id': 673832358, 'number': 1183, 'closed': datetime.datetime(2021, 6, 23, 16, 54, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 6, 38, 13, tzinfo=datetime.timezone.utc), 'time_taken': 382552.0, 'time_delta': '4 days, 10:15:52', 'additions': 173, 'deletions': 56, 'state': 'closed'}, {'id': 670945825, 'number': 1175, 'closed': datetime.datetime(2021, 6, 16, 16, 8, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 2, 27, 36, tzinfo=datetime.timezone.utc), 'time_taken': 49267.0, 'time_delta': '13:41:07', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 668872573, 'number': 1172, 'closed': datetime.datetime(2021, 6, 15, 23, 28, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 13, 46, 50, tzinfo=datetime.timezone.utc), 'time_taken': 294105.0, 'time_delta': '3 days, 9:41:45', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 668052757, 'number': 1171, 'closed': datetime.datetime(2021, 6, 23, 16, 43, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 11, 47, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1054562.0, 'time_delta': '12 days, 4:56:02', 'additions': 33, 'deletions': 13, 'state': 'closed'}, {'id': 665958672, 'number': 1170, 'closed': datetime.datetime(2021, 6, 15, 23, 7, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 14, 19, 42, tzinfo=datetime.timezone.utc), 'time_taken': 550063.0, 'time_delta': '6 days, 8:47:43', 'additions': 67, 'deletions': 0, 'state': 'closed'}, {'id': 662432902, 'number': 1166, 'closed': datetime.datetime(2021, 6, 8, 5, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 13, 3, 11, tzinfo=datetime.timezone.utc), 'time_taken': 231829.0, 'time_delta': '2 days, 16:23:49', 'additions': 77, 'deletions': 77, 'state': 'closed'}, {'id': 661696491, 'number': 1165, 'closed': datetime.datetime(2021, 6, 16, 17, 3, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 11, 44, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1055928.0, 'time_delta': '12 days, 5:18:48', 'additions': 426, 'deletions': 23, 'state': 'closed'}, {'id': 655017574, 'number': 1163, 'closed': datetime.datetime(2021, 6, 25, 0, 4, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 13, 56, 11, tzinfo=datetime.timezone.utc), 'time_taken': 2455682.0, 'time_delta': '28 days, 10:08:02', 'additions': 59, 'deletions': 36, 'state': 'closed'}, {'id': 645288921, 'number': 1160, 'closed': datetime.datetime(2021, 5, 19, 17, 39, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 16, 9, 29, 51, tzinfo=datetime.timezone.utc), 'time_taken': 288599.0, 'time_delta': '3 days, 8:09:59', 'additions': 59, 'deletions': 23, 'state': 'closed'}, {'id': 640357256, 'number': 1156, 'closed': datetime.datetime(2021, 5, 13, 20, 31, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 11, 12, 22, 23, tzinfo=datetime.timezone.utc), 'time_taken': 202149.0, 'time_delta': '2 days, 8:09:09', 'additions': 35, 'deletions': 5, 'state': 'closed'}, {'id': 634343802, 'number': 1154, 'closed': datetime.datetime(2021, 5, 13, 20, 26, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 8, 11, 37, 21, tzinfo=datetime.timezone.utc), 'time_taken': 463728.0, 'time_delta': '5 days, 8:48:48', 'additions': 108, 'deletions': 71, 'state': 'closed'}, {'id': 634033249, 'number': 1152, 'closed': datetime.datetime(2021, 5, 13, 20, 32, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 8, 6, 25, 25, tzinfo=datetime.timezone.utc), 'time_taken': 482815.0, 'time_delta': '5 days, 14:06:55', 'additions': 11, 'deletions': 0, 'state': 'closed'}, {'id': 629647844, 'number': 1150, 'closed': datetime.datetime(2021, 5, 4, 18, 11, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 4, 9, 19, 58, tzinfo=datetime.timezone.utc), 'time_taken': 31921.0, 'time_delta': '8:52:01', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 616211800, 'number': 1137, 'closed': datetime.datetime(2021, 5, 4, 18, 13, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 16, 55, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1646275.0, 'time_delta': '19 days, 1:17:55', 'additions': 48, 'deletions': 0, 'state': 'closed'}, {'id': 616210866, 'number': 1136, 'closed': datetime.datetime(2021, 4, 22, 17, 32, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 15, 16, 53, 37, tzinfo=datetime.timezone.utc), 'time_taken': 607154.0, 'time_delta': '7 days, 0:39:14', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 609648421, 'number': 1131, 'closed': datetime.datetime(2021, 4, 26, 17, 10, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 8, 32, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1759095.0, 'time_delta': '20 days, 8:38:15', 'additions': 38, 'deletions': 0, 'state': 'closed'}, {'id': 607969762, 'number': 1127, 'closed': datetime.datetime(2021, 4, 14, 18, 23, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 10, 47, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1064150.0, 'time_delta': '12 days, 7:35:50', 'additions': 53, 'deletions': 0, 'state': 'closed'}, {'id': 599437407, 'number': 1113, 'closed': datetime.datetime(2021, 5, 26, 17, 35, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 24, 7, 0, 20, tzinfo=datetime.timezone.utc), 'time_taken': 5481317.0, 'time_delta': '63 days, 10:35:17', 'additions': 200, 'deletions': 0, 'state': 'closed'}, {'id': 598863203, 'number': 1108, 'closed': datetime.datetime(2021, 3, 23, 21, 50, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 13, 35, 11, tzinfo=datetime.timezone.utc), 'time_taken': 29719.0, 'time_delta': '8:15:19', 'additions': 48, 'deletions': 0, 'state': 'closed'}, {'id': 575844422, 'number': 1076, 'closed': datetime.datetime(2021, 3, 23, 14, 4, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 18, 17, 8, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2840196.0, 'time_delta': '32 days, 20:56:36', 'additions': 43, 'deletions': 0, 'state': 'closed'}]"
