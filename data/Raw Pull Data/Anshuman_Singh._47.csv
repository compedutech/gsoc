pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
412400605,Initial part of Auto-Scaling on Google Cloud,"## Description

I tried to implement a part of Auto-Scaling on GCP, now one can spin-up a compute instance just by using a few lines of code. I have added a README.md for further instructions.

To use this you will have to use a python script as I used the subprocess module which doesn't work in Jupyter Notebooks. If somebody knows how can we make it work in Jupyter Notebooks please let me know :)


Fixes(Initial Implementation, more code on the way) #3099 (issue)

## Type of change

Please mark the options that are relevant.

- [ ] Added/Modified tutorials
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:

* [x] I did follow the [contribution guidelines](https://github.com/OpenMined/PySyft/blob/master/CONTRIBUTING.md)
* [x] I have added tests for my changes
* [x] I have commented my code following [Google style](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html).",True,3437,https://api.github.com/repos/OpenMined/PySyft/pulls/3437,https://github.com/OpenMined/PySyft/pull/3437,closed,135,0,3,5,4,2,1,0,[{'name': 'Type: New Feature :heavy_plus_sign:'}],2020-05-02 05:03:02+00:00,2020-05-06 16:37:10+00:00,387248.0,"4 days, 11:34:08","[{'comment_id': 420145510, 'comment_body': 'Terraform needs credentials to destroy. Remove the link to the file after calling destroy.', 'comment_created': datetime.datetime(2020, 5, 5, 14, 18, 22, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 420152196, 'comment_body': 'Fixed it by deleting credentials after terraform destroy.', 'comment_created': datetime.datetime(2020, 5, 5, 14, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}]","[{'commit_sha': 'dfb71f219fbda72bbfa2701c4b9d89b1c5c988e8', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e53ecbf0cb33c8cdb1c14d612ce1db18f27fb84b', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31b37ed3bd144dd23e6d7e6b5008b08943a3c835', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2312b646cc42a9529a9de50d451e69a615ccaa87', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e20c8dc250b4cdaac266fb3f4e124b00167aecbc', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}]",Anshuman Singh,50065887,anz19999999999@gmail.com,User,,43,,38,127
415604132,Added support for notebooks in Autoscale,"## Description

Added support for autoscale on notebooks, previously it could only be run using a python script.
Now it can be run using both script (.py) and notebook(.ipynb).

@hericlesme 
#3099(issue)
## Type of change

Please mark the options that are relevant.

- [ ] Added/Modified tutorials
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:

* [x] I have added tests for my changes
* [x] I did follow the [contribution guidelines](https://github.com/OpenMined/PySyft/blob/master/CONTRIBUTING.md)
* [x] I have commented my code following [Google style](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html).",True,3483,https://api.github.com/repos/OpenMined/PySyft/pulls/3483,https://github.com/OpenMined/PySyft/pull/3483,closed,213,12,5,17,2,2,0,0,[],2020-05-09 17:16:06+00:00,2020-05-16 17:09:39+00:00,604413.0,"6 days, 23:53:33","[{'comment_id': 426106815, 'comment_body': '`gclouds` -> `gcloud`', 'comment_created': datetime.datetime(2020, 5, 16, 2, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 426108649, 'comment_body': 'Changed `gclouds` -> `gcloud`\r\n\r\n\r\n', 'comment_created': datetime.datetime(2020, 5, 16, 2, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}]","[{'commit_sha': 'dfb71f219fbda72bbfa2701c4b9d89b1c5c988e8', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e53ecbf0cb33c8cdb1c14d612ce1db18f27fb84b', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31b37ed3bd144dd23e6d7e6b5008b08943a3c835', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2312b646cc42a9529a9de50d451e69a615ccaa87', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e20c8dc250b4cdaac266fb3f4e124b00167aecbc', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52e344fae886c9f3f0fcda13a4dc0945a474ceff', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00956f266920cc2c8d96dd1f1caba7d4ce1b7b80', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e377eec8b50aeb9f4ccef9433415242c31b0bb48', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a573e24b48fb7d926170b786b0dc86425c8f49d', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '051c11314e40d24c3f219797ca2bd7dd82173125', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acbb73b1ad57ccd7ccc9720647c0713cb9fcea76', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fb55d97ae1f86572528921c9bc44e5e8950a160', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf5a4d6a3fffa8ffa65cdb54c2bde11184a955de', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aa53572f67ee98d930a90bd73fbd14361864d3a', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55b913fdf96004cbfb7c43d3e41bb15cc94dd5d', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d7a6e916799499541695c82c2ba9080319817f', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e992157de2220db53d3849ff0e1db15eda38e0d1', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}]",Anshuman Singh,50065887,anz19999999999@gmail.com,User,,43,,38,127
425233083,Added functionality to create a cluster using autoscale API,"Added functionality to spin-up a MIG of N workers + 1 master using the autoscale API.
#3099 
@hericlesme 
## Type of Change
Please mark options that are relevant.

- [x] New feature (non-breaking change which adds functionality)
## How has this been tested?
- I have created test.py and test.ipynb for testing the functionality.
- Follow the instructions in the README.md to install the dependencies.
- Run test.py or test.ipynb to test the implemented functionality.

## Checklist
- [x] I did follow the [Code of Conduct](https://github.com/OpenMined/.github/blob/master/CODE_OF_CONDUCT.md)
- [x] I did follow the [Contribution Guidelines](https://github.com/OpenMined/.github/blob/master/CONTRIBUTING.md)
- [x] I have commented my code following the [OpenMined Styleguide](https://github.com/OpenMined/.github/blob/master/STYLEGUIDE.md)
- [x] I have added tests for my changes",True,3637,https://api.github.com/repos/OpenMined/PySyft/pulls/3637,https://github.com/OpenMined/PySyft/pull/3637,closed,417,15,4,6,2,6,1,0,[{'name': 'Type: New Feature :heavy_plus_sign:'}],2020-05-29 17:30:35+00:00,2020-06-13 16:40:37+00:00,1293002.0,"14 days, 23:10:02","[{'comment_id': 432673398, 'comment_body': 'Would it be possible to pass these in as Enums we provide instead of strings? That way we could get better autocomplete for it you know? (as opposed to having to know the *exact* string of what you need)', 'comment_created': datetime.datetime(2020, 5, 29, 18, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'iamtrask', 'type': 'User'}, {'comment_id': 432673617, 'comment_body': '(Very nice PR btw! Thank you for contributing!)', 'comment_created': datetime.datetime(2020, 5, 29, 18, 50, 10, tzinfo=datetime.timezone.utc), 'commenter': 'iamtrask', 'type': 'User'}, {'comment_id': 432936765, 'comment_body': '@iamtrask Added Enums, please take a look, no need of looking up the exact string now.\r\nJust added 1 value in each category, will add more later.', 'comment_created': datetime.datetime(2020, 5, 31, 11, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}, {'comment_id': 436674803, 'comment_body': 'I think it would be nice if Enums were like the [syft codes](https://github.com/OpenMined/PySyft/blob/master/syft/codes.py). What do you think?', 'comment_created': datetime.datetime(2020, 6, 8, 13, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 436739937, 'comment_body': '@hericlesme So basically I need to get rid of the Enum module and capitalize everything?', 'comment_created': datetime.datetime(2020, 6, 8, 14, 11, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}, {'comment_id': 438511358, 'comment_body': '@hericlesme @iamtrask I got rid of the enum module and added more enums, please take a look.', 'comment_created': datetime.datetime(2020, 6, 11, 2, 42, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}]","[{'commit_sha': 'ff11520f55ffcc8c5e01161d0437231bb2686579', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd4e35a292647bc3d139401da717777512985f0b', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '199d3e8d98d254811682a50f59cefedea30aeed9', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f3025dec851708cd75aaec9118964c27b09bf92', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e563643aa54296b76f90f295a613d29794ed691', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c67f153779833b2d1e912857bb802963dbee2756', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}]",Anshuman Singh,50065887,anz19999999999@gmail.com,User,,43,,38,127
437907598,Added eviction policy & updated README.md with instructions to add Budget Alerts,"## Description
- Added the feature to add eviction policy, which will tear-down the worker instances after `Cluster.sweep()` is called.
- Added instructions to setup budget alert on Google Cloud Platform.

**fixes** #3099 
@hericlesme 

## How has this been tested?
- I have created test.py and test.ipynb for testing the functionality.
- Follow the instructions in the README.md to install the dependencies.
- Run test.py or test.ipynb to test the implemented functionality.

## Checklist
- [x] I have followed the [Contribution Guidelines](https://github.com/OpenMined/.github/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/OpenMined/.github/blob/master/CODE_OF_CONDUCT.md)
- [x] I have commented my code following the [OpenMined Styleguide](https://github.com/OpenMined/.github/blob/master/STYLEGUIDE.md)
- [x] I have labeled this PR with the relevant [Type labels](https://github.com/OpenMined/.github/labels?q=Type%3A)
- [x] My changes are covered by tests
",True,3763,https://api.github.com/repos/OpenMined/PySyft/pulls/3763,https://github.com/OpenMined/PySyft/pull/3763,closed,121,20,4,4,2,6,0,0,[],2020-06-22 12:26:27+00:00,2020-06-25 16:21:52+00:00,273325.0,"3 days, 3:55:25","[{'comment_id': 445553479, 'comment_body': 'Should that be another point?', 'comment_created': datetime.datetime(2020, 6, 25, 13, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 445554804, 'comment_body': '""python"" would be more suitable', 'comment_created': datetime.datetime(2020, 6, 25, 13, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 445555328, 'comment_body': '""setup"" -> ""Setup""', 'comment_created': datetime.datetime(2020, 6, 25, 13, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 445556077, 'comment_body': 'Add a space between alerts and (important). Like ""... Alerts (important)""', 'comment_created': datetime.datetime(2020, 6, 25, 13, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 445557231, 'comment_body': 'One suggestion - put the filenames like this: `test.py`. ', 'comment_created': datetime.datetime(2020, 6, 25, 13, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 445593120, 'comment_body': 'I removed this point.', 'comment_created': datetime.datetime(2020, 6, 25, 14, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}]","[{'commit_sha': 'b8ae749634b80e1bae2a504e2d511a220a928c90', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd11417b8a0d85c3ff391504c17731824ff800053', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '178d6cd44e353c12c4764a8d6fc23a362622452c', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '467ee5e57f44ad2a342309912e90f1667306c0c2', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}]",Anshuman Singh,50065887,anz19999999999@gmail.com,User,,43,,38,127
456625813,Added functionality to launch PyGrid network and nodes upon creation of a cluster,"## Description
I have added startup-scripts and other necessary changes which will enable the autoscale API to automatically launch PyGrid servers(network and nodes). Now using the autoscale API can launch PyGird cluster(1 network + N nodes) with one function call or create a PyGrid network and add PyGrid nodes to it one at a time as per the requirement.

I have also added tests and an example tutorial training script for the demonstration of the same.

@hericlesme 
Issue #3099

## Affected Dependencies
None (New Feature)

## How has this been tested?
- I have created test.py script and test.ipynb notebook to test the functionality of the features implemented 
- I have also modified the README.md with examples on how to use the functionality. 
- I have also modified a PyGrid tutorial to use this API for demonstration.

## Checklist
- [x] I have followed the [Contribution Guidelines](https://github.com/OpenMined/.github/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/OpenMined/.github/blob/master/CODE_OF_CONDUCT.md)
- [x] I have commented my code following the [OpenMined Styleguide](https://github.com/OpenMined/.github/blob/master/STYLEGUIDE.md)
- [ ] I have labelled this PR with the relevant [Type labels](https://github.com/OpenMined/.github/labels?q=Type%3A)
- [x] My changes are covered by tests
",True,3896,https://api.github.com/repos/OpenMined/PySyft/pulls/3896,https://github.com/OpenMined/PySyft/pull/3896,closed,783,29,7,7,2,8,0,0,[],2020-07-25 15:02:25+00:00,2020-08-06 01:54:24+00:00,989519.0,"11 days, 10:51:59","[{'comment_id': 465869716, 'comment_body': 'Remove spacing between phrase and colon\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 5, 16, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 465870599, 'comment_body': 'Correct typo ( _""Instnaces""_ -> _""Instances""_)\r\nRemove spacing between phrase and colon\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 5, 16, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 465871839, 'comment_body': 'Correct typo ( _""Netowork""_ -> _""Network""_)\r\nRemove spacing between phrase and colon\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 5, 16, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 465871902, 'comment_body': 'Remove spacing between phrase and colon\r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 5, 17, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 465872147, 'comment_body': 'Remove spacing between phrase and colon', 'comment_created': datetime.datetime(2020, 8, 5, 17, 0, 27, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 465876239, 'comment_body': 'Why not use port as a default parameter value? Like\r\n\r\n```python\r\ndef expose_port(self, name, ports=[80], apply=True):\r\n    ...\r\n```\r\nAlso, if you want to keep the current way we could do:\r\n```python\r\nif ports is not None:\r\n    ports = [80]\r\n```', 'comment_created': datetime.datetime(2020, 8, 5, 17, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 466110046, 'comment_body': 'GridNode Repo is private and archived now, this should be updated to new method for creating nodes from Pygrid ', 'comment_created': datetime.datetime(2020, 8, 6, 2, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Nilanshrajput', 'type': 'User'}, {'comment_id': 466124152, 'comment_body': 'Now as the refactoring has completed, I will update it to the new methods shortly. ', 'comment_created': datetime.datetime(2020, 8, 6, 3, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}]","[{'commit_sha': 'b4600204f0e1639725415eb5c1c83e8674df4f15', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8199f8118c60d6e2b78a3f1b608ed5a3767fd4ed', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92331322f91c9fee2f2156d2fa2f5df634b0210c', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d601ddcd003e16393fa838ba56aa92f704574a', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '146c87b555151bff2815a984ba0e0f233e428029', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27177c33426cbe6c40f80c7076ca17e998356b63', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e6e7ee47b27b328dd9552c70da6593dd9ce9062', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}]",Anshuman Singh,50065887,anz19999999999@gmail.com,User,,43,,38,127
467430882,Updated startup scripts used in the Auto-scale API and added functionality to send to final model to master instance In sweep(),"## Description
Updated startup scripts used in the autoscale API to use the latest PyGridNode and PyGridNetwork docker production images.
I have also added a 30sec sleep time at the start of each startup script to avoid docker hub connection issues.
Added functionality to send to final model to master instance In sweep()
I have also updated the README.md for the same.

Fixes #3099
@hericlesme  

## How has this been tested?
- The functionality can be tested using test.py and test.ipynb files.

## Checklist
- [x] I have followed the [Contribution Guidelines](https://github.com/OpenMined/.github/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/OpenMined/.github/blob/master/CODE_OF_CONDUCT.md)
- [x] I have commented my code following the [OpenMined Styleguide](https://github.com/OpenMined/.github/blob/master/STYLEGUIDE.md)
- [x] I have labeled this PR with the relevant [Type labels](https://github.com/OpenMined/.github/labels?q=Type%3A)
- [x] My changes are covered by tests
",True,4007,https://api.github.com/repos/OpenMined/PySyft/pulls/4007,https://github.com/OpenMined/PySyft/pull/4007,closed,128,47,2,16,1,4,0,0,[],2020-08-13 14:41:48+00:00,2020-09-07 13:58:17+00:00,2157389.0,"24 days, 23:16:29","[{'comment_id': 476511256, 'comment_body': ""shouldn't be `ifconfig.co`?"", 'comment_created': datetime.datetime(2020, 8, 25, 14, 51, 54, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 476513323, 'comment_body': ""`curl ifconfig.co` gives the external IP, that's what we wanted right?"", 'comment_created': datetime.datetime(2020, 8, 25, 14, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}, {'comment_id': 476544401, 'comment_body': 'What I\'m saying is that it\'s written ""ifcongif.co""', 'comment_created': datetime.datetime(2020, 8, 25, 15, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'monuelo', 'type': 'User'}, {'comment_id': 476595387, 'comment_body': 'got it 😬', 'comment_created': datetime.datetime(2020, 8, 25, 16, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rimijoker', 'type': 'User'}]","[{'commit_sha': '8234a49a207c653d7df85b4936ff473e92e8ed6a', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f154e77f437f290d18d8b7f8defcf210a7b85db1', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc0dcab1e34a762aa6dea8cdddd57e7f5dd31f70', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c5647873127e3069c9366feb22861719a3f6cc5', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72f62e7c7fcc6c7db33157cd830c118ea12af449', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2707c14f9d26db441c4e670c5928af43f147e994', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fc4b60b3b7accdccbd1adf9edadafd6cf1cfcb8', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de9492c76549d8513de91305fdee5da2c822bc13', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '693213253a3e0b02d1bc917719df76e6397f3bef', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b93471076ab3a379ab68515ee62b4ca73d2b9e4', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8dac4628f961b2f9845bf3b4b4b5d1971123e36', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb1ebdd369d156fd92c898df2438f0372aa05d20', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7763af6595a5f2de917bd3ed7734ce07e05adc44', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fdbebe1a8425d11aea5d11bcb6cc1fd0500a3ed', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a6ae0449efe68f609344d8a86bbb006be643ac5', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a38ab8ad187136ec565e670025fa9c1d3410d355', 'committer_username': 'rimijoker', 'committer_name': 'Anshuman Singh', 'committer_email': 'anz19999999999@gmail.com', 'commit_date': datetime.datetime(2019, 4, 28, 4, 25, 48, tzinfo=datetime.timezone.utc)}]",Anshuman Singh,50065887,anz19999999999@gmail.com,User,,43,,38,127

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
97641933,PySyft,OpenMined/PySyft,Python,1990,9404,199,514,31594,42,304,40,"[{'id': 525060393, 'number': 4838, 'closed': datetime.datetime(2020, 11, 24, 5, 54, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 21, 5, 18, 53, tzinfo=datetime.timezone.utc), 'time_taken': 261324.0, 'time_delta': '3 days, 0:35:24', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 467430882, 'number': 4007, 'closed': datetime.datetime(2020, 9, 7, 13, 58, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 14, 41, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2157389.0, 'time_delta': '24 days, 23:16:29', 'additions': 128, 'deletions': 47, 'state': 'closed'}, {'id': 456625813, 'number': 3896, 'closed': datetime.datetime(2020, 8, 6, 1, 54, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 15, 2, 25, tzinfo=datetime.timezone.utc), 'time_taken': 989519.0, 'time_delta': '11 days, 10:51:59', 'additions': 783, 'deletions': 29, 'state': 'closed'}, {'id': 437907598, 'number': 3763, 'closed': datetime.datetime(2020, 6, 25, 16, 21, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 12, 26, 27, tzinfo=datetime.timezone.utc), 'time_taken': 273325.0, 'time_delta': '3 days, 3:55:25', 'additions': 121, 'deletions': 20, 'state': 'closed'}, {'id': 425233083, 'number': 3637, 'closed': datetime.datetime(2020, 6, 13, 16, 40, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 29, 17, 30, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1293002.0, 'time_delta': '14 days, 23:10:02', 'additions': 417, 'deletions': 15, 'state': 'closed'}, {'id': 415604132, 'number': 3483, 'closed': datetime.datetime(2020, 5, 16, 17, 9, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 9, 17, 16, 6, tzinfo=datetime.timezone.utc), 'time_taken': 604413.0, 'time_delta': '6 days, 23:53:33', 'additions': 213, 'deletions': 12, 'state': 'closed'}, {'id': 412400605, 'number': 3437, 'closed': datetime.datetime(2020, 5, 6, 16, 37, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 5, 3, 2, tzinfo=datetime.timezone.utc), 'time_taken': 387248.0, 'time_delta': '4 days, 11:34:08', 'additions': 135, 'deletions': 0, 'state': 'closed'}, {'id': 388682820, 'number': 3197, 'closed': datetime.datetime(2020, 3, 15, 14, 22, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 12, 11, 2, tzinfo=datetime.timezone.utc), 'time_taken': 7901.0, 'time_delta': '2:11:41', 'additions': 26, 'deletions': 6, 'state': 'closed'}, {'id': 386704259, 'number': 3179, 'closed': datetime.datetime(2020, 3, 14, 18, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 11, 13, 55, 35, tzinfo=datetime.timezone.utc), 'time_taken': 275703.0, 'time_delta': '3 days, 4:35:03', 'additions': 49, 'deletions': 6, 'state': 'closed'}]"
