pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
656718372,Changed resource URI format in hydra-python-core and fixed tests.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes [#512](https://github.com/HTTP-APIs/hydrus/issues/512) in hydrus.
Related to #79 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->

I've made required changes in core repo and fixed the tests. For everything to work fine, we'll have to make changes and update API docs in hydrus as well. I'll submit a PR in hydrus soon.

- Changed the format of DocUrl
- Updated the existing API docs
- Fixed tests in hydra-python-core

### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,81,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/81,https://github.com/HTTP-APIs/hydra-python-core/pull/81,closed,264,204,8,5,1,0,0,0,[],2021-05-28 15:58:53+00:00,2021-05-28 16:25:45+00:00,1612.0,0:26:52,[],"[{'commit_sha': '828788ea2ce63688b2e30b2e4c154571c8eb4530', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13cd3ca802e9913dc3b7d352eea216c36208003c', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c110da9f20048a63a13925c598cf22edb3f1c6c9', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eb4cbe4278d8671c2a5bc8014cd90d6e5c04ccc', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a28204dcf68596e14fbb902ccba28a46b834e04', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
657284594,Modified doc_maker and updated sample docs.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
This is complementary PR for [this PR in hydrus](https://github.com/HTTP-APIs/hydrus/pull/578). Both of these should be merged together to avoid any breakage.
**Review Required :** Many parts of core repo are not being tested. Tests are passing but this still needs to be cross-checked.
Test coverage in core repo should be improved.

### Change logs

- Changed check_namespace function in doc_maker.
- Fixed previous errors
- Updated sample docs after new changes in HydraStatus

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,84,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/84,https://github.com/HTTP-APIs/hydra-python-core/pull/84,closed,40,33,3,2,1,0,0,0,[],2021-05-29 00:34:58+00:00,2021-05-29 09:06:41+00:00,30703.0,8:31:43,[],"[{'commit_sha': 'bf117c7a15bfe4c5bdba45d39896105f6786980b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '593d0f70c1b1b305140ef89ff9dac8f1116bb535', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
657287390,Update docs and fixed fragments test.,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #
Related to this [PR in hydra-python-core](https://github.com/HTTP-APIs/hydra-python-core/pull/84)

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
This PR should be merged after its complementary PR in core repo.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

### Change logs

- Updated docs
- Changed a text in test_app.py

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,578,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/578,https://github.com/HTTP-APIs/hydrus/pull/578,closed,388,498,6,5,2,0,0,0,[],2021-05-29 00:43:24+00:00,2021-05-29 10:04:03+00:00,33639.0,9:20:39,[],"[{'commit_sha': 'a6affb2a0d5f1aa7d6c4c096d7efc5994aee0f2e', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36d4c896896f9fa249b06cd4dfa6138b6886e072', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dc94b3c30fa4a84c2471d88538baa25022f58a1', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66763d0ff665d8c87cb0350384bf662d25500c29', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04ac2e012db9fabc308996875c9bca055670dfd', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
564526542,Added new endpoint to Get/Delete member of a collection.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #553 
Related to #494 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
Currently, there is no API endpoint to get, update or delete members from a Collection. To delete a single object(member) from a Collection we'll have to make a POST request to `<collection_endpoint>/<collection_id>` with updated Collection. 
I tried to create a new endpoint that takes both collection_id and member's id, so that we can delete or get a particular member from that Collection. Please let me know what should be a right approach to move forward with this. I also need some suggestions on what should be the name of these functions.

### Change logs

-  Added a new endpoint  `{api_name}/<string:path>/<uuid:collection_id_>/<uuid:id_>`
-  Added custom Exception to handle operations.

Using movie_apidoc for this example. 

**GET** :  `http://localhost:8080/serverapi/MovieCollection/26d9ae29-66af-4dc3-8214-085bfb3b9ee5`**/**`0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd`
```
{
    ""@context"": ""http://localhost:8080/serverapi/contexts/MovieCollection.jsonld"",
    ""@id"": ""http://localhost:8080/serverapi/MovieCollection/26d9ae29-66af-4dc3-8214-085bfb3b9ee5"",
    ""@type"": ""MovieCollection"",
    ""members"": [
        {
            ""@id"": ""http://localhost:8080/serverapi/Movie/0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd"",
            ""@type"": ""hydra:Link""
        }
    ]
}
```

**DELETE** : `http://localhost:8080/serverapi/MovieCollection/26d9ae29-66af-4dc3-8214-085bfb3b9ee5`**/**`0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd`

```
{
    ""@context"": ""http://www.w3.org/ns/hydra/context.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Object with ID 0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd successfully deleted from Collection with ID 26d9ae29-66af-4dc3-8214-085bfb3b9ee5"",
    ""statusCode"": 200,
    ""title"": ""Object successfully deleted.""
}
```
To add a new member to Collection, a PUT request can be made as usual.

    

    

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->

<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->

<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,554,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/554,https://github.com/HTTP-APIs/hydrus/pull/554,closed,279,4,7,9,6,0,0,0,[],2021-01-30 22:00:46+00:00,2021-04-20 15:40:22+00:00,6889176.0,"79 days, 17:39:36",[],"[{'commit_sha': '6cbd8ded7732abdeded8966bda358f410d830dfa', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b901b211d83c26284756e6f902f0a846a3d28b24', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05d5b05fc5672853c573d08644408c2baec82a4', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25f53f20fbdc217a57f62843f385257290f37bde', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed27642ed7982497c269c88bb28d6bd1c61820ed', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26f52006cd90902aa677a8500cae92354d0929c1', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a49ed689705bc65f6ad4ea7e096cdc0d314c9d9', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097feed5a4959099309864775d6317b41c87476f', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd2b172b6f2877ba8855053c6a502eb68b8f42d', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
667960403,Added endpoint to delete multiple members from a Collection.,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #579 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Currently, we do have endpoints to insert multiple
objects or even delete multiple objects by making a single request to a Class endpoint, but
no such endpoint is there to delete multiple members from a Collection.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
Create an endpoint to make a DELETE request with
collection_id and multiple members ids in ids_list as parameter.
`<api-name>/<resource_name>/<collection-id>/delete/<ids_list>`

DELETE : 
Example endpoint : 
```
/serverapi/MovieCollection/4f61070a-f647-4a65-9b0a-cbab4bcf0510/delete/3e1462f8-93ad-4a52-a371-a6fd5724c904, 1f6f1df8-788d-430a-8398-2e3302407fc0
```

```
{
    ""@context"": ""https://raw.githubusercontent.com/HydraCG/Specifications/master/spec/latest/core/core.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Objects with ID ['3e1462f8-93ad-4a52-a371-a6fd5724c904', '1f6f1df8-788d-430a-8398-2e3302407fc0'] successfully deleted"",
    ""statusCode"": 200,
    ""title"": ""Objects successfully deleted""
}
```
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,580,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/580,https://github.com/HTTP-APIs/hydrus/pull/580,closed,130,4,6,6,5,0,0,0,[],2021-06-11 10:09:04+00:00,2021-06-13 12:34:34+00:00,181530.0,"2 days, 2:25:30",[],"[{'commit_sha': '8a8e119d0565ba9e2699a3ea650b0a11a942effa', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd08765e921a4cdbbc7184cc256114c4b06f0db5e', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6349defc601fec6c9722e33039d9bc65c142a703', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dba350475c56552e8c28bfdce1bb71f538954e33', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e8873e30f0cc1e52d4b543e21c8fe7755a70e17', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c62b264a3ff989968908fec7dc81d86b3cade94a', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
675512669,Added functional tests for PUT/DELETE multiple class objects,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #586 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
We didn't had any tests for PUT/DELETE request for multiple Class objects in test_app.py.
We do have some tests in test_crud.py, but we’re directly using functions from crud.py to
test the behaviour and not making requests to the endpoints to check status codes.
Also, there was some logical bug in an existing test, so I fixed it.

### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

### Change logs
- Fixed test : test_object_PUT_at_ids
- Added test : test_multiple_object_PUT_without_ids
- Added test : test_multiple_object_DELETE

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,591,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/591,https://github.com/HTTP-APIs/hydrus/pull/591,closed,55,3,2,2,0,0,0,0,[],2021-06-22 15:09:09+00:00,2021-06-25 15:49:59+00:00,261650.0,"3 days, 0:40:50",[],"[{'commit_sha': '46d6bf5b043c106717cefde9d597feaae573a3ed', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b021453de981ff3f8d5b48ac8a5cf43f68fb9dca', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
675512669,Added functional tests for PUT/DELETE multiple class objects,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #586 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
We didn't had any tests for PUT/DELETE request for multiple Class objects in test_app.py.
We do have some tests in test_crud.py, but we’re directly using functions from crud.py to
test the behaviour and not making requests to the endpoints to check status codes.
Also, there was some logical bug in an existing test, so I fixed it.

### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

### Change logs
- Fixed test : test_object_PUT_at_ids
- Added test : test_multiple_object_PUT_without_ids
- Added test : test_multiple_object_DELETE

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,591,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/591,https://github.com/HTTP-APIs/hydrus/pull/591,closed,55,3,2,2,0,0,0,0,[],2021-06-22 15:09:09+00:00,2021-06-25 15:49:59+00:00,261650.0,"3 days, 0:40:50",[],"[{'commit_sha': '46d6bf5b043c106717cefde9d597feaae573a3ed', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b021453de981ff3f8d5b48ac8a5cf43f68fb9dca', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
678014548,Added foreign key relationship between a Collection and managed Class,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #592

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Presently, if an object is deleted from a Class it would still be there in the collection table in database( if it was previously inserted in a Collection that directly manages that Class). This was because there was no foreign key relationship between a Class and a Collection. 


### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
![image](https://i.ibb.co/Ssx6zzh/Screenshot-from-2021-06-23-16-46-15.png)
_img : schema -> ID of a class object will be a foreign key to `member` in a Collection_ 
### Change logs
-  Change `member` in Collection table to a foreign key column
-  Added test to check members from a Collection are deleted after the class objects are deleted from the database.
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,593,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/593,https://github.com/HTTP-APIs/hydrus/pull/593,closed,32,0,2,3,1,0,0,0,[],2021-06-25 15:46:01+00:00,2021-06-25 17:34:01+00:00,6480.0,1:48:00,[],"[{'commit_sha': '9f3f8689fcb5004a9145ba9b1e814191c4db6623', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c94d67d0ca5327acc5d64de6406f6fca978d00', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4162995977cfa8827844a9fdf096c1ceeb9532e8', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
683029810,Added support for datatype for columns in database tables.,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #581 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Database columns should be created with String, Integer or Float according to types defined in the ApiDoc.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
hydrus will check for `range` of supported_properties. If the supported_property has a `range` ( specified datatype ) then column in database table will be created accordingly. For ex: 
```
""range"": ""https://www.w3.org/TR/xmlschema-2/#integer""
```
Currently, I have added support for `Integer` and `Float` only. We can also add `DateTime` column after this. If a user won't pass `range` as an argument while creating `HydraClassProp` then the column will be treated as String in hydrus database.
 Example (Passed ""xsd:integer"" as range for two random HydraClassProp in apidoc):
![img](https://i.ibb.co/1Jx65Qx/datatype.png)

Also, I've made changes in `gen_dummy_object` function, so that it'll also check the type of column before creating it's dummy object. If the column type is integer or float, then a random integer is returned ( instead of a string).
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->
- Made Changes in db_models.py
- Made changes in gen_dummy_object function.
- Updated the existing docs in hydrus


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,594,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/594,https://github.com/HTTP-APIs/hydrus/pull/594,closed,402,388,6,4,4,0,0,0,[],2021-07-03 14:10:48+00:00,2021-07-03 14:57:43+00:00,2815.0,0:46:55,[],"[{'commit_sha': '5ce2be5e0b18cb137aea733660c33301d5198bfe', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc5f7c2a7efca203df520381d0dfede3b3e5f697', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '978e929f6a8fcfdb311f97637e32632da04a19d4', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '683c50da35ae77a4a3dac5f989e395bcabc2d3ff', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
681864166,Added support for datatype(range) in supported properties,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #88 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
Database columns should be created with datatype as String, Integer or Float according to types defined in the ApiDoc or Ontology via properties like `""range"":  ""xsd:decimal""` as discussed. For this implementation changes have to be made in both doc_writer and doc_maker.
```
{
      ""@type"": ""SupportedProperty"",
      ""property"": ""URL..../NonPerformingLoan.jsonld#LegalEntityIdentifier"",
      ""range"": ""https://www.w3.org/TR/xmlschema-2/#integer"",
      ""readable"": ""true"",
      ""required"": ""true"",
      ""title"": ""LegalEntityIdentifier"",
      ""writeable"": ""true""
}
```
### Change logs
- Added `xsd` to Context
- Changes in HydraClassProp in doc_writer
- Changes in create_property function in doc_maker
- Updated sample docs with w3.org `@context` in HydraStatus
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,91,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/91,https://github.com/HTTP-APIs/hydra-python-core/pull/91,closed,44,27,5,4,4,0,0,0,[],2021-07-01 13:33:02+00:00,2021-07-03 12:46:29+00:00,170007.0,"1 day, 23:13:27",[],"[{'commit_sha': 'c0e1621f38a17ca78de479b52aeddc6ac23cb3aa', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39643fc7b25bc6aef4a1e9871dfe7220c27a5324', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b723d673324b67bb9a6857995f6f8a9666ef7294', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '143ae35214f94e7865ca89d5115f9d9a6da9fd1f', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
696749899,Added support for datetime column in datebase created by hydrus,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #598 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Previously, we can had support for only integer, float, string datatypes in database. I've added support for a Datetime column.

### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

- SQLAlchemy Datetime Column only takes a datetime object. But a user cannot send a datetime object in request body ( not json serializable ). This is why I created helper functions to convert datetime string to a python datetime object and then it'll be inserted to database.
- The helper function (`get_modified_object`)  checks if there is any supported property in object (request body) which is actually a datetime field. And then returns a modified object accordingly.
- The helper function needs a doc to check which supported_properties are actually datetime fields in an object. The only problem was crud tests were failing because crud.insert is called directly in these tests. Couldn't call `get_doc()` directly in `crud.insert_object` So I had to pass the doc as an argument in `crud.insert` and `crud.insert_object` functions as well. 
- Everything is tested, tests are passing. Also to test that columns are created with correct datatype, I've made required changes in _conftest.py_'s `gen_dummy_object` function.
-  Added datatype for Prop1 and Prop2 supported properties in doc_writer_sample in hydrus. ( It is used for testing )
### Change logs 
- db_models.py
- resource_based_classes.py
- item_collection_helpers.py
- itemhelpers.py
- items_helpers.py
- crud.py
- conftest.py
- test_crud.py
- doc_writer_sample.py
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->

<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,599,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/599,https://github.com/HTTP-APIs/hydrus/pull/599,closed,138,37,11,11,2,12,0,0,[],2021-07-26 07:05:55+00:00,2021-07-27 17:02:37+00:00,122202.0,"1 day, 9:56:42","[{'comment_id': 676483177, 'comment_body': 'new `doc_` element not in docstring. Please update the docstring', 'comment_created': datetime.datetime(2021, 7, 26, 10, 30, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676484072, 'comment_body': 'new `doc_` element not in docstring', 'comment_created': datetime.datetime(2021, 7, 26, 10, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676485431, 'comment_body': 'Please use standard tools to check for string compliance. See [this answer](https://stackoverflow.com/a/61569783/2536357)', 'comment_created': datetime.datetime(2021, 7, 26, 10, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676485799, 'comment_body': '`doc_` missing in docstring', 'comment_created': datetime.datetime(2021, 7, 26, 10, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676492859, 'comment_body': 'same as above. you should avoid using hard-coded arbitrary formats for date-times, we need to stick to conventiion that in the datetime case is the [ISO 8601 format](https://www.cl.cam.ac.uk/~mgk25/iso-time.html).\r\ncheck [this post](https://stackoverflow.com/questions/127803/how-do-i-parse-an-iso-8601-formatted-date) about the timezone information: timezone in the database has to be always UTC, the client should pass the datetime always with the timezone specification (so it has to be checked by the server). The ideal ISO 8601 format in my experience is `2008-09-03T20:56:35.450686Z`, see the `T` separator between date and time and the indication of the timezone `Z`', 'comment_created': datetime.datetime(2021, 7, 26, 10, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676499615, 'comment_body': 'also `doc_` is missing the type hint', 'comment_created': datetime.datetime(2021, 7, 26, 10, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676651701, 'comment_body': 'what happens if the value passed by the client is not ISO and where we return a 400 error if that happens?', 'comment_created': datetime.datetime(2021, 7, 26, 14, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676822849, 'comment_body': ""Sure. I'll raise an exception here. I think in this case it'll be better to create a new custom exception to raise HydraError."", 'comment_created': datetime.datetime(2021, 7, 26, 17, 55, 25, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}, {'comment_id': 677270118, 'comment_body': 'Added a custom exception which can be raised if the input value for datetime property is not in ISO format. A 400 Response is returned:\r\n```\r\n{\r\n    ""@context"": ""https://www.w3.org/ns/hydra/core"",\r\n    ""@type"": ""Error"",\r\n    ""description"": ""The format of Prop1 is invalid. Datetime input should be in ISO format."",\r\n    ""statusCode"": 400,\r\n    ""title"": ""Invalid Datetime format""\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 9, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}, {'comment_id': 677313067, 'comment_body': 'why you need to copy this object? this is a very expensive operation', 'comment_created': datetime.datetime(2021, 7, 27, 10, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 677346229, 'comment_body': 'oops ! I was using this in a previous approach. Thanks for catching that. ', 'comment_created': datetime.datetime(2021, 7, 27, 11, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}, {'comment_id': 677548501, 'comment_body': 'please add a comment here to specify which error case this exception should handle as it is not clear', 'comment_created': datetime.datetime(2021, 7, 27, 15, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}]","[{'commit_sha': 'c41d6f165c661a8c6945f35c317c544165c5b6bf', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e20c01346369e7108a71c3b8f1763dbff813d4', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62ed595c5ed51395ffa8056d06a5e87c651e6ecc', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '942afee5df32945f8002a50b1b4603af29b7592c', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e79d05258f221deacd709dd5bbeac5b91249a9b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '712f4d80a66ebc5c02f02ec0742dcb9a34eace72', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb051fbc059c0359c5aa66b76ecd03c2b5ca0193', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2edebf2dbed8dba31402506dd4dbe6898022b304', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6f99ca5a984a776b57729982cb710239682338', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5631619a0fce259c3a274b7820cb80c2dd13f25', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a25ec18d552d2d3fdfad099c2cea794444ea0b62', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
701284318,Changes in tests in hydrus : removed regex,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Regex was being used to get the id of the inserted object from response description.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
Used response.location instead throughout the tests.
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,601,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/601,https://github.com/HTTP-APIs/hydrus/pull/601,closed,16,44,2,2,0,0,0,0,[],2021-08-02 09:12:37+00:00,2021-08-06 14:18:10+00:00,363933.0,"4 days, 5:05:33",[],"[{'commit_sha': 'f6bcd9138802a950675ff1bf7aedb08fb37d2ebf', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b0f417493d8591301aacfa0ab5190a86b8de944', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
706229837,Dockerize creditrisk_poc,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Change logs

Dockerize the creditrisk_poc.
* Changed main.py
* Added uwsgi.ini
* Added gitignore file
* Added Dockerfile
* Added docker-compose.yml ( Uses postgres database ) 

Use `docker-compose up --build` to start the server using docker.

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->",True,25,https://api.github.com/repos/HTTP-APIs/creditrisk-poc/pulls/25,https://github.com/HTTP-APIs/creditrisk-poc/pull/25,closed,226,24,5,5,0,0,0,0,[],2021-08-09 05:27:14+00:00,2021-08-09 08:45:10+00:00,11876.0,3:17:56,[],"[{'commit_sha': 'c41c1b535a5eed3f5208f10076c5b717e18e42c7', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '256e6419699775d0d36c76bf09942d23493aa209', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9eea85af4bf5925a84983da01179d130b28e46', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fbe78cf740616b7ad7d48e8f117ab02c6ad032b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5c03af5d7b2bbbe0ec152f7c5193151d35cebbb', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
706407531,remove apidoc path environment variable from docker compose,"If we'll provide a env variable for APIDOC path, there's a line in creditrisk's main.py :
`from hydrus.extensions.socketio_factory import create_socket`

This will first try to create a APIDOC object in hydrus (which will look for apidoc path inside hydrus) and then it'll return that no such doc file is present at `hydrus/creditrisk_poc/api_doc/apidoc.jsonld` 

We can comment out the `APIDOC_REL_PATH` from docker-compose.yml for now.",True,26,https://api.github.com/repos/HTTP-APIs/creditrisk-poc/pulls/26,https://github.com/HTTP-APIs/creditrisk-poc/pull/26,closed,1,1,1,1,0,0,0,0,[],2021-08-09 10:42:22+00:00,2021-08-09 10:45:33+00:00,191.0,0:03:11,[],"[{'commit_sha': 'd30cca9005e30f7d02dc4e86e5a6933d5fca4ff7', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
715800486,Added tests in hydra python core.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
For testing doc_writer we were using unittest’s mock to create mock classes and objects. In that case, we'll have to create mock objects again and again for every test. We can use Pytest’s fixtures to test different components and improve the readability and increase test coverage. 

### Change logs
* Created conftest.py
* test_doc_writer
    ```sh
    ├── test_context.py   
    ├── test_hydraclass.py   
    ├── test_hydra_collection.py 
    ├── test_hydra_entrypoint    
    ```
* Changes in travis.yml and requirements.txt file.

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,93,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/93,https://github.com/HTTP-APIs/hydra-python-core/pull/93,closed,514,168,9,7,0,0,0,0,[],2021-08-19 10:18:21+00:00,2021-08-27 13:25:09+00:00,702408.0,"8 days, 3:06:48",[],"[{'commit_sha': '9e39a716fd8338fb7b36ab107ae72cb0737173d0', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8127b6f6f6d90a165735f0645edd36367713341', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26919614d3f41b5ea09ddb4ab57cd8100e27e86b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87a7735fe1e882948a8988c8c5ca93da87ec5208', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5b001def67b7c6bc01deff89ce811bb36fbc71', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a321ab4d19236a33992cbe2fb1dda96f3d0e0173', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69262a96c1653e1de26c5e32c383242a904b35ff', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
564526542,Added new endpoint to Get/Delete member of a collection.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #553 
Related to #494 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
Currently, there is no API endpoint to get, update or delete members from a Collection. To delete a single object(member) from a Collection we'll have to make a POST request to `<collection_endpoint>/<collection_id>` with updated Collection. 
I tried to create a new endpoint that takes both collection_id and member's id, so that we can delete or get a particular member from that Collection. Please let me know what should be a right approach to move forward with this. I also need some suggestions on what should be the name of these functions.

### Change logs

-  Added a new endpoint  `{api_name}/<string:path>/<uuid:collection_id_>/<uuid:id_>`
-  Added custom Exception to handle operations.

Using movie_apidoc for this example. 

**GET** :  `http://localhost:8080/serverapi/MovieCollection/26d9ae29-66af-4dc3-8214-085bfb3b9ee5`**/**`0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd`
```
{
    ""@context"": ""http://localhost:8080/serverapi/contexts/MovieCollection.jsonld"",
    ""@id"": ""http://localhost:8080/serverapi/MovieCollection/26d9ae29-66af-4dc3-8214-085bfb3b9ee5"",
    ""@type"": ""MovieCollection"",
    ""members"": [
        {
            ""@id"": ""http://localhost:8080/serverapi/Movie/0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd"",
            ""@type"": ""hydra:Link""
        }
    ]
}
```

**DELETE** : `http://localhost:8080/serverapi/MovieCollection/26d9ae29-66af-4dc3-8214-085bfb3b9ee5`**/**`0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd`

```
{
    ""@context"": ""http://www.w3.org/ns/hydra/context.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Object with ID 0fa1f87f-73d2-4ec4-ae9a-ecf18b2469dd successfully deleted from Collection with ID 26d9ae29-66af-4dc3-8214-085bfb3b9ee5"",
    ""statusCode"": 200,
    ""title"": ""Object successfully deleted.""
}
```
To add a new member to Collection, a PUT request can be made as usual.

    

    

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->

<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->

<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,554,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/554,https://github.com/HTTP-APIs/hydrus/pull/554,closed,279,4,7,9,6,0,0,0,[],2021-01-30 22:00:46+00:00,2021-04-20 15:40:22+00:00,6889176.0,"79 days, 17:39:36",[],"[{'commit_sha': '6cbd8ded7732abdeded8966bda358f410d830dfa', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b901b211d83c26284756e6f902f0a846a3d28b24', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b05d5b05fc5672853c573d08644408c2baec82a4', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25f53f20fbdc217a57f62843f385257290f37bde', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed27642ed7982497c269c88bb28d6bd1c61820ed', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26f52006cd90902aa677a8500cae92354d0929c1', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a49ed689705bc65f6ad4ea7e096cdc0d314c9d9', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097feed5a4959099309864775d6317b41c87476f', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bd2b172b6f2877ba8855053c6a502eb68b8f42d', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
657287390,Update docs and fixed fragments test.,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #
Related to this [PR in hydra-python-core](https://github.com/HTTP-APIs/hydra-python-core/pull/84)

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
This PR should be merged after its complementary PR in core repo.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

### Change logs

- Updated docs
- Changed a text in test_app.py

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,578,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/578,https://github.com/HTTP-APIs/hydrus/pull/578,closed,388,498,6,5,2,0,0,0,[],2021-05-29 00:43:24+00:00,2021-05-29 10:04:03+00:00,33639.0,9:20:39,[],"[{'commit_sha': 'a6affb2a0d5f1aa7d6c4c096d7efc5994aee0f2e', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36d4c896896f9fa249b06cd4dfa6138b6886e072', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dc94b3c30fa4a84c2471d88538baa25022f58a1', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66763d0ff665d8c87cb0350384bf662d25500c29', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04ac2e012db9fabc308996875c9bca055670dfd', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
667960403,Added endpoint to delete multiple members from a Collection.,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #579 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Currently, we do have endpoints to insert multiple
objects or even delete multiple objects by making a single request to a Class endpoint, but
no such endpoint is there to delete multiple members from a Collection.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
Create an endpoint to make a DELETE request with
collection_id and multiple members ids in ids_list as parameter.
`<api-name>/<resource_name>/<collection-id>/delete/<ids_list>`

DELETE : 
Example endpoint : 
```
/serverapi/MovieCollection/4f61070a-f647-4a65-9b0a-cbab4bcf0510/delete/3e1462f8-93ad-4a52-a371-a6fd5724c904, 1f6f1df8-788d-430a-8398-2e3302407fc0
```

```
{
    ""@context"": ""https://raw.githubusercontent.com/HydraCG/Specifications/master/spec/latest/core/core.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Objects with ID ['3e1462f8-93ad-4a52-a371-a6fd5724c904', '1f6f1df8-788d-430a-8398-2e3302407fc0'] successfully deleted"",
    ""statusCode"": 200,
    ""title"": ""Objects successfully deleted""
}
```
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,580,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/580,https://github.com/HTTP-APIs/hydrus/pull/580,closed,130,4,6,6,5,0,0,0,[],2021-06-11 10:09:04+00:00,2021-06-13 12:34:34+00:00,181530.0,"2 days, 2:25:30",[],"[{'commit_sha': '8a8e119d0565ba9e2699a3ea650b0a11a942effa', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd08765e921a4cdbbc7184cc256114c4b06f0db5e', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6349defc601fec6c9722e33039d9bc65c142a703', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dba350475c56552e8c28bfdce1bb71f538954e33', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e8873e30f0cc1e52d4b543e21c8fe7755a70e17', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c62b264a3ff989968908fec7dc81d86b3cade94a', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
673621983,"Changed endpoint format for GET,PUT, DELETE for multiple objects of Class and Collections","<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #587

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
The current API's endpoint format for operations on collections and deletion/insertion of multiple objects is :
```
/serverapi/MovieCollection/4f61070a-f647-4a65-9b0a-cbab4bcf0510/delete/3e1462f8-93ad-4a52-a371-a6fd5724c904, 1f6f1df8-788d-430a-8398-2e3302407fc0
```
Which isn't conventional and there is repetition of keywords like `add` and `delete` .

**Also, we had lot of code repetition in resource.py ( Items, ItemMember, ItemMembers to operate on single and multiple objects ) when most of it can be done using Item and ItemCollection resource classes with some additional params in request endpoint.**

### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
Previously, if a user wanted to create multiple objects of a Class, he/she had to pass ids in endpoints as well which can be really time consuming if one wants to PUT multiple objects by making request to a Class endpoint.

## PUT (without ids):
```
/serverapi/Movie
```
Request Body: 
```
{
  ""data"": [
    {
      ""@type"": ""Movie"",
      ""movie_name"": ""Avengers"",
      ""movie_director"": ""Joss Whedon""
    },
    {
      ""@type"": ""Movie"",
      ""movie_name"": ""Justice League"",
      ""movie_director"": ""Zack Snyder""
    }
  ]
}
```

## PUT ( with ids ):
```
http://localhost:8080/serverapi/Movie?instances=id1,id2,id3
```
Response : 
```
{
    ""@context"": ""https://raw.githubusercontent.com/HydraCG/Specifications/master/spec/latest/core/core.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Objects with ID ['98c5a86f-b324-4270-b39b-0af0b7f99d07', '99c5a86f-b324-4270-b39b-0af0b7f99d12'] successfully added"",
    ""iri"": [
        ""http://localhost:8080/serverapi/Movie/98c5a86f-b324-4270-b39b-0af0b7f99d07"",
        ""http://localhost:8080/serverapi/Movie/99c5a86f-b324-4270-b39b-0af0b7f99d12""
    ],
    ""statusCode"": 201,
    ""title"": ""Objects successfully added""
}
```

## DELETE ( multiple Class objects):
```
http://localhost:8080/serverapi/Movie?instances=id1,id2,id3
```
Response : 
```
{
    ""@context"": ""https://raw.githubusercontent.com/HydraCG/Specifications/master/spec/latest/core/core.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Objects with ID ['98c5a86f-b324-4270-b39b-0af0b7f99d07', '99c5a86f-b324-4270-b39b-0af0b7f99d12'] successfully deleted"",
    ""statusCode"": 200,
    ""title"": ""Objects successfully deleted""
}
```

## DELETE ( Multiple members from a Collection)
```
http://localhost:8080/serverapi/MovieCollection/<collection_id>?instances=id1,id2,id3
```
Response:
```
{
    ""@context"": ""https://raw.githubusercontent.com/HydraCG/Specifications/master/spec/latest/core/core.jsonld"",
    ""@type"": ""Status"",
    ""description"": ""Objects with ID ['27a3272d-c83d-4b96-8494-2799ac5bd67e', 'ac231414-a1e6-42f2-b6f4-38ec8fbacc4d'] successfully deleted"",
    ""statusCode"": 200,
    ""title"": ""Objects successfully deleted""
}
```
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,590,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/590,https://github.com/HTTP-APIs/hydrus/pull/590,closed,33,116,4,8,2,2,0,0,[],2021-06-18 17:14:48+00:00,2021-06-21 19:43:35+00:00,268127.0,"3 days, 2:28:47","[{'comment_id': 655424092, 'comment_body': ""please be explicit with checks: `if member_id is not None`.\r\nAlso it is better to be consistent, below you correctly wrote `params.get('instances')`, why in here we have `...get('instances', None)`. `None` is a default so it should not be expressed."", 'comment_created': datetime.datetime(2021, 6, 21, 14, 25, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 655546748, 'comment_body': 'Sure. changes made', 'comment_created': datetime.datetime(2021, 6, 21, 16, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}]","[{'commit_sha': '76ba742d3ce3e07c3cd6d25a4eb9c23716f6f5f6', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '420e3012760b86fe2f9e554cebf46d1543fb5024', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e6e0e0f972e1bb1eadf0631463b77a8edd1eace', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e150a308814ed4b6ae712381d1434fb2b3375415', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56c7df946637771c39ea900fb03325b4910d2d8d', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2872d7b31dc4926f522e83e4f878368547910332', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a41c5b1cc07f6bf0919c49995a218a06547aa15', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '458794d3702a33d530e4ebcf292ebbdf49224368', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
675512669,Added functional tests for PUT/DELETE multiple class objects,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #586 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
We didn't had any tests for PUT/DELETE request for multiple Class objects in test_app.py.
We do have some tests in test_crud.py, but we’re directly using functions from crud.py to
test the behaviour and not making requests to the endpoints to check status codes.
Also, there was some logical bug in an existing test, so I fixed it.

### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

### Change logs
- Fixed test : test_object_PUT_at_ids
- Added test : test_multiple_object_PUT_without_ids
- Added test : test_multiple_object_DELETE

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,591,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/591,https://github.com/HTTP-APIs/hydrus/pull/591,closed,55,3,2,2,0,0,0,0,[],2021-06-22 15:09:09+00:00,2021-06-25 15:49:59+00:00,261650.0,"3 days, 0:40:50",[],"[{'commit_sha': '46d6bf5b043c106717cefde9d597feaae573a3ed', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b021453de981ff3f8d5b48ac8a5cf43f68fb9dca', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
678014548,Added foreign key relationship between a Collection and managed Class,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #592

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Presently, if an object is deleted from a Class it would still be there in the collection table in database( if it was previously inserted in a Collection that directly manages that Class). This was because there was no foreign key relationship between a Class and a Collection. 


### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
![image](https://i.ibb.co/Ssx6zzh/Screenshot-from-2021-06-23-16-46-15.png)
_img : schema -> ID of a class object will be a foreign key to `member` in a Collection_ 
### Change logs
-  Change `member` in Collection table to a foreign key column
-  Added test to check members from a Collection are deleted after the class objects are deleted from the database.
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,593,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/593,https://github.com/HTTP-APIs/hydrus/pull/593,closed,32,0,2,3,1,0,0,0,[],2021-06-25 15:46:01+00:00,2021-06-25 17:34:01+00:00,6480.0,1:48:00,[],"[{'commit_sha': '9f3f8689fcb5004a9145ba9b1e814191c4db6623', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c94d67d0ca5327acc5d64de6406f6fca978d00', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4162995977cfa8827844a9fdf096c1ceeb9532e8', 'committer_username': 'Mec-iS', 'committer_name': 'Lorenzo', 'committer_email': None, 'commit_date': datetime.datetime(2012, 12, 29, 4, 48, 43, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
683029810,Added support for datatype for columns in database tables.,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #581 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Database columns should be created with String, Integer or Float according to types defined in the ApiDoc.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
hydrus will check for `range` of supported_properties. If the supported_property has a `range` ( specified datatype ) then column in database table will be created accordingly. For ex: 
```
""range"": ""https://www.w3.org/TR/xmlschema-2/#integer""
```
Currently, I have added support for `Integer` and `Float` only. We can also add `DateTime` column after this. If a user won't pass `range` as an argument while creating `HydraClassProp` then the column will be treated as String in hydrus database.
 Example (Passed ""xsd:integer"" as range for two random HydraClassProp in apidoc):
![img](https://i.ibb.co/1Jx65Qx/datatype.png)

Also, I've made changes in `gen_dummy_object` function, so that it'll also check the type of column before creating it's dummy object. If the column type is integer or float, then a random integer is returned ( instead of a string).
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->
- Made Changes in db_models.py
- Made changes in gen_dummy_object function.
- Updated the existing docs in hydrus


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,594,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/594,https://github.com/HTTP-APIs/hydrus/pull/594,closed,402,388,6,4,4,0,0,0,[],2021-07-03 14:10:48+00:00,2021-07-03 14:57:43+00:00,2815.0,0:46:55,[],"[{'commit_sha': '5ce2be5e0b18cb137aea733660c33301d5198bfe', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc5f7c2a7efca203df520381d0dfede3b3e5f697', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '978e929f6a8fcfdb311f97637e32632da04a19d4', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '683c50da35ae77a4a3dac5f989e395bcabc2d3ff', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
685158160,workflow using GitHub Actions to publish release on PyPi,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Currently, we have to publish release from our local to upload package on PyPi. 
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
Setup a workflow using GitHub Actions to publish package every time we'll make a new release using GitHub.
Credentials have been added to repository secrets.
### Change logs
- Added .github/workflows/package-publish.yml
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,597,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/597,https://github.com/HTTP-APIs/hydrus/pull/597,closed,32,1,2,2,1,0,0,0,[],2021-07-07 12:37:46+00:00,2021-07-19 11:07:52+00:00,1031406.0,"11 days, 22:30:06",[],"[{'commit_sha': '80c56f6b0b81229a2ea7a984791d620af57ed765', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd6df3e279e4a44641b6fd139cc0fa9ee936a0c0', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
696749899,Added support for datetime column in datebase created by hydrus,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #598 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Previously, we can had support for only integer, float, string datatypes in database. I've added support for a Datetime column.

### New expected behaviour
<!-- Describe the new code and its expected behaviour -->

- SQLAlchemy Datetime Column only takes a datetime object. But a user cannot send a datetime object in request body ( not json serializable ). This is why I created helper functions to convert datetime string to a python datetime object and then it'll be inserted to database.
- The helper function (`get_modified_object`)  checks if there is any supported property in object (request body) which is actually a datetime field. And then returns a modified object accordingly.
- The helper function needs a doc to check which supported_properties are actually datetime fields in an object. The only problem was crud tests were failing because crud.insert is called directly in these tests. Couldn't call `get_doc()` directly in `crud.insert_object` So I had to pass the doc as an argument in `crud.insert` and `crud.insert_object` functions as well. 
- Everything is tested, tests are passing. Also to test that columns are created with correct datatype, I've made required changes in _conftest.py_'s `gen_dummy_object` function.
-  Added datatype for Prop1 and Prop2 supported properties in doc_writer_sample in hydrus. ( It is used for testing )
### Change logs 
- db_models.py
- resource_based_classes.py
- item_collection_helpers.py
- itemhelpers.py
- items_helpers.py
- crud.py
- conftest.py
- test_crud.py
- doc_writer_sample.py
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->

<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,599,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/599,https://github.com/HTTP-APIs/hydrus/pull/599,closed,138,37,11,11,2,12,0,0,[],2021-07-26 07:05:55+00:00,2021-07-27 17:02:37+00:00,122202.0,"1 day, 9:56:42","[{'comment_id': 676483177, 'comment_body': 'new `doc_` element not in docstring. Please update the docstring', 'comment_created': datetime.datetime(2021, 7, 26, 10, 30, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676484072, 'comment_body': 'new `doc_` element not in docstring', 'comment_created': datetime.datetime(2021, 7, 26, 10, 32, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676485431, 'comment_body': 'Please use standard tools to check for string compliance. See [this answer](https://stackoverflow.com/a/61569783/2536357)', 'comment_created': datetime.datetime(2021, 7, 26, 10, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676485799, 'comment_body': '`doc_` missing in docstring', 'comment_created': datetime.datetime(2021, 7, 26, 10, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676492859, 'comment_body': 'same as above. you should avoid using hard-coded arbitrary formats for date-times, we need to stick to conventiion that in the datetime case is the [ISO 8601 format](https://www.cl.cam.ac.uk/~mgk25/iso-time.html).\r\ncheck [this post](https://stackoverflow.com/questions/127803/how-do-i-parse-an-iso-8601-formatted-date) about the timezone information: timezone in the database has to be always UTC, the client should pass the datetime always with the timezone specification (so it has to be checked by the server). The ideal ISO 8601 format in my experience is `2008-09-03T20:56:35.450686Z`, see the `T` separator between date and time and the indication of the timezone `Z`', 'comment_created': datetime.datetime(2021, 7, 26, 10, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676499615, 'comment_body': 'also `doc_` is missing the type hint', 'comment_created': datetime.datetime(2021, 7, 26, 10, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676651701, 'comment_body': 'what happens if the value passed by the client is not ISO and where we return a 400 error if that happens?', 'comment_created': datetime.datetime(2021, 7, 26, 14, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 676822849, 'comment_body': ""Sure. I'll raise an exception here. I think in this case it'll be better to create a new custom exception to raise HydraError."", 'comment_created': datetime.datetime(2021, 7, 26, 17, 55, 25, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}, {'comment_id': 677270118, 'comment_body': 'Added a custom exception which can be raised if the input value for datetime property is not in ISO format. A 400 Response is returned:\r\n```\r\n{\r\n    ""@context"": ""https://www.w3.org/ns/hydra/core"",\r\n    ""@type"": ""Error"",\r\n    ""description"": ""The format of Prop1 is invalid. Datetime input should be in ISO format."",\r\n    ""statusCode"": 400,\r\n    ""title"": ""Invalid Datetime format""\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 9, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}, {'comment_id': 677313067, 'comment_body': 'why you need to copy this object? this is a very expensive operation', 'comment_created': datetime.datetime(2021, 7, 27, 10, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}, {'comment_id': 677346229, 'comment_body': 'oops ! I was using this in a previous approach. Thanks for catching that. ', 'comment_created': datetime.datetime(2021, 7, 27, 11, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'farazkhanfk7', 'type': 'User'}, {'comment_id': 677548501, 'comment_body': 'please add a comment here to specify which error case this exception should handle as it is not clear', 'comment_created': datetime.datetime(2021, 7, 27, 15, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Mec-iS', 'type': 'User'}]","[{'commit_sha': 'c41d6f165c661a8c6945f35c317c544165c5b6bf', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e20c01346369e7108a71c3b8f1763dbff813d4', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62ed595c5ed51395ffa8056d06a5e87c651e6ecc', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '942afee5df32945f8002a50b1b4603af29b7592c', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e79d05258f221deacd709dd5bbeac5b91249a9b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '712f4d80a66ebc5c02f02ec0742dcb9a34eace72', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb051fbc059c0359c5aa66b76ecd03c2b5ca0193', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2edebf2dbed8dba31402506dd4dbe6898022b304', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6f99ca5a984a776b57729982cb710239682338', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5631619a0fce259c3a274b7820cb80c2dd13f25', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a25ec18d552d2d3fdfad099c2cea794444ea0b62', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
701284318,Changes in tests in hydrus : removed regex,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
Regex was being used to get the id of the inserted object from response description.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
Used response.location instead throughout the tests.
### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,601,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/601,https://github.com/HTTP-APIs/hydrus/pull/601,closed,16,44,2,2,0,0,0,0,[],2021-08-02 09:12:37+00:00,2021-08-06 14:18:10+00:00,363933.0,"4 days, 5:05:33",[],"[{'commit_sha': 'f6bcd9138802a950675ff1bf7aedb08fb37d2ebf', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b0f417493d8591301aacfa0ab5190a86b8de944', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
712811810,Fix get_host_domain function for deployment,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

Fixes #602 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Current behaviour
<!-- Describe the code you are going to change and its behaviour -->
I was trying to deploy the docker-container after changing the hydrus_server_url and found a possible bug, which wasn't allowing us to change it to something else other than `""localhost:{PORT}""`.  In _hydrus/conf.py_ it was hardcoded to `""localhost""`.
### New expected behaviour
<!-- Describe the new code and its expected behaviour -->
* I used flask's `g` variable to get the `hydrus_server_url`. Also had to check for RuntimeError (running out of app context ) in case of test_crud.
* Changed get_host_domain() function. It will try to use URL provided by URL in main.py, otherwise in case of AttributeError or RuntimeError it'll stick to localhost.

### Change logs
* changed get_host_domain in conf.py
* minor changes in attach_hydra_view
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,603,https://api.github.com/repos/HTTP-APIs/hydrus/pulls/603,https://github.com/HTTP-APIs/hydrus/pull/603,closed,10,6,2,1,0,0,0,0,[],2021-08-14 17:08:32+00:00,2021-08-27 13:26:12+00:00,1109860.0,"12 days, 20:17:40",[],"[{'commit_sha': '5d507b160a67f48766d37ce312d56431d12178b5', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
656718372,Changed resource URI format in hydra-python-core and fixed tests.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes [#512](https://github.com/HTTP-APIs/hydrus/issues/512) in hydrus.
Related to #79 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->

I've made required changes in core repo and fixed the tests. For everything to work fine, we'll have to make changes and update API docs in hydrus as well. I'll submit a PR in hydrus soon.

- Changed the format of DocUrl
- Updated the existing API docs
- Fixed tests in hydra-python-core

### Change logs

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,81,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/81,https://github.com/HTTP-APIs/hydra-python-core/pull/81,closed,264,204,8,5,1,0,0,0,[],2021-05-28 15:58:53+00:00,2021-05-28 16:25:45+00:00,1612.0,0:26:52,[],"[{'commit_sha': '828788ea2ce63688b2e30b2e4c154571c8eb4530', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13cd3ca802e9913dc3b7d352eea216c36208003c', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c110da9f20048a63a13925c598cf22edb3f1c6c9', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4eb4cbe4278d8671c2a5bc8014cd90d6e5c04ccc', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a28204dcf68596e14fbb902ccba28a46b834e04', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
657284594,Modified doc_maker and updated sample docs.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
This is complementary PR for [this PR in hydrus](https://github.com/HTTP-APIs/hydrus/pull/578). Both of these should be merged together to avoid any breakage.
**Review Required :** Many parts of core repo are not being tested. Tests are passing but this still needs to be cross-checked.
Test coverage in core repo should be improved.

### Change logs

- Changed check_namespace function in doc_maker.
- Fixed previous errors
- Updated sample docs after new changes in HydraStatus

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,84,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/84,https://github.com/HTTP-APIs/hydra-python-core/pull/84,closed,40,33,3,2,1,0,0,0,[],2021-05-29 00:34:58+00:00,2021-05-29 09:06:41+00:00,30703.0,8:31:43,[],"[{'commit_sha': 'bf117c7a15bfe4c5bdba45d39896105f6786980b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '593d0f70c1b1b305140ef89ff9dac8f1116bb535', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
681864166,Added support for datatype(range) in supported properties,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #88 

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
Database columns should be created with datatype as String, Integer or Float according to types defined in the ApiDoc or Ontology via properties like `""range"":  ""xsd:decimal""` as discussed. For this implementation changes have to be made in both doc_writer and doc_maker.
```
{
      ""@type"": ""SupportedProperty"",
      ""property"": ""URL..../NonPerformingLoan.jsonld#LegalEntityIdentifier"",
      ""range"": ""https://www.w3.org/TR/xmlschema-2/#integer"",
      ""readable"": ""true"",
      ""required"": ""true"",
      ""title"": ""LegalEntityIdentifier"",
      ""writeable"": ""true""
}
```
### Change logs
- Added `xsd` to Context
- Changes in HydraClassProp in doc_writer
- Changes in create_property function in doc_maker
- Updated sample docs with w3.org `@context` in HydraStatus
<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,91,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/91,https://github.com/HTTP-APIs/hydra-python-core/pull/91,closed,44,27,5,4,4,0,0,0,[],2021-07-01 13:33:02+00:00,2021-07-03 12:46:29+00:00,170007.0,"1 day, 23:13:27",[],"[{'commit_sha': 'c0e1621f38a17ca78de479b52aeddc6ac23cb3aa', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39643fc7b25bc6aef4a1e9871dfe7220c27a5324', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b723d673324b67bb9a6857995f6f8a9666ef7294', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '143ae35214f94e7865ca89d5115f9d9a6da9fd1f', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
715800486,Added tests in hydra python core.,"<!-- Please create/claim an issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->

Fixes #

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.5.2 and above.

### Description
<!-- Describe about what this PR does, previous state and new state of the output -->
For testing doc_writer we were using unittest’s mock to create mock classes and objects. In that case, we'll have to create mock objects again and again for every test. We can use Pytest’s fixtures to test different components and improve the readability and increase test coverage. 

### Change logs
* Created conftest.py
* test_doc_writer
    ```sh
    ├── test_context.py   
    ├── test_hydraclass.py   
    ├── test_hydra_collection.py 
    ├── test_hydra_entrypoint    
    ```
* Changes in travis.yml and requirements.txt file.

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->
",True,93,https://api.github.com/repos/HTTP-APIs/hydra-python-core/pulls/93,https://github.com/HTTP-APIs/hydra-python-core/pull/93,closed,514,168,9,7,0,0,0,0,[],2021-08-19 10:18:21+00:00,2021-08-27 13:25:09+00:00,702408.0,"8 days, 3:06:48",[],"[{'commit_sha': '9e39a716fd8338fb7b36ab107ae72cb0737173d0', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8127b6f6f6d90a165735f0645edd36367713341', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26919614d3f41b5ea09ddb4ab57cd8100e27e86b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87a7735fe1e882948a8988c8c5ca93da87ec5208', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5b001def67b7c6bc01deff89ce811bb36fbc71', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a321ab4d19236a33992cbe2fb1dda96f3d0e0173', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69262a96c1653e1de26c5e32c383242a904b35ff', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
706229837,Dockerize creditrisk_poc,"<!-- Please create (if there is not one yet) a issue before sending a PR -->
<!-- Add issue number (Eg: fixes #123) -->
<!-- Always provide changes in existing tests or new tests -->

### Checklist
- [x] My branch is up-to-date with upstream/develop branch.
- [x] Everything works and tested for Python 3.6.0 and above.

### Change logs

Dockerize the creditrisk_poc.
* Changed main.py
* Added uwsgi.ini
* Added gitignore file
* Added Dockerfile
* Added docker-compose.yml ( Uses postgres database ) 

Use `docker-compose up --build` to start the server using docker.

<!-- #### Added -->
<!-- Edit these points below to describe the new features added with this PR -->
<!-- - Feature 1 -->
<!-- - Feature 2 -->


<!-- #### Changed -->
<!-- Edit these points below to describe the changes made in existing functionality with this PR -->
<!-- - Change 1 -->
<!-- - Change 1 -->


<!-- #### Fixed -->
<!-- Edit these points below to describe the bug fixes made with this PR -->
<!-- - Bug 1 -->


<!-- #### Removed -->
<!-- Edit these points below to describe the removed features with this PR -->
<!-- - Deprecated feature 1 -->",True,25,https://api.github.com/repos/HTTP-APIs/creditrisk-poc/pulls/25,https://github.com/HTTP-APIs/creditrisk-poc/pull/25,closed,226,24,5,5,0,0,0,0,[],2021-08-09 05:27:14+00:00,2021-08-09 08:45:10+00:00,11876.0,3:17:56,[],"[{'commit_sha': 'c41c1b535a5eed3f5208f10076c5b717e18e42c7', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '256e6419699775d0d36c76bf09942d23493aa209', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9eea85af4bf5925a84983da01179d130b28e46', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fbe78cf740616b7ad7d48e8f117ab02c6ad032b', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f5c03af5d7b2bbbe0ec152f7c5193151d35cebbb', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45
706407531,remove apidoc path environment variable from docker compose,"If we'll provide a env variable for APIDOC path, there's a line in creditrisk's main.py :
`from hydrus.extensions.socketio_factory import create_socket`

This will first try to create a APIDOC object in hydrus (which will look for apidoc path inside hydrus) and then it'll return that no such doc file is present at `hydrus/creditrisk_poc/api_doc/apidoc.jsonld` 

We can comment out the `APIDOC_REL_PATH` from docker-compose.yml for now.",True,26,https://api.github.com/repos/HTTP-APIs/creditrisk-poc/pulls/26,https://github.com/HTTP-APIs/creditrisk-poc/pull/26,closed,1,1,1,1,0,0,0,0,[],2021-08-09 10:42:22+00:00,2021-08-09 10:45:33+00:00,191.0,0:03:11,[],"[{'commit_sha': 'd30cca9005e30f7d02dc4e86e5a6933d5fca4ff7', 'committer_username': 'farazkhanfk7', 'committer_name': 'Hasan Faraz Khan', 'committer_email': 'farazkhan138@gmail.com', 'commit_date': datetime.datetime(2019, 1, 28, 14, 22, 34, tzinfo=datetime.timezone.utc)}]",Hasan Faraz Khan,47111858,farazkhan138@gmail.com,User,,98,,28,45

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
165509412,hydra-python-core,HTTP-APIs/hydra-python-core,Python,19,14,7,17,159,4,2,1,"[{'id': 715800486, 'number': 93, 'closed': datetime.datetime(2021, 8, 27, 13, 25, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 10, 18, 21, tzinfo=datetime.timezone.utc), 'time_taken': 702408.0, 'time_delta': '8 days, 3:06:48', 'additions': 514, 'deletions': 168, 'state': 'closed'}, {'id': 681864166, 'number': 91, 'closed': datetime.datetime(2021, 7, 3, 12, 46, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 13, 33, 2, tzinfo=datetime.timezone.utc), 'time_taken': 170007.0, 'time_delta': '1 day, 23:13:27', 'additions': 44, 'deletions': 27, 'state': 'closed'}, {'id': 657284594, 'number': 84, 'closed': datetime.datetime(2021, 5, 29, 9, 6, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 0, 34, 58, tzinfo=datetime.timezone.utc), 'time_taken': 30703.0, 'time_delta': '8:31:43', 'additions': 40, 'deletions': 33, 'state': 'closed'}, {'id': 656718372, 'number': 81, 'closed': datetime.datetime(2021, 5, 28, 16, 25, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 15, 58, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1612.0, 'time_delta': '0:26:52', 'additions': 264, 'deletions': 204, 'state': 'closed'}, {'id': 592349861, 'number': 71, 'closed': datetime.datetime(2021, 3, 13, 13, 44, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 11, 42, 37, tzinfo=datetime.timezone.utc), 'time_taken': 7306.0, 'time_delta': '2:01:46', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 544617407, 'number': 63, 'closed': datetime.datetime(2020, 12, 23, 7, 16, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 23, 7, 15, 38, tzinfo=datetime.timezone.utc), 'time_taken': 69.0, 'time_delta': '0:01:09', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 523707088, 'number': 62, 'closed': datetime.datetime(2020, 12, 26, 13, 10, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 19, 6, 22, 25, tzinfo=datetime.timezone.utc), 'time_taken': 3221261.0, 'time_delta': '37 days, 6:47:41', 'additions': 6, 'deletions': 5, 'state': 'closed'}]"
76342143,hydrus,HTTP-APIs/hydrus,Python,130,193,22,47,922,20,5,7,"[{'id': 712811810, 'number': 603, 'closed': datetime.datetime(2021, 8, 27, 13, 26, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 17, 8, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1109860.0, 'time_delta': '12 days, 20:17:40', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 701284318, 'number': 601, 'closed': datetime.datetime(2021, 8, 6, 14, 18, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 9, 12, 37, tzinfo=datetime.timezone.utc), 'time_taken': 363933.0, 'time_delta': '4 days, 5:05:33', 'additions': 16, 'deletions': 44, 'state': 'closed'}, {'id': 696749899, 'number': 599, 'closed': datetime.datetime(2021, 7, 27, 17, 2, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 7, 5, 55, tzinfo=datetime.timezone.utc), 'time_taken': 122202.0, 'time_delta': '1 day, 9:56:42', 'additions': 138, 'deletions': 37, 'state': 'closed'}, {'id': 685158160, 'number': 597, 'closed': datetime.datetime(2021, 7, 19, 11, 7, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 12, 37, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1031406.0, 'time_delta': '11 days, 22:30:06', 'additions': 32, 'deletions': 1, 'state': 'closed'}, {'id': 683029810, 'number': 594, 'closed': datetime.datetime(2021, 7, 3, 14, 57, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 14, 10, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2815.0, 'time_delta': '0:46:55', 'additions': 402, 'deletions': 388, 'state': 'closed'}, {'id': 678014548, 'number': 593, 'closed': datetime.datetime(2021, 6, 25, 17, 34, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 15, 46, 1, tzinfo=datetime.timezone.utc), 'time_taken': 6480.0, 'time_delta': '1:48:00', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 675512669, 'number': 591, 'closed': datetime.datetime(2021, 6, 25, 15, 49, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 15, 9, 9, tzinfo=datetime.timezone.utc), 'time_taken': 261650.0, 'time_delta': '3 days, 0:40:50', 'additions': 55, 'deletions': 3, 'state': 'closed'}, {'id': 673621983, 'number': 590, 'closed': datetime.datetime(2021, 6, 21, 19, 43, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 17, 14, 48, tzinfo=datetime.timezone.utc), 'time_taken': 268127.0, 'time_delta': '3 days, 2:28:47', 'additions': 33, 'deletions': 116, 'state': 'closed'}, {'id': 667960403, 'number': 580, 'closed': datetime.datetime(2021, 6, 13, 12, 34, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 10, 9, 4, tzinfo=datetime.timezone.utc), 'time_taken': 181530.0, 'time_delta': '2 days, 2:25:30', 'additions': 130, 'deletions': 4, 'state': 'closed'}, {'id': 657287390, 'number': 578, 'closed': datetime.datetime(2021, 5, 29, 10, 4, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 0, 43, 24, tzinfo=datetime.timezone.utc), 'time_taken': 33639.0, 'time_delta': '9:20:39', 'additions': 388, 'deletions': 498, 'state': 'closed'}, {'id': 643377406, 'number': 574, 'closed': datetime.datetime(2021, 5, 14, 11, 57, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 12, 17, 49, 49, tzinfo=datetime.timezone.utc), 'time_taken': 151661.0, 'time_delta': '1 day, 18:07:41', 'additions': 40, 'deletions': 8, 'state': 'closed'}, {'id': 571617956, 'number': 556, 'closed': datetime.datetime(2021, 3, 13, 14, 1, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 11, 7, 12, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2616493.0, 'time_delta': '30 days, 6:48:13', 'additions': 40, 'deletions': 3, 'state': 'closed'}, {'id': 564526542, 'number': 554, 'closed': datetime.datetime(2021, 4, 20, 15, 40, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 30, 22, 0, 46, tzinfo=datetime.timezone.utc), 'time_taken': 6889176.0, 'time_delta': '79 days, 17:39:36', 'additions': 279, 'deletions': 4, 'state': 'closed'}, {'id': 561603819, 'number': 550, 'closed': datetime.datetime(2021, 2, 11, 14, 11, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 26, 7, 52, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1405151.0, 'time_delta': '16 days, 6:19:11', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 554757708, 'number': 545, 'closed': datetime.datetime(2021, 1, 14, 13, 22, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 14, 8, 15, 17, tzinfo=datetime.timezone.utc), 'time_taken': 18425.0, 'time_delta': '5:07:05', 'additions': 21, 'deletions': 17, 'state': 'closed'}, {'id': 552314260, 'number': 543, 'closed': datetime.datetime(2021, 1, 11, 13, 29, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 10, 17, 0, 52, tzinfo=datetime.timezone.utc), 'time_taken': 73715.0, 'time_delta': '20:28:35', 'additions': 23, 'deletions': 11, 'state': 'closed'}, {'id': 545667598, 'number': 541, 'closed': datetime.datetime(2021, 1, 10, 13, 7, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 26, 7, 39, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1315685.0, 'time_delta': '15 days, 5:28:05', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 519291886, 'number': 527, 'closed': datetime.datetime(2021, 1, 10, 15, 27, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 11, 15, 59, 2, tzinfo=datetime.timezone.utc), 'time_taken': 5182123.0, 'time_delta': '59 days, 23:28:43', 'additions': 23, 'deletions': 11, 'state': 'closed'}, {'id': 518309007, 'number': 525, 'closed': datetime.datetime(2020, 11, 10, 8, 19, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 8, 18, 48, tzinfo=datetime.timezone.utc), 'time_taken': 19.0, 'time_delta': '0:00:19', 'additions': 97, 'deletions': 459, 'state': 'closed'}, {'id': 518282561, 'number': 524, 'closed': datetime.datetime(2020, 11, 10, 7, 50, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 10, 7, 24, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1582.0, 'time_delta': '0:26:22', 'additions': 4, 'deletions': 4, 'state': 'closed'}]"
371432062,creditrisk-poc,HTTP-APIs/creditrisk-poc,Python,6,1,7,5,21,3,3,0,"[{'id': 706407531, 'number': 26, 'closed': datetime.datetime(2021, 8, 9, 10, 45, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 10, 42, 22, tzinfo=datetime.timezone.utc), 'time_taken': 191.0, 'time_delta': '0:03:11', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 706229837, 'number': 25, 'closed': datetime.datetime(2021, 8, 9, 8, 45, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 5, 27, 14, tzinfo=datetime.timezone.utc), 'time_taken': 11876.0, 'time_delta': '3:17:56', 'additions': 226, 'deletions': 24, 'state': 'closed'}]"
