pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
608491936,Virtual Codebase modification of the determine deltas,"The goal of this pull request is to refactor DeltaCode to use `Scancode-Toolkitâ€™s`  `Virtual Codebase` class. This refactoring will
allow `DeltaCode` to be a library as opposed to only be used as a CLI tool, moreover this refactor will allow DeltaCode to
determine deltas much more effectively in the form of BFS tree scan of the two tree structures unlike indexing the entire
codebase.

In the `scanCode Toolkit` we can recreate a Codebase object and its
`Resource`(file, dirs) from a scancode json results file.

So using `Virtual Codebase` we can leverage upon its `Resource` class instead of using separate models for `Files and Directories`.

Since now we are relying on `BFS scans` of the two tree liked codebases we can get rid of `indexing`  the entire codebase at once, instead of it we `yield` the resources which are required for the time being.



",True,167,https://api.github.com/repos/nexB/deltacode/pulls/167,https://github.com/nexB/deltacode/pull/167,closed,3379,2209,103,4,4,57,1,0,[{'name': 'GSOC'}],2021-04-04 05:36:40+00:00,2021-07-15 14:49:05+00:00,8845945.0,"102 days, 9:12:25","[{'comment_id': 606750737, 'comment_body': '@majurg changed the determine delta to the approach we discussed. You meant to implement in this way right?', 'comment_created': datetime.datetime(2021, 4, 4, 5, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 610968860, 'comment_body': 'I think we can remove the fingerprints dicts here once your PR in common code is merged. \r\n\r\nCan you explain why `new_files_original_path` is necessary?', 'comment_created': datetime.datetime(2021, 4, 10, 1, 27, 16, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610968921, 'comment_body': 'Same here, why do we need this dict again?', 'comment_created': datetime.datetime(2021, 4, 10, 1, 27, 36, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969054, 'comment_body': 'What exception are we catching here. I would prefer this to be specific instead of the catch-all `Exception`', 'comment_created': datetime.datetime(2021, 4, 10, 1, 28, 38, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969243, 'comment_body': 'Can we just change this to \r\n```\r\nif self.codebase1 is None or self.codebase2 is None:\r\n    continue\r\nrest of logic\r\n```\r\n\r\nThis is easier to read and we can lose an indentation.', 'comment_created': datetime.datetime(2021, 4, 10, 1, 30, 16, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969327, 'comment_body': 'I am not sure we need this anymore now that we are using VirtualCodebase', 'comment_created': datetime.datetime(2021, 4, 10, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969427, 'comment_body': 'In fact, I think we can throw all the stuff having to do with path alignment and original paths out. \r\n\r\nWe should treat the VirtualCodebases as the are loaded and not try to manipulate paths.', 'comment_created': datetime.datetime(2021, 4, 10, 1, 32, 10, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969468, 'comment_body': 'I think the fingerprint stuff is handled in your common code PR.', 'comment_created': datetime.datetime(2021, 4, 10, 1, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969607, 'comment_body': 'Its probably cleaner to have functions to create each type of Delta object (Added, modified, etc)\r\n\r\nThat way we do not have 6+ lines of code after each conditional. ', 'comment_created': datetime.datetime(2021, 4, 10, 1, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969868, 'comment_body': 'All of this is very ugly. I think we are better off ignoring the license and copyright checks and adapt this later once VirtualCodebase is integrated into `determine_delta`. We can probably handle the copyright and license checking stuff much more cleanly then.', 'comment_created': datetime.datetime(2021, 4, 10, 1, 36, 14, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610969997, 'comment_body': 'See my comment above. This whole block is really ugly. I think we are better off ignoring everything having to do with license and copyright checks for now. We can add this later in a much more clean way.', 'comment_created': datetime.datetime(2021, 4, 10, 1, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 610970131, 'comment_body': 'Like mentioned above, I think we can safely ignore all the logic around aligning trees and storing old_paths etc.', 'comment_created': datetime.datetime(2021, 4, 10, 1, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 611008180, 'comment_body': 'yes.\r\n\r\nConsider the `new_codebase` files as `new/a1.py` , `new/a2.py`  and the `old_codebase`structure as `old/a1.py` , `old/a4.py` . \r\nNow what `alignscan/fixtrees` does is it strips off the common directory path \r\nThe  `new_codebase` would become `a1.py` `a2.py`    and similarly the `old_codebse` would become `a1.py` , `a4.py`\r\n\r\nThe original path would be lost, we are actually comapring the deltas based upon the new paths and then we are comparing the deltas based on their `sha1` values .\r\nBut in delta reports we need the `original paths ` and the `aligned path` so for that reason we are creating a dict of it . ', 'comment_created': datetime.datetime(2021, 4, 10, 7, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611008276, 'comment_body': 'The same reason as above is for keeping the old_files path and the above was for new_files.\r\n\r\n', 'comment_created': datetime.datetime(2021, 4, 10, 7, 4, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611008399, 'comment_body': 'Okay can be changed,\r\nThe exception is mainly when we do not find the files in the disk for the VirtualCodebase ', 'comment_created': datetime.datetime(2021, 4, 10, 7, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611008490, 'comment_body': 'Not very sure we can `continue` in case of `if`  ', 'comment_created': datetime.datetime(2021, 4, 10, 7, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611009166, 'comment_body': 'Yes no longer required once we have  a PyPI release', 'comment_created': datetime.datetime(2021, 4, 10, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611009413, 'comment_body': 'Yes it can be done, thanks\r\nIt is a just a basic model which I did to show the working of the BFS traversal of the two codebases.', 'comment_created': datetime.datetime(2021, 4, 10, 7, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611010463, 'comment_body': '@majurg we must align the path as we are making delta comparison based upon it.\r\nas I explained here https://github.com/nexB/deltacode/pull/167/files#r611008180\r\n\r\nVirtual Codebase does not take care of the stipped of path after alignment.\r\nNow if we are not having the aligned path whenever we change the root directory(which we supporrt currently) even the files which are moved will be difficult to trace. So we are keeping that align scans', 'comment_created': datetime.datetime(2021, 4, 10, 7, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611010657, 'comment_body': ""Now if we are not planning to have the allign scans I think we should also treat  files like `old/a1.py`   and `new/a1.py`   as added even if they are having the same sha1.\r\n\r\nBut we don't do it currently and they are treated as same."", 'comment_created': datetime.datetime(2021, 4, 10, 7, 29, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611050492, 'comment_body': 'Changed in commit https://github.com/nexB/deltacode/pull/167/commits/e6a6cbdd0eb3d850e21f46be658d24a8dfa6bca8', 'comment_created': datetime.datetime(2021, 4, 10, 14, 18, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611057168, 'comment_body': 'Changed in commit e6a6cbd', 'comment_created': datetime.datetime(2021, 4, 10, 15, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 611135583, 'comment_body': '> We should treat the VirtualCodebases as the are loaded and not try to manipulate paths.\r\n\r\nWe are doing the path manipulation to compare the deltas.', 'comment_created': datetime.datetime(2021, 4, 11, 5, 53, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 612046401, 'comment_body': 'Lets just ignore/not do any alignment for this first implementation.', 'comment_created': datetime.datetime(2021, 4, 13, 0, 42, 11, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 612046552, 'comment_body': 'Lets just ignore/not do any alignment for this first implementation.', 'comment_created': datetime.datetime(2021, 4, 13, 0, 42, 43, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 612106760, 'comment_body': 'Yeah', 'comment_created': datetime.datetime(2021, 4, 13, 3, 48, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 615202873, 'comment_body': 'Refactore the entire block above in https://github.com/nexB/deltacode/pull/167/commits/cde45efbc9e8957cb9fa5452c49eb7dc97cd8e5a , https://github.com/nexB/deltacode/pull/167/commits/75977c41860f701c8564a51fc8ea4b4a5b86025e , and https://github.com/nexB/deltacode/pull/167/commits/99c153dd9afa3385fe8804c8825ad3d873c772d1', 'comment_created': datetime.datetime(2021, 4, 17, 4, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 645203026, 'comment_body': 'What line of code in the try block raises the exceptions? and is it a single exception or more than one. ', 'comment_created': datetime.datetime(2021, 6, 3, 23, 57, 49, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 645203379, 'comment_body': 'Do we still need this function? ', 'comment_created': datetime.datetime(2021, 6, 3, 23, 58, 59, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 645237344, 'comment_body': 'No @majurg it was an exception of more than one :( ', 'comment_created': datetime.datetime(2021, 6, 4, 1, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 645763569, 'comment_body': 'I thaught of removing align trees , but then our scoring system is based upon after aligning the path , so I planned to keep it.', 'comment_created': datetime.datetime(2021, 6, 4, 18, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 646001048, 'comment_body': 'Ok we need to refactor this a bit, I do not like catching every possible exception and doing absolutely nothing. What exact exceptions are being raised here? ', 'comment_created': datetime.datetime(2021, 6, 5, 15, 4, 9, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 646001154, 'comment_body': 'Can you point me to the line (s) of code that uses path for scoring?', 'comment_created': datetime.datetime(2021, 6, 5, 15, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 646001262, 'comment_body': 'We probably want to relax this to `>=`', 'comment_created': datetime.datetime(2021, 6, 5, 15, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 646001665, 'comment_body': 'The error is raised when the `Resource` object is not having the `copyright` attributes', 'comment_created': datetime.datetime(2021, 6, 5, 15, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 646002052, 'comment_body': 'Ok, we could put a guard in before performing operations on the `.copyright` data to avoid having this exception raised', 'comment_created': datetime.datetime(2021, 6, 5, 15, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 646002508, 'comment_body': 'https://github.com/nexB/deltacode/blob/bf767c2a05ca12f40d77036a6f30375f9fbf1c0e/src/deltacode/__init__.py#L107\r\n\r\nWe are basically creating deltas after aligning of paths(based on the aligned path ) in old architecture and \r\nafter the creation of the delta we assign scores based on `removed/added...` and all the test cases/expected results are in the Design are based upon it too.\r\nSo i thaught of keeping the alignment for now\r\n\r\nhttps://github.com/nexB/deltacode/blob/bf767c2a05ca12f40d77036a6f30375f9fbf1c0e/src/deltacode/__init__.py#L122\r\n\r\nThe `path` which we are enumerating actually refers to the aligned path ', 'comment_created': datetime.datetime(2021, 6, 5, 15, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 646002586, 'comment_body': 'Yes that could be done doing it shortly', 'comment_created': datetime.datetime(2021, 6, 5, 15, 18, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 646002675, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 6, 5, 15, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 646016952, 'comment_body': 'Changed in 85c85edf2aa669531021fba34d9c186810022558', 'comment_created': datetime.datetime(2021, 6, 5, 17, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 648078635, 'comment_body': 'tagging as `xfail` for now due to `fingerprint`', 'comment_created': datetime.datetime(2021, 6, 9, 8, 21, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 656649234, 'comment_body': ""```suggestion\r\nfrom deltacode.exceptions import FileError\r\n```\r\nI don't think we need to import FileError as FileError?"", 'comment_created': datetime.datetime(2021, 6, 22, 23, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656655693, 'comment_body': ""`old_resource_considered` should be a `set()`. There is no need to set values for paths you want to keep track of paths you looked at.\r\n\r\n```\r\n>>> old_resource_considered = set()\r\n>>> old_resource_considered.add('test_path')\r\n>>> 'test_path' in old_resource_considered\r\nTrue\r\n```"", 'comment_created': datetime.datetime(2021, 6, 22, 23, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656663092, 'comment_body': 'Please add some comments explaining what the following code block does. It is not immediately obvious to whoever is looking at the code.', 'comment_created': datetime.datetime(2021, 6, 23, 0, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656677010, 'comment_body': 'I would recommend unpacking the value you want out of `.compute_counts()` and pass it into `Stat()` rather than passing the entire tuple returned by `.compute_counts()`\r\n\r\n```\r\ncodebase1_file_count, _, _ =  self.codebase1.compute_counts()\r\ncodebase2_file_count, _, _ = self.codebase2.compute_counts()\r\nself.stats = Stat(codebase1_file_count, codebase2_file_count)\r\n```\r\n\r\nThe constructor for `Stat()` should be changed back to the way it was before, where it expects an integer as input and not a tuple.', 'comment_created': datetime.datetime(2021, 6, 23, 0, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656677223, 'comment_body': '```suggestion\r\n        self.new_files_count = new_files_count\r\n```\r\nThe constructor should only accept ints, as explained above where `Stat()` is called.', 'comment_created': datetime.datetime(2021, 6, 23, 0, 51, 41, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656678147, 'comment_body': 'I feel like this does not need its own file and could be added to `src/deltacode/__init__.py`.', 'comment_created': datetime.datetime(2021, 6, 23, 0, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656691490, 'comment_body': 'Please re-add the docstring to this function and update it to describe what is going on in this function.', 'comment_created': datetime.datetime(2021, 6, 23, 1, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656694913, 'comment_body': ""It is better to address to assign the first element of `deltas` to a variable and use that rather than repeatedly getting the delta object from the list by index.\r\n\r\n``` \r\ndeltas = test_deltas.deltas\r\n\r\n# ensure that deltas is not empty\r\nassert deltas\r\n\r\ndelta = deltas[0]\r\nassert len(delta.factors) == 1\r\nassert 'copyright change' in delta.factors\r\n```\r\n\r\nPlease update this in other places where this occurs.\r\n"", 'comment_created': datetime.datetime(2021, 6, 23, 1, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'JonoYang', 'type': 'User'}, {'comment_id': 656930617, 'comment_body': 'Sure, I will be adding it', 'comment_created': datetime.datetime(2021, 6, 23, 9, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 656931515, 'comment_body': 'Okay changing it', 'comment_created': datetime.datetime(2021, 6, 23, 9, 40, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 656932298, 'comment_body': ""Yes that's better changing it soon !"", 'comment_created': datetime.datetime(2021, 6, 23, 9, 41, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 659106703, 'comment_body': 'Agreed! removed it from there', 'comment_created': datetime.datetime(2021, 6, 26, 2, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 659106767, 'comment_body': 'Added comments and doc strings at all required areas', 'comment_created': datetime.datetime(2021, 6, 26, 2, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 659319018, 'comment_body': 'But does this work with virtual codebase?', 'comment_created': datetime.datetime(2021, 6, 27, 13, 5, 46, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 659319656, 'comment_body': 'Not directly actually as we are having the `original_path`  in Resources , and to alling the path the path we just need two `OFFSET` for path aligning', 'comment_created': datetime.datetime(2021, 6, 27, 13, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 659319926, 'comment_body': '@majurg basically these offset would handle the path alignment things..', 'comment_created': datetime.datetime(2021, 6, 27, 13, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}]","[{'commit_sha': 'e2026ef549cf06d8a9266b76f8f88bf133613aeb', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '477cc58da399536c6b8fe156b6b22e6eb38f8140', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee639bfe0feb67d6703ed980d22aa54521b90f76', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92c3355e8201c890e1bba7ac67b81e78fdcea7f1', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}]",Pratik Dey,44219625,pratikrocks.dey11@gmail.com,User,,53,,35,32
691927030,remove unwanted files dependencies,"remove unwanted files dependencies 
Signed-off-by: Pratik Dey <pratikrocks.dey11@gmail.com>",False,176,https://api.github.com/repos/nexB/deltacode/pulls/176,https://github.com/nexB/deltacode/pull/176,open,17,194248,28,4,1,9,0,0,[],2021-07-17 12:43:09+00:00,,0.0,,"[{'comment_id': 671694184, 'comment_body': 'Keeping it xfail for now as these test it requires `File` models and since it is just one line in the `File` I thought it would be quite trivial to mae a  separate `.json` object to scan it', 'comment_created': datetime.datetime(2021, 7, 17, 12, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 673072418, 'comment_body': 'This may be needed?', 'comment_created': datetime.datetime(2021, 7, 20, 12, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 673072479, 'comment_body': 'Since we are removing the File object, I think we can just remove these tests, right?', 'comment_created': datetime.datetime(2021, 7, 20, 12, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 673072673, 'comment_body': 'Why have this?', 'comment_created': datetime.datetime(2021, 7, 20, 12, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 673075614, 'comment_body': 'Yes we can !', 'comment_created': datetime.datetime(2021, 7, 20, 12, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 673076155, 'comment_body': 'Actually they are inbuilt in `VirtualCodebase` so i felt they might not be needed', 'comment_created': datetime.datetime(2021, 7, 20, 12, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 679221595, 'comment_body': 'I forget where we stand on this, but if the VirtualCodebase objects contain this information, I do not see the value of our DeltaCode object containing it as well. ', 'comment_created': datetime.datetime(2021, 7, 29, 14, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'steven-esser', 'type': 'User'}, {'comment_id': 679227973, 'comment_body': 'VirtualCodebase is actually having all the resources but Delta objects will only contains only the respective deltas', 'comment_created': datetime.datetime(2021, 7, 29, 14, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}]","[{'commit_sha': '0c0b7610706d3d9566c153ee4f766598f2ec647a', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b8687b678e685b1d057acc8b0bac3f1bf01c0c7', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e9d41694c56eb9aad56079e6ecfc25a77ad6169', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87cf9c89c432f971e0ad8c51bdfd30c69ad97ac8', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}]",Pratik Dey,44219625,pratikrocks.dey11@gmail.com,User,,53,,35,32
691883367,Add scancode options in deltacode results,"This PR is meant to provide details about the `scancode_header_options` present in the scancode scans.
Additionally we will have these `options` present now in the headers.
`

    ""deltacode_notice"": ""Generated with DeltaCode and provided on an \""AS IS\"" BASIS, WITHOUT WARRANTIES\nOR CONDITIONS OF ANY KIND, either express or implied. No content created from\nDeltaCode should be considered or used as legal advice. Consult an Attorney\nfor any legal advice.\nDeltaCode is a free software codebase-comparison tool from nexB Inc. and others.\nVisit https://github.com/nexB/deltacode/ for support and download."",
    ""new_scan_options"": {
      ""input"": [
        ""/home/coala-0.10.0/coalib/""
      ],

      ""--fingerprint"": true,
      ""--info"": true,
      ""--json-pp"": ""o.json""
    },

    ""old_scan_options"": {
      ""input"": [
        ""/home/coala-0.10.0/coalib/""
      ],
      ""--fingerprint"": true,
      ""--info"": true,

      ""--json-pp"": ""o.json""
    },
`
Signed-off-by: Pratik Dey <pratikrocks.dey11@gmail.com>",True,171,https://api.github.com/repos/nexB/deltacode/pulls/171,https://github.com/nexB/deltacode/pull/171,closed,257,4,8,1,2,0,0,0,[],2021-07-17 08:38:08+00:00,2022-03-11 09:39:34+00:00,20480486.0,"237 days, 1:01:26",[],"[{'commit_sha': 'a717250a9c596208d041dd976e35c1b99c2464c5', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}]",Pratik Dey,44219625,pratikrocks.dey11@gmail.com,User,,53,,35,32
695176933,Add docker file,"Added `DockerFile`  `docker-compose.yml` 
 
Signed-off-by: Pratik Dey <pratikrocks.dey11@gmail.com>",True,178,https://api.github.com/repos/nexB/deltacode/pulls/178,https://github.com/nexB/deltacode/pull/178,closed,141,0,3,2,2,3,0,0,[],2021-07-22 13:22:57+00:00,2022-03-11 09:36:25+00:00,20031208.0,"231 days, 20:13:28","[{'comment_id': 689601480, 'comment_body': 'I reckon you copied this from ScanCode.io... but there is no need to carry the scancode.io references', 'comment_created': datetime.datetime(2021, 8, 16, 14, 44, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pombredanne', 'type': 'User'}, {'comment_id': 696476966, 'comment_body': 'This also should be changed in Dockerfile not just here in docker-compose.yml. There are other references to scancode.io too in the comments of both files that should be adapted.\r\nIt would be nice to have those changes soon and merged, as I would like to update my local installation and avoid creating my own Dockerfile locally.\r\nThanks a lot.', 'comment_created': datetime.datetime(2021, 8, 26, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ddmesh', 'type': 'User'}, {'comment_id': 696514718, 'comment_body': '@pombredanne , @ddmesh I changed those licenses Thanks :)', 'comment_created': datetime.datetime(2021, 8, 26, 10, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}]","[{'commit_sha': 'bc617f2ce0a314f06d710ab6ed1cac409e537b6c', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '324e67ff32aff12d82a8d24513aa688f4800e0b4', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}]",Pratik Dey,44219625,pratikrocks.dey11@gmail.com,User,,53,,35,32
679078978,Documentation changes,"This  PR is meant for updating the documentation at various locations in the codebase, as well as adding/updating an extensive docs in `ReadTheDocs` owing to the changes due to integration of the `VirtualCodebase`


Signed-off-by: Pratik Dey <pratikrocks.dey11@gmail.com>",True,168,https://api.github.com/repos/nexB/deltacode/pulls/168,https://github.com/nexB/deltacode/pull/168,closed,244,20,8,7,6,3,1,0,[{'name': 'GSOC'}],2021-06-28 14:04:51+00:00,2022-03-11 09:34:54+00:00,22102203.0,"255 days, 19:30:03","[{'comment_id': 688718426, 'comment_body': 'This is the required instructions to run the docker image', 'comment_created': datetime.datetime(2021, 8, 13, 18, 53, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 691466254, 'comment_body': 'added the .rst here @AyanSinhaMahapatra ', 'comment_created': datetime.datetime(2021, 8, 18, 17, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Pratikrocks', 'type': 'User'}, {'comment_id': 693147110, 'comment_body': 'LGTM', 'comment_created': datetime.datetime(2021, 8, 20, 18, 39, 6, tzinfo=datetime.timezone.utc), 'commenter': 'AyanSinhaMahapatra', 'type': 'User'}]","[{'commit_sha': '613621e21cf0dd38ba28797c2a99d44d3b73d79a', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8278e86f1c880a2e77dcd96c127c6027de6c8495', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af11f6a404891cb8aeb6adb747ca2d5268a74cbe', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c146864dcadba583fee673ae40b0a3b27984fb57', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc10b6d3449b8ae1c398e5d8f24408395740cba9', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4343a3517037672983756922ef2a0aafcaa5a60c', 'committer_username': 'Pratikrocks', 'committer_name': 'Pratik Dey', 'committer_email': 'pratikrocks.dey11@gmail.com', 'commit_date': datetime.datetime(2018, 10, 17, 3, 18, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '510873eebc376ea89f6b5e978da4aa278c1828fe', 'committer_username': 'pombredanne', 'committer_name': 'Philippe Ombredanne', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 17, 21, 45, 6, tzinfo=datetime.timezone.utc)}]",Pratik Dey,44219625,pratikrocks.dey11@gmail.com,User,,53,,35,32

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
108448259,deltacode,nexB/deltacode,Python,27,20,16,18,495,23,4,2,"[{'id': 695176933, 'number': 178, 'closed': datetime.datetime(2022, 3, 11, 9, 36, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 13, 22, 57, tzinfo=datetime.timezone.utc), 'time_taken': 20031208.0, 'time_delta': '231 days, 20:13:28', 'additions': 141, 'deletions': 0, 'state': 'closed'}, {'id': 691927030, 'number': 176, 'closed': None, 'created': datetime.datetime(2021, 7, 17, 12, 43, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 17, 'deletions': 194248, 'state': 'open'}, {'id': 691883367, 'number': 171, 'closed': datetime.datetime(2022, 3, 11, 9, 39, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 8, 38, 8, tzinfo=datetime.timezone.utc), 'time_taken': 20480486.0, 'time_delta': '237 days, 1:01:26', 'additions': 257, 'deletions': 4, 'state': 'closed'}, {'id': 679078978, 'number': 168, 'closed': datetime.datetime(2022, 3, 11, 9, 34, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 14, 4, 51, tzinfo=datetime.timezone.utc), 'time_taken': 22102203.0, 'time_delta': '255 days, 19:30:03', 'additions': 244, 'deletions': 20, 'state': 'closed'}, {'id': 608491936, 'number': 167, 'closed': datetime.datetime(2021, 7, 15, 14, 49, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 5, 36, 40, tzinfo=datetime.timezone.utc), 'time_taken': 8845945.0, 'time_delta': '102 days, 9:12:25', 'additions': 3379, 'deletions': 2209, 'state': 'closed'}, {'id': 598887767, 'number': 166, 'closed': datetime.datetime(2021, 6, 24, 17, 3, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 23, 14, 5, 58, tzinfo=datetime.timezone.utc), 'time_taken': 8045861.0, 'time_delta': '93 days, 2:57:41', 'additions': 468, 'deletions': 277, 'state': 'closed'}, {'id': 596792368, 'number': 165, 'closed': datetime.datetime(2021, 3, 22, 15, 34, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 18, 29, 54, tzinfo=datetime.timezone.utc), 'time_taken': 248704.0, 'time_delta': '2 days, 21:05:04', 'additions': 13, 'deletions': 10, 'state': 'closed'}, {'id': 406142420, 'number': 160, 'closed': datetime.datetime(2021, 2, 17, 15, 13, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 20, 15, 42, 13, tzinfo=datetime.timezone.utc), 'time_taken': 26177458.0, 'time_delta': '302 days, 23:30:58', 'additions': 10, 'deletions': 1, 'state': 'closed'}, {'id': 405619417, 'number': 159, 'closed': datetime.datetime(2021, 3, 18, 19, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 19, 7, 34, 44, tzinfo=datetime.timezone.utc), 'time_taken': 28813548.0, 'time_delta': '333 days, 11:45:48', 'additions': 48, 'deletions': 1, 'state': 'closed'}, {'id': 403410735, 'number': 158, 'closed': datetime.datetime(2021, 2, 17, 15, 11, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 14, 20, 58, 8, tzinfo=datetime.timezone.utc), 'time_taken': 26676774.0, 'time_delta': '308 days, 18:12:54', 'additions': 3, 'deletions': 4, 'state': 'closed'}, {'id': 402226175, 'number': 157, 'closed': datetime.datetime(2021, 2, 17, 15, 12, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 11, 18, 4, 53, tzinfo=datetime.timezone.utc), 'time_taken': 26946428.0, 'time_delta': '311 days, 21:07:08', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 401293675, 'number': 156, 'closed': datetime.datetime(2020, 4, 13, 23, 0, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 8, 47, 22, tzinfo=datetime.timezone.utc), 'time_taken': 396806.0, 'time_delta': '4 days, 14:13:26', 'additions': 3599, 'deletions': 3599, 'state': 'closed'}, {'id': 399200388, 'number': 155, 'closed': datetime.datetime(2021, 2, 17, 15, 15, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 5, 18, 51, 23, tzinfo=datetime.timezone.utc), 'time_taken': 27462234.0, 'time_delta': '317 days, 20:23:54', 'additions': 119, 'deletions': 0, 'state': 'closed'}, {'id': 397375432, 'number': 152, 'closed': datetime.datetime(2020, 4, 14, 4, 31, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 2, 6, 8, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1030968.0, 'time_delta': '11 days, 22:22:48', 'additions': 16, 'deletions': 2, 'state': 'closed'}, {'id': 395153405, 'number': 151, 'closed': datetime.datetime(2021, 3, 18, 19, 21, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 20, 51, 42, tzinfo=datetime.timezone.utc), 'time_taken': 30666577.0, 'time_delta': '354 days, 22:29:37', 'additions': 1328, 'deletions': 954, 'state': 'closed'}, {'id': 394552520, 'number': 150, 'closed': datetime.datetime(2020, 4, 2, 6, 23, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 5, 1, 6, tzinfo=datetime.timezone.utc), 'time_taken': 523369.0, 'time_delta': '6 days, 1:22:49', 'additions': 32, 'deletions': 13, 'state': 'closed'}, {'id': 393250243, 'number': 149, 'closed': datetime.datetime(2020, 4, 3, 8, 18, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 20, 53, 40, tzinfo=datetime.timezone.utc), 'time_taken': 818713.0, 'time_delta': '9 days, 11:25:13', 'additions': 34779, 'deletions': 5554, 'state': 'closed'}, {'id': 392290511, 'number': 148, 'closed': datetime.datetime(2021, 3, 18, 19, 22, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 23, 10, 19, 17, tzinfo=datetime.timezone.utc), 'time_taken': 31136573.0, 'time_delta': '360 days, 9:02:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 391864619, 'number': 147, 'closed': datetime.datetime(2021, 3, 18, 19, 21, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 14, 21, 24, tzinfo=datetime.timezone.utc), 'time_taken': 31294829.0, 'time_delta': '362 days, 5:00:29', 'additions': 146, 'deletions': 8, 'state': 'closed'}, {'id': 390806771, 'number': 145, 'closed': datetime.datetime(2021, 3, 18, 19, 22, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 19, 5, 34, 16, tzinfo=datetime.timezone.utc), 'time_taken': 31499288.0, 'time_delta': '364 days, 13:48:08', 'additions': 65, 'deletions': 789, 'state': 'closed'}, {'id': 390577620, 'number': 144, 'closed': datetime.datetime(2020, 3, 20, 15, 37, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 17, 42, 46, tzinfo=datetime.timezone.utc), 'time_taken': 165293.0, 'time_delta': '1 day, 21:54:53', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 390238701, 'number': 142, 'closed': datetime.datetime(2020, 3, 18, 17, 43, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 6, 10, 26, tzinfo=datetime.timezone.utc), 'time_taken': 41562.0, 'time_delta': '11:32:42', 'additions': 5918, 'deletions': 1, 'state': 'closed'}, {'id': 389993091, 'number': 141, 'closed': datetime.datetime(2021, 3, 18, 19, 49, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 17, 18, 3, 49, tzinfo=datetime.timezone.utc), 'time_taken': 31628718.0, 'time_delta': '366 days, 1:45:18', 'additions': 19, 'deletions': 5, 'state': 'closed'}, {'id': 388240368, 'number': 139, 'closed': datetime.datetime(2020, 3, 27, 5, 15, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 14, 9, 50, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1106676.0, 'time_delta': '12 days, 19:24:36', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 387980870, 'number': 137, 'closed': datetime.datetime(2020, 3, 13, 21, 6, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 20, 59, 1, tzinfo=datetime.timezone.utc), 'time_taken': 422.0, 'time_delta': '0:07:02', 'additions': 7, 'deletions': 5, 'state': 'closed'}, {'id': 387923330, 'number': 136, 'closed': datetime.datetime(2020, 3, 13, 20, 11, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 13, 18, 40, 42, tzinfo=datetime.timezone.utc), 'time_taken': 5464.0, 'time_delta': '1:31:04', 'additions': 17, 'deletions': 7, 'state': 'closed'}, {'id': 387432290, 'number': 134, 'closed': datetime.datetime(2021, 3, 18, 19, 54, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 12, 19, 29, 23, tzinfo=datetime.timezone.utc), 'time_taken': 32055923.0, 'time_delta': '371 days, 0:25:23', 'additions': 3642, 'deletions': 3603, 'state': 'closed'}]"
