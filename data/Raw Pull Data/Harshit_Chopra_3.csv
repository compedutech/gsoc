pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
696148199,Git ssh private key binding(GSoC-21),"## [JENKINS-28335](https://issues.jenkins.io/browse/JENKINS-28335) - Add Git Credentials binding for SSH Private Key

The `gitSshPrivateKey` implementation provides git authentication support over *SSH* protocol
using private key and passphrase credentials of a user. The binding uses two git specific environment
variables depending upon the minimum CLI-git version

-  `GIT_SSH_COMMAND` - If version is greater than 2.3, then the GIT_SSH_COMMAND environment variable provides ssh command including the necessary options which are: path to the private key and host key checking to authenticate and connect git server without using an executable script.

- `SSH_ASKPASS` - If version is less than 2.3, an executable script is attached to the variable which provides ssh command including the necessary options which are: path to the private key and host key checking to authenticate and connect git serve

Please refer to the Project page for more details-
https://www.jenkins.io/projects/gsoc/2021/projects/git-credentials-binding/

## Checklist

- [x] I have read the [CONTRIBUTING](https://github.com/jenkinsci/git-plugin/blob/master/CONTRIBUTING.adoc) doc
- [x] I have referenced the Jira issue related to my changes in one or more commit messages
- [x] Unit tests pass locally with my changes
- [x] No Javadoc warnings were introduced with my changes
- [x] No spotbugs warnings were introduced with my changes
- [x] Documentation in README has been updated as necessary
- [x] Online help has been added and reviewed for any new or modified fields
- [x] I have interactively tested my changes
- [x] Any dependent changes have been merged and published in upstream modules (like git-client-plugin)

## Types of changes

- [x] New feature (non-breaking change which adds functionality)


",False,1111,https://api.github.com/repos/jenkinsci/git-plugin/pulls/1111,https://github.com/jenkinsci/git-plugin/pull/1111,open,845,5,14,106,8,38,2,0,"[{'name': 'enhancement'}, {'name': 'documentation'}]",2021-07-23 18:52:36+00:00,,0.0,,"[{'comment_id': 675956131, 'comment_body': 'Probably need to merge with the master branch to not have this revert to an older version\r\n```suggestion\r\n    <version>4.20</version>\r\n```', 'comment_created': datetime.datetime(2021, 7, 24, 6, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956232, 'comment_body': 'Need to start the symbol with a lower case letter for consistency\r\n```suggestion\r\n    @Symbol(""gitSSHPrivateKey"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 24, 6, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956355, 'comment_body': ""Start with lower case letter\r\n```suggestion\r\nwithCredentials([gitUsernamePassword(credentialsId: 'my-credentials-id', gitToolName: 'git-tool')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 24, 6, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956374, 'comment_body': ""Start with lower case letter\r\n```suggestion\r\nwithCredentials([gitUsernamePassword(credentialsId: 'my-credentials-id', gitToolName: 'git-tool')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 24, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956378, 'comment_body': ""Start with lower case letter\r\n```suggestion\r\nwithCredentials([gitUsernamePassword(credentialsId: 'my-credentials-id', gitToolName: 'git-tool')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 24, 6, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675964611, 'comment_body': 'I have mention about reverting of version from 20 to 19 in the gitter chat and the issue that I am facing when the version is set to 20. Also I have mentioned some cases over which the binding is failing in the chat as well, it will certainly make you more informed when performing interactive testing.', 'comment_created': datetime.datetime(2021, 7, 24, 7, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 684308266, 'comment_body': 'Shaded path to the library rather than a direct reference to the library...', 'comment_created': datetime.datetime(2021, 8, 6, 15, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684324931, 'comment_body': 'I was surprised at first as well but I think the answer lies [here](https://github.com/jenkinsci/jenkins/blob/6d80eac7e12e81fa8279f1c9daa384f55a2ce3eb/cli/pom.xml#L133), I guess what they are doing is shading the dependencies starting with org. While using library path starting as `org.apache.` the issue of NoSuchMethodExpection is encounter again.\r\nAlso check this https://github.com/jenkinsci/jenkins/blob/6d80eac7e12e81fa8279f1c9daa384f55a2ce3eb/cli/pom.xml#L74 the sshd-core v2.7.0 which is required by the binding but  is set optional. \r\nWill check more non this and will update on the chat.\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 15, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 684352789, 'comment_body': 'do not use the jenkins-cli copy, you should get this from the sshd plugin', 'comment_created': datetime.datetime(2021, 8, 6, 16, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 684523333, 'comment_body': 'I was able to reduce the dependency to `sshd-common` and change the imports to be direct imports.  It does not fix the GitSCMTest that fails because token-macro plugin fails to initialize, but it does simplify the imports to not refer to the shaded version from `io.jenkins.cli`.\r\n```suggestion\r\n      <artifactId>sshd-common</artifactId>\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 21, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684523839, 'comment_body': ""I'm not sure if this is required (or even safe), but I excluded the transitive dependencies that arrived due to the inclusion of sshd-common.\r\n```suggestion\r\n      <version>2.7.0</version>\r\n      <exclusions> <!-- prevent inclusion in hpi as a transient dependency -->\r\n        <exclusion>\r\n          <groupId>org.slf4j</groupId>\r\n          <artifactId>jcl-over-slf4j</artifactId>\r\n        </exclusion>\r\n        <exclusion>\r\n          <groupId>org.slf4j</groupId>\r\n          <artifactId>slf4j-api</artifactId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n```"", 'comment_created': datetime.datetime(2021, 8, 6, 22, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684525689, 'comment_body': 'With the other two changes ([here](https://github.com/jenkinsci/git-plugin/pull/1111#discussion_r684523333) and [here](https://github.com/jenkinsci/git-plugin/pull/1111#discussion_r684523839)) that precede this change, I was able to switch to directly import the sshd-common symbols.\r\n```suggestion\r\nimport org.apache.sshd.common.config.keys.loader.openssh.OpenSSHKeyPairResourceParser;\r\nimport org.apache.sshd.common.NamedResource;\r\nimport org.apache.sshd.common.config.keys.FilePasswordProvider;\r\nimport org.apache.sshd.common.config.keys.writer.openssh.OpenSSHKeyPairResourceWriter;\r\nimport org.apache.sshd.common.session.SessionContext;\r\nimport org.apache.sshd.common.util.io.SecureByteArrayOutputStream;\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 22, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684600913, 'comment_body': ""this is likely a recipe for disaster depending on this multiple times in the jenkins ecosystem\r\n\r\nEither:\r\n* a dependency on the `sshd` plugin should be taken\r\n* library plugin extracted\r\n* shade the artifact\r\n \r\nOtherwise you're going to get weird issues when someone updates to a version with conflicting classes"", 'comment_created': datetime.datetime(2021, 8, 7, 7, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 684600989, 'comment_body': 'should be fine', 'comment_created': datetime.datetime(2021, 8, 7, 7, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 684632261, 'comment_body': ""@arpoch I believe Tim has the correct idea.  I've tried using a dependency on the `sshd` plugin and it still generates class not found exception log messages when running Jenkins.  I hope to try shading the sshd-common artifact to see if that will resolve the issue and keep the git plugin somewhat independent of the sshd plugin."", 'comment_created': datetime.datetime(2021, 8, 7, 13, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684645118, 'comment_body': 'I believe this is what we are trying to do as mentioned here https://stackoverflow.com/questions/48782593/shading-a-dependency-in-maven', 'comment_created': datetime.datetime(2021, 8, 7, 15, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 685417378, 'comment_body': ""Till now what I have learnt from my experiments with maven shade plugin\r\n\r\n- Using the plugin to shade sshd-common artifact requires a separated project pom with no transitive dependency of any sshd artifact. Also the usage of modules in git plugin to achieve desired results doesn't seems to be a viable option. \r\nSo is there another alternative to resolve the error encounter in test failure without shading, if so what efforts would be needed from our side."", 'comment_created': datetime.datetime(2021, 8, 9, 18, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 685441998, 'comment_body': 'A library plugin is an alternative', 'comment_created': datetime.datetime(2021, 8, 9, 18, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 686179056, 'comment_body': ""@timja  could you guide me more on what a library plugin is and how it's developed, what I have explored so far, library plugin is just like a normal plugin structurally but provides a functionality which other plugins could use by making it has there dependency. So taking our case in consideration, the library plugin developed would provide the functionality of decrypting passphrase protected private keys."", 'comment_created': datetime.datetime(2021, 8, 10, 17, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 687135890, 'comment_body': ""docs are here: https://www.jenkins.io/doc/developer/plugin-development/dependencies-and-class-loading/#using-library-wrapper-plugins\r\n\r\nlibrary plugin normally doesn't provide code unless there's something really useful many other plugin's need.\r\n\r\nthey just bundle a dependency once so its version can be controlled and you can tell what version of a dep you will get"", 'comment_created': datetime.datetime(2021, 8, 11, 19, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 687932573, 'comment_body': 'Optional: For better maintainability, personally I would recommend using\r\n\r\n```suggestion\r\nString.format(""%1$s -i %2$s -o StrictHostKeyChecking=no"", sshExePath, getPrivateKeyFile(credentials, tempDir).getRemote())\r\n```\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 17, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687933203, 'comment_body': 'For the same reason, I think whenever a string is getting complex, it should be formatted using a String.format().', 'comment_created': datetime.datetime(2021, 8, 12, 17, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687935700, 'comment_body': 'Possible NPE, should we not first check the size of getPrivateKeys()?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687938920, 'comment_body': 'Why are we passing null values? If these arguments are not needed and are optional then why are we asking them here?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687940788, 'comment_body': 'The caller function of writePrivateKeyOpenSSHFormatted is already throwing these exceptions, what is the reason of catching them here? Also should we not use the logger function to log the reason of error instead of dumping the whole stack trace?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 21, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687941387, 'comment_body': 'You may use .concat() function instead of the + operator.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687942257, 'comment_body': 'again why are we dumping the whole stack trace? We should have a consistent logging statement strategy.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687957554, 'comment_body': 'Nice suggestion, will check this out.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 688342207, 'comment_body': 'All the exceptions related to private key operations(encryption/decryption/write) are being caught here, are you suggesting to use the logger of the current build to output specific reasons why the exception/error was generated or are you suggesting to not handle the exceptions with try/catch here and use the throws keyword  to let the current build handle that for us.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 735417895, 'comment_body': 'are all constants that mean compile-time this will be replaced with its calculate valued, with concat it should remain a function called every time. When concat constants I think better + operator.', 'comment_created': datetime.datetime(2021, 10, 25, 9, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nfalco79', 'type': 'User'}, {'comment_id': 735419663, 'comment_body': 'instead you could move HEADER definition as constant and use here and in getEncData function', 'comment_created': datetime.datetime(2021, 10, 25, 9, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nfalco79', 'type': 'User'}, {'comment_id': 735841182, 'comment_body': 'looks like a bad merge', 'comment_created': datetime.datetime(2021, 10, 25, 18, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 735841234, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 10, 25, 18, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 735854814, 'comment_body': 'Thanks for the quick review, made the changes.', 'comment_created': datetime.datetime(2021, 10, 25, 18, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 912506265, 'comment_body': '## Stapler: Missing permission check\n\nPotential missing permission check in DescriptorImpl#doFillGitToolNameItems\n\n[Show more details](https://github.com/jenkinsci/git-plugin/security/code-scanning/86)', 'comment_created': datetime.datetime(2022, 7, 3, 16, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 912506266, 'comment_body': '## Jenkins: Plaintext password storage\n\nVariable should be reviewed whether it stored a password and is serialized to disk: privateKey\n\n[Show more details](https://github.com/jenkinsci/git-plugin/security/code-scanning/88)', 'comment_created': datetime.datetime(2022, 7, 3, 16, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 960692000, 'comment_body': '...`-o StrictHostKeyChecking=no""`...\r\n\r\nThis seems to go against the https://github.com/jenkinsci/git-client-plugin#ssh-host-key-verification feature.\r\n\r\n@MarkEWaite is that correct?', 'comment_created': datetime.datetime(2022, 9, 1, 13, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sboardwell', 'type': 'User'}, {'comment_id': 960742142, 'comment_body': 'Agreed @sboardwell .  This needs to be extended to support the host key checking strategy before it is merged.', 'comment_created': datetime.datetime(2022, 9, 1, 14, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}]","[{'commit_sha': 'e9c550abedfc91caa29c039d901d3c80296b3f9d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd5c4ccb547678936f939e01430e093e6753cae', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2125673a2c29e36f326e0edec066e7a21ab0c67', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78a47fb2f1cd17716804426da52f074b1d650dc5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '818599a54985322afb82244fa9f3f48eb1cc80f5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eeecee5b339c5551635c197fb8cf3cadb2a9c74', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bc31408aad7d88ee407247cceda97de6f14b5b8', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e45ed3301de3d63e6f687d5b823b8fb7ad45b9b9', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9030a2c6d41ddc3f0b52075f00c9c467ae4cd4d6', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9312a70b49cc0c36c94d1c6595eb0765fdad2279', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8f38f39e155729b49a840de8c59478f595060bf', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e17779785feb6c0d4ea790b047d2993bb5edccf', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b53385b6ddf8ab476980e89ee9048916c0e76335', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '588c389cb39d2b7045102804a12c369c0b5904b0', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd70831c30ee4c951e57e49c52b3924770fb3b3a1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '443c0f73949c56421e148aa6587f250b236fd067', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65624c0e056efcf918ac51b63023b98c35887889', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a55e3dd979fe7c70eeb5e51c1b566618af8d22b8', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd38eea03fb53bbb5ac70c10896234358492fff7d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f57be59d49953c3a295b8ca6aefdaf47d9d6650b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df3d33cd6c0903fa00e72cabdd6c4c77a4cc83fb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0996235b89d24af65fde33039b9fc7d80960821a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47588ae03838196389870d4456785d21890a0c12', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7549c5447775e665ca15fd3ea81968f547475e2a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1eeb220a6eabd4a1812b680278623a5b72192db', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96c0103336bc514bbb529100199d8e662e349975', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3ee23a0c7d448085ea92510c86f4d27f6587672', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c218b0bd4ac02a72610b64a13debe76aa97dd4c2', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd596240ab89c5293664149c8cceb6b984fb5309a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8922adacf548bfe3eab0d1bc918b0e3ce6d998f5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a44b388840edbbd47c9b146a5a0d2d07754d1c0d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a42ac940dcd4ea4d5366aa0ccd023763a632d320', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '598eb80f92bac853b2ab81bc8b90c0f779e610e1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c47934ce686da7b46da2cc04135d0ea8ed25e38', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '752a94a6717cf555df2755228a9a0552acac9df3', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '035e6c2b405b510884c02a1bea4a4f0e309b50f1', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcba7c966190720c0bf23ddcc38b86b534aee398', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbba6f956767da444bcd6a4e69850c1f68080fe9', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69fafe5250da02dc2d69faa2c2e6c9588dc50af2', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee925a71b1a1d320cc18d85eaa7f5b94c1addec4', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5e7de6658c05b46ca079126e1f8659db9da0c6', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63680a03b68cf8f610d191c5e099ee482dfdd58a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c525eb1cd850b6566145348fa79d687f0c78306', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ec3a3dd644e025493f3ecb5c257c18034354fc4', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '638989b5e0be5a552ca7966215407f1bca080f14', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e830aef97ba6b2fd55789643aef18df8c0158fb5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be399fb76efe91768d3a67ee6621a02b0877b4bc', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b01ba3189be0ed997d45df1a36340e3af2a12c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ef7820aa5b55e25365dcfc327ab7b03ed7ba83c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b419b4c36c38e2ab807cc617821d912e1637af24', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc6d3ac0bf5eef052b63b4028d732f31cadd252', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82022ef95c6c5926c8dd6f5bbc710632a17afa3a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f82b617ff1301a4b76184c6e749717b8e62793c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30064ed59fcdd3125ac520566dda320ba6cc36bb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319442e02ccdefd5345616d646a0a97c6a528573', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea86cda8097df52ae64a816a77919cfa4b32e774', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcc83b348fd3a8e5c1fd633ee6a2a758010d5286', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29cdcd7486de05d0a17086ff543485b67bfa3f1b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e13d6691ee0ed190d5559068fb003b373baef9d9', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc83e1c5e168071e06e4a69acd08d2295bb902f9', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '583ee18d8d69191a9502f8d62521681a919c2dd7', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbf621546929fec5b014c9752f7c25f969e5a34e', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74500c193832489bdc079b67ea1b45d22d876bb1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff2fcb803065e93388b426163d2119bac9a239b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc81ba359fe6721592e6593000d4b8f6630f1514', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d9b3bffbed823e866402a57e6121beb573d386', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '607a5abf92f6ab46b154ba49eb230ab2a2f0a6dd', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1662e9619a8d29f293c502fc025ef96e27fdf437', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0d14aad08f511538628ae2b25d4efe9001c21f3', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99535a89faf167a7dbb85037b0bda424d21a55c4', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85dfeedc548698d84be35611e4d86f1664ca5fc6', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f3b559425f169ab716c37894e9444e26c98dfd', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efc0150f74d88380b3f11957b878e985756c5b5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9d572d18b3197dab5d28ec6f1e9d39bb85d9341', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8b2e915ae3dd4bc9bdeef79ba43f268c71efa5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98514f813d2adf10802cf8c286dc9e6e8441827', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '649cd85cb1474c1ab6f4ee6e6b083290deb8f066', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1766ec2d44e632326c0a05569308d7420d45e4ec', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74b4f164c42836cfd2c35999cd31df97cfdd3925', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f168ecb6abc0c81aed24a276c402f209da3414ea', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71bd8fbe039700598d6d6e62ac6d39519f6e4a7d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6eebfd1c0efef11a859315205d7066d20eb45bb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6eeac26a203bdadf80d9a59b37828bb6a72b77b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66009a8d154d5007092906757468c45d5289580e', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06c80738b1e01626318508bbddceba46b4fcd40b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187b399662adab20781fa880f92585b35f37df4a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e12419b54e99809947e0a8f274e096f6f1ca253d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '828cc946442a0e6ab6944d2e2315c8c9d0a7b9d0', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd86551cda93447090584407304f83ca3030f154', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdefb574eafb6320e08558a26cd32e4d5cded824', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce0079d9344506f014671d8796ac9351b0f03f1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b9fb7c5bb961ae44fbfa3136b4fa5c4c00f26', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1354b1f3d18ee8d0995342025d15a6e944e44e5b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eefb41d4bce43238aa5d268b73c395f469bd43af', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83171e39689d00d3b47097a5a570dafffd9b0d04', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a238c0d133ac76ee73b307a906921ea3af8d915', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c63559cbf765d7b26e7d89eb7b82a763666176ed', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46544726e64b90b3fb2fbf8ea2e8403e7b00d763', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3b2f698e2066d6fd5fdc6e5a08a094d564b804d', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8396478987d6361156d2b51ddeaf1fb8e39517a4', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b097fb50420ae529849b0b2180f5ec374a4e3394', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a40c330ee35daf58216b5e3ce83a577f801d594', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1785381a67a7d2f17b0bbc63d8624922616b997f', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78651aeed8d3e8839a33fee9fcdca7de733a3b82', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825eda81a6500261f1e51fa0fd7c1529051a6209', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5fbdf015c205152d672dd5afa1c8f7e829a1e1', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}]",Harshit Chopra,60058139,,User,,30,,3,2
686229815,[JENKINS-28335] - Git username and password binding (GSoC 2021),"## [JENKINS-28335](https://issues.jenkins.io/browse/JENKINS-28335) - Add Git Credentials binding for Username and Password

The gitUsernamePassword implementation uses the Jenkins username and password values retrieved through Credential API, to access a remote repository over HTTP protocol. The binding uses the GIT_ASKPASS environment variable to provide credentials requested by a git operation in a pipeline job/freestyle project. Executable script(sh,bat,powershell) is attached/binded to GIT_ASKPASS variable, which is invoked when asked for user’s credentials by HTTP server.

Please refer to the Project page for more details-
https://www.jenkins.io/projects/gsoc/2021/projects/git-credentials-binding/

## Checklist

- [x] I have read the [CONTRIBUTING](https://github.com/jenkinsci/git-plugin/blob/master/CONTRIBUTING.adoc) doc
- [x] I have referenced the Jira issue related to my changes in one or more commit messages
- [x] I have added tests that verify my changes
- [x] Unit tests pass locally with my changes
- [x] I have added documentation as necessary
- [x] No Javadoc warnings were introduced with my changes
- [x] No spotbugs warnings were introduced with my changes
- [x] Documentation in README has been updated as necessary
- [x] Online help has been added and reviewed for any new or modified fields
- [x] I have interactively tested my changes
- [x] Any dependent changes have been merged and published in upstream modules (like git-client-plugin)

## Types of changes

- [x] New feature (non-breaking change which adds functionality)


",True,1104,https://api.github.com/repos/jenkinsci/git-plugin/pulls/1104,https://github.com/jenkinsci/git-plugin/pull/1104,closed,681,1,11,49,4,21,1,0,[{'name': 'enhancement'}],2021-07-08 18:18:31+00:00,2021-07-21 02:29:39+00:00,1066268.0,"12 days, 8:11:08","[{'comment_id': 666594582, 'comment_body': 'I think that this field should be declared `transient` so that it is not stored in the job definition.  I believe the storage in the field is used to pass a value into setRunEnvironmentVariables but should not be considered persistent across jobs.  It is computed based on the launcher used for the current job and the computed value is used immediately to prepare the environment for the credential binding.\r\n```suggestion\r\n    private transient boolean unixNodeType;\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 0, 24, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666595659, 'comment_body': ""Doesn't this risk a class cast exception if the getGitClientInstance returns a JGitAPIImpl instance?"", 'comment_created': datetime.datetime(2021, 7, 9, 0, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666595797, 'comment_body': '```suggestion\r\n                // [#!/usr/bin/env sh] to be used if required, could have some corner cases\r\n```', 'comment_created': datetime.datetime(2021, 7, 9, 0, 28, 47, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666596349, 'comment_body': ""I don't see any mention of `GitUsernamePasswordBind` anywhere else in the code.  Shouldn't this be removed or replaced with a reference to the current class name?\r\n```suggestion\r\nGitUsernamePasswordBind.DisplayName=Git Username and Password\r\n```"", 'comment_created': datetime.datetime(2021, 7, 9, 0, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666598972, 'comment_body': ""Needs the `credentialsId` argument explicitly named\r\n```suggestion\r\nwithCredentials([GitUsernamePassword(credentialsId: 'my-credentials-id')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 9, 0, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666599057, 'comment_body': ""Needs the `credentialsId` argument explicitly named\r\n```suggestion\r\nwithCredentials([GitUsernamePassword(credentialsId: 'my-credentials-id')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 9, 0, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666599249, 'comment_body': ""Needs the `credentialsId` argument explicitly named\r\n```suggestion\r\nwithCredentials([GitUsernamePassword(credentialsId: 'my-credentials-id')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 9, 0, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 667483432, 'comment_body': 'As mentioned in this [comment](https://github.com/jenkinsci/git-plugin/pull/1104#issuecomment-877800361) the method `getCliGitTool` is the key to prevent this risk.\r\nAlso the reason to create getCliGitTool API was to ensure that the binding will only support CLI Git and no other git impls.', 'comment_created': datetime.datetime(2021, 7, 11, 13, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 671575543, 'comment_body': 'I believe this code can be removed because there is no need to check for valid content when showing a pick list.  The pick list can only contain valid content.\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 17, 0, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 672595711, 'comment_body': ""SSH support is not yet ready.  Let's not mention it yet.\r\n```suggestion\r\nThe git plugin provides `Git Username and Password` binding that allows authenticated git operations over *HTTP* and *HTTPS* protocols using command line git in a Pipeline job.\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 20, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 672596243, 'comment_body': 'Hyperlink to the step documentation?\r\n```suggestion\r\nThe git credential bindings are accessible through the link:https://www.jenkins.io/doc/pipeline/steps/credentials-binding/#withcredentials-bind-credentials-to-variables[`withCredentials`] step of the link:https://plugins.jenkins.io/credentials-binding/[Credentials Binding] plugin.\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 20, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 672597957, 'comment_body': 'This seems like an interesting implementation detail, but placing it in a NOTE gives it more emphasis that I think is justified.  The user should not need to do anything with either of these variables.  They are internal implementation details.\r\n```suggestion\r\nTwo variable bindings are used, `GIT_USERNAME` and `GIT_PASSWORD`, to pass the username and password to `sh`, `bat`, and `powershell` steps inside the `withCredentials` block of a Pipeline job.\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 20, 11, 55, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 672598898, 'comment_body': ""Remove the 'Incase' word\r\n```suggestion\r\nFreestyle projects can use git credential binding with the following steps:\r\n```"", 'comment_created': datetime.datetime(2021, 7, 19, 20, 13, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 672599655, 'comment_body': 'Remove the NOTE: emphasis here as well\r\n```suggestion\r\nTwo variable bindings are used, `GIT_USERNAME` and `GIT_PASSWORD`, to pass the username and password to shell, batch, and powershell steps in a Freestyle job.\r\n```', 'comment_created': datetime.datetime(2021, 7, 19, 20, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 673266760, 'comment_body': 'A little in the nitpick zone but should we technically be able to set this? I wonder if we should just exclusively use a `getUnixNodeType()` that does what `isCurrentNodeOSUnix` does?', 'comment_created': datetime.datetime(2021, 7, 20, 16, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'justinharringa', 'type': 'User'}, {'comment_id': 673316569, 'comment_body': 'nitpick: please follow conventional formatting rules (whitespace after comma)', 'comment_created': datetime.datetime(2021, 7, 20, 17, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 673322711, 'comment_body': '`getCliGitTool` could return a null value for a lot of other reasons than just the possibility of git tool being JGit and JGitApache types. I suggest you should make this log statement more general: \r\n\r\n""Unable to perform binding because git tool resolution has failed""', 'comment_created': datetime.datetime(2021, 7, 20, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 673323152, 'comment_body': 'nitpick: formatting (whitespace)', 'comment_created': datetime.datetime(2021, 7, 20, 17, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 673323612, 'comment_body': 'nitpick: formatting', 'comment_created': datetime.datetime(2021, 7, 20, 17, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 673325066, 'comment_body': 'why is this added in the contract to be implemented? Can we not provide the logic assuming the implementation does not change for any reason?', 'comment_created': datetime.datetime(2021, 7, 20, 17, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 673325322, 'comment_body': 'similar to getCliGitTool', 'comment_created': datetime.datetime(2021, 7, 20, 17, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}]","[{'commit_sha': '7dfadd6a430d3019d337bd645969d15081caa745', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af5764fddecc521af382d8e04160980087b3af2b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4528f74f5704dfb607e490d5b96b1734969298ea', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f585328f7f41c6c9b99c53257438914dde5271', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68cd46cb1dc3fc269d85adb21e656603f7731bec', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dad230623a063bde817d4a266be4fad8998838fb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ad9bab15148ea42af183146f6a05c56701d8dc', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57ffb58b90fb267bcfe12ef7ea3a17ecea1b7871', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6a1b15169fe6698fef3432ca45dc7cc29b9f1e4', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4fdcf9a4829ef72a27b37af451a187befabd221', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f107067e52de2a9e69835aa18c1c205180f43169', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '789ed293f92cc25f9de594a59f2a2e4cf2328581', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '013aeb3b50a9c6947f3b9e0ddbfa071d69f3f818', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f5787a3b0a872b9489a143ac7e422e52ccb013', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcbe3f5cbb05884c69bea27b98da4fb6d08e975f', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe7b3c015fdee2bcc0d5c180c3b974dd68de0ec2', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf054d6e8bc6ec554e33efef508c0a68d62df899', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9202c3640d8c95a6c67560f8b436fa4cd626444', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695c3e62d4b2b10132137b6b0d92dc352cfd3443', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57714e40f3665a6bffde04c0b2f6ce298c82a208', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa0ecabb29739ee870dd3415f1d3f8db8395d163', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55ea6fd483058d9e890ee00b30511d156cd61ebd', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503ec96b44e012bab91547f95261235f28cc5a10', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b2924e19f5c350150ecca3114574ad87120cbeb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0c4222b7de15ce0f00d1b994cfd354ef29552d8', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bd7f5149c96263cdd45d689935a34890304de8c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9803b5353873ae14cc9283d1765c767441de9d5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b5cfd1d0939a97f20c248d096f5ceeb7f76512f', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e8a0f640fd8b6429e7e8b4bf0b0e072e4842b38', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '647f753e376211b454a41ad971ad7acc3f943e02', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2fa51b73f25a4ba928b55c499babcf1ac61d144c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27c592626f3aead31f740d8e554399388e7f4d3d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6b973c38859065bddd5c708b3a7e1968b57839a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '141351b6f7f153d1b6833d6b011f47ea835f8cf3', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6b91b03f8fb7dbb49ee268435adf4fead95fefb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75caf52c0c3812cec4307ab3d4bb4158d500cf93', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cadf2a54a5fd067eb25056184d146a812d26958a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce79fbffa80cab19838bec31c0a1c12b1d18cb9d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1336813ef9ab9f3f827517cc9cb67743eff738b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '095c763564261af8b8750e0a9ee5cfd409ab8168', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8dafc7f6197f6d87046567f92387e44041b9c17f', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0149ed6652612e4ea910c9b4c8c5c37e4f3890ec', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fdf35169b7f89186781fe74b435d0340fe7cb24', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc0376c67f2c840ae256fdf63736feafe7d0d2cf', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ac85bf66e7602702b7870fdf22a614e8487b27', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e8473701d443674f95d3960c0111a6fcacf5c53', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4eb86bc1b0e868c029e632fd5584d9b5bffb8dc', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15e24a3e8e5e4973c27d0f86d07212142ba4fece', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea54ae8c341e4ce95052020f4cc3431f39524a93', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}]",Harshit Chopra,60058139,,User,,30,,3,2
684562380,Check the least Cli Git version required ,"## Compare the Cli Git version with the required Git version

The `CliGitAPIImpl` class provides a method `isAtLeastVersion` which returns true is the required git is at-least the cli git version. Since this method have package-private scope thus restricting it's usage outside the plugin/package. To overcome this issue a new public scoped method `compareLeastGitVersion` is create with similar working. 

## Checklist

- [x] I have read the [CONTRIBUTING](https://github.com/jenkinsci/git-client-plugin/blob/master/CONTRIBUTING.adoc) doc
- [x] I have added tests that verify my changes
- [x] Unit tests pass locally with my changes
- [x] I have added documentation as necessary
- [x] No Javadoc warnings were introduced with my changes
- [x] No spotbugs warnings were introduced with my changes
- [x] I have interactively tested my changes

## Types of changes

- [x] New feature (non-breaking change which adds functionality)
",True,724,https://api.github.com/repos/jenkinsci/git-client-plugin/pulls/724,https://github.com/jenkinsci/git-client-plugin/pull/724,closed,27,0,2,6,3,5,1,0,[{'name': 'enhancement'}],2021-07-06 17:40:52+00:00,2021-07-14 05:51:16+00:00,648624.0,"7 days, 12:10:24","[{'comment_id': 665032784, 'comment_body': ""Don't need the comma characters, they will render poorly in the Javadoc\r\n```suggestion\r\n     * @param major required major version for command line git\r\n     * @param minor required minor version for command line git\r\n     * @param rev required revision for command line git\r\n     * @param bugfix required patches for command line git\r\n     * @return true if the command line git version is at least the required version\r\n```"", 'comment_created': datetime.datetime(2021, 7, 7, 4, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 665344390, 'comment_body': 'I believe that Java compare functions are generally expected to return an int with values less than zero meaning the current object is ""less"" than the argument, zero meaning that the current object is the same as the argument, and greater than zero if the current object is ""greater"" than the argument.  See the [String.compareTo javadoc](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#compareTo-java.lang.String-] for more details.\r\n\r\nI think that you want a method name that uses the word `is` rather than `compare` or you need to create a new implementation that does a comparison.  I believe that I used `is` in the original definition because I didn\'t envision a time when we would need to sort a list of git implementations by their version number.  I don\'t think we need to sort git implementations by version number for this case, though I could be misunderstanding your need for this API.\r\n\r\nIf we need ordering / sorting of CliGitAPIImpl objects, then it is probably best to implement the [Comparable interface](https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html)\r\n```suggestion\r\n    public boolean compareLeastGitVersion(int major, int minor, int rev, int bugfix) {\r\n```\r\n\r\nI\'d also be fine if you changes isAtLeastVersion from a private method to a public method.  If the `isAtLeastVersion` name is not clear enough, then adding a new public method with a better name is also fine.', 'comment_created': datetime.datetime(2021, 7, 7, 12, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 666235281, 'comment_body': 'Spelling fix\r\n```suggestion\r\n     * Returns True if the current cli git version is at least the required version\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 14, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 669246043, 'comment_body': '```suggestion\r\n     * Finds if the current cli git version is at-least the required version.\r\n```', 'comment_created': datetime.datetime(2021, 7, 14, 3, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 669246086, 'comment_body': '```suggestion\r\n     * Returns True if the current cli git version is at least the required version.\r\n```', 'comment_created': datetime.datetime(2021, 7, 14, 3, 4, 37, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}]","[{'commit_sha': '5f2b9297a3266b0399d8f81c3bb362c203eec934', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a56e4f1ead89699668ed289d4ef2147552eb272', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b4e2b372a76db447ab9d6be2120cea5eca7087a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc852bbfaa034120c6497361552ef959898c7aa', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98885a8123e625f3ca2881ad92de1b9c2dbd2ab8', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0bec88023132ccd14b6ba07586dac983e6f3ec6', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}]",Harshit Chopra,60058139,,User,,30,,3,2
696148199,Git ssh private key binding(GSoC-21),"## [JENKINS-28335](https://issues.jenkins.io/browse/JENKINS-28335) - Add Git Credentials binding for SSH Private Key

The `gitSshPrivateKey` implementation provides git authentication support over *SSH* protocol
using private key and passphrase credentials of a user. The binding uses two git specific environment
variables depending upon the minimum CLI-git version

-  `GIT_SSH_COMMAND` - If version is greater than 2.3, then the GIT_SSH_COMMAND environment variable provides ssh command including the necessary options which are: path to the private key and host key checking to authenticate and connect git server without using an executable script.

- `SSH_ASKPASS` - If version is less than 2.3, an executable script is attached to the variable which provides ssh command including the necessary options which are: path to the private key and host key checking to authenticate and connect git serve

Please refer to the Project page for more details-
https://www.jenkins.io/projects/gsoc/2021/projects/git-credentials-binding/

## Checklist

- [x] I have read the [CONTRIBUTING](https://github.com/jenkinsci/git-plugin/blob/master/CONTRIBUTING.adoc) doc
- [x] I have referenced the Jira issue related to my changes in one or more commit messages
- [x] Unit tests pass locally with my changes
- [x] No Javadoc warnings were introduced with my changes
- [x] No spotbugs warnings were introduced with my changes
- [x] Documentation in README has been updated as necessary
- [x] Online help has been added and reviewed for any new or modified fields
- [x] I have interactively tested my changes
- [x] Any dependent changes have been merged and published in upstream modules (like git-client-plugin)

## Types of changes

- [x] New feature (non-breaking change which adds functionality)


",False,1111,https://api.github.com/repos/jenkinsci/git-plugin/pulls/1111,https://github.com/jenkinsci/git-plugin/pull/1111,open,845,5,14,106,8,38,2,0,"[{'name': 'enhancement'}, {'name': 'documentation'}]",2021-07-23 18:52:36+00:00,,0.0,,"[{'comment_id': 675956131, 'comment_body': 'Probably need to merge with the master branch to not have this revert to an older version\r\n```suggestion\r\n    <version>4.20</version>\r\n```', 'comment_created': datetime.datetime(2021, 7, 24, 6, 16, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956232, 'comment_body': 'Need to start the symbol with a lower case letter for consistency\r\n```suggestion\r\n    @Symbol(""gitSSHPrivateKey"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 24, 6, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956355, 'comment_body': ""Start with lower case letter\r\n```suggestion\r\nwithCredentials([gitUsernamePassword(credentialsId: 'my-credentials-id', gitToolName: 'git-tool')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 24, 6, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956374, 'comment_body': ""Start with lower case letter\r\n```suggestion\r\nwithCredentials([gitUsernamePassword(credentialsId: 'my-credentials-id', gitToolName: 'git-tool')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 24, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675956378, 'comment_body': ""Start with lower case letter\r\n```suggestion\r\nwithCredentials([gitUsernamePassword(credentialsId: 'my-credentials-id', gitToolName: 'git-tool')]) {\r\n```"", 'comment_created': datetime.datetime(2021, 7, 24, 6, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 675964611, 'comment_body': 'I have mention about reverting of version from 20 to 19 in the gitter chat and the issue that I am facing when the version is set to 20. Also I have mentioned some cases over which the binding is failing in the chat as well, it will certainly make you more informed when performing interactive testing.', 'comment_created': datetime.datetime(2021, 7, 24, 7, 47, 17, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 684308266, 'comment_body': 'Shaded path to the library rather than a direct reference to the library...', 'comment_created': datetime.datetime(2021, 8, 6, 15, 7, 11, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684324931, 'comment_body': 'I was surprised at first as well but I think the answer lies [here](https://github.com/jenkinsci/jenkins/blob/6d80eac7e12e81fa8279f1c9daa384f55a2ce3eb/cli/pom.xml#L133), I guess what they are doing is shading the dependencies starting with org. While using library path starting as `org.apache.` the issue of NoSuchMethodExpection is encounter again.\r\nAlso check this https://github.com/jenkinsci/jenkins/blob/6d80eac7e12e81fa8279f1c9daa384f55a2ce3eb/cli/pom.xml#L74 the sshd-core v2.7.0 which is required by the binding but  is set optional. \r\nWill check more non this and will update on the chat.\r\n', 'comment_created': datetime.datetime(2021, 8, 6, 15, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 684352789, 'comment_body': 'do not use the jenkins-cli copy, you should get this from the sshd plugin', 'comment_created': datetime.datetime(2021, 8, 6, 16, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 684523333, 'comment_body': 'I was able to reduce the dependency to `sshd-common` and change the imports to be direct imports.  It does not fix the GitSCMTest that fails because token-macro plugin fails to initialize, but it does simplify the imports to not refer to the shaded version from `io.jenkins.cli`.\r\n```suggestion\r\n      <artifactId>sshd-common</artifactId>\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 21, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684523839, 'comment_body': ""I'm not sure if this is required (or even safe), but I excluded the transitive dependencies that arrived due to the inclusion of sshd-common.\r\n```suggestion\r\n      <version>2.7.0</version>\r\n      <exclusions> <!-- prevent inclusion in hpi as a transient dependency -->\r\n        <exclusion>\r\n          <groupId>org.slf4j</groupId>\r\n          <artifactId>jcl-over-slf4j</artifactId>\r\n        </exclusion>\r\n        <exclusion>\r\n          <groupId>org.slf4j</groupId>\r\n          <artifactId>slf4j-api</artifactId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n```"", 'comment_created': datetime.datetime(2021, 8, 6, 22, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684525689, 'comment_body': 'With the other two changes ([here](https://github.com/jenkinsci/git-plugin/pull/1111#discussion_r684523333) and [here](https://github.com/jenkinsci/git-plugin/pull/1111#discussion_r684523839)) that precede this change, I was able to switch to directly import the sshd-common symbols.\r\n```suggestion\r\nimport org.apache.sshd.common.config.keys.loader.openssh.OpenSSHKeyPairResourceParser;\r\nimport org.apache.sshd.common.NamedResource;\r\nimport org.apache.sshd.common.config.keys.FilePasswordProvider;\r\nimport org.apache.sshd.common.config.keys.writer.openssh.OpenSSHKeyPairResourceWriter;\r\nimport org.apache.sshd.common.session.SessionContext;\r\nimport org.apache.sshd.common.util.io.SecureByteArrayOutputStream;\r\n```', 'comment_created': datetime.datetime(2021, 8, 6, 22, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684600913, 'comment_body': ""this is likely a recipe for disaster depending on this multiple times in the jenkins ecosystem\r\n\r\nEither:\r\n* a dependency on the `sshd` plugin should be taken\r\n* library plugin extracted\r\n* shade the artifact\r\n \r\nOtherwise you're going to get weird issues when someone updates to a version with conflicting classes"", 'comment_created': datetime.datetime(2021, 8, 7, 7, 56, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 684600989, 'comment_body': 'should be fine', 'comment_created': datetime.datetime(2021, 8, 7, 7, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 684632261, 'comment_body': ""@arpoch I believe Tim has the correct idea.  I've tried using a dependency on the `sshd` plugin and it still generates class not found exception log messages when running Jenkins.  I hope to try shading the sshd-common artifact to see if that will resolve the issue and keep the git plugin somewhat independent of the sshd plugin."", 'comment_created': datetime.datetime(2021, 8, 7, 13, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}, {'comment_id': 684645118, 'comment_body': 'I believe this is what we are trying to do as mentioned here https://stackoverflow.com/questions/48782593/shading-a-dependency-in-maven', 'comment_created': datetime.datetime(2021, 8, 7, 15, 24, 59, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 685417378, 'comment_body': ""Till now what I have learnt from my experiments with maven shade plugin\r\n\r\n- Using the plugin to shade sshd-common artifact requires a separated project pom with no transitive dependency of any sshd artifact. Also the usage of modules in git plugin to achieve desired results doesn't seems to be a viable option. \r\nSo is there another alternative to resolve the error encounter in test failure without shading, if so what efforts would be needed from our side."", 'comment_created': datetime.datetime(2021, 8, 9, 18, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 685441998, 'comment_body': 'A library plugin is an alternative', 'comment_created': datetime.datetime(2021, 8, 9, 18, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 686179056, 'comment_body': ""@timja  could you guide me more on what a library plugin is and how it's developed, what I have explored so far, library plugin is just like a normal plugin structurally but provides a functionality which other plugins could use by making it has there dependency. So taking our case in consideration, the library plugin developed would provide the functionality of decrypting passphrase protected private keys."", 'comment_created': datetime.datetime(2021, 8, 10, 17, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 687135890, 'comment_body': ""docs are here: https://www.jenkins.io/doc/developer/plugin-development/dependencies-and-class-loading/#using-library-wrapper-plugins\r\n\r\nlibrary plugin normally doesn't provide code unless there's something really useful many other plugin's need.\r\n\r\nthey just bundle a dependency once so its version can be controlled and you can tell what version of a dep you will get"", 'comment_created': datetime.datetime(2021, 8, 11, 19, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 687932573, 'comment_body': 'Optional: For better maintainability, personally I would recommend using\r\n\r\n```suggestion\r\nString.format(""%1$s -i %2$s -o StrictHostKeyChecking=no"", sshExePath, getPrivateKeyFile(credentials, tempDir).getRemote())\r\n```\r\n', 'comment_created': datetime.datetime(2021, 8, 12, 17, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687933203, 'comment_body': 'For the same reason, I think whenever a string is getting complex, it should be formatted using a String.format().', 'comment_created': datetime.datetime(2021, 8, 12, 17, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687935700, 'comment_body': 'Possible NPE, should we not first check the size of getPrivateKeys()?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687938920, 'comment_body': 'Why are we passing null values? If these arguments are not needed and are optional then why are we asking them here?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687940788, 'comment_body': 'The caller function of writePrivateKeyOpenSSHFormatted is already throwing these exceptions, what is the reason of catching them here? Also should we not use the logger function to log the reason of error instead of dumping the whole stack trace?', 'comment_created': datetime.datetime(2021, 8, 12, 17, 21, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687941387, 'comment_body': 'You may use .concat() function instead of the + operator.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687942257, 'comment_body': 'again why are we dumping the whole stack trace? We should have a consistent logging statement strategy.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rishabhBudhouliya', 'type': 'User'}, {'comment_id': 687957554, 'comment_body': 'Nice suggestion, will check this out.', 'comment_created': datetime.datetime(2021, 8, 12, 17, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 688342207, 'comment_body': 'All the exceptions related to private key operations(encryption/decryption/write) are being caught here, are you suggesting to use the logger of the current build to output specific reasons why the exception/error was generated or are you suggesting to not handle the exceptions with try/catch here and use the throws keyword  to let the current build handle that for us.', 'comment_created': datetime.datetime(2021, 8, 13, 8, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 735417895, 'comment_body': 'are all constants that mean compile-time this will be replaced with its calculate valued, with concat it should remain a function called every time. When concat constants I think better + operator.', 'comment_created': datetime.datetime(2021, 10, 25, 9, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nfalco79', 'type': 'User'}, {'comment_id': 735419663, 'comment_body': 'instead you could move HEADER definition as constant and use here and in getEncData function', 'comment_created': datetime.datetime(2021, 10, 25, 9, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nfalco79', 'type': 'User'}, {'comment_id': 735841182, 'comment_body': 'looks like a bad merge', 'comment_created': datetime.datetime(2021, 10, 25, 18, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 735841234, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 10, 25, 18, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timja', 'type': 'User'}, {'comment_id': 735854814, 'comment_body': 'Thanks for the quick review, made the changes.', 'comment_created': datetime.datetime(2021, 10, 25, 18, 25, 54, tzinfo=datetime.timezone.utc), 'commenter': 'arpoch', 'type': 'User'}, {'comment_id': 912506265, 'comment_body': '## Stapler: Missing permission check\n\nPotential missing permission check in DescriptorImpl#doFillGitToolNameItems\n\n[Show more details](https://github.com/jenkinsci/git-plugin/security/code-scanning/86)', 'comment_created': datetime.datetime(2022, 7, 3, 16, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 912506266, 'comment_body': '## Jenkins: Plaintext password storage\n\nVariable should be reviewed whether it stored a password and is serialized to disk: privateKey\n\n[Show more details](https://github.com/jenkinsci/git-plugin/security/code-scanning/88)', 'comment_created': datetime.datetime(2022, 7, 3, 16, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'github-advanced-security[bot]', 'type': 'Bot'}, {'comment_id': 960692000, 'comment_body': '...`-o StrictHostKeyChecking=no""`...\r\n\r\nThis seems to go against the https://github.com/jenkinsci/git-client-plugin#ssh-host-key-verification feature.\r\n\r\n@MarkEWaite is that correct?', 'comment_created': datetime.datetime(2022, 9, 1, 13, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'sboardwell', 'type': 'User'}, {'comment_id': 960742142, 'comment_body': 'Agreed @sboardwell .  This needs to be extended to support the host key checking strategy before it is merged.', 'comment_created': datetime.datetime(2022, 9, 1, 14, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'MarkEWaite', 'type': 'User'}]","[{'commit_sha': 'e9c550abedfc91caa29c039d901d3c80296b3f9d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fd5c4ccb547678936f939e01430e093e6753cae', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2125673a2c29e36f326e0edec066e7a21ab0c67', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78a47fb2f1cd17716804426da52f074b1d650dc5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '818599a54985322afb82244fa9f3f48eb1cc80f5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6eeecee5b339c5551635c197fb8cf3cadb2a9c74', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bc31408aad7d88ee407247cceda97de6f14b5b8', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e45ed3301de3d63e6f687d5b823b8fb7ad45b9b9', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9030a2c6d41ddc3f0b52075f00c9c467ae4cd4d6', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9312a70b49cc0c36c94d1c6595eb0765fdad2279', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8f38f39e155729b49a840de8c59478f595060bf', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e17779785feb6c0d4ea790b047d2993bb5edccf', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b53385b6ddf8ab476980e89ee9048916c0e76335', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '588c389cb39d2b7045102804a12c369c0b5904b0', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd70831c30ee4c951e57e49c52b3924770fb3b3a1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '443c0f73949c56421e148aa6587f250b236fd067', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65624c0e056efcf918ac51b63023b98c35887889', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a55e3dd979fe7c70eeb5e51c1b566618af8d22b8', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd38eea03fb53bbb5ac70c10896234358492fff7d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f57be59d49953c3a295b8ca6aefdaf47d9d6650b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df3d33cd6c0903fa00e72cabdd6c4c77a4cc83fb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0996235b89d24af65fde33039b9fc7d80960821a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47588ae03838196389870d4456785d21890a0c12', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7549c5447775e665ca15fd3ea81968f547475e2a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1eeb220a6eabd4a1812b680278623a5b72192db', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96c0103336bc514bbb529100199d8e662e349975', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3ee23a0c7d448085ea92510c86f4d27f6587672', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c218b0bd4ac02a72610b64a13debe76aa97dd4c2', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd596240ab89c5293664149c8cceb6b984fb5309a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8922adacf548bfe3eab0d1bc918b0e3ce6d998f5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a44b388840edbbd47c9b146a5a0d2d07754d1c0d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a42ac940dcd4ea4d5366aa0ccd023763a632d320', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '598eb80f92bac853b2ab81bc8b90c0f779e610e1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c47934ce686da7b46da2cc04135d0ea8ed25e38', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '752a94a6717cf555df2755228a9a0552acac9df3', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '035e6c2b405b510884c02a1bea4a4f0e309b50f1', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcba7c966190720c0bf23ddcc38b86b534aee398', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbba6f956767da444bcd6a4e69850c1f68080fe9', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69fafe5250da02dc2d69faa2c2e6c9588dc50af2', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee925a71b1a1d320cc18d85eaa7f5b94c1addec4', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5e7de6658c05b46ca079126e1f8659db9da0c6', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63680a03b68cf8f610d191c5e099ee482dfdd58a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c525eb1cd850b6566145348fa79d687f0c78306', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ec3a3dd644e025493f3ecb5c257c18034354fc4', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '638989b5e0be5a552ca7966215407f1bca080f14', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e830aef97ba6b2fd55789643aef18df8c0158fb5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be399fb76efe91768d3a67ee6621a02b0877b4bc', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b01ba3189be0ed997d45df1a36340e3af2a12c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ef7820aa5b55e25365dcfc327ab7b03ed7ba83c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b419b4c36c38e2ab807cc617821d912e1637af24', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bc6d3ac0bf5eef052b63b4028d732f31cadd252', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82022ef95c6c5926c8dd6f5bbc710632a17afa3a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f82b617ff1301a4b76184c6e749717b8e62793c', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30064ed59fcdd3125ac520566dda320ba6cc36bb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319442e02ccdefd5345616d646a0a97c6a528573', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea86cda8097df52ae64a816a77919cfa4b32e774', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcc83b348fd3a8e5c1fd633ee6a2a758010d5286', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29cdcd7486de05d0a17086ff543485b67bfa3f1b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e13d6691ee0ed190d5559068fb003b373baef9d9', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc83e1c5e168071e06e4a69acd08d2295bb902f9', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '583ee18d8d69191a9502f8d62521681a919c2dd7', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbf621546929fec5b014c9752f7c25f969e5a34e', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74500c193832489bdc079b67ea1b45d22d876bb1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff2fcb803065e93388b426163d2119bac9a239b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc81ba359fe6721592e6593000d4b8f6630f1514', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6d9b3bffbed823e866402a57e6121beb573d386', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '607a5abf92f6ab46b154ba49eb230ab2a2f0a6dd', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1662e9619a8d29f293c502fc025ef96e27fdf437', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0d14aad08f511538628ae2b25d4efe9001c21f3', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99535a89faf167a7dbb85037b0bda424d21a55c4', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85dfeedc548698d84be35611e4d86f1664ca5fc6', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f3b559425f169ab716c37894e9444e26c98dfd', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efc0150f74d88380b3f11957b878e985756c5b5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9d572d18b3197dab5d28ec6f1e9d39bb85d9341', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8b2e915ae3dd4bc9bdeef79ba43f268c71efa5', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98514f813d2adf10802cf8c286dc9e6e8441827', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '649cd85cb1474c1ab6f4ee6e6b083290deb8f066', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1766ec2d44e632326c0a05569308d7420d45e4ec', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74b4f164c42836cfd2c35999cd31df97cfdd3925', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f168ecb6abc0c81aed24a276c402f209da3414ea', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71bd8fbe039700598d6d6e62ac6d39519f6e4a7d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6eebfd1c0efef11a859315205d7066d20eb45bb', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6eeac26a203bdadf80d9a59b37828bb6a72b77b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66009a8d154d5007092906757468c45d5289580e', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06c80738b1e01626318508bbddceba46b4fcd40b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187b399662adab20781fa880f92585b35f37df4a', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e12419b54e99809947e0a8f274e096f6f1ca253d', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '828cc946442a0e6ab6944d2e2315c8c9d0a7b9d0', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd86551cda93447090584407304f83ca3030f154', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdefb574eafb6320e08558a26cd32e4d5cded824', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ce0079d9344506f014671d8796ac9351b0f03f1', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e5b9fb7c5bb961ae44fbfa3136b4fa5c4c00f26', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1354b1f3d18ee8d0995342025d15a6e944e44e5b', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eefb41d4bce43238aa5d268b73c395f469bd43af', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83171e39689d00d3b47097a5a570dafffd9b0d04', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a238c0d133ac76ee73b307a906921ea3af8d915', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c63559cbf765d7b26e7d89eb7b82a763666176ed', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46544726e64b90b3fb2fbf8ea2e8403e7b00d763', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3b2f698e2066d6fd5fdc6e5a08a094d564b804d', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8396478987d6361156d2b51ddeaf1fb8e39517a4', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b097fb50420ae529849b0b2180f5ec374a4e3394', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a40c330ee35daf58216b5e3ce83a577f801d594', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1785381a67a7d2f17b0bbc63d8624922616b997f', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78651aeed8d3e8839a33fee9fcdca7de733a3b82', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '825eda81a6500261f1e51fa0fd7c1529051a6209', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a5fbdf015c205152d672dd5afa1c8f7e829a1e1', 'committer_username': 'MarkEWaite', 'committer_name': 'Mark Waite', 'committer_email': 'mark.earl.waite@gmail.com', 'commit_date': datetime.datetime(2009, 11, 22, 14, 30, 23, tzinfo=datetime.timezone.utc)}]",Harshit Chopra,60058139,,User,,30,,3,2
695696709,Scope change of getSSHExecutable method,"## getSSHExecutable method scope conversion to public

The CliGitAPIImpl class provides a method `getSSHExecutable` which returns an executable file of ssh installed in Windows environment. Since this method has package-private scope thus restricting it's usage outside the plugin/package. To overcome this issue the method's scope is changed to public.

## Checklist

- [x] I have read the [CONTRIBUTING](https://github.com/jenkinsci/git-client-plugin/blob/master/CONTRIBUTING.adoc) doc
- [x] I have added tests that verify my changes
- [x] Unit tests pass locally with my changes
- [x] I have added documentation as necessary
- [x] No Javadoc warnings were introduced with my changes
- [x] No spotbugs warnings were introduced with my changes
- [x] I have interactively tested my changes

## Types of changes

- [x] Infrastructure change (non-breaking change which updates dependencies or improves infrastructure)

## Further comments
",True,727,https://api.github.com/repos/jenkinsci/git-client-plugin/pulls/727,https://github.com/jenkinsci/git-client-plugin/pull/727,closed,6,2,1,2,0,0,1,0,[{'name': 'enhancement'}],2021-07-23 06:13:55+00:00,2021-07-23 11:22:10+00:00,18495.0,5:08:15,[],"[{'commit_sha': '50535ef69ade7f4184bebcfbdaf1ec49b7ed6166', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}, {'commit_sha': '492d1e3eeeaf20cd29e333710bdf274c75854146', 'committer_username': 'arpoch', 'committer_name': 'Harshit Chopra', 'committer_email': None, 'commit_date': datetime.datetime(2020, 1, 19, 7, 16, 14, tzinfo=datetime.timezone.utc)}]",Harshit Chopra,60058139,,User,,30,,3,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
612587,git-plugin,jenkinsci/git-plugin,Java,1056,667,124,324,5296,19,12,19,"[{'id': 727237413, 'number': 1137, 'closed': datetime.datetime(2021, 9, 6, 0, 20, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 4, 12, 57, 10, tzinfo=datetime.timezone.utc), 'time_taken': 127375.0, 'time_delta': '1 day, 11:22:55', 'additions': 22, 'deletions': 10, 'state': 'closed'}, {'id': 697896039, 'number': 1119, 'closed': datetime.datetime(2021, 7, 27, 14, 22, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 14, 8, 5, tzinfo=datetime.timezone.utc), 'time_taken': 861.0, 'time_delta': '0:14:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 696148199, 'number': 1111, 'closed': None, 'created': datetime.datetime(2021, 7, 23, 18, 52, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 845, 'deletions': 5, 'state': 'open'}, {'id': 686229815, 'number': 1104, 'closed': datetime.datetime(2021, 7, 21, 2, 29, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 8, 18, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1066268.0, 'time_delta': '12 days, 8:11:08', 'additions': 681, 'deletions': 1, 'state': 'closed'}, {'id': 600994654, 'number': 1062, 'closed': datetime.datetime(2022, 11, 23, 13, 45, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 19, 13, 6, tzinfo=datetime.timezone.utc), 'time_taken': 52511570.0, 'time_delta': '607 days, 18:32:50', 'additions': 50, 'deletions': 10, 'state': 'closed'}]"
8263652,git-client-plugin,jenkinsci/git-client-plugin,Java,385,139,115,131,3596,9,12,9,"[{'id': 695696709, 'number': 727, 'closed': datetime.datetime(2021, 7, 23, 11, 22, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 6, 13, 55, tzinfo=datetime.timezone.utc), 'time_taken': 18495.0, 'time_delta': '5:08:15', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 684562380, 'number': 724, 'closed': datetime.datetime(2021, 7, 14, 5, 51, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 17, 40, 52, tzinfo=datetime.timezone.utc), 'time_taken': 648624.0, 'time_delta': '7 days, 12:10:24', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 665136756, 'number': 712, 'closed': datetime.datetime(2021, 7, 14, 5, 52, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 17, 52, 40, tzinfo=datetime.timezone.utc), 'time_taken': 3067173.0, 'time_delta': '35 days, 11:59:33', 'additions': 504, 'deletions': 1, 'state': 'closed'}, {'id': 597242366, 'number': 692, 'closed': datetime.datetime(2021, 4, 3, 20, 49, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 8, 36, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1253610.0, 'time_delta': '14 days, 12:13:30', 'additions': 164, 'deletions': 6, 'state': 'closed'}]"
