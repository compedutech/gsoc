pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
999132734,All: Add support for media links in plugin manifest.json,"<!--

Please prefix the title with the platform you are targetting:

Here are some examples of good titles:

- Desktop: Resolves #123: Added new setting to change font
- Mobile, Desktop: Fixes #456: Fixed config screen error
- All: Resolves #777: Made synchronisation faster

And here's an explanation of the title format:

- ""Desktop"" for the Windows/macOS/Linux app (Electron app)
- ""Mobile"" for the mobile app (or ""Android"" / ""iOS"" if the pull request only applies to one of the mobile platforms)
- ""CLI"" for the CLI app

If it's two platforms, separate them with commas - ""Desktop, Mobile"" or if it's for all platforms, prefix with ""All"".

If it's not related to any platform (such as a translation, change to the documentation, etc.), simply don't add a platform.

Then please append the issue that you've addressed or fixed. Use ""Resolves #123"" for new features or improvements and ""Fixes #123"" for bug fixes.

AND PLEASE READ THE GUIDE: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md

-->
This feature is discussed at [the forum](https://discourse.joplinapp.org/t/add-support-for-image-and-video-links-in-plugin-manifest-json/26438?u=retr0ve)

It adds a media field to manifest.json, a example:
```json
{
    ""media"": [{
        ""url"": ""https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/ImageSources/RoundedCorners_64x64.png"",
        ""type"": ""image/png"",
        ""platform"": ""desktop"",
        ""label"": ""Description""
    }]
}
```
In the json above, the label `member` is a string that serves as an accessible name for the media. It can also serve as alternative text. The `platform` member is also a string that can define the distribution platform for which the specific media should apply to. It is reserved for future plugin systems on mobile devices. Potential values are desktop, and mobile. `type` is the MIME type of the media, it can be `image/jpeg`, `image/png`, `image/gif`, `image/webp`, `video/mp4`, `video/webm`, and `video/ogg`

I've tested this commit locally with the following test case:
- media item without url
- media item with platform other than desktop and mobile
- media item with unsupported MIME type",True,6672,https://api.github.com/repos/laurent22/joplin/pulls/6672,https://github.com/laurent22/joplin/pull/6672,closed,48,4,5,10,6,13,0,0,[],2022-07-18 09:36:18+00:00,2022-08-27 11:11:56+00:00,3461738.0,"40 days, 1:35:38","[{'comment_id': 927496162, 'comment_body': 'We avoid validation code in this script because it may not be current when the plugin is built. Any validation should be done at the app level.', 'comment_created': datetime.datetime(2022, 7, 22, 9, 58, 13, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 927496867, 'comment_body': 'But those are not strings, are they?', 'comment_created': datetime.datetime(2022, 7, 22, 9, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 932865239, 'comment_body': ""Okay. If I understood correctly, I don't need to write validation in webpack script, but I need to validate them while building the Plugin Discovery Website right?"", 'comment_created': datetime.datetime(2022, 7, 29, 4, 49, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 932866085, 'comment_body': 'I changed them into a screenshot object now.', 'comment_created': datetime.datetime(2022, 7, 29, 4, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 933883480, 'comment_body': 'still string[] ?', 'comment_created': datetime.datetime(2022, 7, 30, 20, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 933883578, 'comment_body': 'should be an interface', 'comment_created': datetime.datetime(2022, 7, 30, 20, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 933883775, 'comment_body': 'why would you check the type of this object?? This is an object parsed from JSON - it has no type... You\'re just comparing `""object"" !== ""object""` here.', 'comment_created': datetime.datetime(2022, 7, 30, 20, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 933883908, 'comment_body': 'Yes please leave it here for now, but update to the new interface format - src / label', 'comment_created': datetime.datetime(2022, 7, 30, 20, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 933923361, 'comment_body': 'Thanks for explaining it to me. I removed them now.', 'comment_created': datetime.datetime(2022, 7, 31, 4, 24, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 933928963, 'comment_body': ""But you need to be a lot more thorough with the way you test your code. You shouldn't assume that a particular line does what you think it does without checking.\r\n\r\nIn that particular case if you had done `console.info(typeof o.screenshots[i])` you would have seen that check wasn't useful."", 'comment_created': datetime.datetime(2022, 7, 31, 5, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 933929157, 'comment_body': ""Thanks. I'll keep that in mind."", 'comment_created': datetime.datetime(2022, 7, 31, 5, 43, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 940340172, 'comment_body': 'jepg', 'comment_created': datetime.datetime(2022, 8, 8, 14, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 940822243, 'comment_body': ""Yes, I've run it with my plugin emoji picker. It packs all files under src since the original webpack script does so and I don't need to do anything to pack the screenshots. \r\nI've tested the cases that \r\n- the src is not specified\r\n- the screenshot specified in src does not exist\r\n- the extension is not in the list\r\n- the screenshot is bigger than 1mb\r\n\r\nand they work as expected."", 'comment_created': datetime.datetime(2022, 8, 9, 2, 17, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}]","[{'commit_sha': 'e4ce3721ddf52061ce98fcc99b038ab352a4299f', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f94b7901162b8243b20dc8e224ef326184ab3e74', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80d90c9c7c035a43ec7e7f7412cec86386417fc5', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42758b4e030fb2ed49132c0be54fc6e48f94ca2c', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa1c5e6fe44266e5d6dc9632c29c2159b978873c', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd67e212584a3d2ffcfdfb1c22844b475112b50', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46313e86337aabd5d4062c64ee2af0a60271d3f4', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcc65f85251acca0e5b272402f46a115461c922a', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30e6c9455b3b60b0979b01ce4cd28bd524811be7', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07e2debdf4e3f7a4e807a69bd910032e20a52e7d', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}]",Retrove,10289737,,User,,6,,0,3
1027273817,All: Seperate allPossibleCategories to @joplin/lib,"<!--

Please prefix the title with the platform you are targetting:

Here are some examples of good titles:

- Desktop: Resolves #123: Added new setting to change font
- Mobile, Desktop: Fixes #456: Fixed config screen error
- All: Resolves #777: Made synchronisation faster

And here's an explanation of the title format:

- ""Desktop"" for the Windows/macOS/Linux app (Electron app)
- ""Mobile"" for the mobile app (or ""Android"" / ""iOS"" if the pull request only applies to one of the mobile platforms)
- ""CLI"" for the CLI app

If it's two platforms, separate them with commas - ""Desktop, Mobile"" or if it's for all platforms, prefix with ""All"".

If it's not related to any platform (such as a translation, change to the documentation, etc.), simply don't add a platform.

Then please append the issue that you've addressed or fixed. Use ""Resolves #123"" for new features or improvements and ""Fixes #123"" for bug fixes.

AND PLEASE READ THE GUIDE: https://github.com/laurent22/joplin/blob/dev/CONTRIBUTING.md

-->

To better maintain the plugin categories, I separate allPossibleCategories variable from webpack script to a json file under @joplin/lib.
",True,6754,https://api.github.com/repos/laurent22/joplin/pulls/6754,https://github.com/laurent22/joplin/pull/6754,closed,39,3,3,8,4,12,0,0,[],2022-08-16 07:53:05+00:00,2022-09-09 14:05:09+00:00,2095924.0,"24 days, 6:12:04","[{'comment_id': 948157390, 'comment_body': 'Please make each item an object, and remove the top key:\r\n\r\n```\r\n[\r\n\t{\r\n\t\tname: ""appearance"",\r\n\t},\r\n\t// ......\r\n]\r\n```\r\n\r\nName the file pluginCategories.json', 'comment_created': datetime.datetime(2022, 8, 17, 16, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 948157626, 'comment_body': '`require` statements should be at the top of the file', 'comment_created': datetime.datetime(2022, 8, 17, 16, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 948158024, 'comment_body': '`""@joplin/lib"": ""~2.9"",`', 'comment_created': datetime.datetime(2022, 8, 17, 16, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 948605007, 'comment_body': 'Do you mean this `allPossibleCategories` statement should be on top of other `require` statements? Because it is already on top of the `webpack.config.js`.', 'comment_created': datetime.datetime(2022, 8, 18, 2, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 948612595, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 18, 3, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 948612659, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 8, 18, 3, 16, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 948763126, 'comment_body': ""right, sorry that's fine as it is then"", 'comment_created': datetime.datetime(2022, 8, 18, 7, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 960297771, 'comment_body': '```suggestion\r\n\t\tif (!allPossibleCategories.map(category => { return category.name; }).includes(category)) throw new Error(`${category} is not a valid category. Please make sure that the category name is lowercase. Valid categories are: \\n${allPossibleCategories}\\n`);\r\n```', 'comment_created': datetime.datetime(2022, 9, 1, 7, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'personalizedrefrigerator', 'type': 'User'}, {'comment_id': 960475590, 'comment_body': 'And also `${category.name} is not a valid category`.', 'comment_created': datetime.datetime(2022, 9, 1, 10, 20, 8, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 963162985, 'comment_body': 'I fixed these typo now.', 'comment_created': datetime.datetime(2022, 9, 6, 0, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}, {'comment_id': 963549666, 'comment_body': '> throw new Error(`${category.name}\r\n\r\nIn fact it should be ""category"" here, not ""category.name"", isn\'t it? It doesn\'t look like you have tested or even read your code at all. I made a mistake by suggesting this change, but you need to be responsible for what you\'re doing and not rely on reviewers.', 'comment_created': datetime.datetime(2022, 9, 6, 10, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'laurent22', 'type': 'User'}, {'comment_id': 963807460, 'comment_body': 'tested and fixed now', 'comment_created': datetime.datetime(2022, 9, 6, 14, 50, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Retr0ve', 'type': 'User'}]","[{'commit_sha': '358b0453b7e27f9b7433fadf33610dee6e70d7e1', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c839b30f5fcb6dfe4f056d91a90f5e5f9466ee5f', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9bab91bd317ef4035c5d537421ddd41c680069e7', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3cc0e6ed2227a0381c7a3f91e15055ebc7a1b1c', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fcf2f4e6ce9fe0e1fb0eeac7ffaaf8ed6f83ecb', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d3b87040a9d8268616a4d4ba475a182bcc94e01', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '793321d23f82b44521ee57f54cf1c346026381fd', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa8ff7e4dd590923381ddbe352ab56b74a506d93', 'committer_username': 'Retr0ve', 'committer_name': 'Retrove', 'committer_email': None, 'commit_date': datetime.datetime(2014, 12, 24, 13, 18, 37, tzinfo=datetime.timezone.utc)}]",Retrove,10289737,,User,,6,,0,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
79162682,joplin,laurent22/joplin,TypeScript,4865,44823,483,642,11779,404,244,9,"[{'id': 1027273817, 'number': 6754, 'closed': datetime.datetime(2022, 9, 9, 14, 5, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 7, 53, 5, tzinfo=datetime.timezone.utc), 'time_taken': 2095924.0, 'time_delta': '24 days, 6:12:04', 'additions': 39, 'deletions': 3, 'state': 'closed'}, {'id': 999132734, 'number': 6672, 'closed': datetime.datetime(2022, 8, 27, 11, 11, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 9, 36, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3461738.0, 'time_delta': '40 days, 1:35:38', 'additions': 48, 'deletions': 4, 'state': 'closed'}, {'id': 936466907, 'number': 6513, 'closed': datetime.datetime(2022, 5, 17, 13, 10, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 14, 6, 11, 48, tzinfo=datetime.timezone.utc), 'time_taken': 284323.0, 'time_delta': '3 days, 6:58:43', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 878854717, 'number': 6274, 'closed': datetime.datetime(2022, 3, 28, 16, 13, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 10, 5, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1231683.0, 'time_delta': '14 days, 6:08:03', 'additions': 63, 'deletions': 4, 'state': 'closed'}]"
