pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
438286450,Test branch,"These changes provide support for isolating thread-stacks. It is still a work in progress, assembly code for context restore and switch has some bugs.",False,1,https://api.github.com/repos/ur10/rtems/pulls/1,https://github.com/ur10/rtems/pull/1,open,456,4,15,15,0,19,0,0,[],2020-06-23 03:06:45+00:00,,0.0,,"[{'comment_id': 444109856, 'comment_body': 'you still need to return some integer value that the caller can check, of fatal error in here', 'comment_created': datetime.datetime(2020, 6, 23, 10, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444109998, 'comment_body': 'indentation ', 'comment_created': datetime.datetime(2020, 6, 23, 10, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444112252, 'comment_body': ""That's a shared code between all RTEMS ports. `uint32_t` won't be correct for 64-bit architecture. It's better to make it `uintptr_t`"", 'comment_created': datetime.datetime(2020, 6, 23, 10, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444114551, 'comment_body': ""You may want to separate the calls to the allocated stack memory and setting the permissions on it, that's you call `prot_stack_allocate` from where `bsp_stack_allocate_init` is called. Otherwise, it will be confusing how to get the `page_table_base` from"", 'comment_created': datetime.datetime(2020, 6, 23, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444115637, 'comment_body': ""That's shared code. Assuming addresses are pointers to `uint32_t` isn't correct for 64-bit architectures. Please make it `uintptr_t`"", 'comment_created': datetime.datetime(2020, 6, 23, 10, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444115730, 'comment_body': 'ditto', 'comment_created': datetime.datetime(2020, 6, 23, 10, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444116457, 'comment_body': 'for consistency, please make all addresses types `uintptr_t`', 'comment_created': datetime.datetime(2020, 6, 23, 10, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444116735, 'comment_body': '`uintptr_t`', 'comment_created': datetime.datetime(2020, 6, 23, 10, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444117513, 'comment_body': 'avoid unnecessary white spaces ', 'comment_created': datetime.datetime(2020, 6, 23, 10, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444117961, 'comment_body': 'whitespaces', 'comment_created': datetime.datetime(2020, 6, 23, 10, 18, 6, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444119065, 'comment_body': 'How are you passing the argument to this function?', 'comment_created': datetime.datetime(2020, 6, 23, 10, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444119840, 'comment_body': ""what's that supposed to be doing?"", 'comment_created': datetime.datetime(2020, 6, 23, 10, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444120625, 'comment_body': ""Is see it's `ARM_STACK_PROT_ATTR_OFFSET`, please use the macro instead"", 'comment_created': datetime.datetime(2020, 6, 23, 10, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444124612, 'comment_body': 'Please make that `ARM_CONTEXT_STACK_PROT_ATTR_OFFSET` Also, there are a few #ifdefs that, if defined, will make this offset incorrect. You would want to to #ifdef it too', 'comment_created': datetime.datetime(2020, 6, 23, 10, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444347587, 'comment_body': 'I am a bit confused about this, `prot_stack_allocate` registers the attributes of the allocated stack to a chain, if we call it from `bsp_stack_allocate_init` how do we register the stack attributes structure to the chain? I agree we should definitely not pass the `page_table_base` from here, at least not in this format. I suppose I will have to think about as to how to decide what the `page_table_base` value for each stack should be.', 'comment_created': datetime.datetime(2020, 6, 23, 16, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ur10', 'type': 'User'}, {'comment_id': 444347785, 'comment_body': 'This is a mistake which I have fixed on my local branch, the instruction should be `ldr r0, [r0, #ARM_STACK_PROT_ATTR_OFFSET]`. This way the argument will be passed through the r0 register.', 'comment_created': datetime.datetime(2020, 6, 23, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ur10', 'type': 'User'}, {'comment_id': 444362098, 'comment_body': 'But even after your fix, the code won’t behave correctly after the function returns as you’ve overwritten ‘r0’', 'comment_created': datetime.datetime(2020, 6, 23, 16, 42, 1, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}, {'comment_id': 444383495, 'comment_body': 'Oh, sorry for the confusion. The complete code is\r\n`mov r1, r0`\r\n`ldr r0, [r0,  #ARM_STACK_PROT_ATTR_OFFSET]`\r\n`bl prot_stack_context_switch`\r\n`mov r0, r1`\r\n', 'comment_created': datetime.datetime(2020, 6, 23, 17, 17, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ur10', 'type': 'User'}, {'comment_id': 444386012, 'comment_body': 'No problem, thanks for posting the code', 'comment_created': datetime.datetime(2020, 6, 23, 17, 22, 19, tzinfo=datetime.timezone.utc), 'commenter': 'heshamelmatary', 'type': 'User'}]","[{'commit_sha': 'e1d445fb70cd627a0b1780eaba44fd07f15044ac', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a603cee0f51be134b8bb14d7bd9360bb366f72fe', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '360009cd7970e944c6970840c88822a96549e056', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cdd14ea61d2e2bf2a7b892e0ea3d2a8250ca2f1', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '759f8f6723cc38425dc1432e595f9338a8738ac6', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '000e6fac53fd8a8ab4d6a9fd8aca4c39518b147e', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb3d36996f350430de0c0329d624be89db79d36d', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a4cd56fd3cdc88e7963c0448ba6a4f1249e1d50', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e45d10ee36e1ca1b699d6905bd53880ce5b9f7ce', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32337c0f7529368db2f6085b0d5a61ea1bba0faa', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77f14f605719a3e59aa46c37ff0aa4dcaeb3328a', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd46b5b85dd3fdac60bf95823142c6f9bb452141', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08c9ccccd3fc8ac5594f404a796bbd47ca6f0d87', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '057b95ffa8ba0110322189f611928e73e1dcd875', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa64ec0c3ca9907f27c60ab965dffaefabfc62ef', 'committer_username': 'ur10', 'committer_name': 'UTKARSH RAI', 'committer_email': 'utkarsh.rai60@gmail.com', 'commit_date': datetime.datetime(2018, 3, 17, 12, 45, 46, tzinfo=datetime.timezone.utc)}]",UTKARSH RAI,37475612,utkarsh.rai60@gmail.com,User,,34,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
268549251,rtems,ur10/rtems,,0,0,1,228,33397,2,14,2,"[{'id': 454880025, 'number': 2, 'closed': None, 'created': datetime.datetime(2020, 7, 22, 4, 55, 50, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 694, 'deletions': 7, 'state': 'open'}, {'id': 438286450, 'number': 1, 'closed': None, 'created': datetime.datetime(2020, 6, 23, 3, 6, 45, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 456, 'deletions': 4, 'state': 'open'}]"
