pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
464055999,Feature/graphql semi final,semiFinal PR,True,11,https://api.github.com/repos/reactome/graphql/pulls/11,https://github.com/reactome/graphql/pull/11,closed,9330,2,46,16,1,34,0,0,[],2020-08-06 14:15:13+00:00,2020-08-13 20:48:29+00:00,628396.0,"7 days, 6:33:16","[{'comment_id': 466465153, 'comment_body': 'Sharing comment from PR #10:\r\n\r\nThis is a very frequently seen code block, and it would be nice to refactor the code so that it utilizes a common method. Its not necessary right now, but we should create an issue to track this for future work', 'comment_created': datetime.datetime(2020, 8, 6, 14, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 466465567, 'comment_body': 'Sharing comment from PR #10:\r\n\r\nThis sections hows queries that can be performed, so would it be useful at all to see a couple of examples of output?', 'comment_created': datetime.datetime(2020, 8, 6, 14, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 466616960, 'comment_body': 'Done. Added 5 example screenshots as **Part - C**.\r\nPlease check [here](https://github.com/reactome/graphql/tree/feature/graphqlSemiFinal#part---c-sample-graphql-query-output-examples).\r\n', 'comment_created': datetime.datetime(2020, 8, 6, 18, 49, 20, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466667542, 'comment_body': 'In the second sentence, the part ""needs to be implemented"" might be better written in the present tense to show this project is meant to provide the ability to query any kind of data.  You could say something like ""To provide better flexibility and allow users to query whatever data they need, this project provides a GraphQL interface to Reactome data fetched from a Neo4j database.""', 'comment_created': datetime.datetime(2020, 8, 6, 20, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466668476, 'comment_body': 'The REST-based API is a combination of a front and back end implementation, I think.  It may be better to remove the phrase ""for its backend implementation"" and say ""Reactome currently uses a REST-based API that allows end-users to obtain specific data from a set of predefined end-points"" for the first sentence.', 'comment_created': datetime.datetime(2020, 8, 6, 20, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466669416, 'comment_body': '""within"" can be removed so this sentence reads: ""There are three entrypoints in GraphQL Playground to query data from the Neo4j database:""\r\n\r\nNote GraphQL Playground needs to be capitalized for both words since it is a specific tool and a proper noun.', 'comment_created': datetime.datetime(2020, 8, 6, 20, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466670316, 'comment_body': '""playground"" can be capitalized', 'comment_created': datetime.datetime(2020, 8, 6, 20, 33, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466671091, 'comment_body': 'Instead of ""Lets consider a few cases"", it may be better to write, ""The following are some examples:""', 'comment_created': datetime.datetime(2020, 8, 6, 20, 35, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466671432, 'comment_body': '""playground"" can be capitalized', 'comment_created': datetime.datetime(2020, 8, 6, 20, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466672856, 'comment_body': 'It would be good to specify the classes being defined as Interface and Type are specifically in GraphQL and not the database:\r\n\r\n""The Reactome database is hierarchical in nature.  The top-level classes are often abstract whereas lower-level classes are usually concrete.  Thus, in GraphQL the abstract classes are defined as Interface and others as Type""', 'comment_created': datetime.datetime(2020, 8, 6, 20, 38, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466674516, 'comment_body': ""A note here about why inline-fragments are necessary would be good.  It would help the user to understand that an inline-fragment is used when an interface type is returned by a query which could be any kind of concrete object that implements the interface.  To access fields that exist on a concrete type that implements an interface but doesn't exist on the interface itself, an inline-fragment is needed to tell GraphQL what to retrieve for a specific concrete type."", 'comment_created': datetime.datetime(2020, 8, 6, 20, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466675980, 'comment_body': 'It would help with readability to break these queries up into multiple lines.  Typically, ""MATCH"", ""WHERE"", ""RETURN"" each get their own lines in most queries.  ""UNWIND"" and ""WITH"" can get their own lines as well.', 'comment_created': datetime.datetime(2020, 8, 6, 20, 45, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466677352, 'comment_body': 'Yes, one of the most important and helpful principles in programming for maintainability is the DRY principle (https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).  It helps to put any logic that is reused in one place so if it needs to be updated, fixed, or change, it only needs to be done in a single place.', 'comment_created': datetime.datetime(2020, 8, 6, 20, 47, 54, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466681919, 'comment_body': 'It may be better to show the sample output after each sample query it matches to above so the output has that context.', 'comment_created': datetime.datetime(2020, 8, 6, 20, 57, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jweiser', 'type': 'User'}, {'comment_id': 466828970, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466829020, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466829194, 'comment_body': 'Done, made changes. Copied the same text you described.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466829263, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466829462, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466829576, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 32, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466829790, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 32, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466830115, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 34, 6, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466830580, 'comment_body': 'Done, made changes.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466836707, 'comment_body': 'Done, added query output in the code block. By adding output code blocks the README file is now around 3000 lines.', 'comment_created': datetime.datetime(2020, 8, 7, 5, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 466838487, 'comment_body': 'Please check here --> https://github.com/reactome/graphql/tree/feature/graphqlSemiFinal', 'comment_created': datetime.datetime(2020, 8, 7, 6, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 467061323, 'comment_body': 'An activeUnit resolver would also be good, similar to the CatalystActivity activeUnit resolver', 'comment_created': datetime.datetime(2020, 8, 7, 14, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 467065353, 'comment_body': 'When rendered, this makes for an extremely long README. If the output is going to be that large, I think it should be truncated. Maybe just put the first few lines of the results, then add a `...` and highlight specific aspects of the results. If the README is pages and pages long, it might not be as useful. In the future, perhaps we could create a document that has the full query output.', 'comment_created': datetime.datetime(2020, 8, 7, 14, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 467085302, 'comment_body': 'Sure, We will truncate the result.', 'comment_created': datetime.datetime(2020, 8, 7, 14, 43, 9, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 467090381, 'comment_body': 'Done. Please check the new readme --> https://github.com/reactome/graphql/tree/feature/graphqlSemiFinal', 'comment_created': datetime.datetime(2020, 8, 7, 14, 51, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pratiklodha', 'type': 'User'}, {'comment_id': 467938496, 'comment_body': 'Thanks, that looks much cleaner!', 'comment_created': datetime.datetime(2020, 8, 10, 14, 22, 11, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 468015775, 'comment_body': ""I wonder if this is the most useful output message when no results are found? Something like 'No results returned from graph database. Please make your query is correct' or something to that effect?"", 'comment_created': datetime.datetime(2020, 8, 10, 16, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 468018061, 'comment_body': 'Same thing as https://github.com/reactome/graphql/pull/11/files/20c4f13d45ff06233c1298cade4f932f0c50cf19..910757287421f9b6b25e44542a2a779454433377?file-filters%5B%5D=.js#r468015775', 'comment_created': datetime.datetime(2020, 8, 10, 16, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 468018240, 'comment_body': 'https://github.com/reactome/graphql/pull/11/files/20c4f13d45ff06233c1298cade4f932f0c50cf19..910757287421f9b6b25e44542a2a779454433377?file-filters%5B%5D=.js#r468015775', 'comment_created': datetime.datetime(2020, 8, 10, 16, 9, 58, tzinfo=datetime.timezone.utc), 'commenter': 'cookersjs', 'type': 'User'}, {'comment_id': 468067857, 'comment_body': 'Or `No data found for $VALUE`.', 'comment_created': datetime.datetime(2020, 8, 10, 17, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'SolomonShorser-OICR', 'type': 'User'}]","[{'commit_sha': '57508c9370adb860ab36ab1af887a220e964959f', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9240282e129d4f2aaf3251b09af92643b4ec10a', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd978f4beeb4a794a58d064ee84800ceabf7d6132', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b4e344a999cdca9b7068ea6d4531c449bce099', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b567ff433c3ec66d350f33af0e2fc98537f1f3e', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebf0dd72481486c18e643cec108b806101c5aae4', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00b6af12b5e58212c1a88227e284313867f8b40e', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60a95e1f1b9f1f441577e4c226a5c6627d66a1f3', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac7a4c2cab9b43c9cd860001b67c068f16be9f23', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20c4f13d45ff06233c1298cade4f932f0c50cf19', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db2fd756b566558d4c35c0369d0e89fbca37d00d', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1823c6bd29ce190e0e8678bc471dbcf386154c', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': '910757287421f9b6b25e44542a2a779454433377', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e8b9ebb235fff2da6f2b852d1bee47a89a2f36', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b55556ac6eb863a7e9c5bb15010a337710ac5d54', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2c8fdac08cf2b346f5cb5425f987777cd198d7', 'committer_username': 'pratiklodha', 'committer_name': 'Pratik Lodha', 'committer_email': 'pratiklodha01@gmail.com', 'commit_date': datetime.datetime(2015, 11, 3, 5, 47, 12, tzinfo=datetime.timezone.utc)}]",Pratik Lodha,15624833,pratiklodha01@gmail.com,User,,91,,3,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
263804176,graphql,reactome/graphql,JavaScript,1,0,6,2,18,0,2,0,"[{'id': 464055999, 'number': 11, 'closed': datetime.datetime(2020, 8, 13, 20, 48, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 14, 15, 13, tzinfo=datetime.timezone.utc), 'time_taken': 628396.0, 'time_delta': '7 days, 6:33:16', 'additions': 9330, 'deletions': 2, 'state': 'closed'}, {'id': 463807192, 'number': 10, 'closed': datetime.datetime(2020, 8, 6, 14, 17, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 6, 13, 48, tzinfo=datetime.timezone.utc), 'time_taken': 29005.0, 'time_delta': '8:03:25', 'additions': 8796, 'deletions': 2, 'state': 'closed'}, {'id': 463363976, 'number': 9, 'closed': datetime.datetime(2020, 8, 6, 14, 17, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 12, 52, 29, tzinfo=datetime.timezone.utc), 'time_taken': 91484.0, 'time_delta': '1 day, 1:24:44', 'additions': 8774, 'deletions': 2, 'state': 'closed'}, {'id': 461103883, 'number': 8, 'closed': datetime.datetime(2020, 8, 6, 14, 17, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 1, 13, 13, 55, tzinfo=datetime.timezone.utc), 'time_taken': 435798.0, 'time_delta': '5 days, 1:03:18', 'additions': 8561, 'deletions': 2, 'state': 'closed'}, {'id': 454113783, 'number': 7, 'closed': datetime.datetime(2020, 8, 6, 14, 17, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 4, 33, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1417402.0, 'time_delta': '16 days, 9:43:22', 'additions': 8505, 'deletions': 2, 'state': 'closed'}, {'id': 453614633, 'number': 6, 'closed': datetime.datetime(2020, 7, 21, 4, 36, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 16, 25, 52, tzinfo=datetime.timezone.utc), 'time_taken': 43824.0, 'time_delta': '12:10:24', 'additions': 7519, 'deletions': 2, 'state': 'closed'}, {'id': 442463138, 'number': 5, 'closed': datetime.datetime(2020, 7, 1, 6, 10, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 6, 2, 15, tzinfo=datetime.timezone.utc), 'time_taken': 473.0, 'time_delta': '0:07:53', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 442453496, 'number': 4, 'closed': datetime.datetime(2020, 7, 1, 5, 34, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 5, 34, 1, tzinfo=datetime.timezone.utc), 'time_taken': 13.0, 'time_delta': '0:00:13', 'additions': 7427, 'deletions': 2, 'state': 'closed'}, {'id': 438995561, 'number': 3, 'closed': datetime.datetime(2020, 6, 24, 6, 39, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 24, 6, 38, 48, tzinfo=datetime.timezone.utc), 'time_taken': 15.0, 'time_delta': '0:00:15', 'additions': 36, 'deletions': 18, 'state': 'closed'}, {'id': 426700177, 'number': 2, 'closed': datetime.datetime(2020, 6, 2, 16, 35, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 16, 35, 9, tzinfo=datetime.timezone.utc), 'time_taken': 39.0, 'time_delta': '0:00:39', 'additions': 10721, 'deletions': 0, 'state': 'closed'}, {'id': 426425970, 'number': 1, 'closed': datetime.datetime(2020, 6, 24, 5, 45, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 8, 17, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1891693.0, 'time_delta': '21 days, 21:28:13', 'additions': 11549, 'deletions': 0, 'state': 'closed'}]"
