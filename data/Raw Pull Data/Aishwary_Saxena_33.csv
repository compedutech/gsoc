pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
656129407,Create activity button component frontend unit tests,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #NA.
2. This PR does the following: 
- Adds frontend unit tests for `create-activity-button.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![image](https://user-images.githubusercontent.com/26626415/119961277-7ce76700-bfc3-11eb-9624-e4f2f6d79f8a.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,12936,https://api.github.com/repos/oppia/oppia/pulls/12936,https://github.com/oppia/oppia/pull/12936,closed,400,70,6,21,17,80,0,2,[],2021-05-28 09:18:28+00:00,2021-06-06 07:46:10+00:00,772062.0,"8 days, 22:27:42","[{'comment_id': 641839277, 'comment_body': 'This function does not seem like it returns anything, right?', 'comment_created': datetime.datetime(2021, 5, 28, 22, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 641839535, 'comment_body': 'Also, more generally, avoid making changes to source files for frontend test coverage PRs unless it is absolutely necessary.', 'comment_created': datetime.datetime(2021, 5, 28, 22, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 641840146, 'comment_body': 'Do we want a pre-check for these before `ngOnInit` is called?', 'comment_created': datetime.datetime(2021, 5, 28, 22, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 641840350, 'comment_body': 'Ditto: Please add pre-checks.', 'comment_created': datetime.datetime(2021, 5, 28, 22, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 641840518, 'comment_body': 'What are we expecting the output to be here? Also, do we need a pre-check?', 'comment_created': datetime.datetime(2021, 5, 28, 22, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 641844940, 'comment_body': ""We are expecting it to return void. I don't think we need a pre-check here. We are just checking if the function terminates when `creationInProgress` is `true` [here](https://github.com/oppia/oppia/pull/12936/files#diff-18b57c9d65ff111b9d10b87671ac5aadd027ffeaf361d8e341ad4342c7f05f98L61-L63)\r\n\r\n"", 'comment_created': datetime.datetime(2021, 5, 28, 22, 43, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 641845349, 'comment_body': 'Ah I see, thanks!', 'comment_created': datetime.datetime(2021, 5, 28, 22, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 641847176, 'comment_body': 'Yep, it does not.\r\n\r\nI added the changes as, `canCreateCollections` was not being set to `true` before the control reached [this](https://github.com/oppia/oppia/blob/32627e423d32b015720e2c1009fd4eca0aad04dc/core/templates/components/button-directives/create-activity-button.component.ts#L97) line hence inside the ngOnInit function, the value of `canCreateCollections` was false and we were not able to enter the else block.\r\n\r\nIs there any other way to test this code, without using `await`?', 'comment_created': datetime.datetime(2021, 5, 28, 22, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 641852228, 'comment_body': 'Yes, that would be better. Added pre-checks.', 'comment_created': datetime.datetime(2021, 5, 28, 23, 18, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 641852270, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 5, 28, 23, 18, 39, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 641859602, 'comment_body': ""However, I think you might have uncovered a possible bug in the code.\r\n\r\ngetUserInfoAsync() only sets `canCreateCollections` after the backend call completes. But we seem to use `canCreateCollections` outside the success callback so it could execute even if the call does not complete.\r\n\r\nTo answer your question, yep, it is possible. You'll just need to move more of the logic in to the success callback of the async function.\r\n\r\n```ts\r\n    this.userService.getUserInfoAsync().then(userInfo => {\r\n      this.canCreateCollections = userInfo.canCreateCollections();\r\n      this.userIsLoggedIn = userInfo.isLoggedIn();\r\n      // If the user clicked on a 'create' button to get to the dashboard,\r\n      // open the create modal immediately (or redirect to the exploration\r\n      // editor if the create modal does not need to be shown).\r\n      if (this.urlService.getUrlParams().mode === 'create') {\r\n        if (!this.canCreateCollections) {\r\n          this.explorationCreationService.createNewExploration();\r\n        } else {\r\n          this.initCreationProcess();\r\n        }\r\n      }\r\n     });\r\n```\r\n\r\nThat said, I'm fine with the current approach you have. It does the same thing and looks better. :)\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2021, 5, 28, 23, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 642023611, 'comment_body': ""async ngOnInit is not a good practice (this is perfectly fine code, but its counter intuitive). Please undo this change. Angular calls this function before the view renders,  and it won't wait for the promise to resolve. Using async await will make error handling a pain here. Also, this will cause the life cycle hooks to end in different order.\r\n\r\nHere is some more context: https://github.com/angular/angular/issues/17420"", 'comment_created': datetime.datetime(2021, 5, 30, 5, 50, 20, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 642209959, 'comment_body': 'Can we resolve to a full UserInfo object? that might be better', 'comment_created': datetime.datetime(2021, 5, 31, 4, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642210127, 'comment_body': 'Do you need all of these functions in the mock? ', 'comment_created': datetime.datetime(2021, 5, 31, 4, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642210664, 'comment_body': ""Need to work on the names... Don't try to name it based on the code... Try to think about it more like a user. What this checks is basically that all the initializations happen.\r\n\r\nMaybe rename this to:\r\nshould initialize component properties and then begin creation process\r\n\r\n(Try to work on the names for the other suites, and I'll take a look again)"", 'comment_created': datetime.datetime(2021, 5, 31, 5, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642210866, 'comment_body': 'This is a good test name', 'comment_created': datetime.datetime(2021, 5, 31, 5, 2, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642211099, 'comment_body': 'Names should be of the form \r\n\r\nshould do something if/when some ""trigger"" happens', 'comment_created': datetime.datetime(2021, 5, 31, 5, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642211877, 'comment_body': 'Why do you need this? In the past timeouts in the code have resulted in flaky tests... Just want to make sure this is needed, before adding it. ', 'comment_created': datetime.datetime(2021, 5, 31, 5, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 642383070, 'comment_body': 'Added 2 types of user info - one who can create collections and one who cannot.', 'comment_created': datetime.datetime(2021, 5, 31, 10, 19, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 642383093, 'comment_body': 'Nope. Removed unused functions.', 'comment_created': datetime.datetime(2021, 5, 31, 10, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 642383128, 'comment_body': 'Renamed the tests, PTAL!', 'comment_created': datetime.datetime(2021, 5, 31, 10, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 642383186, 'comment_body': 'Renamed', 'comment_created': datetime.datetime(2021, 5, 31, 10, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 642383212, 'comment_body': ""Yep, we don't need that, moreover, `opt.beforeDismiss` is undefined in this case. Removed setTimeout. \r\n\r\n(We are using this at many other places in the codebase, may need to check them too once)"", 'comment_created': datetime.datetime(2021, 5, 31, 10, 19, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 642681131, 'comment_body': ""Is this a general construct? If so, why isn't it defined somewhere more central? /cc @srijanreddy98 "", 'comment_created': datetime.datetime(2021, 5, 31, 21, 26, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642681603, 'comment_body': 'This is a bit awkwardly worded -- perhaps userInfoForCollectionCreator, userInfoForNonCollectionCreator perhaps.', 'comment_created': datetime.datetime(2021, 5, 31, 21, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642681964, 'comment_body': 'Should create what ...?\r\n\r\nPlease have the describe/it blocks together be complete sentences of the form ""X should..."", where X is the thing being described.', 'comment_created': datetime.datetime(2021, 5, 31, 21, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642687367, 'comment_body': 'What is the difference between ""initialize"" and ""begin""?\r\n\r\nWhat is the ""creation process"" that\'s being referred to here? Could you explain it in simpler terms? From what I can see, the test is checking that various random things have been called, and I don\'t see how that relates to the description of the test. Try to have a more specific description that matches what is being checked for in the implementation of the test.', 'comment_created': datetime.datetime(2021, 5, 31, 21, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642687645, 'comment_body': 'What is the point of this check and the one on the next line (from a ""testing the interface"" perspective)?', 'comment_created': datetime.datetime(2021, 5, 31, 21, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642687825, 'comment_body': 'Perhaps: it should create a new exploration automatically if the user cannot create collections', 'comment_created': datetime.datetime(2021, 5, 31, 21, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642687859, 'comment_body': 'Why do we need this and the next line?', 'comment_created': datetime.datetime(2021, 5, 31, 21, 58, 7, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642688201, 'comment_body': 'It\'s not clear to me that the return value being undefined corresponds to the creation not happening. Note that it should not be necessary to refer to the actual code in order to understand the test.\r\n\r\nCan you write this a different way? You might need to tweak some stuff in the main file to signal whether initCreationProcess() succeeded or failed. Or you might have a test that checks the side effects (e.g. if initCreationProcess() calls some creation method you can check that it is not called). In either case you should also have a ""pre-check"" in this test that verifies that the behaviour in question works differently when there are no other creations in progress.', 'comment_created': datetime.datetime(2021, 5, 31, 22, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642688370, 'comment_body': 'How is this different from https://github.com/oppia/oppia/pull/12936/files#diff-c6bbc8b315fa5210ba8944e75fc8abb35cca1ca8b84b8e074ab017d687aeffccR173 ?', 'comment_created': datetime.datetime(2021, 5, 31, 22, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642688688, 'comment_body': ""This is a good test statement but the test doesn't check this. You need to have some kind of check that the modal is actually closed (and a similar check before that verifies that the modal is open before the action is taken)."", 'comment_created': datetime.datetime(2021, 5, 31, 22, 2, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642689092, 'comment_body': 'You should have parity in the checks for similar tests. E.g. for this one there should be a check that replaceSpy is not called.', 'comment_created': datetime.datetime(2021, 5, 31, 22, 3, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643582394, 'comment_body': 'There is a problem with the code. When `canCreateCollections` is `true` [here](https://github.com/oppia/oppia/blob/f753ff5929ca70a32b2fc22d5f9edb0dec8d8ccc/core/templates/components/button-directives/create-activity-button.component.ts#L97), then `initCreationProcess()` is called, but [this](https://github.com/oppia/oppia/blob/f753ff5929ca70a32b2fc22d5f9edb0dec8d8ccc/core/templates/components/button-directives/create-activity-button.component.ts#L68) line is executed only if `canCreateCollections` is false.\r\n\r\nSo, I had to check `initCreationProcess` separately, with `canCreateCollections = false`. Also, changed the name of the other tests to denote that it begins `activity` ceation.', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582400, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582408, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582416, 'comment_body': 'Thanks for the comment. I was trying to test every call that is being made, to be sure that everything works. But, I got the point that we should only test the interface. Removed the lines.', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582440, 'comment_body': 'Reworded the test description', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582447, 'comment_body': 'Done\r\n\r\n(I added the test name as it was in the [angular testing guide](https://angular.io/guide/testing-components-basics#beforeeach))', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582455, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582518, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 2, 1, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643582779, 'comment_body': 'Changed the test.', 'comment_created': datetime.datetime(2021, 6, 2, 1, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643584151, 'comment_body': 'I think, only the success and rejection callback of the modal is needed to be tested (which is happening), but the test description is different. Should I change the test description accordingly or is testing whether a modal is opened or closed the right way to go?', 'comment_created': datetime.datetime(2021, 6, 2, 1, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643684227, 'comment_body': ""Two comments here:\r\n1> This is present in UrlService. Why not just export it from there and import here.\r\n2> Can't this just be `Record<string, string>`? Why do we need an interface for this? https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype\r\n"", 'comment_created': datetime.datetime(2021, 6, 2, 6, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 643717009, 'comment_body': ""Yup, note that testing calls is a bit of an antipattern. It often results in tests that are too interface-specific. See a similar comment I left on @Radesh-kumar's PR: https://github.com/oppia/oppia/pull/12944#discussion_r643709534 "", 'comment_created': datetime.datetime(2021, 6, 2, 7, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643717770, 'comment_body': 'As long as the test description and implementation match, and it tests something useful (that could conceivably go wrong and relates to what an external observer sees rather than an implementation detail) then things should be fine.', 'comment_created': datetime.datetime(2021, 6, 2, 7, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643719655, 'comment_body': ""Nit: Conceptually, it may make more sense for these three expectations to be in reverse order: First, the user is logged in. Then, we find that they can't create collections. Finally, we confirm that the exploration creation service has been called.\r\n\r\nI.e. try to have  each test tell a coherent story. That makes the test easier to follow."", 'comment_created': datetime.datetime(2021, 6, 2, 7, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643720510, 'comment_body': 'More like ""should not start a new creation process"" right? (The current phrasing suggests stopping the existing one.)', 'comment_created': datetime.datetime(2021, 6, 2, 7, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643720748, 'comment_body': ""Just to check, shouldn't this be an expectation (wouldn't it be expected to happen as a consequence of calling initCreationProcess())?"", 'comment_created': datetime.datetime(2021, 6, 2, 7, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643722552, 'comment_body': ""Why not fix the code? That's kind of the point of doing the tests -- if the tests uncover a bug, then fix the bug, rather than leave the bug there and try to test a pathway that can't occur in practice."", 'comment_created': datetime.datetime(2021, 6, 2, 7, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643726128, 'comment_body': 'Sorry -- was this description changed from before? Now this test isn\'t testing the opposite of the previous test (based on the description) so I would withdraw the replaceSpy comment. Though, in that spirit, it might make sense to have a separate test along the lines of: ""it should not redirect user when user clicks create button and is on creator dashboard page"".', 'comment_created': datetime.datetime(2021, 6, 2, 7, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 643860047, 'comment_body': 'I have used the 1st option', 'comment_created': datetime.datetime(2021, 6, 2, 11, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643863695, 'comment_body': 'I may have misjudged the code, this pathway is possible, when `initCreationProcess` is not called from `ngOnInt` but by clicking on the create button.\r\n\r\nRegarding the comment above, I tried to completely remove the functionality to create collections, but then it was going to affect a lot of e2e tests as well. So, after discussion with @kevintab95 we decided to do that in a separate PR.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 2, 11, 21, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643872395, 'comment_body': 'Changed the description.', 'comment_created': datetime.datetime(2021, 6, 2, 11, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643899347, 'comment_body': 'Those might essentially be the same tests, only differing by the replaceSpy line. I have changed the description to `should not redirect user but open a create activity modal if user can create collections and is on creator dashboard page` to accommodate both tests.', 'comment_created': datetime.datetime(2021, 6, 2, 12, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643900093, 'comment_body': 'Noted, thanks!', 'comment_created': datetime.datetime(2021, 6, 2, 12, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643901841, 'comment_body': 'Yep, that sounds better. Changed', 'comment_created': datetime.datetime(2021, 6, 2, 12, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643902725, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 2, 12, 16, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 643921830, 'comment_body': 'Yep, changed it to an expectation', 'comment_created': datetime.datetime(2021, 6, 2, 12, 41, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645192321, 'comment_body': 'OK, but then I go back to the earlier question ... how is this different from the already-existing similar test above?', 'comment_created': datetime.datetime(2021, 6, 3, 23, 25, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645195412, 'comment_body': 'Should there be a parallel check for this in the previous test?', 'comment_created': datetime.datetime(2021, 6, 3, 23, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645195682, 'comment_body': 'Name of spy does not match name of function.', 'comment_created': datetime.datetime(2021, 6, 3, 23, 35, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645196602, 'comment_body': ""You'd probably want to add another test after this to verify that the method on siteAnalyticsService is called. That's an example of an external side effect that should be validated."", 'comment_created': datetime.datetime(2021, 6, 3, 23, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645224003, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 4, 1, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645224006, 'comment_body': 'Changed', 'comment_created': datetime.datetime(2021, 6, 4, 1, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645224012, 'comment_body': 'Yes, added', 'comment_created': datetime.datetime(2021, 6, 4, 1, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645224095, 'comment_body': '- This test checks the condition when - user is on the creator dashboard page & cannot create collections.\r\n- The test above checks the condition when - user is redirected to creator dashboard after they log in & cannot create collections.\r\n\r\nModified the test description to state the same.', 'comment_created': datetime.datetime(2021, 6, 4, 1, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645299993, 'comment_body': 'Here\'s the issue I have with this, though. If you look at the body of this test, there is no mention of redirection to creator dashboard. So I think your test description is ""breaking out of the boundaries"" here. It should be self-contained with regards to the body of the test (i.e. the test body should obviously be setting up the conditions needed and then executing the test, and it should be easy to tie the test body back to the description).\r\n\r\nTry again?', 'comment_created': datetime.datetime(2021, 6, 4, 5, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645300226, 'comment_body': ""This one, too -- I don't see anything in the test itself about redirection, either asserting it or setting it up etc., so it's hard for me to understand how the body of the test actually tests the thing in the description (which is the main thing the reviewer is looking for)."", 'comment_created': datetime.datetime(2021, 6, 4, 5, 33, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645300582, 'comment_body': 'No, I explicitly asked for a separate test here because you are testing a separate thing. This test checks redirection. A separate test should check analytics.\r\n\r\nAgain, have the test body match the test description. This is a very important fundamental point.', 'comment_created': datetime.datetime(2021, 6, 4, 5, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645615749, 'comment_body': 'Made some changes, PTAL', 'comment_created': datetime.datetime(2021, 6, 4, 14, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645615850, 'comment_body': 'Made changes', 'comment_created': datetime.datetime(2021, 6, 4, 14, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645616020, 'comment_body': 'Ah, alright. Added another test', 'comment_created': datetime.datetime(2021, 6, 4, 14, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645765510, 'comment_body': 'Which part of this implementation guarantees that ""the user is on the creator dashboard page""?', 'comment_created': datetime.datetime(2021, 6, 4, 18, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645766921, 'comment_body': 'it should stop the creation process when there is an error with the XXX modal opening\r\n\r\n(or similar -- ""handle modal\'s failure callback is a bit too \'in the weeds\'"", and ""handle"" is not a specific word and should generally be avoided)', 'comment_created': datetime.datetime(2021, 6, 4, 18, 19, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645767157, 'comment_body': 'Can this spy on a specific modal (or be applied to a specific modal) rather than all modals in general?', 'comment_created': datetime.datetime(2021, 6, 4, 18, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645907505, 'comment_body': 'Changed the test description', 'comment_created': datetime.datetime(2021, 6, 4, 23, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645907514, 'comment_body': 'Changed', 'comment_created': datetime.datetime(2021, 6, 4, 23, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645907531, 'comment_body': 'modalSpy can only spy on all modal in general, but we can check if it was called with a specific spy. Changed the test', 'comment_created': datetime.datetime(2021, 6, 4, 23, 49, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '7cc8793743585e0c96fccc54d1249f5fb24269da', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9908fdae9d20169a72100905bceef26121665f97', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c643e7187c37f3a7f3462e3b51d77385493e60dd', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '216b7044a0a7021521d63a07dd7fc5a90d462def', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6f9fa8163034bac87b835e7f4cebe8788f9156', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d270b5c9d867230dd19df328fa3f65a87a844e8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbbbe383b95f3884e94b1641e35353cd5f447096', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c4f9208febd15a5a18366352dff85004071e153', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7746e63a7f3d2905c3f2d1645567d39163964763', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e89fdb981521b2313c2c4e1be573738498f5693', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf89ea4e24ee38aa5993fef10281b1da871dccea', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d61449e4a2deab99b0598aee05fd6f8c4690ce5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '552cf37c65cdfdaf72072168be929703ce94b12f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4448f7947debaaae0de4a176d20168f45c040d07', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53773c1607a3cce2e79658c9352b882d3eb5d929', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2e5064b2647475280b849fcea3addb3706723d0', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152abeb05710666fcfe5376f4f21e41456a1b099', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8cf0df8c7cc8815d6b7456a5d6f14495d2cbe389', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cd230c52a3b273e85623922ea8097bff768a5a5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42c05de53126082cbf8608e39daa1b7c09734207', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94a6cfb6026e68fa293028022f82b51d8f02322f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
658211699,Graph layout service test,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #NA.
2. This PR does the following: Adds frontend unit tests for `graph-layout-service`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![Screenshot from 2021-05-31 13-35-53](https://user-images.githubusercontent.com/26626415/120183238-12d1fa80-c22d-11eb-80b0-ae73e1c018ed.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,12946,https://api.github.com/repos/oppia/oppia/pulls/12946,https://github.com/oppia/oppia/pull/12946,closed,1346,1,2,21,13,92,0,3,[],2021-05-31 10:43:07+00:00,2021-06-07 08:16:07+00:00,595980.0,"6 days, 21:33:00","[{'comment_id': 642649253, 'comment_body': 'Call this expectedAdjacencyLists, so that it\'s clear it\'s the expected value; use a similar naming convention for other ""expected"" variables. You could also just inline this varaible if you like.', 'comment_created': datetime.datetime(2021, 5, 31, 19, 26, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642649703, 'comment_body': ""Think about the behaviour and requirements for this. You don't just want the service to return indentation levels, you want it to return the correct ones. So, write out the exact requirements for this service, and then have tests that cover each requirement."", 'comment_created': datetime.datetime(2021, 5, 31, 19, 27, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642649994, 'comment_body': 'Same thing, don\'t just test that it can ""get"" something, test that the thing returned is correct. Enumerate the requirements for getAugmentedLinks() and test each of those requirements using examples that are designed to catch the different cases.', 'comment_created': datetime.datetime(2021, 5, 31, 19, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642657101, 'comment_body': 'This isn\'t clear, I don\'t understand what it is returning. Could you rewrite this to form a clear sentence that would complete the sentence ""Graph Layout Service should ....""?', 'comment_created': datetime.datetime(2021, 5, 31, 19, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642657244, 'comment_body': ""Width is misspelled.\r\n\r\nDon't just test with one example. Try a few different examples probing corner cases. Otherwise this is just optimizing for coverage and not behaviour-checking."", 'comment_created': datetime.datetime(2021, 5, 31, 19, 54, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642658069, 'comment_body': 'Again state clearly/explicitly what this is testing. In this case it sounds a bit like: ""it should return the last computed arrangement"" (if you\'re testing getLastComputedArrangement). If that\'s the case you should just call computeLayout and store it in a variable, then check that the next call to getLastComputedArrangement matches that.\r\n\r\nYou would then have separate test(s) to verify that computeLayout actually does the right thing in different cases.', 'comment_created': datetime.datetime(2021, 5, 31, 19, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642658193, 'comment_body': ""Again, you can't just do one example and say it's tested. Figure out the requirements and have tests for all the different cases based on the requirements."", 'comment_created': datetime.datetime(2021, 5, 31, 19, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 642658466, 'comment_body': 'What are the requirements for modifyPositionValues? List them, and test according to those requirements.', 'comment_created': datetime.datetime(2021, 5, 31, 19, 58, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644106983, 'comment_body': 'Added a seperate tests', 'comment_created': datetime.datetime(2021, 6, 2, 16, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644107197, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 2, 16, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644107629, 'comment_body': 'Added another test', 'comment_created': datetime.datetime(2021, 6, 2, 16, 2, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644116654, 'comment_body': 'Reworded', 'comment_created': datetime.datetime(2021, 6, 2, 16, 13, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644289318, 'comment_body': 'Added more tests', 'comment_created': datetime.datetime(2021, 6, 2, 20, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644295027, 'comment_body': 'Added another test', 'comment_created': datetime.datetime(2021, 6, 2, 20, 24, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644301433, 'comment_body': 'Changed the test', 'comment_created': datetime.datetime(2021, 6, 2, 20, 34, 24, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644339443, 'comment_body': 'Changed the tests ', 'comment_created': datetime.datetime(2021, 6, 2, 21, 41, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644350687, 'comment_body': 'Have the requirement be clearer here -- what is the definition of a ""correct"" indentation level? Be specific about what aspect the test is testing (e.g. your next test name is pretty good).', 'comment_created': datetime.datetime(2021, 6, 2, 22, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644351159, 'comment_body': ""There's too much data here, which obscures what you're trying to check. Can you just validate the correctness of the Bezier curves as stated in the test description?"", 'comment_created': datetime.datetime(2021, 6, 2, 22, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644354317, 'comment_body': 'Perhaps leave a comment to explain why it is clear from the nodeData dict that some nodes are overlapping.\r\n\r\nAlso try to use the minimal test data that exposes that condition.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644366991, 'comment_body': 'Can you add some explanation (in comments) of where these numbers come from and why they are correct? Test files should be understandable in a self-contained way.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644367420, 'comment_body': 'Perhaps give a brief explanation (in comments) of the graph that this complicated dict represents.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644370766, 'comment_body': 'Can you add some explanation (in comments) for why these are the correct values? In general, use comments to explain the ""why"" behind anything that is not self-evident.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644370947, 'comment_body': 'I don\'t understand this. Why is width = bottom + top? I don\'t understand why we do the ""+"" operation and also this seems like the wrong axis.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 54, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644371177, 'comment_body': 'Why ""bottom + top"", and why <= when the description says equal?\r\n\r\nMore explanation of what is going on would be helpful.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 55, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644371413, 'comment_body': ""Try not to do such a big comparison. I can't figure out what exactly we care about validating here.\r\n\r\nInstead, validate the specific thing that you care about testing."", 'comment_created': datetime.datetime(2021, 6, 2, 22, 55, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644413438, 'comment_body': 'As we are calculating left and right edge as follows:\r\n```javascript\r\nleftEdge = Math.min(\r\n    nodeData[nodeId].x0 - BORDER_PADDING, leftEdge);\r\n    \r\nrightEdge = Math.max(\r\n  nodeData[nodeId].x0 + BORDER_PADDING + nodeData[nodeId].width,\r\n  rightEdge);\r\n```\r\nwhich translates to \r\n```\r\nleftEdge = (x0 of leftmost node) - 5\r\nrightEdge = (x0 of rightmost node) + 5 + w\r\n\r\nwhere w = width of a node,\r\nBORDER_PADDING = 5\r\n```\r\nLet, W be width of the graph\r\nIf you consider one node at the center, then \r\n```\r\nx0 = W/2 - w/2\r\nso, \r\nleftEdge = W/2 - w/2 - 5\r\nrightEdge = W/2 - w/2 + 5 + w = W/2 + w/2 + 5\r\nleftEdge + rightEdge = W\r\n```\r\nThe sum would always be W. But this would be always less than 630 (which is the upper bound of graph width).\r\n\r\nI have changed the variable `graphWidth` to `graphWidthUpperBound` to make things clear. I hope this explanation was correct.\r\n', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413450, 'comment_body': 'Added comment', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413466, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413474, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413482, 'comment_body': 'Added comment and reduced data.', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413496, 'comment_body': 'The test description only states that a returned augmented link must have a Bezier curve. To check if the Bezier curves are correct or not, we would need to implement the logic in the test (which may not be ideal). Is there any other way to check if a Bezier is correct?', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413509, 'comment_body': 'Changed the test name to specify what is being tested', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644413624, 'comment_body': 'Added explanation [here](https://github.com/oppia/oppia/pull/12946#discussion_r644413438)', 'comment_created': datetime.datetime(2021, 6, 3, 1, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644423365, 'comment_body': 'Added specific checks for position values', 'comment_created': datetime.datetime(2021, 6, 3, 1, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644443336, 'comment_body': 'It looks fantastic. Thanks!', 'comment_created': datetime.datetime(2021, 6, 3, 2, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644443512, 'comment_body': ""Yup, just make a list of the expected 'd' values and compare the 'd' values to their expected ones (you don't need to catalog all the other fields in the expected values). Alternatively/additionally, you could verify that each returned augmented link has a d value and that it is formatted as 'M%f %f Q ...' (please fill in the rest of the regex)."", 'comment_created': datetime.datetime(2021, 6, 3, 2, 41, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644444312, 'comment_body': 'I see no comments here?', 'comment_created': datetime.datetime(2021, 6, 3, 2, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644447119, 'comment_body': 'This is still too big to understand. Better to do just one or two nodes and add some explanation for why the modified values are what they are so that the reader can verify. (The current test doesn\'t provide much insight, it just says ""this blob of stuff is the correct thing"" but doesn\'t make it easier for the reader to understand why it\'s the correct thing.)', 'comment_created': datetime.datetime(2021, 6, 3, 2, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644449558, 'comment_body': ""I don't see a comment for where the values in expectedGraphBoundaries comes from. I see an explanation for nodeDataWithPositionValueInPixel but that is a different thing.\r\n\r\nThere should be an explanation for why the values in expectedGraphBoundaries are correct, which can be verified directly based on an examination of the nodeData in this test."", 'comment_created': datetime.datetime(2021, 6, 3, 3, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644451865, 'comment_body': 'Thanks for the [explanation](https://github.com/oppia/oppia/pull/12946#discussion_r644413438) on this. There are a few things that confuse me about it:\r\n\r\n- The explanation refers to a specific case where one node is at the center. But the test doesn\'t mention this special case at all. If you shift the node to the left then both leftEdge and rightEdge would decrease and so leftEdge + rightEdge < W; the opposite happens when you shift the node to the right. So I think I am confused about whether this statement you\'re making is supposed to hold in general.\r\n- There should be some explanation about why the node data used above would ""naturally"" be likely to result in a graph that exceeds the upper bound. Otherwise you might just have a weak test case here. One way you can demonstrate it (in addition to adding comments) is to check the width for graphs of sizes N - 1 and N (where N is at the boundary of the max number of nodes in a row) and showing that these increase, then checking the width for a similar graph of size N + 1 and demonstrating that it is the same as the one for N.', 'comment_created': datetime.datetime(2021, 6, 3, 3, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 644626313, 'comment_body': ""Made changes to check only the list of 'd' values. I think if we are already checking if the 'd' values match the expected values, there would be no point in checking if those values match the format (as they are already equal to the correctly formatted values). What do you think?"", 'comment_created': datetime.datetime(2021, 6, 3, 9, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644626337, 'comment_body': 'Sorry, I missed this one as it was same comment as for the next test. Added', 'comment_created': datetime.datetime(2021, 6, 3, 9, 12, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644626383, 'comment_body': 'Added a comment, though the values in `expectedGraphBoundaries` are calculated from `nodeDataWithPositionValueInPixel`, so they not be directly verifiable from `nodeData`. Should I add `nodeDataWithPositionValueInPixel` manually?', 'comment_created': datetime.datetime(2021, 6, 3, 9, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644631364, 'comment_body': 'Added an explanation', 'comment_created': datetime.datetime(2021, 6, 3, 9, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 644947396, 'comment_body': ""- I get your point. And I think the width should rather be `rightEdge` **-** `leftEdge`.\r\n- Also, the function `graphWidth()` does not returns the actual width of the graph but the upper bound (i.e. 630). So, we would need to calculate the width using the above relation (`rightEdge` **-** `leftEdge`). But then, this width is never equal to 630, even when there are N nodes ( max number of nodes in a row possible), this difference is due to padding fraction. So, we won't be able to demonstrate the N-1, N, N+1 example.\r\n\r\nSo, the check should be that the width and height must always be less than 630 and graphHeight(), respectively. Does this sound okay?\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 3, 16, 26, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645053202, 'comment_body': ""I think that's fine. However, your test above still contains all the other not-necessary data in expectedAugmentedLinks. Don't include that. Just make a list of d-values and explain where they come from, maybe in a comment explain how (roughly) the first one is derived so that some sanity checks can be made to ensure that it's reasonable for the source data."", 'comment_created': datetime.datetime(2021, 6, 3, 18, 58, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645053434, 'comment_body': ""Still don't see it. Please always make sure your code is up to date before pushing any comments."", 'comment_created': datetime.datetime(2021, 6, 3, 18, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645054702, 'comment_body': ""Ah -- I guess I'm confused about what this test is testing. If the main thing that's being tested is getGraphBoundaries() then yes, just add a custom nodeDataWithPositionValueInPixel here and drop all reference to nodeData. Try to make your custom nodeDataWithPositionValueInPixel easy to understand so that the expected output can be verified to follow from it (if this is not clear, add comments to explain)."", 'comment_created': datetime.datetime(2021, 6, 3, 19, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645055082, 'comment_body': ""Don't see it."", 'comment_created': datetime.datetime(2021, 6, 3, 19, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645055789, 'comment_body': 'But how would you check that? It\'s impossible to check an ""always"" criterion with finite tests.\r\n\r\nBut if, as in my previous suggestion, you show that there\'s a steadily increasing sequence (N-1, N) that then plateaus out at a constant value, that seems like a reasonable way to check it. I didn\'t say that the width needs to be equal to 630.\r\n\r\n(You can use a similar ""proof"" for height.)', 'comment_created': datetime.datetime(2021, 6, 3, 19, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645067205, 'comment_body': 'Sorry - I forgot to push the changes. Updated now', 'comment_created': datetime.datetime(2021, 6, 3, 19, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645067343, 'comment_body': 'Updated', 'comment_created': datetime.datetime(2021, 6, 3, 19, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645069214, 'comment_body': 'Updates the changes, will add a comment in the next push', 'comment_created': datetime.datetime(2021, 6, 3, 19, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645126199, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 3, 21, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645126519, 'comment_body': 'Added the checks', 'comment_created': datetime.datetime(2021, 6, 3, 21, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 645204635, 'comment_body': '""calculated"" is misspelled.\r\n\r\nAs an aside, I think I\'ve seen several misspellings in recent PRs. Please try and find a way to proofread your comments / variable names before submitting for review.', 'comment_created': datetime.datetime(2021, 6, 4, 0, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645204921, 'comment_body': 'SO --> So', 'comment_created': datetime.datetime(2021, 6, 4, 0, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645205043, 'comment_body': 'Perhaps give a verbal or graphical explanation for why this graph would be expected to have high indentation for certain nodes.', 'comment_created': datetime.datetime(2021, 6, 4, 0, 4, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645205708, 'comment_body': 'I don\'t understand this comment (""1 ans 2""?), please rewrite.\r\n\r\nIf it means ""and"" then what is the significance of 3 being left out?\r\n\r\nYou might want to consider including graphical representations so that these graphs can be easily visualized by the reader.', 'comment_created': datetime.datetime(2021, 6, 4, 0, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645206126, 'comment_body': ""This seems like actual rather than expected? You're using a method from the service being tested.\r\n\r\nNormally expected stuff is hardcoded."", 'comment_created': datetime.datetime(2021, 6, 4, 0, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645206406, 'comment_body': 'Explain how it was derived.\r\n\r\nAdditionally, add units into your variable names (e.g. widthUpperBoundCm or widthUpperBoundPixels)', 'comment_created': datetime.datetime(2021, 6, 4, 0, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645207092, 'comment_body': 'There needs to be an explanation for why the expected values are what they are.', 'comment_created': datetime.datetime(2021, 6, 4, 0, 10, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645207845, 'comment_body': ""Why is making a deep copy necessary? Perhaps worth explaining -- it's not obvious."", 'comment_created': datetime.datetime(2021, 6, 4, 0, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 645208437, 'comment_body': ""The way this is written is a bit confusing because modifiedNodeData is apparently the same as nodeData. So modifyPositionValues() looks like it is basically equivalent to a function that doesn't do anything at all. This test is therefore rather weak. Can you make it stronger so that it can actually distinguish an incorrect implementation of modifyPositionValues()?"", 'comment_created': datetime.datetime(2021, 6, 4, 0, 15, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646045670, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045672, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045673, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045676, 'comment_body': 'Changed the comment, added visualization', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045678, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045679, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045680, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045684, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646045685, 'comment_body': 'Ah, I just realised I was checking modifiedNodeData against nodeData (which also is modified). \r\n\r\nChanged the test', 'comment_created': datetime.datetime(2021, 6, 5, 22, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646068455, 'comment_body': ""What's this for? "", 'comment_created': datetime.datetime(2021, 6, 6, 3, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646068510, 'comment_body': 'Why has this data changed?', 'comment_created': datetime.datetime(2021, 6, 6, 3, 51, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646068534, 'comment_body': 'Great diagram!', 'comment_created': datetime.datetime(2021, 6, 6, 3, 51, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646068603, 'comment_body': 'calculated --> is calculated \r\nb/w --> between (try not to use abbrevs)', 'comment_created': datetime.datetime(2021, 6, 6, 3, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646068681, 'comment_body': 'I think you missed the comment about units?\r\n\r\n> Additionally, add units into your variable names (e.g. widthUpperBoundCm or widthUpperBoundPixels)', 'comment_created': datetime.datetime(2021, 6, 6, 3, 53, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646068755, 'comment_body': 'Here and elsewhere: ""upper bound"" and ""lower bound"" are two words.\r\n\r\n', 'comment_created': datetime.datetime(2021, 6, 6, 3, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646092620, 'comment_body': 'This has changed because the [checkpoint PR ](https://github.com/oppia/oppia/pull/12817) made changes to the width of a node ([here](https://github.com/oppia/oppia/pull/12817))\r\n', 'comment_created': datetime.datetime(2021, 6, 6, 7, 56, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646092899, 'comment_body': 'Got it, thanks!', 'comment_created': datetime.datetime(2021, 6, 6, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646092928, 'comment_body': 'That was for debugging, as some values changed. Reason in this [comment](https://github.com/oppia/oppia/pull/12946#discussion_r646092620)', 'comment_created': datetime.datetime(2021, 6, 6, 7, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646093294, 'comment_body': 'But it shouldn\'t be submitted, right? (It shows up in ""Files Changed"".)', 'comment_created': datetime.datetime(2021, 6, 6, 8, 2, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646097101, 'comment_body': 'Pushed the changes', 'comment_created': datetime.datetime(2021, 6, 6, 8, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646097177, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 6, 8, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646097193, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 6, 8, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646097195, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 6, 8, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646098789, 'comment_body': ""No, this name suggests that it is a pixel.\r\n\r\nTry graphWidthUpperBoundInPixels perhaps, or graphWidthUpperBoundInPx or graphWidthUpperBoundPx if that's too long. Ditto elsewhere."", 'comment_created': datetime.datetime(2021, 6, 6, 8, 47, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646099595, 'comment_body': 'Only for graphWidthUpperBound or throughout the file?', 'comment_created': datetime.datetime(2021, 6, 6, 8, 54, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646102798, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 6, 9, 21, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 646179115, 'comment_body': 'Please, read the previous comment carefully -- your replacement doesn\'t follow any of the structures given there. ""In Pixel"" is not correct because normally measurements are pluralized. Either of the variants I suggested are OK.\r\n\r\nIf a reviewer suggests something, and you do something different with no explanation or acknowledgement, this is what will make your PR reviews take longer, because of the additional back-and-forth.', 'comment_created': datetime.datetime(2021, 6, 6, 19, 52, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 646202093, 'comment_body': 'Changed the variable names', 'comment_created': datetime.datetime(2021, 6, 6, 23, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '4519b2eaaa7fa81938b946eb8fa3e3954b3e05d2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0963fbdd0c30b6521d05c434eabfc0d6e0cec245', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e95f9f5dc6f9abc44ed04b947255b90ff0d0b7cf', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1de6ee36cf2816647dc5a1d8649ba8e7209ea4ef', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e7b23d80970874c9302308b5dcb6e1145339124', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '753c162f7225121717570e2e519aeadcfe0c4127', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf011b5155821bea83f383ffd1ba01f871867f19', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9de9c385f1af6996fbdc3641922e950376151b1d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8069685eedfcf43e910917989a8dea743f12a866', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a4414cc641990f0fe8f0d1a78a1f1390bff7f27', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b13841fafe7c7a7196134388fa227bb10946c1e2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cc8949ad57cb8b182fcea43e1a99a25a7fe4db5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aecc6cda7c0f916d559c6303fd72cb3fa5c1eee7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf526a0b02f6cc5170faa18c34e3a439b476ecea', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb0e6867a6c3afefac5d27f7ef68a6ffda2fb5fb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7c0d34d2e5e4cfbea765a90da50dc010fbe2f23', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3241a0da4e77161c565df69a7f7d9fca600c23f8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f34f67a37c0060de037922190705917a29ac991d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3e940b51f7908467b7bc0b1d5eccef677e8275', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '744ab6b23945a0a70f1e395936e7526ac820f1e5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c51fa907846d8b19eafb000fac3284c4fdae5251', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
668944584,Unit tests for sharing-links.component.ts and state-editor.service.ts,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Completely tested:
- `sharing-links.component.ts`
- `state-editor.service.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13069,https://api.github.com/repos/oppia/oppia/pulls/13069,https://github.com/oppia/oppia/pull/13069,closed,645,9,5,21,13,55,1,1,[{'name': 'PR: LGTM'}],2021-06-12 20:06:14+00:00,2021-06-21 12:27:50+00:00,750096.0,"8 days, 16:21:36","[{'comment_id': 650714258, 'comment_body': 'Can we add a note here why the registration status is updating only after calling `updateStateEditorDirectiveInitialised`?', 'comment_created': datetime.datetime(2021, 6, 14, 7, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 650723687, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 14, 7, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 651222034, 'comment_body': 'For the component tests, can you please do a pass and apply the descriptions as mentioned in https://github.com/oppia/oppia/pull/13017#pullrequestreview-682319406?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651222529, 'comment_body': 'Should we add prechecks for these?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651222694, 'comment_body': 'Ditto: Add prechecks', 'comment_created': datetime.datetime(2021, 6, 14, 19, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651233647, 'comment_body': '`should set query fields for social platform APIs when an exploration is shared` or similar?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651278856, 'comment_body': ""Optional (please create a TODO / issue if it is out of scope for this PR): This behaviour seems a bit weird. We don't throw errors like this in other components when it is used in the wrong place. Is this error meant only for devs -- it seems odd to throw an error in the business logic to alert devs?\r\n\r\nI would suggest not providing `@Input` to this component, instead use the `ContextService` directly to determine if the collection or exploration page is active and render accordingly."", 'comment_created': datetime.datetime(2021, 6, 14, 21, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651283678, 'comment_body': 'Should we have more specific tests here for different layout / font combinations?\r\n\r\nAlso, It seems like `layoutAlignType` is expected to be a hyphen-separated value. Should we validate this in the component and add tests?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651284013, 'comment_body': 'We are only testing the font size here. Should we check the classes as well?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651284463, 'comment_body': 'Should we have prechecks?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651285529, 'comment_body': ""```suggestion\r\n  it('should get social media URLs', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 14, 21, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651288374, 'comment_body': 'Move this line along with the test setup.', 'comment_created': datetime.datetime(2021, 6, 14, 21, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651288675, 'comment_body': 'Add a newline before the  postchecks.', 'comment_created': datetime.datetime(2021, 6, 14, 21, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651292403, 'comment_body': 'Considering this is a large object, should we add a comment explaining what this represents?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651315590, 'comment_body': 'Err.. what are we testing here? Did you mean to use the getter method for the expect statements?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651316106, 'comment_body': '`should initialise state content editor`. Use the same format below.', 'comment_created': datetime.datetime(2021, 6, 14, 22, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651316685, 'comment_body': '`should initialise state content editor`. Use the same format below.', 'comment_created': datetime.datetime(2021, 6, 14, 22, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651316948, 'comment_body': 'Are we actually testing `..emit state names change event`?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651317325, 'comment_body': 'Should we add expect statements to check these values are false?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651318085, 'comment_body': 'Corresponding changes may apply below after each `updateXXXEditorInitialised()`?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651319323, 'comment_body': 'Should we subscribe to this Observable and check that it gets called on setStateNames()?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651320455, 'comment_body': 'Maybe a duplicate of `should set correctness feedback enabled`?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651320933, 'comment_body': 'As a reader, it is not clear why is happening in this test. Can you please add comments?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651321660, 'comment_body': 'To test these, can we actually subscribe to these Observables, emit the corresponding event and check that the Observable callback exectutes?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 652224310, 'comment_body': ""I think we can add more test cases for `layoutAlignType`.\r\n\r\nI see it's used without hypens in the code base ([here](https://github.com/oppia/oppia/blob/a6a998addac1f53af848f95ad628f891d931c890/core/templates/pages/collection-player-page/collection-footer/collection-footer.component.html#L20)).\r\n\r\nSo, either we can make the expected value to be space-separated and add a check for it."", 'comment_created': datetime.datetime(2021, 6, 15, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652224356, 'comment_body': ""I didn't get you -- do you mean testing with different values of `layoutType` or `layoutAlignmentType`?"", 'comment_created': datetime.datetime(2021, 6, 15, 23, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652225714, 'comment_body': ""I don't think we need pre-checks here (and how would we pre-check it?)"", 'comment_created': datetime.datetime(2021, 6, 15, 23, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652264563, 'comment_body': ""I think I have followed the comment in the test descriptions, which one do you think can be improved? (I suppose, getUrl() and getFontAndFlexClass() 's tests have a bit service-like description, but they also act as a service like function)"", 'comment_created': datetime.datetime(2021, 6, 16, 0, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267386, 'comment_body': 'Added pre checks', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267397, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267401, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267413, 'comment_body': 'I have added a TODO', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267440, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267462, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267478, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267498, 'comment_body': 'Added a comment', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267505, 'comment_body': 'Yep, removed', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267527, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267535, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267547, 'comment_body': 'Changed test description', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267556, 'comment_body': 'Added checks to verify if these values are false', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267570, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267574, 'comment_body': 'Added a comment', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267599, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 653703771, 'comment_body': 'I think this has been resolved now. Latest commits seem to have fixed the descriptions, thanks!', 'comment_created': datetime.datetime(2021, 6, 17, 15, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653704721, 'comment_body': 'I think you need to create an issue and do something like `// TODO(#<issue number>): ...`. See TODOs in the codebase.', 'comment_created': datetime.datetime(2021, 6, 17, 15, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653887924, 'comment_body': 'Hm, I think we need to figure out what exactly is expected. It seems like it would be problematic in following lines:\r\n\r\nhttps://github.com/oppia/oppia/blob/a6a998addac1f53af848f95ad628f891d931c890/core/templates/components/common-layout-directives/common-elements/sharing-links.component.ts#L83-L84\r\n\r\nFor example, if `layoutAlignType` is ""center center"", it will result in the classes looking like:\r\n\r\n`fx-main-center center fx-cross-undefined`', 'comment_created': datetime.datetime(2021, 6, 17, 19, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653888523, 'comment_body': 'Yup, I meant do we need to test `layoutType` and `layoutAlignmentType`.', 'comment_created': datetime.datetime(2021, 6, 17, 19, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653890997, 'comment_body': 'It seems like `getUrl` will still return (an invalid) URL if the variables required to construct the URL sub-parts are undefined. Should we add a check for the URL before the variables are set?', 'comment_created': datetime.datetime(2021, 6, 17, 19, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653904964, 'comment_body': ""Here and below: It looks like we are spying on X, calling X directly in the test and then expecting it to have been called. Is this expected?\r\n\r\nHm, actually, I don't think we need to test these getters TBH. In some service spec files we seem to have simply subscribed to such getter and then unsubscribed to them in the afterAll block (see `router.service.spec.ts`, `questions-list.service.spec.ts`). Should we do a similar thing?\r\n"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654110404, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110419, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110440, 'comment_body': 'Added precheck', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110452, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110466, 'comment_body': 'Added check and changed code to split string by space', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '2a7a91ff2b1347948fbeb62d3afe7957553fd9d8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e75b338cce859f71887d8706d4fc5cb15b194b3f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b35eb58fd03fdd60ccf4333fecbc74f7f1dcb59', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11694e974f18d9fa43d13b7f747f5b62f55b93a1', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e800cd8b89950cab3355fe54a20885be811ab8f3', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f61cea0334f2684c006e5fadb610dda0d46c342', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ac15b8d822df0875d1d4f15d3f573d5c4dfda8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cef5d2dfe4c90f7068b44d3f5f508621625835a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd29ee8de3048c6e716a7b59d42293e11c590d39', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d754960ee792c4d91080c06588b2fe5c665b58b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb68bd68c8fe6e8fbabb8517cde316cd1cf71697', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2048b59d0a554245b3d23f50c17905c1ee66f1f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cacec3bea45375a006ce9aeda29f1c72f4ed86c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d1652ec3947d6e00177d7adfde40e652b570f28', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a2cb5e9f8dc3955d39f511ad0ad2f31c6009a4', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f1103bf09dec7ba3f7d892f27c6a21bf0b70ed7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5908c42603bf5430f0dd1a8be885b22423317193', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0bc14639d4ae1c841960dd2e7dc9d01506f2bc4', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cdb875740ce725f6f2ceef9b0a3be235c87a442', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b41716f0bda6a549bef1573cba5b99143ee8930b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c5fb70c2bac9e82213c15d92f6c5bfa855c010f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
670891985,Add unit test image uploader skill selector,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Adds unit tests to:
- `image-uploader.component.ts`
- `skill-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122142129-6a4aaa00-ce6c-11eb-9d63-ba82cb4078cf.png)
![image](https://user-images.githubusercontent.com/26626415/122142142-7171b800-ce6c-11eb-8ea8-a0d9b4c98876.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13102,https://api.github.com/repos/oppia/oppia/pulls/13102,https://github.com/oppia/oppia/pull/13102,closed,697,8,4,12,9,22,1,1,[{'name': 'PR: LGTM'}],2021-06-16 00:59:48+00:00,2021-06-21 12:04:32+00:00,471884.0,"5 days, 11:04:44","[{'comment_id': 652329269, 'comment_body': '```suggestion\r\n/**\r\n * @fileoverview Tests for audio-file-uploader component.\r\n */\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652330962, 'comment_body': 'Is it possible for this to be before `component.ngOnInit();`. Since it might be better to follow the format of \r\n\r\n1. Setup actions\r\n2. pre-checks\r\n3. Actions\r\n4. post-checks\r\n\r\nSame comment for the other tests too.', 'comment_created': datetime.datetime(2021, 6, 16, 3, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652331559, 'comment_body': ""Something like this test `should clear all filters when user clicks on \\'Clear All`.\r\nHere all the variables are declared then the functions are called."", 'comment_created': datetime.datetime(2021, 6, 16, 3, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652332059, 'comment_body': 'Can we add a pre-check here? Same for the other tests. It would be better to test the state change right?', 'comment_created': datetime.datetime(2021, 6, 16, 4, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652469320, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 16, 8, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652469333, 'comment_body': 'Here, `ngOnInit()` is part of the setup -- and the call to `updateSkillsListOnTopicFilterChange` is the action', 'comment_created': datetime.datetime(2021, 6, 16, 8, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652469414, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 8, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652471956, 'comment_body': 'Can we have a pre-check here?', 'comment_created': datetime.datetime(2021, 6, 16, 8, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652487527, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 8, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 653948851, 'comment_body': 'Thanks for fixing these typos!', 'comment_created': datetime.datetime(2021, 6, 17, 21, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653981847, 'comment_body': 'Should there be a precheck?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653983323, 'comment_body': 'It seems to be registering specific event listeners. Should we add checks for the specific events?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653984771, 'comment_body': 'Should we expect that the dummy file is being emitted?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653986598, 'comment_body': 'Use a named constant for the size value.', 'comment_created': datetime.datetime(2021, 6, 17, 21, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653988550, 'comment_body': ""```suggestion\r\n  it('should upload a valid image', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 22, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654148576, 'comment_body': 'Added (but `fileInputClassName` cannot be undefined, as init block gets called while setting up the test env)', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148601, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148607, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148617, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148642, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654700963, 'comment_body': 'Oh, hm, in that case, can you unset it before line 64 and then call ngOnInit and check that it gets set?', 'comment_created': datetime.datetime(2021, 6, 18, 22, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654721816, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 0, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '4b302e5d0a1ce08b5370b44e55313e6c079e71b7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c619df2548944d9f4715cd9411da824b4576e163', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e4e2c1488c23c163cf8ae4550cca0acdf8411dd', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1faf22cd7f1a1d288435412bd4c75d438f7890f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ea7e82973cc8b8ec7430f7ab1c4ccd2fba524f4', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c21305096dc688367f65f3dc65fe3208741840c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '642c735db1f0487e6e1502de88bf4662e66ce897', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8501eb22594eeb9cf3dad7431847d90f26884d32', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283bc1025757f3593dea3cf327aa29058b5e4a59', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aaeaabbdff8361df7cb8f310735dbb587b9c618', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70a4d03d5b20f7cd3dfdf3542ea56e5ab882844b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4ba11dcdddfd9b6862ad51b199b5bfe7d2a7747', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
678290114,"Frontend unit tests for state-responses, rating-display and question-difficulty-selector component/directive","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: 

Migrates `state-responses.directive.ts` to  AJS component. 
Covers:
- `state-responses.component.ts`
- `rating-display.directive.ts`
- `question-difficulty-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/123504496-5c203900-d677-11eb-92f7-22eb45794149.png)

![image](https://user-images.githubusercontent.com/26626415/123504487-50cd0d80-d677-11eb-910e-654cc893ca34.png)
![image](https://user-images.githubusercontent.com/26626415/123504508-680bfb00-d677-11eb-9187-5e8bc06b601b.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13217,https://api.github.com/repos/oppia/oppia/pulls/13217,https://github.com/oppia/oppia/pull/13217,closed,1933,811,9,19,10,14,1,1,[{'name': 'PR: LGTM'}],2021-06-26 07:06:04+00:00,2021-06-29 20:30:42+00:00,307478.0,"3 days, 13:24:38","[{'comment_id': 659214555, 'comment_body': 'Is it possible to check for a state change for this?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659214784, 'comment_body': 'For this test what are the pre-checks, actions, and post-checks? Can you add a comment in the code mentioning the same?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215529, 'comment_body': 'Pre-check for `$scope.activeAnswerGroupIndex`.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215579, 'comment_body': 'Pre-check?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659268663, 'comment_body': 'The function `getStaticImageUrl` does not exist before $onInit is called', 'comment_created': datetime.datetime(2021, 6, 27, 6, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270434, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270439, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270446, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659274762, 'comment_body': 'if lines 95 - 97 are the actions and the rest of the lines are the post-checks then insert a new line in between.', 'comment_created': datetime.datetime(2021, 6, 27, 7, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659274952, 'comment_body': '```suggestion\r\n      .toHaveBeenCalledWith(0);\r\n      \r\n    ctrl.$onDestroy();\r\n```', 'comment_created': datetime.datetime(2021, 6, 27, 7, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659275212, 'comment_body': 'Please separate set-up, actions, and post-checks with a line in between. Please do this for the rest of the tests', 'comment_created': datetime.datetime(2021, 6, 27, 7, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659290386, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290391, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290398, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': 'ff0c90e1d6d07d47cc9e62f802d2ad94781b5032', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0759655fee65d41cb6471b7124834c31d27d2b83', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c096e8a7f36f130400d67e1582c0bcc11360f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8339e49b0561f8248da5f7732a74efcd0fbe4b84', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6bfe603be701e1fee05f384e2ec5e331bc34c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95843976bc3da5ee34e9123094dc8b79e301fe3d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93fdb914d369272baf9e3bd3464ac05e0fd28271', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc483dc77ea7b1ec0d9635dcec648f5d680027c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ea46da75cac8e23847e608303f980909d0156d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3563f1930641e29e20c88386a0486714ceaf87ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c997d12ce3721df4c644637d2aa2aa445770ee00', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015fcbe3dc2a7bd1c2a5cc5b1fcc1f67f9da167c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81af072fda3eff6454b23e5ab5cbd077abbe758c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2688e683ee91e284fc2601d711a8530eb354a742', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d867126de27c70bdd86d13f74756c685f27f143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e11e31eaee77ff010e21b2f6f2dd5f380bf3e80', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37a8d96a2bbcd507db99d10f1e9c7b06a4559f78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f344d4112336e08c773c29c2f54f5dae034a423e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05caa673d4a517ec43b309cb50289deb08eec965', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
674104395,Unit tests for hint and solution button component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers `hint-and-solution-buttons.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122689585-65f20880-d241-11eb-8e39-99c8d4763f1d.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13154,https://api.github.com/repos/oppia/oppia/pulls/13154,https://github.com/oppia/oppia/pull/13154,closed,422,1,2,4,3,1,0,1,[],2021-06-20 22:03:40+00:00,2021-06-23 21:58:35+00:00,258895.0,"2 days, 23:54:55","[{'comment_id': 655415182, 'comment_body': ""```suggestion\r\ndescribe('Hint and solution buttons component', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 21, 14, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}]","[{'commit_sha': 'fdc99331ef0d4cc6fb1fe0b485fab37e73d0947a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb39311ec4236793b636a8a9331019f8c0ec390c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb75921d23e1e2acfa401ccf744e0598050405ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '819ae5ec3f8dfaa2714eac9737492add53d404f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
671661677,Add unit test story summary tile,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Adds unit tests for `story-summary-tile.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![image](https://user-images.githubusercontent.com/26626415/122258088-492a9d80-ceee-11eb-8cbc-4cd328bc0fea.png)
## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13110,https://api.github.com/repos/oppia/oppia/pulls/13110,https://github.com/oppia/oppia/pull/13110,closed,461,2,3,9,13,25,1,1,[{'name': 'PR: LGTM'}],2021-06-16 16:32:22+00:00,2021-06-23 04:53:24+00:00,562862.0,"6 days, 12:21:02","[{'comment_id': 653656514, 'comment_body': '```suggestion\r\n    // Here the value is calculated by the formula -> (circumference -\r\n    // (nodeCount * gapLength))/nodeCount = (2 * 20 * Math.PI - (3*5))/ 3\r\n    // = 36.88790204786391. Along with this value, gapLength (5) is also\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 15, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 653914577, 'comment_body': 'Should it be ""thumbnail filename"" instead of ""thumbnail name""?', 'comment_created': datetime.datetime(2021, 6, 17, 20, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653917387, 'comment_body': 'Where does this scenario actually happen (i.e. we show a story summary tile without a thumbnail somewhere in the app)?', 'comment_created': datetime.datetime(2021, 6, 17, 20, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653926142, 'comment_body': 'Can you please reword this? It seems a bit confusing to read.', 'comment_created': datetime.datetime(2021, 6, 17, 20, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653926682, 'comment_body': '```suggestion\r\n    // Will show ""View All"" button as number of nodes (5) is more than chapters\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 20, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653928341, 'comment_body': ""```suggestion\r\n  it('should show \\'View All\\' button if number of nodes is not same as the' +\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653931461, 'comment_body': 'Hm, actually, the condition here seems a bit odd. The actual check is `ctrl.chaptersDisplayed !== ctrl.nodeCount` where `ctrl.chaptersDisplayed` is fixed (2 or 3) and `ctrl.nodeCount` is not fixed. Should the `View All` button only be shown when the node count is greater than `ctrl.chaptersDisplayed`?', 'comment_created': datetime.datetime(2021, 6, 17, 20, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653932527, 'comment_body': '""User\'s progress"" here seems too vague. Please elaborate what progress here means (e.g. number of chapters completed). ', 'comment_created': datetime.datetime(2021, 6, 17, 20, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653938166, 'comment_body': 'It may be a bit hard to locate the comment being referred to here. It may not be great to rely on the ordering of the tests here -- it may change in the future and the developer may not update the comment. Should we add the comment here again or add a comment at the top of the file after fileoverview so it can be referenced throughout the file?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653942140, 'comment_body': '`should return the chapter URL when the chapter title is provided`', 'comment_created': datetime.datetime(2021, 6, 17, 21, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653944693, 'comment_body': 'Perhaps `should populate the story URL when URL fragments are set`?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654112615, 'comment_body': 'Hmm, I am not able to find any such scenario, should we remove the condition or keep it (so that nothing breaks in future?)', 'comment_created': datetime.datetime(2021, 6, 18, 3, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654115211, 'comment_body': 'This check if there in the HTML file - [here](https://github.com/oppia/oppia/blob/9a155322871a3ac46847e85ff63986b5b00f3af6/core/templates/components/summary-tile/story-summary-tile.component.html#L62)', 'comment_created': datetime.datetime(2021, 6, 18, 3, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119844, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119863, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119888, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119896, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119927, 'comment_body': 'Added a comment here, so that the reader does not need to scroll back again to the top', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119938, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119949, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654122136, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654701933, 'comment_body': 'If thumbnailUrl is null, will it not show a broken image to the user? If so, it seems like a bad experience ..\r\nCan we not render the image using an ngIf (or) just show a placeholder if this is the case? Perhaps worth checking why this was added in the first place (using git blame).', 'comment_created': datetime.datetime(2021, 6, 18, 22, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654718538, 'comment_body': 'Added a check to not render the image if thumbnailUrl is null. This was added to fix [this](https://github.com/oppia/oppia/issues/9559) in this [PR](https://github.com/oppia/oppia/pull/9591)', 'comment_created': datetime.datetime(2021, 6, 18, 23, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654980345, 'comment_body': 'Minor nit: keep ngIf on the top and src below it. Makes it easier to read through logic in templates.', 'comment_created': datetime.datetime(2021, 6, 20, 19, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 655583723, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 17, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '61fd302cc50f7a7783531452e6fd869a3a2b2f1e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37ae4b5d021779d5c02f7a98dfc47258f1ae326f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d8197fc34f86b8ce017c55d0109995fbafb8413', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a88e7a569923af1a7d3af2e5079c60c90c3ff1', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5c9cabd43ca3560a0605d02c18f1586796d63e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e4f7b5da9cabe8314ff158f17ec0d89e6fc284f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fcf95aa6314fefd3816757198e449a1564e94aa', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa4f7556578edc2681076790e42c23179bcaeb82', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebf3814087fff82d80884f6cfc0136dc7254115e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
673938483,Unit test for thumbnail uploader component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers `thumbnail-uploader.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122656242-4f32af80-d176-11eb-86bb-36a9fa91399a.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13138,https://api.github.com/repos/oppia/oppia/pulls/13138,https://github.com/oppia/oppia/pull/13138,closed,369,1,2,8,7,4,0,1,[],2021-06-19 21:50:11+00:00,2021-06-23 21:07:20+00:00,343029.0,"3 days, 23:17:09","[{'comment_id': 655651847, 'comment_body': 'Should we check that the ""editableThumbnailDataUrl"" remains the same?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655652973, 'comment_body': 'Should we expect that the modal was not open?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655773096, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 23, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 655773209, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 23, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '03d80f9d62a8a8a1b1ceacd8fc4b9e5f1a085c4d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3feb4200aac076656e1f331fc53cd263ac6b8f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e214b694e45921f0036af998fd0dba3208de9faf', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a05ab1e36dd9c94e9a9d66c2e9fd3e5844dcc4ae', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '662004bdcbd37b24e7108e9bc887c821b5eb51e7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335d3601800df4063034ce5c0e5c426d388b572d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60df86d5777ebd2d959cc21530fb436a0f9598e5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bba6ca6d61cce2ac98278a7d598389aa121b4e32', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
673588682,Unit tests for top navigation bar component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers `top-navigation-bar.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![image](https://user-images.githubusercontent.com/26626415/122628602-99fbeb00-d0d4-11eb-8aa3-6f275afa7a53.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13126,https://api.github.com/repos/oppia/oppia/pulls/13126,https://github.com/oppia/oppia/pull/13126,closed,463,5,6,23,16,5,1,1,[{'name': 'PR: LGTM'}],2021-06-18 16:08:10+00:00,2021-06-24 10:26:19+00:00,497889.0,"5 days, 18:18:09","[{'comment_id': 655646112, 'comment_body': ""There aren't any expect statements here. What are we testing?"", 'comment_created': datetime.datetime(2021, 6, 21, 19, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655646626, 'comment_body': 'Looks like repeated lines.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655724336, 'comment_body': 'File extensions are different', 'comment_created': datetime.datetime(2021, 6, 21, 21, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 655763291, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 23, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 655908370, 'comment_body': 'Ah, I see. Thanks!', 'comment_created': datetime.datetime(2021, 6, 22, 6, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}]","[{'commit_sha': '91fe01640a4a92f662f6ad874bdb0c3fa18eb2d2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '184951fe48c2363b0f103391a1c7130a90b7bff9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abe1992a1b031c7706f46b8f55d47d472a1aaa02', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a2d6fe094c355bb5eeeb8dd94dda4578061e68', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b38888667e9bc5c55010eb4bf72937dfeb6d65', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0211b1fde8829f58b8b78bfde61a3f52c3c6ec50', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fac9ca131ebcd9779a6f11a7b86559d1cbfa479', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0134cd9669427ba321c28086a76ca68b109af0e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb158a28c12973eec56d87da4b57cac50599fc78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74cfcad7cac65ee3d8035f12a78a1612044b90ed', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82565a706f076db5d11139dc007fc3d2a56641a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ef20a9b9234874d1065df014accda29041e5a96', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af2d3731f17f2a156bb3184f5c7820b729cd820', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43efd36e101f3bbebfc68fcea8362fbb3fc9dfea', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e944ea7c159c170adbedafd6f16e1a8789623e75', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '423ca81a502f90f6e8eb4e0d6e57614287d2b602', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6e2307538fd52b5a2b45b994e9cd50c7134f30e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b688c1768560e85e1e45edf86a9f1a6c23a3767f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5b5a10e3440d14e3124ed9589f405c71fb14864', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ff7f7f3339cc2302487413d90f242a564edff9e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5c49c13a1617426d3aa27790a2ac09ce1064f0c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d0a62b9fd97aa88016c48a3aac968252208fa0f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4761571819d7da590d0811bf093697ed845a35c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
675388840,Unit test for exploration creation service,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers exploration-creation.service.ts

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122926910-f89bc000-d385-11eb-8334-cac421f8f9d8.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13176,https://api.github.com/repos/oppia/oppia/pulls/13176,https://github.com/oppia/oppia/pull/13176,closed,216,2,4,23,14,32,1,1,[{'name': 'PR: LGTM'}],2021-06-22 12:47:38+00:00,2021-07-06 09:19:00+00:00,1197082.0,"13 days, 20:31:22","[{'comment_id': 656372360, 'comment_body': 'Description is unclear.\r\ncan we have this pattern `should do X if Y happens`?', 'comment_created': datetime.datetime(2021, 6, 22, 16, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 656373864, 'comment_body': 'Why do have we two tests with the same description?\r\n(Ref: line no. 209)', 'comment_created': datetime.datetime(2021, 6, 22, 16, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 656374585, 'comment_body': 'Why do we have similar tests here?\r\n(Ref line no. 146)', 'comment_created': datetime.datetime(2021, 6, 22, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 656729804, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 23, 3, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 656729810, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 23, 3, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 656729820, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 23, 3, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 658275854, 'comment_body': 'Add a newline above^', 'comment_created': datetime.datetime(2021, 6, 24, 20, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658276610, 'comment_body': 'Instead of creating these mock services can we use spyOn? (spyOn makes it very clear and allows us to write isolated and more readable tests.)', 'comment_created': datetime.datetime(2021, 6, 24, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658276940, 'comment_body': 'Avoid adding logics in test files*', 'comment_created': datetime.datetime(2021, 6, 24, 20, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658277579, 'comment_body': 'Why as unkown?', 'comment_created': datetime.datetime(2021, 6, 24, 20, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658278165, 'comment_body': 'Do we have mock class + spyOn togther? Just having spyOn would be better, right?', 'comment_created': datetime.datetime(2021, 6, 24, 20, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658278863, 'comment_body': 'If we have sypOn everywhere then why do we need Mock class?', 'comment_created': datetime.datetime(2021, 6, 24, 21, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658281920, 'comment_body': ""Service doesn't show anything, should we make it `should change loadingMessage to Creating exploration`\r\n\r\nAlso, can we have this structure:\r\n```\r\ndescribe: ExplorationCreationService\r\n    describe: on calling createNewExploration\r\n       it: should not create a new exploration if another exploration creation is in progress\r\n       it: should change loadingMessage to Creating exploration while creating exploration\r\n       it: ......\r\n```"", 'comment_created': datetime.datetime(2021, 6, 24, 21, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658283530, 'comment_body': 'is it expected to use `tick` for async function tests?\r\n\r\n/cc @srijanreddy98 ', 'comment_created': datetime.datetime(2021, 6, 24, 21, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659193852, 'comment_body': ""Not using `as unknown` gives this error:\r\n\r\n`\r\nConversion of type 'ExplorationCreationBackendApiService' to type 'MockExploratinoCreationBackendApiService' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n`"", 'comment_created': datetime.datetime(2021, 6, 26, 17, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659194057, 'comment_body': 'Yes, it can be used - [reference](https://codecraft.tv/courses/angular/unit-testing/asynchronous/#_code_fakeasync_code_and_code_tick_code)', 'comment_created': datetime.datetime(2021, 6, 26, 17, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659206413, 'comment_body': ""This was to trigger the failure callback, which I don't think we can omit "", 'comment_created': datetime.datetime(2021, 6, 26, 18, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659206506, 'comment_body': 'Yep, but during the course of the project the FE test team decided to use mocks ([ref](https://docs.google.com/document/d/1EyHQ3256BEb271jbZtnwNU7qrxufoCKKpa7yP5x5bR0/edit#bookmark=id.emknze8nl79a)', 'comment_created': datetime.datetime(2021, 6, 26, 18, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207539, 'comment_body': 'Removed this, for the previous test we need to make sure the function is not called, so had to spy on it.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207541, 'comment_body': 'Explained in a comment below', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207543, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207556, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659494519, 'comment_body': '@srijanreddy98 Can you please confirm on structure for writing tests?', 'comment_created': datetime.datetime(2021, 6, 28, 5, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659494702, 'comment_body': ""@srijanreddy98 Can you please confirm whether it's fine to use tick here?"", 'comment_created': datetime.datetime(2021, 6, 28, 5, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659999302, 'comment_body': 'Just to clarify... Mocks/spies are fine to be used. Prefer spies over mocks because they are easier to understand.', 'comment_created': datetime.datetime(2021, 6, 28, 17, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 662000263, 'comment_body': 'Hi Aishwary, this is my only comment, could you try to simplify the tests by using spies where possible?', 'comment_created': datetime.datetime(2021, 7, 1, 6, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 662281827, 'comment_body': ""Yes, it's correct to use tick here."", 'comment_created': datetime.datetime(2021, 7, 1, 13, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663298457, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 3, 1, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663313351, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663313380, 'comment_body': 'Are we still using the MockService?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663313516, 'comment_body': 'Yes, removed the mock and the logic as well', 'comment_created': datetime.datetime(2021, 7, 3, 4, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663313533, 'comment_body': 'Nope, removed the mock', 'comment_created': datetime.datetime(2021, 7, 3, 4, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '1230ccb2549fe6bb6a0b2525b380a9f18270562c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab36b8af8c48af0513fa810aadd359113ef94f35', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa2e56f9c5711d135d9d0e26c79933e35a067e1', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '931ce44904ecdd2569d53232ab53199335bf2e55', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74c6e0f3294a5a1fb168e8e9886ab81b38c9c581', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead87f94f2a49b5f204e0875045ec900b6eeecbf', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9726528987ae3265b16ed5e37f27637f03f39cb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff02b38b6c6830c8f6264be1cb1a1ecd108a0f9c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00545ed0341736233150cfc2fba15c513128df5b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb2c627f3a2554cc72a1d9fd896f26640fac348f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e29f2a6b146340f88dc7de851c04443bdbf0779a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64a81b6b91f3d9f5b9f37994e7089785417b20e5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d222ea64f80a38b7c4ca102eb8fa7276806d44c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a3faab966e9bf7d5c95543832f292daeb99670', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2f11b585f6b6667a3aef740105d09ef7c6abfcb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a4b04e4b7683de4dc9bd267ffbed72a2b3c4ea', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c676ea0f689a41f99c4962e64b5d25efd24b49bb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd11b2c19a6eb1f75a35c0c2c4a070fde4a276d5b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81b8e0a2444dc0bce95827e669f9f9c4b0abb143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f14676b43a0820dc29b2a5bd874ffd16b1d9047', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c279c72a72807c96f399081190f92c814d5a53e2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f5ed6f0137332576162c2a985bec8612afdb6d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23e7a4fa4eb4e5506a79400a901380ab8e899a05', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
678290114,"Frontend unit tests for state-responses, rating-display and question-difficulty-selector component/directive","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: 

Migrates `state-responses.directive.ts` to  AJS component. 
Covers:
- `state-responses.component.ts`
- `rating-display.directive.ts`
- `question-difficulty-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/123504496-5c203900-d677-11eb-92f7-22eb45794149.png)

![image](https://user-images.githubusercontent.com/26626415/123504487-50cd0d80-d677-11eb-910e-654cc893ca34.png)
![image](https://user-images.githubusercontent.com/26626415/123504508-680bfb00-d677-11eb-9187-5e8bc06b601b.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13217,https://api.github.com/repos/oppia/oppia/pulls/13217,https://github.com/oppia/oppia/pull/13217,closed,1933,811,9,19,10,14,1,1,[{'name': 'PR: LGTM'}],2021-06-26 07:06:04+00:00,2021-06-29 20:30:42+00:00,307478.0,"3 days, 13:24:38","[{'comment_id': 659214555, 'comment_body': 'Is it possible to check for a state change for this?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659214784, 'comment_body': 'For this test what are the pre-checks, actions, and post-checks? Can you add a comment in the code mentioning the same?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215529, 'comment_body': 'Pre-check for `$scope.activeAnswerGroupIndex`.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215579, 'comment_body': 'Pre-check?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659268663, 'comment_body': 'The function `getStaticImageUrl` does not exist before $onInit is called', 'comment_created': datetime.datetime(2021, 6, 27, 6, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270434, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270439, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270446, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659274762, 'comment_body': 'if lines 95 - 97 are the actions and the rest of the lines are the post-checks then insert a new line in between.', 'comment_created': datetime.datetime(2021, 6, 27, 7, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659274952, 'comment_body': '```suggestion\r\n      .toHaveBeenCalledWith(0);\r\n      \r\n    ctrl.$onDestroy();\r\n```', 'comment_created': datetime.datetime(2021, 6, 27, 7, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659275212, 'comment_body': 'Please separate set-up, actions, and post-checks with a line in between. Please do this for the rest of the tests', 'comment_created': datetime.datetime(2021, 6, 27, 7, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659290386, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290391, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290398, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': 'ff0c90e1d6d07d47cc9e62f802d2ad94781b5032', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0759655fee65d41cb6471b7124834c31d27d2b83', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c096e8a7f36f130400d67e1582c0bcc11360f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8339e49b0561f8248da5f7732a74efcd0fbe4b84', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6bfe603be701e1fee05f384e2ec5e331bc34c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95843976bc3da5ee34e9123094dc8b79e301fe3d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93fdb914d369272baf9e3bd3464ac05e0fd28271', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc483dc77ea7b1ec0d9635dcec648f5d680027c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ea46da75cac8e23847e608303f980909d0156d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3563f1930641e29e20c88386a0486714ceaf87ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c997d12ce3721df4c644637d2aa2aa445770ee00', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015fcbe3dc2a7bd1c2a5cc5b1fcc1f67f9da167c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81af072fda3eff6454b23e5ab5cbd077abbe758c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2688e683ee91e284fc2601d711a8530eb354a742', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d867126de27c70bdd86d13f74756c685f27f143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e11e31eaee77ff010e21b2f6f2dd5f380bf3e80', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37a8d96a2bbcd507db99d10f1e9c7b06a4559f78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f344d4112336e08c773c29c2f54f5dae034a423e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05caa673d4a517ec43b309cb50289deb08eec965', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
678290114,"Frontend unit tests for state-responses, rating-display and question-difficulty-selector component/directive","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: 

Migrates `state-responses.directive.ts` to  AJS component. 
Covers:
- `state-responses.component.ts`
- `rating-display.directive.ts`
- `question-difficulty-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/123504496-5c203900-d677-11eb-92f7-22eb45794149.png)

![image](https://user-images.githubusercontent.com/26626415/123504487-50cd0d80-d677-11eb-910e-654cc893ca34.png)
![image](https://user-images.githubusercontent.com/26626415/123504508-680bfb00-d677-11eb-9187-5e8bc06b601b.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13217,https://api.github.com/repos/oppia/oppia/pulls/13217,https://github.com/oppia/oppia/pull/13217,closed,1933,811,9,19,10,14,1,1,[{'name': 'PR: LGTM'}],2021-06-26 07:06:04+00:00,2021-06-29 20:30:42+00:00,307478.0,"3 days, 13:24:38","[{'comment_id': 659214555, 'comment_body': 'Is it possible to check for a state change for this?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659214784, 'comment_body': 'For this test what are the pre-checks, actions, and post-checks? Can you add a comment in the code mentioning the same?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215529, 'comment_body': 'Pre-check for `$scope.activeAnswerGroupIndex`.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215579, 'comment_body': 'Pre-check?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659268663, 'comment_body': 'The function `getStaticImageUrl` does not exist before $onInit is called', 'comment_created': datetime.datetime(2021, 6, 27, 6, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270434, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270439, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270446, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659274762, 'comment_body': 'if lines 95 - 97 are the actions and the rest of the lines are the post-checks then insert a new line in between.', 'comment_created': datetime.datetime(2021, 6, 27, 7, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659274952, 'comment_body': '```suggestion\r\n      .toHaveBeenCalledWith(0);\r\n      \r\n    ctrl.$onDestroy();\r\n```', 'comment_created': datetime.datetime(2021, 6, 27, 7, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659275212, 'comment_body': 'Please separate set-up, actions, and post-checks with a line in between. Please do this for the rest of the tests', 'comment_created': datetime.datetime(2021, 6, 27, 7, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659290386, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290391, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290398, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': 'ff0c90e1d6d07d47cc9e62f802d2ad94781b5032', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0759655fee65d41cb6471b7124834c31d27d2b83', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c096e8a7f36f130400d67e1582c0bcc11360f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8339e49b0561f8248da5f7732a74efcd0fbe4b84', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6bfe603be701e1fee05f384e2ec5e331bc34c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95843976bc3da5ee34e9123094dc8b79e301fe3d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93fdb914d369272baf9e3bd3464ac05e0fd28271', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc483dc77ea7b1ec0d9635dcec648f5d680027c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ea46da75cac8e23847e608303f980909d0156d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3563f1930641e29e20c88386a0486714ceaf87ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c997d12ce3721df4c644637d2aa2aa445770ee00', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015fcbe3dc2a7bd1c2a5cc5b1fcc1f67f9da167c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81af072fda3eff6454b23e5ab5cbd077abbe758c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2688e683ee91e284fc2601d711a8530eb354a742', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d867126de27c70bdd86d13f74756c685f27f143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e11e31eaee77ff010e21b2f6f2dd5f380bf3e80', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37a8d96a2bbcd507db99d10f1e9c7b06a4559f78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f344d4112336e08c773c29c2f54f5dae034a423e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05caa673d4a517ec43b309cb50289deb08eec965', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
682315893,Unit test for questions-list.component.ts,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Converts `questions-list.directive.ts` to AJS component and adds FE unit tests

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/124218891-cbcf7180-db18-11eb-9cd9-9f5ed7d1446e.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13287,https://api.github.com/repos/oppia/oppia/pulls/13287,https://github.com/oppia/oppia/pull/13287,closed,1753,673,7,14,11,4,1,1,[{'name': 'PR: LGTM'}],2021-07-02 04:06:12+00:00,2021-07-06 12:39:15+00:00,376383.0,"4 days, 8:33:03","[{'comment_id': 662726672, 'comment_body': '*show alert message / warning message', 'comment_created': datetime.datetime(2021, 7, 2, 4, 23, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 662726817, 'comment_body': ' *should show the?', 'comment_created': datetime.datetime(2021, 7, 2, 4, 24, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 662743980, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 2, 5, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 662744032, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 2, 5, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '18a3d7948b3a9aeedb05fd9435fb0211509fe6bd', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b9a50f068ba73a59d0aadb2236f4fa64db0293e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29eb06d3b5f0a6fc761c4e9428ad81043e50e30c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e7606ab23f9486061981b79b7e09e028ecd6b04', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78e5c0537bde1bbbb395a4a569fb9d55265a69bd', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8815dc3d7707f0a2685630689864f820bcbf354', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e16ce258fc6f3b5b638269a492b4ec8afab0063', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ce201ad97d468c2d7c803715a5df55c76f90aa', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6eb96d05b08e870d66dec04cb74f220bbc928a8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba14578dd62abe684a6237fb2c393928a588e812', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c4795740822fc269747c16ef184cd6b27ebfd6d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aee3235df66811b29485fe8ef88187149a3fc4a0', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f63b301303ba86363d37270e64b64a216605bfdb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9a3ace02c1d08ccbbe15d6d92c5a6ea94eee104', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
684108403,Add unit tests for question-player component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Converts AJS directive to AJS component, and adds unit tests

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/124556085-7a471f80-de55-11eb-9e6d-95cb78c1182d.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13322,https://api.github.com/repos/oppia/oppia/pulls/13322,https://github.com/oppia/oppia/pull/13322,closed,1132,604,9,9,7,0,0,1,[],2021-07-06 06:57:16+00:00,2021-07-09 11:44:44+00:00,276448.0,"3 days, 4:47:28",[],"[{'commit_sha': '422270ea2df61542326e4aba04b5076f81f27f73', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d738b6506b7f8f2ae48d5b13b9ce7fa8aa84423', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8453f46c21ec05d952b058811a30d8297489da6', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10283e2c59698b0b0a81f7575566167fb127bcf3', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed982e6daf05ff16c767a74897cf983547449316', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c3d7bd38b70e6020a739d96063cf920ab61f5a6', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9f5ce02a83681d6b771a22efd58dbb5cb80c4d0', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c48a6b718d6b419a2451c475887d30396af203d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '187d4e551f2f69fc814292af0a74eaf68b2250a2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
685427967,Added unit tests for state-editor and answer-group-editor,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Converted state-editor and answer-group-editor to AJS component and added unit tests

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/124817205-14f34b80-df87-11eb-8f28-6b5ff0028b92.png)

![image](https://user-images.githubusercontent.com/26626415/124812581-6c8eb880-df81-11eb-9727-f9ca9caac8cd.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13334,https://api.github.com/repos/oppia/oppia/pulls/13334,https://github.com/oppia/oppia/pull/13334,closed,1260,641,12,12,11,18,0,1,[],2021-07-07 18:45:23+00:00,2021-07-09 11:53:05+00:00,148062.0,"1 day, 17:07:42","[{'comment_id': 665795564, 'comment_body': 'Is it possible to test a state change here?', 'comment_created': datetime.datetime(2021, 7, 8, 0, 52, 45, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665796271, 'comment_body': 'Please rephrase this sentence', 'comment_created': datetime.datetime(2021, 7, 8, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665796484, 'comment_body': 'Are these pre-checks or setup?', 'comment_created': datetime.datetime(2021, 7, 8, 0, 55, 49, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665797027, 'comment_body': 'Might be better if you put comments explaining each step.', 'comment_created': datetime.datetime(2021, 7, 8, 0, 57, 36, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665797933, 'comment_body': 'Check if it can be toggled to true then false then true again.', 'comment_created': datetime.datetime(2021, 7, 8, 1, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665799386, 'comment_body': 'Is it possible to put `ctrl.$onInit` in the `beforeEach` block?', 'comment_created': datetime.datetime(2021, 7, 8, 1, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665799695, 'comment_body': 'All imports can be in the same line. The character limit per line (80) does not apply to imports', 'comment_created': datetime.datetime(2021, 7, 8, 1, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 665861104, 'comment_body': ""Just a note, let's document this in the wiki."", 'comment_created': datetime.datetime(2021, 7, 8, 4, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 666085306, 'comment_body': 'setup', 'comment_created': datetime.datetime(2021, 7, 8, 10, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666085342, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 8, 10, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666085502, 'comment_body': 'Nope, only saveRules() is called, which is stubbed', 'comment_created': datetime.datetime(2021, 7, 8, 10, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666085550, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 8, 10, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666085610, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 8, 10, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666085760, 'comment_body': 'Will have to remove the pre-checks then', 'comment_created': datetime.datetime(2021, 7, 8, 10, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666086002, 'comment_body': 'The max line length error still occurs for `require()`', 'comment_created': datetime.datetime(2021, 7, 8, 10, 53, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 666113427, 'comment_body': 'Thanks for explaining', 'comment_created': datetime.datetime(2021, 7, 8, 11, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 666113452, 'comment_body': 'Thanks for letting me know', 'comment_created': datetime.datetime(2021, 7, 8, 11, 38, 9, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 666113481, 'comment_body': 'oh.. Thanks for letting me know.', 'comment_created': datetime.datetime(2021, 7, 8, 11, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}]","[{'commit_sha': '8a8396f526b33d22373f248f341832183b67589e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dbb721fd7e53fec41b5a433503a8e06da514209', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '151a1d67f1b14233126cb59b5102fe0f1c140289', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1bdc2db90e07182c91b5767d53abcbb72284c1f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ada43f775701515af6bc71b204385a16b3a3150d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '240b09245f76f51f54ad587e795ef4a5a26e9066', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd20677b1207e60e33e794ffda03f361a78a664b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9bce7e3e2bdc3dc4463dc5511638f58139364d0', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2112606d88402796402d1c6e5d57be659f168022', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ded98a35c4777cc6618db70e929e362b7d70d58f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f087ac459af15edeb8d92a6acb87937f22b5d23', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '898a182306e6573deb525c63af9162ca38a27df9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
668944584,Unit tests for sharing-links.component.ts and state-editor.service.ts,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Completely tested:
- `sharing-links.component.ts`
- `state-editor.service.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13069,https://api.github.com/repos/oppia/oppia/pulls/13069,https://github.com/oppia/oppia/pull/13069,closed,645,9,5,21,13,55,1,1,[{'name': 'PR: LGTM'}],2021-06-12 20:06:14+00:00,2021-06-21 12:27:50+00:00,750096.0,"8 days, 16:21:36","[{'comment_id': 650714258, 'comment_body': 'Can we add a note here why the registration status is updating only after calling `updateStateEditorDirectiveInitialised`?', 'comment_created': datetime.datetime(2021, 6, 14, 7, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 650723687, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 14, 7, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 651222034, 'comment_body': 'For the component tests, can you please do a pass and apply the descriptions as mentioned in https://github.com/oppia/oppia/pull/13017#pullrequestreview-682319406?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651222529, 'comment_body': 'Should we add prechecks for these?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651222694, 'comment_body': 'Ditto: Add prechecks', 'comment_created': datetime.datetime(2021, 6, 14, 19, 36, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651233647, 'comment_body': '`should set query fields for social platform APIs when an exploration is shared` or similar?', 'comment_created': datetime.datetime(2021, 6, 14, 19, 53, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651278856, 'comment_body': ""Optional (please create a TODO / issue if it is out of scope for this PR): This behaviour seems a bit weird. We don't throw errors like this in other components when it is used in the wrong place. Is this error meant only for devs -- it seems odd to throw an error in the business logic to alert devs?\r\n\r\nI would suggest not providing `@Input` to this component, instead use the `ContextService` directly to determine if the collection or exploration page is active and render accordingly."", 'comment_created': datetime.datetime(2021, 6, 14, 21, 9, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651283678, 'comment_body': 'Should we have more specific tests here for different layout / font combinations?\r\n\r\nAlso, It seems like `layoutAlignType` is expected to be a hyphen-separated value. Should we validate this in the component and add tests?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651284013, 'comment_body': 'We are only testing the font size here. Should we check the classes as well?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651284463, 'comment_body': 'Should we have prechecks?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 19, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651285529, 'comment_body': ""```suggestion\r\n  it('should get social media URLs', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 14, 21, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651288374, 'comment_body': 'Move this line along with the test setup.', 'comment_created': datetime.datetime(2021, 6, 14, 21, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651288675, 'comment_body': 'Add a newline before the  postchecks.', 'comment_created': datetime.datetime(2021, 6, 14, 21, 25, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651292403, 'comment_body': 'Considering this is a large object, should we add a comment explaining what this represents?', 'comment_created': datetime.datetime(2021, 6, 14, 21, 32, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651315590, 'comment_body': 'Err.. what are we testing here? Did you mean to use the getter method for the expect statements?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651316106, 'comment_body': '`should initialise state content editor`. Use the same format below.', 'comment_created': datetime.datetime(2021, 6, 14, 22, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651316685, 'comment_body': '`should initialise state content editor`. Use the same format below.', 'comment_created': datetime.datetime(2021, 6, 14, 22, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651316948, 'comment_body': 'Are we actually testing `..emit state names change event`?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651317325, 'comment_body': 'Should we add expect statements to check these values are false?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 23, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651318085, 'comment_body': 'Corresponding changes may apply below after each `updateXXXEditorInitialised()`?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651319323, 'comment_body': 'Should we subscribe to this Observable and check that it gets called on setStateNames()?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 28, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651320455, 'comment_body': 'Maybe a duplicate of `should set correctness feedback enabled`?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651320933, 'comment_body': 'As a reader, it is not clear why is happening in this test. Can you please add comments?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 651321660, 'comment_body': 'To test these, can we actually subscribe to these Observables, emit the corresponding event and check that the Observable callback exectutes?', 'comment_created': datetime.datetime(2021, 6, 14, 22, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 652224310, 'comment_body': ""I think we can add more test cases for `layoutAlignType`.\r\n\r\nI see it's used without hypens in the code base ([here](https://github.com/oppia/oppia/blob/a6a998addac1f53af848f95ad628f891d931c890/core/templates/pages/collection-player-page/collection-footer/collection-footer.component.html#L20)).\r\n\r\nSo, either we can make the expected value to be space-separated and add a check for it."", 'comment_created': datetime.datetime(2021, 6, 15, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652224356, 'comment_body': ""I didn't get you -- do you mean testing with different values of `layoutType` or `layoutAlignmentType`?"", 'comment_created': datetime.datetime(2021, 6, 15, 23, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652225714, 'comment_body': ""I don't think we need pre-checks here (and how would we pre-check it?)"", 'comment_created': datetime.datetime(2021, 6, 15, 23, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652264563, 'comment_body': ""I think I have followed the comment in the test descriptions, which one do you think can be improved? (I suppose, getUrl() and getFontAndFlexClass() 's tests have a bit service-like description, but they also act as a service like function)"", 'comment_created': datetime.datetime(2021, 6, 16, 0, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267386, 'comment_body': 'Added pre checks', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267397, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267401, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267413, 'comment_body': 'I have added a TODO', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267440, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267462, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267478, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267498, 'comment_body': 'Added a comment', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267505, 'comment_body': 'Yep, removed', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267527, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267535, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267547, 'comment_body': 'Changed test description', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267556, 'comment_body': 'Added checks to verify if these values are false', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267570, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267574, 'comment_body': 'Added a comment', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652267599, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 0, 46, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 653703771, 'comment_body': 'I think this has been resolved now. Latest commits seem to have fixed the descriptions, thanks!', 'comment_created': datetime.datetime(2021, 6, 17, 15, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653704721, 'comment_body': 'I think you need to create an issue and do something like `// TODO(#<issue number>): ...`. See TODOs in the codebase.', 'comment_created': datetime.datetime(2021, 6, 17, 15, 59, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653887924, 'comment_body': 'Hm, I think we need to figure out what exactly is expected. It seems like it would be problematic in following lines:\r\n\r\nhttps://github.com/oppia/oppia/blob/a6a998addac1f53af848f95ad628f891d931c890/core/templates/components/common-layout-directives/common-elements/sharing-links.component.ts#L83-L84\r\n\r\nFor example, if `layoutAlignType` is ""center center"", it will result in the classes looking like:\r\n\r\n`fx-main-center center fx-cross-undefined`', 'comment_created': datetime.datetime(2021, 6, 17, 19, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653888523, 'comment_body': 'Yup, I meant do we need to test `layoutType` and `layoutAlignmentType`.', 'comment_created': datetime.datetime(2021, 6, 17, 19, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653890997, 'comment_body': 'It seems like `getUrl` will still return (an invalid) URL if the variables required to construct the URL sub-parts are undefined. Should we add a check for the URL before the variables are set?', 'comment_created': datetime.datetime(2021, 6, 17, 19, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653904964, 'comment_body': ""Here and below: It looks like we are spying on X, calling X directly in the test and then expecting it to have been called. Is this expected?\r\n\r\nHm, actually, I don't think we need to test these getters TBH. In some service spec files we seem to have simply subscribed to such getter and then unsubscribed to them in the afterAll block (see `router.service.spec.ts`, `questions-list.service.spec.ts`). Should we do a similar thing?\r\n"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654110404, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110419, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110440, 'comment_body': 'Added precheck', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 21, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110452, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654110466, 'comment_body': 'Added check and changed code to split string by space', 'comment_created': datetime.datetime(2021, 6, 18, 3, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '2a7a91ff2b1347948fbeb62d3afe7957553fd9d8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e75b338cce859f71887d8706d4fc5cb15b194b3f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b35eb58fd03fdd60ccf4333fecbc74f7f1dcb59', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11694e974f18d9fa43d13b7f747f5b62f55b93a1', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e800cd8b89950cab3355fe54a20885be811ab8f3', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f61cea0334f2684c006e5fadb610dda0d46c342', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7ac15b8d822df0875d1d4f15d3f573d5c4dfda8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cef5d2dfe4c90f7068b44d3f5f508621625835a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd29ee8de3048c6e716a7b59d42293e11c590d39', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d754960ee792c4d91080c06588b2fe5c665b58b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb68bd68c8fe6e8fbabb8517cde316cd1cf71697', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2048b59d0a554245b3d23f50c17905c1ee66f1f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cacec3bea45375a006ce9aeda29f1c72f4ed86c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d1652ec3947d6e00177d7adfde40e652b570f28', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2a2cb5e9f8dc3955d39f511ad0ad2f31c6009a4', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f1103bf09dec7ba3f7d892f27c6a21bf0b70ed7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5908c42603bf5430f0dd1a8be885b22423317193', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0bc14639d4ae1c841960dd2e7dc9d01506f2bc4', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cdb875740ce725f6f2ceef9b0a3be235c87a442', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b41716f0bda6a549bef1573cba5b99143ee8930b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c5fb70c2bac9e82213c15d92f6c5bfa855c010f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
670891985,Add unit test image uploader skill selector,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Adds unit tests to:
- `image-uploader.component.ts`
- `skill-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122142129-6a4aaa00-ce6c-11eb-9d63-ba82cb4078cf.png)
![image](https://user-images.githubusercontent.com/26626415/122142142-7171b800-ce6c-11eb-8ea8-a0d9b4c98876.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13102,https://api.github.com/repos/oppia/oppia/pulls/13102,https://github.com/oppia/oppia/pull/13102,closed,697,8,4,12,9,22,1,1,[{'name': 'PR: LGTM'}],2021-06-16 00:59:48+00:00,2021-06-21 12:04:32+00:00,471884.0,"5 days, 11:04:44","[{'comment_id': 652329269, 'comment_body': '```suggestion\r\n/**\r\n * @fileoverview Tests for audio-file-uploader component.\r\n */\r\n```', 'comment_created': datetime.datetime(2021, 6, 16, 3, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652330962, 'comment_body': 'Is it possible for this to be before `component.ngOnInit();`. Since it might be better to follow the format of \r\n\r\n1. Setup actions\r\n2. pre-checks\r\n3. Actions\r\n4. post-checks\r\n\r\nSame comment for the other tests too.', 'comment_created': datetime.datetime(2021, 6, 16, 3, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652331559, 'comment_body': ""Something like this test `should clear all filters when user clicks on \\'Clear All`.\r\nHere all the variables are declared then the functions are called."", 'comment_created': datetime.datetime(2021, 6, 16, 3, 58, 18, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652332059, 'comment_body': 'Can we add a pre-check here? Same for the other tests. It would be better to test the state change right?', 'comment_created': datetime.datetime(2021, 6, 16, 4, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652469320, 'comment_body': 'Added', 'comment_created': datetime.datetime(2021, 6, 16, 8, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652469333, 'comment_body': 'Here, `ngOnInit()` is part of the setup -- and the call to `updateSkillsListOnTopicFilterChange` is the action', 'comment_created': datetime.datetime(2021, 6, 16, 8, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652469414, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 8, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 652471956, 'comment_body': 'Can we have a pre-check here?', 'comment_created': datetime.datetime(2021, 6, 16, 8, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 652487527, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 16, 8, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 653948851, 'comment_body': 'Thanks for fixing these typos!', 'comment_created': datetime.datetime(2021, 6, 17, 21, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653981847, 'comment_body': 'Should there be a precheck?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653983323, 'comment_body': 'It seems to be registering specific event listeners. Should we add checks for the specific events?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 55, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653984771, 'comment_body': 'Should we expect that the dummy file is being emitted?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653986598, 'comment_body': 'Use a named constant for the size value.', 'comment_created': datetime.datetime(2021, 6, 17, 21, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653988550, 'comment_body': ""```suggestion\r\n  it('should upload a valid image', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 22, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654148576, 'comment_body': 'Added (but `fileInputClassName` cannot be undefined, as init block gets called while setting up the test env)', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148601, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148607, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148617, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654148642, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 5, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654700963, 'comment_body': 'Oh, hm, in that case, can you unset it before line 64 and then call ngOnInit and check that it gets set?', 'comment_created': datetime.datetime(2021, 6, 18, 22, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654721816, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 19, 0, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '4b302e5d0a1ce08b5370b44e55313e6c079e71b7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c619df2548944d9f4715cd9411da824b4576e163', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e4e2c1488c23c163cf8ae4550cca0acdf8411dd', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1faf22cd7f1a1d288435412bd4c75d438f7890f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ea7e82973cc8b8ec7430f7ab1c4ccd2fba524f4', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c21305096dc688367f65f3dc65fe3208741840c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '642c735db1f0487e6e1502de88bf4662e66ce897', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8501eb22594eeb9cf3dad7431847d90f26884d32', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '283bc1025757f3593dea3cf327aa29058b5e4a59', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0aaeaabbdff8361df7cb8f310735dbb587b9c618', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70a4d03d5b20f7cd3dfdf3542ea56e5ab882844b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4ba11dcdddfd9b6862ad51b199b5bfe7d2a7747', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
678290114,"Frontend unit tests for state-responses, rating-display and question-difficulty-selector component/directive","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: 

Migrates `state-responses.directive.ts` to  AJS component. 
Covers:
- `state-responses.component.ts`
- `rating-display.directive.ts`
- `question-difficulty-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/123504496-5c203900-d677-11eb-92f7-22eb45794149.png)

![image](https://user-images.githubusercontent.com/26626415/123504487-50cd0d80-d677-11eb-910e-654cc893ca34.png)
![image](https://user-images.githubusercontent.com/26626415/123504508-680bfb00-d677-11eb-9187-5e8bc06b601b.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13217,https://api.github.com/repos/oppia/oppia/pulls/13217,https://github.com/oppia/oppia/pull/13217,closed,1933,811,9,19,10,14,1,1,[{'name': 'PR: LGTM'}],2021-06-26 07:06:04+00:00,2021-06-29 20:30:42+00:00,307478.0,"3 days, 13:24:38","[{'comment_id': 659214555, 'comment_body': 'Is it possible to check for a state change for this?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659214784, 'comment_body': 'For this test what are the pre-checks, actions, and post-checks? Can you add a comment in the code mentioning the same?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215529, 'comment_body': 'Pre-check for `$scope.activeAnswerGroupIndex`.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215579, 'comment_body': 'Pre-check?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659268663, 'comment_body': 'The function `getStaticImageUrl` does not exist before $onInit is called', 'comment_created': datetime.datetime(2021, 6, 27, 6, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270434, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270439, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270446, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659274762, 'comment_body': 'if lines 95 - 97 are the actions and the rest of the lines are the post-checks then insert a new line in between.', 'comment_created': datetime.datetime(2021, 6, 27, 7, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659274952, 'comment_body': '```suggestion\r\n      .toHaveBeenCalledWith(0);\r\n      \r\n    ctrl.$onDestroy();\r\n```', 'comment_created': datetime.datetime(2021, 6, 27, 7, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659275212, 'comment_body': 'Please separate set-up, actions, and post-checks with a line in between. Please do this for the rest of the tests', 'comment_created': datetime.datetime(2021, 6, 27, 7, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659290386, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290391, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290398, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': 'ff0c90e1d6d07d47cc9e62f802d2ad94781b5032', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0759655fee65d41cb6471b7124834c31d27d2b83', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c096e8a7f36f130400d67e1582c0bcc11360f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8339e49b0561f8248da5f7732a74efcd0fbe4b84', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6bfe603be701e1fee05f384e2ec5e331bc34c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95843976bc3da5ee34e9123094dc8b79e301fe3d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93fdb914d369272baf9e3bd3464ac05e0fd28271', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc483dc77ea7b1ec0d9635dcec648f5d680027c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ea46da75cac8e23847e608303f980909d0156d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3563f1930641e29e20c88386a0486714ceaf87ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c997d12ce3721df4c644637d2aa2aa445770ee00', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015fcbe3dc2a7bd1c2a5cc5b1fcc1f67f9da167c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81af072fda3eff6454b23e5ab5cbd077abbe758c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2688e683ee91e284fc2601d711a8530eb354a742', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d867126de27c70bdd86d13f74756c685f27f143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e11e31eaee77ff010e21b2f6f2dd5f380bf3e80', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37a8d96a2bbcd507db99d10f1e9c7b06a4559f78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f344d4112336e08c773c29c2f54f5dae034a423e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05caa673d4a517ec43b309cb50289deb08eec965', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
674104395,Unit tests for hint and solution button component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers `hint-and-solution-buttons.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122689585-65f20880-d241-11eb-8e39-99c8d4763f1d.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13154,https://api.github.com/repos/oppia/oppia/pulls/13154,https://github.com/oppia/oppia/pull/13154,closed,422,1,2,4,3,1,0,1,[],2021-06-20 22:03:40+00:00,2021-06-23 21:58:35+00:00,258895.0,"2 days, 23:54:55","[{'comment_id': 655415182, 'comment_body': ""```suggestion\r\ndescribe('Hint and solution buttons component', () => {\r\n```"", 'comment_created': datetime.datetime(2021, 6, 21, 14, 14, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}]","[{'commit_sha': 'fdc99331ef0d4cc6fb1fe0b485fab37e73d0947a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb39311ec4236793b636a8a9331019f8c0ec390c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb75921d23e1e2acfa401ccf744e0598050405ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '819ae5ec3f8dfaa2714eac9737492add53d404f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
671661677,Add unit test story summary tile,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Adds unit tests for `story-summary-tile.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![image](https://user-images.githubusercontent.com/26626415/122258088-492a9d80-ceee-11eb-8cbc-4cd328bc0fea.png)
## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13110,https://api.github.com/repos/oppia/oppia/pulls/13110,https://github.com/oppia/oppia/pull/13110,closed,461,2,3,9,13,25,1,1,[{'name': 'PR: LGTM'}],2021-06-16 16:32:22+00:00,2021-06-23 04:53:24+00:00,562862.0,"6 days, 12:21:02","[{'comment_id': 653656514, 'comment_body': '```suggestion\r\n    // Here the value is calculated by the formula -> (circumference -\r\n    // (nodeCount * gapLength))/nodeCount = (2 * 20 * Math.PI - (3*5))/ 3\r\n    // = 36.88790204786391. Along with this value, gapLength (5) is also\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 15, 7, 48, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 653914577, 'comment_body': 'Should it be ""thumbnail filename"" instead of ""thumbnail name""?', 'comment_created': datetime.datetime(2021, 6, 17, 20, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653917387, 'comment_body': 'Where does this scenario actually happen (i.e. we show a story summary tile without a thumbnail somewhere in the app)?', 'comment_created': datetime.datetime(2021, 6, 17, 20, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653926142, 'comment_body': 'Can you please reword this? It seems a bit confusing to read.', 'comment_created': datetime.datetime(2021, 6, 17, 20, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653926682, 'comment_body': '```suggestion\r\n    // Will show ""View All"" button as number of nodes (5) is more than chapters\r\n```', 'comment_created': datetime.datetime(2021, 6, 17, 20, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653928341, 'comment_body': ""```suggestion\r\n  it('should show \\'View All\\' button if number of nodes is not same as the' +\r\n```"", 'comment_created': datetime.datetime(2021, 6, 17, 20, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653931461, 'comment_body': 'Hm, actually, the condition here seems a bit odd. The actual check is `ctrl.chaptersDisplayed !== ctrl.nodeCount` where `ctrl.chaptersDisplayed` is fixed (2 or 3) and `ctrl.nodeCount` is not fixed. Should the `View All` button only be shown when the node count is greater than `ctrl.chaptersDisplayed`?', 'comment_created': datetime.datetime(2021, 6, 17, 20, 53, 46, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653932527, 'comment_body': '""User\'s progress"" here seems too vague. Please elaborate what progress here means (e.g. number of chapters completed). ', 'comment_created': datetime.datetime(2021, 6, 17, 20, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653938166, 'comment_body': 'It may be a bit hard to locate the comment being referred to here. It may not be great to rely on the ordering of the tests here -- it may change in the future and the developer may not update the comment. Should we add the comment here again or add a comment at the top of the file after fileoverview so it can be referenced throughout the file?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 0, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653942140, 'comment_body': '`should return the chapter URL when the chapter title is provided`', 'comment_created': datetime.datetime(2021, 6, 17, 21, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 653944693, 'comment_body': 'Perhaps `should populate the story URL when URL fragments are set`?', 'comment_created': datetime.datetime(2021, 6, 17, 21, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654112615, 'comment_body': 'Hmm, I am not able to find any such scenario, should we remove the condition or keep it (so that nothing breaks in future?)', 'comment_created': datetime.datetime(2021, 6, 18, 3, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654115211, 'comment_body': 'This check if there in the HTML file - [here](https://github.com/oppia/oppia/blob/9a155322871a3ac46847e85ff63986b5b00f3af6/core/templates/components/summary-tile/story-summary-tile.component.html#L62)', 'comment_created': datetime.datetime(2021, 6, 18, 3, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119844, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119863, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119888, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119896, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119927, 'comment_body': 'Added a comment here, so that the reader does not need to scroll back again to the top', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119938, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654119949, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654122136, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 18, 3, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654701933, 'comment_body': 'If thumbnailUrl is null, will it not show a broken image to the user? If so, it seems like a bad experience ..\r\nCan we not render the image using an ngIf (or) just show a placeholder if this is the case? Perhaps worth checking why this was added in the first place (using git blame).', 'comment_created': datetime.datetime(2021, 6, 18, 22, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 654718538, 'comment_body': 'Added a check to not render the image if thumbnailUrl is null. This was added to fix [this](https://github.com/oppia/oppia/issues/9559) in this [PR](https://github.com/oppia/oppia/pull/9591)', 'comment_created': datetime.datetime(2021, 6, 18, 23, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 654980345, 'comment_body': 'Minor nit: keep ngIf on the top and src below it. Makes it easier to read through logic in templates.', 'comment_created': datetime.datetime(2021, 6, 20, 19, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 655583723, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 17, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '61fd302cc50f7a7783531452e6fd869a3a2b2f1e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37ae4b5d021779d5c02f7a98dfc47258f1ae326f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d8197fc34f86b8ce017c55d0109995fbafb8413', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a88e7a569923af1a7d3af2e5079c60c90c3ff1', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce5c9cabd43ca3560a0605d02c18f1586796d63e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e4f7b5da9cabe8314ff158f17ec0d89e6fc284f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fcf95aa6314fefd3816757198e449a1564e94aa', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa4f7556578edc2681076790e42c23179bcaeb82', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebf3814087fff82d80884f6cfc0136dc7254115e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
673938483,Unit test for thumbnail uploader component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers `thumbnail-uploader.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122656242-4f32af80-d176-11eb-86bb-36a9fa91399a.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13138,https://api.github.com/repos/oppia/oppia/pulls/13138,https://github.com/oppia/oppia/pull/13138,closed,369,1,2,8,7,4,0,1,[],2021-06-19 21:50:11+00:00,2021-06-23 21:07:20+00:00,343029.0,"3 days, 23:17:09","[{'comment_id': 655651847, 'comment_body': 'Should we check that the ""editableThumbnailDataUrl"" remains the same?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655652973, 'comment_body': 'Should we expect that the modal was not open?', 'comment_created': datetime.datetime(2021, 6, 21, 19, 36, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655773096, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 23, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 655773209, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 23, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '03d80f9d62a8a8a1b1ceacd8fc4b9e5f1a085c4d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3feb4200aac076656e1f331fc53cd263ac6b8f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e214b694e45921f0036af998fd0dba3208de9faf', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a05ab1e36dd9c94e9a9d66c2e9fd3e5844dcc4ae', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '662004bdcbd37b24e7108e9bc887c821b5eb51e7', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '335d3601800df4063034ce5c0e5c426d388b572d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60df86d5777ebd2d959cc21530fb436a0f9598e5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bba6ca6d61cce2ac98278a7d598389aa121b4e32', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
673588682,Unit tests for top navigation bar component,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers `top-navigation-bar.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct

![image](https://user-images.githubusercontent.com/26626415/122628602-99fbeb00-d0d4-11eb-8aa3-6f275afa7a53.png)


## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13126,https://api.github.com/repos/oppia/oppia/pulls/13126,https://github.com/oppia/oppia/pull/13126,closed,463,5,6,23,16,5,1,1,[{'name': 'PR: LGTM'}],2021-06-18 16:08:10+00:00,2021-06-24 10:26:19+00:00,497889.0,"5 days, 18:18:09","[{'comment_id': 655646112, 'comment_body': ""There aren't any expect statements here. What are we testing?"", 'comment_created': datetime.datetime(2021, 6, 21, 19, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655646626, 'comment_body': 'Looks like repeated lines.', 'comment_created': datetime.datetime(2021, 6, 21, 19, 25, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 655724336, 'comment_body': 'File extensions are different', 'comment_created': datetime.datetime(2021, 6, 21, 21, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 655763291, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 21, 23, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 655908370, 'comment_body': 'Ah, I see. Thanks!', 'comment_created': datetime.datetime(2021, 6, 22, 6, 19, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}]","[{'commit_sha': '91fe01640a4a92f662f6ad874bdb0c3fa18eb2d2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '184951fe48c2363b0f103391a1c7130a90b7bff9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abe1992a1b031c7706f46b8f55d47d472a1aaa02', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71a2d6fe094c355bb5eeeb8dd94dda4578061e68', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b38888667e9bc5c55010eb4bf72937dfeb6d65', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0211b1fde8829f58b8b78bfde61a3f52c3c6ec50', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fac9ca131ebcd9779a6f11a7b86559d1cbfa479', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0134cd9669427ba321c28086a76ca68b109af0e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb158a28c12973eec56d87da4b57cac50599fc78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74cfcad7cac65ee3d8035f12a78a1612044b90ed', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82565a706f076db5d11139dc007fc3d2a56641a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8ef20a9b9234874d1065df014accda29041e5a96', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6af2d3731f17f2a156bb3184f5c7820b729cd820', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43efd36e101f3bbebfc68fcea8362fbb3fc9dfea', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e944ea7c159c170adbedafd6f16e1a8789623e75', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '423ca81a502f90f6e8eb4e0d6e57614287d2b602', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6e2307538fd52b5a2b45b994e9cd50c7134f30e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b688c1768560e85e1e45edf86a9f1a6c23a3767f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5b5a10e3440d14e3124ed9589f405c71fb14864', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ff7f7f3339cc2302487413d90f242a564edff9e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5c49c13a1617426d3aa27790a2ac09ce1064f0c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d0a62b9fd97aa88016c48a3aac968252208fa0f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4761571819d7da590d0811bf093697ed845a35c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
675388840,Unit test for exploration creation service,"## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: Covers exploration-creation.service.ts

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/122926910-f89bc000-d385-11eb-8334-cac421f8f9d8.png)

<!--
Add videos/screenshots of the user-facing interface to demonstrate that the changes made in this PR work correctly.
If the changes in your PRs are autogenerated via a script and you cannot provide proof for the changes then please leave a comment ""No proof of changes needed because {{Reason}}"".
-->

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13176,https://api.github.com/repos/oppia/oppia/pulls/13176,https://github.com/oppia/oppia/pull/13176,closed,216,2,4,23,14,32,1,1,[{'name': 'PR: LGTM'}],2021-06-22 12:47:38+00:00,2021-07-06 09:19:00+00:00,1197082.0,"13 days, 20:31:22","[{'comment_id': 656372360, 'comment_body': 'Description is unclear.\r\ncan we have this pattern `should do X if Y happens`?', 'comment_created': datetime.datetime(2021, 6, 22, 16, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 656373864, 'comment_body': 'Why do have we two tests with the same description?\r\n(Ref: line no. 209)', 'comment_created': datetime.datetime(2021, 6, 22, 16, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 656374585, 'comment_body': 'Why do we have similar tests here?\r\n(Ref line no. 146)', 'comment_created': datetime.datetime(2021, 6, 22, 16, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Radesh-kumar', 'type': 'User'}, {'comment_id': 656729804, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 23, 3, 21, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 656729810, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 23, 3, 21, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 656729820, 'comment_body': 'Removed', 'comment_created': datetime.datetime(2021, 6, 23, 3, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 658275854, 'comment_body': 'Add a newline above^', 'comment_created': datetime.datetime(2021, 6, 24, 20, 54, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658276610, 'comment_body': 'Instead of creating these mock services can we use spyOn? (spyOn makes it very clear and allows us to write isolated and more readable tests.)', 'comment_created': datetime.datetime(2021, 6, 24, 20, 56, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658276940, 'comment_body': 'Avoid adding logics in test files*', 'comment_created': datetime.datetime(2021, 6, 24, 20, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658277579, 'comment_body': 'Why as unkown?', 'comment_created': datetime.datetime(2021, 6, 24, 20, 57, 45, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658278165, 'comment_body': 'Do we have mock class + spyOn togther? Just having spyOn would be better, right?', 'comment_created': datetime.datetime(2021, 6, 24, 20, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658278863, 'comment_body': 'If we have sypOn everywhere then why do we need Mock class?', 'comment_created': datetime.datetime(2021, 6, 24, 21, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658281920, 'comment_body': ""Service doesn't show anything, should we make it `should change loadingMessage to Creating exploration`\r\n\r\nAlso, can we have this structure:\r\n```\r\ndescribe: ExplorationCreationService\r\n    describe: on calling createNewExploration\r\n       it: should not create a new exploration if another exploration creation is in progress\r\n       it: should change loadingMessage to Creating exploration while creating exploration\r\n       it: ......\r\n```"", 'comment_created': datetime.datetime(2021, 6, 24, 21, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 658283530, 'comment_body': 'is it expected to use `tick` for async function tests?\r\n\r\n/cc @srijanreddy98 ', 'comment_created': datetime.datetime(2021, 6, 24, 21, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659193852, 'comment_body': ""Not using `as unknown` gives this error:\r\n\r\n`\r\nConversion of type 'ExplorationCreationBackendApiService' to type 'MockExploratinoCreationBackendApiService' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\r\n`"", 'comment_created': datetime.datetime(2021, 6, 26, 17, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659194057, 'comment_body': 'Yes, it can be used - [reference](https://codecraft.tv/courses/angular/unit-testing/asynchronous/#_code_fakeasync_code_and_code_tick_code)', 'comment_created': datetime.datetime(2021, 6, 26, 17, 14, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659206413, 'comment_body': ""This was to trigger the failure callback, which I don't think we can omit "", 'comment_created': datetime.datetime(2021, 6, 26, 18, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659206506, 'comment_body': 'Yep, but during the course of the project the FE test team decided to use mocks ([ref](https://docs.google.com/document/d/1EyHQ3256BEb271jbZtnwNU7qrxufoCKKpa7yP5x5bR0/edit#bookmark=id.emknze8nl79a)', 'comment_created': datetime.datetime(2021, 6, 26, 18, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207539, 'comment_body': 'Removed this, for the previous test we need to make sure the function is not called, so had to spy on it.', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207541, 'comment_body': 'Explained in a comment below', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207543, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659207556, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 26, 18, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659494519, 'comment_body': '@srijanreddy98 Can you please confirm on structure for writing tests?', 'comment_created': datetime.datetime(2021, 6, 28, 5, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659494702, 'comment_body': ""@srijanreddy98 Can you please confirm whether it's fine to use tick here?"", 'comment_created': datetime.datetime(2021, 6, 28, 5, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 659999302, 'comment_body': 'Just to clarify... Mocks/spies are fine to be used. Prefer spies over mocks because they are easier to understand.', 'comment_created': datetime.datetime(2021, 6, 28, 17, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 662000263, 'comment_body': 'Hi Aishwary, this is my only comment, could you try to simplify the tests by using spies where possible?', 'comment_created': datetime.datetime(2021, 7, 1, 6, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nithusha21', 'type': 'User'}, {'comment_id': 662281827, 'comment_body': ""Yes, it's correct to use tick here."", 'comment_created': datetime.datetime(2021, 7, 1, 13, 19, 26, tzinfo=datetime.timezone.utc), 'commenter': 'srijanreddy98', 'type': 'User'}, {'comment_id': 663298457, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 3, 1, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663313351, 'comment_body': 'is this resolved?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663313380, 'comment_body': 'Are we still using the MockService?', 'comment_created': datetime.datetime(2021, 7, 3, 4, 4, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 663313516, 'comment_body': 'Yes, removed the mock and the logic as well', 'comment_created': datetime.datetime(2021, 7, 3, 4, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 663313533, 'comment_body': 'Nope, removed the mock', 'comment_created': datetime.datetime(2021, 7, 3, 4, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': '1230ccb2549fe6bb6a0b2525b380a9f18270562c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab36b8af8c48af0513fa810aadd359113ef94f35', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1aa2e56f9c5711d135d9d0e26c79933e35a067e1', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '931ce44904ecdd2569d53232ab53199335bf2e55', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74c6e0f3294a5a1fb168e8e9886ab81b38c9c581', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ead87f94f2a49b5f204e0875045ec900b6eeecbf', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9726528987ae3265b16ed5e37f27637f03f39cb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff02b38b6c6830c8f6264be1cb1a1ecd108a0f9c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00545ed0341736233150cfc2fba15c513128df5b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb2c627f3a2554cc72a1d9fd896f26640fac348f', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e29f2a6b146340f88dc7de851c04443bdbf0779a', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64a81b6b91f3d9f5b9f37994e7089785417b20e5', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d222ea64f80a38b7c4ca102eb8fa7276806d44c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1a3faab966e9bf7d5c95543832f292daeb99670', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2f11b585f6b6667a3aef740105d09ef7c6abfcb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a4b04e4b7683de4dc9bd267ffbed72a2b3c4ea', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c676ea0f689a41f99c4962e64b5d25efd24b49bb', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd11b2c19a6eb1f75a35c0c2c4a070fde4a276d5b', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81b8e0a2444dc0bce95827e669f9f9c4b0abb143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f14676b43a0820dc29b2a5bd874ffd16b1d9047', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c279c72a72807c96f399081190f92c814d5a53e2', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57f5ed6f0137332576162c2a985bec8612afdb6d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23e7a4fa4eb4e5506a79400a901380ab8e899a05', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54
678290114,"Frontend unit tests for state-responses, rating-display and question-difficulty-selector component/directive","## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

1. This PR fixes or fixes part of #[fill_in_number_here].
2. This PR does the following: 

Migrates `state-responses.directive.ts` to  AJS component. 
Covers:
- `state-responses.component.ts`
- `rating-display.directive.ts`
- `question-difficulty-selector.component.ts`

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [x] The linter/Karma presubmit checks have passed locally on your machine.
- [x] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [x] The PR is made from a branch that's **not** called ""develop"".

## Proof that changes are correct
![image](https://user-images.githubusercontent.com/26626415/123504496-5c203900-d677-11eb-92f7-22eb45794149.png)

![image](https://user-images.githubusercontent.com/26626415/123504487-50cd0d80-d677-11eb-910e-654cc893ca34.png)
![image](https://user-images.githubusercontent.com/26626415/123504508-680bfb00-d677-11eb-9187-5e8bc06b601b.png)

## PR Pointers

- Make sure to follow the [instructions for making a code change](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#instructions-for-making-a-code-change).
- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays.
- Never force push. If you do, your PR will be closed.
- Oppiabot can assign anyone for review/help if you leave a comment like the following: ""{{Question/comment}} @{{reviewer_username}} PTAL""
- Some of the e2e tests are flaky, and can fail for reasons unrelated to your PR. We are working on fixing this, but in the meantime, if you need to restart the tests, please check the [""If your build fails"" wiki page](https://github.com/oppia/oppia/wiki/If-your-build-fails).
",True,13217,https://api.github.com/repos/oppia/oppia/pulls/13217,https://github.com/oppia/oppia/pull/13217,closed,1933,811,9,19,10,14,1,1,[{'name': 'PR: LGTM'}],2021-06-26 07:06:04+00:00,2021-06-29 20:30:42+00:00,307478.0,"3 days, 13:24:38","[{'comment_id': 659214555, 'comment_body': 'Is it possible to check for a state change for this?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659214784, 'comment_body': 'For this test what are the pre-checks, actions, and post-checks? Can you add a comment in the code mentioning the same?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215529, 'comment_body': 'Pre-check for `$scope.activeAnswerGroupIndex`.', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659215579, 'comment_body': 'Pre-check?', 'comment_created': datetime.datetime(2021, 6, 26, 19, 36, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659268663, 'comment_body': 'The function `getStaticImageUrl` does not exist before $onInit is called', 'comment_created': datetime.datetime(2021, 6, 27, 6, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270434, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270439, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 22, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659270446, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 6, 26, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659274762, 'comment_body': 'if lines 95 - 97 are the actions and the rest of the lines are the post-checks then insert a new line in between.', 'comment_created': datetime.datetime(2021, 6, 27, 7, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659274952, 'comment_body': '```suggestion\r\n      .toHaveBeenCalledWith(0);\r\n      \r\n    ctrl.$onDestroy();\r\n```', 'comment_created': datetime.datetime(2021, 6, 27, 7, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659275212, 'comment_body': 'Please separate set-up, actions, and post-checks with a line in between. Please do this for the rest of the tests', 'comment_created': datetime.datetime(2021, 6, 27, 7, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'gp201', 'type': 'User'}, {'comment_id': 659290386, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290391, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}, {'comment_id': 659290398, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 6, 27, 9, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'aishwary023', 'type': 'User'}]","[{'commit_sha': 'ff0c90e1d6d07d47cc9e62f802d2ad94781b5032', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0759655fee65d41cb6471b7124834c31d27d2b83', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05c096e8a7f36f130400d67e1582c0bcc11360f9', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8339e49b0561f8248da5f7732a74efcd0fbe4b84', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6bfe603be701e1fee05f384e2ec5e331bc34c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95843976bc3da5ee34e9123094dc8b79e301fe3d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93fdb914d369272baf9e3bd3464ac05e0fd28271', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc483dc77ea7b1ec0d9635dcec648f5d680027c8', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70ea46da75cac8e23847e608303f980909d0156d', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3563f1930641e29e20c88386a0486714ceaf87ad', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c997d12ce3721df4c644637d2aa2aa445770ee00', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '015fcbe3dc2a7bd1c2a5cc5b1fcc1f67f9da167c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81af072fda3eff6454b23e5ab5cbd077abbe758c', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2688e683ee91e284fc2601d711a8530eb354a742', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d867126de27c70bdd86d13f74756c685f27f143', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e11e31eaee77ff010e21b2f6f2dd5f380bf3e80', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37a8d96a2bbcd507db99d10f1e9c7b06a4559f78', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f344d4112336e08c773c29c2f54f5dae034a423e', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05caa673d4a517ec43b309cb50289deb08eec965', 'committer_username': 'aishwary023', 'committer_name': 'Aishwary Saxena', 'committer_email': 'aishwary.saxena.min19@itbhu.ac.in', 'commit_date': datetime.datetime(2017, 3, 23, 13, 5, 23, tzinfo=datetime.timezone.utc)}]",Aishwary Saxena,26626415,aishwary.saxena.min19@itbhu.ac.in,User,,24,,22,54

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3839,5716,240,775,15750,1420,417,26,"[{'id': 803887801, 'number': 14443, 'closed': datetime.datetime(2021, 12, 17, 16, 2, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 15, 21, 49, 46, tzinfo=datetime.timezone.utc), 'time_taken': 151992.0, 'time_delta': '1 day, 18:13:12', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 712861290, 'number': 13685, 'closed': datetime.datetime(2021, 8, 15, 10, 59, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 1, 47, 11, tzinfo=datetime.timezone.utc), 'time_taken': 33119.0, 'time_delta': '9:11:59', 'additions': 99, 'deletions': 1, 'state': 'closed'}, {'id': 712740644, 'number': 13673, 'closed': datetime.datetime(2021, 8, 15, 10, 58, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 8, 1, 8, tzinfo=datetime.timezone.utc), 'time_taken': 97019.0, 'time_delta': '1 day, 2:56:59', 'additions': 911, 'deletions': 12, 'state': 'closed'}, {'id': 706695519, 'number': 13606, 'closed': datetime.datetime(2021, 8, 15, 10, 54, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 17, 12, 55, tzinfo=datetime.timezone.utc), 'time_taken': 495667.0, 'time_delta': '5 days, 17:41:07', 'additions': 1136, 'deletions': 13, 'state': 'closed'}, {'id': 704901285, 'number': 13587, 'closed': datetime.datetime(2021, 8, 11, 4, 6, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 17, 39, 19, tzinfo=datetime.timezone.utc), 'time_taken': 469655.0, 'time_delta': '5 days, 10:27:35', 'additions': 1310, 'deletions': 418, 'state': 'closed'}, {'id': 701724266, 'number': 13554, 'closed': datetime.datetime(2021, 8, 12, 4, 5, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 19, 25, 33, tzinfo=datetime.timezone.utc), 'time_taken': 808770.0, 'time_delta': '9 days, 8:39:30', 'additions': 1204, 'deletions': 550, 'state': 'closed'}, {'id': 696391066, 'number': 13479, 'closed': datetime.datetime(2021, 7, 30, 22, 38, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 24, 18, 43, 53, tzinfo=datetime.timezone.utc), 'time_taken': 532506.0, 'time_delta': '6 days, 3:55:06', 'additions': 1079, 'deletions': 468, 'state': 'closed'}, {'id': 694138662, 'number': 13442, 'closed': datetime.datetime(2021, 7, 30, 1, 51, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 7, 55, 20, tzinfo=datetime.timezone.utc), 'time_taken': 755758.0, 'time_delta': '8 days, 17:55:58', 'additions': 1290, 'deletions': 527, 'state': 'closed'}, {'id': 692066519, 'number': 13418, 'closed': datetime.datetime(2021, 7, 30, 14, 37, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 10, 32, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1051498.0, 'time_delta': '12 days, 4:04:58', 'additions': 1260, 'deletions': 603, 'state': 'closed'}, {'id': 685427967, 'number': 13334, 'closed': datetime.datetime(2021, 7, 9, 11, 53, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 7, 18, 45, 23, tzinfo=datetime.timezone.utc), 'time_taken': 148062.0, 'time_delta': '1 day, 17:07:42', 'additions': 1260, 'deletions': 641, 'state': 'closed'}, {'id': 684108403, 'number': 13322, 'closed': datetime.datetime(2021, 7, 9, 11, 44, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 6, 57, 16, tzinfo=datetime.timezone.utc), 'time_taken': 276448.0, 'time_delta': '3 days, 4:47:28', 'additions': 1132, 'deletions': 604, 'state': 'closed'}, {'id': 682945922, 'number': 13292, 'closed': datetime.datetime(2021, 7, 3, 4, 5, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 1, 53, 23, tzinfo=datetime.timezone.utc), 'time_taken': 7945.0, 'time_delta': '2:12:25', 'additions': 1, 'deletions': 1863, 'state': 'closed'}, {'id': 682315893, 'number': 13287, 'closed': datetime.datetime(2021, 7, 6, 12, 39, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 4, 6, 12, tzinfo=datetime.timezone.utc), 'time_taken': 376383.0, 'time_delta': '4 days, 8:33:03', 'additions': 1753, 'deletions': 673, 'state': 'closed'}, {'id': 682269283, 'number': 13286, 'closed': datetime.datetime(2021, 7, 24, 6, 55, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 1, 31, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1920228.0, 'time_delta': '22 days, 5:23:48', 'additions': 388, 'deletions': 0, 'state': 'closed'}, {'id': 680399230, 'number': 13266, 'closed': datetime.datetime(2021, 6, 30, 0, 16, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 22, 17, 21, tzinfo=datetime.timezone.utc), 'time_taken': 7161.0, 'time_delta': '1:59:21', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 680186176, 'number': 13261, 'closed': datetime.datetime(2021, 6, 29, 16, 39, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 16, 26, 54, tzinfo=datetime.timezone.utc), 'time_taken': 769.0, 'time_delta': '0:12:49', 'additions': 1, 'deletions': 458, 'state': 'closed'}, {'id': 680173671, 'number': 13260, 'closed': datetime.datetime(2021, 6, 29, 16, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 16, 10, 35, tzinfo=datetime.timezone.utc), 'time_taken': 741.0, 'time_delta': '0:12:21', 'additions': 1, 'deletions': 362, 'state': 'closed'}, {'id': 679061204, 'number': 13245, 'closed': datetime.datetime(2021, 6, 28, 13, 43, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 13, 43, 21, tzinfo=datetime.timezone.utc), 'time_taken': 10.0, 'time_delta': '0:00:10', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 679060099, 'number': 13244, 'closed': datetime.datetime(2021, 6, 28, 13, 42, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 13, 41, 58, tzinfo=datetime.timezone.utc), 'time_taken': 16.0, 'time_delta': '0:00:16', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 678290114, 'number': 13217, 'closed': datetime.datetime(2021, 6, 29, 20, 30, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 7, 6, 4, tzinfo=datetime.timezone.utc), 'time_taken': 307478.0, 'time_delta': '3 days, 13:24:38', 'additions': 1933, 'deletions': 811, 'state': 'closed'}, {'id': 678042233, 'number': 13212, 'closed': datetime.datetime(2021, 6, 26, 8, 41, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 16, 31, 20, tzinfo=datetime.timezone.utc), 'time_taken': 58210.0, 'time_delta': '16:10:10', 'additions': 18, 'deletions': 14, 'state': 'closed'}, {'id': 675388840, 'number': 13176, 'closed': datetime.datetime(2021, 7, 6, 9, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 22, 12, 47, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1197082.0, 'time_delta': '13 days, 20:31:22', 'additions': 216, 'deletions': 2, 'state': 'closed'}, {'id': 674591964, 'number': 13163, 'closed': datetime.datetime(2021, 6, 21, 15, 30, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 14, 13, 14, tzinfo=datetime.timezone.utc), 'time_taken': 4639.0, 'time_delta': '1:17:19', 'additions': 20, 'deletions': 8, 'state': 'closed'}, {'id': 674577288, 'number': 13161, 'closed': datetime.datetime(2021, 6, 21, 14, 2, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 13, 57, 4, tzinfo=datetime.timezone.utc), 'time_taken': 312.0, 'time_delta': '0:05:12', 'additions': 20, 'deletions': 8, 'state': 'closed'}, {'id': 674104395, 'number': 13154, 'closed': datetime.datetime(2021, 6, 23, 21, 58, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 22, 3, 40, tzinfo=datetime.timezone.utc), 'time_taken': 258895.0, 'time_delta': '2 days, 23:54:55', 'additions': 422, 'deletions': 1, 'state': 'closed'}, {'id': 673938483, 'number': 13138, 'closed': datetime.datetime(2021, 6, 23, 21, 7, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 19, 21, 50, 11, tzinfo=datetime.timezone.utc), 'time_taken': 343029.0, 'time_delta': '3 days, 23:17:09', 'additions': 369, 'deletions': 1, 'state': 'closed'}, {'id': 673588682, 'number': 13126, 'closed': datetime.datetime(2021, 6, 24, 10, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 16, 8, 10, tzinfo=datetime.timezone.utc), 'time_taken': 497889.0, 'time_delta': '5 days, 18:18:09', 'additions': 463, 'deletions': 5, 'state': 'closed'}, {'id': 671661677, 'number': 13110, 'closed': datetime.datetime(2021, 6, 23, 4, 53, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 16, 32, 22, tzinfo=datetime.timezone.utc), 'time_taken': 562862.0, 'time_delta': '6 days, 12:21:02', 'additions': 461, 'deletions': 2, 'state': 'closed'}, {'id': 670891985, 'number': 13102, 'closed': datetime.datetime(2021, 6, 21, 12, 4, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 0, 59, 48, tzinfo=datetime.timezone.utc), 'time_taken': 471884.0, 'time_delta': '5 days, 11:04:44', 'additions': 697, 'deletions': 8, 'state': 'closed'}, {'id': 670880976, 'number': 13101, 'closed': datetime.datetime(2021, 6, 16, 0, 49, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 0, 49, 37, tzinfo=datetime.timezone.utc), 'time_taken': 3.0, 'time_delta': '0:00:03', 'additions': 635, 'deletions': 8, 'state': 'closed'}, {'id': 668944584, 'number': 13069, 'closed': datetime.datetime(2021, 6, 21, 12, 27, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 20, 6, 14, tzinfo=datetime.timezone.utc), 'time_taken': 750096.0, 'time_delta': '8 days, 16:21:36', 'additions': 645, 'deletions': 9, 'state': 'closed'}, {'id': 664541395, 'number': 13017, 'closed': datetime.datetime(2021, 6, 23, 10, 27, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 9, 8, 10, tzinfo=datetime.timezone.utc), 'time_taken': 1300785.0, 'time_delta': '15 days, 1:19:45', 'additions': 688, 'deletions': 61, 'state': 'closed'}, {'id': 658211699, 'number': 12946, 'closed': datetime.datetime(2021, 6, 7, 8, 16, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 10, 43, 7, tzinfo=datetime.timezone.utc), 'time_taken': 595980.0, 'time_delta': '6 days, 21:33:00', 'additions': 1346, 'deletions': 1, 'state': 'closed'}, {'id': 656129407, 'number': 12936, 'closed': datetime.datetime(2021, 6, 6, 7, 46, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 9, 18, 28, tzinfo=datetime.timezone.utc), 'time_taken': 772062.0, 'time_delta': '8 days, 22:27:42', 'additions': 400, 'deletions': 70, 'state': 'closed'}, {'id': 651253365, 'number': 12887, 'closed': datetime.datetime(2021, 5, 25, 18, 22, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 24, 11, 20, 51, tzinfo=datetime.timezone.utc), 'time_taken': 111682.0, 'time_delta': '1 day, 7:01:22', 'additions': 317, 'deletions': 164, 'state': 'closed'}, {'id': 645189706, 'number': 12817, 'closed': datetime.datetime(2021, 6, 3, 23, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 17, 30, 38, tzinfo=datetime.timezone.utc), 'time_taken': 1662450.0, 'time_delta': '19 days, 5:47:30', 'additions': 1144, 'deletions': 134, 'state': 'closed'}, {'id': 616522955, 'number': 12529, 'closed': datetime.datetime(2021, 4, 25, 16, 9, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 4, 26, 4, tzinfo=datetime.timezone.utc), 'time_taken': 819794.0, 'time_delta': '9 days, 11:43:14', 'additions': 1303, 'deletions': 143, 'state': 'closed'}, {'id': 592973471, 'number': 12216, 'closed': datetime.datetime(2021, 3, 16, 10, 43, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 15, 10, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 85421.0, 'time_delta': '23:43:41', 'additions': 172, 'deletions': 2, 'state': 'closed'}, {'id': 592383012, 'number': 12189, 'closed': datetime.datetime(2021, 3, 24, 3, 39, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 13, 15, 52, 19, tzinfo=datetime.timezone.utc), 'time_taken': 906426.0, 'time_delta': '10 days, 11:47:06', 'additions': 1725, 'deletions': 947, 'state': 'closed'}, {'id': 577900146, 'number': 12010, 'closed': datetime.datetime(2021, 3, 1, 21, 22, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 22, 19, 56, 31, tzinfo=datetime.timezone.utc), 'time_taken': 609956.0, 'time_delta': '7 days, 1:25:56', 'additions': 185, 'deletions': 54, 'state': 'closed'}, {'id': 569088228, 'number': 11875, 'closed': datetime.datetime(2021, 2, 9, 1, 35, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 8, 0, 45, 55, tzinfo=datetime.timezone.utc), 'time_taken': 89383.0, 'time_delta': '1 day, 0:49:43', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 560564323, 'number': 11766, 'closed': datetime.datetime(2021, 2, 1, 23, 5, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 24, 8, 32, 58, tzinfo=datetime.timezone.utc), 'time_taken': 743537.0, 'time_delta': '8 days, 14:32:17', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 558798104, 'number': 11746, 'closed': datetime.datetime(2021, 1, 26, 19, 7, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 21, 2, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 493394.0, 'time_delta': '5 days, 17:03:14', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 555290790, 'number': 11701, 'closed': datetime.datetime(2021, 2, 3, 9, 14, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 14, 23, 31, 42, tzinfo=datetime.timezone.utc), 'time_taken': 1676561.0, 'time_delta': '19 days, 9:42:41', 'additions': 141, 'deletions': 20, 'state': 'closed'}, {'id': 547457078, 'number': 11563, 'closed': datetime.datetime(2021, 2, 10, 17, 1, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 31, 15, 58, 45, tzinfo=datetime.timezone.utc), 'time_taken': 3546173.0, 'time_delta': '41 days, 1:02:53', 'additions': 49, 'deletions': 42, 'state': 'closed'}, {'id': 545783879, 'number': 11513, 'closed': datetime.datetime(2021, 1, 30, 10, 0, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 27, 9, 17, 22, tzinfo=datetime.timezone.utc), 'time_taken': 2940169.0, 'time_delta': '34 days, 0:42:49', 'additions': 29, 'deletions': 2, 'state': 'closed'}, {'id': 528911127, 'number': 11280, 'closed': datetime.datetime(2020, 12, 27, 12, 7, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 8, 23, 22, tzinfo=datetime.timezone.utc), 'time_taken': 2519060.0, 'time_delta': '29 days, 3:44:20', 'additions': 32, 'deletions': 32, 'state': 'closed'}, {'id': 507837212, 'number': 11021, 'closed': datetime.datetime(2020, 11, 9, 21, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 21, 20, 14, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1647655.0, 'time_delta': '19 days, 1:40:55', 'additions': 283, 'deletions': 218, 'state': 'closed'}, {'id': 494235070, 'number': 10805, 'closed': datetime.datetime(2020, 10, 24, 19, 4, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 28, 15, 37, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2258819.0, 'time_delta': '26 days, 3:26:59', 'additions': 78, 'deletions': 30, 'state': 'closed'}, {'id': 493249627, 'number': 10778, 'closed': datetime.datetime(2020, 9, 30, 3, 34, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 25, 17, 30, 42, tzinfo=datetime.timezone.utc), 'time_taken': 381855.0, 'time_delta': '4 days, 10:04:15', 'additions': 24, 'deletions': 24, 'state': 'closed'}]"
