pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
713893817,feat(*): template signing and verification,"<!--- Provide a formatted commit message describing this PR in the Title above -->
<!--- See our DEVELOPERS guide below: -->
<!--- https://github.com/accordproject/techdocs/blob/master/DEVELOPERS.md#commit-message-format -->
# Closes #671 
<!--- Provide an overall summary of the pull request -->
The developer while creating the archive can sign the template using a private key stored in a PKCS#12 keystore.

### Changes
<!--- More detailed and granular description of changes -->
<!--- These should likely be gathered from commit message summaries -->
- A new method added in the `Template` class that signs the hash of the contract text, logic and model of a template and returns an object containing signatory's metadata, timestamp, signatory's certificate, signature.
- A new node package added (node-forge), helps in handling keystores and crypto material inside it.
- An optional parameter, `keyStore` added to `toArchive` method in `Template` class using which the developer/author can pass the keystore path and password.
- An optional parameter `signatureObject` added to `toArchive` method of `TemplateSaver` class that will save the object containing signatory's metadata, timestamp, signatory's certificate, signature, in a `signature.json` file inside the .cta archive.
### Flags
<!--- Provide context or concerns a reviewer should be aware of -->
- Test for the new and updated methods is yet to be written.

### Related Issues
- Issue #671 

### Author Checklist
- [x] Ensure you provide a [DCO sign-off](https://github.com/probot/dco#how-it-works) for your commits using the `--signoff` option of git commit.
- [ ] Vital features and changes captured in unit and/or integration tests
- [x] Commits messages follow [AP format](https://github.com/accordproject/techdocs/blob/master/DEVELOPERS.md#commit-message-format)
- [ ] Extend the documentation, if necessary
- [x] Merging to `master` from `fork:branchname`
",True,688,https://api.github.com/repos/accordproject/template-archive/pulls/688,https://github.com/accordproject/template-archive/pull/688,closed,32968,7311,123,31,0,14,0,0,[],2021-08-17 03:56:25+00:00,2021-08-19 20:01:31+00:00,230706.0,"2 days, 16:05:06","[{'comment_id': 690183489, 'comment_body': ""Should this be, `Commands.archive(template, 'ergo', tmpArchive, false, options);`?"", 'comment_created': datetime.datetime(2021, 8, 17, 9, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690183691, 'comment_body': 'Same here?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690183779, 'comment_body': 'And the same here?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690186627, 'comment_body': 'What are you testing in this test? Should there be an assertion?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690191130, 'comment_body': 'Flagging new dependency to @martinhalford @dselman @jeromesimeon .\r\n\r\n`node-forge` appears to be stable, well used and has a large number of contributors. However, there have been few contributions recently. The maintainers claim that the project is still active, https://github.com/digitalbazaar/forge/issues/897', 'comment_created': datetime.datetime(2021, 8, 17, 9, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690191777, 'comment_body': 'What does this comment mean? Is this a debugging artifact?', 'comment_created': datetime.datetime(2021, 8, 17, 9, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690497539, 'comment_body': ""Since the signing functionality is [optional](https://github.com/sanketshevkar/cicero/blob/93c864d6103891694dbe2eec61caac2388c71ad8/packages/cicero-cli/index.js#L481) in toArchive method, before signing the template, it checks if inside [options object, keystore](https://github.com/sanketshevkar/cicero/blob/93c864d6103891694dbe2eec61caac2388c71ad8/packages/cicero-cli/lib/commands.js#L618) property is present or not. If present it signs the template before archiving or else it creates the archive without any signatures. The '`false`' in previous code was for the '`options`' argument. So the number of parameters are same for `Commands.archive()` method."", 'comment_created': datetime.datetime(2021, 8, 17, 15, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 690519085, 'comment_body': 'I noticed that for commands which had verbose passed flag to them, had a [similar test](https://github.com/accordproject/cicero/blob/2379c914031fa212d56a6171bdffcfc7d937b57b/packages/cicero-cli/test/cli.js#L131) conducted for them, so I did the same here.', 'comment_created': datetime.datetime(2021, 8, 17, 16, 10, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 690520248, 'comment_body': 'Sorry I missed to remove that. Yes I was using that while debugging.', 'comment_created': datetime.datetime(2021, 8, 17, 16, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 690525400, 'comment_body': 'Corrected the comment.', 'comment_created': datetime.datetime(2021, 8, 17, 16, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 690604070, 'comment_body': ""that's a good question. We may have inherited that from #496 . What are our options?"", 'comment_created': datetime.datetime(2021, 8, 17, 18, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jeromesimeon', 'type': 'User'}, {'comment_id': 690659294, 'comment_body': ""Ok, that's fair. Happy to let this one go.\r\n\r\nReally, we should come back to all of these another time, as is this test doesn't prove anything (other than it doesn't throw?)"", 'comment_created': datetime.datetime(2021, 8, 17, 19, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690662758, 'comment_body': ""Yes, you're right. We could find another library, although I'm not overly concerned. I just wanted to flag this so that we're all aware of the dependency."", 'comment_created': datetime.datetime(2021, 8, 17, 19, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 690682711, 'comment_body': ""didn't even check until now, but the README indicates some browser support."", 'comment_created': datetime.datetime(2021, 8, 17, 20, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jeromesimeon', 'type': 'User'}]","[{'commit_sha': '87047b283ccc60a273be8528793ea74e1dd88ef0', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c3e634a7e21210547ef2c3723fe4cd35e7b17a0', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f2594feb27bd0d8201c07a6480aa0767679516c', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a605ca71ee6d27e94c825bcd00baced0f98538', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94fd50b29a6af07cfe9e9fb401afecc22a3c84fc', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a7ccaf21c9dcf26d7c1b41d358c7e6bde100697', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54ea8681f2f2a28bc964193dcb623ab411bc6845', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da7531e23166f40974f7b67a12446d1960cdc371', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6a20466c6df27e2e51710bb25d4cb0b36249e23', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3865ed5697c18a8c9c3255732cdf4f4def68a39', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87ac009da3afb2e82e1275cad144ee6b15feff23', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90353727eef89e27562a1caff8a21b52440cca2b', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a27e2e32827074291577a3d71f0937513a32d0cf', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79f75c65667c4cd8c2032061b7e8a52e84eb589', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca3c2ef3247da5fbe683d7f17ddaea64d088c9c8', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '05d54dc1d76c621d0928e5f8920595881143ba51', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a19087e27a55cadf8c5e17d80d9860fa9d7f9de', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26efbef56c126953d7757635c38eb1a039edc9b5', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0318a4b18353e77ff7aa79f3181d7650bf26f9bd', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '150cf06471e612f48fed700e4dc169b2175f306e', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a58d1184f5d4ff3548646c23c37aa86aca1c97f4', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83d6856dfcd14b6ab88ffccb40f05b8967958cf5', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e873175b81e9a32cb99ed9db71f7a4f12dd35c3', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '533bc4f681211f635ba5da88c2b9e5646b5f335b', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bd11aaa36ae98c8eae8f329ec6822b8f2de4a06', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f68b61eedd19d9408688fe082c42986571628b', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f7c6d5e05349c4d3004b37e193dcf1498732b47', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70c1e4b6b48694555f2c5998cb07d979b52251ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0ad578d13b4e006c1c02aa0c0bdb50de2b3fa5b4', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93c864d6103891694dbe2eec61caac2388c71ad8', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3791020501b9ccb39a05c30a82375f047f396770', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}]",Sanket Shevkar,43399522,,User,,105,,41,41
716157777,feat(*): contract signing and verification,"<!--- Provide a formatted commit message describing this PR in the Title above -->
<!--- See our DEVELOPERS guide below: -->
<!--- https://github.com/accordproject/techdocs/blob/master/DEVELOPERS.md#commit-message-format -->
<!--- Provide an overall summary of the pull request -->
Enables the parties involved in execution of a contract to digitally sign the signatures.

### Changes
<!--- More detailed and granular description of changes -->
<!--- These should likely be gathered from commit message summaries -->
- The party can sign the contract instance using their private key stored in a pkcs#12 keystore.
- The signatures are stored in an folder inside the slc archive or the contract directory

### Author Checklist
- [x] Ensure you provide a [DCO sign-off](https://github.com/probot/dco#how-it-works) for your commits using the `--signoff` option of git commit.
- [ ] Vital features and changes captured in unit and/or integration tests
- [x] Commits messages follow [AP format](https://github.com/accordproject/techdocs/blob/master/DEVELOPERS.md#commit-message-format)
- [ ] Extend the documentation, if necessary
- [ ] Merging to `master` from `fork:branchname`
",False,689,https://api.github.com/repos/accordproject/template-archive/pulls/689,https://github.com/accordproject/template-archive/pull/689,closed,581,2,17,18,1,9,0,1,[],2021-08-19 18:16:54+00:00,2021-09-27 15:24:01+00:00,3359227.0,"38 days, 21:07:07","[{'comment_id': 692758650, 'comment_body': 'Please use sentence case here. i.e. capitalize the first letter.', 'comment_created': datetime.datetime(2021, 8, 20, 8, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 692760236, 'comment_body': 'Under what circumstances would we ever need to access entries that are not in the first position of `safeContents` or `safeBags` array?', 'comment_created': datetime.datetime(2021, 8, 20, 8, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 692761175, 'comment_body': 'Can this be removed?', 'comment_created': datetime.datetime(2021, 8, 20, 8, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mttrbrts', 'type': 'User'}, {'comment_id': 693758389, 'comment_body': 'Done!', 'comment_created': datetime.datetime(2021, 8, 23, 8, 16, 30, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 694975163, 'comment_body': ""I don't think we'll ever have to, it's mostly metadata of the keystore stored in it."", 'comment_created': datetime.datetime(2021, 8, 24, 15, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 694976313, 'comment_body': 'How safe is this path really? What happens if there is no `safeContents` or no `safeBags`. Could you clarify what the forge API supports there?', 'comment_created': datetime.datetime(2021, 8, 24, 15, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jeromesimeon', 'type': 'User'}, {'comment_id': 707501713, 'comment_body': '@mttrbrts `safeContents` contains all the things present inside the keystore. In this case at the first position it is the certificate and in the second position it is the private key. So `safeContents[0].safeBags[0]` contains the x509 cert, and only has one object inside the safeBags array. Similary `safeContents[1].safeBags[0]` has the private key and also has only object inside the safeBags array. @jeromesimeon there is another method `getBags()` using which the the material inside safe bags can be accessed but either one of the following property is to be known:\r\n\r\n- friendlyName\r\n- localKeyIdHex\r\n- bagType', 'comment_created': datetime.datetime(2021, 9, 13, 16, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 707506881, 'comment_body': ""- I was not able to find a friendly name\r\n- `{ localKeyId: [ '\\u0010÷&Þ\\u001e°ÑÆ\\u0015Ã?\\u0011Aw\\u0010¥' ] }`, this was the localKeyId\r\n-  `1.2.840.113549.1.12.10.1.3`, this was the bag type for a x509 cert & `1.2.840.113549.1.12.10.1.2` this for a private key.\r\n\r\nSince these were a bit hard to understand I decided to take the route of selecting the certificate and the private key from `safeContents` and `safeBags` directly\r\n"", 'comment_created': datetime.datetime(2021, 9, 13, 16, 41, 37, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}, {'comment_id': 707509198, 'comment_body': 'You can refer to this replit: https://replit.com/@sanketshevkar/forgeBags#index.js', 'comment_created': datetime.datetime(2021, 9, 13, 16, 44, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sanketshevkar', 'type': 'User'}]","[{'commit_sha': '089e01b010ce55fec55f7662dbb57b5e1f510ded', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f04887ae87987265731024e89d3108d7eddd151', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9be6ae52fa016ed55177081aa504e7c2119ab3f7', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a2ff7e3e9e255cad0fa3a81f745cb9282ebdb6b', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '289c694d223b68b847c719b67d627a75a288c2c3', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd124e4e232194c5cbc6f095b703c9492691bf453', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab3bba65324eb8c967248577f588cbe71b9f79a2', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43fff48cb165911e1861cb0365df8bea8de6f135', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76169ba425953fb4ca7361bb169e62212a46b9a5', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842733518dcf423b9e3f38f36574060af7d728fc', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd8b87881895a8f0b2de534946ce29fc4f9cd37', 'committer_username': 'jeromesimeon', 'committer_name': 'Jerome Simeon', 'committer_email': None, 'commit_date': datetime.datetime(2011, 3, 15, 1, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d7b8515cdbbc79e078f9b06e02594423430a4a4', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '996d10eb456d51ef06b5386db9a304a145a6f5cf', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9f716862921fe580d383e069bd975c1f5ed5852', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c27f686a02f015dd4b5f7ce703516a344f4e8c4', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f08a5eab556e4a934b12722e61a28b6ec4064aad', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '792665e8bae4861ad46ed00176638fc9de160560', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fbfcbfa51fd8d6c672b4ee60861be57f9a3fc8e', 'committer_username': 'sanketshevkar', 'committer_name': 'Sanket Shevkar', 'committer_email': None, 'commit_date': datetime.datetime(2018, 9, 19, 6, 1, 41, tzinfo=datetime.timezone.utc)}]",Sanket Shevkar,43399522,,User,,105,,41,41

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
109222968,template-archive,accordproject/template-archive,JavaScript,119,280,23,32,1074,87,15,9,"[{'id': 797462931, 'number': 709, 'closed': datetime.datetime(2022, 2, 23, 2, 26, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 8, 3, 52, 35, tzinfo=datetime.timezone.utc), 'time_taken': 6647624.0, 'time_delta': '76 days, 22:33:44', 'additions': 15561, 'deletions': 2018, 'state': 'closed'}, {'id': 737238156, 'number': 695, 'closed': datetime.datetime(2021, 9, 24, 14, 4, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 20, 4, 8, 8, tzinfo=datetime.timezone.utc), 'time_taken': 381410.0, 'time_delta': '4 days, 9:56:50', 'additions': 50, 'deletions': 82, 'state': 'closed'}, {'id': 718878983, 'number': 691, 'closed': datetime.datetime(2021, 8, 24, 16, 8, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 16, 7, 12, tzinfo=datetime.timezone.utc), 'time_taken': 50.0, 'time_delta': '0:00:50', 'additions': 29, 'deletions': 0, 'state': 'closed'}, {'id': 716157777, 'number': 689, 'closed': datetime.datetime(2021, 9, 27, 15, 24, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 18, 16, 54, tzinfo=datetime.timezone.utc), 'time_taken': 3359227.0, 'time_delta': '38 days, 21:07:07', 'additions': 581, 'deletions': 2, 'state': 'closed'}, {'id': 713893817, 'number': 688, 'closed': datetime.datetime(2021, 8, 19, 20, 1, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 3, 56, 25, tzinfo=datetime.timezone.utc), 'time_taken': 230706.0, 'time_delta': '2 days, 16:05:06', 'additions': 32968, 'deletions': 7311, 'state': 'closed'}, {'id': 698968377, 'number': 683, 'closed': datetime.datetime(2021, 8, 17, 3, 55, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 28, 19, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1670992.0, 'time_delta': '19 days, 8:09:52', 'additions': 33080, 'deletions': 7361, 'state': 'closed'}, {'id': 665895926, 'number': 672, 'closed': datetime.datetime(2021, 8, 9, 4, 44, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 13, 14, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5239795.0, 'time_delta': '60 days, 15:29:55', 'additions': 4409, 'deletions': 417, 'state': 'closed'}, {'id': 660601485, 'number': 670, 'closed': datetime.datetime(2021, 6, 10, 2, 49, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 3, 6, 8, 43, tzinfo=datetime.timezone.utc), 'time_taken': 592876.0, 'time_delta': '6 days, 20:41:16', 'additions': 7506, 'deletions': 16949, 'state': 'closed'}]"
