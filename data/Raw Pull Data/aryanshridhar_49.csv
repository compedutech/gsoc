pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
969439627,build(forge): introduce webpack plugin and remove parcel,"Introduces forge+webpack configuration and removes parcel for the bundling process.

### Errors

<strong>Active</strong>

None

<strong>Fixed</strong>
* ~Logs from terminal~ - (Resolved :white_check_mark:)

```
Compiling Renderer Code(node:14230) UnhandledPromiseRejectionWarning: ReferenceError: __importStar is not defined
    at /Users/aryanshridhar/Desktop/fiddle/.webpack/main/index.js:45171:62
    at async onReady (/Users/aryanshridhar/Desktop/fiddle/.webpack/main/index.js:45171:27)
(Use `Electron --trace-warnings ...` to show where the warning was created)
(node:14230) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)
```
* ~Figure out how to stop the browser tabs from opening when application is hot reloaded. (webpack-dev-server) - This is opening like 2-3 tabs for me for each reload which is kinda getting on the nerves now. (To be fixed by #1119)~ (Resolved :white_check_mark:)

* ~`yarn make` stops with - (To be fixed by #1119)~ (Resolved :white_check_mark:)
```
ReferenceError: require is not defined
    at webpack/runtime/compat:2:49
```
for all packages.

* ~When the application is stopped, forge throws an error saying - (To be fixed by #1119)~ (Resolved :white_check_mark:)
```
An unhandled exception has occurred inside Forge:
Cannot read properties of undefined (reading 'close')
TypeError: Cannot read properties of undefined (reading 'close')
    at WebpackPlugin.exitHandler (/Users/aryanshridhar/Desktop/fiddle/node_modules/@electron-forge/plugin-webpack/src/WebpackPlugin.ts:83:16)
    at process.<anonymous> (/Users/aryanshridhar/Desktop/fiddle/node_modules/@electron-forge/plugin-webpack/src/WebpackPlugin.ts:126:40)
    at process.emit (node:events:402:35)
    at process.emit (/Users/aryanshridhar/Desktop/fiddle/node_modules/source-map-support/source-map-support.js:516:21)
    at process.emit (/Users/aryanshridhar/Desktop/fiddle/node_modules/@electron-forge/core/node_modules/source-map-support/source-map-support.js:495:21)
    at processEmit [as emit] (/Users/aryanshridhar/Desktop/fiddle/node_modules/signal-exit/index.js:155:35)
    at process.exit (node:internal/process/per_thread:184:15)
    at WebpackPlugin.exitHandler (/Users/aryanshridhar/Desktop/fiddle/node_modules/@electron-forge/plugin-webpack/src/WebpackPlugin.ts:93:31)
    at process.<anonymous> (/Users/aryanshridhar/Desktop/fiddle/node_modules/@electron-forge/plugin-webpack/src/WebpackPlugin.ts:127:62)
    at process.emit (node:events:402:35)
    at process.emit (/Users/aryanshridhar/Desktop/fiddle/node_modules/source-map-support/source-map-support.js:516:21)
```

* ~Figure out the best way to handles assets.~  (Resolved :white_check_mark:)
* ~Fonts not being read and rendered properly.~  (Resolved :white_check_mark:)
* ~CSP is blocking some requests~ - (Resolved :white_check_mark:)
```
instrument.js:136 Refused to connect to 'https://releases.electronjs.org/releases.json' because it violates the following Content Security Policy directive: ""default-src 'self' 'unsafe-inline' data:"". Note that 'connect-src' was not explicitly set, so 'default-src' is used as a fallback.
```

* ~Failing jest tests~  - (Resolved :white_check_mark:)",True,1109,https://api.github.com/repos/electron/fiddle/pulls/1109,https://github.com/electron/fiddle/pull/1109,closed,1984,3793,35,2,1,13,1,0,[{'name': 'üåû Google Summer of Code'}],2022-06-16 15:06:06+00:00,2022-07-11 22:38:11+00:00,2187125.0,"25 days, 7:32:05","[{'comment_id': 906721737, 'comment_body': 'Very minor nit, but can we move this down to be in the section on lines 6-7 instead? Usually the section of requires at the top of the file only contains requires.', 'comment_created': datetime.datetime(2022, 6, 25, 20, 34, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 906760984, 'comment_body': 'Cool!', 'comment_created': datetime.datetime(2022, 6, 26, 6, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 906874951, 'comment_body': ""Let's change these. The current code, pushing into the array exported by the other modules, it actually mutating the exported array. That's generally not a good idea as it can introduce subtle bugs (any other import after this one will see the mutated value).\r\n\r\nLet's use spread syntax to accomplish this without mutating `rules` and `plugins`. It would look something like this:\r\n\r\n```\r\nmodule.exports = {\r\n  module: {\r\n    rules: [\r\n        ..rules,\r\n        {\r\n            test: /\\.(eot|ttf|woff2?)(\\?v=\\d+\\.\\d+\\.\\d+)?$/i,\r\n            type: 'asset/resource',\r\n            generator: {\r\n                filename: 'fonts/[name][ext]',\r\n            },\r\n            // etc\r\n        }\r\n    ]\r\n  },\r\n  plugins: [\r\n      ...plugins,\r\n      new MonacoWebpackPlugin({\r\n          languages: ['typescript', 'javascript', 'html', 'css'],\r\n      }),\r\n      // etc\r\n  ]\r\n```"", 'comment_created': datetime.datetime(2022, 6, 26, 21, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 906934512, 'comment_body': ""I think this should actually be `./.webpack/renderer/main_window/index.html`... I don't think the tests are actually making usage of it, but let's change it to that.\r\n\r\nSame with `preload` above, let's change that to `./.webpack/renderer/main_window/preload.js`."", 'comment_created': datetime.datetime(2022, 6, 27, 3, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 907249149, 'comment_body': ""Yup, Sounds right! I was only doing that in only renderer process as it's the last piece of code that executes :)"", 'comment_created': datetime.datetime(2022, 6, 27, 10, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 907582886, 'comment_body': 'nit: I think this would be better named `releasesJSON`.', 'comment_created': datetime.datetime(2022, 6, 27, 16, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 909919097, 'comment_body': ""Let's drop this comment."", 'comment_created': datetime.datetime(2022, 6, 29, 14, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 909936576, 'comment_body': ""Are these required changes to make things work, or just updating this to be more accurate? If the latter, let's not include it in this PR, can be done in a follow-up. Since this is already a large PR, I'd like to keep things focused."", 'comment_created': datetime.datetime(2022, 6, 29, 14, 52, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 909943085, 'comment_body': ""Let's use `yarn contributors` instead, since that script exists."", 'comment_created': datetime.datetime(2022, 6, 29, 14, 53, 36, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 909952960, 'comment_body': ""nit: `const { maybeFetchContributors } = require('./tools/contributors');` and avoid the awkward `contributors` name."", 'comment_created': datetime.datetime(2022, 6, 29, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 910235886, 'comment_body': 'I had to add these as within test `mockContributorsBroken` is defined holding these values as `null` as well (It gives an type error when calling the method - `getContributors`)', 'comment_created': datetime.datetime(2022, 6, 29, 17, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 910236750, 'comment_body': ""But now with using `wrapper.setState({ contributors })`, This isn't required, so I will be reverting this :)"", 'comment_created': datetime.datetime(2022, 6, 29, 17, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 914056769, 'comment_body': ""Just adding a note here to investigate why `tests/globalSetup.js` doesn't work for CI for creating this file. üëç"", 'comment_created': datetime.datetime(2022, 7, 5, 17, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}]","[{'commit_sha': 'b5388f1a2e828d0cbe3d6dfdbe2e99ace9994f06', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '851e728d2794f3d3d142997d36c7cc45a6ed8aaf', 'committer_username': 'dsanders11', 'committer_name': 'David Sanders', 'committer_email': 'dsanders11@ucsbalum.com', 'commit_date': datetime.datetime(2013, 10, 31, 7, 12, 47, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
997973681,refactor: integrate fiddle-core,"Integrates fiddle core into the `renderer` codebase

<strong>Todos: </strong>

* ~Fix the `TODOS` over the codebase. (Only one left, not a major one!)~
* ~Fix jests tests (to be done later)~
* Handle `bisecting` of versions through fiddle-core.
* ~Handle different source mirrors in fiddle-core (`global`/`china`)~
* ~Add the `downloadProgress` callback to `fiddle-core` (Opened https://github.com/electron/fiddle-core/pull/30 for the same)~


Tackles #644 as well :)",True,1134,https://api.github.com/repos/electron/fiddle/pulls/1134,https://github.com/electron/fiddle/pull/1134,closed,917,1292,41,3,5,49,1,0,[{'name': 'üåû Google Summer of Code'}],2022-07-15 16:57:13+00:00,2022-09-07 16:43:37+00:00,4664784.0,"53 days, 23:46:24","[{'comment_id': 922410410, 'comment_body': 'Why remove the enum here? Is there a way we can retain this type, so we can make sure that only allowed strings are used when working with versions?', 'comment_created': datetime.datetime(2022, 7, 15, 18, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 923614922, 'comment_body': 'Oh yeah! Probably, the same should be done in fiddle-core as well right ?\r\n[(one such example)](https://github.com/electron/fiddle-core/blob/9007a90720c98e46e749b241cfe3d6bbf4d374c3/src/installer.ts#L180)', 'comment_created': datetime.datetime(2022, 7, 18, 17, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 930271748, 'comment_body': 'While fixing tests -- realized that this function always returns `RunResult.INVALID`\r\nFixed this now :)', 'comment_created': datetime.datetime(2022, 7, 26, 18, 7, 15, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 933875928, 'comment_body': 'This timeout waits for the [`appState.runner`](https://github.com/aryanshridhar/fiddle/blob/Integrate-fiddlecore/src/renderer/state.ts#L178) promise to resolve (most likely!) Otherwise CI throws an error saying -\r\n```\r\nReferenceError: You are trying to `import` a file after the Jest environment has been torn down. From tests/renderer/state-spec.ts.\r\n```\r\n(As replicated [here](https://github.com/electron/fiddle/runs/7584809546?check_suite_focus=true#step:7:10))\r\n\r\nI am quite baffled by this as I thought something like - `await appState.runner` will wait for the promise. Tried that but still CI throws an error.\r\nAfter many rounds of trial and error, I came up with this _ugly_ solution. Let me know on how can this be resolved in a much better way(If not, then probably - I will add a comment to this code)', 'comment_created': datetime.datetime(2022, 7, 30, 18, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 933877550, 'comment_body': 'This `runner` variable can be confused as an instance of [`Runner`](https://github.com/electron/fiddle/blob/440a94b4f833b077bf576022960d4fe737f04382/src/renderer/runner.ts#L30) class. Open to suggestions for better naming for this variable :) (Probably, `coreRunner`?)', 'comment_created': datetime.datetime(2022, 7, 30, 18, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 934939892, 'comment_body': '```suggestion\r\n    const isValidBuild = getVersionState(currentRunnable) === VersionState.ready;\r\n```', 'comment_created': datetime.datetime(2022, 8, 1, 21, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934941158, 'comment_body': '```suggestion\r\n   * Maps the InstallState to VersionState enum\r\n```', 'comment_created': datetime.datetime(2022, 8, 1, 21, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934945617, 'comment_body': ""I think we can also drop [this line](https://github.com/aryanshridhar/fiddle/blob/98f64ac07169709c4fd33cea9818d009be9e04b0/tests/setup.js#L26) in `tests/setup.js`.\r\n\r\n```js\r\njest.mock('@electron/get');\r\n```"", 'comment_created': datetime.datetime(2022, 8, 1, 21, 49, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934948012, 'comment_body': ""I don't believe this is necessary (or the other code with the same comment) as `tsc` will enforce that all cases are handled, and throw an error during compilation if one is missing.\r\n\r\nYou can confirm this by deleting the `default` case and running `yarn tsc` to compile, then remove one of the other cases and try `yarn tsc` again and it will have an error - same if you add a new value to `VersionState`."", 'comment_created': datetime.datetime(2022, 8, 1, 21, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934950566, 'comment_body': ""I think this might get confusing with the difference between the name and value, and it differs from the other enums in this file.\r\n\r\nIf there's not a strong reason otherwise, could we make these match, and update the rest of the code accordingly?"", 'comment_created': datetime.datetime(2022, 8, 1, 21, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934951767, 'comment_body': ""Is this comment meant to be a TODO? I don't see the context here."", 'comment_created': datetime.datetime(2022, 8, 1, 22, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934952851, 'comment_body': ""Since these are already in alphabetical order, let's keep them that way and move this up to be in alphabetical order."", 'comment_created': datetime.datetime(2022, 8, 1, 22, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934954091, 'comment_body': '```suggestion\r\n        // The only way for a local version to be missing\r\n```', 'comment_created': datetime.datetime(2022, 8, 1, 22, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 934958745, 'comment_body': ""Let's keep this in the grouping at the top with `child_process`."", 'comment_created': datetime.datetime(2022, 8, 1, 22, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 935012388, 'comment_body': 'I agree with this - the strings in the enum should match their string values', 'comment_created': datetime.datetime(2022, 8, 2, 0, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935013191, 'comment_body': 'Any reason why this was removed, or was this re-added in a different area? We do want to have the ability to inject cli flags here if we can', 'comment_created': datetime.datetime(2022, 8, 2, 0, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935013423, 'comment_body': 'Calling out the TODO here: what do we not want to use in production? Is there anything we need to change here before we could ship this in Fiddle?', 'comment_created': datetime.datetime(2022, 8, 2, 0, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935013846, 'comment_body': 'Depending on the functionality of the other existing class, something like `versionRunner` may work', 'comment_created': datetime.datetime(2022, 8, 2, 0, 29, 49, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935014187, 'comment_body': ""Nit:\r\n```suggestion\r\n      // A local electron build's `state` is setup in versions.ts\r\n```\r\n"", 'comment_created': datetime.datetime(2022, 8, 2, 0, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935014452, 'comment_body': '```suggestion\r\n        if (this.installer.state(version) === VersionState.missing) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 2, 0, 31, 39, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935014915, 'comment_body': 'Is this dependent on a new release of fiddle-core, or does this still need to be changed in fiddle-core?', 'comment_created': datetime.datetime(2022, 8, 2, 0, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935015089, 'comment_body': ""Same comment as David had above, let's get these string values and key aligned."", 'comment_created': datetime.datetime(2022, 8, 2, 0, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 935116548, 'comment_body': 'This is because `BaseVersion` is [documented](https://github.com/electron/fiddle-core/blob/main/src/versions.ts#L84) to be a only used while testing.\r\nOur use case here - If fiddle-core is not populated with versions, it tries to fetches the version from [here](https://github.com/electron/fiddle-core/blob/main/src/versions.ts#L203). This causes a couple of errors - \r\n* We already have this code and electron version are fetched in fiddle prior.\r\n* Since, it uses [node-fetch](https://github.com/electron/fiddle-core/blob/main/src/versions.ts#L4), it throws an error when this function is called here. (The error that I mentioned [here](https://electronhq.slack.com/archives/C03G7RWF6KH/p1657741854218999))', 'comment_created': datetime.datetime(2022, 8, 2, 5, 2, 40, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935120378, 'comment_body': 'Oh yup, right! Thanks :)', 'comment_created': datetime.datetime(2022, 8, 2, 5, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935120450, 'comment_body': 'Oh Cool! I felt it will be more intuitive for us. (As `installing` is not much intuitive signifying that the version is actually being getting unzipped)', 'comment_created': datetime.datetime(2022, 8, 2, 5, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935120883, 'comment_body': 'Oh yeah! This is to be removed :)', 'comment_created': datetime.datetime(2022, 8, 2, 5, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935120964, 'comment_body': 'How about we introduce the [sort-import ](https://eslint.org/docs/latest/rules/sort-imports)rule in eslint rather than doing it manually everytime ?', 'comment_created': datetime.datetime(2022, 8, 2, 5, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935121025, 'comment_body': 'Same comment as mentioned here.\r\nMaybe its better if I put up a thread on slack regarding it :)', 'comment_created': datetime.datetime(2022, 8, 2, 5, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935121123, 'comment_body': 'I added this because it this can be integrated in fiddle-core and then imported here.\r\n(We are passing the states as string in fiddle-core, [one such example](https://github.com/electron/fiddle-core/blob/e22ae4d453ba21c5d40f47b153105f632a624c9a/src/installer.ts#L117)).\r\n', 'comment_created': datetime.datetime(2022, 8, 2, 5, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 935625842, 'comment_body': ""I have opened up a pr for it - https://github.com/electron/fiddle-core/pull/33\r\nOnce this is merged, we don't need to have this extra check."", 'comment_created': datetime.datetime(2022, 8, 2, 13, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 939670899, 'comment_body': 'Yup, nice catch! Missed that!', 'comment_created': datetime.datetime(2022, 8, 7, 13, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 948317683, 'comment_body': 'Resolving as we said it was okay in our weekly mentor meeting. üëç ', 'comment_created': datetime.datetime(2022, 8, 17, 19, 7, 55, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 951692641, 'comment_body': ""One merge-blocker - testing with a fork of `fiddle-core` is perfectly fine, but we need to cut a new release and use the real `fiddle-core` package before we merge this into Fiddle's main branch."", 'comment_created': datetime.datetime(2022, 8, 22, 17, 15, 15, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 951728780, 'comment_body': 'Yup right! The main branch of `electron/fiddle-core` has all the right set of APIs required. We just need to release it :)', 'comment_created': datetime.datetime(2022, 8, 22, 17, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 951791210, 'comment_body': 'question: does `VersionState.unknown` always match 1:1 with `InstallState.missing`?', 'comment_created': datetime.datetime(2022, 8, 22, 18, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 951836680, 'comment_body': ""issue(logging): from my testing, it seems like we're logging `downloading 19.0.10 - 100%` to the DevTools console as soon as the download starts/"", 'comment_created': datetime.datetime(2022, 8, 22, 19, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 951846031, 'comment_body': ""issue(blocking): the existing folder is actually `electron-bin` without the leading dot. \r\n\r\n```suggestion\r\n  'electron-bin',\r\n```\r\n"", 'comment_created': datetime.datetime(2022, 8, 22, 19, 44, 1, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 951846235, 'comment_body': ""issue(blocking): the existing folder is actually electron-bin without the leading dot.\r\n\r\n```suggestion\r\n  'electron-bin',\r\n```"", 'comment_created': datetime.datetime(2022, 8, 22, 19, 44, 15, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 951853812, 'comment_body': 'question: is there ever a case where `appState.currentElectronVersion.state` and `appState.installer.state(version)` will be different?', 'comment_created': datetime.datetime(2022, 8, 22, 19, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 951858765, 'comment_body': ""question: It's been a while since I've taken a look at `fiddle-core` code. What is the difference between `InstallState.installed` and `InstallState.downloaded` if they are both considered ready to run here?"", 'comment_created': datetime.datetime(2022, 8, 22, 20, 0, 5, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 952109213, 'comment_body': ""`downloaded` is the state when the binary is downloaded and kept as a `zip` file whereas the `installed` is when the downloaded binary is currently unzipped for the fiddle to run (`fiddle-core` doesn't unzip all downloaded versions to improve disk space usage)\r\nIn our use case - We want both the states to be marked `ready` since `fiddle-core.spawn` by default unzips the version if it's not installed."", 'comment_created': datetime.datetime(2022, 8, 23, 3, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 952110646, 'comment_body': ""Nope, I can't think of a such case where they will be different.\r\nThis is because - everytime the version is changed, it triggers [this](https://github.com/aryanshridhar/fiddle/blob/Integrate-fiddlecore/src/renderer/state.ts#L373-L376) event which updates the state of `currentElectronVersion`."", 'comment_created': datetime.datetime(2022, 8, 23, 3, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 952114904, 'comment_body': 'Yeah, What `fiddle` does is similar to what `fiddle-core` does.\r\nWe mark versions to be `missing` if they are either [removed](https://github.com/electron/fiddle-core/blob/7d17028513f853abbe5eb3a6ebf99d326252e1ef/src/installer.ts#L190-L192) by user or not being currently [`downloaded/installed`](https://github.com/electron/fiddle-core/blob/main/src/installer.ts#L82-L84).', 'comment_created': datetime.datetime(2022, 8, 23, 3, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 952181391, 'comment_body': ""Debugged this and turns out that the issue is way deep! Probably with the new `get` version (Probably with `got` since the `2.0.0` hasn't any changes with this functionality)\r\n(I will open a new thread regarding it in slack)"", 'comment_created': datetime.datetime(2022, 8, 23, 5, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 952949487, 'comment_body': ""Oh yeah! However, we won't be still able to use the existing downloaded versions as `fiddle-core` keeps them in a zip file and also uses a different naming convention of files. "", 'comment_created': datetime.datetime(2022, 8, 23, 17, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 953011382, 'comment_body': ""That's a big breaking change for users (especially if they have many Electron versions downloaded), and I don't think I'm super comfortable releasing this as-is.\r\n\r\nIs there a way we can either:\r\n1. Run a startup script that moves Fiddle scripts to a format that fiddle-core understands?\r\n2. Make changes to Fiddle Core so it understands folders rather than zips?"", 'comment_created': datetime.datetime(2022, 8, 23, 19, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 953052021, 'comment_body': 'I agree with Erick, this is a pretty major change for existing Fiddle users. Of the two options, could we modify fiddle-core to understand both zip and folder structures? I feel like that would be the more future-proof option', 'comment_created': datetime.datetime(2022, 8, 23, 19, 50, 38, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 953229232, 'comment_body': 'I also agree with the second.\r\nThe first one will be more costly, if the user downloads very many versions of the electron, the migration script will be very slow to execute and will predictably have a lot of error handling logic. And with a lot of unit tests to go along with it', 'comment_created': datetime.datetime(2022, 8, 24, 1, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'BlackHole1', 'type': 'User'}, {'comment_id': 953236438, 'comment_body': 'One more thing to consider: when using fiddle to load a locally built electron, the electron is a folder, not a zip file.\r\n\r\n<img width=""923"" alt=""image"" src=""https://user-images.githubusercontent.com/8198408/186296298-d19e9a0b-e98a-4c2a-8fbe-d552df013b42.png"">\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 1, 17, 45, tzinfo=datetime.timezone.utc), 'commenter': 'BlackHole1', 'type': 'User'}]","[{'commit_sha': '4d13ea7b2556376bfdc3b45693b83e6d4c04ad58', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23bfbe2dc25c191ad566fcf7ec0b7f55439444f2', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d3cd75a42b682d2eb29267c972cae0e63ecd907', 'committer_username': 'VerteDinde', 'committer_name': 'Keeley Hammond', 'committer_email': None, 'commit_date': datetime.datetime(2013, 6, 5, 20, 33, 39, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1002425739,build(webpack): remove webpack definePlugin pointing to static folder,"Conversations - https://electronhq.slack.com/archives/C03G7RWF6KH/p1658190886702879.

Basically, for some reason (to debug later) github action production release incorrectly computes `STATIC_DIR` global variable defined in webpack plugins.",True,1138,https://api.github.com/repos/electron/fiddle/pulls/1138,https://github.com/electron/fiddle/pull/1138,closed,10,9,4,1,2,0,0,0,[],2022-07-20 15:28:17+00:00,2022-07-20 21:52:32+00:00,23055.0,6:24:15,[],"[{'commit_sha': '4290c8f94a112f1a8efa3de79705e586fef9a73c', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1016574321,refactor: remove dead code,"A minor commit which - 

* Removes unused `path` variable in setup.js (had to be removed in #1138)
* Deduplicates the `resolveJsonModule` in tsconfig (was introduced by #988 as well)",True,1144,https://api.github.com/repos/electron/fiddle/pulls/1144,https://github.com/electron/fiddle/pull/1144,closed,0,2,2,1,1,0,0,0,[],2022-08-03 16:30:35+00:00,2022-08-04 07:36:04+00:00,54329.0,15:05:29,[],"[{'commit_sha': '8e6c3c7c1eeb486cbdb7d947c0f4b1ea62bc3c27', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1017603328,build: enforce sort-imports eslint rule,"Adds the `sort-import` rule in codebase.

<strong>Summary -</strong>
* Added the [sort-import](https://eslint.org/docs/latest/rules/sort-imports) rule in eslint. However, it lacks the feature of auto fixing changes using `eslint --fix`. Hence, this is where [`eslint-plugin-import`](https://github.com/import-js/eslint-plugin-import) helps us! (It also provides better  control on how imports are sorted)
* This requires `eslint-import-resolver-typescript` to resolve imports in typescript files.
* Added a new command `lint:js` which sort the imports in `.js` files.
* Ran `yarn lint` which autofixes all the problems for us :)


<strong>Rules kept off -</strong>
* [import/no-named-as-default-member](https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/no-named-as-default-member.md)
* [import/namespace](https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/namespace.md)



Edit: This can be merged once large pending pull requests are merged first - to avoid large merge conflicts :)
",True,1147,https://api.github.com/repos/electron/fiddle/pulls/1147,https://github.com/electron/fiddle/pull/1147,closed,753,305,149,1,2,7,0,0,[],2022-08-04 14:11:30+00:00,2022-08-05 14:24:14+00:00,87164.0,"1 day, 0:12:44","[{'comment_id': 938347344, 'comment_body': 'The sentry should be left as it is, the sooner the better', 'comment_created': datetime.datetime(2022, 8, 5, 0, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'BlackHole1', 'type': 'User'}, {'comment_id': 938347998, 'comment_body': 'Is it possible to have `React` always in the first row? with the highest priority', 'comment_created': datetime.datetime(2022, 8, 5, 0, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'BlackHole1', 'type': 'User'}, {'comment_id': 938438021, 'comment_body': 'I think that might require a separate plugin here: https://github.com/lydell/eslint-plugin-simple-import-sort', 'comment_created': datetime.datetime(2022, 8, 5, 4, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 938506846, 'comment_body': 'We can do this by defining custom `pathGroups` and ignoring the pattern then - [docs](https://github.com/import-js/eslint-plugin-import/blob/5fe9aa44eb9d20b376d1b32a5d3384c46a01309e/docs/rules/order.md#pathgroupsexcludedimporttypes-array)\r\n```js\r\n{\r\n  ""import/order"": [\r\n    ""error"",\r\n    {\r\n      ""pathGroups"": [\r\n        {\r\n          ""pattern"": ""react"", // for react imports\r\n          ""group"": ""builtin"", // taking reference as builtin imports\r\n          ""position"": ""before"" // before all the builtin imports (which is referenced above)\r\n        }\r\n      ],\r\n      ""pathGroupsExcludedImportTypes"": [""react""] // excluding it so that our custom group applies!\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThis is how the sorting order looks like then - \r\n```js\r\nimport * as React from \'react\';\r\n\r\nimport { Button, NonIdealState } from \'@blueprintjs/core\';\r\n\r\nimport { EditorMosaic } from \'../editor-mosaic\';\r\n\r\nexport function renderNonIdealState(editorMosaic: EditorMosaic) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 5, 7, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 938509454, 'comment_body': ""> I think that might require a separate plugin here: https://github.com/lydell/eslint-plugin-simple-import-sort\r\n\r\nI thought of using this first until I read [this para](https://github.com/lydell/eslint-plugin-simple-import-sort#not-for-everyone) in its docs. (I thought it's better to have more control on how we sort the imports)\r\nQuoting a para from its docs - \r\n> If you want more options, I recommend using the [import/order](https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md) rule (from [eslint-plugin-import](https://github.com/import-js/eslint-plugin-import/)) instead. It has plenty of options, and the maintainers seem interested in expanding the feature where it makes sense.\r\n\r\nLet me know which plugin feels right :)  "", 'comment_created': datetime.datetime(2022, 8, 5, 7, 7, 41, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 938514591, 'comment_body': ""Oh Cool! Wasn't aware of it :)\r\nWe can disable the sort-import rule for this line then."", 'comment_created': datetime.datetime(2022, 8, 5, 7, 15, 8, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 938531835, 'comment_body': 'I think both are fine, but for the reason that we already use the `eslint-plugin-import` library, I think we can leave it unchanged.', 'comment_created': datetime.datetime(2022, 8, 5, 7, 35, 22, tzinfo=datetime.timezone.utc), 'commenter': 'BlackHole1', 'type': 'User'}]","[{'commit_sha': 'ae12de06a244291998f73ec8190c0a5692a0fdf0', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
975374339,fix: disable right click contextMenu in settings page,"Minor commit to fix #1070.
Edit: Not sure on how to mock the `contextMenu` behavior.",True,1115,https://api.github.com/repos/electron/fiddle/pulls/1115,https://github.com/electron/fiddle/pull/1115,closed,42,5,2,1,2,3,0,0,[],2022-06-22 16:05:34+00:00,2022-10-20 01:43:47+00:00,10316293.0,"119 days, 9:38:13","[{'comment_id': 904351220, 'comment_body': 'Let\'s update this comment to be ""// check if event listeners are removed upon unmount"" now that there\'s multiple.', 'comment_created': datetime.datetime(2022, 6, 22, 22, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}, {'comment_id': 904358381, 'comment_body': ""```suggestion\r\n\r\n    // trigger mock 'contextmenu' event\r\n    const preventDefault = jest.fn();\r\n    map.contextmenu({ preventDefault });\r\n    expect(Object.keys(map)).toHaveLength(2); // {'keyup','contextmenu'}\r\n    expect(preventDefault).toHaveBeenCalled();\r\n\r\n```\r\n\r\nI haven't tested it, but you could try that to get a bit of test coverage. üôÇ "", 'comment_created': datetime.datetime(2022, 6, 22, 22, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dsanders11', 'type': 'User'}]","[{'commit_sha': '6324dbd09b6ee723adc76a92a4ae0ce98505d1a3', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1023945607,build(deps): upgrade to blueprintjs@4,"Upgrades `blueprintjs` to v4 (4.8.0)
This also upgrades the following packages with it - 
* @blueprintjs/popover2@1.5.1
* @blueprintjs/select@4.5.3


to make sure that the codebase relies on only v4 version of `blueprintjs/core` - 
```
‚ùØ yarn why @blueprintjs/core
yarn why v1.22.19
warning ../../package.json: No license field
[1/4] ü§î  Why do we have the module ""@blueprintjs/core""...?
[2/4] üöö  Initialising dependency graph...
[3/4] üîç  Finding dependency...
[4/4] üö°  Calculating file sizes...
=> Found ""@blueprintjs/core@4.8.0""
info Has been hoisted to ""@blueprintjs/core""
info Reasons this module exists
   - Specified in ""dependencies""
   - Hoisted from ""@blueprintjs#popover2#@blueprintjs#core""
   - Hoisted from ""@blueprintjs#select#@blueprintjs#core""
info Disk size without dependencies: ""9.64MB""
info Disk size with unique dependencies: ""61.88MB""
info Disk size with transitive dependencies: ""69.61MB""
info Number of shared dependencies: 34
‚ú®  Done in 0.75s.
```

Fixes #1045",False,1160,https://api.github.com/repos/electron/fiddle/pulls/1160,https://github.com/electron/fiddle/pull/1160,open,1182,1056,53,1,6,0,1,0,[{'name': 'üåû Google Summer of Code'}],2022-08-11 14:35:26+00:00,,0.0,,[],"[{'commit_sha': '24a829935c6b05addf7dacb729415d9381d9e6ce', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
975073368,feat: migrate IPCRendererManager to preload scripts,"This pr essentially builds upon the previous (#1109) pr.
The changes are not tested because other APIs have to be migrated away from the renderer process due to `nodeIntegration` as true.
",False,1114,https://api.github.com/repos/electron/fiddle/pulls/1114,https://github.com/electron/fiddle/pull/1114,closed,220,124,35,2,3,0,1,0,[{'name': 'üåû Google Summer of Code'}],2022-06-22 13:02:31+00:00,2023-04-27 05:32:56+00:00,26670625.0,"308 days, 16:30:25",[],"[{'commit_sha': 'd3ba28fc52aac88b11e148ecd74e5652d6016c0c', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '050313563b06ee20b3412468a42c1946cf52537e', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
898334857,refactor: add default parameter for Runner.create,"The `README` documents the usage of `Runner.create` as 
```js
const runner = await Runner.create();
```
which throws an error of object parameters being undefined [here](https://github.com/electron/fiddle-core/blob/e6e2808fedd81981bf4019ddc2711e3e4f905220/src/runner.ts#L56).

Fixed this by adding a default empty object parameter to the `Runner.create` method (which seems like the right way rather than `await Runner.create({})`.",True,26,https://api.github.com/repos/electron/fiddle-core/pulls/26,https://github.com/electron/fiddle-core/pull/26,closed,10,8,2,1,0,0,0,0,[],2022-04-03 17:09:46+00:00,2022-05-17 15:49:07+00:00,3796761.0,"43 days, 22:39:21",[],"[{'commit_sha': '6508f480b16e9c538dcfdd5bb45ad419b2965ab0', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
989085160,docs: fix minor variable typo in example,`electron` -> `installer` :),True,27,https://api.github.com/repos/electron/fiddle-core/pulls/27,https://github.com/electron/fiddle-core/pull/27,closed,7,7,1,1,0,0,0,0,[],2022-07-06 17:21:21+00:00,2022-07-06 18:08:34+00:00,2833.0,0:47:13,[],"[{'commit_sha': '80ab47e439c1e91a428ff9eb11048aad6e27248b', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
995456664,refactor: properly handle removal of electron version,Prev conversations - https://electronhq.slack.com/archives/C03G7RWF6KH/p1657217133597039!,True,28,https://api.github.com/repos/electron/fiddle-core/pulls/28,https://github.com/electron/fiddle-core/pull/28,closed,50,6,1,1,0,0,0,0,[],2022-07-13 12:47:30+00:00,2022-07-13 16:26:26+00:00,13136.0,3:38:56,[],"[{'commit_sha': '54be01a4a49db618a774e214329f21ac25196b38', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
996604829,docs: fix the given API usage example,"The `.on` function emitter takes in an object parameter. Hence, deconstructed the values first :)
",True,29,https://api.github.com/repos/electron/fiddle-core/pulls/29,https://github.com/electron/fiddle-core/pull/29,closed,1,1,1,1,1,0,0,0,[],2022-07-14 12:18:34+00:00,2022-07-14 12:34:20+00:00,946.0,0:15:46,[],"[{'commit_sha': '56eee51d38c837533a8fa31d31a0a75eae95e0ca', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
999768316,feat: add installing options for electron binary,"This commit essentially let users pass an additional parameter to Installer which are handles the downloading process of electron binary.

Basically, the user can now - 

* Pass an a callback function to `ensureDownloaded`/`install` function which is triggered when a binary is being downloaded.
* Downloading electron binary from custom sources by specifying the base mirror.

### Usage 

`progressCallback` - 

```ts
const callback = (progress: ProgressObject) => {
  const percent = progress.percent * 100;
  console.log(`Current download progress %: ${percent.toFixed(2)}`);
};
await installer.ensureDownloaded('12.0.15', {
  progressCallback: callback,
});
```

`mirror` - 

```ts
const myMirror = {
  electronMirror: '<base electron mirror>',
  electronNightlyMirror: '<for nightly version>',
},
await installer.ensureDownloaded('12.0.15', {
  mirror: myMirror,
});
```",True,31,https://api.github.com/repos/electron/fiddle-core/pulls/31,https://github.com/electron/fiddle-core/pull/31,closed,102,12,4,1,0,2,0,0,[],2022-07-18 18:49:51+00:00,2022-07-22 22:05:28+00:00,357337.0,"4 days, 3:15:37","[{'comment_id': 924037513, 'comment_body': 'Instead of a comment here, could we turn this into a new paragraph with an example of using `ensureDownloaded`? I think erring on the side of more verbose documentation/examples is better when we can ', 'comment_created': datetime.datetime(2022, 7, 19, 4, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'VerteDinde', 'type': 'User'}, {'comment_id': 926910764, 'comment_body': 'Cool done that to make it more clear! Btw, you mean `installer.install` example right? (Since, I have already added the example of `ensureDownloaded` above)', 'comment_created': datetime.datetime(2022, 7, 21, 16, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}]","[{'commit_sha': 'ada53221362863371a0b3d5ee3ca6d5c8a5bb647', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1015148111,refactor: modify InstallState to be an enum,This only allows certain strings to be passed when dealing with version states.,True,33,https://api.github.com/repos/electron/fiddle-core/pulls/33,https://github.com/electron/fiddle-core/pull/33,closed,64,49,3,1,0,0,0,0,[],2022-08-02 13:51:01+00:00,2022-08-08 22:13:54+00:00,548573.0,"6 days, 8:22:53",[],"[{'commit_sha': '3dc6c9c505e66eb99919acb2f14dcb9fe3be1567', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1015177518,ci: install dependencies with --frozen-lockfile flag,Minor addition to #32 pr :),True,34,https://api.github.com/repos/electron/fiddle-core/pulls/34,https://github.com/electron/fiddle-core/pull/34,closed,1,1,1,1,0,0,0,0,[],2022-08-02 14:14:22+00:00,2022-08-09 19:18:55+00:00,623073.0,"7 days, 5:04:33",[],"[{'commit_sha': '8df43848611719237a4fd050e2e81ebd97f963bb', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1019297880,feat: allow installing of multiple version simultaneously,"This commit adds the support to allow installing of multiple electron version together.

Previously, there was a single global variable denoting the installing state of electron version. Hence, when a new version triggers the `install` function - it throws an error due to [this](https://github.com/electron/fiddle-core/blob/e22ae4d453ba21c5d40f47b153105f632a624c9a/src/installer.ts#L287) check.
With changing it to be `Map`, we can keep track to all version and their installing state :)
",True,35,https://api.github.com/repos/electron/fiddle-core/pulls/35,https://github.com/electron/fiddle-core/pull/35,closed,12,8,1,1,0,2,0,0,[],2022-08-06 08:45:40+00:00,2022-08-09 19:51:54+00:00,299174.0,"3 days, 11:06:14","[{'comment_id': 940684733, 'comment_body': 'question: if the value in the map is just a boolean value, can we instead just have a `Set()` and add/remove items when needed?', 'comment_created': datetime.datetime(2022, 8, 8, 21, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 940973347, 'comment_body': 'Yup, using `Set` here is a much cleaner approach :)', 'comment_created': datetime.datetime(2022, 8, 9, 7, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}]","[{'commit_sha': '26b46f0a5f7b0f0929dc08b5df43691e2d9f0548', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1028530188,build(deps): upgrade @electron/get,The latest version of `get` fixes the checksum error in case of China proxies (https://github.com/electron/get/pull/226#issuecomment-1208824651) which is required here in order to ship https://github.com/electron/fiddle/pull/1134.,True,36,https://api.github.com/repos/electron/fiddle-core/pulls/36,https://github.com/electron/fiddle-core/pull/36,closed,141,104,2,1,0,0,0,0,[],2022-08-17 09:01:06+00:00,2022-08-17 15:48:56+00:00,24470.0,6:47:50,[],"[{'commit_sha': '47dbad1b73baa5c7576242247f371ae33916c644', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
1035621889,feat: allow usage of already unzipped electron versions,Link to discussion - https://github.com/electron/fiddle/pull/1134#discussion_r952949487,True,37,https://api.github.com/repos/electron/fiddle-core/pulls/37,https://github.com/electron/fiddle-core/pull/37,closed,215,31,4,1,0,7,0,0,[],2022-08-24 15:13:38+00:00,2022-08-26 17:10:35+00:00,179817.0,"2 days, 1:56:57","[{'comment_id': 954283516, 'comment_body': ""issue: Isn't it ultimately more important that we check if the `version` file is valid SemVer rather than the enclosing folder?"", 'comment_created': datetime.datetime(2022, 8, 24, 20, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 954285315, 'comment_body': 'issue: this should be in an `else` clause since the folders will never match the zip', 'comment_created': datetime.datetime(2022, 8, 24, 20, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 954306048, 'comment_body': ""nit(non-blocking): it's a bit confusing that `isAlreadyInstalled` is in a different control flow branch from the `already installed` debug statement.\r\n\r\nWould `alreadyExtracted` be clearer? "", 'comment_created': datetime.datetime(2022, 8, 24, 21, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 954320725, 'comment_body': 'question: why are we hard-coding `electron-v13.1.7.zip` in the test but making the `dirName` configurable?', 'comment_created': datetime.datetime(2022, 8, 24, 21, 36, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 954321362, 'comment_body': 'question: What exactly does the `safe` parameter mean here?', 'comment_created': datetime.datetime(2022, 8, 24, 21, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'erickzhao', 'type': 'User'}, {'comment_id': 954470707, 'comment_body': 'Yup, But now that I think of - maybe `alreadyExtracted` goes better in the `ElectronBinary` interface than `preInstalled`.', 'comment_created': datetime.datetime(2022, 8, 25, 3, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}, {'comment_id': 954470711, 'comment_body': 'If I remember if correctly, I was using that for testing and debugging. Removed it now.', 'comment_created': datetime.datetime(2022, 8, 25, 3, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'aryanshridhar', 'type': 'User'}]","[{'commit_sha': 'bae0e14ad793d2623b8f342b66dc4391e81d04fc', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49
663966676,Add support for `__dirname` in JavaScript bundle,Fixes #1649 ,False,1650,https://api.github.com/repos/jantimon/html-webpack-plugin/pulls/1650,https://github.com/jantimon/html-webpack-plugin/pull/1650,closed,30,1,2,6,4,8,1,0,[{'name': 'wontfix'}],2021-06-07 22:48:03+00:00,2022-05-01 18:56:20+00:00,28325297.0,"327 days, 20:08:17","[{'comment_id': 647291159, 'comment_body': ""I guess we don't need this as webpack will convert `__non_webpack_require__` to `require` - or did you find any scenario where this might be useful?"", 'comment_created': datetime.datetime(2021, 6, 8, 9, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jantimon', 'type': 'User'}, {'comment_id': 647291550, 'comment_body': 'probably we should also add a unit test for `__filename` and `__dirname` - what do you think?', 'comment_created': datetime.datetime(2021, 6, 8, 9, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jantimon', 'type': 'User'}, {'comment_id': 647544734, 'comment_body': ""You mentioned it in the issue so I just blindly added itüò¨. You're right though, webpack already creates the mapping to `require`"", 'comment_created': datetime.datetime(2021, 6, 8, 15, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'timfish', 'type': 'User'}, {'comment_id': 647545154, 'comment_body': 'Will add a test!', 'comment_created': datetime.datetime(2021, 6, 8, 15, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timfish', 'type': 'User'}, {'comment_id': 650667902, 'comment_body': 'I guess the target is not relevant for `__dirname`', 'comment_created': datetime.datetime(2021, 6, 14, 6, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jantimon', 'type': 'User'}, {'comment_id': 650668959, 'comment_body': 'Please remove the hook - we can have a simple template like this:\r\n\r\ndirname.ejs\r\n```\r\n<html>\r\n<body>\r\n  dirname: <%= __dirname %>\r\n</body>\r\n</html>\r\n```', 'comment_created': datetime.datetime(2021, 6, 14, 6, 7, 45, tzinfo=datetime.timezone.utc), 'commenter': 'jantimon', 'type': 'User'}, {'comment_id': 650669535, 'comment_body': ""here we can check what we expect to show up in the plugin - for our test maybe:\r\n\r\n```\r\n ['dirname: ' + path.resolve('./fixtures/dirname.ejs'), null, done)\r\n```"", 'comment_created': datetime.datetime(2021, 6, 14, 6, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jantimon', 'type': 'User'}, {'comment_id': 650818700, 'comment_body': ""I've just tried this and the test does not fail when I comment out the addition of `__dirname` to `vm.createContext` so the simplified test you suggested doesn't actually test the issue."", 'comment_created': datetime.datetime(2021, 6, 14, 10, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timfish', 'type': 'User'}]","[{'commit_sha': '0b4bd90671fea34d2a4c46a20039fb0c2c554109', 'committer_username': 'timfish', 'committer_name': 'Tim Fish', 'committer_email': 'tim@timfish.uk', 'commit_date': datetime.datetime(2011, 10, 25, 9, 20, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fc290b91651384393363563115ead2ded856c2e', 'committer_username': 'timfish', 'committer_name': 'Tim Fish', 'committer_email': 'tim@timfish.uk', 'commit_date': datetime.datetime(2011, 10, 25, 9, 20, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0481e2bf20c6281a1ab543b36f251d5da76df764', 'committer_username': 'timfish', 'committer_name': 'Tim Fish', 'committer_email': 'tim@timfish.uk', 'commit_date': datetime.datetime(2011, 10, 25, 9, 20, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c68d7e0b9a8b4c6d23952c605ba0d6bbfb08315', 'committer_username': 'timfish', 'committer_name': 'Tim Fish', 'committer_email': 'tim@timfish.uk', 'commit_date': datetime.datetime(2011, 10, 25, 9, 20, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d156ab62e6842dde3658fd6207748c5b71870bc', 'committer_username': 'timfish', 'committer_name': 'Tim Fish', 'committer_email': 'tim@timfish.uk', 'commit_date': datetime.datetime(2011, 10, 25, 9, 20, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '710dc6b92d0a25c9a6baa486f440aa0dfcc8d72d', 'committer_username': 'timfish', 'committer_name': 'Tim Fish', 'committer_email': 'tim@timfish.uk', 'commit_date': datetime.datetime(2011, 10, 25, 9, 20, 8, tzinfo=datetime.timezone.utc)}]",Tim Fish,1150298,tim@timfish.uk,User,,77,,54,46
975073368,feat: migrate IPCRendererManager to preload scripts,"This pr essentially builds upon the previous (#1109) pr.
The changes are not tested because other APIs have to be migrated away from the renderer process due to `nodeIntegration` as true.
",False,1114,https://api.github.com/repos/electron/fiddle/pulls/1114,https://github.com/electron/fiddle/pull/1114,closed,220,124,35,2,3,0,1,0,[{'name': 'üåû Google Summer of Code'}],2022-06-22 13:02:31+00:00,2023-04-27 05:32:56+00:00,26670625.0,"308 days, 16:30:25",[],"[{'commit_sha': 'd3ba28fc52aac88b11e148ecd74e5652d6016c0c', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}, {'commit_sha': '050313563b06ee20b3412468a42c1946cf52537e', 'committer_username': 'aryanshridhar', 'committer_name': 'Aryan Shridhar', 'committer_email': 'aryanshridhar7@gmail.com', 'commit_date': datetime.datetime(2019, 8, 10, 16, 46, 8, tzinfo=datetime.timezone.utc)}]",Aryan Shridhar,53977614,aryanshridhar7@gmail.com,User,,76,,11,49

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
136463760,fiddle,electron/fiddle,TypeScript,683,7388,149,82,2042,73,27,7,"[{'id': 1112000244, 'number': 1204, 'closed': datetime.datetime(2023, 8, 29, 0, 57, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 6, 16, 16, 33, tzinfo=datetime.timezone.utc), 'time_taken': 25519274.0, 'time_delta': '295 days, 8:41:14', 'additions': 850, 'deletions': 412, 'state': 'closed'}, {'id': 1092745424, 'number': 1200, 'closed': datetime.datetime(2022, 10, 19, 20, 30, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 19, 18, 45, 27, tzinfo=datetime.timezone.utc), 'time_taken': 6326.0, 'time_delta': '1:45:26', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1081264982, 'number': 1185, 'closed': datetime.datetime(2022, 10, 13, 16, 18, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 9, 13, 6, 58, tzinfo=datetime.timezone.utc), 'time_taken': 357072.0, 'time_delta': '4 days, 3:11:12', 'additions': 87, 'deletions': 4, 'state': 'closed'}, {'id': 1023945607, 'number': 1160, 'closed': None, 'created': datetime.datetime(2022, 8, 11, 14, 35, 26, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1182, 'deletions': 1056, 'state': 'open'}, {'id': 1017603328, 'number': 1147, 'closed': datetime.datetime(2022, 8, 5, 14, 24, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 14, 11, 30, tzinfo=datetime.timezone.utc), 'time_taken': 87164.0, 'time_delta': '1 day, 0:12:44', 'additions': 753, 'deletions': 305, 'state': 'closed'}, {'id': 1016574321, 'number': 1144, 'closed': datetime.datetime(2022, 8, 4, 7, 36, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 16, 30, 35, tzinfo=datetime.timezone.utc), 'time_taken': 54329.0, 'time_delta': '15:05:29', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 1002425739, 'number': 1138, 'closed': datetime.datetime(2022, 7, 20, 21, 52, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 15, 28, 17, tzinfo=datetime.timezone.utc), 'time_taken': 23055.0, 'time_delta': '6:24:15', 'additions': 10, 'deletions': 9, 'state': 'closed'}, {'id': 997973681, 'number': 1134, 'closed': datetime.datetime(2022, 9, 7, 16, 43, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 16, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 4664784.0, 'time_delta': '53 days, 23:46:24', 'additions': 917, 'deletions': 1292, 'state': 'closed'}, {'id': 975374339, 'number': 1115, 'closed': datetime.datetime(2022, 10, 20, 1, 43, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 16, 5, 34, tzinfo=datetime.timezone.utc), 'time_taken': 10316293.0, 'time_delta': '119 days, 9:38:13', 'additions': 42, 'deletions': 5, 'state': 'closed'}, {'id': 975073368, 'number': 1114, 'closed': datetime.datetime(2023, 4, 27, 5, 32, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 22, 13, 2, 31, tzinfo=datetime.timezone.utc), 'time_taken': 26670625.0, 'time_delta': '308 days, 16:30:25', 'additions': 220, 'deletions': 124, 'state': 'closed'}, {'id': 969439627, 'number': 1109, 'closed': datetime.datetime(2022, 7, 11, 22, 38, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 15, 6, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2187125.0, 'time_delta': '25 days, 7:32:05', 'additions': 1984, 'deletions': 3793, 'state': 'closed'}, {'id': 899253755, 'number': 1030, 'closed': datetime.datetime(2022, 5, 2, 14, 23, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 4, 16, 43, 28, tzinfo=datetime.timezone.utc), 'time_taken': 2410810.0, 'time_delta': '27 days, 21:40:10', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 879288444, 'number': 1013, 'closed': datetime.datetime(2022, 3, 14, 19, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 16, 45, 34, tzinfo=datetime.timezone.utc), 'time_taken': 10097.0, 'time_delta': '2:48:17', 'additions': 0, 'deletions': 3, 'state': 'closed'}, {'id': 569658364, 'number': 578, 'closed': datetime.datetime(2021, 2, 10, 1, 29, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 8, 17, 49, 49, tzinfo=datetime.timezone.utc), 'time_taken': 113993.0, 'time_delta': '1 day, 7:39:53', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 532990390, 'number': 543, 'closed': datetime.datetime(2021, 3, 19, 10, 22, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 5, 9, 45, tzinfo=datetime.timezone.utc), 'time_taken': 8987865.0, 'time_delta': '104 days, 0:37:45', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 524841099, 'number': 531, 'closed': datetime.datetime(2020, 12, 4, 21, 15, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 20, 17, 11, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1224222.0, 'time_delta': '14 days, 4:03:42', 'additions': 12, 'deletions': 0, 'state': 'closed'}]"
389789861,fiddle-core,electron/fiddle-core,TypeScript,13,12,9,10,158,10,2,3,"[{'id': 1094047431, 'number': 51, 'closed': datetime.datetime(2022, 10, 20, 18, 4, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 20, 16, 10, 1, tzinfo=datetime.timezone.utc), 'time_taken': 6879.0, 'time_delta': '1:54:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1092737909, 'number': 50, 'closed': None, 'created': datetime.datetime(2022, 10, 19, 18, 37, 29, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 112, 'deletions': 41, 'state': 'open'}, {'id': 1035621889, 'number': 37, 'closed': datetime.datetime(2022, 8, 26, 17, 10, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 15, 13, 38, tzinfo=datetime.timezone.utc), 'time_taken': 179817.0, 'time_delta': '2 days, 1:56:57', 'additions': 215, 'deletions': 31, 'state': 'closed'}, {'id': 1028530188, 'number': 36, 'closed': datetime.datetime(2022, 8, 17, 15, 48, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 9, 1, 6, tzinfo=datetime.timezone.utc), 'time_taken': 24470.0, 'time_delta': '6:47:50', 'additions': 141, 'deletions': 104, 'state': 'closed'}, {'id': 1019297880, 'number': 35, 'closed': datetime.datetime(2022, 8, 9, 19, 51, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 6, 8, 45, 40, tzinfo=datetime.timezone.utc), 'time_taken': 299174.0, 'time_delta': '3 days, 11:06:14', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 1015177518, 'number': 34, 'closed': datetime.datetime(2022, 8, 9, 19, 18, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 14, 14, 22, tzinfo=datetime.timezone.utc), 'time_taken': 623073.0, 'time_delta': '7 days, 5:04:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1015148111, 'number': 33, 'closed': datetime.datetime(2022, 8, 8, 22, 13, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 13, 51, 1, tzinfo=datetime.timezone.utc), 'time_taken': 548573.0, 'time_delta': '6 days, 8:22:53', 'additions': 64, 'deletions': 49, 'state': 'closed'}, {'id': 999768316, 'number': 31, 'closed': datetime.datetime(2022, 7, 22, 22, 5, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 18, 49, 51, tzinfo=datetime.timezone.utc), 'time_taken': 357337.0, 'time_delta': '4 days, 3:15:37', 'additions': 102, 'deletions': 12, 'state': 'closed'}, {'id': 998696728, 'number': 30, 'closed': datetime.datetime(2022, 7, 18, 15, 37, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 17, 49, 55, tzinfo=datetime.timezone.utc), 'time_taken': 78436.0, 'time_delta': '21:47:16', 'additions': 57, 'deletions': 12, 'state': 'closed'}, {'id': 996604829, 'number': 29, 'closed': datetime.datetime(2022, 7, 14, 12, 34, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 14, 12, 18, 34, tzinfo=datetime.timezone.utc), 'time_taken': 946.0, 'time_delta': '0:15:46', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 995456664, 'number': 28, 'closed': datetime.datetime(2022, 7, 13, 16, 26, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 13, 12, 47, 30, tzinfo=datetime.timezone.utc), 'time_taken': 13136.0, 'time_delta': '3:38:56', 'additions': 50, 'deletions': 6, 'state': 'closed'}, {'id': 989085160, 'number': 27, 'closed': datetime.datetime(2022, 7, 6, 18, 8, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 17, 21, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2833.0, 'time_delta': '0:47:13', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 898334857, 'number': 26, 'closed': datetime.datetime(2022, 5, 17, 15, 49, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 3, 17, 9, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3796761.0, 'time_delta': '43 days, 22:39:21', 'additions': 10, 'deletions': 8, 'state': 'closed'}]"
22744595,html-webpack-plugin,jantimon/html-webpack-plugin,JavaScript,1306,10683,119,178,819,44,2,9,[]
