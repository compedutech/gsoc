pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
428385848,SDF based FURY actors,"The PR includes a base SDF function w.r.t Issue #247 
The current PR includes:
- Lambertian Lighting
- Torus and Sphere primitives
- Option to render multiple primitives
- Scaling",True,250,https://api.github.com/repos/fury-gl/fury/pulls/250,https://github.com/fury-gl/fury/pull/250,closed,678,1,9,20,3,56,3,0,"[{'name': 'state: work-in-progress'}, {'name': 'type:New Feature'}, {'name': ':rocket: :snake: GSOC 2020'}]",2020-06-05 11:13:38+00:00,2020-07-19 16:10:16+00:00,3819398.0,"44 days, 4:56:38","[{'comment_id': 435979032, 'comment_body': 'Can you fix the typo `primitive` instead of `primitve`.  Furthermore, `torus` should be lowercase ', 'comment_created': datetime.datetime(2020, 6, 5, 14, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435979254, 'comment_body': 'indentation issue', 'comment_created': datetime.datetime(2020, 6, 5, 14, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435979591, 'comment_body': 'needs an empty line between `Parameters` and the title above', 'comment_created': datetime.datetime(2020, 6, 5, 14, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435979853, 'comment_body': '`sphere` and `torus` lowercase', 'comment_created': datetime.datetime(2020, 6, 5, 15, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435983649, 'comment_body': 'I think the deformation problem come from here.\r\n- `point` = `centeredVertexMC` = Model space\r\n- `ro` = `MCVCMatrix` =  View / World space\r\nI think we should look deeper here.', 'comment_created': datetime.datetime(2020, 6, 5, 15, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 436378545, 'comment_body': 'Should list the supported options', 'comment_created': datetime.datetime(2020, 6, 7, 16, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 436801449, 'comment_body': ""Because the number of parameters varies from primitive to primitive, wouldn't it better to have an actor per SDF primitive?"", 'comment_created': datetime.datetime(2020, 6, 8, 15, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436802715, 'comment_body': 'Can you add a test case?', 'comment_created': datetime.datetime(2020, 6, 8, 15, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436841783, 'comment_body': 'Could you add scale?', 'comment_created': datetime.datetime(2020, 6, 8, 16, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436853127, 'comment_body': 'If value of this variable is unlikely to change. Wouldn\'t it be better if we pass it in the following way:\r\n\r\n`vtk_primitive = numpy_support.numpy_to_vtk(prims[primitive], deep=True)`\r\n`vtk_primitive.SetNumberOfComponents(1)`\r\n`vtk_primitive.SetName(""primitive"")`\r\n`actor.GetMapper().GetInput().GetPointData().AddArray(vtk_primitive)`', 'comment_created': datetime.datetime(2020, 6, 8, 16, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436861739, 'comment_body': 'Can you please elaborate?', 'comment_created': datetime.datetime(2020, 6, 8, 17, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 436863205, 'comment_body': 'I asked @skoudoro about this, he said for now to stick with shaderCallback.', 'comment_created': datetime.datetime(2020, 6, 8, 17, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 436864079, 'comment_body': ""Sure thing! What I'm suggesting is to have a `def torus_sdf(args)` actor or simply `def torus(args, render='sdf')` instead of a single function to render all the primitives."", 'comment_created': datetime.datetime(2020, 6, 8, 17, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436872756, 'comment_body': 'I recommend it the opposite so I think, we should talk about it during the next meeting. Please, keep it as it is for the moment @lenixlobo ', 'comment_created': datetime.datetime(2020, 6, 8, 17, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 436873186, 'comment_body': ""Same comment as above, let's talk about it in the next meeting"", 'comment_created': datetime.datetime(2020, 6, 8, 17, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 439768453, 'comment_body': 'This will need to be expanded to describe what an SDF is and why one would want to use them instead of the regular FURY primitives. It should also explain the method of embedding an SDF inside a cube so that the references to cubes below will make sense. Or maybe we just replace all mentions of ""cube"" with ""SDF primitive.""', 'comment_created': datetime.datetime(2020, 6, 13, 20, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439769580, 'comment_body': 'This should follow the VTK convention and be named `vertexMCVSOutput`. ', 'comment_created': datetime.datetime(2020, 6, 13, 21, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439769703, 'comment_body': '```\r\nvertexMCVSOutput = vertexMC;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439769852, 'comment_body': '```\r\nin vec4 vertexMCVSOutput;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770081, 'comment_body': '```\r\nvec3 point = vertexMCVSOutput.xyz;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770270, 'comment_body': 'Should be named `centerWCVSOutput`. The centers defined by the user are in world coordinates, right?', 'comment_created': datetime.datetime(2020, 6, 13, 21, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770311, 'comment_body': '```\r\ncenterWCVSOutput = center;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770388, 'comment_body': '```\r\nin vec3 centerWCVSOutput;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770468, 'comment_body': '`centerWCVSOutput`', 'comment_created': datetime.datetime(2020, 6, 13, 21, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770478, 'comment_body': '`centerWCVSOutput`', 'comment_created': datetime.datetime(2020, 6, 13, 21, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770593, 'comment_body': '```\r\nprim == 1\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770604, 'comment_body': '```\r\nprim == 2', 'comment_created': datetime.datetime(2020, 6, 13, 21, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770652, 'comment_body': '```\r\nuniform int prim;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 443700477, 'comment_body': 'As we discussed this is an experimental feature, therefore I suggest creating a new PR and put this code in `docs/experimental`', 'comment_created': datetime.datetime(2020, 6, 22, 16, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 443705899, 'comment_body': 'You could move all this code to `fury/tests/test_actor.py`', 'comment_created': datetime.datetime(2020, 6, 22, 17, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 445515330, 'comment_body': ""@skoudoro @guaje If we use AddArray() the user has to define the primitive for those many cubes.\r\nEg: if we have multiple cubes, the user has to pass ['sphere', 'torus', ..., 'torus'], while in case of setUniform the user has to define the primitive only once, so what approach should I proceed with? \r\n"", 'comment_created': datetime.datetime(2020, 6, 25, 12, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 456604333, 'comment_body': ""If this function is meant to be used by the respective primitive actors, i.e., `def torus(args)`, `def spheres(args)`. Shouldn't the signature be private or protected, i.e., `def __sdf(args)`."", 'comment_created': datetime.datetime(2020, 7, 17, 18, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456608546, 'comment_body': 'Remove this.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456608656, 'comment_body': 'Remove this.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456609947, 'comment_body': 'Remove redundant parentheses `if isinstance(primitives, (list, tuple, np.ndarray)):`', 'comment_created': datetime.datetime(2020, 7, 17, 18, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456610528, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456611153, 'comment_body': 'Change to primitives.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456611738, 'comment_body': 'Remove redundant parentheses `if isinstance(scale, (list, tuple, np.ndarray)):`', 'comment_created': datetime.datetime(2020, 7, 17, 18, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456677084, 'comment_body': ""Isn't this an unreachable part of the code, given the evaluation `#if 0`?"", 'comment_created': datetime.datetime(2020, 7, 17, 21, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456677397, 'comment_body': ""Isn't this an unreachable part of the code, given the evaluation `#if 1`?"", 'comment_created': datetime.datetime(2020, 7, 17, 21, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456677724, 'comment_body': 'Fix indentation and spacing.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456678637, 'comment_body': 'Fix spacing.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456679460, 'comment_body': 'Remove unused expression.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456680009, 'comment_body': 'Missing space after commas.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456681258, 'comment_body': 'You could add the content of this file to your test case.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456791635, 'comment_body': 'No, I think it can stay public for different users', 'comment_created': datetime.datetime(2020, 7, 18, 13, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791687, 'comment_body': '`str` instead of `String`', 'comment_created': datetime.datetime(2020, 7, 18, 13, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791802, 'comment_body': 'and use a comprehension list here to be more pythonic: `primlist = [prims[prim] for prim in primitives]`', 'comment_created': datetime.datetime(2020, 7, 18, 13, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791924, 'comment_body': 'this block is repeated 3 times(directions, scale, primitives). maybe it deserves a local function or a function in `utils.py` (check if this function do not exist first ', 'comment_created': datetime.datetime(2020, 7, 18, 13, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791992, 'comment_body': '`else if` instead', 'comment_created': datetime.datetime(2020, 7, 18, 13, 49, 54, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456792045, 'comment_body': 'indentation  for lisibility', 'comment_created': datetime.datetime(2020, 7, 18, 13, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456792551, 'comment_body': 'look at other tests to complete this test. You need to do a `snapshot`and check if the desired number of objects is present. look [here](https://github.com/fury-gl/fury/blob/master/fury/tests/test_actors.py#L858) and [here](https://github.com/fury-gl/fury/blob/master/fury/tests/test_actors.py#L860)', 'comment_created': datetime.datetime(2020, 7, 18, 13, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456795577, 'comment_body': ""I think it's better to keep it as it is currently because each block performs slightly differently.\r\n"", 'comment_created': datetime.datetime(2020, 7, 18, 14, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 456796769, 'comment_body': 'Ok, fine for the moment, we will see later', 'comment_created': datetime.datetime(2020, 7, 18, 14, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456832108, 'comment_body': 'Can you add on the top of this line: `TODO: check why snapshot crash on windows with shader ON`', 'comment_created': datetime.datetime(2020, 7, 18, 22, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456832551, 'comment_body': 'can you add the following decorator at the top of the function. there is an example upper in this file. (you will have to import `skip_win` at the top of the file):\r\n\r\n``` \r\n@pytest.mark.skipif(skip_win, reason=""This test does not work on Windows ""\r\n                                     "" due to snapshot (memory access violation)""\r\n                                     "" Check what is causing this issue with shader"")\r\n``` ', 'comment_created': datetime.datetime(2020, 7, 18, 22, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': 'fa370aabd70c27273fc0e648456fedac1344bd34', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '326e737145e343422464f7780552ba416dab2972', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a94479d7dab391a28fa96d86139cfa3b4af5580b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b697e7eb29f8239db862f794924a87568da0f87', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7840884fe1619ba7fb89b674de484295171f603', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '233278e6c24c515bc8bb5724f862c962df44943e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9407e7c1fb800eb078bb2be52071107c385267a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e54a9045b40c51005a6334afc36c5075a237768', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b5a76a761364a6ff14278b2fe4642ebbaa3ed8', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c11276260fda0b3edf1109a4de7ee4a5ec785bf6', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2cb943e743482d6e10cbd2c13d0234dcdde814d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e4bc123a62bfe74bb9353f232854d2967a95f7e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee536abe3bcfe75b2f7a9c748a298615bf6b66a9', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '970d2025f167eca868d70f64d4bd1d77c687774c', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ece79d6c2838c6d7dd083f2c31a86ad9796d90b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5670e10db2cbe172dce907bba81b5cf8b07bf6b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695c6a2bc409be340dcdb4648772fe0881e60d40', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ec2ef57d8ade965febaef66802526662d5c5a9', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3635140a5e18f3348fc494cc43ea87197c10d841', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '031155a209a792636dbfe26eb62b44ea44e54878', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
452377688,SDF tutorial,"PR for adding SDF tutorial.

Kindly merge #250  before merging this PR.
Thank You.",True,267,https://api.github.com/repos/fury-gl/fury/pulls/267,https://github.com/fury-gl/fury/pull/267,closed,60,0,1,4,2,4,2,0,"[{'name': 'type:Documentation'}, {'name': ':rocket: :snake: GSOC 2020'}]",2020-07-19 06:27:22+00:00,2020-07-19 20:19:30+00:00,49928.0,13:52:08,"[{'comment_id': 456926529, 'comment_body': 'You have to give a basic explanation of the ""SDF"" terms. What is this acronym? ', 'comment_created': datetime.datetime(2020, 7, 19, 16, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926550, 'comment_body': 'typo `variables`', 'comment_created': datetime.datetime(2020, 7, 19, 16, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926623, 'comment_body': 'need a space here `,we`', 'comment_created': datetime.datetime(2020, 7, 19, 16, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926687, 'comment_body': '`False` instead of `True`, otherwise documentation can not be generated', 'comment_created': datetime.datetime(2020, 7, 19, 16, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '10b43e10867b0070913cd4a1aefbb1b3b42a660e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '158bc6468423aa0b06736fb942516d2f1105e4c1', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e459c66982f6339b9f74f8b567c34e28fb0b72', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f672a15675717a0bef9cae1c34b542866edbc9d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
470704385,Shader demos for Showcase,Shader Demos are added in the experimental directory.,False,296,https://api.github.com/repos/fury-gl/fury/pulls/296,https://github.com/fury-gl/fury/pull/296,open,567,0,5,13,4,5,1,0,[{'name': 'type:Documentation'}],2020-08-20 06:48:22+00:00,,0.0,,"[{'comment_id': 474133986, 'comment_body': 'Hey @lenixlobo , dont forget to replace `scale` with `scales`', 'comment_created': datetime.datetime(2020, 8, 20, 16, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 474765821, 'comment_body': 'can you add a small summary at the top of the file', 'comment_created': datetime.datetime(2020, 8, 21, 15, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474767202, 'comment_body': 'To amplify the focus on the shader, you can use directly the box actor:\r\n```\r\nfrom fury import actor\r\nbox_actor = actor.box(...)\r\n``` ', 'comment_created': datetime.datetime(2020, 8, 21, 15, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474767593, 'comment_body': 'Can you try to use the new shader API ?', 'comment_created': datetime.datetime(2020, 8, 21, 15, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474768681, 'comment_body': 'this file should not be experimental. this is a tutorial. Please, document it and add it to `tutorial/04_shader`', 'comment_created': datetime.datetime(2020, 8, 21, 15, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '71c631a0a14b4525ea3a228a43a60b6aca058d76', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29f18fc1c6c53eaef19f98f9df7c3a4265c6e04b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03cd0e54f5dbe11ea7d121040d97cd329abf8c90', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bcbabc7854fb052ff2b92f709fdf285fe2d7afc', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9316a92b9493280177af05959ac15e7fe2c4e30', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edec1617ea1cac9d76b36a7709c95818eb3552aa', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df108e7d4fb53be175d165a785043ed0a974fca2', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39104e8785d9397eaa1df2feb3ec00b34402fa6a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7ab77f8ecbce6b481615b9ac42fc5e92c3250a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e228e0062576351cbef33f31818724edf61a4b5c', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec226633d4ca0a7fed10015f94beeb235a408a6e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69443822c12540fc5ba6dda52aa36f9080b4654d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514c1a1400ecab6fbbf5949d0687e6e5bf353715', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
470704385,Shader demos for Showcase,Shader Demos are added in the experimental directory.,False,296,https://api.github.com/repos/fury-gl/fury/pulls/296,https://github.com/fury-gl/fury/pull/296,open,567,0,5,13,4,5,1,0,[{'name': 'type:Documentation'}],2020-08-20 06:48:22+00:00,,0.0,,"[{'comment_id': 474133986, 'comment_body': 'Hey @lenixlobo , dont forget to replace `scale` with `scales`', 'comment_created': datetime.datetime(2020, 8, 20, 16, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 474765821, 'comment_body': 'can you add a small summary at the top of the file', 'comment_created': datetime.datetime(2020, 8, 21, 15, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474767202, 'comment_body': 'To amplify the focus on the shader, you can use directly the box actor:\r\n```\r\nfrom fury import actor\r\nbox_actor = actor.box(...)\r\n``` ', 'comment_created': datetime.datetime(2020, 8, 21, 15, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474767593, 'comment_body': 'Can you try to use the new shader API ?', 'comment_created': datetime.datetime(2020, 8, 21, 15, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474768681, 'comment_body': 'this file should not be experimental. this is a tutorial. Please, document it and add it to `tutorial/04_shader`', 'comment_created': datetime.datetime(2020, 8, 21, 15, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '71c631a0a14b4525ea3a228a43a60b6aca058d76', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29f18fc1c6c53eaef19f98f9df7c3a4265c6e04b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03cd0e54f5dbe11ea7d121040d97cd329abf8c90', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bcbabc7854fb052ff2b92f709fdf285fe2d7afc', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9316a92b9493280177af05959ac15e7fe2c4e30', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edec1617ea1cac9d76b36a7709c95818eb3552aa', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df108e7d4fb53be175d165a785043ed0a974fca2', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39104e8785d9397eaa1df2feb3ec00b34402fa6a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7ab77f8ecbce6b481615b9ac42fc5e92c3250a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e228e0062576351cbef33f31818724edf61a4b5c', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec226633d4ca0a7fed10015f94beeb235a408a6e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69443822c12540fc5ba6dda52aa36f9080b4654d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514c1a1400ecab6fbbf5949d0687e6e5bf353715', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
452377688,SDF tutorial,"PR for adding SDF tutorial.

Kindly merge #250  before merging this PR.
Thank You.",True,267,https://api.github.com/repos/fury-gl/fury/pulls/267,https://github.com/fury-gl/fury/pull/267,closed,60,0,1,4,2,4,2,0,"[{'name': 'type:Documentation'}, {'name': ':rocket: :snake: GSOC 2020'}]",2020-07-19 06:27:22+00:00,2020-07-19 20:19:30+00:00,49928.0,13:52:08,"[{'comment_id': 456926529, 'comment_body': 'You have to give a basic explanation of the ""SDF"" terms. What is this acronym? ', 'comment_created': datetime.datetime(2020, 7, 19, 16, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926550, 'comment_body': 'typo `variables`', 'comment_created': datetime.datetime(2020, 7, 19, 16, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926623, 'comment_body': 'need a space here `,we`', 'comment_created': datetime.datetime(2020, 7, 19, 16, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926687, 'comment_body': '`False` instead of `True`, otherwise documentation can not be generated', 'comment_created': datetime.datetime(2020, 7, 19, 16, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '10b43e10867b0070913cd4a1aefbb1b3b42a660e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '158bc6468423aa0b06736fb942516d2f1105e4c1', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e459c66982f6339b9f74f8b567c34e28fb0b72', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f672a15675717a0bef9cae1c34b542866edbc9d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
428385848,SDF based FURY actors,"The PR includes a base SDF function w.r.t Issue #247 
The current PR includes:
- Lambertian Lighting
- Torus and Sphere primitives
- Option to render multiple primitives
- Scaling",True,250,https://api.github.com/repos/fury-gl/fury/pulls/250,https://github.com/fury-gl/fury/pull/250,closed,678,1,9,20,3,56,3,0,"[{'name': 'state: work-in-progress'}, {'name': 'type:New Feature'}, {'name': ':rocket: :snake: GSOC 2020'}]",2020-06-05 11:13:38+00:00,2020-07-19 16:10:16+00:00,3819398.0,"44 days, 4:56:38","[{'comment_id': 435979032, 'comment_body': 'Can you fix the typo `primitive` instead of `primitve`.  Furthermore, `torus` should be lowercase ', 'comment_created': datetime.datetime(2020, 6, 5, 14, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435979254, 'comment_body': 'indentation issue', 'comment_created': datetime.datetime(2020, 6, 5, 14, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435979591, 'comment_body': 'needs an empty line between `Parameters` and the title above', 'comment_created': datetime.datetime(2020, 6, 5, 14, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435979853, 'comment_body': '`sphere` and `torus` lowercase', 'comment_created': datetime.datetime(2020, 6, 5, 15, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 435983649, 'comment_body': 'I think the deformation problem come from here.\r\n- `point` = `centeredVertexMC` = Model space\r\n- `ro` = `MCVCMatrix` =  View / World space\r\nI think we should look deeper here.', 'comment_created': datetime.datetime(2020, 6, 5, 15, 6, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 436378545, 'comment_body': 'Should list the supported options', 'comment_created': datetime.datetime(2020, 6, 7, 16, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 436801449, 'comment_body': ""Because the number of parameters varies from primitive to primitive, wouldn't it better to have an actor per SDF primitive?"", 'comment_created': datetime.datetime(2020, 6, 8, 15, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436802715, 'comment_body': 'Can you add a test case?', 'comment_created': datetime.datetime(2020, 6, 8, 15, 38, 30, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436841783, 'comment_body': 'Could you add scale?', 'comment_created': datetime.datetime(2020, 6, 8, 16, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436853127, 'comment_body': 'If value of this variable is unlikely to change. Wouldn\'t it be better if we pass it in the following way:\r\n\r\n`vtk_primitive = numpy_support.numpy_to_vtk(prims[primitive], deep=True)`\r\n`vtk_primitive.SetNumberOfComponents(1)`\r\n`vtk_primitive.SetName(""primitive"")`\r\n`actor.GetMapper().GetInput().GetPointData().AddArray(vtk_primitive)`', 'comment_created': datetime.datetime(2020, 6, 8, 16, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436861739, 'comment_body': 'Can you please elaborate?', 'comment_created': datetime.datetime(2020, 6, 8, 17, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 436863205, 'comment_body': 'I asked @skoudoro about this, he said for now to stick with shaderCallback.', 'comment_created': datetime.datetime(2020, 6, 8, 17, 11, 48, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 436864079, 'comment_body': ""Sure thing! What I'm suggesting is to have a `def torus_sdf(args)` actor or simply `def torus(args, render='sdf')` instead of a single function to render all the primitives."", 'comment_created': datetime.datetime(2020, 6, 8, 17, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 436872756, 'comment_body': 'I recommend it the opposite so I think, we should talk about it during the next meeting. Please, keep it as it is for the moment @lenixlobo ', 'comment_created': datetime.datetime(2020, 6, 8, 17, 26, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 436873186, 'comment_body': ""Same comment as above, let's talk about it in the next meeting"", 'comment_created': datetime.datetime(2020, 6, 8, 17, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 439768453, 'comment_body': 'This will need to be expanded to describe what an SDF is and why one would want to use them instead of the regular FURY primitives. It should also explain the method of embedding an SDF inside a cube so that the references to cubes below will make sense. Or maybe we just replace all mentions of ""cube"" with ""SDF primitive.""', 'comment_created': datetime.datetime(2020, 6, 13, 20, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439769580, 'comment_body': 'This should follow the VTK convention and be named `vertexMCVSOutput`. ', 'comment_created': datetime.datetime(2020, 6, 13, 21, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439769703, 'comment_body': '```\r\nvertexMCVSOutput = vertexMC;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 16, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439769852, 'comment_body': '```\r\nin vec4 vertexMCVSOutput;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770081, 'comment_body': '```\r\nvec3 point = vertexMCVSOutput.xyz;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770270, 'comment_body': 'Should be named `centerWCVSOutput`. The centers defined by the user are in world coordinates, right?', 'comment_created': datetime.datetime(2020, 6, 13, 21, 20, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770311, 'comment_body': '```\r\ncenterWCVSOutput = center;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770388, 'comment_body': '```\r\nin vec3 centerWCVSOutput;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770468, 'comment_body': '`centerWCVSOutput`', 'comment_created': datetime.datetime(2020, 6, 13, 21, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770478, 'comment_body': '`centerWCVSOutput`', 'comment_created': datetime.datetime(2020, 6, 13, 21, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770593, 'comment_body': '```\r\nprim == 1\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770604, 'comment_body': '```\r\nprim == 2', 'comment_created': datetime.datetime(2020, 6, 13, 21, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 439770652, 'comment_body': '```\r\nuniform int prim;\r\n```', 'comment_created': datetime.datetime(2020, 6, 13, 21, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'dmreagan', 'type': 'User'}, {'comment_id': 443700477, 'comment_body': 'As we discussed this is an experimental feature, therefore I suggest creating a new PR and put this code in `docs/experimental`', 'comment_created': datetime.datetime(2020, 6, 22, 16, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 443705899, 'comment_body': 'You could move all this code to `fury/tests/test_actor.py`', 'comment_created': datetime.datetime(2020, 6, 22, 17, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 445515330, 'comment_body': ""@skoudoro @guaje If we use AddArray() the user has to define the primitive for those many cubes.\r\nEg: if we have multiple cubes, the user has to pass ['sphere', 'torus', ..., 'torus'], while in case of setUniform the user has to define the primitive only once, so what approach should I proceed with? \r\n"", 'comment_created': datetime.datetime(2020, 6, 25, 12, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 456604333, 'comment_body': ""If this function is meant to be used by the respective primitive actors, i.e., `def torus(args)`, `def spheres(args)`. Shouldn't the signature be private or protected, i.e., `def __sdf(args)`."", 'comment_created': datetime.datetime(2020, 7, 17, 18, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456608546, 'comment_body': 'Remove this.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456608656, 'comment_body': 'Remove this.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456609947, 'comment_body': 'Remove redundant parentheses `if isinstance(primitives, (list, tuple, np.ndarray)):`', 'comment_created': datetime.datetime(2020, 7, 17, 18, 34, 58, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456610528, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 36, 8, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456611153, 'comment_body': 'Change to primitives.', 'comment_created': datetime.datetime(2020, 7, 17, 18, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456611738, 'comment_body': 'Remove redundant parentheses `if isinstance(scale, (list, tuple, np.ndarray)):`', 'comment_created': datetime.datetime(2020, 7, 17, 18, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456677084, 'comment_body': ""Isn't this an unreachable part of the code, given the evaluation `#if 0`?"", 'comment_created': datetime.datetime(2020, 7, 17, 21, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456677397, 'comment_body': ""Isn't this an unreachable part of the code, given the evaluation `#if 1`?"", 'comment_created': datetime.datetime(2020, 7, 17, 21, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456677724, 'comment_body': 'Fix indentation and spacing.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456678637, 'comment_body': 'Fix spacing.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 17, 37, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456679460, 'comment_body': 'Remove unused expression.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 20, 10, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456680009, 'comment_body': 'Missing space after commas.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456681258, 'comment_body': 'You could add the content of this file to your test case.', 'comment_created': datetime.datetime(2020, 7, 17, 21, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'guaje', 'type': 'User'}, {'comment_id': 456791635, 'comment_body': 'No, I think it can stay public for different users', 'comment_created': datetime.datetime(2020, 7, 18, 13, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791687, 'comment_body': '`str` instead of `String`', 'comment_created': datetime.datetime(2020, 7, 18, 13, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791802, 'comment_body': 'and use a comprehension list here to be more pythonic: `primlist = [prims[prim] for prim in primitives]`', 'comment_created': datetime.datetime(2020, 7, 18, 13, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791924, 'comment_body': 'this block is repeated 3 times(directions, scale, primitives). maybe it deserves a local function or a function in `utils.py` (check if this function do not exist first ', 'comment_created': datetime.datetime(2020, 7, 18, 13, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456791992, 'comment_body': '`else if` instead', 'comment_created': datetime.datetime(2020, 7, 18, 13, 49, 54, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456792045, 'comment_body': 'indentation  for lisibility', 'comment_created': datetime.datetime(2020, 7, 18, 13, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456792551, 'comment_body': 'look at other tests to complete this test. You need to do a `snapshot`and check if the desired number of objects is present. look [here](https://github.com/fury-gl/fury/blob/master/fury/tests/test_actors.py#L858) and [here](https://github.com/fury-gl/fury/blob/master/fury/tests/test_actors.py#L860)', 'comment_created': datetime.datetime(2020, 7, 18, 13, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456795577, 'comment_body': ""I think it's better to keep it as it is currently because each block performs slightly differently.\r\n"", 'comment_created': datetime.datetime(2020, 7, 18, 14, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lenixlobo', 'type': 'User'}, {'comment_id': 456796769, 'comment_body': 'Ok, fine for the moment, we will see later', 'comment_created': datetime.datetime(2020, 7, 18, 14, 46, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456832108, 'comment_body': 'Can you add on the top of this line: `TODO: check why snapshot crash on windows with shader ON`', 'comment_created': datetime.datetime(2020, 7, 18, 22, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456832551, 'comment_body': 'can you add the following decorator at the top of the function. there is an example upper in this file. (you will have to import `skip_win` at the top of the file):\r\n\r\n``` \r\n@pytest.mark.skipif(skip_win, reason=""This test does not work on Windows ""\r\n                                     "" due to snapshot (memory access violation)""\r\n                                     "" Check what is causing this issue with shader"")\r\n``` ', 'comment_created': datetime.datetime(2020, 7, 18, 22, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': 'fa370aabd70c27273fc0e648456fedac1344bd34', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '326e737145e343422464f7780552ba416dab2972', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a94479d7dab391a28fa96d86139cfa3b4af5580b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b697e7eb29f8239db862f794924a87568da0f87', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7840884fe1619ba7fb89b674de484295171f603', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '233278e6c24c515bc8bb5724f862c962df44943e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9407e7c1fb800eb078bb2be52071107c385267a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e54a9045b40c51005a6334afc36c5075a237768', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8b5a76a761364a6ff14278b2fe4642ebbaa3ed8', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c11276260fda0b3edf1109a4de7ee4a5ec785bf6', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2cb943e743482d6e10cbd2c13d0234dcdde814d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e4bc123a62bfe74bb9353f232854d2967a95f7e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee536abe3bcfe75b2f7a9c748a298615bf6b66a9', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '970d2025f167eca868d70f64d4bd1d77c687774c', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ece79d6c2838c6d7dd083f2c31a86ad9796d90b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5670e10db2cbe172dce907bba81b5cf8b07bf6b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '695c6a2bc409be340dcdb4648772fe0881e60d40', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45ec2ef57d8ade965febaef66802526662d5c5a9', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3635140a5e18f3348fc494cc43ea87197c10d841', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '031155a209a792636dbfe26eb62b44ea44e54878', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
452377688,SDF tutorial,"PR for adding SDF tutorial.

Kindly merge #250  before merging this PR.
Thank You.",True,267,https://api.github.com/repos/fury-gl/fury/pulls/267,https://github.com/fury-gl/fury/pull/267,closed,60,0,1,4,2,4,2,0,"[{'name': 'type:Documentation'}, {'name': ':rocket: :snake: GSOC 2020'}]",2020-07-19 06:27:22+00:00,2020-07-19 20:19:30+00:00,49928.0,13:52:08,"[{'comment_id': 456926529, 'comment_body': 'You have to give a basic explanation of the ""SDF"" terms. What is this acronym? ', 'comment_created': datetime.datetime(2020, 7, 19, 16, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926550, 'comment_body': 'typo `variables`', 'comment_created': datetime.datetime(2020, 7, 19, 16, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926623, 'comment_body': 'need a space here `,we`', 'comment_created': datetime.datetime(2020, 7, 19, 16, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 456926687, 'comment_body': '`False` instead of `True`, otherwise documentation can not be generated', 'comment_created': datetime.datetime(2020, 7, 19, 16, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '10b43e10867b0070913cd4a1aefbb1b3b42a660e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '158bc6468423aa0b06736fb942516d2f1105e4c1', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48e459c66982f6339b9f74f8b567c34e28fb0b72', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f672a15675717a0bef9cae1c34b542866edbc9d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8
470704385,Shader demos for Showcase,Shader Demos are added in the experimental directory.,False,296,https://api.github.com/repos/fury-gl/fury/pulls/296,https://github.com/fury-gl/fury/pull/296,open,567,0,5,13,4,5,1,0,[{'name': 'type:Documentation'}],2020-08-20 06:48:22+00:00,,0.0,,"[{'comment_id': 474133986, 'comment_body': 'Hey @lenixlobo , dont forget to replace `scale` with `scales`', 'comment_created': datetime.datetime(2020, 8, 20, 16, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 474765821, 'comment_body': 'can you add a small summary at the top of the file', 'comment_created': datetime.datetime(2020, 8, 21, 15, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474767202, 'comment_body': 'To amplify the focus on the shader, you can use directly the box actor:\r\n```\r\nfrom fury import actor\r\nbox_actor = actor.box(...)\r\n``` ', 'comment_created': datetime.datetime(2020, 8, 21, 15, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474767593, 'comment_body': 'Can you try to use the new shader API ?', 'comment_created': datetime.datetime(2020, 8, 21, 15, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 474768681, 'comment_body': 'this file should not be experimental. this is a tutorial. Please, document it and add it to `tutorial/04_shader`', 'comment_created': datetime.datetime(2020, 8, 21, 15, 25, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '71c631a0a14b4525ea3a228a43a60b6aca058d76', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29f18fc1c6c53eaef19f98f9df7c3a4265c6e04b', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03cd0e54f5dbe11ea7d121040d97cd329abf8c90', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bcbabc7854fb052ff2b92f709fdf285fe2d7afc', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9316a92b9493280177af05959ac15e7fe2c4e30', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edec1617ea1cac9d76b36a7709c95818eb3552aa', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df108e7d4fb53be175d165a785043ed0a974fca2', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39104e8785d9397eaa1df2feb3ec00b34402fa6a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7ab77f8ecbce6b481615b9ac42fc5e92c3250a', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e228e0062576351cbef33f31818724edf61a4b5c', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec226633d4ca0a7fed10015f94beeb235a408a6e', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '69443822c12540fc5ba6dda52aa36f9080b4654d', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}, {'commit_sha': '514c1a1400ecab6fbbf5949d0687e6e5bf353715', 'committer_username': 'lenixlobo', 'committer_name': 'lenixlobo', 'committer_email': 'lenixlobo@gmail.com', 'commit_date': datetime.datetime(2016, 7, 6, 2, 55, 15, tzinfo=datetime.timezone.utc)}]",lenixlobo,20311706,lenixlobo@gmail.com,User,,45,,11,8

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
149529946,fury,fury-gl/fury,Python,165,229,20,88,5461,139,11,58,"[{'id': 472634670, 'number': 304, 'closed': datetime.datetime(2020, 9, 17, 15, 38, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 16, 35, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2070187.0, 'time_delta': '23 days, 23:03:07', 'additions': 233, 'deletions': 0, 'state': 'closed'}, {'id': 470704385, 'number': 296, 'closed': None, 'created': datetime.datetime(2020, 8, 20, 6, 48, 22, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 567, 'deletions': 0, 'state': 'open'}, {'id': 470662434, 'number': 295, 'closed': datetime.datetime(2020, 8, 20, 15, 23, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 5, 15, 42, tzinfo=datetime.timezone.utc), 'time_taken': 36496.0, 'time_delta': '10:08:16', 'additions': 10, 'deletions': 6, 'state': 'closed'}, {'id': 455620854, 'number': 273, 'closed': datetime.datetime(2020, 8, 4, 17, 36, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 10, 37, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1061958.0, 'time_delta': '12 days, 6:59:18', 'additions': 313, 'deletions': 0, 'state': 'closed'}, {'id': 452377688, 'number': 267, 'closed': datetime.datetime(2020, 7, 19, 20, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 19, 6, 27, 22, tzinfo=datetime.timezone.utc), 'time_taken': 49928.0, 'time_delta': '13:52:08', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 428385848, 'number': 250, 'closed': datetime.datetime(2020, 7, 19, 16, 10, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 11, 13, 38, tzinfo=datetime.timezone.utc), 'time_taken': 3819398.0, 'time_delta': '44 days, 4:56:38', 'additions': 678, 'deletions': 1, 'state': 'closed'}, {'id': 390547602, 'number': 207, 'closed': datetime.datetime(2020, 3, 19, 12, 7, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 16, 44, 6, tzinfo=datetime.timezone.utc), 'time_taken': 69781.0, 'time_delta': '19:23:01', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 378577636, 'number': 154, 'closed': datetime.datetime(2020, 2, 28, 12, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 22, 10, 53, 51, tzinfo=datetime.timezone.utc), 'time_taken': 525909.0, 'time_delta': '6 days, 2:05:09', 'additions': 194, 'deletions': 0, 'state': 'closed'}, {'id': 372528432, 'number': 148, 'closed': datetime.datetime(2020, 2, 11, 19, 4, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 7, 17, 49, 3, tzinfo=datetime.timezone.utc), 'time_taken': 350127.0, 'time_delta': '4 days, 1:15:27', 'additions': 56, 'deletions': 42, 'state': 'closed'}, {'id': 372521222, 'number': 147, 'closed': datetime.datetime(2020, 2, 7, 17, 40, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 7, 17, 29, 17, tzinfo=datetime.timezone.utc), 'time_taken': 677.0, 'time_delta': '0:11:17', 'additions': 32, 'deletions': 45, 'state': 'closed'}]"
