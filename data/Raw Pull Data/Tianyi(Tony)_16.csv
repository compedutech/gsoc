pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
891368461,:book: Add metrics references.,"**Description:**
Add a description table for default metrics given by controller-runtime.

**Motivation:**
Current section of metrics mainly introduces how to expose metrics and how to create additional ones.
It may be helpful to give users the references of the default available metrics given by controller-runtime.
This may provide more insights on how to create Grafana dashboards to observe controller status and create rules/alerts based on the metrics to report abnormal.

<!--

Hiya!  Welcome to Kubebuilder!  For a smooth PR process, please ensure
that you include the following information:

* a description of the change
* the motivation for the change
* what issue it fixes, if any, in GitHub syntax (e.g. Fixes #XYZ)

Both the description and motivation may reference other issues and PRs,
but should be mostly understandable without following the links (e.g. when
reading the git commit log).

Please don't @-mention people in PR or commit messages (do so in an
additional comment).

please add an icon to the title of this PR depending on the type:

- ‚ö† (:warning:): breaking
- ‚ú® (:sparkles:): new non-breaking feature
- üêõ (:bug:): bugfix
- üìñ (:book:): documentation
- üå± (:seedling:): infrastructure/other

See https://sigs.k8s.io/kubebuilder-release-tools for more information.

**PLEASE REMOVE THIS COMMENT BLOCK BEFORE SUBMITTING THE PR** (the bits
between the arrows)

-->
",True,2568,https://api.github.com/repos/kubernetes-sigs/kubebuilder/pulls/2568,https://github.com/kubernetes-sigs/kubebuilder/pull/2568,closed,40,11,4,1,5,19,5,1,"[{'name': 'cncf-cla: yes'}, {'name': 'size/M'}, {'name': 'lgtm'}, {'name': 'approved'}, {'name': 'ok-to-test'}]",2022-03-28 06:00:26+00:00,2022-03-30 10:50:26+00:00,190200.0,"2 days, 4:50:00","[{'comment_id': 836955524, 'comment_body': 'these 3 are defined in: https://github.com/kubernetes-sigs/controller-runtime/blob/master/pkg/webhook/internal/metrics/metrics.go#L28-L60', 'comment_created': datetime.datetime(2022, 3, 29, 0, 29, 15, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 836956060, 'comment_body': 'These 5 ones are defined in (https://github.com/kubernetes-sigs/controller-runtime/blob/1e4d87c9f9e15e4a58bb81909dd787f30ede7693/pkg/internal/controller/metrics/metrics.go#L26-L63)', 'comment_created': datetime.datetime(2022, 3, 29, 0, 30, 50, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 836958446, 'comment_body': 'https://github.com/kubernetes-sigs/controller-runtime/blob/b704f447ea7c8f7059c6665143a4aa1f6da28328/pkg/metrics/workqueue.go#L41-L88', 'comment_created': datetime.datetime(2022, 3, 29, 0, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 836959148, 'comment_body': '@Kavinjsir this one I could not find.\r\nFrom where do you check it out? ', 'comment_created': datetime.datetime(2022, 3, 29, 0, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 836960307, 'comment_body': 'Do you think that a text like ""Following the metrics which are exported and provided by controller-runtime by default:""\r\n\r\nWDYT?', 'comment_created': datetime.datetime(2022, 3, 29, 0, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 836961291, 'comment_body': '```suggestion\r\n## Default Exported Metrics References\r\n```', 'comment_created': datetime.datetime(2022, 3, 29, 0, 45, 42, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 837061981, 'comment_body': 'Would it be better if we could add these default metrics in the reference section of the book (https://book.kubebuilder.io/reference/reference.html) instead of elaborating in the main page?', 'comment_created': datetime.datetime(2022, 3, 29, 5, 13, 19, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 837069739, 'comment_body': 'Are these client-go metrics under the hood (https://pkg.go.dev/k8s.io/client-go/util/workqueue#MetricsProvider) or controller-runtime specific reconciler utilizes it? If its client-go related, would be helpful to drop a link so that its easier to know where they are used.', 'comment_created': datetime.datetime(2022, 3, 29, 5, 32, 17, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 837082454, 'comment_body': ""Hey, @camilamacedo86, I think it's here:\r\nhttps://github.com/kubernetes-sigs/controller-runtime/blob/master/pkg/metrics/client_go_adapter.go#L79"", 'comment_created': datetime.datetime(2022, 3, 29, 5, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837088662, 'comment_body': 'Hey, @varshaprasad96 , thx for reviewing!\r\nThe workqueue related metrics listed here is refer to https://github.com/kubernetes-sigs/controller-runtime/blob/master/pkg/metrics/workqueue.go\r\nMore specifically, [this code block](https://github.com/kubernetes-sigs/controller-runtime/blob/master/pkg/metrics/workqueue.go#L47) is where I got `workqueue_adds_total`.\r\nSo it seems like controller-runtime specific?\r\n\r\n', 'comment_created': datetime.datetime(2022, 3, 29, 6, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837089674, 'comment_body': 'Yeah, exactly.', 'comment_created': datetime.datetime(2022, 3, 29, 6, 13, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837089831, 'comment_body': 'üëçüèª ', 'comment_created': datetime.datetime(2022, 3, 29, 6, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837109610, 'comment_body': 'This sounds good!', 'comment_created': datetime.datetime(2022, 3, 29, 6, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837109802, 'comment_body': 'üëçüèª ', 'comment_created': datetime.datetime(2022, 3, 29, 6, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837116809, 'comment_body': 'Sounds good to make it appear in the reference section! Just have some updates to make an individual page `5.11.1 Metrics Reference` for the table and get it indexed in the reference. Would you like this kind of layout?', 'comment_created': datetime.datetime(2022, 3, 29, 6, 57, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 837670714, 'comment_body': '```suggestion\r\n      - [Reference](metrics-reference.md)\r\n```\r\nIt is inside of the Metrics so we do not need to use twice the name. ', 'comment_created': datetime.datetime(2022, 3, 29, 16, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 837672035, 'comment_body': 'WDYT about we point out the source code for the metrics as well? \r\nAlso, please ensure that we use the tag from the source code so that we will keep the history and not master in the link. ', 'comment_created': datetime.datetime(2022, 3, 29, 16, 22, 34, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 838299086, 'comment_body': 'Gotcha üëçüèΩ ', 'comment_created': datetime.datetime(2022, 3, 30, 9, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 838303501, 'comment_body': 'I think it a good idea!\r\nWas hesitating to go for it in consideration of the possible code line changes in the future.\r\nBut the tag is a nice way to resolve this üëçüèΩ \r\n..So just updated with url prefix: https://github.com/kubernetes-sigs/controller-runtime/blob/v0.11.0/...', 'comment_created': datetime.datetime(2022, 3, 30, 9, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}]","[{'commit_sha': 'b5b2d35c106f94d6627db0dd829c8ca167097380', 'committer_username': 'Kavinjsir', 'committer_name': 'Tony.J', 'committer_email': 'tony.jin@rilldata.com', 'commit_date': datetime.datetime(2016, 3, 29, 7, 31, 52, tzinfo=datetime.timezone.utc)}]",Tony.J,18136486,tony.jin@rilldata.com,User,,42,,76,19
964626961, ‚ú® Initialize the Grafana plugin,"# Description of the Change
Initialize the Grafana plugin with the basic function to scaffold raw json manifest that can be copied to Grafana Web UI to visualize the controller/operator status.

### Plugin Basic Function
- Scaffold a new `grafana` folder with dashboard manifests (raw json to be imported to Grafana UI)

### Sample Usage
![output2](https://user-images.githubusercontent.com/18136486/175382307-9a6c3b8b-6cc7-4339-b221-2539d0fec042.gif)

# Motivation
This is the starting entry for developing the Grafana plugin.
Relative EP is in PR: https://github.com/kubernetes-sigs/kubebuilder/pull/2708

<!--

![output](https://user-images.githubusercontent.com/18136486/174394375-fae3abca-f376-46e8-8d1b-d7704305fd6a.gif)



Hiya!  Welcome to Kubebuilder!  For a smooth PR process, please ensure
that you include the following information:

* a description of the change
* the motivation for the change
* what issue it fixes, if any, in GitHub syntax (e.g. Fixes #XYZ)

Both the description and motivation may reference other issues and PRs,
but should be mostly understandable without following the links (e.g. when
reading the git commit log).

Please don't @-mention people in PR or commit messages (do so in an
additional comment).

please add an icon to the title of this PR depending on the type:

- ‚ö† (:warning:): breaking
- ‚ú® (:sparkles:): new non-breaking feature
- üêõ (:bug:): bugfix
- üìñ (:book:): documentation
- üå± (:seedling:): infrastructure/other

See https://sigs.k8s.io/kubebuilder-release-tools for more information.

**PLEASE REMOVE THIS COMMENT BLOCK BEFORE SUBMITTING THE PR** (the bits
between the arrows)

-->
",True,2718,https://api.github.com/repos/kubernetes-sigs/kubebuilder/pulls/2718,https://github.com/kubernetes-sigs/kubebuilder/pull/2718,closed,2311,9,42,1,8,114,5,1,"[{'name': 'cncf-cla: yes'}, {'name': 'size/XXL'}, {'name': 'lgtm'}, {'name': 'approved'}, {'name': 'ok-to-test'}]",2022-06-10 23:58:15+00:00,2022-06-30 09:28:08+00:00,1675793.0,"19 days, 9:29:53","[{'comment_id': 896140046, 'comment_body': 'An error happens when `kb init ... --plugins=...,grafana.common.kubebuilder.io/v1-alpha`:\r\n\r\n> failed to initialize project: unable to scaffold with ""grafana.common.kubebuilder.io/v1-alpha"": template: *templates.OverallManifest:188: function ""name"" not defined\r\n\r\nIt looks like: for the curly braces here `{{...}}` in the string literal, the Go runtime will consider this as template which aims to fill in variables.\r\n\r\nI tried the basic usage of [embed](https://pkg.go.dev/embed) which still came this error. Wondering if someone can help with this or some suggestions on handling such?', 'comment_created': datetime.datetime(2022, 6, 13, 21, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896144446, 'comment_body': 'the plugin will be on to like the declarative one\r\nThis option WithPlugins means scaffold by default with this plugin and that is not what we are looking for', 'comment_created': datetime.datetime(2022, 6, 13, 21, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 896147947, 'comment_body': 'These constants are templates and hence are being processed and interpreted by the generator to be variables. In general, are these vars which are to be populated?', 'comment_created': datetime.datetime(2022, 6, 13, 21, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 896150153, 'comment_body': 'This file is == https://github.com/kubernetes-sigs/kubebuilder/blob/master/pkg/plugins/golang/v3/plugin.go\r\nHowever, we only implement init and edit which means in the structure we have only both\r\n```go\r\n// Plugin implements the plugin.Full interface\r\ntype Plugin struct {\r\n\tinitSubcommand\r\n\teditSubcommand\r\n}\r\n```\r\n\r\nAlso, here: (we need to change )\r\n\r\n```go\r\n\r\nconst pluginName = ""base."" + golang.DefaultNameQualifier\r\n\r\nvar (\r\n\tpluginVersion            = plugin.Version{Number: 3}\r\n\tsupportedProjectVersions = []config.Version{cfgv3.Version}\r\n)\r\n\r\n```\r\n\r\nwith\r\n\r\n```\r\nconst pluginName = ""grafana."" + plugins.DefaultNameQualifier\r\n\r\nvar (\r\n\tpluginVersion            = plugin.Version{Number: 1, Stage: stage.Alpha}\r\n\tsupportedProjectVersions = []config.Version{cfgv3.Version}\r\n\tpluginKey                = plugin.KeyFor(Plugin{})\r\n)\r\n```\r\n\r\nSo that we are defining the key of your plugin as version', 'comment_created': datetime.datetime(2022, 6, 13, 21, 24, 6, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 896153454, 'comment_body': '```suggestion\r\n//nolint:lll \r\nconst controllerOverallTemplate = `{\r\n```\r\n\r\nSo that will allow pass in the lint', 'comment_created': datetime.datetime(2022, 6, 13, 21, 26, 53, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 896154167, 'comment_body': 'Can you check if {{""{{name}}""}} solves the issue?', 'comment_created': datetime.datetime(2022, 6, 13, 21, 27, 34, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 896158348, 'comment_body': 'This json represents an actual dashboard. Can we make the dashboard configuration as simple as possible with least customizations. I see config keys like icon color and stuff which are good to have, but it would be nice to have a very basic template in action that could give us a simple dashboard with one metric.', 'comment_created': datetime.datetime(2022, 6, 13, 21, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 896243167, 'comment_body': 'Thx for the guidance! @camilamacedo86 \r\n\r\nNoticed that in the above, we have:\r\n```go\r\nvar (\r\n        ...\r\n\tpluginKey                = plugin.KeyFor(Plugin{})\r\n)\r\n```\r\n\r\nWondering the intention to have `pluginKey` defined here, how would we like to use it?\r\n\r\nI notice that [in the implementation of cli.WithPlugin](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.4.1/pkg/cli/options.go#L61), `plugin.KeyFor` will be called for each plugin passed in.\r\n\r\nSo wondering if it is necessary to have such value here?', 'comment_created': datetime.datetime(2022, 6, 13, 23, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896243394, 'comment_body': 'Sounds good! üëçüèº ', 'comment_created': datetime.datetime(2022, 6, 13, 23, 13, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896244002, 'comment_body': 'Yeah, this sounds definitely better!\r\nI replaced with a simple one with one metric. Just to make the plugin work.', 'comment_created': datetime.datetime(2022, 6, 13, 23, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896246948, 'comment_body': 'Yeah, ""{{name}}"" here is merely string, which is not necessary to be filled with values.\r\n\r\nFor this example, the grafana will receive:\r\n```json\r\n{\r\n  ""legendFormat"": ""P50 {{name}} {{instance}}""\r\n}\r\n```\r\n\r\nSo then the grafana engine will consider this as a template to fill the corresponding values from the metrics and the query.\r\n\r\nIn my panel, it can be:\r\n<img width=""500"" alt=""Screen Shot 2022-06-13 at 7 20 24 PM"" src=""https://user-images.githubusercontent.com/18136486/173462992-4923dcb3-fd15-41f7-be0c-2071d50cedfa.png"">\r\n\r\nSee here the `cronjob` the value of ""name"" and the `172.10.0.13:8443` is the value of ""instance"", they are generated by grafana.\r\n', 'comment_created': datetime.datetime(2022, 6, 13, 23, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896247838, 'comment_body': 'So this is merely an option for displaying the panel.\r\nWe can leave `legendFormat` as blank and the label will look like:\r\n<img width=""287"" alt=""Screen Shot 2022-06-13 at 7 23 25 PM"" src=""https://user-images.githubusercontent.com/18136486/173463246-2167b6d4-e63d-4485-a11b-55090364af79.png"">', 'comment_created': datetime.datetime(2022, 6, 13, 23, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896255900, 'comment_body': '> Can you check if {{""{{name}}""}} solves the issue?\r\n\r\nThis exactly solves the issue! That\'s awesome! Thx @varshaprasad96 ', 'comment_created': datetime.datetime(2022, 6, 13, 23, 44, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896273247, 'comment_body': 'I think this one is not required but you can check by looking also in the other plugins.  ', 'comment_created': datetime.datetime(2022, 6, 14, 0, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 896274046, 'comment_body': 'should we have a dashaboard with all or could we divide per category?\r\n', 'comment_created': datetime.datetime(2022, 6, 14, 0, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 896274441, 'comment_body': 'We might want here use the name of the project\r\nOR what it represents if we have an dashboard for each category', 'comment_created': datetime.datetime(2022, 6, 14, 0, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 896282274, 'comment_body': '> should we have a dashaboard with all or could we divide per category?\r\n\r\nAre we talking about displaying all default metrics in dashboards? (If so, I feel like having multiple dashboards for different groups of metrics makes more sense, since there are so many..)\r\n\r\nTalking about one single dashboard, it is available to divide panels into different folders, so that some folders can be folded up in case of the limited web page size.', 'comment_created': datetime.datetime(2022, 6, 14, 0, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 896324895, 'comment_body': 'Why we need many folders?\r\nCould not be dashboards and we have <metric_category>.json', 'comment_created': datetime.datetime(2022, 6, 14, 2, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901012969, 'comment_body': 'We need to remove the comments before merge', 'comment_created': datetime.datetime(2022, 6, 18, 20, 28, 48, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901013049, 'comment_body': 'how works this UID ?\r\nIs it == in any cluster?', 'comment_created': datetime.datetime(2022, 6, 18, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901013245, 'comment_body': 'we need a title that is more related to what it is\r\nE.g Controller-Runtime Metrics\r\n\r\nWDYT?', 'comment_created': datetime.datetime(2022, 6, 18, 20, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901013446, 'comment_body': 'We heed to add here the info that will show in the HELP. (--help)\r\nSo, does that need to say what it does? In what circumstances and its pre-requirements\r\n\r\nSee an example: https://github.com/kubernetes-sigs/kubebuilder/blob/master/pkg/plugins/golang/v3/init.go#L61-L77 \r\n', 'comment_created': datetime.datetime(2022, 6, 18, 20, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901013730, 'comment_body': 'I loved the gif showing how to use it. We might able to indeed use it in the plugins page that is amazing ü•á \r\n\r\nBut how can we ensure that the UI/Graph is showing the metrics exported?\r\nDid you test it out by following the quick start, have an Operator running with the metrics enabled in Prometheus and then check how the UI will show the data?\r\nHow does the UI itself render? Can we check an example to see how pretty is that? ', 'comment_created': datetime.datetime(2022, 6, 18, 20, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901355188, 'comment_body': 'Why are we changing the indention here?\r\nSee that it will change the doc and will no longer add the items as a subsection. So, we need to revert these changes', 'comment_created': datetime.datetime(2022, 6, 20, 7, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901355573, 'comment_body': 'This file should only have this addition', 'comment_created': datetime.datetime(2022, 6, 20, 7, 48, 54, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901355687, 'comment_body': '/hold', 'comment_created': datetime.datetime(2022, 6, 20, 7, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901356917, 'comment_body': '```suggestion\r\n| [grafana.kubebuilder.io/v1-alpha](grafana-v1-alpha.md)      | `grafana/v1-alpha`   | Optional plugin which can be used to scaffold Grafana Manifests Dashboards for the default metrics which are exported.                                                                                                                                                                             |\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 7, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901357299, 'comment_body': '```suggestion\r\n# Grafana Plugin (`grafana/v1-alpha`)\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 7, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901359234, 'comment_body': 'wdyt about we make it a little bit clear\r\n```suggestion\r\nThe Grafana plugin is an Optional plugin that can be used to scaffold Grafana Dashboards to allow you to check out the default metrics which are exported by projects using [controller-runtime][controller-runtime]\r\n```\r\nwe need to add the alias at the bottom. \r\n', 'comment_created': datetime.datetime(2022, 6, 20, 7, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901360913, 'comment_body': '```suggestion\r\nYou can check its default scaffold by looking at the `project-v3-with-grafana` projects under the [testdata][testdata] directory on the root directory of the Kubebuilder project.\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 7, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901361216, 'comment_body': ""```suggestion\r\n```\r\nLet's try to be a little less verbose"", 'comment_created': datetime.datetime(2022, 6, 20, 7, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901365270, 'comment_body': '```suggestion\r\n\r\nIf you are looking to observe the metrics exported by [controller metrics][controller-metrics] and collected by Prometheus via [Grafana][grafana].\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 7, 59, 24, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901373417, 'comment_body': '```suggestion\r\n- Access to [Prometheus][prometheus]  \r\n- Your project must be using [controller-runtime][controller-runtime] to expose the metrics via the [controller metrics][controller-metrics] and they need to be collected by Prometheus. \r\n- Access to Grafana installed on the clusters \r\n\r\nAdd the note class with:\r\n \r\n Check the [metrics][reference-metrics-doc] to know how to enable the metrics for your projects scaffold with Kubebuilder.  See that the in the [config/prometheus][ add link for sample testdata ] you will find the ServiceMonitor to enable the metrics in the default endpoint `/metrics`\r\n```\r\n\r\nHave we an Operator for Grafana? How can we install Grafana? ', 'comment_created': datetime.datetime(2022, 6, 20, 8, 8, 26, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901375532, 'comment_body': 'The service monitor is a pre-requirement for we are able to export the metrics to Prometheus Operator right?\r\nSo, if the person installed the Prometheus Operator as suggested in the doc will have the ServiceMonitor scaffold in the config and be able to use it. So, I think we should not add this example here. ', 'comment_created': datetime.datetime(2022, 6, 20, 8, 10, 36, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901382802, 'comment_body': '```suggestion\r\nThe Grafana plugin is attached to the `init` subcommand:\r\n\r\n```sh\r\nIf you will scaffold a new project you can use the Grafana plugin via the flag `--plugins=grafana.kubebuilder.io/v1-alpha` so that you will have the default scaffold with what is done by this plugin. \r\n\r\nHowever, for pre-existent projects, you can also enable this plugin by running `kubebuilder edit --plugins=grafana.kubebuilder.io/v1-alpha` \r\n```\r\n', 'comment_created': datetime.datetime(2022, 6, 20, 8, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901387004, 'comment_body': '```suggestion\r\nThe plugin will create a new directory and scaffold the JSON files under it (i.e. `grafana/controller-runtime-metrics.json`). Then, you can use the JSON manifests on Grafana by importing them to create your Dashboards.\r\n```\r\n\r\nCan we change the name of the json to be more what it does? ', 'comment_created': datetime.datetime(2022, 6, 20, 8, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901388296, 'comment_body': 'WDYT:\r\n\r\n```suggestion\r\n![output](https://user-images.githubusercontent.com/18136486/174394375-fae3abca-f376-46e8-8d1b-d7704305fd6a.gif)\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 6, 20, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901396496, 'comment_body': '```suggestion\r\n## Grafana Dashabords:\r\n\r\n### Manager Memory and CPU usage (`grafana/manager_memory_cpu.json`)\r\n\r\n//Todo: Do we not have the memory and CPU exported also by default from the manager? \r\n// Can we add a /todo here and create this report in the follow-up? Why ? I think that will be a metric more useful\r\n// then these ones are exported by controller runtime\r\n\r\n// also add an image here \r\n\r\n### Controller-Runtime Metrics (`grafana/controller-runtime-metrics.json`)\r\n\r\nThe `controller-runtime-metrics.json` will create a Grafana dashboard to check all metrics `[controller_runtime_*][metrics-ref-doc]` exported by default, see: \r\n\r\n//todo: add here an image with the final result\r\n\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 8, 32, 16, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901396956, 'comment_body': 'I think we do no need these steps here because we explaining above', 'comment_created': datetime.datetime(2022, 6, 20, 8, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901397282, 'comment_body': '```suggestion\r\n- edit (`$ kubebuilder init [OPTIONS]`)\r\n- init (`$ kubebuilder init [OPTIONS]`)\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 8, 33, 6, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901397984, 'comment_body': 'Could we add the edit? TO do so we just need to add a new edit.go in the plugin that does exactly the same scaffold and steps done by the init. ', 'comment_created': datetime.datetime(2022, 6, 20, 8, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901399734, 'comment_body': '```suggestion\r\n//nolint:lll\r\n```\r\nadd the above annotation here to let the lint pass \r\nthe error is because of the size of the lines\r\nhowever, I think if we broke the line it changes how the help appears so in this case we can ignore', 'comment_created': datetime.datetime(2022, 6, 20, 8, 35, 41, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901402298, 'comment_body': '```suggestion\r\nNOTE: This plugin requires:\r\n- Access to [Prometheus][prometheus]  \r\n- Your project must be using [controller-runtime][controller-runtime] to expose the metrics via the [controller metrics][controller-metrics] and they need to be collected by Prometheus. \r\n- Access to Grafana installed on the clusters \r\n\r\nCheck how to enable the metrics for your project by looking at the doc: https://book.kubebuilder.io/reference/metrics.html\r\n```', 'comment_created': datetime.datetime(2022, 6, 20, 8, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901404160, 'comment_body': 'Can we add the edit subcommand here?\r\nSee that you will only copy this file and rename it with edit.go\r\nand then it will be the NewEditScaffolder', 'comment_created': datetime.datetime(2022, 6, 20, 8, 40, 17, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901405832, 'comment_body': 'See an example of the edit: https://github.com/kubernetes-sigs/kubebuilder/blob/master/pkg/plugins/golang/v3/edit.go\r\n\r\nIt is == and will call the same scaffold', 'comment_created': datetime.datetime(2022, 6, 20, 8, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901407512, 'comment_body': 'can we have here only those that are controller_runtime_* metrics ?', 'comment_created': datetime.datetime(2022, 6, 20, 8, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901409311, 'comment_body': 'Why annotations and alerts?', 'comment_created': datetime.datetime(2022, 6, 20, 8, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901409522, 'comment_body': 'teh datasource is not Prometheus?', 'comment_created': datetime.datetime(2022, 6, 20, 8, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 901800470, 'comment_body': 'We will need here the var `\tpluginKey                = plugin.KeyFor(Plugin{})`\r\n\r\nBecause we need the key of this plugin to track in the PROJECT file.\r\nSo, we will use it in the scaffolder like: https://github.com/kubernetes-sigs/kubebuilder/blob/master/pkg/plugins/golang/declarative/v1/api.go#L108-L122\r\n\r\nBut in your case you do not pass the resource because you do not create the APIS with\r\n\r\nThen, we will check that your plugin was used in the project by looking at , i.e. : https://github.com/kubernetes-sigs/kubebuilder/blob/master/testdata/project-v3-addon/PROJECT#L5-L6\r\n', 'comment_created': datetime.datetime(2022, 6, 20, 15, 35, 9, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 902139113, 'comment_body': '```suggestion\r\n- Access to [Grafana](https://grafana.com/docs/grafana/latest/setup-grafana/installation/) \r\n```', 'comment_created': datetime.datetime(2022, 6, 21, 3, 54, 57, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 902139851, 'comment_body': '```suggestion\r\n[kustomize-plugin]: https://github.com/kubernetes-sigs/kubebuilder/blob/master/testdata/project-v3/config/prometheus/monitor.yaml\r\n```', 'comment_created': datetime.datetime(2022, 6, 21, 3, 57, 20, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 902140006, 'comment_body': ""Let's keep the link for the default scaffold done with the CLI"", 'comment_created': datetime.datetime(2022, 6, 21, 3, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 903115889, 'comment_body': 'In the docs, we would have to explain in detail on what we need to de with the json file which we scaffold. You could link it to the grafana docs too, that explain on exporting the json to render the dashboard. https://grafana.com/docs/grafana/latest/dashboards/export-import/', 'comment_created': datetime.datetime(2022, 6, 21, 22, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 903117045, 'comment_body': ""Nit\r\n```suggestion\r\n| [grafana.kubebuilder.io/v1-alpha](grafana-v1-alpha.md)      | `grafana/v1-alpha`   | Optional plugin which can be used to scaffold Grafana Manifests Dashboards for the default metrics which are exported by controller-runtime.                                                                                                                         |\r\n```\r\n\r\nLet's just mention default controller-runtime metrics for now. Later when we are good, we will get to a point to explain custom metrics. "", 'comment_created': datetime.datetime(2022, 6, 21, 22, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 903117502, 'comment_body': 'Nit\r\n```suggestion\r\nThe Grafana plugin is an optional plugin that can be used to scaffold Grafana Dashboards to allow you to check out the default metrics which are exported by projects using [controller-runtime][controller-runtime]\r\n```', 'comment_created': datetime.datetime(2022, 6, 21, 22, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 903118640, 'comment_body': ""```suggestion\r\n- Access to [Prometheus][prometheus]\r\n```\r\n\r\nNit: Let's add somewhere in the docs that metrics should actually be *exported* at an endpoint using prometheus. "", 'comment_created': datetime.datetime(2022, 6, 21, 22, 23, 38, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 903119065, 'comment_body': '+1', 'comment_created': datetime.datetime(2022, 6, 21, 22, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 904517954, 'comment_body': 'after the changes, you need to rebase with master and run make install and make generate to fix the testdata. ', 'comment_created': datetime.datetime(2022, 6, 23, 4, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 906235787, 'comment_body': ""@camilamacedo86 - Agreed on the usage of pluginKey, but do we need to specify it explicitly here? I doubt that, since we aren't having the code to explicitly track the resources (https://github.com/kubernetes-sigs/kubebuilder/blob/master/pkg/plugins/golang/declarative/v1/api.go#L108-L122) "", 'comment_created': datetime.datetime(2022, 6, 24, 16, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 906240310, 'comment_body': ""@varshaprasad96 it is exactly the same code without the line `cfg.Resources = append(cfg.Resources, p.resource.GVK)` _> this line would track the resources and we do not use the resources.\r\n\r\nSo the code for this plugin will be like:\r\n\r\n```go\r\n        // Track the usage of the plugin in the PROJECT file\r\n\tcfg := pluginConfig{}\r\n\tif err := p.config.DecodePluginConfig(pluginKey, &cfg); errors.As(err, &config.UnsupportedFieldError{}) {\r\n\t\t// Config doesn't support per-plugin configuration, so we can't track them\r\n\t} else {\r\n\t\t// Fail unless they key wasn't found, which just means it is the first resource tracked\r\n\t\tif err != nil && !errors.As(err, &config.PluginKeyNotFoundError{}) {\r\n\t\t\treturn err\r\n\t\t}\r\n\tif err := p.config.EncodePluginConfig(pluginKey, cfg); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n```\r\n\r\n"", 'comment_created': datetime.datetime(2022, 6, 24, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 906241736, 'comment_body': 'I will add as suggestion what is missing', 'comment_created': datetime.datetime(2022, 6, 24, 16, 56, 56, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 906242305, 'comment_body': ""```suggestion\r\n\t// Track the usage of the plugin in the PROJECT file\r\n\tcfg := pluginConfig{}\r\n\tif err := p.config.DecodePluginConfig(pluginKey, &cfg); errors.As(err, &config.UnsupportedFieldError{}) {\r\n\t\t// Config doesn't support per-plugin configuration, so we can't track them\r\n\t} else {\r\n\t\t// Fail unless they key wasn't found, which just means it is the first resource tracked\r\n\t\tif err != nil && !errors.As(err, &config.PluginKeyNotFoundError{}) {\r\n\t\t\treturn err\r\n\t\t}\r\n\tif err := p.config.EncodePluginConfig(pluginKey, cfg); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n```"", 'comment_created': datetime.datetime(2022, 6, 24, 16, 57, 47, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 906242705, 'comment_body': ""```suggestion\r\n\t// Track the usage of the plugin in the PROJECT file\r\n\tcfg := pluginConfig{}\r\n\tif err := p.config.DecodePluginConfig(pluginKey, &cfg); errors.As(err, &config.UnsupportedFieldError{}) {\r\n\t\t// Config doesn't support per-plugin configuration, so we can't track them\r\n\t} else {\r\n\t\t// Fail unless they key wasn't found, which just means it is the first resource tracked\r\n\t\tif err != nil && !errors.As(err, &config.PluginKeyNotFoundError{}) {\r\n\t\t\treturn err\r\n\t\t}\r\n\tif err := p.config.EncodePluginConfig(pluginKey, cfg); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n```"", 'comment_created': datetime.datetime(2022, 6, 24, 16, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 906242803, 'comment_body': 'Got it! If we are tracking the usage of the plugin here, then +1', 'comment_created': datetime.datetime(2022, 6, 24, 16, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 906244058, 'comment_body': 'How these parameters work?\r\nIs that something that we need to update to test/use?', 'comment_created': datetime.datetime(2022, 6, 24, 17, 0, 32, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908278568, 'comment_body': '```suggestion\r\n\tgrafanaalphav1 ""sigs.k8s.io/kubebuilder/v3/pkg/plugins/optional/grafana/alphav1""\r\n```\r\n\r\nCould we change the alias to have alphav1 so that we follow its standards? ', 'comment_created': datetime.datetime(2022, 6, 28, 9, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908285526, 'comment_body': 'See that code for init and edit are the same. Therefore we can centralize the content by:\r\na) creating a new file constants.go and adding all contacts there for the examples and descriptions\r\nb) creating a new file commons.go and centralize the code that is used in both by encapsulating them with cohesion to be called in the subcommand implementations. ', 'comment_created': datetime.datetime(2022, 6, 28, 9, 55, 38, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908286632, 'comment_body': 'Terrific ü•á ', 'comment_created': datetime.datetime(2022, 6, 28, 9, 56, 44, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908289561, 'comment_body': 'we ne\r\n```suggestion\r\n    - [grafana/v1-alpha](./plugins/grafana-v1-alpha.md)\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 9, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908293416, 'comment_body': 'Could we move for here the show case section?\r\n```suggestion\r\n#### Show case:\r\n\r\nSee an example of how to use the plugin in your project:\r\n\r\n![output](https://user-images.githubusercontent.com/18136486/175382307-9a6c3b8b-6cc7-4339-b221-2539d0fec042.gif)\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 10, 3, 44, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908294616, 'comment_body': ""```suggestion\r\n#### Now, let's check how to use the Grafana Dashboards\r\n```"", 'comment_created': datetime.datetime(2022, 6, 28, 10, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908294981, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 10, 5, 23, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 908913811, 'comment_body': '@camilamacedo86 @Kavinjsir Wdyt about renaming the directory to `v1alpha` instead of `alphav1`, to make it in sync with other plugin naming.\r\nThe path would be `sigs.k8s.io/kubebuilder/v3/pkg/plugins/optional/grafana/v1alpha`, the alias would be `grafanav1alpha`', 'comment_created': datetime.datetime(2022, 6, 28, 20, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 908942944, 'comment_body': 'Nit \r\n```suggestion\r\n5. Once the json is imported in grafana, the dashboard is ready.\r\n```', 'comment_created': datetime.datetime(2022, 6, 28, 20, 52, 41, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}]","[{'commit_sha': 'fae8f057838c53dae9f83defc0de6ba47c8bd6ed', 'committer_username': 'Kavinjsir', 'committer_name': 'Tony.J', 'committer_email': 'tony.jin@rilldata.com', 'commit_date': datetime.datetime(2016, 3, 29, 7, 31, 52, tzinfo=datetime.timezone.utc)}]",Tony.J,18136486,tony.jin@rilldata.com,User,,42,,76,19
986940019,:sparkles: (grafana/v1-alpha) : add a new dashboard to show CPU and Memory usage for Pods,"### Description of the Change
Add function of Grafana plugin to scaffold new dashboard manifest of cpu&memory. Changes include:
- Add scaffolder to generate manifest
- Update e2e test cases to cover the feature
- Documentation of the new feature

### Motivation
Enhance the function of Grafana plugin to observe controller in multiple perspectives.

### Sample Dashboard based on the Manifest:
<img width=""1381"" alt=""Screen Shot 2022-07-04 at 10 43 06 PM"" src=""https://user-images.githubusercontent.com/18136486/177239808-7d94b17d-692c-4166-8875-6d9332e05bcb.png"">


<!--

Hiya!  Welcome to Kubebuilder!  For a smooth PR process, please ensure
that you include the following information:

* a description of the change
* the motivation for the change
* what issue it fixes, if any, in GitHub syntax (e.g. Fixes #XYZ)

Both the description and motivation may reference other issues and PRs,
but should be mostly understandable without following the links (e.g. when
reading the git commit log).

Please don't @-mention people in PR or commit messages (do so in an
additional comment).

please add an icon to the title of this PR depending on the type:

- ‚ö† (:warning:): breaking
- ‚ú® (:sparkles:): new non-breaking feature
- üêõ (:bug:): bugfix
- üìñ (:book:): documentation
- üå± (:seedling:): infrastructure/other

See https://sigs.k8s.io/kubebuilder-release-tools for more information.

**PLEASE REMOVE THIS COMMENT BLOCK BEFORE SUBMITTING THE PR** (the bits
between the arrows)

-->
",True,2797,https://api.github.com/repos/kubernetes-sigs/kubebuilder/pulls/2797,https://github.com/kubernetes-sigs/kubebuilder/pull/2797,closed,979,1,6,1,4,7,5,1,"[{'name': 'cncf-cla: yes'}, {'name': 'size/XL'}, {'name': 'lgtm'}, {'name': 'approved'}, {'name': 'ok-to-test'}]",2022-07-05 02:45:42+00:00,2022-07-11 23:48:52+00:00,594190.0,"6 days, 21:03:10","[{'comment_id': 913759425, 'comment_body': 'but if we are looking for any pod that is not the manager one right?\r\nWDYT about we looking for the label : https://github.com/kubernetes-sigs/kubebuilder/blob/master/testdata/project-v3/config/manager/manager.yaml#L5', 'comment_created': datetime.datetime(2022, 7, 5, 12, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 913761135, 'comment_body': 'are we checking the memory and cpu of the Operator/manager itself right?\r\nSo, wdyt about something like Manager Usage Resources?', 'comment_created': datetime.datetime(2022, 7, 5, 12, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 914032134, 'comment_body': '> but if we are looking for any pod that is not the manager one right?\r\n\r\n- Since this `process_resident_memory_bytes` metric [roots from controller-runtime](https://github.com/kubernetes-sigs/controller-runtime/blob/v0.12.2/pkg/internal/controller/metrics/metrics.go#L74), I think it is for the manager.\r\n- What else pods that the `cpu/memory` panels may cover?\r\n- Do we also expect to monitor the pods that possibly **get launched by the operator/manager**?\r\n    (Like the pod of a job that is scheduled by a customized cronjob?)\r\n\r\n> WDYT about we looking for the label?\r\n\r\n- Are you suggesting that we compose the query to select cpu/memory metrics based on `K8s labels`?\r\n    Guess it may be hard, because the prometheus metrics by default may not contain the info of `K8s labels` right?\r\n    For example, this `process_resident_memory_bytes`\'s own labels do not cover `k8s labels` for the controller:\r\n   <img width=""1440"" alt=""Screen Shot 2022-07-05 at 12 58 25 PM"" src=""https://user-images.githubusercontent.com/18136486/177381439-31c40b62-546f-45ef-a680-27a8e1844a11.png"">\r\n ', 'comment_created': datetime.datetime(2022, 7, 5, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 914033174, 'comment_body': 'Yes, the current design is to check operator/manager only.', 'comment_created': datetime.datetime(2022, 7, 5, 17, 28, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 914058814, 'comment_body': '@Kavinjsir , \r\n\r\nBut we can use the container name in this way. What do you think about we filter by container=manager? \r\nSee that in the image you are getting the data from the proxy which is a side container to protect the manager ', 'comment_created': datetime.datetime(2022, 7, 5, 18, 2, 29, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 915004374, 'comment_body': '@camilamacedo86 @Kavinjsir  The K8s labels are configurable and can be changed by the user, so that would come under custom metrics. If `container=manager` label is something which kb scaffolding [adds](https://github.com/kubernetes-sigs/kubebuilder/blob/c329411c85ce9df7ae20156713bca8b9f01fd9cb/testdata/project-v3/config/manager/manager.yaml#L5) it, then its pretty easy to change it and error out since we hardcode it. What do you think about using labels but letting the user to pass them? If not by maybe parsing the deployment manifest where manager is defined.', 'comment_created': datetime.datetime(2022, 7, 6, 15, 52, 10, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 915640528, 'comment_body': 'As discussed we decide leave it generic', 'comment_created': datetime.datetime(2022, 7, 7, 9, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}]","[{'commit_sha': 'b83764fcf87741cba65c5b2166551da9866eac66', 'committer_username': 'Kavinjsir', 'committer_name': 'Tony.J', 'committer_email': 'tony.jin@rilldata.com', 'commit_date': datetime.datetime(2016, 3, 29, 7, 31, 52, tzinfo=datetime.timezone.utc)}]",Tony.J,18136486,tony.jin@rilldata.com,User,,42,,76,19
1004996547,:sparkles:: Add workqueue panels to dashboard,"### Description
- Add panels of Work Queue status in the controller-runtime dashboard
- Group  panels into different rows

<img width=""1440"" src=""https://user-images.githubusercontent.com/18136486/181574427-111908e7-5bdd-4607-9db7-32161f41be61.png"">


#### Seconds of P50/90/99 Items Stay in Work Queue

<img width=""920"" src=""https://user-images.githubusercontent.com/18136486/180359126-452b2a0f-a511-4ae3-844f-231d13cd27f8.png"">

#### Seconds of P50/90/99 Items Processed in Work Queue

  <img width=""912"" src=""https://user-images.githubusercontent.com/18136486/180359617-b7a59552-1e40-44f9-999f-4feb2584b2dd.png"">

#### Add Rate in Work Queue

  <img width=""913"" src=""https://user-images.githubusercontent.com/18136486/180360073-698b6f77-a2c4-4a95-8313-fd8745ad472f.png"">

#### Retries Rate in Work Queue

  <img width=""914"" src=""https://user-images.githubusercontent.com/18136486/180360101-411c81e9-d54e-4b21-bbb0-e3f94fcf48cb.png"">

### Motivation
Enhance the dashboard from grafana plugin with more panels in different perspective.




<!--

Hiya!  Welcome to Kubebuilder!  For a smooth PR process, please ensure
that you include the following information:

* a description of the change
* the motivation for the change
* what issue it fixes, if any, in GitHub syntax (e.g. Fixes #XYZ)

Both the description and motivation may reference other issues and PRs,
but should be mostly understandable without following the links (e.g. when
reading the git commit log).

Please don't @-mention people in PR or commit messages (do so in an
additional comment).

please add an icon to the title of this PR depending on the type:

- ‚ö† (:warning:): breaking
- ‚ú® (:sparkles:): new non-breaking feature
- üêõ (:bug:): bugfix
- üìñ (:book:): documentation
- üå± (:seedling:): infrastructure/other

See https://sigs.k8s.io/kubebuilder-release-tools for more information.

**PLEASE REMOVE THIS COMMENT BLOCK BEFORE SUBMITTING THE PR** (the bits
between the arrows)

-->
",True,2834,https://api.github.com/repos/kubernetes-sigs/kubebuilder/pulls/2834,https://github.com/kubernetes-sigs/kubebuilder/pull/2834,closed,1334,64,4,1,4,4,5,1,"[{'name': 'cncf-cla: yes'}, {'name': 'size/XXL'}, {'name': 'lgtm'}, {'name': 'approved'}, {'name': 'ok-to-test'}]",2022-07-22 03:47:59+00:00,2022-07-29 00:07:11+00:00,591552.0,"6 days, 20:19:12","[{'comment_id': 932762285, 'comment_body': '```suggestion\r\n      ""title"": ""Total Reconciliation Count Per Controller"",\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 23, 55, 48, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 932762501, 'comment_body': '```suggestion\r\n      ""description"": ""Total number of reconciliations per controller"",\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 23, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 932762689, 'comment_body': '```suggestion\r\n      ""title"": ""Total Reconciliation Count Per Controller"",\r\n```', 'comment_created': datetime.datetime(2022, 7, 28, 23, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 932762986, 'comment_body': 'changing the title in template should change in all testdata/', 'comment_created': datetime.datetime(2022, 7, 28, 23, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}]","[{'commit_sha': '775d0042cbc39aacb61ae08e25ceeb8b7549809a', 'committer_username': 'Kavinjsir', 'committer_name': 'Tony.J', 'committer_email': 'tony.jin@rilldata.com', 'commit_date': datetime.datetime(2016, 3, 29, 7, 31, 52, tzinfo=datetime.timezone.utc)}]",Tony.J,18136486,tony.jin@rilldata.com,User,,42,,76,19
1017257722,:sparkles: Experimental practice to scaffold dashboard manifest for custom metrics,"#### (This PR is experimental and welcome discussion)
### Description
This is the experimental practice to see how possible if we can bring dashboards for custom metrics through the Grafana Plugin.

The user can add the desired metrics in `grafana/custom-metrics/config.yaml`:
```yaml
---
customMetrics: []
  # - metric: Raw custom metric (required)
  #   type:   Metric type: counter/gauge/histogram (required)
  #   expr:   Prom_ql for the metric (optional)

```
(If you execute the plugin for the first time(either by `init` or `edit`), the above config template will be automatically generated.)

 The plugin triggered by `edit` subcommand will read the `config.yaml` and generate `grafana/custom-metrics/custom-metrics-dashboard.json`, which can be directly import in the Grafana Web UI.

#### Story 1
Users get the config entry when initialize the project or introduce the `grafana-plugin` for the first time:
```shell
# Initialize a project with the plugin enabled
kubebuilder init --plugins=grafana.kubebuilder.io/v1-alpha

# Introduce the Grafana Plugin to an existing project
kubebuilder edit --plugins=grafana.kubebuilder.io/v1-alpha
```

A nested `custom-metrics/config.yaml` will be generated under `grafana/`.

#### Story 2
Users configure `grafana/custom-metrics/config.yaml` and run `edit` subcommand to get Grafana manifest:
```shell
kubebuilder edit --plugins=grafana.kubebuilder.io/v1-alpha
```

The `grafana/custom-metrics/config.yaml` will be validated and then the manifest will be generated: `grafana/custom-metrics/custom-metrics-dashboard.json`.


### Sample

1. Specify custom metrics in config.yaml
```yaml
---
customMetrics:
  - metric: memcached_operator_reconcile_total
    type: counter
  - metric: memcached_operator_reconcile_time_seconds_bucket
    type: histogram
```
2. Run `kubebuilder edit --plugins=grafana.kubebuilder.io/v1-alpha1` to generate the manifest
3. Import the manifest into Grafana Web UI:

<img width=""1585"" src=""https://user-images.githubusercontent.com/18136486/184810327-023a9894-e48b-434b-ad47-2c6180d86cb9.png"">

![newpre](https://user-images.githubusercontent.com/18136486/186933170-d2e0de71-e079-4d1b-906a-99a549d66ebf.gif)



<!--

Hiya!  Welcome to Kubebuilder!  For a smooth PR process, please ensure
that you include the following information:

* a description of the change
* the motivation for the change
* what issue it fixes, if any, in GitHub syntax (e.g. Fixes #XYZ)

Both the description and motivation may reference other issues and PRs,
but should be mostly understandable without following the links (e.g. when
reading the git commit log).

Please don't @-mention people in PR or commit messages (do so in an
additional comment).

please add an icon to the title of this PR depending on the type:

- ‚ö† (:warning:): breaking
- ‚ú® (:sparkles:): new non-breaking feature
- üêõ (:bug:): bugfix
- üìñ (:book:): documentation
- üå± (:seedling:): infrastructure/other

See https://sigs.k8s.io/kubebuilder-release-tools for more information.

**PLEASE REMOVE THIS COMMENT BLOCK BEFORE SUBMITTING THE PR** (the bits
between the arrows)

-->
",True,2858,https://api.github.com/repos/kubernetes-sigs/kubebuilder/pulls/2858,https://github.com/kubernetes-sigs/kubebuilder/pull/2858,closed,693,2,12,1,19,48,5,1,"[{'name': 'cncf-cla: yes'}, {'name': 'size/XL'}, {'name': 'lgtm'}, {'name': 'approved'}, {'name': 'ok-to-test'}]",2022-08-04 09:11:09+00:00,2022-09-06 05:35:41+00:00,2838272.0,"32 days, 20:24:32","[{'comment_id': 938950872, 'comment_body': 'can we use `sigs.k8s.io/yaml` ?', 'comment_created': datetime.datetime(2022, 8, 5, 15, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 938952941, 'comment_body': '```suggestion\r\n\tif _, err := os.Stat(configFilePath); os.IsNotExist(err) {\r\n\t\treturn false\r\n        }\r\n       return true\r\n```', 'comment_created': datetime.datetime(2022, 8, 5, 15, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 938955447, 'comment_body': ""you can probably look at SDK's code base here to see how watches file is being loaded and contents are extracted.\r\nhttps://github.com/operator-framework/operator-sdk/blob/v1.22.2/internal/helm/watches/watches.go#L69"", 'comment_created': datetime.datetime(2022, 8, 5, 15, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 938956506, 'comment_body': 'Where is this template used. This looks like the template for the config file. But the template should actually wire in what we need to scaffold for dashboard, right?', 'comment_created': datetime.datetime(2022, 8, 5, 15, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 938956887, 'comment_body': 'Why do we need to scaffold the configuration file?', 'comment_created': datetime.datetime(2022, 8, 5, 16, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 939011450, 'comment_body': ""I see that we need to scaffold the config file. Please ignore my previous comment then. If we are scaffolding, we need to make sure that when the config file is empty then we don't do anything."", 'comment_created': datetime.datetime(2022, 8, 5, 17, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 939180853, 'comment_body': 'Yeah, this sounds better! Thx for letting me know!', 'comment_created': datetime.datetime(2022, 8, 5, 19, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 946359703, 'comment_body': 'üëçüèº  Have updated the code based on the reference and some previous discussion.', 'comment_created': datetime.datetime(2022, 8, 16, 5, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 947021063, 'comment_body': 'Temporary set the unit for all panels to be `seconds`. This would affect the dimension of the lines shown in each panel:\r\n\r\n\r\n<img width=""80"" src=""https://user-images.githubusercontent.com/18136486/184934162-9398e888-16fa-4a7e-bc02-fc19645f367b.png"">\r\n\r\n\r\nNot sure if this is acceptable to left for users OR maybe we could make this configurable through `config.yaml`?', 'comment_created': datetime.datetime(2022, 8, 16, 16, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 950369272, 'comment_body': 'Nit: We don\'t need an alias name here. `""sigs.k8s.io/yaml""` should be enough, since package name and alias are the same.', 'comment_created': datetime.datetime(2022, 8, 19, 16, 23, 45, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 950371080, 'comment_body': 'For now, let\'s make this constant. We can look into allowing users to specify this later. Instead of declaring it locally, let\'s make this a global variable:\r\n```\r\nconst configFilePath := ""grafana/custom-metrics/config.yaml""\r\n```', 'comment_created': datetime.datetime(2022, 8, 19, 16, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 950373458, 'comment_body': 'so this func adds a default expression when user does not provide it?\r\nIf so, is it compatible with all the three kinds of prometheus metrics like gauge, counter etc.', 'comment_created': datetime.datetime(2022, 8, 19, 16, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 950374756, 'comment_body': 'Actually better option would be to take configPath as an input from here, as we do with other variables. We can let \r\n```go\r\ntype CustomMetricsConfigManifest {\r\n      ConfigPath string\r\n}\r\n```\r\n\r\ncc: @camilamacedo86 ', 'comment_created': datetime.datetime(2022, 8, 19, 16, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 955919491, 'comment_body': 'üëçüèº ', 'comment_created': datetime.datetime(2022, 8, 26, 10, 50, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 955919686, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2022, 8, 26, 10, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 955926114, 'comment_body': '> so this func adds a default expression when user does not provide it?\r\n\r\nYes, the current design is the plugin will check if the user provides `expr`, if missed, then filled a basic one.\r\n', 'comment_created': datetime.datetime(2022, 8, 26, 10, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 955926247, 'comment_body': '> is it compatible with all the three kinds of prometheus metrics like gauge, counter etc.\r\n\r\nYes, very basic though:\r\n- counter: `sum(rate(custom_metric{job=\\""$job\\"", namespace=\\""$namespace\\""}[5m])) by (instance, pod)`\r\n- histogram: `histogram_quantile(0.90, sum by(instance, le) (rate(custom_metric{job=\\""$job\\"", namespace=\\""$namespace\\""}[5m])))`\r\n- gauge: the custom_metric itself (show the value directly)', 'comment_created': datetime.datetime(2022, 8, 26, 10, 59, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 955926729, 'comment_body': 'I would be glad if we have better choices of `expr`, especially for `gauge`.\r\n(Not quite confident to bring further prom_ql for `gauge` since it seems such fluctuating values might be observed in various perspectives..)', 'comment_created': datetime.datetime(2022, 8, 26, 11, 0, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 955965991, 'comment_body': 'This sounds good to me üëçüèº . Guess this helps possible ""dynamic"" config path from user input in the future. If the idea is applauded, maybe we can have a follow-up PR to work around.', 'comment_created': datetime.datetime(2022, 8, 26, 11, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 956675491, 'comment_body': 'ihmo we do not need the OverwriteFile, \r\nSee that we can use instead the method to replace the an content for another in the file instead: \r\nhttps://github.com/kubernetes-sigs/kubebuilder/blob/3ac65ec5a1f429f40f0fa81acc8a7d69a9a06bbc/pkg/plugin/util/util.go#L195-L216', 'comment_created': datetime.datetime(2022, 8, 28, 6, 26, 20, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956675495, 'comment_body': 'c/c @varshaprasad96 ', 'comment_created': datetime.datetime(2022, 8, 28, 6, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956675631, 'comment_body': '```suggestion\r\nfunc hasFileWith(configFilePath string) bool {\r\n```\r\nmethods that return boolean usually are prefixed with has or is\r\nso, wdyt about we rename this one? \r\n', 'comment_created': datetime.datetime(2022, 8, 28, 6, 27, 30, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956675733, 'comment_body': '```suggestion\r\nfunc hasFields(item templates.CustomMetricItem) bool {\r\n```', 'comment_created': datetime.datetime(2022, 8, 28, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956675908, 'comment_body': 'I think we do not need to pass the path because it will be fixed always\r\nSo, we can have a const with the default path inside of the template or am I missing something?', 'comment_created': datetime.datetime(2022, 8, 28, 6, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956675998, 'comment_body': 'What about we add examples about how to fill the file commented to show to the users? ', 'comment_created': datetime.datetime(2022, 8, 28, 6, 31, 57, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956676100, 'comment_body': '```suggestion\r\n\tfmt.Fprintf(GinkgoWriter, ""Starting grafana plugin kubebuilder suite\\n"")\r\n```', 'comment_created': datetime.datetime(2022, 8, 28, 6, 32, 42, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956676129, 'comment_body': '```suggestion\r\n\tRunSpecs(t, ""Kubebuilder grafana plugin e2e suite"")\r\n```', 'comment_created': datetime.datetime(2022, 8, 28, 6, 32, 56, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956676406, 'comment_body': 'If we are uncommented and then replace the file we do not need to uncomment.\r\nIMO here we can change that to use ReplaceInFile and you will pass a const which has the original content to be replaced for new content, see an example: https://github.com/kubernetes-sigs/kubebuilder/blob/20828c7e87e36c005f77e9c57ed9a84371dc65d8/test/e2e/v3/generate_test.go#L345-L359\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 28, 6, 35, 47, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956676571, 'comment_body': '```suggestion\r\nfunc HasFileContentWith(path, text string) (bool, error) {\r\n```\r\n', 'comment_created': datetime.datetime(2022, 8, 28, 6, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 956677073, 'comment_body': 'Could we add an example here? ', 'comment_created': datetime.datetime(2022, 8, 28, 6, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 959982543, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2022, 8, 31, 20, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 959982740, 'comment_body': 'Perfect!', 'comment_created': datetime.datetime(2022, 8, 31, 20, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 959983133, 'comment_body': 'üëçüèº ', 'comment_created': datetime.datetime(2022, 8, 31, 20, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 959984289, 'comment_body': 'üëçüèº ', 'comment_created': datetime.datetime(2022, 8, 31, 20, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 959986094, 'comment_body': 'Sounds awesome! `ReplaceInFile` helps verify the initial content in `config.yaml` while also modifies it for testing on real config. I like this idea! üëçüèº ', 'comment_created': datetime.datetime(2022, 8, 31, 20, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 959986222, 'comment_body': 'üëçüèº ', 'comment_created': datetime.datetime(2022, 8, 31, 20, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 959997391, 'comment_body': ""So the reason to have `ConfigPath` as a field here is: if the user will possibly specify a different path of `config.yaml` to load.\r\n(Then, in that case, the plugin may provide a flag to set this `ConfigPath`.)\r\n\r\nHowever, for a second thought, I'm thinking if it is necessary/suitable to expose the file path for users.\r\n\r\nI didn't come up with certain use cases to customize the path.\r\nBesides, if ever loading an 'uncertain' value of path from external would be safe..\r\n\r\nc/c @varshaprasad96 Would you bring some ideas of the design?"", 'comment_created': datetime.datetime(2022, 8, 31, 20, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 960012539, 'comment_body': 'üëçüèº ', 'comment_created': datetime.datetime(2022, 8, 31, 20, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 960014574, 'comment_body': 'Sounds good! Have added one at:\r\nhttps://deploy-preview-2858--kubebuilder.netlify.app/plugins/grafana-v1-alpha.html#add-custom-metrics-to-config\r\n\r\nHow would you like this?', 'comment_created': datetime.datetime(2022, 8, 31, 20, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 960016263, 'comment_body': ""Yeah, that makes sense. I'm not sure how could it be better. Right now, I just append an example following the template.  Would this be good?"", 'comment_created': datetime.datetime(2022, 8, 31, 20, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 960296936, 'comment_body': 'do we use it outside, if not then we do not need the capital prefix.\r\nIf we do that we are exporting the const to be used in another places\r\n```suggestion\r\nconst configFilePath = ""grafana/custom-metrics/config.yaml""\r\n```', 'comment_created': datetime.datetime(2022, 9, 1, 7, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 961845333, 'comment_body': 'Sounds good!', 'comment_created': datetime.datetime(2022, 9, 2, 16, 29, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 961845852, 'comment_body': '@camilamacedo86 this path is fixed for now. But I instead on passing it here so that we can make it configurable later. That way, if we want to introduce a feature where the user would like to scaffold config file anywhere else in the project, we can read and accept it. Wdyt?', 'comment_created': datetime.datetime(2022, 9, 2, 16, 30, 34, tzinfo=datetime.timezone.utc), 'commenter': 'varshaprasad96', 'type': 'User'}, {'comment_id': 963065926, 'comment_body': 'Test error may come from here. Since such `NewTestContext` would call `kubectl` that assumes an existing `kind` cluster.', 'comment_created': datetime.datetime(2022, 9, 5, 17, 26, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 963124587, 'comment_body': ""@Kavinjsir we should not add a new file here. \r\nIn this case, we need only in the Kubebuilder Makefile to call the test.\r\n\r\nWe would only need to execute this test once. However, to make simple let's call it with the others and a TODO here to sort it out after. \r\n\r\nThat means:\r\na) Remove this file plugin.sh\r\nb) Add the new test in : https://github.com/kubernetes-sigs/kubebuilder/blob/master/test/e2e/setup.sh#L65\r\nc) Revert the changes made in the Kubebuilder Makefile\r\nd) Add a comment in the setup.sh and in the new e2e test like TODO: in this case, we do not need the cluster and we would not need to test against many k8s versions. So that it can be improved in the future. "", 'comment_created': datetime.datetime(2022, 9, 5, 21, 1, 36, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 963124738, 'comment_body': 'c/c @varshaprasad96 \r\n\r\n/hold', 'comment_created': datetime.datetime(2022, 9, 5, 21, 2, 17, tzinfo=datetime.timezone.utc), 'commenter': 'camilamacedo86', 'type': 'User'}, {'comment_id': 963190269, 'comment_body': ""Sounds good to me. I've updated the code based on the steps and it looks work well."", 'comment_created': datetime.datetime(2022, 9, 6, 2, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Kavinjsir', 'type': 'User'}, {'comment_id': 978622639, 'comment_body': 'configurable units would be much appreciated!', 'comment_created': datetime.datetime(2022, 9, 23, 13, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jkremser', 'type': 'User'}]","[{'commit_sha': '001daab0261930418f51d69af2ceb79a04455a02', 'committer_username': 'Kavinjsir', 'committer_name': 'Tony.J', 'committer_email': 'tony.jin@rilldata.com', 'commit_date': datetime.datetime(2016, 3, 29, 7, 31, 52, tzinfo=datetime.timezone.utc)}]",Tony.J,18136486,tony.jin@rilldata.com,User,,42,,76,19

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
125275487,kubebuilder,kubernetes-sigs/kubebuilder,Go,1424,7687,93,403,3759,51,34,6,"[{'id': 1920070224, 'number': 3986, 'closed': datetime.datetime(2024, 7, 21, 10, 28, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 14, 6, 59, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3209339.0, 'time_delta': '37 days, 3:28:59', 'additions': 19, 'deletions': 22, 'state': 'closed'}, {'id': 1803064000, 'number': 3843, 'closed': datetime.datetime(2024, 5, 7, 21, 26, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 2, 18, 14, 38, tzinfo=datetime.timezone.utc), 'time_taken': 3035500.0, 'time_delta': '35 days, 3:11:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1757918536, 'number': 3810, 'closed': datetime.datetime(2024, 3, 29, 19, 59, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 6, 0, 16, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2058207.0, 'time_delta': '23 days, 19:43:27', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 1698047009, 'number': 3747, 'closed': datetime.datetime(2024, 1, 27, 8, 2, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 27, 4, 18, 1, tzinfo=datetime.timezone.utc), 'time_taken': 13450.0, 'time_delta': '3:44:10', 'additions': 11, 'deletions': 10, 'state': 'closed'}, {'id': 1593424715, 'number': 3691, 'closed': datetime.datetime(2023, 11, 9, 9, 5, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 8, 22, 32, 42, tzinfo=datetime.timezone.utc), 'time_taken': 37986.0, 'time_delta': '10:33:06', 'additions': 19, 'deletions': 18, 'state': 'closed'}, {'id': 1593403907, 'number': 3690, 'closed': datetime.datetime(2023, 11, 17, 14, 46, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 8, 22, 17, 36, tzinfo=datetime.timezone.utc), 'time_taken': 750518.0, 'time_delta': '8 days, 16:28:38', 'additions': 481, 'deletions': 75, 'state': 'closed'}, {'id': 1586889001, 'number': 3682, 'closed': datetime.datetime(2023, 11, 4, 2, 49, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 4, 2, 44, 48, tzinfo=datetime.timezone.utc), 'time_taken': 262.0, 'time_delta': '0:04:22', 'additions': 4, 'deletions': 6, 'state': 'closed'}, {'id': 1490704178, 'number': 3569, 'closed': datetime.datetime(2023, 8, 26, 16, 47, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 16, 9, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2262.0, 'time_delta': '0:37:42', 'additions': 632, 'deletions': 616, 'state': 'closed'}, {'id': 1490497780, 'number': 3561, 'closed': datetime.datetime(2023, 8, 26, 12, 34, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 26, 4, 58, 45, tzinfo=datetime.timezone.utc), 'time_taken': 27320.0, 'time_delta': '7:35:20', 'additions': 31, 'deletions': 46, 'state': 'closed'}, {'id': 1462015055, 'number': 3521, 'closed': datetime.datetime(2023, 8, 9, 2, 52, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 3, 20, 30, 7, tzinfo=datetime.timezone.utc), 'time_taken': 454962.0, 'time_delta': '5 days, 6:22:42', 'additions': 0, 'deletions': 127, 'state': 'closed'}, {'id': 1461987593, 'number': 3520, 'closed': datetime.datetime(2023, 8, 15, 13, 20, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 3, 20, 2, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1012698.0, 'time_delta': '11 days, 17:18:18', 'additions': 31, 'deletions': 9, 'state': 'closed'}, {'id': 1449069584, 'number': 3510, 'closed': datetime.datetime(2023, 7, 26, 12, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 19, 58, 32, tzinfo=datetime.timezone.utc), 'time_taken': 60108.0, 'time_delta': '16:41:48', 'additions': 12, 'deletions': 10, 'state': 'closed'}, {'id': 1251140780, 'number': 3248, 'closed': datetime.datetime(2023, 2, 23, 16, 23, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 23, 5, 20, 4, tzinfo=datetime.timezone.utc), 'time_taken': 39811.0, 'time_delta': '11:03:31', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1232979592, 'number': 3209, 'closed': datetime.datetime(2023, 2, 8, 8, 33, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 4, 49, 21, tzinfo=datetime.timezone.utc), 'time_taken': 13470.0, 'time_delta': '3:44:30', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1130489932, 'number': 3096, 'closed': datetime.datetime(2022, 11, 21, 19, 10, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 21, 19, 4, 47, tzinfo=datetime.timezone.utc), 'time_taken': 326.0, 'time_delta': '0:05:26', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 1128443446, 'number': 3086, 'closed': datetime.datetime(2022, 11, 22, 20, 14, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 19, 1, 20, 40, tzinfo=datetime.timezone.utc), 'time_taken': 327215.0, 'time_delta': '3 days, 18:53:35', 'additions': 4170, 'deletions': 142, 'state': 'closed'}, {'id': 1126743348, 'number': 3084, 'closed': datetime.datetime(2022, 11, 23, 4, 24, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 17, 23, 48, 56, tzinfo=datetime.timezone.utc), 'time_taken': 448518.0, 'time_delta': '5 days, 4:35:18', 'additions': 126, 'deletions': 5, 'state': 'closed'}, {'id': 1124043231, 'number': 3076, 'closed': datetime.datetime(2024, 3, 3, 3, 24, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 16, 8, 21, 33, tzinfo=datetime.timezone.utc), 'time_taken': 40849388.0, 'time_delta': '472 days, 19:03:08', 'additions': 1052, 'deletions': 0, 'state': 'closed'}, {'id': 1080726864, 'number': 3008, 'closed': datetime.datetime(2022, 11, 1, 3, 0, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 7, 19, 35, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2100319.0, 'time_delta': '24 days, 7:25:19', 'additions': 127, 'deletions': 1, 'state': 'closed'}, {'id': 1064481835, 'number': 2962, 'closed': datetime.datetime(2022, 9, 23, 6, 10, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 22, 17, 53, tzinfo=datetime.timezone.utc), 'time_taken': 44259.0, 'time_delta': '12:17:39', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1054209013, 'number': 2934, 'closed': datetime.datetime(2022, 9, 29, 9, 38, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 13, 5, 48, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1396249.0, 'time_delta': '16 days, 3:50:49', 'additions': 194, 'deletions': 63, 'state': 'closed'}, {'id': 1017257722, 'number': 2858, 'closed': datetime.datetime(2022, 9, 6, 5, 35, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 9, 11, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2838272.0, 'time_delta': '32 days, 20:24:32', 'additions': 693, 'deletions': 2, 'state': 'closed'}, {'id': 1012159872, 'number': 2847, 'closed': datetime.datetime(2022, 8, 3, 8, 47, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 16, 25, 10, tzinfo=datetime.timezone.utc), 'time_taken': 404563.0, 'time_delta': '4 days, 16:22:43', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 1004996547, 'number': 2834, 'closed': datetime.datetime(2022, 7, 29, 0, 7, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 22, 3, 47, 59, tzinfo=datetime.timezone.utc), 'time_taken': 591552.0, 'time_delta': '6 days, 20:19:12', 'additions': 1334, 'deletions': 64, 'state': 'closed'}, {'id': 986940019, 'number': 2797, 'closed': datetime.datetime(2022, 7, 11, 23, 48, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 2, 45, 42, tzinfo=datetime.timezone.utc), 'time_taken': 594190.0, 'time_delta': '6 days, 21:03:10', 'additions': 979, 'deletions': 1, 'state': 'closed'}, {'id': 971000412, 'number': 2747, 'closed': datetime.datetime(2022, 6, 18, 3, 48, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 20, 57, 51, tzinfo=datetime.timezone.utc), 'time_taken': 24667.0, 'time_delta': '6:51:07', 'additions': 251, 'deletions': 267, 'state': 'closed'}, {'id': 964626961, 'number': 2718, 'closed': datetime.datetime(2022, 6, 30, 9, 28, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 10, 23, 58, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1675793.0, 'time_delta': '19 days, 9:29:53', 'additions': 2311, 'deletions': 9, 'state': 'closed'}, {'id': 959758492, 'number': 2708, 'closed': datetime.datetime(2022, 8, 28, 2, 41, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 7, 0, 24, 41, tzinfo=datetime.timezone.utc), 'time_taken': 7093000.0, 'time_delta': '82 days, 2:16:40', 'additions': 253, 'deletions': 0, 'state': 'closed'}, {'id': 891368461, 'number': 2568, 'closed': datetime.datetime(2022, 3, 30, 10, 50, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 28, 6, 0, 26, tzinfo=datetime.timezone.utc), 'time_taken': 190200.0, 'time_delta': '2 days, 4:50:00', 'additions': 40, 'deletions': 11, 'state': 'closed'}, {'id': 879448109, 'number': 2540, 'closed': datetime.datetime(2022, 9, 5, 19, 13, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 14, 19, 41, 39, tzinfo=datetime.timezone.utc), 'time_taken': 15118300.0, 'time_delta': '174 days, 23:31:40', 'additions': 2330, 'deletions': 2, 'state': 'closed'}]"
