pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
645189245,return empty interval when an invalid input is given,"It seems that the standard requires invalid inputs to return an empty interval (see discussion in #457 ), this is also the octave behavior. 

Now the package returns an empty interval but also prints a warning (like octave does), a few examples

````
julia> 3..1
┌ Warning: Invalid input, empty interval is returned
└ @ IntervalArithmetic C:\Users\lucaa\.julia\dev\IntervalArithmetic\src\intervals\intervals.jl:107
∅

julia> interval(Inf, Inf)
┌ Warning: Invalid input, empty interval is returned
└ @ IntervalArithmetic C:\Users\lucaa\.julia\dev\IntervalArithmetic\src\intervals\intervals.jl:107
∅

julia> interval(NaN, π)
┌ Warning: Invalid input, empty interval is returned
└ @ IntervalArithmetic C:\Users\lucaa\.julia\dev\IntervalArithmetic\src\intervals\intervals.jl:107
∅

julia> @decorated 3 1
[NaN, NaN]_ill

julia> @decorated NaN 3
[NaN, NaN]_ill

julia> @decorated Inf Inf
[NaN, NaN]_ill

julia> @decorated Inf -Inf
∅_trv
```",True,461,https://api.github.com/repos/JuliaIntervals/IntervalArithmetic.jl/pulls/461,https://github.com/JuliaIntervals/IntervalArithmetic.jl/pull/461,closed,79,59,8,7,7,28,0,0,[],2021-05-15 17:27:05+00:00,2021-06-02 00:58:11+00:00,1495866.0,"17 days, 7:31:06","[{'comment_id': 632986242, 'comment_body': ""This causes problems for invalid input of rationals, as the output would then be `Interval{Float64}` instead of `Interval{Rational}`, the `Float64` is there to avoid problems when both inputs are integers, but I guess that's not the smartest way to handle it"", 'comment_created': datetime.datetime(2021, 5, 15, 17, 36, 7, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 632986698, 'comment_body': 'the `nai(T)` does not work if `T` is rational, so e.g. `DecoratedInterval(3//1, 2//1)` throws an uncatched exception\r\nThis is also in the current master version', 'comment_created': datetime.datetime(2021, 5, 15, 17, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 632988689, 'comment_body': 'The idea of having `interval` was to check the validity of the construction, which does not happen if you use `Interval`. This yields some speed-ups since the `is`s are avoided. While I think it is ok to return a `nai` for `DecoratedInterval`s, I think that we should return an error for bare intervals.', 'comment_created': datetime.datetime(2021, 5, 15, 18, 2, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 632988899, 'comment_body': 'What about defining `Interval(1//0, -1//0)` as the `nai` for rational intervals?', 'comment_created': datetime.datetime(2021, 5, 15, 18, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 632990149, 'comment_body': '`Interval` still does not make any check, so e.g. `Interval(3, 1)` works like before. The validity check is only in `interval` (and in the methods that depend on it) so for example\r\nbefore:\r\n```\r\n julia> Interval(3, 1)\r\n[3, 1]\r\n\r\njulia> interval(3, 1)\r\nERROR: ArgumentError: `[3, 1]` is not a valid interval. Need `a ≤ b` to construct `interval(a, b)`.\r\nStacktrace:\r\n [1] interval(a::Int64, b::Int64)\r\n   @ IntervalArithmetic ~\\.julia\\dev\\IntervalArithmetic\\src\\intervals\\intervals.jl:111\r\n [2] top-level scope\r\n   @ REPL[60]:1\r\n\r\n```\r\n\r\nafter:\r\n```\r\njulia> Interval(3, 1)\r\n[3, 1]\r\n\r\njulia> interval(3, 1)\r\n┌ Warning: Invalid input, empty interval is returned\r\n└ @ IntervalArithmetic C:\\Users\\lucaa\\.julia\\dev\\IntervalArithmetic\\src\\intervals\\intervals.jl:107\r\n∅\r\n```\r\n', 'comment_created': datetime.datetime(2021, 5, 15, 18, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 632994159, 'comment_body': 'That\'s precisely my point: I think using `interval` should throw an error, instead of a warning, as it is proposed. This behavior could be changed for a specific ""flavor"".', 'comment_created': datetime.datetime(2021, 5, 15, 18, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 632998720, 'comment_body': 'The motivation for returning an empty interval was the standard extract posted in https://github.com/JuliaIntervals/IntervalArithmetic.jl/issues/457#issuecomment-830855196\r\n\r\nMy understanding from that was that it should return an empty interval and signal the behavior (print the warning). Mathematically the set `{x in R | 2<=x<=1}` is the empty set, so I see no reason why `2..1` should not return an empty interval. \r\n\r\nI guess throwing an error might be more useful for debugging though. If somewhere in the code you try to build an invalid interval, interrupting the computation and pointing to the line where this happened would be more useful than silently constructing an empty interval and let it propagate through all computations.', 'comment_created': datetime.datetime(2021, 5, 15, 19, 46, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 634626925, 'comment_body': 'This refers to my code review below?\r\nAnyway, I think this would work because `nai` is only allowed as decorated interval, so you can distinguish `[1//0, -1//0]_trv` (the empty interval) from `[1//0, -1//0]_ill` (the NaI). This might require manually adjusting a couple of functions (e.g. hardcoding the printing of `NaI`), but other then that it should work. Anyway, maybe this deserves its own issue/PR for further discussion?', 'comment_created': datetime.datetime(2021, 5, 18, 18, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 635506543, 'comment_body': 'Sorry for misplacing my comment. Rather than manually requiring some adjustments, dispatching for `Interval{Rational{T}}` is also perhaps a way to proceed.', 'comment_created': datetime.datetime(2021, 5, 19, 18, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 635514676, 'comment_body': 'I also opened an issue #462 ', 'comment_created': datetime.datetime(2021, 5, 19, 19, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 635540659, 'comment_body': ""that's quite beyond the scope of this PR, see #462 "", 'comment_created': datetime.datetime(2021, 5, 19, 19, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 641992174, 'comment_body': 'Not sure if it helps in performance, but you could directly `return emptyinterval(T)` here, which would also work for `Rational`s.', 'comment_created': datetime.datetime(2021, 5, 29, 22, 47, 20, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 641992525, 'comment_body': 'I think the `if` block can be safely deleted, since the condition `a > b` includes them, but I may be missing some case...', 'comment_created': datetime.datetime(2021, 5, 29, 22, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 641993150, 'comment_body': 'I think this line may yield some type instability, in some (rare?) cases. For instance, take `a` and `b` both `Float32`s. If `is_valid_interval(a,b) == true` we get an `Interval{Float32}` (line 140), while if `is_valid_interval(a,b)==false` I think it will return an `emptyinterval(Float64)`. Is this correct?', 'comment_created': datetime.datetime(2021, 5, 29, 22, 58, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 641993757, 'comment_body': 'Possible type instability as above; if `a=Float32(Inf)`, this will return `emptyinterval(Float64)` (instead of `emptyinterval(Float32)`).', 'comment_created': datetime.datetime(2021, 5, 29, 23, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 641993779, 'comment_body': 'Possible type instability as above', 'comment_created': datetime.datetime(2021, 5, 29, 23, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 642027308, 'comment_body': 'the if block is for the cases when both `a` and `b` are `Inf` or `-Inf`', 'comment_created': datetime.datetime(2021, 5, 30, 6, 28, 19, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 642030189, 'comment_body': 'true that! When I wrote that line, I also thought it looks very wrong. The reason was that if both `a` and `b` are integers and invalid (e.g. a > b), then the function would have called `emptyinterval(Int)`, which would have led to an error. I now fixed this by defining\r\n`emptyinterval(::Type{<:Integer}) = emptyinterval(Float64)`', 'comment_created': datetime.datetime(2021, 5, 30, 6, 55, 31, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 642031139, 'comment_body': ""wouldn't that cause a stack overflow? the inner constructor would call `emptyinterval()` which would call the inner constructor, which would call `emptyinterval()` etc. etc.\r\n\r\nbtw, are `T(Inf)` and `convert(T, Inf)` equivalent? preferences on which one to use?"", 'comment_created': datetime.datetime(2021, 5, 30, 7, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 642082634, 'comment_body': ""I guess the only case (i can think now) where the `if` block does something is for `a == b == Inf` or `a == b == -Inf`, where the conditional at line 86 would not be considered. So, let's leave it there."", 'comment_created': datetime.datetime(2021, 5, 30, 14, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 642082960, 'comment_body': 'Good point about the stack overflow!\r\n\r\nRegarding your question, I have no special preference.', 'comment_created': datetime.datetime(2021, 5, 30, 14, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 642083662, 'comment_body': 'I though that you thought about that case, too :-) Yet, I guess an outer constructor would be called before, and then conversion to `Float64` or something else would take place. Is this correct? Have you checked it?', 'comment_created': datetime.datetime(2021, 5, 30, 14, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 642653327, 'comment_body': ""Would it be reasonnable to never check the validity here, get rid of the `validity_check` setting and document that to get IEEE compliant and thouroughly validated interval once should use either `interval` or `DecoratedInterval`?\r\n\r\nRelated but not directly in the scope of this PR, I wonder if it wouldn't be clearer for users to have `Interval` as the default IEEE compliant one and use some trick to get an `unsafe_interval` function for internal operations.\r\n\r\nIf you thing it is too tangential to the issue tackled here, I can add a separate issue."", 'comment_created': datetime.datetime(2021, 5, 31, 19, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Kolaru', 'type': 'User'}, {'comment_id': 642653886, 'comment_body': 'This docstring is no longer correct, it never throws an error.\r\n\r\nAlso precising that this is the way of creating IEEE compliant interval would be great.', 'comment_created': datetime.datetime(2021, 5, 31, 19, 42, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Kolaru', 'type': 'User'}, {'comment_id': 642654927, 'comment_body': ""right! I had a separated PR (#460 ) for the docstrings which I had opened before this. The idea was to rebase that once this is merged and fix the docstrings there but indeed... it makes no sense! I'll close that PR and take care of the docstrings here :D "", 'comment_created': datetime.datetime(2021, 5, 31, 19, 46, 26, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 642659703, 'comment_body': '`validity_check` is indeed set by default to `false` and since you have functions like `..` and `interval` I think it could be removed without too much harm.\r\n\r\nThe `Interval` vs `interval` might be an interesting discussion. One thing that puzzles me is the asymmetry of bare and decorated intervals, in the sense that for bare the constructors `Interval` doesn\'t do any checks and you should use `interval` or `..`, but for decorated intervals the constructors `DecoratedIntervals` does checks (well a few issues there, next PR on the way for that :D ). I think it might be important to have a mechanism to construct ""unsafe intervals"" which merely puts the given inputs as lower and upper bound, at least for testing purposes. Maybe this can be addressed in a separate issue?', 'comment_created': datetime.datetime(2021, 5, 31, 20, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 643175686, 'comment_body': 'updated the docstring. II think the note about IEEE compliance may be more appropriate after the package is actually IEEE compliant? what do you think?', 'comment_created': datetime.datetime(2021, 6, 1, 14, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 643578794, 'comment_body': 'I think it is fine like that. This will be discussed in #468 where will have to sort out what we want each constructor to do anyway.\r\n\r\nEven if the full package is not yet compliant, I think it will be good to declare our intent on which constructor corresponds to the IEEE constructors.', 'comment_created': datetime.datetime(2021, 6, 2, 0, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Kolaru', 'type': 'User'}]","[{'commit_sha': '69cd82524fda512f186e2a6467ffa16283b7a274', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80875feef5d2bb8308c1fa33a53caeadac56d08f', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65778de38a355e796cd62a0ecae9afb274591e09', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4952517f88670823fb5b39e107c28bd654281fc', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53949ceb1ad321edbb52f009ad0b8b2116bf4f4b', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73cc9381cf486981f404e320610ea6dcc976c5af', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e24bf6ecb5dcae71d1f2f4850c0e7d9510b00002', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}]",Luca Ferranti,49938764,,User,,66,,0,66
659878968,fix decorated intervals constructors issues,"## Changes

- fixed issues with decorated intervals constructors (see examples below)
- `interval(nai())` now returns an empty interval instead of `[NaN, NaN]`, it also prints a warning, this is mentioned in the standard
- changed printing of `nai()` from `[NaN, NaN]_ill` to `[NaI]_ill` (happy to switch it back if you prefer the former
- nai(Rational) wasn't supported before (see #462 ), now it returns `[1//0, -1//0]_ill`, which also motivates the change in printing above

## Examples
- before
```
julia> DecoratedInterval(Inf)
[∞, ∞]_dac

julia> DecoratedInterval(1, Inf, com)
[1, ∞]_com

julia> DecoratedInterval(1//2, 3//4)
ERROR: MethodError: no method matching atomic(::Type{Interval{Interval{Rational{Int64}}}}, ::Interval{Interval{Rational{Int64}}})
Closest candidates are:
  atomic(::Type{Interval{T}}, ::Interval) where T<:AbstractFloat at C:\Users\lucaa\.julia\dev\IntervalArithmetic\src\intervals\conversion.jl:122
  atomic(::Type{Interval{T}}, ::S) where {T<:AbstractFloat, S<:Real} at C:\Users\lucaa\.julia\dev\IntervalArithmetic\src\intervals\conversion.jl:79

julia> nai(Rational)
ERROR: InexactError: Int64(NaN)

julia> interval(nai())
[NaN, NaN]

julia> DecoratedInterval(1, 2, ill)
ERROR: ArgumentError: cannot parse ""[NaN, NaN]_ill"" as BigFloat

julia> DecoratedInterval(3, 1, ill)
ERROR: InexactError: Int64(NaN)
```

- after
```
julia> DecoratedInterval(Inf)
[NaI]_ill

julia> DecoratedInterval(1, Inf, com)
[1, ∞]_dac

julia> DecoratedInterval(1//2, 3//4)
[1//2, 3//4]_com

julia> nai(Rational)
[NaI]_ill

julia> interval(nai())
┌ Warning: trying to access interval part of NaI, empty interval is returned
└ @ IntervalArithmetic C:\Users\lucaa\.julia\dev\IntervalArithmetic\src\decorations\intervals.jl:89
∅

julia> DecoratedInterval(1, 2, ill)
[NaI]_ill

julia> DecoratedInterval(3, 1, ill)
[NaI]_ill
```

## Fixed issues
- fixes #170 
- fixes #462 

## Open problems
- [x] functions that are supposed to return `NaN` still don't work with rational intervals, because I don't think there's a rational equivalent of `NaN` (see #462 ), e.g. `inf(nai(Rational))` fails. **edit** to be addressed in a separated PR
- [ ] While the original ITF tests also test that a warning is thrown when a decorated interval is constructed from an invalid input, I removed the warnings because I think the `NaI` itself is flagging something went wrong. I understand printing the warning for bare intervals, to distinguish between empty interval itself and empty interval because of exceptional behavior, but I think for decorated intervals NaI itself conveys this information. I think also the standard says something like this, but I need to double check, what do you think?

## Question
- why is `decorations` set to `false` by default in the display parameters? I think if someone wants to work with decorated intervals, it is more likely they want to see the decoration?",False,469,https://api.github.com/repos/JuliaIntervals/IntervalArithmetic.jl/pulls/469,https://github.com/JuliaIntervals/IntervalArithmetic.jl/pull/469,closed,224,21,8,4,3,1,0,0,[],2021-06-02 09:15:38+00:00,2022-05-21 19:22:03+00:00,30535585.0,"353 days, 10:06:25","[{'comment_id': 643777031, 'comment_body': ""this does not work if T is a rational type, but I don't quite know how to fix it."", 'comment_created': datetime.datetime(2021, 6, 2, 9, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}]","[{'commit_sha': 'ff2ba23eba26b8c81f5f7b44006b388638fa99f7', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cedf65c57e7d19358899ca473d3691a5832477e', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b62a7b677e1f827edd8b631a3fc0e8fcfdda876a', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75dab76148c107b3a983283bc7e4be1d66eccbea', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}]",Luca Ferranti,49938764,,User,,66,,0,66
658330412,fixed bugs towards ITF1788 compliance,"* fixed typo in pow_rev2 (lob -> log
* fixed power_rev for exponent zero integer
* added support for decorated intervals
* added methods with one less parameter with x=R
* fixed cosh_rev
* added mul_rev_to_pair
* added tests from ITF1788 test suite

remaining issues

**ieeep1788_rev.itl**
- 16 tests with power_rev failing. From what I can tell, the returned result is just a few ulps wider than the expected one.
- ~33 tests failing with `mul_rev_IEEE1788`, but haven't had time to look at those yet~

**pow_rev.itl**
- at the moment 233/806 tests failing. Probably the current implementations do not take into account some corner cases? Need to check those",True,49,https://api.github.com/repos/JuliaIntervals/IntervalContractors.jl/pulls/49,https://github.com/JuliaIntervals/IntervalContractors.jl/pull/49,closed,4244,266,14,11,8,5,0,0,[],2021-05-31 13:50:49+00:00,2022-02-04 19:49:16+00:00,21535107.0,"249 days, 5:58:27","[{'comment_id': 792938238, 'comment_body': 'Since there are various ""powRev"" functions specified in the standard (cf. Sect 10.5.4 and Table 10.1), it\'s important to have very descriptive docstrings, in this case, of the specific function in the standard, or the differences with that.', 'comment_created': datetime.datetime(2022, 1, 26, 18, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 792942959, 'comment_body': 'I think this comment applies to other functions...', 'comment_created': datetime.datetime(2022, 1, 26, 18, 51, 6, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 792947132, 'comment_body': 'This should include a `:power_rev` method, which is defined in `src/arithmetic.jl` (and one specified below in this file).', 'comment_created': datetime.datetime(2022, 1, 26, 18, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}, {'comment_id': 793889725, 'comment_body': ""@lbenet I'm not sure I get what you mean, the type signature of `power_rev` is different from the one in the methods generated in the loop.  The method with one less interval is defined on line 125 of `src/arithmetic.jl`"", 'comment_created': datetime.datetime(2022, 1, 27, 18, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 795098895, 'comment_body': 'Sorry for the noise. You are right, the signature is different.', 'comment_created': datetime.datetime(2022, 1, 29, 22, 15, 57, tzinfo=datetime.timezone.utc), 'commenter': 'lbenet', 'type': 'User'}]","[{'commit_sha': '44413c5afdf7c0e9317a337301c237f196785a4c', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6e90d54e11bc958ebbbcc8643f34f0bdb7a3a7a', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5251d8174de02a42d7726fab79052c6b8dd8a008', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6babeacc70591714ed33005a8fbb1cc9c9d68ee8', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ab7c5c2d2035f4995beda93ffd487cf5cf9058', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8068bab59d3e89bad3b0af3cc0a2e8e953d29d98', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4371384304b34a167f48cb6dd521380d5b219514', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3f0884ca153de8eb038ad692d3c57f86cfa7bee', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '959e7898cbd36af63f6a5f4d0091ff098c10f362', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c59f1b4f076897e5a61b79d35d7b14a41dc948f', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d5bc2353082fd96125860b303394618e17f744c', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}]",Luca Ferranti,49938764,,User,,66,,0,66
713503859,"added issubset, mig, mag, mid for complex intervals","Added some scalar functions for complex valued intervals
- issubset
- mig
- mag
- mid

these are needed e.g. for rigorous computation of eigenvalues of real/complex matrices.",True,483,https://api.github.com/repos/JuliaIntervals/IntervalArithmetic.jl/pulls/483,https://github.com/JuliaIntervals/IntervalArithmetic.jl/pull/483,closed,24,3,3,2,2,1,0,0,[],2021-08-16 14:47:47+00:00,2021-08-27 14:31:13+00:00,949406.0,"10 days, 23:43:26","[{'comment_id': 695894391, 'comment_body': '`Complex(mid(real(z)), mid(imag(z)))`', 'comment_created': datetime.datetime(2021, 8, 25, 15, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dpsanders', 'type': 'User'}]","[{'commit_sha': 'c1e04eb6ea25d5304ca8b4b321b5590ae415b502', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cbf10acf8829c0ed59b109a22e941f526fc6066', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}]",Luca Ferranti,49938764,,User,,66,,0,66
714057292,rigorous computation of eigenvalues of matrices,"extending to non-symmetric matrices requires this PR in IntervalArithmetic.jl https://github.com/JuliaIntervals/IntervalArithmetic.jl/pull/483 (requires computing magnitude and checking for strict inclusion of interval vectors)

",True,68,https://api.github.com/repos/JuliaIntervals/IntervalLinearAlgebra.jl/pulls/68,https://github.com/JuliaIntervals/IntervalLinearAlgebra.jl/pull/68,closed,257,3,7,6,2,6,0,0,[],2021-08-17 09:09:35+00:00,2021-08-29 16:59:19+00:00,1064984.0,"12 days, 7:49:44","[{'comment_id': 690183358, 'comment_body': 'this line seems to cause type instability', 'comment_created': datetime.datetime(2021, 8, 17, 9, 10, 29, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 690543852, 'comment_body': 'in the test example, `Z + C * Y` is a vector of intervals, while `R * (Ytmp * Y[v, :])` is a matrix of intervals. that may be causing the instability.', 'comment_created': datetime.datetime(2021, 8, 17, 16, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mforets', 'type': 'User'}, {'comment_id': 690938829, 'comment_body': ""k is used as variable name later, this should be changed (now it works because I'm not using the keyword argument below)"", 'comment_created': datetime.datetime(2021, 8, 18, 6, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 690939930, 'comment_body': 'should be changed to `IA.Interval.(-0.1*mag.(Z), 0.1*mag.(Z)) .+ Interval(-eps, eps)`. Also I think Rump in the paper multiplies by 0.1 after summing [-eps, eps].', 'comment_created': datetime.datetime(2021, 8, 18, 6, 31, 18, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 690941232, 'comment_body': 'should only consider non-zero entries of xpf, e.g.\r\n```julia\r\nprod = IA.Interval.(M) * Ia.Itterval.(xpf)\r\n\r\ntmp = sup.([prod[i] / xi for (i, xi) in enumerate(xpf) if !iszero(xi)])\r\n```', 'comment_created': datetime.datetime(2021, 8, 18, 6, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}, {'comment_id': 690942347, 'comment_body': ""well that's embarassing..."", 'comment_created': datetime.datetime(2021, 8, 18, 6, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'lucaferranti', 'type': 'User'}]","[{'commit_sha': 'b1889c66f81f2fd7a654a4ae559d4cf05b897808', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f34a030f27fbc1631275ac151c92928e25a20ac', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61926ee37492321d6e45d7b4461bcdab907753fc', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6920ece0aa9aedbc1317cfec575beee3e7e9c535', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1f2135a0af40410c38dac748057f7bbe2fd5b82', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '239e5238011ae647a8513b88717c654bdd7b8a77', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}]",Luca Ferranti,49938764,,User,,66,,0,66
716738357,added algorithms to bound eigenvalues of interval matrices,"## PR description

added code to bound eigenvalues of interval matrices, following the algorithms described [here](https://www.sciencedirect.com/science/article/abs/pii/S0096300312012428?via%3Dihub)

## Before 


## After
```julia
julia> A = [0 -1 -1;2 -1.399.. -0.001 0;1 0.5 -1]
3×3 Matrix{Interval{Float64}}:
 [0, 0]  [-1, -1]                       [-1, -1]
 [2, 2]       [-1.39901, -0.000999999]    [0, 0]
 [1, 1]        [0.5, 0.5]               [-1, -1]

julia> eigenbox(A)
[-1.90679, 0.970154] + [-2.51903, 2.51903]im
```

## Related issues
- fixes #75 ",True,77,https://api.github.com/repos/JuliaIntervals/IntervalLinearAlgebra.jl/pulls/77,https://github.com/JuliaIntervals/IntervalLinearAlgebra.jl/pull/77,closed,156,3,7,3,1,0,0,0,[],2021-08-20 13:27:34+00:00,2021-08-27 06:32:18+00:00,579884.0,"6 days, 17:04:44",[],"[{'commit_sha': '9d35f2c307f91becc7000304e5dda0e3d03dff4b', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9c17412634a65378b6923b78c11e589c4c7cbd5', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0502975221951e0957a125db4855f757de899cad', 'committer_username': 'lucaferranti', 'committer_name': 'Luca Ferranti', 'committer_email': None, 'commit_date': datetime.datetime(2019, 4, 24, 7, 53, 29, tzinfo=datetime.timezone.utc)}]",Luca Ferranti,49938764,,User,,66,,0,66

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
87007945,IntervalArithmetic.jl,JuliaIntervals/IntervalArithmetic.jl,Julia,71,290,13,46,1221,27,7,5,"[{'id': 949232251, 'number': 529, 'closed': datetime.datetime(2022, 5, 28, 13, 30, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 11, 52, 17, tzinfo=datetime.timezone.utc), 'time_taken': 92303.0, 'time_delta': '1 day, 1:38:23', 'additions': 58, 'deletions': 56, 'state': 'closed'}, {'id': 948106095, 'number': 527, 'closed': datetime.datetime(2023, 12, 1, 23, 45, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 10, 21, 15, tzinfo=datetime.timezone.utc), 'time_taken': 47913869.0, 'time_delta': '554 days, 13:24:29', 'additions': 56, 'deletions': 35, 'state': 'closed'}, {'id': 943590669, 'number': 523, 'closed': datetime.datetime(2022, 6, 1, 15, 0, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 22, 7, 52, 51, tzinfo=datetime.timezone.utc), 'time_taken': 889652.0, 'time_delta': '10 days, 7:07:32', 'additions': 79, 'deletions': 86, 'state': 'closed'}, {'id': 943498219, 'number': 522, 'closed': datetime.datetime(2022, 5, 25, 20, 18, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 21, 18, 47, 44, tzinfo=datetime.timezone.utc), 'time_taken': 351059.0, 'time_delta': '4 days, 1:30:59', 'additions': 357, 'deletions': 318, 'state': 'closed'}, {'id': 872822937, 'number': 511, 'closed': datetime.datetime(2022, 3, 8, 13, 26, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 7, 8, 15, 35, tzinfo=datetime.timezone.utc), 'time_taken': 105057.0, 'time_delta': '1 day, 5:10:57', 'additions': 15, 'deletions': 1, 'state': 'closed'}, {'id': 832573117, 'number': 505, 'closed': datetime.datetime(2022, 2, 7, 20, 35, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 26, 16, 5, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1052982.0, 'time_delta': '12 days, 4:29:42', 'additions': 20151, 'deletions': 10935, 'state': 'closed'}, {'id': 751819871, 'number': 496, 'closed': datetime.datetime(2021, 10, 16, 7, 11, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 6, 14, 56, 8, tzinfo=datetime.timezone.utc), 'time_taken': 836099.0, 'time_delta': '9 days, 16:14:59', 'additions': 36, 'deletions': 13, 'state': 'closed'}, {'id': 737106634, 'number': 492, 'closed': datetime.datetime(2021, 9, 21, 17, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 19, 16, 48, 1, tzinfo=datetime.timezone.utc), 'time_taken': 175199.0, 'time_delta': '2 days, 0:39:59', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 713507286, 'number': 484, 'closed': datetime.datetime(2021, 8, 16, 15, 2, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 14, 52, 15, tzinfo=datetime.timezone.utc), 'time_taken': 617.0, 'time_delta': '0:10:17', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 713503859, 'number': 483, 'closed': datetime.datetime(2021, 8, 27, 14, 31, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 14, 47, 47, tzinfo=datetime.timezone.utc), 'time_taken': 949406.0, 'time_delta': '10 days, 23:43:26', 'additions': 24, 'deletions': 3, 'state': 'closed'}, {'id': 677381288, 'number': 480, 'closed': datetime.datetime(2024, 3, 11, 15, 58, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 19, 25, 15, tzinfo=datetime.timezone.utc), 'time_taken': 85609992.0, 'time_delta': '990 days, 20:33:12', 'additions': 6, 'deletions': 1, 'state': 'closed'}, {'id': 659878968, 'number': 469, 'closed': datetime.datetime(2022, 5, 21, 19, 22, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 9, 15, 38, tzinfo=datetime.timezone.utc), 'time_taken': 30535585.0, 'time_delta': '353 days, 10:06:25', 'additions': 224, 'deletions': 21, 'state': 'closed'}, {'id': 645189245, 'number': 461, 'closed': datetime.datetime(2021, 6, 2, 0, 58, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 15, 17, 27, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1495866.0, 'time_delta': '17 days, 7:31:06', 'additions': 79, 'deletions': 59, 'state': 'closed'}, {'id': 630808219, 'number': 460, 'closed': datetime.datetime(2021, 5, 31, 19, 48, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 5, 18, 21, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2251584.0, 'time_delta': '26 days, 1:26:24', 'additions': 15, 'deletions': 8, 'state': 'closed'}, {'id': 628612877, 'number': 459, 'closed': datetime.datetime(2021, 5, 5, 17, 42, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 2, 13, 39, 31, tzinfo=datetime.timezone.utc), 'time_taken': 273775.0, 'time_delta': '3 days, 4:02:55', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 627033689, 'number': 458, 'closed': datetime.datetime(2021, 5, 5, 17, 54, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 30, 6, 20, 9, tzinfo=datetime.timezone.utc), 'time_taken': 473646.0, 'time_delta': '5 days, 11:34:06', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 617325423, 'number': 456, 'closed': datetime.datetime(2021, 4, 22, 14, 4, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 17, 15, 39, 51, tzinfo=datetime.timezone.utc), 'time_taken': 426259.0, 'time_delta': '4 days, 22:24:19', 'additions': 46, 'deletions': 99, 'state': 'closed'}, {'id': 614593703, 'number': 455, 'closed': datetime.datetime(2023, 12, 13, 12, 25, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 16, 16, 33, tzinfo=datetime.timezone.utc), 'time_taken': 84139723.0, 'time_delta': '973 days, 20:08:43', 'additions': 65, 'deletions': 6, 'state': 'closed'}, {'id': 607953532, 'number': 451, 'closed': datetime.datetime(2021, 4, 16, 22, 1, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 2, 10, 7, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1252425.0, 'time_delta': '14 days, 11:53:45', 'additions': 78, 'deletions': 12, 'state': 'closed'}, {'id': 596548562, 'number': 445, 'closed': datetime.datetime(2021, 3, 25, 12, 2, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 13, 5, 24, tzinfo=datetime.timezone.utc), 'time_taken': 514619.0, 'time_delta': '5 days, 22:56:59', 'additions': 75, 'deletions': 89, 'state': 'closed'}, {'id': 589282171, 'number': 443, 'closed': datetime.datetime(2024, 5, 19, 14, 19, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 10, 8, 45, 16, tzinfo=datetime.timezone.utc), 'time_taken': 100762433.0, 'time_delta': '1166 days, 5:33:53', 'additions': 76, 'deletions': 26, 'state': 'closed'}]"
89820037,IntervalContractors.jl,JuliaIntervals/IntervalContractors.jl,Julia,10,10,7,6,39,14,6,3,"[{'id': 949170821, 'number': 53, 'closed': datetime.datetime(2022, 5, 27, 10, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 27, 10, 33, 32, tzinfo=datetime.timezone.utc), 'time_taken': 568.0, 'time_delta': '0:09:28', 'additions': 1, 'deletions': 12, 'state': 'closed'}, {'id': 759797765, 'number': 51, 'closed': datetime.datetime(2021, 10, 17, 9, 18, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 17, 9, 8, 55, tzinfo=datetime.timezone.utc), 'time_taken': 579.0, 'time_delta': '0:09:39', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 721247611, 'number': 50, 'closed': datetime.datetime(2021, 8, 27, 11, 21, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 11, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 440.0, 'time_delta': '0:07:20', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 658330412, 'number': 49, 'closed': datetime.datetime(2022, 2, 4, 19, 49, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 13, 50, 49, tzinfo=datetime.timezone.utc), 'time_taken': 21535107.0, 'time_delta': '249 days, 5:58:27', 'additions': 4244, 'deletions': 266, 'state': 'closed'}, {'id': 624556004, 'number': 45, 'closed': datetime.datetime(2021, 4, 27, 19, 27, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 18, 30, 7, tzinfo=datetime.timezone.utc), 'time_taken': 3452.0, 'time_delta': '0:57:32', 'additions': 73, 'deletions': 85, 'state': 'closed'}]"
357620044,IntervalLinearAlgebra.jl,JuliaIntervals/IntervalLinearAlgebra.jl,Julia,8,35,7,8,121,10,2,1,"[{'id': 884112199, 'number': 126, 'closed': datetime.datetime(2022, 3, 22, 18, 6, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 20, 7, 4, 15, tzinfo=datetime.timezone.utc), 'time_taken': 212531.0, 'time_delta': '2 days, 11:02:11', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 875249592, 'number': 125, 'closed': datetime.datetime(2022, 3, 15, 15, 14, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 9, 12, 26, 12, tzinfo=datetime.timezone.utc), 'time_taken': 528497.0, 'time_delta': '6 days, 2:48:17', 'additions': 14, 'deletions': 11, 'state': 'closed'}, {'id': 857139216, 'number': 124, 'closed': datetime.datetime(2022, 2, 18, 18, 16, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 14, 35, 27, tzinfo=datetime.timezone.utc), 'time_taken': 13273.0, 'time_delta': '3:41:13', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 835354811, 'number': 123, 'closed': datetime.datetime(2022, 1, 30, 12, 51, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 12, 17, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2063.0, 'time_delta': '0:34:23', 'additions': 33, 'deletions': 26, 'state': 'closed'}, {'id': 835347873, 'number': 122, 'closed': datetime.datetime(2022, 1, 30, 12, 21, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 30, 12, 2, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1140.0, 'time_delta': '0:19:00', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 831826446, 'number': 121, 'closed': datetime.datetime(2022, 1, 25, 20, 27, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 25, 20, 9, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1068.0, 'time_delta': '0:17:48', 'additions': 16, 'deletions': 16, 'state': 'closed'}, {'id': 829758194, 'number': 118, 'closed': datetime.datetime(2022, 1, 24, 9, 8, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 23, 14, 16, 25, tzinfo=datetime.timezone.utc), 'time_taken': 67920.0, 'time_delta': '18:52:00', 'additions': 263, 'deletions': 36, 'state': 'closed'}, {'id': 829617939, 'number': 117, 'closed': datetime.datetime(2022, 1, 22, 22, 21, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 22, 7, 42, tzinfo=datetime.timezone.utc), 'time_taken': 856.0, 'time_delta': '0:14:16', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 814751187, 'number': 115, 'closed': datetime.datetime(2022, 1, 23, 10, 15, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 5, 14, 21, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1540417.0, 'time_delta': '17 days, 19:53:37', 'additions': 228, 'deletions': 99, 'state': 'closed'}, {'id': 813886679, 'number': 114, 'closed': datetime.datetime(2022, 1, 4, 14, 22, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 4, 14, 4, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1082.0, 'time_delta': '0:18:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 771575664, 'number': 113, 'closed': datetime.datetime(2022, 1, 5, 8, 49, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 15, 25, 25, tzinfo=datetime.timezone.utc), 'time_taken': 5505820.0, 'time_delta': '63 days, 17:23:40', 'additions': 159, 'deletions': 3, 'state': 'closed'}, {'id': 759833179, 'number': 110, 'closed': datetime.datetime(2021, 10, 17, 13, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 17, 13, 4, 37, tzinfo=datetime.timezone.utc), 'time_taken': 742.0, 'time_delta': '0:12:22', 'additions': 10, 'deletions': 8, 'state': 'closed'}, {'id': 754280580, 'number': 108, 'closed': datetime.datetime(2021, 10, 8, 20, 3, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 8, 19, 17, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2781.0, 'time_delta': '0:46:21', 'additions': 44, 'deletions': 2, 'state': 'closed'}, {'id': 750027538, 'number': 107, 'closed': datetime.datetime(2021, 10, 5, 16, 30, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 5, 16, 9, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1251.0, 'time_delta': '0:20:51', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 748327332, 'number': 104, 'closed': datetime.datetime(2021, 11, 3, 7, 42, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 3, 14, 1, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2655646.0, 'time_delta': '30 days, 17:40:46', 'additions': 283, 'deletions': 2, 'state': 'closed'}, {'id': 748276178, 'number': 103, 'closed': datetime.datetime(2021, 10, 5, 16, 30, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 3, 8, 53, 13, tzinfo=datetime.timezone.utc), 'time_taken': 200237.0, 'time_delta': '2 days, 7:37:17', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 747603315, 'number': 101, 'closed': datetime.datetime(2021, 10, 1, 13, 38, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 1, 13, 14, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1443.0, 'time_delta': '0:24:03', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 740327370, 'number': 97, 'closed': datetime.datetime(2021, 9, 22, 10, 42, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 10, 27, 15, tzinfo=datetime.timezone.utc), 'time_taken': 906.0, 'time_delta': '0:15:06', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 740282791, 'number': 95, 'closed': datetime.datetime(2021, 9, 22, 9, 43, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 9, 31, 41, tzinfo=datetime.timezone.utc), 'time_taken': 698.0, 'time_delta': '0:11:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 739318775, 'number': 94, 'closed': datetime.datetime(2021, 9, 22, 10, 0, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 21, 18, 1, 57, tzinfo=datetime.timezone.utc), 'time_taken': 57541.0, 'time_delta': '15:59:01', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 725465468, 'number': 91, 'closed': datetime.datetime(2021, 9, 2, 7, 11, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 2, 6, 45, 56, tzinfo=datetime.timezone.utc), 'time_taken': 1529.0, 'time_delta': '0:25:29', 'additions': 164, 'deletions': 21, 'state': 'closed'}, {'id': 724536480, 'number': 88, 'closed': datetime.datetime(2021, 9, 17, 5, 58, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 1, 14, 8, 23, tzinfo=datetime.timezone.utc), 'time_taken': 1353011.0, 'time_delta': '15 days, 15:50:11', 'additions': 231, 'deletions': 910, 'state': 'closed'}, {'id': 721514821, 'number': 84, 'closed': datetime.datetime(2021, 8, 27, 18, 59, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 18, 0, 44, tzinfo=datetime.timezone.utc), 'time_taken': 3554.0, 'time_delta': '0:59:14', 'additions': 6, 'deletions': 59, 'state': 'closed'}, {'id': 721107424, 'number': 83, 'closed': datetime.datetime(2021, 8, 27, 17, 51, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 7, 47, 9, tzinfo=datetime.timezone.utc), 'time_taken': 36256.0, 'time_delta': '10:04:16', 'additions': 64, 'deletions': 4, 'state': 'closed'}, {'id': 720761879, 'number': 82, 'closed': datetime.datetime(2021, 8, 27, 5, 54, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 18, 49, 59, tzinfo=datetime.timezone.utc), 'time_taken': 39891.0, 'time_delta': '11:04:51', 'additions': 290, 'deletions': 74, 'state': 'closed'}, {'id': 719464984, 'number': 81, 'closed': datetime.datetime(2021, 8, 27, 6, 21, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 10, 24, tzinfo=datetime.timezone.utc), 'time_taken': 158269.0, 'time_delta': '1 day, 19:57:49', 'additions': 669, 'deletions': 4, 'state': 'closed'}, {'id': 718547665, 'number': 80, 'closed': datetime.datetime(2021, 8, 24, 9, 3, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 8, 52, 57, tzinfo=datetime.timezone.utc), 'time_taken': 644.0, 'time_delta': '0:10:44', 'additions': 6, 'deletions': 39, 'state': 'closed'}, {'id': 717654727, 'number': 79, 'closed': datetime.datetime(2021, 8, 23, 12, 38, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 23, 9, 21, 3, tzinfo=datetime.timezone.utc), 'time_taken': 11846.0, 'time_delta': '3:17:26', 'additions': 44, 'deletions': 26, 'state': 'closed'}, {'id': 716738357, 'number': 77, 'closed': datetime.datetime(2021, 8, 27, 6, 32, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 13, 27, 34, tzinfo=datetime.timezone.utc), 'time_taken': 579884.0, 'time_delta': '6 days, 17:04:44', 'additions': 156, 'deletions': 3, 'state': 'closed'}, {'id': 715640956, 'number': 74, 'closed': datetime.datetime(2021, 8, 21, 6, 17, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 19, 6, 27, 49, tzinfo=datetime.timezone.utc), 'time_taken': 172181.0, 'time_delta': '1 day, 23:49:41', 'additions': 64, 'deletions': 0, 'state': 'closed'}, {'id': 714793177, 'number': 73, 'closed': datetime.datetime(2021, 8, 18, 7, 0, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 6, 45, 37, tzinfo=datetime.timezone.utc), 'time_taken': 865.0, 'time_delta': '0:14:25', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 714488373, 'number': 70, 'closed': datetime.datetime(2021, 8, 17, 20, 7, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 18, 52, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4452.0, 'time_delta': '1:14:12', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 714216796, 'number': 69, 'closed': datetime.datetime(2021, 8, 17, 18, 39, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 12, 48, 31, tzinfo=datetime.timezone.utc), 'time_taken': 21081.0, 'time_delta': '5:51:21', 'additions': 114, 'deletions': 1, 'state': 'closed'}, {'id': 714057292, 'number': 68, 'closed': datetime.datetime(2021, 8, 29, 16, 59, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 9, 9, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1064984.0, 'time_delta': '12 days, 7:49:44', 'additions': 257, 'deletions': 3, 'state': 'closed'}, {'id': 712975417, 'number': 65, 'closed': datetime.datetime(2021, 8, 16, 12, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 17, 42, 50, tzinfo=datetime.timezone.utc), 'time_taken': 68981.0, 'time_delta': '19:09:41', 'additions': 123, 'deletions': 1, 'state': 'closed'}, {'id': 712950794, 'number': 64, 'closed': datetime.datetime(2021, 8, 15, 15, 10, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 15, 1, 17, tzinfo=datetime.timezone.utc), 'time_taken': 539.0, 'time_delta': '0:08:59', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 712947658, 'number': 63, 'closed': datetime.datetime(2021, 8, 16, 11, 39, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 14, 40, 50, tzinfo=datetime.timezone.utc), 'time_taken': 75498.0, 'time_delta': '20:58:18', 'additions': 46, 'deletions': 0, 'state': 'closed'}, {'id': 712932259, 'number': 62, 'closed': datetime.datetime(2021, 8, 15, 14, 46, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 15, 13, 2, 20, tzinfo=datetime.timezone.utc), 'time_taken': 6251.0, 'time_delta': '1:44:11', 'additions': 612, 'deletions': 1, 'state': 'closed'}, {'id': 707525346, 'number': 59, 'closed': datetime.datetime(2021, 8, 10, 18, 23, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 17, 39, 54, tzinfo=datetime.timezone.utc), 'time_taken': 2628.0, 'time_delta': '0:43:48', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 707514636, 'number': 58, 'closed': datetime.datetime(2021, 8, 15, 9, 9, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 17, 27, 47, tzinfo=datetime.timezone.utc), 'time_taken': 402122.0, 'time_delta': '4 days, 15:42:02', 'additions': 334, 'deletions': 460, 'state': 'closed'}, {'id': 707120404, 'number': 57, 'closed': datetime.datetime(2021, 8, 10, 20, 44, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 8, 1, 58, tzinfo=datetime.timezone.utc), 'time_taken': 45727.0, 'time_delta': '12:42:07', 'additions': 182, 'deletions': 183, 'state': 'closed'}, {'id': 699532652, 'number': 55, 'closed': datetime.datetime(2021, 8, 5, 4, 43, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 13, 26, 5, tzinfo=datetime.timezone.utc), 'time_taken': 573444.0, 'time_delta': '6 days, 15:17:24', 'additions': 1, 'deletions': 9, 'state': 'closed'}, {'id': 695114957, 'number': 52, 'closed': datetime.datetime(2021, 8, 10, 7, 42, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 12, 10, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1625550.0, 'time_delta': '18 days, 19:32:30', 'additions': 243, 'deletions': 1, 'state': 'closed'}, {'id': 692626233, 'number': 51, 'closed': datetime.datetime(2021, 8, 5, 6, 15, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 19, 13, 50, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1441469.0, 'time_delta': '16 days, 16:24:29', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 687293980, 'number': 50, 'closed': datetime.datetime(2021, 7, 11, 11, 4, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 11, 8, 9, 13, tzinfo=datetime.timezone.utc), 'time_taken': 10543.0, 'time_delta': '2:55:43', 'additions': 148, 'deletions': 71, 'state': 'closed'}, {'id': 687241355, 'number': 49, 'closed': datetime.datetime(2021, 7, 11, 6, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 21, 40, 54, tzinfo=datetime.timezone.utc), 'time_taken': 32526.0, 'time_delta': '9:02:06', 'additions': 138, 'deletions': 11, 'state': 'closed'}, {'id': 687217556, 'number': 48, 'closed': datetime.datetime(2021, 7, 10, 20, 17, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 17, 58, 27, tzinfo=datetime.timezone.utc), 'time_taken': 8354.0, 'time_delta': '2:19:14', 'additions': 370, 'deletions': 93, 'state': 'closed'}, {'id': 683155222, 'number': 44, 'closed': datetime.datetime(2021, 7, 14, 16, 10, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 11, 6, 1, tzinfo=datetime.timezone.utc), 'time_taken': 882254.0, 'time_delta': '10 days, 5:04:14', 'additions': 82, 'deletions': 7, 'state': 'closed'}, {'id': 682655694, 'number': 43, 'closed': datetime.datetime(2021, 7, 10, 19, 14, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 14, 4, 30, tzinfo=datetime.timezone.utc), 'time_taken': 709825.0, 'time_delta': '8 days, 5:10:25', 'additions': 236, 'deletions': 50, 'state': 'closed'}, {'id': 682494185, 'number': 42, 'closed': datetime.datetime(2021, 7, 3, 7, 59, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 9, 53, 52, tzinfo=datetime.timezone.utc), 'time_taken': 79563.0, 'time_delta': '22:06:03', 'additions': 80, 'deletions': 30, 'state': 'closed'}, {'id': 682131494, 'number': 41, 'closed': datetime.datetime(2021, 7, 7, 11, 26, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 20, 2, 57, tzinfo=datetime.timezone.utc), 'time_taken': 487438.0, 'time_delta': '5 days, 15:23:58', 'additions': 703, 'deletions': 17, 'state': 'closed'}, {'id': 681781069, 'number': 40, 'closed': datetime.datetime(2021, 7, 1, 19, 26, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 11, 47, 53, tzinfo=datetime.timezone.utc), 'time_taken': 27499.0, 'time_delta': '7:38:19', 'additions': 167, 'deletions': 16, 'state': 'closed'}, {'id': 680639820, 'number': 35, 'closed': datetime.datetime(2021, 6, 30, 8, 30, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 8, 20, 18, tzinfo=datetime.timezone.utc), 'time_taken': 601.0, 'time_delta': '0:10:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 678938682, 'number': 31, 'closed': datetime.datetime(2021, 6, 30, 8, 7, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 10, 59, 9, tzinfo=datetime.timezone.utc), 'time_taken': 162527.0, 'time_delta': '1 day, 21:08:47', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 678903033, 'number': 29, 'closed': datetime.datetime(2021, 6, 30, 10, 28, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 10, 8, 16, tzinfo=datetime.timezone.utc), 'time_taken': 174016.0, 'time_delta': '2 days, 0:20:16', 'additions': 78, 'deletions': 13, 'state': 'closed'}, {'id': 678572439, 'number': 28, 'closed': datetime.datetime(2021, 7, 1, 7, 40, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 19, 59, 47, tzinfo=datetime.timezone.utc), 'time_taken': 301258.0, 'time_delta': '3 days, 11:40:58', 'additions': 127, 'deletions': 11, 'state': 'closed'}, {'id': 678494506, 'number': 27, 'closed': datetime.datetime(2021, 6, 29, 15, 8, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 10, 48, 54, tzinfo=datetime.timezone.utc), 'time_taken': 188352.0, 'time_delta': '2 days, 4:19:12', 'additions': 191, 'deletions': 2, 'state': 'closed'}, {'id': 677474421, 'number': 26, 'closed': datetime.datetime(2021, 6, 26, 18, 56, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 22, 25, 19, tzinfo=datetime.timezone.utc), 'time_taken': 160273.0, 'time_delta': '1 day, 20:31:13', 'additions': 89, 'deletions': 24, 'state': 'closed'}, {'id': 677452618, 'number': 25, 'closed': datetime.datetime(2021, 7, 19, 7, 19, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 24, 21, 38, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2108417.0, 'time_delta': '24 days, 9:40:17', 'additions': 143, 'deletions': 1, 'state': 'closed'}, {'id': 674582787, 'number': 20, 'closed': datetime.datetime(2021, 6, 27, 18, 34, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 14, 3, 21, tzinfo=datetime.timezone.utc), 'time_taken': 534644.0, 'time_delta': '6 days, 4:30:44', 'additions': 116, 'deletions': 1, 'state': 'closed'}, {'id': 673476459, 'number': 14, 'closed': datetime.datetime(2021, 6, 23, 5, 40, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 13, 30, 2, tzinfo=datetime.timezone.utc), 'time_taken': 403833.0, 'time_delta': '4 days, 16:10:33', 'additions': 118, 'deletions': 51, 'state': 'closed'}, {'id': 673279755, 'number': 13, 'closed': datetime.datetime(2021, 6, 24, 13, 54, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 8, 36, 1, tzinfo=datetime.timezone.utc), 'time_taken': 537533.0, 'time_delta': '6 days, 5:18:53', 'additions': 99, 'deletions': 4, 'state': 'closed'}]"
