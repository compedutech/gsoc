pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
389516779,Dockerfile,Add Dockerfile to setup the development environment in a docker.,True,75,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/75,https://github.com/OWASP/Python-Honeypot/pull/75,closed,476,262,15,78,18,21,3,1,"[{'name': 'GSOC'}, {'name': 'priority'}, {'name': 'ready for review'}]",2020-03-16 22:04:21+00:00,2020-08-07 23:00:01+00:00,12444940.0,"144 days, 0:55:40","[{'comment_id': 398044256, 'comment_body': 'apt-get -y upgrade and apt-get -y dist-upgrade', 'comment_created': datetime.datetime(2020, 3, 25, 17, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398044764, 'comment_body': 'this command is failing in dockerfile.\r\nmaybe we have to run via CMD as shown here https://stackoverflow.com/questions/46245844/pass-arguments-to-python-argparse-within-docker-container', 'comment_created': datetime.datetime(2020, 3, 25, 17, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398045191, 'comment_body': ""for me it's showing cannot connect to mongodb. \r\nhave you already tested the image on your local machine? "", 'comment_created': datetime.datetime(2020, 3, 25, 17, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 399229187, 'comment_body': 'I am also getting the same error. Trying to solve it.', 'comment_created': datetime.datetime(2020, 3, 27, 12, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 404909278, 'comment_body': '`apt-get update && upgrade` should be in 1 RUN in docker, for caching purposes. otherwise the update may have no effect.', 'comment_created': datetime.datetime(2020, 4, 7, 15, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 404909533, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2020, 4, 7, 15, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 404910047, 'comment_body': ""Why isn't this in the previous one?"", 'comment_created': datetime.datetime(2020, 4, 7, 15, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 404910127, 'comment_body': ""Why!? This doesn't seem necessary."", 'comment_created': datetime.datetime(2020, 4, 7, 15, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 405345403, 'comment_body': ""Okay. I'll make the change."", 'comment_created': datetime.datetime(2020, 4, 8, 8, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 407069530, 'comment_body': ""we can also install via ubuntu repository ,don't need to compile this."", 'comment_created': datetime.datetime(2020, 4, 11, 14, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435571770, 'comment_body': 'add - DOCKER_API_VERSION=1.39 to solve the API error.', 'comment_created': datetime.datetime(2020, 6, 4, 21, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 441742398, 'comment_body': 'where did we use this?', 'comment_created': datetime.datetime(2020, 6, 17, 18, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 441742961, 'comment_body': 'good to have an env to clearout we are using docker, but maybe something more clear `ENV=docker` or `DOCKER_ENV=true`', 'comment_created': datetime.datetime(2020, 6, 17, 18, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 441743300, 'comment_body': 'also we need to make sure such env var will not be use in images that user can read them, like weak ssh password', 'comment_created': datetime.datetime(2020, 6, 17, 18, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 441791922, 'comment_body': 'It sets the Flask environment as development so we don\'t this warning -\r\n""WARNING: This is a development server. Do not use it in a production deployment.""\r\n', 'comment_created': datetime.datetime(2020, 6, 17, 19, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 441792533, 'comment_body': ""Good point! I'll look into it."", 'comment_created': datetime.datetime(2020, 6, 17, 19, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 443156744, 'comment_body': 'I checked and this env variable is not getting passed on to the docker images of the modules. I have updated the environment variable.', 'comment_created': datetime.datetime(2020, 6, 20, 20, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 458976017, 'comment_body': '@ChakshuGupta as an example, you need to add it to docker options.\r\n\r\nhttps://github.com/zdresearch/OWASP-Honeypot/blob/master/modules/ssh/strong_password/__init__.py#L50-L63\r\ncurrent code:\r\n```\r\ndef module_configuration():\r\n    """"""\r\n    module configuration\r\n    Returns:\r\n        JSON/Dict module configuration\r\n    """"""\r\n    return {\r\n        ""username"": ""root"",\r\n        ""password"": generate_token(16),\r\n        ""extra_docker_options"":\r\n        [""--volume {0}/tmp:/root/logs/"".format(os.getcwd())],\r\n        ""module_processor"": ModuleProcessor()\r\n    }\r\n```\r\npossible fix suggestion:\r\n```python\r\ndef module_configuration():\r\n    """"""\r\n    module configuration\r\n    Returns:\r\n        JSON/Dict module configuration\r\n    """"""\r\n    return {\r\n        ""username"": ""root"",\r\n        ""password"": generate_token(16),\r\n        ""extra_docker_options"":\r\n        [""--volume {0}/tmp:/root/logs/"".format(os.getcwd()), ""-e DOCKER_ENV"" if whatever else """"],\r\n        ""module_processor"": ModuleProcessor()\r\n    }\r\n```\r\n\r\nis that what you meant/needed?', 'comment_created': datetime.datetime(2020, 7, 22, 17, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 465939710, 'comment_body': 'why not copying the files from current directory? ', 'comment_created': datetime.datetime(2020, 8, 5, 19, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 465945581, 'comment_body': 'if we save the data on a volume, we can just start mongodb with `docker-compose up`, no need to do it without mongodb.', 'comment_created': datetime.datetime(2020, 8, 5, 19, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 465948715, 'comment_body': 'mongodb is starting with `docker-compose up`.\r\n\r\nI thought we might need an option to start the API with mongodb running on the host instead. That is why docker-compose-host.yml is there.', 'comment_created': datetime.datetime(2020, 8, 5, 19, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': '3fc9872d4259a88f9b02f87606a114e93659b400', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3479a835d47ecc13e7fbc3fd6688efa8b3b38278', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f5c684e98a73d022993bfef282323290bbb5136', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e17100511f8e5ce885324aad72d0964fab6e6fe', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c41494564825d7dcf5cc67913d781b9336213be', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd3518f01e56c26f3162ab1fcbaa82e6395ceb3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac72c762440b12e9af8cc1997bc089ff65e27218', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd21432527b5f7b0b91446e623c5b8c900ee87957', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaa830e0b042faabe24e2fb7ca41c0acfd4d5b0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd01ea367b8df79f2fbd933a04cb3d41def1246d2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1049af1ea732272e241945cdc1a5b4fa4073ab26', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2acec0c762384e34e34cc588e26defad0e1c1a29', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7620331d22d4927d4d89d95a60feeb4968af19a4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '119e2b00db3bc286147eb5263707e02f7b61286a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00e34eafc3cc35413d525c613abd02cd171eac0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04807589c5dca0df976fc23159e9dfdc0044e8d6', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3014c7392fef7fd5619912149635e178206d862', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e84728c42923a456d690faa5b425ada92e6193f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0300f0f8b74aed226e85256f184bd92ac6139221', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f3b66d7d1c7842bed076a2facaa4fe3c04cec5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51accd687a5ef57bdfe861d9acd630cc726ea54c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e6657bd0f777f99f276ed59696cdf2f35c4bb2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895f619b661c2c4912fd6ac184775a0f756d5dd8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b65f514e72f0138a821c165f7584308af251b93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '624d61bb6df8c8ff9ee9ccadcf5789366bbfb5de', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c17bab4fa714f7c3e0abce4bafbf01c12a170f4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b00a6c83abf8a055ce98cf5fa39f73c29c7463', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e1a91033625bbcd08e79dfde1c231f34ac4a176', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1be5d8b0787f9131bae680e0fa14138b1438e3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5adc14fa5fe5f27b0fc57f33f6e05305c9bd13af', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb317d52ec2405633319d0cf20fd511756b930b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '38d1d2bd199f82d474cd4e7cb1e3936b43796349', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275b9107444419c309d4f3acdc6b54fceb52fbf7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2117f583cc998e797e4a45b2445189d3c6c741', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3defe03c85a06ca56d5cf23947c51e8d57753bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '499ed56f3e39f148d2c3d88dde367d5494e9ccc3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9b76c1705305811aba8d494c4734991da4b2b952', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '919ec6806744af6feb82de90d274a5d2bdc9eeb0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91843790d8f2105a9f3f3c00d0adbc7cb35cbf30', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d3bd89a6855031ed67e177c7a8e569cf13747f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38b894e9b7c60a033e1ede427b46ecb7ff0f36c4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '456e1d807c396ac14da284817f4c98947466daef', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '644471dac5cd25849f6f35e42dd9b22737411842', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd56582b801e13938e0e2a364d111adc290af11', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f24e08506abee11b6f4acba8d6db6c429196bcb9', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6651f66c1bd1c5080d93bde17d63585ce98340', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ecd1dadf53817e486704941d92ff23a9a28a66', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd1437252e2aabc61f03ee7a1f6f0e44799d4a2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bac67684d2dd359f795db261241a7da07b56dc0e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6810a0f44edf20fb1bef766d767a9c8f22eda606', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cade1289cfd7481ff99297094e968a79137ad2f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd7acf8edc69ba6181e8b64cb14575fbfed7a5b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a0f1e59730eba63acbe1ac08761a901a596225', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dafca5d876c43aafc20a02366ffc10ddf671c93', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c85469b1dd8057a2ef3a76c4e2c29f22d454b45a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8add3e084eecfc12f52d8f8969637e3e04726653', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b649c433e4050222e4f6a8ad75bc3ff6cc4cf102', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '644d6ad8a0daedfc6ffff5672686459a51962075', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7a7d432596595f523a7f87ff4d6f0ac54fa5b681', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dd0f2e3010b4d5fb4b2f5a2fe1e53420e31ab7a', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42b1fceb6b6a1e9903833e73fcb074ab9038b10b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8c5a94485788edea0890c4460125c669eb9a624b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '90f04b530967df602590ffea92f7e731b1b406ce', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '49b6f3f351d331d9e7daa3165fa2b8ae6a163cf8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7982a59d5a5236c8f29ed8f3eef9adb3095beedc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc146638eaebcc65bf27852a948d660fcf0ee0de', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1d85fddf6cbc186f7e45be1091da2cfea50e21', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '93bae90c29b8bf8ecd1b82e2e4c0fd91e07a13b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aab67019fe9b01fb0c15ac242b87bd463a5f872f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d147a98f8e3fb587a2b5557ce205118e28b3fb7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd08c7dcc57d600d203f13243ba22dd3113073c0f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f911701a863c6b5c86638bc1e5c20bbd19b371d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3daec12c6c87fb0583ab610bc624bbb0427f5519', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5602e98a9aea1f70b60d287d96865429b2927d1a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00e26d68fa668c751239d3049a8891bb5c2c0a51', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '33dfac9775b03e91d597956d5c02b1c7102a927a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '172f504d84f70dd397c85a2120407886cefa117e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4adb776feefe9b76989d5e6c5c4a138474654dbb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
419195055,Upstream/refactor core,"what : 
1. Refactor code from files in core folder
2. Removed dead code from some files in core folder
3. Restructured the code from some files in core folder",True,85,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/85,https://github.com/OWASP/Python-Honeypot/pull/85,closed,226,189,7,13,3,29,1,1,[{'name': 'GSOC'}],2020-05-17 23:57:12+00:00,2020-07-20 13:00:25+00:00,5490193.0,"63 days, 13:03:13","[{'comment_id': 432931544, 'comment_body': 'Function names like this are not self-explanatory. Just ""finish"" doesn\'t tell us what the function is finishing. It could be ""reset_cmd_color"" or something like that, which would give more context about the function.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432931724, 'comment_body': 'SImilarly for function ""color()""', 'comment_created': datetime.datetime(2020, 5, 31, 10, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932031, 'comment_body': 'Explain what is this ""-1"" in a comment or variable name.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932097, 'comment_body': 'Put the path in a separate variable.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932141, 'comment_body': 'same with the file name.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932586, 'comment_body': 'Import statements should be on the top.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932641, 'comment_body': 'I am getting a pylint import error here as well. ""Unable to import \'core.log\'""', 'comment_created': datetime.datetime(2020, 5, 31, 10, 33, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932814, 'comment_body': 'This function is not very clear to me. From the name or from the explaination. Maybe add more comments?', 'comment_created': datetime.datetime(2020, 5, 31, 10, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932858, 'comment_body': 'Same thing here.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 36, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432933272, 'comment_body': "" I am getting a pylint(anomalous-backslash-in-string) warning here.\r\nAnomalous backslash in string: '\\ '. String constant might be missing an r prefix."", 'comment_created': datetime.datetime(2020, 5, 31, 10, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432933463, 'comment_body': 'Maybe rename this to ""verbose"" instead of ""output"". Its purpose would become self-explanatory that way.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432933790, 'comment_body': ""Store this in a variable and then use. It's a little hard to read right now."", 'comment_created': datetime.datetime(2020, 5, 31, 10, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432934845, 'comment_body': 'What is the maximum line length you are following? PEP8 suggests max 79 characters. Most of lines in this file are crossing that by a long margin.\r\nhttps://www.python.org/dev/peps/pep-0008/#maximum-line-length', 'comment_created': datetime.datetime(2020, 5, 31, 10, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432935316, 'comment_body': 'Move \'network_configuration()[""ignore_real_machine_ip_address""]\' and \'network_configuration()[""ignore_virtual_machine_ip_addresses""]\' to separate flags before using here. It will make it more readable.', 'comment_created': datetime.datetime(2020, 5, 31, 11, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432935640, 'comment_body': 'I see you removed the brackets around ( netaddr.valid_ipv4(ip_dest) or  netaddr.valid_ipv6(ip_dest) ) . Would the behaviour remain the same since this entire statement is supposed to be one condition?', 'comment_created': datetime.datetime(2020, 5, 31, 11, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434901023, 'comment_body': ""@ChakshuGupta : it's a bug and not a refactor error. i will create a new ticket"", 'comment_created': datetime.datetime(2020, 6, 3, 22, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434901317, 'comment_body': ""@ChakshuGupta : what did you use here to check just this file? maybe it's just a new python 3.8 feature or something "", 'comment_created': datetime.datetime(2020, 6, 3, 22, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434904857, 'comment_body': 'I am trying to follow 80 characters but in some cases readability is getting compromised if I refactor them', 'comment_created': datetime.datetime(2020, 6, 3, 23, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434907708, 'comment_body': 'my bad! Thanks for pointing that out', 'comment_created': datetime.datetime(2020, 6, 3, 23, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434908259, 'comment_body': ""good point! but it's currently not being used anywhere ! maybe we'll remove this one"", 'comment_created': datetime.datetime(2020, 6, 3, 23, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435125105, 'comment_body': 'Great!', 'comment_created': datetime.datetime(2020, 6, 4, 9, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435424777, 'comment_body': 'It shows up in my IDE. I use VS code and I have enabled pylint on it.', 'comment_created': datetime.datetime(2020, 6, 4, 17, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 438026202, 'comment_body': ""Since the returned value of config.api_configuration() doesn't change, I feel that we can reduce the number of function calls to this function by storing the result in a variable and using that instead."", 'comment_created': datetime.datetime(2020, 6, 10, 10, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 438035720, 'comment_body': 'Same thing with user_configuration() and docker_configuration().', 'comment_created': datetime.datetime(2020, 6, 10, 10, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 438036284, 'comment_body': 'Also for network_configuration().', 'comment_created': datetime.datetime(2020, 6, 10, 10, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 457336460, 'comment_body': 'did it exceed the max length?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457336765, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457336993, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457337440, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}]","[{'commit_sha': 'e8b82a68ad9b5500d8beeb0f1c588e4108116196', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50e16e3e4ba27c47d8581c28ddf8d6840d230633', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e79093cf99ab9440dcb9ee77de237512cc021240', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '203b04ffb6447c91ded5b1e43314eee009389714', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7555b5bf4d9835ad95eeb67cb250b0fc5ec2818e', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3503127ed4986f6e21ac6c4bdcb8707bd6654cf', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a0bdecbb6e0d45ec818c44b10e001f0ee0ed19', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46cc56be79b9cd7e188dfcdf869e5bc126562ce9', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8829c3a6b55a07c0fc85ef72c8bcd93f4f676caa', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '560293d7fa3240b8005e9b68b3a6425249b48d87', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8375bd5b2e7cc58f9f701c4a921a51f26c7dcd', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d8f6cddcf79e8d9df0b2350ec80beead223533c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a4dc71929a9085a5b317da7d01370a4709d57e72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Dhiren Serai,16983076,dhirensr@gmail.com,User,,76,,21,17
393562245,basic webui for log search,"Hey @Ali-Razmjoo. I have tried to implement the search UI. Please review the code and suggest additional changes to enhance this feature.
Issue : #67 ",False,76,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/76,https://github.com/OWASP/Python-Honeypot/pull/76,closed,193,0,3,1,8,4,0,0,[],2020-03-25 12:35:03+00:00,2020-07-03 10:59:33+00:00,8634270.0,"99 days, 22:24:30","[{'comment_id': 398051551, 'comment_body': 'indentation problem \r\nplease not more than 80 chars in a line', 'comment_created': datetime.datetime(2020, 3, 25, 17, 48, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398052137, 'comment_body': 'bracket missing problem.\r\nplease test the code first and then send the PR.', 'comment_created': datetime.datetime(2020, 3, 25, 17, 49, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398052463, 'comment_body': 'indentation problem\r\n', 'comment_created': datetime.datetime(2020, 3, 25, 17, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398160550, 'comment_body': 'It must have been done unintentionally in the second commit( for removing whites paces) that I later squashed to maintain the branch. Point noted and will be taken care.', 'comment_created': datetime.datetime(2020, 3, 25, 20, 50, 47, tzinfo=datetime.timezone.utc), 'commenter': 'amanjiofficial', 'type': 'User'}]","[{'commit_sha': '16b9b728e65c3c52bfb1d67245a4905a063a7c2e', 'committer_username': 'amanjiofficial', 'committer_name': 'Aman Ahuja', 'committer_email': 'amanjiofficial@gmail.com', 'commit_date': datetime.datetime(2017, 10, 16, 12, 13, 16, tzinfo=datetime.timezone.utc)}]",Aman Ahuja,32839959,amanjiofficial@gmail.com,User,,42,,14,28
426228059,"Code refactor api, database and modules","Refactored the code using the suggestions in https://github.com/zedr/clean-code-python and PEP8 standards.

1. Fixed the code line lengths according to PEP8 standard
2. Renamed some functions to give a better understanding of what they do.
3. Added classes to store all event type database data.
4. Made docstring comment style uniform.
5. Cleaned the code to make it more readable.
6. Moved modules directory outside the lib directory.
7. Removed usage of ""global"" keywords.

Environment Used-
Python 3.8
Ubuntu 20.04

Issue #69 ",True,89,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/89,https://github.com/OWASP/Python-Honeypot/pull/89,closed,689,458,62,29,0,22,1,0,[{'name': 'GSOC'}],2020-06-01 21:37:58+00:00,2020-07-20 13:08:39+00:00,4203041.0,"48 days, 15:30:41","[{'comment_id': 433833301, 'comment_body': ""it's a valid thing but the readability is compromised here"", 'comment_created': datetime.datetime(2020, 6, 2, 12, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433833569, 'comment_body': 'same here! code readability compromised ! we could create a new variable save country from ip and then use that in JSON for better readability', 'comment_created': datetime.datetime(2020, 6, 2, 12, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433834485, 'comment_body': 'here also readability issue! not able to understand why real_machine_identifier_name is hanging on the next line', 'comment_created': datetime.datetime(2020, 6, 2, 12, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433892347, 'comment_body': '@dhirensr I think you are looking at an older commit.', 'comment_created': datetime.datetime(2020, 6, 2, 13, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434510318, 'comment_body': 'older commit', 'comment_created': datetime.datetime(2020, 6, 3, 11, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434510390, 'comment_body': 'older commit', 'comment_created': datetime.datetime(2020, 6, 3, 11, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434921454, 'comment_body': ""readability is less than previous one although it doesn't satisfy the line chars"", 'comment_created': datetime.datetime(2020, 6, 4, 0, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434922038, 'comment_body': 'maybe put the module_directory to a separate variable', 'comment_created': datetime.datetime(2020, 6, 4, 0, 7, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434922205, 'comment_body': 'i think bulk_events tells you more than push_queues', 'comment_created': datetime.datetime(2020, 6, 4, 0, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435122346, 'comment_body': ""I couldn't understand what bulk_events meant until I read the entire code."", 'comment_created': datetime.datetime(2020, 6, 4, 9, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435156543, 'comment_body': ""okay then let's leave it! maybe @Ali-Razmjoo would have some suggestions later."", 'comment_created': datetime.datetime(2020, 6, 4, 10, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435189325, 'comment_body': 'I tried to fix this issue. Take a look and let me know if it improves the readability.', 'comment_created': datetime.datetime(2020, 6, 4, 11, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435247214, 'comment_body': 'Pushed an update for this.', 'comment_created': datetime.datetime(2020, 6, 4, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435258643, 'comment_body': 'I renamed. See if that helps.', 'comment_created': datetime.datetime(2020, 6, 4, 13, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 439771443, 'comment_body': ""TypeDict is only available for the latest version and I had python3.8 and it was working fine.\r\n\r\nbut now I ran from different environment \r\nOS : Ubuntu\r\nPython 3.6 \r\nand TypeDict is not included.\r\n@ChakshuGupta : I suppose we don't want to just support python3.8 and support other version which are greater than 3.5 so we have to find a different solution."", 'comment_created': datetime.datetime(2020, 6, 13, 21, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 442565374, 'comment_body': 'not supported for python3.5 and python3.6 ! started since python3.7 onwards(https://docs.python.org/3.7/library/dataclasses.html)\r\n\r\n@ChakshuGupta : sorry for late reply. is there any other change which can be done which could support python3.5 and higher versions too?\r\nif not \r\n@Ali-Razmjoo : do you think we should only support this project python3.7 onwards to support this feature?', 'comment_created': datetime.datetime(2020, 6, 19, 0, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 442786238, 'comment_body': ""I found a solution. I'll push that in a bit!"", 'comment_created': datetime.datetime(2020, 6, 19, 11, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 457330187, 'comment_body': 'is it not cleaner to import one per line?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457331226, 'comment_body': 'i think best to view a json is \r\n```json\r\n{\r\n   ""name"": ""value""\r\n}\r\n```\r\n\r\nis there any reason you changed it? did it exceed the max length? ', 'comment_created': datetime.datetime(2020, 7, 20, 12, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457332029, 'comment_body': 'import one per line?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457333177, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457334721, 'comment_body': 'Yes. I was exceeding the maximum length.', 'comment_created': datetime.datetime(2020, 7, 20, 12, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': 'a8082b7721377a91d4aa5c09e36fa27137c1a6fe', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c204ba174ca7a22230d2ca7d4016095de7a77eb6', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628b0f2004092a6a3fae426646d7719dc3be46bc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8351252a98f771cbac3cde038a1216861d56af7d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b9863e80097b36e8a4e59f79000dee408821132', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5576f64b43af3d9e64816277e0f988e7cad3b238', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385d97bb9b5bdd8c580e6c379ef401d77d8f1e03', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c75681906baa8d8a88819f37c77472035e8e82e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74660a3a4a3376f5725fbb03d5ceacbf8f4608f8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1e1744ea643e99a8e7343a2701af7ac184d6c20', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06997acd044e4ed850856d80d8c5461afbc0e428', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37cf179a3a1730754b0d4f4ba69f23336a7c0b8a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e444292d08181de2fb90550e7b0e38ea2634cc50', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5873402f3eb2a3b89939833a9850745b0d23287c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84388e6680aa807d41a6ecb4acf3be42db4065b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f74e900446ea6ec821472c81a252ce4245b27704', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd87427dbee2898e3fc62c40fa05ff1b21e3bf2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ecf2108d43a41ef5ea852c68a71e05e618ad43c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19389d132209d04428e4094f9bac5e1af626e29c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef618f99fea2913a79080cc3eb5b14a8b5180a3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c36ce6752b9470defbd5c0f37ba52ecae308f8a5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368ea1ee349093a2a88fab6edb428b6bf3f690d3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af413b899fe746db38aa48fd066ea9ce54a93e31', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef61062c98427813965c25a194205657f71331e7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2dd720103617e2f3e4ba29cfb034ef6483bdab3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45017d6ae5ea5c379954360cc87c9637da811236', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '526d6ef98ad93b7329b65ea3278ba70a587369b8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef2df9c9907d86860228bd729537c8eefa2a1ba7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7243a3a133d65e304ab5d676143b5e94f801f9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
302493388,added file watcher script for weak ftp/ssh strategy and changed dockerfile,weak ftp/ssh strategy ,True,48,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/48,https://github.com/OWASP/Python-Honeypot/pull/48,closed,210,15,7,32,14,13,3,1,"[{'name': 'GSOC'}, {'name': 'priority'}, {'name': 'ready for review'}]",2019-07-30 13:13:25+00:00,2020-08-07 22:07:15+00:00,32345630.0,"374 days, 8:53:50","[{'comment_id': 403475704, 'comment_body': ""Bug found here, I've added a todo if someone can work on this?"", 'comment_created': datetime.datetime(2020, 4, 4, 14, 22, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 403481170, 'comment_body': '@Ali-Razmjoo : Working on it ', 'comment_created': datetime.datetime(2020, 4, 4, 15, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433797654, 'comment_body': 'There are 2 functions here with exactly the same name and same function. Is this a merge error?', 'comment_created': datetime.datetime(2020, 6, 2, 11, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 433800694, 'comment_body': 'Why is this in caps? All caps is the standard notation for Constant values. These are not constant values if are they are being set later.\r\n', 'comment_created': datetime.datetime(2020, 6, 2, 11, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434199507, 'comment_body': 'class names should be CapWords convention.\r\nhttps://www.python.org/dev/peps/pep-0008/#class-names', 'comment_created': datetime.datetime(2020, 6, 2, 22, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434199621, 'comment_body': 'Same with this class name', 'comment_created': datetime.datetime(2020, 6, 2, 22, 1, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434209749, 'comment_body': 'I noticed that these class variables in the ModuleProcessor class are being repeated, and they are there in the FileMonitor class well. There is an extra copy operation for all of them too, copying them from one to the other- l**og_filename, log_filename_dump,  DIRECTORY_TO_WATCH, EXCLUDES, module_name**. And then out of these, **log_filename, EXCLUDES** and **module_name** are further repeated in the ContainerFilesHandler and are copied once again when ""_run_"" function is called.\r\n\r\nAny particular reason you have not created the object of the classes directly as a class variable? \r\n\r\nAccording to me, it might be more efficient to do it that way, instead of repeating and copying variable data.\r\nAn example would be-\r\n\r\n```\r\nclass FileMonitor:\r\n    def __init__(self):\r\n        self.observer = Observer()\r\n        self.log_filename_dump = None\r\n        self.stop_execution = False\r\n        self.DIRECTORY_TO_WATCH = None\r\n        self.event_handler = containerFilesHandler()\r\n```\r\n\r\n```\r\nclass ModuleProcessor:\r\n    def __init__(self):\r\n        self.kill_flag = False\r\n        self.stop_execution = False\r\n        self.file_handler = FileMonitor()\r\n        # And then set the values for the members.\r\n        if not os.path.exists(self.file_handler.DIRECTORY_TO_WATCH):\r\n            os.makedirs(self.file_handler.DIRECTORY_TO_WATCH)\r\n```\r\n\r\nAnd then directly set the values for - _self.event_handler.log_filename_ and other variables. ', 'comment_created': datetime.datetime(2020, 6, 2, 22, 28, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434213350, 'comment_body': 'Also, the naming convention for the variables should be kept consistent. ""newFileHandler"" should be ""new_file_handler"".', 'comment_created': datetime.datetime(2020, 6, 2, 22, 38, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434215550, 'comment_body': 'Maybe follow the same method to write the constant variables in other files/classes as you did here?', 'comment_created': datetime.datetime(2020, 6, 2, 22, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434216343, 'comment_body': 'Same things here.', 'comment_created': datetime.datetime(2020, 6, 2, 22, 47, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434422347, 'comment_body': 'Why are we watching ""tmp"" directory here?', 'comment_created': datetime.datetime(2020, 6, 3, 9, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 439145011, 'comment_body': ""@ChakshuGupta : i understand the repitition of the variables but it's kept purposely so that each class could be reused and if we pass variables from filemonitor to ContainerFilesHandler then it would be kind of lock-in.\r\nalso it cannot be created in init because event_handler should be defined in run I think because all watchdog examples show it this way and also it doesn't works fine when I tried to follow your initialization."", 'comment_created': datetime.datetime(2020, 6, 12, 0, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 439275820, 'comment_body': 'Okay. As long as there is a reason behind it!', 'comment_created': datetime.datetime(2020, 6, 12, 8, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': '1ac84fd2f0afea83096d36841412c04d2bfa657f', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6249d3dbc3443d659df2e924caae0c04457fb7bf', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7fecf43a632c5290ec24455abff8e0b7e0606ba', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '38e1ab2320e8df47d52854d6869247aead16b765', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6e2fee222ce96b2b14c1f62707929ca486a732', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97997aad8b4d6d090e7e888f28eb76d3b5b16823', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5be48b58a04fc4ea79abcc61336dc4ecf9697cf2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '21ff08bf1b06ecc2ff3a5daf5e66f64a3ceee710', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd82cf40b8f26753c872c1250f26c77770f22c8ac', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4900c24e186b9364fae1d60264fd100834561d16', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e7b2046c740081a8dac5a16a34b96f1044b768b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8af8b467f569eaf5826b2aa54824e1df4becab65', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a2c29f342b6b437657951f10738cfaaeb93cbc6e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5fc18fae8d1d623f5a8737efb1233188daaa2a33', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4be4238160a2c73e0888c552750423ad6f7cbedd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '008430c5f91ee0c34b2f1d13d882213b0924f8e1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c6d8619c3abc7eb6e7fde50b886b738e6da43db8', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a123be63a71f459598e46ede698cbbb646284a9a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7b38a7a99f99fe0bb4f9a7094514c7b73dc05e0f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6f18a0c144634681dcbc624937802f22ee962ec2', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb553113472abda50e0a954f77c69d510e0b185e', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad5d694f2c0617c5c023d7b5d9cce23484d44a1d', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e88e24006194532dc1c13139d3e58515afcc11a4', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '901a8e989eb777b8fc10886824037ecbde3d741c', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5926b6ff63f3842e6feb42613aa2b041015cc702', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '20e8e15cc337a2c04fa730bfcf9008579a94170b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b2d14d3ed1cad120b0cc4f970c52c2776ff028b6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '29d8086c55963fff5a94bd631dd8adaf12c376dd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2c60350797564cd53be39929549e29c7bafd6e64', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '150df1b83aa04bc5c2aac1c6c560461a054757a9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a37235a99e3a257349e074645ad27ac1068961ea', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '944326720ef706347033006fab7fb9268b437be2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Dhiren Serai,16983076,dhirensr@gmail.com,User,,76,,21,17
426228059,"Code refactor api, database and modules","Refactored the code using the suggestions in https://github.com/zedr/clean-code-python and PEP8 standards.

1. Fixed the code line lengths according to PEP8 standard
2. Renamed some functions to give a better understanding of what they do.
3. Added classes to store all event type database data.
4. Made docstring comment style uniform.
5. Cleaned the code to make it more readable.
6. Moved modules directory outside the lib directory.
7. Removed usage of ""global"" keywords.

Environment Used-
Python 3.8
Ubuntu 20.04

Issue #69 ",True,89,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/89,https://github.com/OWASP/Python-Honeypot/pull/89,closed,689,458,62,29,0,22,1,0,[{'name': 'GSOC'}],2020-06-01 21:37:58+00:00,2020-07-20 13:08:39+00:00,4203041.0,"48 days, 15:30:41","[{'comment_id': 433833301, 'comment_body': ""it's a valid thing but the readability is compromised here"", 'comment_created': datetime.datetime(2020, 6, 2, 12, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433833569, 'comment_body': 'same here! code readability compromised ! we could create a new variable save country from ip and then use that in JSON for better readability', 'comment_created': datetime.datetime(2020, 6, 2, 12, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433834485, 'comment_body': 'here also readability issue! not able to understand why real_machine_identifier_name is hanging on the next line', 'comment_created': datetime.datetime(2020, 6, 2, 12, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433892347, 'comment_body': '@dhirensr I think you are looking at an older commit.', 'comment_created': datetime.datetime(2020, 6, 2, 13, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434510318, 'comment_body': 'older commit', 'comment_created': datetime.datetime(2020, 6, 3, 11, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434510390, 'comment_body': 'older commit', 'comment_created': datetime.datetime(2020, 6, 3, 11, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434921454, 'comment_body': ""readability is less than previous one although it doesn't satisfy the line chars"", 'comment_created': datetime.datetime(2020, 6, 4, 0, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434922038, 'comment_body': 'maybe put the module_directory to a separate variable', 'comment_created': datetime.datetime(2020, 6, 4, 0, 7, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434922205, 'comment_body': 'i think bulk_events tells you more than push_queues', 'comment_created': datetime.datetime(2020, 6, 4, 0, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435122346, 'comment_body': ""I couldn't understand what bulk_events meant until I read the entire code."", 'comment_created': datetime.datetime(2020, 6, 4, 9, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435156543, 'comment_body': ""okay then let's leave it! maybe @Ali-Razmjoo would have some suggestions later."", 'comment_created': datetime.datetime(2020, 6, 4, 10, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435189325, 'comment_body': 'I tried to fix this issue. Take a look and let me know if it improves the readability.', 'comment_created': datetime.datetime(2020, 6, 4, 11, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435247214, 'comment_body': 'Pushed an update for this.', 'comment_created': datetime.datetime(2020, 6, 4, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435258643, 'comment_body': 'I renamed. See if that helps.', 'comment_created': datetime.datetime(2020, 6, 4, 13, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 439771443, 'comment_body': ""TypeDict is only available for the latest version and I had python3.8 and it was working fine.\r\n\r\nbut now I ran from different environment \r\nOS : Ubuntu\r\nPython 3.6 \r\nand TypeDict is not included.\r\n@ChakshuGupta : I suppose we don't want to just support python3.8 and support other version which are greater than 3.5 so we have to find a different solution."", 'comment_created': datetime.datetime(2020, 6, 13, 21, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 442565374, 'comment_body': 'not supported for python3.5 and python3.6 ! started since python3.7 onwards(https://docs.python.org/3.7/library/dataclasses.html)\r\n\r\n@ChakshuGupta : sorry for late reply. is there any other change which can be done which could support python3.5 and higher versions too?\r\nif not \r\n@Ali-Razmjoo : do you think we should only support this project python3.7 onwards to support this feature?', 'comment_created': datetime.datetime(2020, 6, 19, 0, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 442786238, 'comment_body': ""I found a solution. I'll push that in a bit!"", 'comment_created': datetime.datetime(2020, 6, 19, 11, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 457330187, 'comment_body': 'is it not cleaner to import one per line?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457331226, 'comment_body': 'i think best to view a json is \r\n```json\r\n{\r\n   ""name"": ""value""\r\n}\r\n```\r\n\r\nis there any reason you changed it? did it exceed the max length? ', 'comment_created': datetime.datetime(2020, 7, 20, 12, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457332029, 'comment_body': 'import one per line?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457333177, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457334721, 'comment_body': 'Yes. I was exceeding the maximum length.', 'comment_created': datetime.datetime(2020, 7, 20, 12, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': 'a8082b7721377a91d4aa5c09e36fa27137c1a6fe', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c204ba174ca7a22230d2ca7d4016095de7a77eb6', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628b0f2004092a6a3fae426646d7719dc3be46bc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8351252a98f771cbac3cde038a1216861d56af7d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b9863e80097b36e8a4e59f79000dee408821132', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5576f64b43af3d9e64816277e0f988e7cad3b238', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385d97bb9b5bdd8c580e6c379ef401d77d8f1e03', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c75681906baa8d8a88819f37c77472035e8e82e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74660a3a4a3376f5725fbb03d5ceacbf8f4608f8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1e1744ea643e99a8e7343a2701af7ac184d6c20', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06997acd044e4ed850856d80d8c5461afbc0e428', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37cf179a3a1730754b0d4f4ba69f23336a7c0b8a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e444292d08181de2fb90550e7b0e38ea2634cc50', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5873402f3eb2a3b89939833a9850745b0d23287c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84388e6680aa807d41a6ecb4acf3be42db4065b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f74e900446ea6ec821472c81a252ce4245b27704', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd87427dbee2898e3fc62c40fa05ff1b21e3bf2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ecf2108d43a41ef5ea852c68a71e05e618ad43c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19389d132209d04428e4094f9bac5e1af626e29c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef618f99fea2913a79080cc3eb5b14a8b5180a3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c36ce6752b9470defbd5c0f37ba52ecae308f8a5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368ea1ee349093a2a88fab6edb428b6bf3f690d3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af413b899fe746db38aa48fd066ea9ce54a93e31', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef61062c98427813965c25a194205657f71331e7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2dd720103617e2f3e4ba29cfb034ef6483bdab3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45017d6ae5ea5c379954360cc87c9637da811236', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '526d6ef98ad93b7329b65ea3278ba70a587369b8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef2df9c9907d86860228bd729537c8eefa2a1ba7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7243a3a133d65e304ab5d676143b5e94f801f9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
419195055,Upstream/refactor core,"what : 
1. Refactor code from files in core folder
2. Removed dead code from some files in core folder
3. Restructured the code from some files in core folder",True,85,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/85,https://github.com/OWASP/Python-Honeypot/pull/85,closed,226,189,7,13,3,29,1,1,[{'name': 'GSOC'}],2020-05-17 23:57:12+00:00,2020-07-20 13:00:25+00:00,5490193.0,"63 days, 13:03:13","[{'comment_id': 432931544, 'comment_body': 'Function names like this are not self-explanatory. Just ""finish"" doesn\'t tell us what the function is finishing. It could be ""reset_cmd_color"" or something like that, which would give more context about the function.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432931724, 'comment_body': 'SImilarly for function ""color()""', 'comment_created': datetime.datetime(2020, 5, 31, 10, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932031, 'comment_body': 'Explain what is this ""-1"" in a comment or variable name.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 25, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932097, 'comment_body': 'Put the path in a separate variable.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 26, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932141, 'comment_body': 'same with the file name.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932586, 'comment_body': 'Import statements should be on the top.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932641, 'comment_body': 'I am getting a pylint import error here as well. ""Unable to import \'core.log\'""', 'comment_created': datetime.datetime(2020, 5, 31, 10, 33, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932814, 'comment_body': 'This function is not very clear to me. From the name or from the explaination. Maybe add more comments?', 'comment_created': datetime.datetime(2020, 5, 31, 10, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432932858, 'comment_body': 'Same thing here.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 36, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432933272, 'comment_body': "" I am getting a pylint(anomalous-backslash-in-string) warning here.\r\nAnomalous backslash in string: '\\ '. String constant might be missing an r prefix."", 'comment_created': datetime.datetime(2020, 5, 31, 10, 41, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432933463, 'comment_body': 'Maybe rename this to ""verbose"" instead of ""output"". Its purpose would become self-explanatory that way.', 'comment_created': datetime.datetime(2020, 5, 31, 10, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432933790, 'comment_body': ""Store this in a variable and then use. It's a little hard to read right now."", 'comment_created': datetime.datetime(2020, 5, 31, 10, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432934845, 'comment_body': 'What is the maximum line length you are following? PEP8 suggests max 79 characters. Most of lines in this file are crossing that by a long margin.\r\nhttps://www.python.org/dev/peps/pep-0008/#maximum-line-length', 'comment_created': datetime.datetime(2020, 5, 31, 10, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432935316, 'comment_body': 'Move \'network_configuration()[""ignore_real_machine_ip_address""]\' and \'network_configuration()[""ignore_virtual_machine_ip_addresses""]\' to separate flags before using here. It will make it more readable.', 'comment_created': datetime.datetime(2020, 5, 31, 11, 5, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 432935640, 'comment_body': 'I see you removed the brackets around ( netaddr.valid_ipv4(ip_dest) or  netaddr.valid_ipv6(ip_dest) ) . Would the behaviour remain the same since this entire statement is supposed to be one condition?', 'comment_created': datetime.datetime(2020, 5, 31, 11, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434901023, 'comment_body': ""@ChakshuGupta : it's a bug and not a refactor error. i will create a new ticket"", 'comment_created': datetime.datetime(2020, 6, 3, 22, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434901317, 'comment_body': ""@ChakshuGupta : what did you use here to check just this file? maybe it's just a new python 3.8 feature or something "", 'comment_created': datetime.datetime(2020, 6, 3, 22, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434904857, 'comment_body': 'I am trying to follow 80 characters but in some cases readability is getting compromised if I refactor them', 'comment_created': datetime.datetime(2020, 6, 3, 23, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434907708, 'comment_body': 'my bad! Thanks for pointing that out', 'comment_created': datetime.datetime(2020, 6, 3, 23, 15, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434908259, 'comment_body': ""good point! but it's currently not being used anywhere ! maybe we'll remove this one"", 'comment_created': datetime.datetime(2020, 6, 3, 23, 17, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435125105, 'comment_body': 'Great!', 'comment_created': datetime.datetime(2020, 6, 4, 9, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435424777, 'comment_body': 'It shows up in my IDE. I use VS code and I have enabled pylint on it.', 'comment_created': datetime.datetime(2020, 6, 4, 17, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 438026202, 'comment_body': ""Since the returned value of config.api_configuration() doesn't change, I feel that we can reduce the number of function calls to this function by storing the result in a variable and using that instead."", 'comment_created': datetime.datetime(2020, 6, 10, 10, 35, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 438035720, 'comment_body': 'Same thing with user_configuration() and docker_configuration().', 'comment_created': datetime.datetime(2020, 6, 10, 10, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 438036284, 'comment_body': 'Also for network_configuration().', 'comment_created': datetime.datetime(2020, 6, 10, 10, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 457336460, 'comment_body': 'did it exceed the max length?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457336765, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 27, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457336993, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457337440, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}]","[{'commit_sha': 'e8b82a68ad9b5500d8beeb0f1c588e4108116196', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50e16e3e4ba27c47d8581c28ddf8d6840d230633', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e79093cf99ab9440dcb9ee77de237512cc021240', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '203b04ffb6447c91ded5b1e43314eee009389714', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7555b5bf4d9835ad95eeb67cb250b0fc5ec2818e', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3503127ed4986f6e21ac6c4bdcb8707bd6654cf', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50a0bdecbb6e0d45ec818c44b10e001f0ee0ed19', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46cc56be79b9cd7e188dfcdf869e5bc126562ce9', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8829c3a6b55a07c0fc85ef72c8bcd93f4f676caa', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '560293d7fa3240b8005e9b68b3a6425249b48d87', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca8375bd5b2e7cc58f9f701c4a921a51f26c7dcd', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d8f6cddcf79e8d9df0b2350ec80beead223533c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a4dc71929a9085a5b317da7d01370a4709d57e72', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Dhiren Serai,16983076,dhirensr@gmail.com,User,,76,,21,17
389516779,Dockerfile,Add Dockerfile to setup the development environment in a docker.,True,75,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/75,https://github.com/OWASP/Python-Honeypot/pull/75,closed,476,262,15,78,18,21,3,1,"[{'name': 'GSOC'}, {'name': 'priority'}, {'name': 'ready for review'}]",2020-03-16 22:04:21+00:00,2020-08-07 23:00:01+00:00,12444940.0,"144 days, 0:55:40","[{'comment_id': 398044256, 'comment_body': 'apt-get -y upgrade and apt-get -y dist-upgrade', 'comment_created': datetime.datetime(2020, 3, 25, 17, 37, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398044764, 'comment_body': 'this command is failing in dockerfile.\r\nmaybe we have to run via CMD as shown here https://stackoverflow.com/questions/46245844/pass-arguments-to-python-argparse-within-docker-container', 'comment_created': datetime.datetime(2020, 3, 25, 17, 38, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 398045191, 'comment_body': ""for me it's showing cannot connect to mongodb. \r\nhave you already tested the image on your local machine? "", 'comment_created': datetime.datetime(2020, 3, 25, 17, 38, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 399229187, 'comment_body': 'I am also getting the same error. Trying to solve it.', 'comment_created': datetime.datetime(2020, 3, 27, 12, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 404909278, 'comment_body': '`apt-get update && upgrade` should be in 1 RUN in docker, for caching purposes. otherwise the update may have no effect.', 'comment_created': datetime.datetime(2020, 4, 7, 15, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 404909533, 'comment_body': 'Ditto', 'comment_created': datetime.datetime(2020, 4, 7, 15, 39, 14, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 404910047, 'comment_body': ""Why isn't this in the previous one?"", 'comment_created': datetime.datetime(2020, 4, 7, 15, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 404910127, 'comment_body': ""Why!? This doesn't seem necessary."", 'comment_created': datetime.datetime(2020, 4, 7, 15, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'abiusx', 'type': 'User'}, {'comment_id': 405345403, 'comment_body': ""Okay. I'll make the change."", 'comment_created': datetime.datetime(2020, 4, 8, 8, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 407069530, 'comment_body': ""we can also install via ubuntu repository ,don't need to compile this."", 'comment_created': datetime.datetime(2020, 4, 11, 14, 20, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435571770, 'comment_body': 'add - DOCKER_API_VERSION=1.39 to solve the API error.', 'comment_created': datetime.datetime(2020, 6, 4, 21, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 441742398, 'comment_body': 'where did we use this?', 'comment_created': datetime.datetime(2020, 6, 17, 18, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 441742961, 'comment_body': 'good to have an env to clearout we are using docker, but maybe something more clear `ENV=docker` or `DOCKER_ENV=true`', 'comment_created': datetime.datetime(2020, 6, 17, 18, 25, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 441743300, 'comment_body': 'also we need to make sure such env var will not be use in images that user can read them, like weak ssh password', 'comment_created': datetime.datetime(2020, 6, 17, 18, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 441791922, 'comment_body': 'It sets the Flask environment as development so we don\'t this warning -\r\n""WARNING: This is a development server. Do not use it in a production deployment.""\r\n', 'comment_created': datetime.datetime(2020, 6, 17, 19, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 441792533, 'comment_body': ""Good point! I'll look into it."", 'comment_created': datetime.datetime(2020, 6, 17, 19, 46, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 443156744, 'comment_body': 'I checked and this env variable is not getting passed on to the docker images of the modules. I have updated the environment variable.', 'comment_created': datetime.datetime(2020, 6, 20, 20, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 458976017, 'comment_body': '@ChakshuGupta as an example, you need to add it to docker options.\r\n\r\nhttps://github.com/zdresearch/OWASP-Honeypot/blob/master/modules/ssh/strong_password/__init__.py#L50-L63\r\ncurrent code:\r\n```\r\ndef module_configuration():\r\n    """"""\r\n    module configuration\r\n    Returns:\r\n        JSON/Dict module configuration\r\n    """"""\r\n    return {\r\n        ""username"": ""root"",\r\n        ""password"": generate_token(16),\r\n        ""extra_docker_options"":\r\n        [""--volume {0}/tmp:/root/logs/"".format(os.getcwd())],\r\n        ""module_processor"": ModuleProcessor()\r\n    }\r\n```\r\npossible fix suggestion:\r\n```python\r\ndef module_configuration():\r\n    """"""\r\n    module configuration\r\n    Returns:\r\n        JSON/Dict module configuration\r\n    """"""\r\n    return {\r\n        ""username"": ""root"",\r\n        ""password"": generate_token(16),\r\n        ""extra_docker_options"":\r\n        [""--volume {0}/tmp:/root/logs/"".format(os.getcwd()), ""-e DOCKER_ENV"" if whatever else """"],\r\n        ""module_processor"": ModuleProcessor()\r\n    }\r\n```\r\n\r\nis that what you meant/needed?', 'comment_created': datetime.datetime(2020, 7, 22, 17, 52, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 465939710, 'comment_body': 'why not copying the files from current directory? ', 'comment_created': datetime.datetime(2020, 8, 5, 19, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 465945581, 'comment_body': 'if we save the data on a volume, we can just start mongodb with `docker-compose up`, no need to do it without mongodb.', 'comment_created': datetime.datetime(2020, 8, 5, 19, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 465948715, 'comment_body': 'mongodb is starting with `docker-compose up`.\r\n\r\nI thought we might need an option to start the API with mongodb running on the host instead. That is why docker-compose-host.yml is there.', 'comment_created': datetime.datetime(2020, 8, 5, 19, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': '3fc9872d4259a88f9b02f87606a114e93659b400', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3479a835d47ecc13e7fbc3fd6688efa8b3b38278', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f5c684e98a73d022993bfef282323290bbb5136', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e17100511f8e5ce885324aad72d0964fab6e6fe', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c41494564825d7dcf5cc67913d781b9336213be', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd3518f01e56c26f3162ab1fcbaa82e6395ceb3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac72c762440b12e9af8cc1997bc089ff65e27218', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd21432527b5f7b0b91446e623c5b8c900ee87957', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eaaa830e0b042faabe24e2fb7ca41c0acfd4d5b0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd01ea367b8df79f2fbd933a04cb3d41def1246d2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1049af1ea732272e241945cdc1a5b4fa4073ab26', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2acec0c762384e34e34cc588e26defad0e1c1a29', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7620331d22d4927d4d89d95a60feeb4968af19a4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '119e2b00db3bc286147eb5263707e02f7b61286a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a00e34eafc3cc35413d525c613abd02cd171eac0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04807589c5dca0df976fc23159e9dfdc0044e8d6', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3014c7392fef7fd5619912149635e178206d862', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e84728c42923a456d690faa5b425ada92e6193f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0300f0f8b74aed226e85256f184bd92ac6139221', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f3b66d7d1c7842bed076a2facaa4fe3c04cec5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51accd687a5ef57bdfe861d9acd630cc726ea54c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e6657bd0f777f99f276ed59696cdf2f35c4bb2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895f619b661c2c4912fd6ac184775a0f756d5dd8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b65f514e72f0138a821c165f7584308af251b93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '624d61bb6df8c8ff9ee9ccadcf5789366bbfb5de', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c17bab4fa714f7c3e0abce4bafbf01c12a170f4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b00a6c83abf8a055ce98cf5fa39f73c29c7463', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e1a91033625bbcd08e79dfde1c231f34ac4a176', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1be5d8b0787f9131bae680e0fa14138b1438e3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5adc14fa5fe5f27b0fc57f33f6e05305c9bd13af', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb317d52ec2405633319d0cf20fd511756b930b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '38d1d2bd199f82d474cd4e7cb1e3936b43796349', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275b9107444419c309d4f3acdc6b54fceb52fbf7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2117f583cc998e797e4a45b2445189d3c6c741', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3defe03c85a06ca56d5cf23947c51e8d57753bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '499ed56f3e39f148d2c3d88dde367d5494e9ccc3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9b76c1705305811aba8d494c4734991da4b2b952', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '919ec6806744af6feb82de90d274a5d2bdc9eeb0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91843790d8f2105a9f3f3c00d0adbc7cb35cbf30', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70d3bd89a6855031ed67e177c7a8e569cf13747f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38b894e9b7c60a033e1ede427b46ecb7ff0f36c4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '456e1d807c396ac14da284817f4c98947466daef', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '644471dac5cd25849f6f35e42dd9b22737411842', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd56582b801e13938e0e2a364d111adc290af11', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f24e08506abee11b6f4acba8d6db6c429196bcb9', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6651f66c1bd1c5080d93bde17d63585ce98340', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ecd1dadf53817e486704941d92ff23a9a28a66', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdd1437252e2aabc61f03ee7a1f6f0e44799d4a2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bac67684d2dd359f795db261241a7da07b56dc0e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6810a0f44edf20fb1bef766d767a9c8f22eda606', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cade1289cfd7481ff99297094e968a79137ad2f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd7acf8edc69ba6181e8b64cb14575fbfed7a5b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a0f1e59730eba63acbe1ac08761a901a596225', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dafca5d876c43aafc20a02366ffc10ddf671c93', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c85469b1dd8057a2ef3a76c4e2c29f22d454b45a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8add3e084eecfc12f52d8f8969637e3e04726653', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b649c433e4050222e4f6a8ad75bc3ff6cc4cf102', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '644d6ad8a0daedfc6ffff5672686459a51962075', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7a7d432596595f523a7f87ff4d6f0ac54fa5b681', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3dd0f2e3010b4d5fb4b2f5a2fe1e53420e31ab7a', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42b1fceb6b6a1e9903833e73fcb074ab9038b10b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8c5a94485788edea0890c4460125c669eb9a624b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '90f04b530967df602590ffea92f7e731b1b406ce', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '49b6f3f351d331d9e7daa3165fa2b8ae6a163cf8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7982a59d5a5236c8f29ed8f3eef9adb3095beedc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc146638eaebcc65bf27852a948d660fcf0ee0de', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'de1d85fddf6cbc186f7e45be1091da2cfea50e21', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '93bae90c29b8bf8ecd1b82e2e4c0fd91e07a13b4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aab67019fe9b01fb0c15ac242b87bd463a5f872f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d147a98f8e3fb587a2b5557ce205118e28b3fb7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd08c7dcc57d600d203f13243ba22dd3113073c0f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f911701a863c6b5c86638bc1e5c20bbd19b371d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3daec12c6c87fb0583ab610bc624bbb0427f5519', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '5602e98a9aea1f70b60d287d96865429b2927d1a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '00e26d68fa668c751239d3049a8891bb5c2c0a51', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '33dfac9775b03e91d597956d5c02b1c7102a927a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '172f504d84f70dd397c85a2120407886cefa117e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4adb776feefe9b76989d5e6c5c4a138474654dbb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
426228059,"Code refactor api, database and modules","Refactored the code using the suggestions in https://github.com/zedr/clean-code-python and PEP8 standards.

1. Fixed the code line lengths according to PEP8 standard
2. Renamed some functions to give a better understanding of what they do.
3. Added classes to store all event type database data.
4. Made docstring comment style uniform.
5. Cleaned the code to make it more readable.
6. Moved modules directory outside the lib directory.
7. Removed usage of ""global"" keywords.

Environment Used-
Python 3.8
Ubuntu 20.04

Issue #69 ",True,89,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/89,https://github.com/OWASP/Python-Honeypot/pull/89,closed,689,458,62,29,0,22,1,0,[{'name': 'GSOC'}],2020-06-01 21:37:58+00:00,2020-07-20 13:08:39+00:00,4203041.0,"48 days, 15:30:41","[{'comment_id': 433833301, 'comment_body': ""it's a valid thing but the readability is compromised here"", 'comment_created': datetime.datetime(2020, 6, 2, 12, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433833569, 'comment_body': 'same here! code readability compromised ! we could create a new variable save country from ip and then use that in JSON for better readability', 'comment_created': datetime.datetime(2020, 6, 2, 12, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433834485, 'comment_body': 'here also readability issue! not able to understand why real_machine_identifier_name is hanging on the next line', 'comment_created': datetime.datetime(2020, 6, 2, 12, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 433892347, 'comment_body': '@dhirensr I think you are looking at an older commit.', 'comment_created': datetime.datetime(2020, 6, 2, 13, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434510318, 'comment_body': 'older commit', 'comment_created': datetime.datetime(2020, 6, 3, 11, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434510390, 'comment_body': 'older commit', 'comment_created': datetime.datetime(2020, 6, 3, 11, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 434921454, 'comment_body': ""readability is less than previous one although it doesn't satisfy the line chars"", 'comment_created': datetime.datetime(2020, 6, 4, 0, 5, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434922038, 'comment_body': 'maybe put the module_directory to a separate variable', 'comment_created': datetime.datetime(2020, 6, 4, 0, 7, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 434922205, 'comment_body': 'i think bulk_events tells you more than push_queues', 'comment_created': datetime.datetime(2020, 6, 4, 0, 8, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435122346, 'comment_body': ""I couldn't understand what bulk_events meant until I read the entire code."", 'comment_created': datetime.datetime(2020, 6, 4, 9, 36, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435156543, 'comment_body': ""okay then let's leave it! maybe @Ali-Razmjoo would have some suggestions later."", 'comment_created': datetime.datetime(2020, 6, 4, 10, 35, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 435189325, 'comment_body': 'I tried to fix this issue. Take a look and let me know if it improves the readability.', 'comment_created': datetime.datetime(2020, 6, 4, 11, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435247214, 'comment_body': 'Pushed an update for this.', 'comment_created': datetime.datetime(2020, 6, 4, 13, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 435258643, 'comment_body': 'I renamed. See if that helps.', 'comment_created': datetime.datetime(2020, 6, 4, 13, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 439771443, 'comment_body': ""TypeDict is only available for the latest version and I had python3.8 and it was working fine.\r\n\r\nbut now I ran from different environment \r\nOS : Ubuntu\r\nPython 3.6 \r\nand TypeDict is not included.\r\n@ChakshuGupta : I suppose we don't want to just support python3.8 and support other version which are greater than 3.5 so we have to find a different solution."", 'comment_created': datetime.datetime(2020, 6, 13, 21, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 442565374, 'comment_body': 'not supported for python3.5 and python3.6 ! started since python3.7 onwards(https://docs.python.org/3.7/library/dataclasses.html)\r\n\r\n@ChakshuGupta : sorry for late reply. is there any other change which can be done which could support python3.5 and higher versions too?\r\nif not \r\n@Ali-Razmjoo : do you think we should only support this project python3.7 onwards to support this feature?', 'comment_created': datetime.datetime(2020, 6, 19, 0, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 442786238, 'comment_body': ""I found a solution. I'll push that in a bit!"", 'comment_created': datetime.datetime(2020, 6, 19, 11, 27, 6, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 457330187, 'comment_body': 'is it not cleaner to import one per line?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457331226, 'comment_body': 'i think best to view a json is \r\n```json\r\n{\r\n   ""name"": ""value""\r\n}\r\n```\r\n\r\nis there any reason you changed it? did it exceed the max length? ', 'comment_created': datetime.datetime(2020, 7, 20, 12, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457332029, 'comment_body': 'import one per line?', 'comment_created': datetime.datetime(2020, 7, 20, 12, 20, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457333177, 'comment_body': 'import one per line', 'comment_created': datetime.datetime(2020, 7, 20, 12, 22, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 457334721, 'comment_body': 'Yes. I was exceeding the maximum length.', 'comment_created': datetime.datetime(2020, 7, 20, 12, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': 'a8082b7721377a91d4aa5c09e36fa27137c1a6fe', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c204ba174ca7a22230d2ca7d4016095de7a77eb6', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628b0f2004092a6a3fae426646d7719dc3be46bc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8351252a98f771cbac3cde038a1216861d56af7d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b9863e80097b36e8a4e59f79000dee408821132', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5576f64b43af3d9e64816277e0f988e7cad3b238', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385d97bb9b5bdd8c580e6c379ef401d77d8f1e03', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c75681906baa8d8a88819f37c77472035e8e82e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74660a3a4a3376f5725fbb03d5ceacbf8f4608f8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1e1744ea643e99a8e7343a2701af7ac184d6c20', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06997acd044e4ed850856d80d8c5461afbc0e428', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37cf179a3a1730754b0d4f4ba69f23336a7c0b8a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e444292d08181de2fb90550e7b0e38ea2634cc50', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5873402f3eb2a3b89939833a9850745b0d23287c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f84388e6680aa807d41a6ecb4acf3be42db4065b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f74e900446ea6ec821472c81a252ce4245b27704', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bd87427dbee2898e3fc62c40fa05ff1b21e3bf2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ecf2108d43a41ef5ea852c68a71e05e618ad43c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19389d132209d04428e4094f9bac5e1af626e29c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fef618f99fea2913a79080cc3eb5b14a8b5180a3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c36ce6752b9470defbd5c0f37ba52ecae308f8a5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '368ea1ee349093a2a88fab6edb428b6bf3f690d3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af413b899fe746db38aa48fd066ea9ce54a93e31', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef61062c98427813965c25a194205657f71331e7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2dd720103617e2f3e4ba29cfb034ef6483bdab3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45017d6ae5ea5c379954360cc87c9637da811236', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '526d6ef98ad93b7329b65ea3278ba70a587369b8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef2df9c9907d86860228bd729537c8eefa2a1ba7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7243a3a133d65e304ab5d676143b5e94f801f9c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
432795623,Test API and database I/O,"I added tests for the following:
-  test all API endpoints if they are running and working.
-  test I/O with the MongoDB database.

Run the API first before running the tests.

Command to run the tests -
```
python3 -m pytest -rpP
```

Environment:
```
OS: Ubuntu 20.04
Version: Python 3.8
```",True,93,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/93,https://github.com/OWASP/Python-Honeypot/pull/93,closed,272,3,3,15,2,0,1,0,[{'name': 'GSOC'}],2020-06-11 02:08:18+00:00,2020-07-20 13:18:59+00:00,3409841.0,"39 days, 11:10:41",[],"[{'commit_sha': 'd58527f22dd48f53b4604a76278a6937eca5c38d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd38cab8da5af2e6eaf97f10f55077a6a8ea8142c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c2e50d8a24e1f740250dafc3fa5b8ee769852de', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7271ca01e5effbcd5204d696d2cc3f2fce994583', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a7b275fad2a93f96ca3852edd7ffc1267042c36', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dfa043d959ac08a0489519a0a7d0bb461ff9e31', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da286c78771647fe956a47c8793497653d1e78da', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8010946ab19fb3931b0396cf95f8d6f4ae52819f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce91e4f27a33cfa8131e18790a6f6775d929864e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ca55a2eacad9f52ad6c68a1ef692716927a93e9', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bd614630d4ad37ea0983f431683a868d82e99fc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb3d23bef34d28ed5b81e4c083f5b93540bfc5ea', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fcfce33d870a79daff9a70eb926dcddb259705a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d185a516e345b5747cf16c4a96e10849334d508', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0d2558f885f8bc50fdf13cbc98174501d19d839c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
444307887,Log explorer,"
Fixes #67

1. Log explorer to view and export the event data collected in the database.
2. Minor UI updates

The screenshots for the explorer:

![Screenshot from 2020-07-04 19-08-39](https://user-images.githubusercontent.com/6474622/86517524-e568ab00-be29-11ea-9cc0-22c23cd21202.png)
![Screenshot from 2020-07-04 19-08-30](https://user-images.githubusercontent.com/6474622/86517526-e7326e80-be29-11ea-925d-b0a18b770d5b.png)
",True,100,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/100,https://github.com/OWASP/Python-Honeypot/pull/100,closed,1322,193,31,27,5,0,3,1,"[{'name': 'GSOC'}, {'name': 'priority'}, {'name': 'ready for review'}]",2020-07-04 17:12:39+00:00,2020-08-10 12:16:12+00:00,3179013.0,"36 days, 19:03:33",[],"[{'commit_sha': '546868f64a01b64debd6d42d8da92a5ded3813f8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a6fbf60d8b03969d83aa74b6b6921d868d08f96', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10aa28d1fa774f760130147b0b276b32ee05587a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fccdf7466b767e39bf023d66e5ff4e896de626d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87b5eb8f368f28d4d18939132a588bf6691fc513', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c7c1e97a504d271fed4eecff0c1dd8e0d8a3148', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de64ad118012bfb037d1bf00bc2fd7967de1e40', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aec7aaeb5c7e0ccb5d2fdae9a2378576e615b3a3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22f4452dfd3dc7cea052176fead2fbd1bb15bb5a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89e8be99d9581289af6c2a64d16eaf71d727af55', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89648f4e772565432d7614753166012d21cee3ca', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac779db21ee51d2ad472a8abe77b4f66c06c9346', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26696e26b5390dda8abd52b931251b451d834f37', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd33bfd23699e02ac8b72bddb8264335ca5fd145f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66431e045bfece3a446a525475cb6a10c959cb04', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1e60f42a4f4a343e873b6537aa3e672bebcba9', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce7ddb52e1fed830a516d887fa71be9508ef6abb', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a582d25e5040f27b4c1052f9ff25ada6b1dce0a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '186fcfcb75ff917fc1d4c4076441d84a1905343a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c31b89104f76f7262dc1e9e4c6632eb33878be11', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25f6857c4c9e8a661979028b72893c0e1ebce789', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddf8867d0e19a0b91ec9fa7b2a0b7048cda3c2b3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a3d2c794688305f71510d5c326850e8c81af0e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1914d08dae2c53e247fa4a4f3aabfac71e455073', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '510fe95676a33706d73429d0969772486ec85472', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b51f347c33b3d9674fea83082c4f5eeb598791dc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d0c12c8b239563161273db697ce4ee60e5ef073', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}]",Chakshu Gupta,6474622,,User,,19,,10,13
451914074,Replace tshark with pyshark library,"Replaced tshark with pyshark library with the following changes - 

1. Added root user check
2. Replaced tshark call as a subprocess with the pyshark library's LiveCapture
3. Added ""protocol"" to the stored data
4. Added check for ""store_network_captured_files"" and storing of pcap files with the captured network",True,103,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/103,https://github.com/OWASP/Python-Honeypot/pull/103,closed,339,245,9,40,12,6,3,1,"[{'name': 'GSOC'}, {'name': 'priority'}, {'name': 'ready for review'}]",2020-07-18 12:46:22+00:00,2020-08-07 13:47:25+00:00,1731663.0,"20 days, 1:01:03","[{'comment_id': 459980475, 'comment_body': ""this should be `ignore_ip_addresses` because it's a seperator if ignore_ip_addresses exist."", 'comment_created': datetime.datetime(2020, 7, 24, 10, 45, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 459981796, 'comment_body': 'but this is a separator between `ignore_ip_addresses` and `ignore_ports`. If there are no ports to be ignored `and` should not be there at the end.', 'comment_created': datetime.datetime(2020, 7, 24, 10, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 459984970, 'comment_body': 'good point, maybe use `display_filter += \' and \' if ignore_ip_addresses and ignore_ports  else """"`', 'comment_created': datetime.datetime(2020, 7, 24, 10, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 459991108, 'comment_body': 'for some reason i am still getting an error here\r\n\r\n```\r\nbatman@Batmans-MacBook-Pro:~/D/G/OWASP-Honeypot:pr/103$ sudo python3 ohp.py -m ssh/weak_password\r\n\r\n      ______          __      _____ _____\r\n     / __ \\ \\        / /\\    / ____|  __ \\\r\n    | |  | \\ \\  /\\  / /  \\  | (___ | |__) |\r\n    | |  | |\\ \\/  \\/ / /\\ \\  \\___ \\|  ___/\r\n    | |__| | \\  /\\  / ____ \\ ____) | |\r\n     \\____/   \\/  \\/_/    \\_\\_____/|_|\r\n                      _    _                        _____      _\r\n                     | |  | |                      |  __ \\    | |\r\n                     | |__| | ___  _ __   ___ _   _| |__) |__ | |_\r\n                     |  __  |/ _ \\| ""_ \\ / _ \\ | | |  ___/ _ \\| __|\r\n                     | |  | | (_) | | | |  __/ |_| | |  | (_) | |_\r\n                     |_|  |_|\\___/|_| |_|\\___|\\__, |_|   \\___/ \\__|\r\n                                               __/ |\r\n                                              |___/\r\n\r\n[+] [2020-07-24 13:10:36] OWASP Honeypot started ...\r\n[+] [2020-07-24 13:10:36] loading modules ssh/weak_password\r\n[+] [2020-07-24 13:10:36] checking for conflicts in ports\r\n[+] [2020-07-24 13:10:36] port 22 selected for ssh/weak_password\r\n[+] [2020-07-24 13:10:36] creating image ohp_sshserver_weak_password\r\n[+] [2020-07-24 13:10:51] image ohp_sshserver_weak_password created\r\n[+] [2020-07-24 13:10:51] container ohp_sshserver_weak_password started, forwarding 0.0.0.0:22 to 172.25.0.2:22\r\n[+] [2020-07-24 13:10:51] new_network_events thread started\r\n[+] [2020-07-24 13:10:51] all selected modules started: ssh/weak_password\r\n[X] [2020-07-24 13:10:51] Cannot add child handler, the child watcher does not have a loop attached\r\n[X] [2020-07-24 13:10:52] Interrupting the application because network capturing thread is not alive!\r\n[+] [2020-07-24 13:10:52] killing new_network_events_thread\r\n[+] [2020-07-24 13:10:52] killing insert_events_in_bulk_thread\r\n[+] [2020-07-24 13:10:52] killing container ohp_sshserver_weak_password\r\n[+] [2020-07-24 13:10:53] removing container ohp_sshserver_weak_password\r\n[+] [2020-07-24 13:10:53] removing image ohp_sshserver_weak_password\r\n[+] [2020-07-24 13:10:53] finished.\r\n```\r\n\r\n@ChakshuGupta whats your OS and python version?', 'comment_created': datetime.datetime(2020, 7, 24, 11, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 459992397, 'comment_body': 'ubuntu 20.04\r\nPython 3.8', 'comment_created': datetime.datetime(2020, 7, 24, 11, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 466662406, 'comment_body': '```suggestion\r\n            try:\r\n                capture.close()\r\n            except Exception as _:\r\n                del _\r\n```\r\n```\r\nbatman@Batmans-MacBook-Pro:~/D/G/OWASP-Honeypot:pr/103$ sudo python3 ohp.py -m ssh/weak_password\r\n\r\n      ______          __      _____ _____\r\n     / __ \\ \\        / /\\    / ____|  __ \\\r\n    | |  | \\ \\  /\\  / /  \\  | (___ | |__) |\r\n    | |  | |\\ \\/  \\/ / /\\ \\  \\___ \\|  ___/\r\n    | |__| | \\  /\\  / ____ \\ ____) | |\r\n     \\____/   \\/  \\/_/    \\_\\_____/|_|\r\n                      _    _                        _____      _\r\n                     | |  | |                      |  __ \\    | |\r\n                     | |__| | ___  _ __   ___ _   _| |__) |__ | |_\r\n                     |  __  |/ _ \\| ""_ \\ / _ \\ | | |  ___/ _ \\| __|\r\n                     | |  | | (_) | | | |  __/ |_| | |  | (_) | |_\r\n                     |_|  |_|\\___/|_| |_|\\___|\\__, |_|   \\___/ \\__|\r\n                                               __/ |\r\n                                              |___/\r\n\r\n[+] [2020-08-06 22:13:57] OWASP Honeypot started ...\r\n[+] [2020-08-06 22:13:57] loading modules ssh/weak_password\r\n[+] [2020-08-06 22:13:57] checking for conflicts in ports\r\n[+] [2020-08-06 22:13:57] port 22 selected for ssh/weak_password\r\n[+] [2020-08-06 22:13:58] creating image ohp_sshserver_weak_password\r\n[+] [2020-08-06 22:14:10] image ohp_sshserver_weak_password created\r\n[+] [2020-08-06 22:14:11] container ohp_sshserver_weak_password started, forwarding 0.0.0.0:22 to 172.25.0.2:22\r\n[+] [2020-08-06 22:14:11] all selected modules started: ssh/weak_password\r\n[+] [2020-08-06 22:14:11] network_traffic_capture process started\r\n^C[+] [2020-08-06 22:14:19] interrupted by user, please wait to stop the containers and remove the containers and images\r\nProcess network_traffic_capture_process:\r\nTraceback (most recent call last):\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/multiprocessing/process.py"", line 315, in _bootstrap\r\n    self.run()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/multiprocessing/process.py"", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File ""/Users/batman/Documents/GitHub/OWASP-Honeypot/core/network.py"", line 214, in network_traffic_capture\r\n    capture.close()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyshark/capture/capture.py"", line 426, in close\r\n    self.eventloop.run_until_complete(self.close_async())\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 603, in run_until_complete\r\n    self.run_forever()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 570, in run_forever\r\n    self._run_once()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 1859, in _run_once\r\n    handle._run()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/events.py"", line 81, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/tasks.py"", line 483, in wait_for\r\n    return fut.result()\r\n  File ""/Users/batman/Documents/GitHub/OWASP-Honeypot/core/network.py"", line 211, in network_traffic_capture\r\n    capture.apply_on_packets(packet_callback, timeout=3600)\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyshark/capture/capture.py"", line 267, in apply_on_packets\r\n    return self.eventloop.run_until_complete(coro)\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 603, in run_until_complete\r\n    self.run_forever()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 570, in run_forever\r\n    self._run_once()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 1859, in _run_once\r\n    handle._run()\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/events.py"", line 81, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyshark/capture/capture.py"", line 278, in packets_from_tshark\r\n    await self._go_through_packets_from_fd(tshark_process.stdout, packet_callback, packet_count=packet_count)\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyshark/capture/capture.py"", line 294, in _go_through_packets_from_fd\r\n    packet, data = await self._get_packet_from_stream(fd, data, got_first_packet=packets_captured > 0,\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyshark/capture/capture.py"", line 352, in _get_packet_from_stream\r\n    packet = packet_from_xml_packet(packet, psml_structure=psml_structure)\r\n  File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyshark/tshark/tshark_xml.py"", line 26, in packet_from_xml_packet\r\n    xml_pkt = lxml.objectify.fromstring(xml_pkt, parser)\r\nKeyboardInterrupt\r\n[+] [2020-08-06 22:14:19] killing network capture process\r\n[+] [2020-08-06 22:14:19] killing insert_events_in_bulk_thread\r\n[+] [2020-08-06 22:14:20] killing container ohp_sshserver_weak_password\r\n[+] [2020-08-06 22:14:20] removing container ohp_sshserver_weak_password\r\n[+] [2020-08-06 22:14:20] removing image ohp_sshserver_weak_password\r\n[+] [2020-08-06 22:14:20] finished.\r\nbatman@Batmans-MacBook-Pro:~/D/G/OWASP-Honeypot:pr/103$\r\n```\r\n', 'comment_created': datetime.datetime(2020, 8, 6, 20, 17, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}]","[{'commit_sha': '7e84728c42923a456d690faa5b425ada92e6193f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0300f0f8b74aed226e85256f184bd92ac6139221', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7f3b66d7d1c7842bed076a2facaa4fe3c04cec5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '51accd687a5ef57bdfe861d9acd630cc726ea54c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02e6657bd0f777f99f276ed59696cdf2f35c4bb2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '895f619b661c2c4912fd6ac184775a0f756d5dd8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b65f514e72f0138a821c165f7584308af251b93', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '624d61bb6df8c8ff9ee9ccadcf5789366bbfb5de', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7c17bab4fa714f7c3e0abce4bafbf01c12a170f4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7b00a6c83abf8a055ce98cf5fa39f73c29c7463', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4e1a91033625bbcd08e79dfde1c231f34ac4a176', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b1be5d8b0787f9131bae680e0fa14138b1438e3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5adc14fa5fe5f27b0fc57f33f6e05305c9bd13af', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb317d52ec2405633319d0cf20fd511756b930b8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '38d1d2bd199f82d474cd4e7cb1e3936b43796349', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '275b9107444419c309d4f3acdc6b54fceb52fbf7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b2117f583cc998e797e4a45b2445189d3c6c741', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3defe03c85a06ca56d5cf23947c51e8d57753bb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '499ed56f3e39f148d2c3d88dde367d5494e9ccc3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9b76c1705305811aba8d494c4734991da4b2b952', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '919ec6806744af6feb82de90d274a5d2bdc9eeb0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91843790d8f2105a9f3f3c00d0adbc7cb35cbf30', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f24e08506abee11b6f4acba8d6db6c429196bcb9', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d6651f66c1bd1c5080d93bde17d63585ce98340', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4ecd1dadf53817e486704941d92ff23a9a28a66', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bac67684d2dd359f795db261241a7da07b56dc0e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6810a0f44edf20fb1bef766d767a9c8f22eda606', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cade1289cfd7481ff99297094e968a79137ad2f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd7acf8edc69ba6181e8b64cb14575fbfed7a5b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a0f1e59730eba63acbe1ac08761a901a596225', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dafca5d876c43aafc20a02366ffc10ddf671c93', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c85469b1dd8057a2ef3a76c4e2c29f22d454b45a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8add3e084eecfc12f52d8f8969637e3e04726653', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '49b6f3f351d331d9e7daa3165fa2b8ae6a163cf8', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7982a59d5a5236c8f29ed8f3eef9adb3095beedc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc146638eaebcc65bf27852a948d660fcf0ee0de', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aab67019fe9b01fb0c15ac242b87bd463a5f872f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d147a98f8e3fb587a2b5557ce205118e28b3fb7', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd08c7dcc57d600d203f13243ba22dd3113073c0f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f911701a863c6b5c86638bc1e5c20bbd19b371d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}]",Chakshu Gupta,6474622,,User,,19,,10,13
462317733,Update contributing.md,"Add changing of the base branch to ""development"" when creating a pull request.",True,115,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/115,https://github.com/OWASP/Python-Honeypot/pull/115,closed,50,8,2,3,1,0,1,0,[{'name': 'ready for review'}],2020-08-03 17:56:32+00:00,2020-08-05 21:30:19+00:00,185627.0,"2 days, 3:33:47",[],"[{'commit_sha': '88b501f0678601549e7641a6c79a485708c1a446', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbe9d61fe6995b72dd5f7f1f22bfee5a93b6a266', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f48e0f44816fc6e072d7819035f8adc29fece36a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}]",Chakshu Gupta,6474622,,User,,19,,10,13
464672152,Oraganize .pcap files.,"It is ""In Progress"" right now.

Issue:  #122

* [x] add pcap files to database after they are closed ( or finished)
* [x] add to api
* [x] add to web UI (explorer) + download ability",True,123,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/123,https://github.com/OWASP/Python-Honeypot/pull/123,closed,934,181,17,26,3,4,3,0,"[{'name': 'GSOC'}, {'name': 'priority'}, {'name': 'ready for review'}]",2020-08-07 15:39:32+00:00,2020-08-15 22:43:39+00:00,716647.0,"8 days, 7:04:07","[{'comment_id': 467559383, 'comment_body': 'be more clear than `timeout`, maybe `split_pcap_file_timeout` or something similar. ', 'comment_created': datetime.datetime(2020, 8, 9, 9, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467559407, 'comment_body': 'same.', 'comment_created': datetime.datetime(2020, 8, 9, 9, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467559450, 'comment_body': 'same.', 'comment_created': datetime.datetime(2020, 8, 9, 9, 23, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467786878, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2020, 8, 10, 9, 30, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': '32261dee2d52138b0445e7795fa72d10c5a2d982', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '238a08ceb9f11f6fa886a8d1f727dabdc5eda18f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14d9ef708825b2f8fd5fd2e8dd91c4a8b9222cfb', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12a8d90a04aa16823698caafbbeebdbf672f19d3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '577d146fb36dc5efc07c98a031f96b98851be797', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ceb7a02df5f5ce35b2d26b1d2548acdbb7193aea', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '163c823fc46b56974aebe347207a8cc4e7a6dc6a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e538b15c29a4a797f68727cb692420295310f3d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cdfbd21da3600b224998d4b208754374a5e60d5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b33a9c46348d023ed38c442b5caf8f7a58111e4', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e2228aacbdd33a091feb5d7adda3f92fe2f5553', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28bc3db52ef8d33c25183512fe482b218e564213', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ab83da325d802c712fca8d881c4ceaea185c4c1', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5144c55c6a2bf7aa9af712d6fec436abccbe077e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dbc096a4a99603788f9eb94cb8f7a53ba4ad9c3', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ad48ccaa0a030126fdd062e6befc01fdbd82f2', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbc00222182c2b7d81de756c3c2c2d355bb84a12', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdb361b86e68142a9bd9b15fbc5b4654230f503e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41f31f048a90bca939df44815374cdd22be91cfe', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8856ba68f5ed3331678ce9f6ac6aa7e61b574012', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a57f660c4a1698331101891a8f626dd1670df85', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da2aececf9a47dcb1fe8d767f04440f7bd2e5318', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9942b14985d082bf36bfc5d2247739eb0ca1a944', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52cecc9bd7e9a7ee2bec10e122b89c7924f1bb32', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '444a44999efaec56a7f6a68e78f198f1f0c5984a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2156561d9a66ac60b05b4848dafc3da7282c6c3d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Chakshu Gupta,6474622,,User,,19,,10,13
466400118,clean and fixes,some fixes,True,136,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/136,https://github.com/OWASP/Python-Honeypot/pull/136,closed,4245,9279,36,11,0,8,2,0,"[{'name': 'GSOC'}, {'name': 'ready for review'}]",2020-08-11 23:01:26+00:00,2020-08-13 19:46:29+00:00,161103.0,"1 day, 20:45:03","[{'comment_id': 469411805, 'comment_body': 'this is breaking the lint ,line too long (113 > 80 characters)', 'comment_created': datetime.datetime(2020, 8, 12, 17, 9, 3, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 469412019, 'comment_body': 'typo', 'comment_created': datetime.datetime(2020, 8, 12, 17, 9, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 469592128, 'comment_body': 'I reconfigure flake8 to 120 chars now.', 'comment_created': datetime.datetime(2020, 8, 12, 22, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 469786341, 'comment_body': 'Why do we need this file?', 'comment_created': datetime.datetime(2020, 8, 13, 8, 32, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 469788102, 'comment_body': 'Variable defined in the class above is  `_ipv4dbcount` not `_ipv4dbcounts`', 'comment_created': datetime.datetime(2020, 8, 13, 8, 35, 35, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 469797720, 'comment_body': 'mistake...', 'comment_created': datetime.datetime(2020, 8, 13, 8, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 470004636, 'comment_body': 'this would be perfect if we are just supporting python3, then I guess we can remove version function too from compatible', 'comment_created': datetime.datetime(2020, 8, 13, 14, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 470075944, 'comment_body': ""it's already only python3..."", 'comment_created': datetime.datetime(2020, 8, 13, 16, 28, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}]","[{'commit_sha': '7c8f7878eddab6e32bc2c140684e57dfe3705ee4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c7624eb2f0fa42ddd8c844f206382274fa53d43e', 'committer_username': 'dependabot-preview[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 21, 12, 3, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6943e63c3a69284d5c06b64eb87918438e35e679', 'committer_username': 'dependabot-preview[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 21, 12, 3, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88acd5994909cc7a367b786dfa2d6619f96eb130', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6189f2e7f4da0cfe7304cc0de1c907b09d0c0a61', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eccfad6e36e051812a99bd7864a4c15a997d651c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7413227fca1336912a175f3a2f8f47de6f453a2c', 'committer_username': 'dependabot-preview[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 21, 12, 3, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1811dad16997a73ce04a58cdd2cbc8b57ef0f775', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '026d24bd5f9cb247cece7bcf322e008ce42d6c40', 'committer_username': 'dependabot-preview[bot]', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 4, 21, 12, 3, 36, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff4f22805c724200286a5a728d6312ed4d36ce7b', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f36286248927d1ad7985f7d0ace707b7880cd8a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Ali Razmjoo,7676267,,User,,13,,16,225
467670976,api refactor + remove duplicates,not ready for review yet...,True,140,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/140,https://github.com/OWASP/Python-Honeypot/pull/140,closed,1574,2225,15,99,12,6,2,0,"[{'name': 'GSOC'}, {'name': 'priority'}]",2020-08-13 22:51:51+00:00,2020-08-21 11:25:30+00:00,650019.0,"7 days, 12:33:39","[{'comment_id': 470880809, 'comment_body': 'name should be changed here too right if we are changing above?', 'comment_created': datetime.datetime(2020, 8, 14, 21, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 470883953, 'comment_body': 'right, fixed.', 'comment_created': datetime.datetime(2020, 8, 14, 22, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 471577787, 'comment_body': ""get top ten repeated elements in events , because now it's generic"", 'comment_created': datetime.datetime(2020, 8, 17, 15, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 471647309, 'comment_body': 'doc string of this also needs to be changed', 'comment_created': datetime.datetime(2020, 8, 17, 17, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 471660546, 'comment_body': ""I'll take a look.\r\n"", 'comment_created': datetime.datetime(2020, 8, 17, 17, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 471660711, 'comment_body': 'ok', 'comment_created': datetime.datetime(2020, 8, 17, 17, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}]","[{'commit_sha': 'a935b40dfdc43c971bfa959e83722282a76e4343', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68e50dd986bf3fdf454aadd834ef1c2c163651d5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f09a679a239074a126128f58bbd08e8d1f495dec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a36d733bf066b421f92e0f1b84238f98b8a1a813', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '94ff0a657cfc7508fcd2b9c88faf0e6452913e75', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '24a83be4e453e830066fff37328a00c01abd0bc5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '109e89832dc94419ff57465cb1ec7cfeb665e40f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '28ce1fa8455550851a08833dd0ea985c82d62cc6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '2da322a563d7ac0dc5ffdbb1f4b4b861df003cfb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '022e7f87c83902a269dc4edb5d682aa59ebbe8d2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd85f816434502a2175236f707af56682ba554cb5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '22bc6613bce34b0bfc273f9c5370714933944d6d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '73a0cedbf700b5be4b87ce61438b5fc65edf3ddc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'db14a2611f2028a3f288535f3525d889670c057e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a816be2268c6056601f51da5e0a0887a1bf4e33e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '22130683a8ddc65b1bba787e5d38d5dded16c7ac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6b905923a14ed0b3721f6a3f0ee7ba69acfca046', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9ae90bc45579861460252dd5d98d13e779fcbdd', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e713478f3bf9c53117246efedeaef718d3b8d983', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7b24117b30d6ac6d6b6a72b39d22b7e723827017', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0c921fad2cab590d95dd56b7fde52e87cd033ada', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '61045307d4b5b18e4862816d1b2dec647cdb631c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'df9cbca817fb43425f3ba417cf8a5b6cefd012c1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a2fb0da07982b6cd53905c3869a2ce7159591e1a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '81bad5f64b9afb2dc87210d7bd53db4841720029', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ebf18d25497ad4adf55b7d50ff0a67306d866d8e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7e9077af0b4dab117cf4a87d406cf2e18ccd6183', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4bb15d853c7122540885c4405d8f3c2687d3be41', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b06c4ca60f15a7c7519e9ec32a1c614aae1b497f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f478531a2c44e21c1b6ac810f6224be7188d5334', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c7d4c2232ea96f5764af45ad7754c987d2745850', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6b863bf6aaa3b67df842e72b9267655b14d1138f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'bc5a2cfc4dd01291d5a36f3542feaa7168fcc378', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7bb0d4a91c9c1569b3441dd1c7815848df73ee0f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9b98fe17021fdf575bbbcc7c0e7c0686a279d69a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '706000b222930212ee711a8004bae346dadbc90a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3449b27ef1f5d4b08a3e7301d16b1bb3405bd07b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e57a63cbc46b1a39c96530fb900e410ad03c5493', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ee9ea6ceb6694e67b981f7be05405f26cb48fc13', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9f2a12035925b24df236c82115dc6381c8620f54', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9cecad365b8cb062e55dc9ff9062ee629d57b5ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '539cbe3853419d2147fde1a77404cf5c52758e5a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c4c3c085a65abc75da2a8765c55ad6fa2da22593', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '68a506e0e53d2d5d27e10fe7871440997620458b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b67596363ca2a305bab41c5973e0a0ebf9e6be2e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '52ad4e8e540af5446e0635fca26c6c05e5d48918', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '40fc7094fbe6ed75582655be2b0b975773c043bc', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aacf9ed53ad846b23a3d7dd61782d5eea344b91', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '697dda6b60c7b7149691bd2d80ba339883bf80e7', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f15ce6cec57d0609685c743c96a45e64c71fba5', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76b05527ddf9b43d6c805adc333a994c562d5dfe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '90851ad584a1bf8b66dc1d6024005b9c56b44d6e', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b07dd48d9a28dae0fc55659ae23115b07192268', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43a9e94d1f34eaf16ceda9fed870e9b2395fff4a', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aea7842a8f5b42d7c1f8c0d078b1f6ad918104c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52adcbc5906c6a357525917d282d0e174555a701', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f6799e8dd26bb8dd98c121e1c8c01cbd891f09f', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9db3c51d1568a499401c9ae917a7654fbed81d60', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0655776d23579901362b30f54ead0314ced96edf', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86d6e8c7f7034b9aad031d3d7a9838d928539e1f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3bdc5b4799dd4249c271f43f2040a36d61382413', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dee3ba4d1ffecde6b6595097e636d22a4bbc9329', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '60aa79ce46b5853e99e60ca5dbbbf346f59308bb', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a725da84010307d5e6f95e3c61b77de44277117', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a935bbda005be4fce614664becfbbc24cb17124c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80400ff472ba9c15e7a6f1a3308bbcbb9202e057', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e0fb87ae8935fe10d5af502c72f5e00daee7dd6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '94d1129da9f10010df3d851e59138b5513c84603', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '8724595ad81844b5cfdb029d66ee2edbe25540c6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b6f7c61c8f3ffd480077e9369c5004aa7d0a0ec5', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b79c2c66c43c6870dfea028acc25ac63d623c9b9', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97b12703e6d8acc254389c7d52829cc2d459f91c', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '860a0e9cb21244bb5865b63fd4ab92798d4d17f2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b98cd9a4eac18df8135fce6d05539e518c16712e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1d9029f35c197878e95d358df23277462c60f4a3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67d636325d3509d904fd8a55cf61b6697bae5daf', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '898bd423577bc327d734a5d47511f14bdd60ab1a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b3d7948b2389b83b7f76c584dda791db1b9da719', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dde1c0b0956bbe3b7aa3549f8ed26af51b58613d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9b71f73c1519564ecaed94cc9e4793a92b4149', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2a29f1333cbb1764cb8c272e5c3ce662026506d', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8551bc37b531eb80a165295a52ef5d0f0040774', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcbb69004e400477c7123e3e881f11da5577c686', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8af01fd1c9a8d5a7a457536e5d9db4e1e789e714', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40b12a2a3bdbf12aff570f18d8aedd46bb1768ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '13ae07f31b9b41a3be39e5d2c2b5cd9f4e4a84ec', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '917d7b4e60058d8fdccce30d4eafbcf0d59f9989', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f4bdf09d79668e1d7899bfba498d78590432d67e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'eddc8cb562578fe7049297ee9583bb1ac9c9a5be', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '97d682c20530b53f87afccd33c2edf3d5802fd15', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f922d4669e4a48661c4fad889ce093481668be58', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e989ce46a66c982ceb74f7ec125545673dfeea69', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f10173daf34fea60cffb9a609a338a07f271fd3e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '340df9cd34dbf1223b73c2e7cac57f94a0b005b9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f84e0c04c760ccb0e49c686d7400bf36f8cf3fb6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7f8b0b91a3fedc150dffb9b8addb7813cb6687a0', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'dfe32a082fcbed7059903f8374fc3460cf543811', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '49c1ecdaa5ec28019ac7a5ec3279567c7daa5dd2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '23a6dc8e8e216624eb84d5ffd35f05cb35f6d8bc', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Ali Razmjoo,7676267,,User,,13,,16,225
463671560,added instructions for adding the modules.,,True,117,https://api.github.com/repos/OWASP/Python-Honeypot/pulls/117,https://github.com/OWASP/Python-Honeypot/pull/117,closed,285,36,7,12,9,9,1,2,[{'name': 'GSOC'}],2020-08-05 22:19:04+00:00,2020-09-13 15:46:21+00:00,3346037.0,"38 days, 17:27:17","[{'comment_id': 466920632, 'comment_body': 'with ""--test""', 'comment_created': datetime.datetime(2020, 8, 7, 9, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 467021258, 'comment_body': '@ChakshuGupta : module testing is with -m to run the module right?', 'comment_created': datetime.datetime(2020, 8, 7, 12, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dhirensr', 'type': 'User'}, {'comment_id': 467033466, 'comment_body': 'That would be for running the module and yes you can test it like that but technical testing would be with the `--test` flag.', 'comment_created': datetime.datetime(2020, 8, 7, 13, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ChakshuGupta', 'type': 'User'}, {'comment_id': 467068040, 'comment_body': '```suggestion\r\npython3 ohp.py -m protocol/moduleOrType\r\n```', 'comment_created': datetime.datetime(2020, 8, 7, 14, 15, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467070034, 'comment_body': '```suggestion\r\nOWASP Python Honeypot currently supports multiple types of protocols with different types and modules for various purposes like getting credentials, network events, files, honeypot events, and custom data coming from each module.\r\n```', 'comment_created': datetime.datetime(2020, 8, 7, 14, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467070397, 'comment_body': ""it's not clear to understand."", 'comment_created': datetime.datetime(2020, 8, 7, 14, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467071074, 'comment_body': '`__init__.py`? ', 'comment_created': datetime.datetime(2020, 8, 7, 14, 20, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467071282, 'comment_body': '`__init__.py`', 'comment_created': datetime.datetime(2020, 8, 7, 14, 20, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}, {'comment_id': 467071669, 'comment_body': '```suggestion\r\nFor setting up all the packages, libraries, scripts to run by the module.\r\n```', 'comment_created': datetime.datetime(2020, 8, 7, 14, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Ali-Razmjoo', 'type': 'User'}]","[{'commit_sha': '4d087cadc5fcc19ad499f0946a423299325e6a2f', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b36b607f65e1cc0fe5778586b7e12703ad34cd4e', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea3fcff4bb87a3eabbc6ee271ff8099d9211b557', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3088ebe23691970d41dad3c482a4797f5f84093', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b6837b36169c6f6839b5d16ce68871083401749e', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1015bb04d5e07dfdf81e8e382c269343e5a29113', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3864d6c481787614889b96c3d08a69d3f470f9f1', 'committer_username': 'dhirensr', 'committer_name': 'Dhiren Serai', 'committer_email': 'dhirensr@gmail.com', 'commit_date': datetime.datetime(2016, 1, 31, 6, 31, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fe8b61997f4b0a40ffe72d4a514edaacb0efceb', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b80acbdb1a38f579fe6d2677ad21a46903170b62', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ddb5d6df1fa7c96b8bb87b8e80f5d264fa781e88', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '965487f73580ab15ecc2bee5bae446087de673d0', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28cd3e0416554b6a67804183782e5099dafba602', 'committer_username': 'ChakshuGupta', 'committer_name': 'Chakshu Gupta', 'committer_email': None, 'commit_date': datetime.datetime(2014, 1, 22, 19, 18, 53, tzinfo=datetime.timezone.utc)}]",Dhiren Serai,16983076,dhirensr@gmail.com,User,,76,,21,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
139342061,Python-Honeypot,OWASP/Python-Honeypot,Python,138,422,24,15,1145,21,53,15,"[{'id': 471588850, 'number': 154, 'closed': datetime.datetime(2020, 8, 21, 19, 30, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 11, 54, 20, tzinfo=datetime.timezone.utc), 'time_taken': 27395.0, 'time_delta': '7:36:35', 'additions': 1575, 'deletions': 2226, 'state': 'closed'}, {'id': 465465117, 'number': 133, 'closed': datetime.datetime(2020, 8, 10, 18, 1, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 12, 18, 45, tzinfo=datetime.timezone.utc), 'time_taken': 20584.0, 'time_delta': '5:43:04', 'additions': 1366, 'deletions': 237, 'state': 'closed'}, {'id': 465397287, 'number': 129, 'closed': datetime.datetime(2020, 8, 10, 17, 52, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 9, 53, 40, tzinfo=datetime.timezone.utc), 'time_taken': 28724.0, 'time_delta': '7:58:44', 'additions': 3, 'deletions': 21, 'state': 'closed'}, {'id': 465006415, 'number': 124, 'closed': datetime.datetime(2020, 8, 8, 10, 39, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 8, 50, 36, tzinfo=datetime.timezone.utc), 'time_taken': 6523.0, 'time_delta': '1:48:43', 'additions': 119, 'deletions': 10, 'state': 'closed'}, {'id': 464672152, 'number': 123, 'closed': datetime.datetime(2020, 8, 15, 22, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 15, 39, 32, tzinfo=datetime.timezone.utc), 'time_taken': 716647.0, 'time_delta': '8 days, 7:04:07', 'additions': 934, 'deletions': 181, 'state': 'closed'}, {'id': 462317733, 'number': 115, 'closed': datetime.datetime(2020, 8, 5, 21, 30, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 3, 17, 56, 32, tzinfo=datetime.timezone.utc), 'time_taken': 185627.0, 'time_delta': '2 days, 3:33:47', 'additions': 50, 'deletions': 8, 'state': 'closed'}, {'id': 451914074, 'number': 103, 'closed': datetime.datetime(2020, 8, 7, 13, 47, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 12, 46, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1731663.0, 'time_delta': '20 days, 1:01:03', 'additions': 339, 'deletions': 245, 'state': 'closed'}, {'id': 444307887, 'number': 100, 'closed': datetime.datetime(2020, 8, 10, 12, 16, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 17, 12, 39, tzinfo=datetime.timezone.utc), 'time_taken': 3179013.0, 'time_delta': '36 days, 19:03:33', 'additions': 1322, 'deletions': 193, 'state': 'closed'}, {'id': 432795623, 'number': 93, 'closed': datetime.datetime(2020, 7, 20, 13, 18, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 2, 8, 18, tzinfo=datetime.timezone.utc), 'time_taken': 3409841.0, 'time_delta': '39 days, 11:10:41', 'additions': 272, 'deletions': 3, 'state': 'closed'}, {'id': 426228059, 'number': 89, 'closed': datetime.datetime(2020, 7, 20, 13, 8, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 21, 37, 58, tzinfo=datetime.timezone.utc), 'time_taken': 4203041.0, 'time_delta': '48 days, 15:30:41', 'additions': 689, 'deletions': 458, 'state': 'closed'}, {'id': 389516779, 'number': 75, 'closed': datetime.datetime(2020, 8, 7, 23, 0, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 22, 4, 21, tzinfo=datetime.timezone.utc), 'time_taken': 12444940.0, 'time_delta': '144 days, 0:55:40', 'additions': 476, 'deletions': 262, 'state': 'closed'}, {'id': 388675091, 'number': 74, 'closed': datetime.datetime(2020, 4, 10, 17, 27, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 15, 11, 43, 8, tzinfo=datetime.timezone.utc), 'time_taken': 2267062.0, 'time_delta': '26 days, 5:44:22', 'additions': 55, 'deletions': 0, 'state': 'closed'}]"
