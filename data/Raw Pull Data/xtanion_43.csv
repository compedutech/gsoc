pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
964822770,Adding support for importing simple glTF files,"This PR will allow us to load gltf files and get actors or `polydata` from it.

It currently supports:
- [x] multiple Nodes
- [x] multiple Meshes
- [x] Normals 
- [x] Cameras
- [x] Textures (baseColor)

Demo: 
![image](https://user-images.githubusercontent.com/74976752/174492510-b9f10816-3058-4a7b-a260-0627406354ba.png)

 

WIP: glTF exporter, tests",True,600,https://api.github.com/repos/fury-gl/fury/pulls/600,https://github.com/fury-gl/fury/pull/600,closed,807,9,11,37,16,56,1,0,[{'name': 'type:Enhancement'}],2022-06-11 19:13:14+00:00,2022-07-14 16:33:22+00:00,2841608.0,"32 days, 21:20:08","[{'comment_id': 895091578, 'comment_body': ""1. ` nodes: list[int]` Only works for python 3.9+\r\n2. use `default_factory` as suggested by the error `ValueError: mutable default <class 'list'> for field nodes is not allowed: use default_factory\r\n\r\n`"", 'comment_created': datetime.datetime(2022, 6, 12, 2, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895091762, 'comment_body': 'Only works for python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 2, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895091990, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 2, 26, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092017, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092025, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092035, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092039, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092054, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092059, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092086, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092126, 'comment_body': 'Typo in vertices ', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895115166, 'comment_body': ""Thanks for the wonderful review @m-agour, I didn't know it was a python>=3.9 feature. I will look into it."", 'comment_created': datetime.datetime(2022, 6, 12, 6, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 895169715, 'comment_body': '+1 Getting the same error on Python 3.9.13', 'comment_created': datetime.datetime(2022, 6, 12, 12, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 895440827, 'comment_body': 'Hi @m-agour and @ganimtron-10 , inorder to type hint lists you need to do the following:\r\n```python\r\nfrom typing import List\r\nnodes: List[int] = [0]\r\n```', 'comment_created': datetime.datetime(2022, 6, 13, 8, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 895441637, 'comment_body': 'Works on all existing python versions', 'comment_created': datetime.datetime(2022, 6, 13, 8, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 907493058, 'comment_body': 'you can use the fetcher now', 'comment_created': datetime.datetime(2022, 6, 27, 15, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907493835, 'comment_body': 'gltf or gltf_obj instead of `importer`', 'comment_created': datetime.datetime(2022, 6, 27, 15, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907494240, 'comment_body': 'typo: manually', 'comment_created': datetime.datetime(2022, 6, 27, 15, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907495596, 'comment_body': 'you do not need a loop., `scene.add(*actors)` should work if it is a list', 'comment_created': datetime.datetime(2022, 6, 27, 15, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907495900, 'comment_body': 'you do not need that with the fetcher\r\n', 'comment_created': datetime.datetime(2022, 6, 27, 15, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907496288, 'comment_body': 'pep8: import order', 'comment_created': datetime.datetime(2022, 6, 27, 15, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913843851, 'comment_body': '- `gltFImporter` ?  \r\n- replace `get_actors`  by `actors`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913845388, 'comment_body': 'this doc should be in the `__init__` function', 'comment_created': datetime.datetime(2022, 7, 5, 14, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913848700, 'comment_body': 'I recommend using `os.basename`.  Also, we talk about using the [`Pathlib`](https://docs.python.org/3/library/pathlib.html) module to avoid this and be compatible with all OS.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913848966, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2022, 7, 5, 14, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913849204, 'comment_body': 'comment to remove', 'comment_created': datetime.datetime(2022, 7, 5, 14, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913849639, 'comment_body': 'to rename `actors`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913854367, 'comment_body': 'not all actors/polydata have a texture/materials. So what happens in this case ` [polydata_with_texture1, polydata_no_texture, polydata_with_texture2]` ? I am afraid that the texture will be applied to the wrong polydata.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913855518, 'comment_body': '`inspect_scene` instead. When you use `get_*` , it should return something which is not the case here', 'comment_created': datetime.datetime(2022, 7, 5, 14, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913855943, 'comment_body': 'typo `Loop` ', 'comment_created': datetime.datetime(2022, 7, 5, 14, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913885683, 'comment_body': 'can you rename variable `T`? It is a good practice to avoid one letter variable. 3 letters minimum.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913886269, 'comment_body': 'can you rename variable `R`? It is a good practice to avoid one letter variable. 3 letters minimum.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913886457, 'comment_body': 'can you rename variable `S`? It is a good practice to avoid one letter variable. 3 letters minimum.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913889234, 'comment_body': 'you can create a new function `set_polydata_tcoords`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913890002, 'comment_body': 'what acc mean?', 'comment_created': datetime.datetime(2022, 7, 5, 14, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913892388, 'comment_body': ""```python       \r\n except IOError, e:\r\n            print(f'Failed to read ! Error in opening file: {e} ')\r\n```\r\n\r\ninstead"", 'comment_created': datetime.datetime(2022, 7, 5, 14, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913892806, 'comment_body': 'call it just `materials`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913893573, 'comment_body': 'textures ? not materials ?', 'comment_created': datetime.datetime(2022, 7, 5, 14, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913894499, 'comment_body': 'what is the goal of mrt and nt? you do not use them', 'comment_created': datetime.datetime(2022, 7, 5, 14, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913896497, 'comment_body': 'Note to myself: Code to revisit. should be simplified with existing function', 'comment_created': datetime.datetime(2022, 7, 5, 14, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913897171, 'comment_body': 'pep8 import order', 'comment_created': datetime.datetime(2022, 7, 5, 14, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913897659, 'comment_body': 'Do you need this? you have a fetcher, right?', 'comment_created': datetime.datetime(2022, 7, 5, 14, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913898893, 'comment_body': 'to remove. use temporaryDir from the standard package', 'comment_created': datetime.datetime(2022, 7, 5, 14, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913899889, 'comment_body': 'import order, pep8', 'comment_created': datetime.datetime(2022, 7, 5, 14, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913900784, 'comment_body': 'why you do not use it? need a test', 'comment_created': datetime.datetime(2022, 7, 5, 15, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913901161, 'comment_body': 'please, add a minimal version', 'comment_created': datetime.datetime(2022, 7, 5, 15, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913906507, 'comment_body': 'too long', 'comment_created': datetime.datetime(2022, 7, 5, 15, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913929553, 'comment_body': 'I wrote `acc` as a short form of `accessor`. Some lines can go long if I write the entire word.', 'comment_created': datetime.datetime(2022, 7, 5, 15, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 913965641, 'comment_body': ""As of now, we don't need them, I'll remove them for now."", 'comment_created': datetime.datetime(2022, 7, 5, 16, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 913997357, 'comment_body': ""Polydata and materials are saved in the same order. In the `load_mesh` function if there's no material data for the primitive, It appends `None`.\r\n\r\nSo in this case (`[polydata_with_texture1, polydata_no_texture, polydata_with_texture2]`) the self.materials would be `[texture1, None, texture2]`."", 'comment_created': datetime.datetime(2022, 7, 5, 16, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 914229780, 'comment_body': 'Hi @ganimtron-10, the issue you mentioned was caused by this line. I and @m-agour did some debugging and the using `os,path.basename` worked, as @skoudoro mentioned here.\r\n\r\nHere we only need the base directory in `self.pwd` so I used `self.pwd = os.path.dirname(filename)` instead.', 'comment_created': datetime.datetime(2022, 7, 5, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 914231557, 'comment_body': 'Sorry for the doc, `get_materials` actually returns the dictionary of all textures. I modified the doc now.', 'comment_created': datetime.datetime(2022, 7, 5, 21, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 915182005, 'comment_body': '`camera_id` is not used.  is it on purpose or there is an error below?', 'comment_created': datetime.datetime(2022, 7, 6, 19, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 915185817, 'comment_body': ""can you add \r\n```python\r\nif filename in ['', None]:\r\n  raise IOError(your message)\r\n```"", 'comment_created': datetime.datetime(2022, 7, 6, 19, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 915192527, 'comment_body': ""Please, add the mode.  in my case, this line was not working. \r\n\r\n`filename = read_viz_gltf('Duck', 'glTF' )` instead"", 'comment_created': datetime.datetime(2022, 7, 6, 19, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 915468779, 'comment_body': ""Yea, it's required to get the camera of a node from a list of `cameras`. It wasn't using it before. I modified the `load_camera` function now."", 'comment_created': datetime.datetime(2022, 7, 7, 5, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '1c9588954f2f93077e7006b0cfd7fbccd1ad06c6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff3db6d73d2d87427dabd315c74ea629efb2cd0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '873de184bd4dce8f2cc03e64971f42e66c511c55', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5636bfe4895e1e86f7e5412200112efab13b9604', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8348a6ea706c156cea36e9e070d6ee24af4178d2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1759ce5d7ff645c83a0af9016a8284e814565a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50b4543c0c0ba648a1cf076fa87116e9d88bd8d5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd5b05c86573ab61be7a650c8fbe0e7d1a13d0a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c1107d266b7edec7139b5c1edd81fd2338e3ac0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30ba52572b68c013574da97f09edd24a4305a8a9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfac295fb398fa8fce52d3340fbe8d2f8770df5b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5d267f33b794afd1003e8418b86f32221a9acc7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8801c4986af64a24982f99844dfd9ad0a29dad3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1996fda9c6bfadb985cb78b9362e80e27793324a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a459db7f381041edcfc107a2cc1af1f291abefa', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2788989fdc475a05fa33e8265e4ba83edf2a1fe3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff5a0d37a178a159d3743b490d7538aa805f1140', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81c1ca577010b3d6f40e1dbd94651de428bba11b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3532b7cfaa7d74225ee7c1fa736094ffefc40b45', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94132b8da4ab274a3aeabfd318b9fce481bc4b2f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d3c13f77e4bc0908aa489749e194d2ea0de7683', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc0e48d683ba04fdc36013c153b304a084813c93', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58779e6ef6acfb66567777211d3dff69a8d339bd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '917b03f2a81acf70db950765291c37d12448fa51', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b0f82c4d5d4b971ce4df7f29c4133a756135d5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce2d8147c713ed25aedc1a3ec8c14ba1d3bf6f8b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee3a2ebf3f7ff5d0cdf560b8dad269a7360ef95', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c981bdbbde25fd65f0b377d528292e27add66afb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e46d9718690d13ff1035629f745546187ce7960', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09b4e321240324554d42a778d3d7f8942a7685d3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae71e1cffbe9de583d3dafd50386cf0492cd9ee', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad3b764e1900473bcac17b5a373fda2b410df95a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad3ea3d0f8f3f86340404bb85a501d04a3c7dc23', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e69f39fd525d3108caacc7638ff79b7d8a8103', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60c4d69e241e1a91612a30dfc1f3840c7d1e7d9d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d8f9fc845526e767c0c99cfd54627134e601bd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c71f9a2c35bc5fcd9d1538084c8c179a3f8f326f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
964822770,Adding support for importing simple glTF files,"This PR will allow us to load gltf files and get actors or `polydata` from it.

It currently supports:
- [x] multiple Nodes
- [x] multiple Meshes
- [x] Normals 
- [x] Cameras
- [x] Textures (baseColor)

Demo: 
![image](https://user-images.githubusercontent.com/74976752/174492510-b9f10816-3058-4a7b-a260-0627406354ba.png)

 

WIP: glTF exporter, tests",True,600,https://api.github.com/repos/fury-gl/fury/pulls/600,https://github.com/fury-gl/fury/pull/600,closed,807,9,11,37,16,56,1,0,[{'name': 'type:Enhancement'}],2022-06-11 19:13:14+00:00,2022-07-14 16:33:22+00:00,2841608.0,"32 days, 21:20:08","[{'comment_id': 895091578, 'comment_body': ""1. ` nodes: list[int]` Only works for python 3.9+\r\n2. use `default_factory` as suggested by the error `ValueError: mutable default <class 'list'> for field nodes is not allowed: use default_factory\r\n\r\n`"", 'comment_created': datetime.datetime(2022, 6, 12, 2, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895091762, 'comment_body': 'Only works for python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 2, 59, 5, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895091990, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 2, 26, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092017, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 2, 42, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092025, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092035, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092039, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092054, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092059, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092086, 'comment_body': 'Only works in python 3.9+', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895092126, 'comment_body': 'Typo in vertices ', 'comment_created': datetime.datetime(2022, 6, 12, 3, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 895115166, 'comment_body': ""Thanks for the wonderful review @m-agour, I didn't know it was a python>=3.9 feature. I will look into it."", 'comment_created': datetime.datetime(2022, 6, 12, 6, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 895169715, 'comment_body': '+1 Getting the same error on Python 3.9.13', 'comment_created': datetime.datetime(2022, 6, 12, 12, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 895440827, 'comment_body': 'Hi @m-agour and @ganimtron-10 , inorder to type hint lists you need to do the following:\r\n```python\r\nfrom typing import List\r\nnodes: List[int] = [0]\r\n```', 'comment_created': datetime.datetime(2022, 6, 13, 8, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 895441637, 'comment_body': 'Works on all existing python versions', 'comment_created': datetime.datetime(2022, 6, 13, 8, 10, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Nibba2018', 'type': 'User'}, {'comment_id': 907493058, 'comment_body': 'you can use the fetcher now', 'comment_created': datetime.datetime(2022, 6, 27, 15, 4, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907493835, 'comment_body': 'gltf or gltf_obj instead of `importer`', 'comment_created': datetime.datetime(2022, 6, 27, 15, 5, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907494240, 'comment_body': 'typo: manually', 'comment_created': datetime.datetime(2022, 6, 27, 15, 6, 3, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907495596, 'comment_body': 'you do not need a loop., `scene.add(*actors)` should work if it is a list', 'comment_created': datetime.datetime(2022, 6, 27, 15, 7, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907495900, 'comment_body': 'you do not need that with the fetcher\r\n', 'comment_created': datetime.datetime(2022, 6, 27, 15, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 907496288, 'comment_body': 'pep8: import order', 'comment_created': datetime.datetime(2022, 6, 27, 15, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913843851, 'comment_body': '- `gltFImporter` ?  \r\n- replace `get_actors`  by `actors`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913845388, 'comment_body': 'this doc should be in the `__init__` function', 'comment_created': datetime.datetime(2022, 7, 5, 14, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913848700, 'comment_body': 'I recommend using `os.basename`.  Also, we talk about using the [`Pathlib`](https://docs.python.org/3/library/pathlib.html) module to avoid this and be compatible with all OS.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913848966, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2022, 7, 5, 14, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913849204, 'comment_body': 'comment to remove', 'comment_created': datetime.datetime(2022, 7, 5, 14, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913849639, 'comment_body': 'to rename `actors`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913854367, 'comment_body': 'not all actors/polydata have a texture/materials. So what happens in this case ` [polydata_with_texture1, polydata_no_texture, polydata_with_texture2]` ? I am afraid that the texture will be applied to the wrong polydata.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 18, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913855518, 'comment_body': '`inspect_scene` instead. When you use `get_*` , it should return something which is not the case here', 'comment_created': datetime.datetime(2022, 7, 5, 14, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913855943, 'comment_body': 'typo `Loop` ', 'comment_created': datetime.datetime(2022, 7, 5, 14, 19, 53, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913885683, 'comment_body': 'can you rename variable `T`? It is a good practice to avoid one letter variable. 3 letters minimum.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913886269, 'comment_body': 'can you rename variable `R`? It is a good practice to avoid one letter variable. 3 letters minimum.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 47, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913886457, 'comment_body': 'can you rename variable `S`? It is a good practice to avoid one letter variable. 3 letters minimum.', 'comment_created': datetime.datetime(2022, 7, 5, 14, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913889234, 'comment_body': 'you can create a new function `set_polydata_tcoords`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 49, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913890002, 'comment_body': 'what acc mean?', 'comment_created': datetime.datetime(2022, 7, 5, 14, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913892388, 'comment_body': ""```python       \r\n except IOError, e:\r\n            print(f'Failed to read ! Error in opening file: {e} ')\r\n```\r\n\r\ninstead"", 'comment_created': datetime.datetime(2022, 7, 5, 14, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913892806, 'comment_body': 'call it just `materials`', 'comment_created': datetime.datetime(2022, 7, 5, 14, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913893573, 'comment_body': 'textures ? not materials ?', 'comment_created': datetime.datetime(2022, 7, 5, 14, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913894499, 'comment_body': 'what is the goal of mrt and nt? you do not use them', 'comment_created': datetime.datetime(2022, 7, 5, 14, 54, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913896497, 'comment_body': 'Note to myself: Code to revisit. should be simplified with existing function', 'comment_created': datetime.datetime(2022, 7, 5, 14, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913897171, 'comment_body': 'pep8 import order', 'comment_created': datetime.datetime(2022, 7, 5, 14, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913897659, 'comment_body': 'Do you need this? you have a fetcher, right?', 'comment_created': datetime.datetime(2022, 7, 5, 14, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913898893, 'comment_body': 'to remove. use temporaryDir from the standard package', 'comment_created': datetime.datetime(2022, 7, 5, 14, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913899889, 'comment_body': 'import order, pep8', 'comment_created': datetime.datetime(2022, 7, 5, 14, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913900784, 'comment_body': 'why you do not use it? need a test', 'comment_created': datetime.datetime(2022, 7, 5, 15, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913901161, 'comment_body': 'please, add a minimal version', 'comment_created': datetime.datetime(2022, 7, 5, 15, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913906507, 'comment_body': 'too long', 'comment_created': datetime.datetime(2022, 7, 5, 15, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 913929553, 'comment_body': 'I wrote `acc` as a short form of `accessor`. Some lines can go long if I write the entire word.', 'comment_created': datetime.datetime(2022, 7, 5, 15, 27, 57, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 913965641, 'comment_body': ""As of now, we don't need them, I'll remove them for now."", 'comment_created': datetime.datetime(2022, 7, 5, 16, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 913997357, 'comment_body': ""Polydata and materials are saved in the same order. In the `load_mesh` function if there's no material data for the primitive, It appends `None`.\r\n\r\nSo in this case (`[polydata_with_texture1, polydata_no_texture, polydata_with_texture2]`) the self.materials would be `[texture1, None, texture2]`."", 'comment_created': datetime.datetime(2022, 7, 5, 16, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 914229780, 'comment_body': 'Hi @ganimtron-10, the issue you mentioned was caused by this line. I and @m-agour did some debugging and the using `os,path.basename` worked, as @skoudoro mentioned here.\r\n\r\nHere we only need the base directory in `self.pwd` so I used `self.pwd = os.path.dirname(filename)` instead.', 'comment_created': datetime.datetime(2022, 7, 5, 21, 45, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 914231557, 'comment_body': 'Sorry for the doc, `get_materials` actually returns the dictionary of all textures. I modified the doc now.', 'comment_created': datetime.datetime(2022, 7, 5, 21, 47, 48, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 915182005, 'comment_body': '`camera_id` is not used.  is it on purpose or there is an error below?', 'comment_created': datetime.datetime(2022, 7, 6, 19, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 915185817, 'comment_body': ""can you add \r\n```python\r\nif filename in ['', None]:\r\n  raise IOError(your message)\r\n```"", 'comment_created': datetime.datetime(2022, 7, 6, 19, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 915192527, 'comment_body': ""Please, add the mode.  in my case, this line was not working. \r\n\r\n`filename = read_viz_gltf('Duck', 'glTF' )` instead"", 'comment_created': datetime.datetime(2022, 7, 6, 19, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 915468779, 'comment_body': ""Yea, it's required to get the camera of a node from a list of `cameras`. It wasn't using it before. I modified the `load_camera` function now."", 'comment_created': datetime.datetime(2022, 7, 7, 5, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '1c9588954f2f93077e7006b0cfd7fbccd1ad06c6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ff3db6d73d2d87427dabd315c74ea629efb2cd0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '873de184bd4dce8f2cc03e64971f42e66c511c55', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5636bfe4895e1e86f7e5412200112efab13b9604', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8348a6ea706c156cea36e9e070d6ee24af4178d2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd1759ce5d7ff645c83a0af9016a8284e814565a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50b4543c0c0ba648a1cf076fa87116e9d88bd8d5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dd5b05c86573ab61be7a650c8fbe0e7d1a13d0a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c1107d266b7edec7139b5c1edd81fd2338e3ac0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30ba52572b68c013574da97f09edd24a4305a8a9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfac295fb398fa8fce52d3340fbe8d2f8770df5b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5d267f33b794afd1003e8418b86f32221a9acc7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8801c4986af64a24982f99844dfd9ad0a29dad3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1996fda9c6bfadb985cb78b9362e80e27793324a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0a459db7f381041edcfc107a2cc1af1f291abefa', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2788989fdc475a05fa33e8265e4ba83edf2a1fe3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff5a0d37a178a159d3743b490d7538aa805f1140', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81c1ca577010b3d6f40e1dbd94651de428bba11b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3532b7cfaa7d74225ee7c1fa736094ffefc40b45', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94132b8da4ab274a3aeabfd318b9fce481bc4b2f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d3c13f77e4bc0908aa489749e194d2ea0de7683', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc0e48d683ba04fdc36013c153b304a084813c93', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58779e6ef6acfb66567777211d3dff69a8d339bd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '917b03f2a81acf70db950765291c37d12448fa51', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64b0f82c4d5d4b971ce4df7f29c4133a756135d5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce2d8147c713ed25aedc1a3ec8c14ba1d3bf6f8b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee3a2ebf3f7ff5d0cdf560b8dad269a7360ef95', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c981bdbbde25fd65f0b377d528292e27add66afb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e46d9718690d13ff1035629f745546187ce7960', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09b4e321240324554d42a778d3d7f8942a7685d3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cae71e1cffbe9de583d3dafd50386cf0492cd9ee', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad3b764e1900473bcac17b5a373fda2b410df95a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad3ea3d0f8f3f86340404bb85a501d04a3c7dc23', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e69f39fd525d3108caacc7638ff79b7d8a8103', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60c4d69e241e1a91612a30dfc1f3840c7d1e7d9d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9d8f9fc845526e767c0c99cfd54627134e601bd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c71f9a2c35bc5fcd9d1538084c8c179a3f8f326f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
998625585,Adding function to export scenes as glTF,"This PR adds the ability to convert a scene as gltf file and can be loaded back using glTF loader (added in #600 ). 
",True,630,https://api.github.com/repos/fury-gl/fury/pulls/630,https://github.com/fury-gl/fury/pull/630,closed,556,8,3,17,3,11,1,0,[{'name': 'type:New Feature'}],2022-07-17 11:48:09+00:00,2022-08-18 16:05:00+00:00,2780211.0,"32 days, 4:16:51","[{'comment_id': 922876555, 'comment_body': '`from` instead of `for`', 'comment_created': datetime.datetime(2022, 7, 17, 18, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 923660390, 'comment_body': '`filename` instead', 'comment_created': datetime.datetime(2022, 7, 18, 17, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923661740, 'comment_body': 'missing docs for `boffset`\r\n', 'comment_created': datetime.datetime(2022, 7, 18, 17, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923663203, 'comment_body': 'maybe you should change `boffset` to `byteoffset` as per mention in the docs', 'comment_created': datetime.datetime(2022, 7, 18, 17, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923670400, 'comment_body': 'I think `camera_index` would be a more explanatory name', 'comment_created': datetime.datetime(2022, 7, 18, 18, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923693886, 'comment_body': 'Maybe you should try using full terms for eg. `vertex`, `color`, `material`, or something similar depending on the value they have. I am also a bit confused because you have written `verts` (plural) but as per the docs they store `int` (single value).', 'comment_created': datetime.datetime(2022, 7, 18, 18, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923694455, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 18, 18, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923695693, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 18, 18, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923695739, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 18, 18, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 924531833, 'comment_body': 'writing the entire parameter name for these functions can make the lines very long, also these parameters are explained in the docstring too.', 'comment_created': datetime.datetime(2022, 7, 19, 13, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 924533061, 'comment_body': 'same reason as above', 'comment_created': datetime.datetime(2022, 7, 19, 13, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '22b1fbb63858547b57e87ba51143619f7a1a3cae', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff024a523bac7a6cba38e03c4c4b84aeec73d20e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '579112458a184a939d44b16578ef074d0a25eb3e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94e546e8ff5b762124e3eceddb06e205fe212ce6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb07234bd457deaace3b42ea75f7b5991a545f26', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6c481c7876f9f1a0a835c8e30ea8ca0fc87dc8d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd629195e46ddf991d42a9f644b8aeeb807f827', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a8d23b733b1bda4e8ad3b6ef25bc8754f4197f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd235a997c16971f0615a02d7141379a4cd9bd65', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '440e9c27bb92d999ad28605d2fdebc65c0fb1825', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f43d41daaf159ebbc5fad97bb3b3ed10f702312', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94530e9dd6720e5b021fb9d8a0ec65786072d56c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7886cc3825b4dca030d8569d95a52c60585d905b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b24f754ca05e6fea3e958c244a9637f68b7908', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c117110bfa7ae672c16968acfa3a3027338b0e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19071aafedf6db7c0b836145c0afb52f3b37c1cd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ee3a45b29278a48e68a2c07656b4b6fad96c06b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
998625585,Adding function to export scenes as glTF,"This PR adds the ability to convert a scene as gltf file and can be loaded back using glTF loader (added in #600 ). 
",True,630,https://api.github.com/repos/fury-gl/fury/pulls/630,https://github.com/fury-gl/fury/pull/630,closed,556,8,3,17,3,11,1,0,[{'name': 'type:New Feature'}],2022-07-17 11:48:09+00:00,2022-08-18 16:05:00+00:00,2780211.0,"32 days, 4:16:51","[{'comment_id': 922876555, 'comment_body': '`from` instead of `for`', 'comment_created': datetime.datetime(2022, 7, 17, 18, 3, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 923660390, 'comment_body': '`filename` instead', 'comment_created': datetime.datetime(2022, 7, 18, 17, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923661740, 'comment_body': 'missing docs for `boffset`\r\n', 'comment_created': datetime.datetime(2022, 7, 18, 17, 52, 25, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923663203, 'comment_body': 'maybe you should change `boffset` to `byteoffset` as per mention in the docs', 'comment_created': datetime.datetime(2022, 7, 18, 17, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923670400, 'comment_body': 'I think `camera_index` would be a more explanatory name', 'comment_created': datetime.datetime(2022, 7, 18, 18, 1, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923693886, 'comment_body': 'Maybe you should try using full terms for eg. `vertex`, `color`, `material`, or something similar depending on the value they have. I am also a bit confused because you have written `verts` (plural) but as per the docs they store `int` (single value).', 'comment_created': datetime.datetime(2022, 7, 18, 18, 29, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923694455, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 18, 18, 30, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923695693, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 18, 18, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 923695739, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2022, 7, 18, 18, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 924531833, 'comment_body': 'writing the entire parameter name for these functions can make the lines very long, also these parameters are explained in the docstring too.', 'comment_created': datetime.datetime(2022, 7, 19, 13, 52, 32, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 924533061, 'comment_body': 'same reason as above', 'comment_created': datetime.datetime(2022, 7, 19, 13, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '22b1fbb63858547b57e87ba51143619f7a1a3cae', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff024a523bac7a6cba38e03c4c4b84aeec73d20e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '579112458a184a939d44b16578ef074d0a25eb3e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94e546e8ff5b762124e3eceddb06e205fe212ce6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb07234bd457deaace3b42ea75f7b5991a545f26', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6c481c7876f9f1a0a835c8e30ea8ca0fc87dc8d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecd629195e46ddf991d42a9f644b8aeeb807f827', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a8d23b733b1bda4e8ad3b6ef25bc8754f4197f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd235a997c16971f0615a02d7141379a4cd9bd65', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '440e9c27bb92d999ad28605d2fdebc65c0fb1825', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f43d41daaf159ebbc5fad97bb3b3ed10f702312', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94530e9dd6720e5b021fb9d8a0ec65786072d56c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7886cc3825b4dca030d8569d95a52c60585d905b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68b24f754ca05e6fea3e958c244a9637f68b7908', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29c117110bfa7ae672c16968acfa3a3027338b0e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19071aafedf6db7c0b836145c0afb52f3b37c1cd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9ee3a45b29278a48e68a2c07656b4b6fad96c06b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1007522436,[WIP] Adding ability to load glTF animations,"[WIP] This PR is still in progress. 

It adds ability to load animation data from glTF files.

TODO

- Docstrings
- Tests

Check out this [example](https://github.com/xtanion/fury/blob/gltf-anim-merge-kf/docs/tutorials/01_introductory/viz_simple_gltf_animation.py) (merged with PR #626) to see the animation.",True,643,https://api.github.com/repos/fury-gl/fury/pulls/643,https://github.com/fury-gl/fury/pull/643,closed,387,15,6,39,7,13,1,0,[{'name': 'type:Documentation'}],2022-07-25 16:28:06+00:00,2022-09-26 20:37:05+00:00,5458139.0,"63 days, 4:08:59","[{'comment_id': 950274820, 'comment_body': 'you have to create a new tutorial. Do not use the same one', 'comment_created': datetime.datetime(2022, 8, 19, 14, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970928795, 'comment_body': 'add a empty line above', 'comment_created': datetime.datetime(2022, 9, 14, 14, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970929442, 'comment_body': 'Also, we said to use `InterpolationTest`', 'comment_created': datetime.datetime(2022, 9, 14, 14, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970931344, 'comment_body': 'can you rename `get_main_timeline()` by `main_timeline`? This is the same principle as `actors`', 'comment_created': datetime.datetime(2022, 9, 14, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970932470, 'comment_body': 'please add `interactive` option and `window.render`. Currently, the doc can be generated', 'comment_created': datetime.datetime(2022, 9, 14, 14, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970933140, 'comment_body': 'what is temp?', 'comment_created': datetime.datetime(2022, 9, 14, 14, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970933864, 'comment_body': '`is_joint` instead', 'comment_created': datetime.datetime(2022, 9, 14, 14, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970934317, 'comment_body': 'missing `is_joint` docstring', 'comment_created': datetime.datetime(2022, 9, 14, 14, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970935462, 'comment_body': '`if nextnode_id not in self.bone_tranforms:` instead', 'comment_created': datetime.datetime(2022, 9, 14, 14, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978741844, 'comment_body': ""comment or/and code to remove if we don't need this"", 'comment_created': datetime.datetime(2022, 9, 23, 14, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978742533, 'comment_body': 'to remove', 'comment_created': datetime.datetime(2022, 9, 23, 14, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978742988, 'comment_body': 'to remove', 'comment_created': datetime.datetime(2022, 9, 23, 14, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978745578, 'comment_body': 'missing docstring. to rename `transform_from_matrix`', 'comment_created': datetime.datetime(2022, 9, 23, 14, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '0fa1b1abbb23672accdd814b192be8391696e632', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8e7ae9a3f46dc49e292d03c43a48c8f12b56bb7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cef3961a3f77479c886fc1c6cc76ddf36e6eaa4c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22896baf6eacb0db56e47a96958e2222f8a19a82', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df56c028ca747296eef9433986bb1e52e8abbd90', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4611847ab763c379557a301a255055a63fd636', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed7071f3490acb16f56fe828fa911392610f23e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75e7a147a0685c357e35fecda459c7ce5a54fbd9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '980f8e19dc3b95cd36b4a2b56cf9ad3ef6cfe47c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '409db15652ac3ab9368d8fea3a81b0098ea60613', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5be59638cf8d6b57f7557dd1d49e87a2a172bf0a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '541f626caefe40a336ca5e63a4cbbb97b1068053', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6af35d47ed39ebf38cb224d6a83af18ff2fe32', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8a9790c6084ade96731cacf2bc9c819f9cde8e7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eba0b27f266aab5c1f2574c3a230dfcb90bc8c0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c3f235b891e51c62bf399cdaafb7750ef4b56f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd239911ed6feeba23c640fa0946ae89b6d8750eb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02ba67a851b8d31b73242a7b050acd009aa8bed6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76c3cf72fe78ae46d138ecbf446eb02d67164d2d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b2b9b4984f244fb4a8e8b410d494ba7d17cb49', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58a478da9d3480a7232a7ce44dd4e5eee3a65742', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f783e4edef93875b087d7311ad9f28713787587', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '606e949a298efe5b8b2332ebd111284fafff600e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfd97655a15d16d57828097ae36cd36a964ffd77', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebbec41a3386614988b05d449e978b0133556b41', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8600e411f0908b2f25fba13a696b1e5ab4a827b6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2483635e3ed24048fcbc937d2ca87c832c36650', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c93234cd2b0f341204b2dde708c3680d8a5151b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23be1c1c529c3eead6a94b2ba03f29c7183938b6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe087c7d5b472cf5a8ac5a20a55f7b64dbd9c561', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0033d711cac64d576f6ddf3fb9c9bb3494bdfe21', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b021370464e2246394ec20fd987746b6d6905bf2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3644446cb77cf3a6231854840b3ce3f03420fe8', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447d34a3e49b6cf823ecee6e7b748183c7cf26cd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b3014b63fc9213a39284e9a905ce2fa9a464c7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5725c2990766f7231b9ac3f57648ac50612181c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a99994ab6d158b912518b8e627a6afe1a48a926', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6952d40f856c8aa15579095facccd01f56a96d9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bab54fa1dcf35e8a6cce581818652e7cb2820667', 'committer_username': 'skoudoro', 'committer_name': 'Serge Koudoro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 27, 18, 55, 21, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1007522436,[WIP] Adding ability to load glTF animations,"[WIP] This PR is still in progress. 

It adds ability to load animation data from glTF files.

TODO

- Docstrings
- Tests

Check out this [example](https://github.com/xtanion/fury/blob/gltf-anim-merge-kf/docs/tutorials/01_introductory/viz_simple_gltf_animation.py) (merged with PR #626) to see the animation.",True,643,https://api.github.com/repos/fury-gl/fury/pulls/643,https://github.com/fury-gl/fury/pull/643,closed,387,15,6,39,7,13,1,0,[{'name': 'type:Documentation'}],2022-07-25 16:28:06+00:00,2022-09-26 20:37:05+00:00,5458139.0,"63 days, 4:08:59","[{'comment_id': 950274820, 'comment_body': 'you have to create a new tutorial. Do not use the same one', 'comment_created': datetime.datetime(2022, 8, 19, 14, 47, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970928795, 'comment_body': 'add a empty line above', 'comment_created': datetime.datetime(2022, 9, 14, 14, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970929442, 'comment_body': 'Also, we said to use `InterpolationTest`', 'comment_created': datetime.datetime(2022, 9, 14, 14, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970931344, 'comment_body': 'can you rename `get_main_timeline()` by `main_timeline`? This is the same principle as `actors`', 'comment_created': datetime.datetime(2022, 9, 14, 14, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970932470, 'comment_body': 'please add `interactive` option and `window.render`. Currently, the doc can be generated', 'comment_created': datetime.datetime(2022, 9, 14, 14, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970933140, 'comment_body': 'what is temp?', 'comment_created': datetime.datetime(2022, 9, 14, 14, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970933864, 'comment_body': '`is_joint` instead', 'comment_created': datetime.datetime(2022, 9, 14, 14, 58, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970934317, 'comment_body': 'missing `is_joint` docstring', 'comment_created': datetime.datetime(2022, 9, 14, 14, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 970935462, 'comment_body': '`if nextnode_id not in self.bone_tranforms:` instead', 'comment_created': datetime.datetime(2022, 9, 14, 14, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978741844, 'comment_body': ""comment or/and code to remove if we don't need this"", 'comment_created': datetime.datetime(2022, 9, 23, 14, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978742533, 'comment_body': 'to remove', 'comment_created': datetime.datetime(2022, 9, 23, 14, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978742988, 'comment_body': 'to remove', 'comment_created': datetime.datetime(2022, 9, 23, 14, 34, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978745578, 'comment_body': 'missing docstring. to rename `transform_from_matrix`', 'comment_created': datetime.datetime(2022, 9, 23, 14, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '0fa1b1abbb23672accdd814b192be8391696e632', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8e7ae9a3f46dc49e292d03c43a48c8f12b56bb7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cef3961a3f77479c886fc1c6cc76ddf36e6eaa4c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22896baf6eacb0db56e47a96958e2222f8a19a82', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df56c028ca747296eef9433986bb1e52e8abbd90', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db4611847ab763c379557a301a255055a63fd636', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ed7071f3490acb16f56fe828fa911392610f23e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75e7a147a0685c357e35fecda459c7ce5a54fbd9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '980f8e19dc3b95cd36b4a2b56cf9ad3ef6cfe47c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '409db15652ac3ab9368d8fea3a81b0098ea60613', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5be59638cf8d6b57f7557dd1d49e87a2a172bf0a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '541f626caefe40a336ca5e63a4cbbb97b1068053', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb6af35d47ed39ebf38cb224d6a83af18ff2fe32', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8a9790c6084ade96731cacf2bc9c819f9cde8e7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2eba0b27f266aab5c1f2574c3a230dfcb90bc8c0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5c3f235b891e51c62bf399cdaafb7750ef4b56f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd239911ed6feeba23c640fa0946ae89b6d8750eb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02ba67a851b8d31b73242a7b050acd009aa8bed6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76c3cf72fe78ae46d138ecbf446eb02d67164d2d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5b2b9b4984f244fb4a8e8b410d494ba7d17cb49', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58a478da9d3480a7232a7ce44dd4e5eee3a65742', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f783e4edef93875b087d7311ad9f28713787587', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '606e949a298efe5b8b2332ebd111284fafff600e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfd97655a15d16d57828097ae36cd36a964ffd77', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebbec41a3386614988b05d449e978b0133556b41', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8600e411f0908b2f25fba13a696b1e5ab4a827b6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2483635e3ed24048fcbc937d2ca87c832c36650', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c93234cd2b0f341204b2dde708c3680d8a5151b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23be1c1c529c3eead6a94b2ba03f29c7183938b6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe087c7d5b472cf5a8ac5a20a55f7b64dbd9c561', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0033d711cac64d576f6ddf3fb9c9bb3494bdfe21', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b021370464e2246394ec20fd987746b6d6905bf2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3644446cb77cf3a6231854840b3ce3f03420fe8', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447d34a3e49b6cf823ecee6e7b748183c7cf26cd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b3014b63fc9213a39284e9a905ce2fa9a464c7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5725c2990766f7231b9ac3f57648ac50612181c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a99994ab6d158b912518b8e627a6afe1a48a926', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6952d40f856c8aa15579095facccd01f56a96d9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bab54fa1dcf35e8a6cce581818652e7cb2820667', 'committer_username': 'skoudoro', 'committer_name': 'Serge Koudoro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 27, 18, 55, 21, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1076381557,Adding morphing support in `gltf.py`,"**NOTE: Skinning PR (#685) needs to be merged before merging this**

Preview:
Using the `MorphStressTest` model and `TheWave` animation.

https://user-images.githubusercontent.com/74976752/193900336-8bd84ed5-af4e-4349-9c23-9c4557b09484.mp4

",True,700,https://api.github.com/repos/fury-gl/fury/pulls/700,https://github.com/fury-gl/fury/pull/700,closed,212,1,3,7,5,0,1,0,[{'name': 'type:New Feature'}],2022-10-04 18:43:32+00:00,2022-10-25 14:42:21+00:00,1799929.0,"20 days, 19:58:49",[],"[{'commit_sha': 'fb6a8e3cd0df35a6d32ac3fd54a35d4de852e8c8', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5269f9131e7dd282f755597070c21e0cfbf13587', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1feb9e622e7008c555c74ef0f5d23ce9f648e65', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a93664ddff00dab48323eb03974be0ff2990898', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8f5dba414f568fa0b1e37059dc75d4d461fff54', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12e58357bb10ebdc1ce5291549ffbcff1025c9a3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2486c11e909b39b64d1221d679b9c79315391782', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1076381557,Adding morphing support in `gltf.py`,"**NOTE: Skinning PR (#685) needs to be merged before merging this**

Preview:
Using the `MorphStressTest` model and `TheWave` animation.

https://user-images.githubusercontent.com/74976752/193900336-8bd84ed5-af4e-4349-9c23-9c4557b09484.mp4

",True,700,https://api.github.com/repos/fury-gl/fury/pulls/700,https://github.com/fury-gl/fury/pull/700,closed,212,1,3,7,5,0,1,0,[{'name': 'type:New Feature'}],2022-10-04 18:43:32+00:00,2022-10-25 14:42:21+00:00,1799929.0,"20 days, 19:58:49",[],"[{'commit_sha': 'fb6a8e3cd0df35a6d32ac3fd54a35d4de852e8c8', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5269f9131e7dd282f755597070c21e0cfbf13587', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1feb9e622e7008c555c74ef0f5d23ce9f648e65', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a93664ddff00dab48323eb03974be0ff2990898', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8f5dba414f568fa0b1e37059dc75d4d461fff54', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '12e58357bb10ebdc1ce5291549ffbcff1025c9a3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2486c11e909b39b64d1221d679b9c79315391782', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1054823543,glTF skinning animation implementation,latest update: `viz_skinning_hirearchical_transform.py`,True,685,https://api.github.com/repos/fury-gl/fury/pulls/685,https://github.com/fury-gl/fury/pull/685,closed,588,87,3,26,6,0,1,0,[{'name': 'type:New Feature'}],2022-09-13 14:55:50+00:00,2022-10-13 14:43:47+00:00,2591277.0,"29 days, 23:47:57",[],"[{'commit_sha': 'a7eff539e13b88b71a32ba021708f0527d820fdb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd145500e454bc8a357f4e288e5ab079d27745a59', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a33224f66b189a47c3b7c97956b37fa87f54c0b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fbfcac174a25f8be59d1d436282f6de5320c7c5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8463b0bf8b568fd04b60a8aac7f0acaa1a1c9fe6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4faea2692074766fda11d7a7ab5f4b5745d32e72', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9576a4bb2a489eaf70a61dba25b1483f01501f5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b6493e1a9c91e4d896735c91f538ce12f35c3f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59ba3cb4a48742d221bf6b6421262fe08c3454c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d4fbd0d57d63f5c463a3cd12dd599814f87337', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97572400f1f882fc55087c36ce84f2372658bb20', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9c8052e324d276bb021ff257f16e9b19b22be0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e74bc69d600796f01e59e6aabbc705a5ea393a30', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e11f374a17c4dc1e5108ebfb6c686983b893fa', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d5434f7db052c1c03856268a44d49cfc34c2387', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d63bdb58fa7b93f505670c0af703f6937c85e4', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eaf4513df37a4abf5f8ab22f6997f22be426fde', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41699896eddd28eb6f8d9b635e009350c20a0762', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9fe19a30772a3c47b1cbba27cf6fa1ef62d402e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6bb4cf0bf59e3ea73caa00de0276a2cd3b8e879', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36dcab74eee15c6e55121c1d119c9a4dcc45840e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25819f53772bcc1df828694c47fca4f06ea55ecb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e62edfa432212919109af0bce2a999ebdeaf384d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdac5a87eb63672b546f9f14b34161929e87bf0d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be47121d40845c831c229c53ab369855ec3ebfe', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c980c7bc82a08ccf65e47ab012c4a0a12279844', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1054823543,glTF skinning animation implementation,latest update: `viz_skinning_hirearchical_transform.py`,True,685,https://api.github.com/repos/fury-gl/fury/pulls/685,https://github.com/fury-gl/fury/pull/685,closed,588,87,3,26,6,0,1,0,[{'name': 'type:New Feature'}],2022-09-13 14:55:50+00:00,2022-10-13 14:43:47+00:00,2591277.0,"29 days, 23:47:57",[],"[{'commit_sha': 'a7eff539e13b88b71a32ba021708f0527d820fdb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd145500e454bc8a357f4e288e5ab079d27745a59', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a33224f66b189a47c3b7c97956b37fa87f54c0b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1fbfcac174a25f8be59d1d436282f6de5320c7c5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8463b0bf8b568fd04b60a8aac7f0acaa1a1c9fe6', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4faea2692074766fda11d7a7ab5f4b5745d32e72', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c9576a4bb2a489eaf70a61dba25b1483f01501f5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67b6493e1a9c91e4d896735c91f538ce12f35c3f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e59ba3cb4a48742d221bf6b6421262fe08c3454c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d4fbd0d57d63f5c463a3cd12dd599814f87337', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97572400f1f882fc55087c36ce84f2372658bb20', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9c8052e324d276bb021ff257f16e9b19b22be0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e74bc69d600796f01e59e6aabbc705a5ea393a30', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64e11f374a17c4dc1e5108ebfb6c686983b893fa', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d5434f7db052c1c03856268a44d49cfc34c2387', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d63bdb58fa7b93f505670c0af703f6937c85e4', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eaf4513df37a4abf5f8ab22f6997f22be426fde', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41699896eddd28eb6f8d9b635e009350c20a0762', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9fe19a30772a3c47b1cbba27cf6fa1ef62d402e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6bb4cf0bf59e3ea73caa00de0276a2cd3b8e879', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36dcab74eee15c6e55121c1d119c9a4dcc45840e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25819f53772bcc1df828694c47fca4f06ea55ecb', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e62edfa432212919109af0bce2a999ebdeaf384d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdac5a87eb63672b546f9f14b34161929e87bf0d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be47121d40845c831c229c53ab369855ec3ebfe', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c980c7bc82a08ccf65e47ab012c4a0a12279844', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
967932905,Added support for fetching gltf samples,"This PR allows us to fetch and save glTF models directly from [Khronos gltf-samples](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0) repository.

Demo:
```py

from fury.data import fetch_viz_gltf, read_viz_gltf

fetch_viz_gltf(['BoxTextured', 'Fox'])

fname = read_viz_gltf('Fox')
print(fname)

```",True,602,https://api.github.com/repos/fury-gl/fury/pulls/602,https://github.com/fury-gl/fury/pull/602,closed,263,3,3,13,12,35,1,0,[{'name': 'type:New Feature'}],2022-06-15 09:41:13+00:00,2022-06-27 13:19:17+00:00,1049884.0,"12 days, 3:38:04","[{'comment_id': 897790930, 'comment_body': 'Typo in `doesnot`', 'comment_created': datetime.datetime(2022, 6, 15, 10, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 900374831, 'comment_body': 'instead of `etc` can you list the current possible mode', 'comment_created': datetime.datetime(2022, 6, 17, 17, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 900375351, 'comment_body': 'use `isinstance` instead', 'comment_created': datetime.datetime(2022, 6, 17, 17, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 900375675, 'comment_body': 'use f-string please', 'comment_created': datetime.datetime(2022, 6, 17, 17, 26, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 900376614, 'comment_body': ""strange syntax, let's keep it simple"", 'comment_created': datetime.datetime(2022, 6, 17, 17, 28, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 900377046, 'comment_body': ""as we said, let's use asyncio and ahttpio"", 'comment_created': datetime.datetime(2022, 6, 17, 17, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 900377602, 'comment_body': '`list_gltf_sample_models` instead', 'comment_created': datetime.datetime(2022, 6, 17, 17, 29, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 900472059, 'comment_body': 'Yeah, that needs to be implemented I am working on it, after that this PR will be ready to be reviewed.', 'comment_created': datetime.datetime(2022, 6, 17, 20, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 904129156, 'comment_body': 'Why GITHUB?  they are all Github....  Please `GLTF_DATA_URL` instead', 'comment_created': datetime.datetime(2022, 6, 22, 18, 57, 52, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904133469, 'comment_body': 'No `s` for download', 'comment_created': datetime.datetime(2022, 6, 22, 19, 3, 32, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904133680, 'comment_body': '`s`for parameter', 'comment_created': datetime.datetime(2022, 6, 22, 19, 3, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904134107, 'comment_body': 'respect the length of the title above please. it generates warning or error during doc generation', 'comment_created': datetime.datetime(2022, 6, 22, 19, 4, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904174369, 'comment_body': 'please, add a test to make sure the list is not empty and that the default models above are available', 'comment_created': datetime.datetime(2022, 6, 22, 19, 56, 57, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904174617, 'comment_body': 'too long, please, be more rigorous.', 'comment_created': datetime.datetime(2022, 6, 22, 19, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904175682, 'comment_body': 'we need an interface for the user to call a classic function and not an async function.', 'comment_created': datetime.datetime(2022, 6, 22, 19, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904177312, 'comment_body': 'it would be good if you could use the `copyfileobj_withprogress` function.', 'comment_created': datetime.datetime(2022, 6, 22, 20, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 904869943, 'comment_body': 'Hi @skoudoro , can I use `update_progressbar` instead? `copyfileobj_withprogress` is not an async function, and we need await to read the response from `_download` function.', 'comment_created': datetime.datetime(2022, 6, 23, 10, 42, 24, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 905098021, 'comment_body': 'ok', 'comment_created': datetime.datetime(2022, 6, 23, 14, 32, 10, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905163384, 'comment_body': '`_fetch_gltf` instead. \r\n\r\ndo not forget the docstring...', 'comment_created': datetime.datetime(2022, 6, 23, 15, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905163929, 'comment_body': '`fetch_gltf` instead.  Why `viz`?', 'comment_created': datetime.datetime(2022, 6, 23, 15, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905164829, 'comment_body': 'still too long, be more rigorous please', 'comment_created': datetime.datetime(2022, 6, 23, 15, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905165059, 'comment_body': 'reminder', 'comment_created': datetime.datetime(2022, 6, 23, 15, 25, 38, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905201317, 'comment_body': 'In Python, you want to reduce the indentation when possible. To do that, always check if you can avoid the else. \r\n\r\nin this case, the `else` can be avoided.\r\n\r\n```python\r\nif not model_names:\r\n    raise an error\r\n\r\n# no need of the else here. \r\nresult = [model in model_names for model in default_models]\r\n....\r\n```\r\n', 'comment_created': datetime.datetime(2022, 6, 23, 15, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905208607, 'comment_body': 'What happens if I write ""duck"" instead of ""Duck""  or ""gltTF-binary"" instead of ""glTF-Binary""?\r\n\r\nit seems it generates an error that the user will not understand: `TypeError: string indices must be integers`\r\n\r\nPlease, check the case and check if the name or the mode exists.  if not, raise an understandable error.\r\n\r\n\r\nThat\'s why tests are needed on this PR.  Each feature should have its own test. you can create `test_gltf.py`\r\n. Then it will be merged with #600 later on. You might have some conflict but it is ok and they are easy to resolve.\r\n\r\nSo please, add tests on this PR, Check that the errors are raised as expected and the user gets the right files or information. thank you.\r\n\r\n\r\n\r\nAlso, all our fetchers are returns a dictionary with the list of fetched files. You can try another fetcher. We should have this behavior here which is not the case. \r\n\r\nThe code below should have the exact same behavior which is not the case currently.\r\n\r\n```python\r\nmyfiles = fetch_gltf()\r\nmyfiles = fetch_viz_textures()\r\n```\r\n\r\n', 'comment_created': datetime.datetime(2022, 6, 23, 16, 1, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 905228358, 'comment_body': ""Yeah, that's an issue. I need to add a check for name and model types. I'll do that.\r\nI'll add tests in this PR, Should I create a  new file for tests, for eg: `tests_fetcher` or `test_gltf_fetcher`?"", 'comment_created': datetime.datetime(2022, 6, 23, 16, 20, 40, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 905234914, 'comment_body': 'yes, new folder named `tests` in `fury.data`. Then a new file named test_fetcher.py', 'comment_created': datetime.datetime(2022, 6, 23, 16, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906459414, 'comment_body': 'Please, respect your parameter order.  Also, size is missing. ', 'comment_created': datetime.datetime(2022, 6, 24, 22, 46, 44, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906506904, 'comment_body': 'The tests of this function is missing. Please, add `test_list_gltf_sample_models()`  in your `test_fetcher.py`', 'comment_created': datetime.datetime(2022, 6, 24, 22, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906509453, 'comment_body': 'pep8: `urlretrieve` and `httperror` not used', 'comment_created': datetime.datetime(2022, 6, 24, 23, 1, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906510670, 'comment_body': 'We avoid as much as possible ""import *"".  Please, be more specific.', 'comment_created': datetime.datetime(2022, 6, 24, 23, 5, 59, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906510723, 'comment_body': 'pep8: not used\r\n', 'comment_created': datetime.datetime(2022, 6, 24, 23, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906511010, 'comment_body': 'pep8: import ordering.  check [here](https://peps.python.org/pep-0008/#imports) for more info', 'comment_created': datetime.datetime(2022, 6, 24, 23, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906707739, 'comment_body': 'hi @xtanion,\r\n\r\nWhere is the test concerning my comment above?\r\n\r\nas a reminder\r\n\r\n> The tests of this function is missing. Please, add `test_list_gltf_sample_models()`  in your `test_fetcher.py`', 'comment_created': datetime.datetime(2022, 6, 25, 17, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906707749, 'comment_body': 'Can you remove those print', 'comment_created': datetime.datetime(2022, 6, 25, 17, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 906716302, 'comment_body': 'Sorry I missed that comment. Added tests and removed those prints.', 'comment_created': datetime.datetime(2022, 6, 25, 19, 26, 37, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '67d496e92edb3f0b13fdc0a1f45b10ec672e043d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58fa15879bf87af280e5ceb50903d04ad6b08457', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '138b57eeec954a1a90e49a4b22a7416b9a412ae5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '913dfe64b488e74e2bcc192c0b258f38f8a161fd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da7b25c6e13a0ea215c9b3f59f18255a799348d2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a3afa24f17afc65e6614af3f4bf8270e272a9b1', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52d28d46b0bf71f8437c0212cc8eb8ee26611c84', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d2e3031dbda5e7427e1899a603a332695b125a8', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9715b28d2e5ee2f47581963b305aaf160b31a64', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b096a658a6b1008fa3210eb2f23e846b1762c15d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f28afb9df12d54b63142ae94e13925976713acbc', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79b137245b38b3a10c7fd16f24f7fb9ef50fac86', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'def111a9487b844f6ac17a384028b3c26972632b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
983698572,Fixing API limits reached issue in gltf fetcher,"This PR adds a JSON file containing downloadable links of all models from [glTF samples](https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0). This eliminates the need for API calls.

The json is generated using [this function](https://github.com/xtanion/fury/blob/gltf-json-gen/fury/data/fetcher.py#L330).",True,616,https://api.github.com/repos/fury-gl/fury/pulls/616,https://github.com/fury-gl/fury/pull/616,closed,4411,38,3,8,9,8,1,0,[{'name': 'type:Bug Fix'}],2022-06-30 11:09:54+00:00,2022-07-04 16:01:34+00:00,363100.0,"4 days, 4:51:40","[{'comment_id': 911627783, 'comment_body': ""There is some path joining issue in this test, because when I tried executing this test I got the below error.\r\n```python\r\nnpt.assert_equal(filename, pjoin(path, filenames[0]))\r\nE       AssertionError: \r\nE       Items are not equal:\r\nE        ACTUAL: 'C:\\\\Users\\\\ganim\\\\.fury\\\\glTF\\\\Box\\\\glTF-Binary\\\\Box.glb'\r\nE        DESIRED: 'C:\\\\Users\\\\ganim\\\\.fury\\\\glTF\\\\Box/glTF-Binary\\\\Box.glb'\r\n```"", 'comment_created': datetime.datetime(2022, 7, 1, 5, 34, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}, {'comment_id': 911650044, 'comment_body': ""Thanks @ganimtron-10 for the review, I get the issue, It didn't give me the error in the ubuntu system but as windows use `\\` in their file system, It did. I'll try to fix it asap.\r\nThanks"", 'comment_created': datetime.datetime(2022, 7, 1, 6, 24, 26, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 912544454, 'comment_body': 'I am surprised that this line works on `Windows`.\r\n\r\n@ganimtron-10 and @m-agour, can you show me the result (return value) of `fetch_gltf(...)`? ', 'comment_created': datetime.datetime(2022, 7, 3, 22, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 912544783, 'comment_body': 'same here. you can use something like `os.sep` instead of `/`', 'comment_created': datetime.datetime(2022, 7, 3, 22, 34, 30, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 912548083, 'comment_body': ""@skoudoro, it returns `(['Fox.bin', 'Fox.gltf', 'Texture.png'], 'C:\\\\Users\\\\msi\\\\.fury\\\\glTF\\\\Fox\\\\glTF')`\r\nI checked the folder. It's correct and includes the three files."", 'comment_created': datetime.datetime(2022, 7, 3, 23, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'm-agour', 'type': 'User'}, {'comment_id': 912699255, 'comment_body': ""Thanks for the review @skoudoro. `d_urls` is a list of all download URLs, as parts of the URL are joined by `/`. I'm splitting the URL and getting the last element which is the name of the file."", 'comment_created': datetime.datetime(2022, 7, 4, 7, 22, 39, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 912709292, 'comment_body': 'Yea, I think this needs to be changed.', 'comment_created': datetime.datetime(2022, 7, 4, 7, 35, 22, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 913036314, 'comment_body': 'Getting similar path value as given by @m-agour !!', 'comment_created': datetime.datetime(2022, 7, 4, 14, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ganimtron-10', 'type': 'User'}]","[{'commit_sha': '90e964108d26259b550863415668050eb8066edc', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60faad57fc0aac9a05fe9effd5094d321141dba9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35dd78f62237574a11cdcc628917d7f4cb04de1c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0f19cf8e22bcb9c225e5cf6b56791e8c38c95e0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6178eb373723c28f0685a0f5ca49aca289bb34a', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7259b1218f778ba7d19d56aa141f2fd4d5b075b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c468c668f5d9a4160e9004b937d23a86db84ce', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77114912f4f857ae31c144500e73fdbfb54fc6bc', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
829374463,Sphere actor uses repeat_primitive by default,Resolves #528 ,True,533,https://api.github.com/repos/fury-gl/fury/pulls/533,https://github.com/fury-gl/fury/pull/533,closed,164,32,6,30,6,27,1,0,[{'name': 'type:Enhancement'}],2022-01-22 10:11:46+00:00,2022-04-20 13:42:09+00:00,7615823.0,"88 days, 3:30:23","[{'comment_id': 790925792, 'comment_body': 'In this case, `phi` and `theta` and `opacity` are not used which is not good. \r\n\r\n- You will have to update the `prim_sphere` function to generate the point of a sphere following `phi` and `theta`\r\n- You will have to manage the opacity also.', 'comment_created': datetime.datetime(2022, 1, 24, 16, 29, 52, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 790927262, 'comment_body': 'We prefer to avoid using `pytest.mark.parametrize` so you can remove it and use a more traditional way', 'comment_created': datetime.datetime(2022, 1, 24, 16, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 790946051, 'comment_body': 'Thanks @skoudoro, I will be changing the `prim_sphere` function to use `phi` and `theta`. However, the opacity of the sphere is managed by the following line :\r\n```py\r\nactor.GetProperty().SetOpacity(opacity)\r\n```\r\nAnd opacity can also be set through colors parameter by passing (R,G,B,A) values', 'comment_created': datetime.datetime(2022, 1, 24, 16, 44, 34, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 790955867, 'comment_body': 'Indeed,  good catch, so forgets the opacity and focus just on the updating `prim_shere`.', 'comment_created': datetime.datetime(2022, 1, 24, 16, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 791731032, 'comment_body': ""Hi @skoudoro , I modified `prim_sphere` to use `theta` and `phi` . Here's the preview with phi=16, theta=16:\r\n![image](https://user-images.githubusercontent.com/74976752/150986062-ab4898cd-254b-4cd2-994e-0f19d6b2582f.png)\r\n\r\nI noticed faces of the sphere are **quadrilateral**, Is it fine to go with?"", 'comment_created': datetime.datetime(2022, 1, 25, 13, 51, 10, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 792876351, 'comment_body': 'In the `prim_sphere` method, it gets `vertices` and `faces` from`.npz` file and akes `name` and `gen_faces` parameters, should I replace it or make it optional to use `name` and `gen_faces` parameter.     ', 'comment_created': datetime.datetime(2022, 1, 26, 17, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 792884326, 'comment_body': 'you should keep it, it is really important', 'comment_created': datetime.datetime(2022, 1, 26, 17, 37, 27, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 792885576, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2022, 1, 26, 17, 39, 3, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 792885627, 'comment_body': '> I noticed faces of the sphere are quadrilateral, Is it fine to go with?\r\n\r\nand yes, it is fine. As an option, we should be able to increase the number of points (density) and the quadrilateral will be smaller.', 'comment_created': datetime.datetime(2022, 1, 26, 17, 39, 7, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 794621957, 'comment_body': 'Hi @skoudoro, made the required changes to the `prim_sphere`. Can you please have a look?', 'comment_created': datetime.datetime(2022, 1, 28, 15, 46, 29, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 796899867, 'comment_body': '`if not phi or not theta:`', 'comment_created': datetime.datetime(2022, 2, 1, 18, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 796900709, 'comment_body': '`return verts, faces` at the end. Then you do not need the `else` + indentation ', 'comment_created': datetime.datetime(2022, 2, 1, 18, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 796901949, 'comment_body': '`use_primitive` instead of `prim`', 'comment_created': datetime.datetime(2022, 2, 1, 18, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 796902557, 'comment_body': '`return sphere_actor`. you do not need the `else` and the indentation', 'comment_created': datetime.datetime(2022, 2, 1, 18, 55, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 796954118, 'comment_body': 'Why `theta-1`? What happen if `theta=0`?', 'comment_created': datetime.datetime(2022, 2, 1, 19, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 797290264, 'comment_body': ""Thanks @skoudoro for the review, I'll be changing that to`if not phi or not theta`"", 'comment_created': datetime.datetime(2022, 2, 2, 5, 41, 42, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 797290560, 'comment_body': ""Okay, I'll change that."", 'comment_created': datetime.datetime(2022, 2, 2, 5, 42, 31, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 797303462, 'comment_body': ""Okay, I'll make the changes."", 'comment_created': datetime.datetime(2022, 2, 2, 6, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 797308147, 'comment_body': ""I tried using `(0, theta)` but in that case, the top and bottom vertices were created multiple times, Here I'm adding the top and bottom vertices (`_points`) after all of the other vertices are created.\r\n\r\nThe minimum value of `theta` can be `3`. At `theta <=2` won't be a 3D shape.\r\nIn `sphere_actor` (using SphereSource) if we decrease `theta` or `phi` to  less than 3, it returns the actor with `theta=3` or `phi=3`."", 'comment_created': datetime.datetime(2022, 2, 2, 6, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 802332879, 'comment_body': ""Hi @skoudoro, I've added the checks for `phi` and `theta`. Compared with `sphere_actor`, this is how it looks at `theta` and `phi` equal to 0.\r\n\r\nhttps://user-images.githubusercontent.com/74976752/153140745-2bcc33cc-0e11-4623-a7b4-d57f37b792a0.mp4\r\n\r\nIs it the correct way of implementing this?\r\n\r\nAlso, in the primitive actor testing colors with lower values (`< 27`) of  `phi` and `theta` is not passing, I think it's happening due to camera angle. If the camera is not right at top of the face, we won't get the exact color of the face (color will look darker or lighter at other angles)."", 'comment_created': datetime.datetime(2022, 2, 9, 7, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 852419790, 'comment_body': '`FURY` capital', 'comment_created': datetime.datetime(2022, 4, 18, 21, 14, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 852419957, 'comment_body': '`False` instead', 'comment_created': datetime.datetime(2022, 4, 18, 21, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 852420379, 'comment_body': 'Can you explain why `phi=30, theta=30`?  otherwise do not put them.', 'comment_created': datetime.datetime(2022, 4, 18, 21, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 852421142, 'comment_body': 'pick a color instead of random. Other  we do not know which one is the primitive or the vtksource', 'comment_created': datetime.datetime(2022, 4, 18, 21, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 852421575, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2022, 4, 18, 21, 17, 29, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 852453798, 'comment_body': '`and` instead of `&`', 'comment_created': datetime.datetime(2022, 4, 18, 22, 21, 6, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 853195990, 'comment_body': ""There's no specific reason for that, removed it."", 'comment_created': datetime.datetime(2022, 4, 19, 15, 14, 31, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '2f1c0c805fd41a92d62ede58cb94ab29c0a822a5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9725add0136455555c16cafd51fbc3d925dd1d25', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f77c376c6facc3825f1f19a4112b6572ce88b67', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d6219cfc383c46f2fc1d0ec740e3a04704bde15', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bea31e2512eedfd8a1ec2232eb8be66500cedb4', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54158ca2b81c8b97148c8345ce7a3d3eaa527ea2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd096b5fdb0ccd25c5066fafcecb360a9148b92a9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec9fb0db83956c524b569d6ba71c9bc270b3842c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acdcf4e13b39a4486cf321f6ecd34ad8e7a47410', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ed717154087dc3714cc510fc70d3294803d94a4', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b426fe40c0df49e1658886e27881602531c87ca1', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea563bd294be6aedc98802c1ae9235a8ca86aa7', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37b85b270afb48021d8e810f9f808710222232b9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0706189caa723da35cdd5d721aad7c889c88e55', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3d11803e59d62060a912e14a2cce6a68641735e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f676b1d3dbebdff279cfa413a7d3b5efda8c5496', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e2271a6ff1cc813b233081fcef6d2ea26f18723', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a4b8a4b414df6832cefe85803867b9c7c14f8b9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '403c8368add294f474c43c8449029133dd89bb17', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3809d7536c830a2a89acd953fdb1bb299a5b9f04', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d864125a3f6a0f0c092e4d2d94bde7ea9c429c9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df8640c73a283f8a2cfd487faeb4ba6df1dd0846', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '785c40895aa69164165b847874eb56a8a5ea6871', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bda4436ae1fa9912a5e5fcbae383884b2d026b33', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2066efedfa40775ce20739ce7a911ab2f14d9ad', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8a1fd2748f7f613ccfab507c52e1b1c363e6c33', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da0ae0c9d808dc17646a61eb9a775e85f80835ab', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e18417a345f41005aba75769bfbb587cf44d658', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9576cec21b32136bc0807de6723c0aa082d83a32', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6dbd2ff49a56f9dda23a9acfc84bc25bf13d5537', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
857616799,Cone actor uses `repeat_primitive` by default,Resolves issue #529 ,True,547,https://api.github.com/repos/fury-gl/fury/pulls/547,https://github.com/fury-gl/fury/pull/547,closed,184,18,5,7,2,13,1,0,[{'name': 'type:New Feature'}],2022-02-18 20:04:35+00:00,2022-04-15 15:04:35+00:00,4820400.0,"55 days, 19:00:00","[{'comment_id': 849657867, 'comment_body': '`bool, optional` instead', 'comment_created': datetime.datetime(2022, 4, 13, 16, 6, 9, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 849659205, 'comment_body': '`float, optional` instead', 'comment_created': datetime.datetime(2022, 4, 13, 16, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 849659269, 'comment_body': '`float, optional` instead', 'comment_created': datetime.datetime(2022, 4, 13, 16, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 849659383, 'comment_body': '`int, optional` instead', 'comment_created': datetime.datetime(2022, 4, 13, 16, 7, 56, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 849659959, 'comment_body': '`if sectors < 2:` instead', 'comment_created': datetime.datetime(2022, 4, 13, 16, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 849919213, 'comment_body': '> Hi @xtanion,\r\n> \r\n> There is some conflict in your branch. Can you resolve them? Can you update the tutorial or add one.\r\n> \r\n> look at this [PR](https://github.com/fury-gl/fury/pull/552/files) for an example\r\n> \r\n> Thank you\r\n\r\nThanks for the review @skoudoro, I made the changes, please take a look.\r\nThanks.', 'comment_created': datetime.datetime(2022, 4, 13, 21, 36, 50, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 850022537, 'comment_body': 'Thank you for the update. Unfortunately, tests are failing so I will check only after you fix the tests.', 'comment_created': datetime.datetime(2022, 4, 14, 1, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 850022912, 'comment_body': '`False` instead', 'comment_created': datetime.datetime(2022, 4, 14, 1, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 850023007, 'comment_body': 'why `viz_markers` ?', 'comment_created': datetime.datetime(2022, 4, 14, 1, 57, 26, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 850024722, 'comment_body': '`else` not needed', 'comment_created': datetime.datetime(2022, 4, 14, 2, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 850269070, 'comment_body': ""Hi @skoudoro, I just figured out that `advanced_geometry_test` was failing due to the `arrow_actor`. changing the `height` parameter with `scale` fixes the size of arrows 😅  .\r\nI changed the `axes` actor's `repeat_primitive=False`, `window.snapshot` wasn't detecting colors while using primitive arrows."", 'comment_created': datetime.datetime(2022, 4, 14, 9, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 850579028, 'comment_body': 'Wrote that by mistake, Modified to `viz_cone`.', 'comment_created': datetime.datetime(2022, 4, 14, 15, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 850579395, 'comment_body': 'Done', 'comment_created': datetime.datetime(2022, 4, 14, 15, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '283e7b6123dca726b5fdebe2fa0cea62fb327ac9', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b76140e93386fc46697469774220ebb5c1522ce5', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67da49e49538419e9f47d9c7b1f7b52c6937fb5f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edd672388b2c4a1936574347d96e8873e0fe4c98', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '724759e73bba13dc4552578c2f3bf52872b5868b', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75106deef18892bcef085ccb3d665a15a460da6f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6dec822179ae07c09b7a9088bc7ba672d5bf9c0', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
881025524,Updated code of `viz_network_animated` to use `fury.utils`,Refreshed code of demo `viz_network_animated` as per #553 to use `fury.utils` function.,True,556,https://api.github.com/repos/fury-gl/fury/pulls/556,https://github.com/fury-gl/fury/pull/556,closed,15,18,1,8,2,4,1,0,[{'name': 'type:Documentation'}],2022-03-16 07:27:31+00:00,2022-04-04 16:12:10+00:00,1673079.0,"19 days, 8:44:39","[{'comment_id': 836532816, 'comment_body': '`vertices_from_actor(sphere_actor).copy()` instead. you will have to import the function from `utils`', 'comment_created': datetime.datetime(2022, 3, 28, 15, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836533244, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2022, 3, 28, 15, 2, 15, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836533388, 'comment_body': 'same comment as above', 'comment_created': datetime.datetime(2022, 3, 28, 15, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 837270024, 'comment_body': 'done @skoudoro, PTAL\r\nthanks', 'comment_created': datetime.datetime(2022, 3, 29, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '41f52bcd25c6419e381b3e379231c260f92dd0b3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d4f698aa442772cfc4f6b62b27b23f5e3389e8e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb980a739fced36668b4e88ba9465feb2b8b87d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59f7c2ccd5bbbb79989280571d49d217f8c2ad9c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '156e907d3c6ba6d8024b9f9481e1ce1c662e33e1', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebb19994d3ad623ee3a9f38419f9e9ddd3a5feab', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8fd204c2575a9568bf8968630ee729aec05c51f', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a645820db99f515fdfb8ae3b3a9de60d614258e4', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
885252674,Added simulation for Tesseract,"I made a small simulation of rotating tesseract (hypercube) in Fury. here's a preview:

https://user-images.githubusercontent.com/74976752/159353127-42208110-00f9-422a-bfa0-d549f7de9418.mp4


",True,559,https://api.github.com/repos/fury-gl/fury/pulls/559,https://github.com/fury-gl/fury/pull/559,closed,196,0,1,10,2,7,1,0,[{'name': 'type:Documentation'}],2022-03-21 19:53:47+00:00,2022-04-04 16:17:27+00:00,1196620.0,"13 days, 20:23:40","[{'comment_id': 836473334, 'comment_body': 'We recommend avoiding using a list of `np.array` because we observe memory issues.\r\n\r\nCan you update your code? You can create another `np.array` with an additional dimension.', 'comment_created': datetime.datetime(2022, 3, 28, 14, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836474250, 'comment_body': 'Can you add space between operator', 'comment_created': datetime.datetime(2022, 3, 28, 14, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836475842, 'comment_body': 'same comment as above.\r\n\r\nWe recommend avoiding using a list of `np.array` because we observe memory issues.\r\n\r\nCan you update your code? You can create another `np.array` with an additional dimension.', 'comment_created': datetime.datetime(2022, 3, 28, 14, 11, 20, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836477337, 'comment_body': 'please, add space around operator', 'comment_created': datetime.datetime(2022, 3, 28, 14, 12, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836480364, 'comment_body': 'you need to add a stopping criterium, the tutorial never stops so we can not generate the documentation', 'comment_created': datetime.datetime(2022, 3, 28, 14, 15, 26, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 836711945, 'comment_body': 'Thanks for the review @skoudoro, Can I use np.zeros() and then change the elements or use np.array() then append the projected_mat3D ?', 'comment_created': datetime.datetime(2022, 3, 28, 18, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}, {'comment_id': 836715354, 'comment_body': 'both are ok', 'comment_created': datetime.datetime(2022, 3, 28, 18, 14, 14, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}]","[{'commit_sha': '41f52bcd25c6419e381b3e379231c260f92dd0b3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d4f698aa442772cfc4f6b62b27b23f5e3389e8e', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'beb980a739fced36668b4e88ba9465feb2b8b87d', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59f7c2ccd5bbbb79989280571d49d217f8c2ad9c', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '156e907d3c6ba6d8024b9f9481e1ce1c662e33e1', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd29f2f2e22c7ccc57409c9e9fd0e5023f77a30bf', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '897c0b605bb4b058dab6bcddc6bc6c92c20f5622', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '10206380369de0249cd6d196d5c39a730b97b866', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cd237712aeaa8cff633574cf9078569c5779ec3', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d5903ebae1406826827d76c550139b4b4e02aa2', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29
1059608144,GLTF actor colors from material,"This small PR adds the ability to add colors to the actor from `materials` in the glTF file.

Example: Run the `BrainStem` model in `viz_gltf.py`
![viz_gltf](https://user-images.githubusercontent.com/74976752/190923799-a78634d0-d178-4b29-9aa8-9323ccaddefe.png)


Other models with material colors:
- BoxAnimated
- RiggedSimple
- [2 Cylinder Engine](https://github.com/KhronosGroup/glTF-Sample-Models/blob/master/2.0/2CylinderEngine)
- [Water Bottle](https://github.com/KhronosGroup/glTF-Sample-Models/blob/master/2.0/WaterBottle)
- [Buggy](https://github.com/KhronosGroup/glTF-Sample-Models/blob/master/2.0/Buggy) and many more.",True,689,https://api.github.com/repos/fury-gl/fury/pulls/689,https://github.com/fury-gl/fury/pull/689,closed,33,11,5,5,1,5,1,0,[{'name': 'type:Enhancement'}],2022-09-18 18:57:42+00:00,2022-09-27 04:28:25+00:00,725443.0,"8 days, 9:30:43","[{'comment_id': 978071659, 'comment_body': 'please remove comment', 'comment_created': datetime.datetime(2022, 9, 22, 20, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978071823, 'comment_body': 'please, do not change the initial tutorial', 'comment_created': datetime.datetime(2022, 9, 22, 20, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978761734, 'comment_body': 'typo to change everywhere: `apply_transformation`', 'comment_created': datetime.datetime(2022, 9, 23, 14, 52, 31, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 978762501, 'comment_body': 'do we have a function in `fury.utils` for doing that?', 'comment_created': datetime.datetime(2022, 9, 23, 14, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'skoudoro', 'type': 'User'}, {'comment_id': 980278666, 'comment_body': 'No, we have a similar function `set_polydata_colors`', 'comment_created': datetime.datetime(2022, 9, 26, 16, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'xtanion', 'type': 'User'}]","[{'commit_sha': '818d74b2d15ee2d49bb54800a5cd2f6b12760c78', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cee2182f885617101a7b23c11cbe76a65998e0cd', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82554b08c2791dad2b8501061bf58240a94fe892', 'committer_username': 'xtanion', 'committer_name': 'Shivam Anand', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 24, 15, 27, 4, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ecc1859602ef06be81e396ffbd2282bf8c314546', 'committer_username': 'skoudoro', 'committer_name': 'Serge Koudoro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 27, 18, 55, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a857d10e08f4d61f58a46c71eacd6f977d5a9328', 'committer_username': 'skoudoro', 'committer_name': 'Serge Koudoro', 'committer_email': None, 'commit_date': datetime.datetime(2016, 10, 27, 18, 55, 21, tzinfo=datetime.timezone.utc)}]",Shivam Anand,74976752,,User,,53,,27,29

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
149529946,fury,fury-gl/fury,Python,165,229,20,88,5461,139,11,58,"[{'id': 1223862943, 'number': 736, 'closed': datetime.datetime(2023, 2, 8, 21, 3, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 31, 20, 32, 7, tzinfo=datetime.timezone.utc), 'time_taken': 693079.0, 'time_delta': '8 days, 0:31:19', 'additions': 315, 'deletions': 0, 'state': 'closed'}, {'id': 1157325011, 'number': 715, 'closed': None, 'created': datetime.datetime(2022, 12, 10, 7, 10, 48, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 177, 'deletions': 22, 'state': 'open'}, {'id': 1076381557, 'number': 700, 'closed': datetime.datetime(2022, 10, 25, 14, 42, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 4, 18, 43, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1799929.0, 'time_delta': '20 days, 19:58:49', 'additions': 212, 'deletions': 1, 'state': 'closed'}, {'id': 1070452878, 'number': 697, 'closed': datetime.datetime(2022, 10, 13, 19, 37, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 28, 19, 23, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1296854.0, 'time_delta': '15 days, 0:14:14', 'additions': 49, 'deletions': 0, 'state': 'closed'}, {'id': 1059608144, 'number': 689, 'closed': datetime.datetime(2022, 9, 27, 4, 28, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 18, 18, 57, 42, tzinfo=datetime.timezone.utc), 'time_taken': 725443.0, 'time_delta': '8 days, 9:30:43', 'additions': 33, 'deletions': 11, 'state': 'closed'}, {'id': 1057710666, 'number': 686, 'closed': datetime.datetime(2022, 9, 23, 14, 49, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 15, 17, 54, 29, tzinfo=datetime.timezone.utc), 'time_taken': 680117.0, 'time_delta': '7 days, 20:55:17', 'additions': 43, 'deletions': 0, 'state': 'closed'}, {'id': 1054823543, 'number': 685, 'closed': datetime.datetime(2022, 10, 13, 14, 43, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 13, 14, 55, 50, tzinfo=datetime.timezone.utc), 'time_taken': 2591277.0, 'time_delta': '29 days, 23:47:57', 'additions': 588, 'deletions': 87, 'state': 'closed'}, {'id': 1050674051, 'number': 682, 'closed': datetime.datetime(2022, 9, 14, 14, 50, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 18, 21, 19, tzinfo=datetime.timezone.utc), 'time_taken': 505733.0, 'time_delta': '5 days, 20:28:53', 'additions': 47, 'deletions': 0, 'state': 'closed'}, {'id': 1042987971, 'number': 676, 'closed': datetime.datetime(2022, 9, 6, 15, 29, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 31, 22, 58, 1, tzinfo=datetime.timezone.utc), 'time_taken': 491508.0, 'time_delta': '5 days, 16:31:48', 'additions': 37, 'deletions': 0, 'state': 'closed'}, {'id': 1036974848, 'number': 670, 'closed': datetime.datetime(2022, 8, 29, 13, 48, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 25, 16, 6, 42, tzinfo=datetime.timezone.utc), 'time_taken': 337286.0, 'time_delta': '3 days, 21:41:26', 'additions': 43, 'deletions': 0, 'state': 'closed'}, {'id': 1028165318, 'number': 663, 'closed': datetime.datetime(2022, 8, 18, 13, 49, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 16, 23, 33, 28, tzinfo=datetime.timezone.utc), 'time_taken': 137755.0, 'time_delta': '1 day, 14:15:55', 'additions': 36, 'deletions': 0, 'state': 'closed'}, {'id': 1023199650, 'number': 659, 'closed': datetime.datetime(2022, 8, 17, 23, 26, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 20, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 613768.0, 'time_delta': '7 days, 2:29:28', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 1014119538, 'number': 648, 'closed': datetime.datetime(2022, 8, 3, 12, 56, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 1, 17, 2, 42, tzinfo=datetime.timezone.utc), 'time_taken': 158002.0, 'time_delta': '1 day, 19:53:22', 'additions': 40, 'deletions': 0, 'state': 'closed'}, {'id': 1007597052, 'number': 644, 'closed': datetime.datetime(2022, 7, 28, 14, 33, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 17, 49, 52, tzinfo=datetime.timezone.utc), 'time_taken': 247418.0, 'time_delta': '2 days, 20:43:38', 'additions': 41, 'deletions': 0, 'state': 'closed'}, {'id': 1007522436, 'number': 643, 'closed': datetime.datetime(2022, 9, 26, 20, 37, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 25, 16, 28, 6, tzinfo=datetime.timezone.utc), 'time_taken': 5458139.0, 'time_delta': '63 days, 4:08:59', 'additions': 387, 'deletions': 15, 'state': 'closed'}, {'id': 1002412303, 'number': 637, 'closed': datetime.datetime(2022, 7, 21, 13, 36, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 15, 22, 19, tzinfo=datetime.timezone.utc), 'time_taken': 80074.0, 'time_delta': '22:14:34', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 998625585, 'number': 630, 'closed': datetime.datetime(2022, 8, 18, 16, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 11, 48, 9, tzinfo=datetime.timezone.utc), 'time_taken': 2780211.0, 'time_delta': '32 days, 4:16:51', 'additions': 556, 'deletions': 8, 'state': 'closed'}, {'id': 995828509, 'number': 627, 'closed': datetime.datetime(2022, 7, 15, 14, 34, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 13, 18, 44, 44, tzinfo=datetime.timezone.utc), 'time_taken': 157809.0, 'time_delta': '1 day, 19:50:09', 'additions': 219, 'deletions': 0, 'state': 'closed'}, {'id': 987229961, 'number': 622, 'closed': datetime.datetime(2022, 7, 6, 22, 29, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 9, 54, 29, tzinfo=datetime.timezone.utc), 'time_taken': 131690.0, 'time_delta': '1 day, 12:34:50', 'additions': 42, 'deletions': 0, 'state': 'closed'}, {'id': 983698572, 'number': 616, 'closed': datetime.datetime(2022, 7, 4, 16, 1, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 30, 11, 9, 54, tzinfo=datetime.timezone.utc), 'time_taken': 363100.0, 'time_delta': '4 days, 4:51:40', 'additions': 4411, 'deletions': 38, 'state': 'closed'}, {'id': 982858497, 'number': 614, 'closed': datetime.datetime(2022, 7, 3, 21, 52, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 29, 17, 10, 15, tzinfo=datetime.timezone.utc), 'time_taken': 362516.0, 'time_delta': '4 days, 4:41:56', 'additions': 30, 'deletions': 0, 'state': 'closed'}, {'id': 973334349, 'number': 608, 'closed': datetime.datetime(2022, 6, 29, 3, 20, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 21, 9, 36, 19, tzinfo=datetime.timezone.utc), 'time_taken': 668678.0, 'time_delta': '7 days, 17:44:38', 'additions': 53, 'deletions': 0, 'state': 'closed'}, {'id': 967932905, 'number': 602, 'closed': datetime.datetime(2022, 6, 27, 13, 19, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 9, 41, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1049884.0, 'time_delta': '12 days, 3:38:04', 'additions': 263, 'deletions': 3, 'state': 'closed'}, {'id': 964822770, 'number': 600, 'closed': datetime.datetime(2022, 7, 14, 16, 33, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 11, 19, 13, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2841608.0, 'time_delta': '32 days, 21:20:08', 'additions': 807, 'deletions': 9, 'state': 'closed'}, {'id': 953175645, 'number': 595, 'closed': datetime.datetime(2022, 6, 1, 12, 15, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 1, 7, 28, 53, tzinfo=datetime.timezone.utc), 'time_taken': 17192.0, 'time_delta': '4:46:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 946760795, 'number': 589, 'closed': datetime.datetime(2022, 6, 1, 0, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 25, 9, 34, 40, tzinfo=datetime.timezone.utc), 'time_taken': 572420.0, 'time_delta': '6 days, 15:00:20', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 885252674, 'number': 559, 'closed': datetime.datetime(2022, 4, 4, 16, 17, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 21, 19, 53, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1196620.0, 'time_delta': '13 days, 20:23:40', 'additions': 196, 'deletions': 0, 'state': 'closed'}, {'id': 881025524, 'number': 556, 'closed': datetime.datetime(2022, 4, 4, 16, 12, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 16, 7, 27, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1673079.0, 'time_delta': '19 days, 8:44:39', 'additions': 15, 'deletions': 18, 'state': 'closed'}, {'id': 857616799, 'number': 547, 'closed': datetime.datetime(2022, 4, 15, 15, 4, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 20, 4, 35, tzinfo=datetime.timezone.utc), 'time_taken': 4820400.0, 'time_delta': '55 days, 19:00:00', 'additions': 184, 'deletions': 18, 'state': 'closed'}, {'id': 829374463, 'number': 533, 'closed': datetime.datetime(2022, 4, 20, 13, 42, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 22, 10, 11, 46, tzinfo=datetime.timezone.utc), 'time_taken': 7615823.0, 'time_delta': '88 days, 3:30:23', 'additions': 164, 'deletions': 32, 'state': 'closed'}, {'id': 825536446, 'number': 525, 'closed': datetime.datetime(2022, 5, 31, 17, 13, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 14, 18, 48, tzinfo=datetime.timezone.utc), 'time_taken': 11501675.0, 'time_delta': '133 days, 2:54:35', 'additions': 126, 'deletions': 4, 'state': 'closed'}, {'id': 815314573, 'number': 520, 'closed': datetime.datetime(2022, 1, 14, 17, 11, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 6, 8, 10, 15, tzinfo=datetime.timezone.utc), 'time_taken': 723658.0, 'time_delta': '8 days, 9:00:58', 'additions': 44, 'deletions': 19, 'state': 'closed'}]"
