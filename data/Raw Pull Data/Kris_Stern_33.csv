pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
467674431,Update 1D Profile viewer to use wcsaxes for plotting and add sliders,"<!-- # Pull Request Template -->

## Description
To replace https://github.com/glue-viz/glue/pull/2156. 

Tasks accomplished with this PR:

1. Update the existing glue's 1D Profile viewer to use `astropy`'s `wcsaxes` for plotting.
2. Add a `'slice'` function option to the 1D Profile to enable plotting a 1D spectrum of a data cube (e.g. an IRIS raster data cube) at a position picked out by glue-solar's pixel extraction tool.
3. Add sliders to 1D Profile viewer to update plot.
4. Enable deletion of `BaseData` type data so that now the dataset in the data collection generated by `glue-solar`'s pixel extraction tool can be deleted.


<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",False,2167,https://api.github.com/repos/glue-viz/glue/pulls/2167,https://github.com/glue-viz/glue/pull/2167,closed,331,65,17,14,14,55,0,0,[],2020-08-13 23:03:23+00:00,2021-08-27 19:46:28+00:00,32733785.0,"378 days, 20:43:05","[{'comment_id': 471157749, 'comment_body': 'Did you mean to remove SubsetGroup?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471157859, 'comment_body': 'Revert change?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158402, 'comment_body': 'If we want to add this by default, we need to make sure the icon is different from point_selection (at the moment they might be the same?)', 'comment_created': datetime.datetime(2020, 8, 16, 21, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158435, 'comment_body': 'Revert?', 'comment_created': datetime.datetime(2020, 8, 16, 21, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158482, 'comment_body': 'Revert?', 'comment_created': datetime.datetime(2020, 8, 16, 21, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158599, 'comment_body': 'Is there a reason for changing the previous behavior here?', 'comment_created': datetime.datetime(2020, 8, 16, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471725897, 'comment_body': 'Well, if I do so I would get an error thrown since some native `glue` `cmaps` are not in the standard `matplotlib` library. Is there an alternative which would make this acceptable like a `try-except` statement? ', 'comment_created': datetime.datetime(2020, 8, 17, 19, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471727905, 'comment_body': ""Yes, it was because I wanted to conform to APE 14's pixel convention: https://docs.astropy.org/en/stable/wcs/wcsapi.html#pixel-conventions-and-definitions"", 'comment_created': datetime.datetime(2020, 8, 17, 19, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471730264, 'comment_body': 'The icon for the pixel extraction tool looks similar but not the same as the point selection tool, it was designed like so on purpose to reflect their similar functionality. \r\n\r\n<img width=""26"" alt=""Screenshot 2020-08-18 at 3 32 17 AM"" src=""https://user-images.githubusercontent.com/26264600/90436594-88883200-e103-11ea-9eb9-163c5ecc4c27.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 19, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471730798, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 19, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471730838, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 19, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471731523, 'comment_body': 'Oh, wait... I think I did this by accident. Should I add the `core.SubsetGroup` back? ', 'comment_created': datetime.datetime(2020, 8, 17, 19, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471735310, 'comment_body': '> The icon added looks identical to https://github.com/glue-viz/glue/blob/master/glue/icons/glue_crosshair.png?\r\n\r\nI think they are not really identical, except maybe there are two different pixel extraction tool icons right now with different icons, one from `glue` and the other from `glue-solar` (with the latter to be removed once the former can be upstreamed), so I think you might have been referring to this second icon. \r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 19, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471809456, 'comment_body': 'I tried reverting this, but then would get an error that no plot would show in the 1D Profile viewer. ', 'comment_created': datetime.datetime(2020, 8, 17, 22, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471810988, 'comment_body': 'Like so: \r\n\r\n<img width=""1440"" alt=""Screenshot 2020-08-18 at 6 31 32 AM"" src=""https://user-images.githubusercontent.com/26264600/90450565-a1e9a800-e11c-11ea-843d-ec89c0d2afdd.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 22, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 474029876, 'comment_body': 'I think I can see why this is needed, as WCSAxes plots against array index, but this feels like the wrong place to put it?', 'comment_created': datetime.datetime(2020, 8, 20, 14, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 474031399, 'comment_body': ""anything pixel extraction related shouldn't be in this PR right? That code is still living in glue-solar for now?"", 'comment_created': datetime.datetime(2020, 8, 20, 14, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 474032021, 'comment_body': 'How is this change needed for this PR?', 'comment_created': datetime.datetime(2020, 8, 20, 14, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 474141112, 'comment_body': 'Sure, let me remove that from this PR\r\n', 'comment_created': datetime.datetime(2020, 8, 20, 17, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475087322, 'comment_body': 'Not sure where else to place this line of code though... Any suggestions?', 'comment_created': datetime.datetime(2020, 8, 22, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475428212, 'comment_body': 'Is the if statement really needed? Mabye just write ``self._reference_data = self.viewer_state.reference_data`` directly?', 'comment_created': datetime.datetime(2020, 8, 24, 8, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 475434816, 'comment_body': ""I guess the question is why x needs updating? why is it not correct when returned from visible_data? Changing it here seems dangerous because there's no guarantee there aren't gaps in the data."", 'comment_created': datetime.datetime(2020, 8, 24, 8, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 475435110, 'comment_body': 'Why remove this?', 'comment_created': datetime.datetime(2020, 8, 24, 8, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 475439987, 'comment_body': ""Actually @Cadair has been saying we don't need it if I remember correctly... I could add this back if that is not the case. "", 'comment_created': datetime.datetime(2020, 8, 24, 8, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475440143, 'comment_body': 'Sure ', 'comment_created': datetime.datetime(2020, 8, 24, 8, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475493016, 'comment_body': 'WCSAxes makes this redundant right? If you plot a coupled axis it now shows both coords.', 'comment_created': datetime.datetime(2020, 8, 24, 10, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 481084397, 'comment_body': 'Ah yes of course!', 'comment_created': datetime.datetime(2020, 9, 1, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481084677, 'comment_body': 'Well but wait it is still needed when not in slice mode, since you might be e.g. averaging over many slices with slightly different x axes', 'comment_created': datetime.datetime(2020, 9, 1, 12, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481090647, 'comment_body': 'Okay, let me put it back üëåüèº', 'comment_created': datetime.datetime(2020, 9, 1, 12, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 481091001, 'comment_body': 'Why was this removed?', 'comment_created': datetime.datetime(2020, 9, 1, 12, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481091291, 'comment_body': 'This question is still relevant', 'comment_created': datetime.datetime(2020, 9, 1, 12, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481091576, 'comment_body': 'Let me check it again more closely ', 'comment_created': datetime.datetime(2020, 9, 1, 12, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 481091768, 'comment_body': 'Yes just checked, and this warning is still needed in non-slice mode', 'comment_created': datetime.datetime(2020, 9, 1, 12, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481092475, 'comment_body': ""I think in future we'll want to try and avoid duplication with the image viewer - I can investigate once we add this to the 3-d viewer (to visualize >3-d datasets)"", 'comment_created': datetime.datetime(2020, 9, 1, 12, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481093917, 'comment_body': 'Remove print statement', 'comment_created': datetime.datetime(2020, 9, 1, 12, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481094657, 'comment_body': 'If slices is a list/tuple you can just do ``data_slice = self.viewer_state.slices[:]``', 'comment_created': datetime.datetime(2020, 9, 1, 12, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481095365, 'comment_body': 'For subsets you might also need to call ``get_mask`` and then blank out any non-selected values in the profile (see also my comment about subsets in the main review)', 'comment_created': datetime.datetime(2020, 9, 1, 12, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481095806, 'comment_body': 'Avoid duplication with image viewer by moving this to glue.utils? (you can make a new glue.utils.wcs module)', 'comment_created': datetime.datetime(2020, 9, 1, 12, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481185472, 'comment_body': 'I have been playing around with the different settings for a bit... Seems like there is a bug with the warning that would bring back the much dreaded extra sliders even when the function is not `slice`, especially when changing between the `x-axis` options. Let me see if there is a way around it. ', 'comment_created': datetime.datetime(2020, 9, 1, 14, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482199486, 'comment_body': 'Will add this back... Think I was having problems with these lines before', 'comment_created': datetime.datetime(2020, 9, 2, 16, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482209748, 'comment_body': ""Found out why now... It's because the `x_att` and `x_att_pixel` have been mixed up. Am patching this now. "", 'comment_created': datetime.datetime(2020, 9, 2, 16, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482212480, 'comment_body': 'But I think I do need to make a deep copy of it somehow, otherwise it would not work as the slices would be updated in place and so no spectrum plot will show. ', 'comment_created': datetime.datetime(2020, 9, 2, 16, 42, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482213231, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 2, 16, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 483483140, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 4, 8, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 483497558, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 4, 9, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 483498362, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 4, 9, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 484932916, 'comment_body': ""Just to be clear, ``[:]`` does to a copy for a list/tuple (unlike Numpy arrays). But I'm ok with leaving it as is as it is more explicit."", 'comment_created': datetime.datetime(2020, 9, 8, 13, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 484934774, 'comment_body': 'For other viewers the approach is instead to do:\r\n\r\n```\r\nself._calculate_profile(reset=True)\r\nforce=True\r\n```\r\n\r\nwhich ensures the visual properties are updated next. Maybe switch to this approach?', 'comment_created': datetime.datetime(2020, 9, 8, 13, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 484935844, 'comment_body': 'Remove if unused?', 'comment_created': datetime.datetime(2020, 9, 8, 13, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 484936141, 'comment_body': 'Remove if unused', 'comment_created': datetime.datetime(2020, 9, 8, 13, 50, 21, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 485418205, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 9, 8, 6, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 485418434, 'comment_body': ""Yup, was hesitant before because I wasn't sure if I was in the right direction. "", 'comment_created': datetime.datetime(2020, 9, 9, 8, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 485418544, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 9, 8, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 485418908, 'comment_body': 'Okay... Agree that it is better to be more explicit here. ', 'comment_created': datetime.datetime(2020, 9, 9, 8, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 489105486, 'comment_body': 'Tried changing to \r\n\r\n```python\r\n    self._calculate_profile(reset=True)\r\n    self._update_profile(force=True)\r\n```\r\nBut error was thrown upon attempting to view via 1D Profile viewer as data cannot be added for some reason... ', 'comment_created': datetime.datetime(2020, 9, 16, 1, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '24ddbdc7a9c693c23c1e3bdb1c99ee0b5570b14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aabf3d7b48d959d0e8e6b4aae265942223264d01', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aff74772d9ae859896954cb36e35dd09e237d627', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7302e3cc4e02793539114a1462898df43da389f6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '085468b10c549e21291b396d5225b6fe08b07bd3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7272c108f4d2993648bf9f77d1590342cd143e06', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3b827141adddb0672a038f22377dd12e8e474403', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62706dc2ab2749f998f658ca47f01228ef0d37f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7bbdf7638e609476ccddb465e990ce41cf9abfb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f981636de22b6617222ee01b03586633b74cb14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '971ad8cf8f376a2cc1b278ce3ffc807d790ff2ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c05af5f00cd932f8134f8061a53c46337d3d7e62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67553e7af45e2d02292003b535ee85aa4c18883c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '462c534dbeccd1d75f1b8f7e7f909a4a81334c36', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
447948725,Update 'wcs_autolinking' code to handle N-D cases,"<!-- # Pull Request Template -->

## Description
To rewrite the `__init__` of the `WCSLink` class to handle the case of N-D data cubes where `N >= 4`. While retaining the linking of the `wcs` spatial coordinates, support has been added for other quantities as dimensions as well including but not limited to time and wavelength. 

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",True,2161,https://api.github.com/repos/glue-viz/glue/pulls/2161,https://github.com/glue-viz/glue/pull/2161,closed,340,52,2,1,14,41,0,0,[],2020-07-12 20:11:14+00:00,2020-08-24 08:19:45+00:00,3672511.0,"42 days, 12:08:31","[{'comment_id': 453629561, 'comment_body': ""At the moment this block won't work if the WCS has no celestial components (for example if it is *just* spectral and time) - but to be general, it would make sense to support that use case"", 'comment_created': datetime.datetime(2020, 7, 13, 12, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 453629689, 'comment_body': 'Remove print statements', 'comment_created': datetime.datetime(2020, 7, 13, 12, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 453770937, 'comment_body': 'I have just checked by writing two new tests in `test_wcs_autolinking` to confirm that the code would work for the case where there are no spatial axes but with just one temporal and one spectral (either `vacuum wavelength` or `air wavelength`). But it is true the newly written code would not work if we have two data cubes of different numbers of dimension. ', 'comment_created': datetime.datetime(2020, 7, 13, 16, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 453771360, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 13, 16, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 454844346, 'comment_body': 'Could you add tests with:\r\n\r\n- one 2d dataset with WAVE and TIME and a 1-d dataset with WAVE\r\n- one 1d dataset with FREQ and a 1-d dataset with WAVE\r\n- one 3d dataset with RA---TAN, FREQ, DEC--TAN and a 2-d dataset with FREQ and TIME\r\n- one 3d dataset with RA---TAN, FREQ, DEC--TAN and a 2-d dataset with WAVE and TIME\r\n\r\nSome might not work yet but we want them to in the long run', 'comment_created': datetime.datetime(2020, 7, 15, 7, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 455175576, 'comment_body': 'Sure, will do so as soon as possible üëç ', 'comment_created': datetime.datetime(2020, 7, 15, 16, 25, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 455248825, 'comment_body': 'Added this use case for the wcs auto-linking between some IRIS Level 2 multiscan data sets with 4D sequentially-stacked data cubes and 3D SJI data cubes to be used in demo docs. ', 'comment_created': datetime.datetime(2020, 7, 15, 18, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 456486319, 'comment_body': 'Done adding these four new tests, with test `#2` and `#4` not yet assuming there is a link. Now in wcs auto-linking processing the celestial axes will be whole-ly optional. üòÄ', 'comment_created': datetime.datetime(2020, 7, 17, 14, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 466227065, 'comment_body': 'Can you just remove this code since indeed the test is no longer needed?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466228299, 'comment_body': ""We could make this a little more general by changing TIME to e.g. TAI in wcs2 - this should still work but at least shows we aren't using matching by CTYPE string."", 'comment_created': datetime.datetime(2020, 8, 6, 8, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466229375, 'comment_body': 'Can you write the test as if it was supposed to work, remove the TODO, and add an xfail decorator? Then it makes it easier once we do actually implement support for this.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466229694, 'comment_body': 'As before', 'comment_created': datetime.datetime(2020, 8, 6, 8, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466230329, 'comment_body': 'Can this ever be satisfied since we are in the != 1 case?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 20, 41, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466230701, 'comment_body': 'Why does pixel_to_pixel not work here?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466232439, 'comment_body': ""If you know one WCS doesn't have celestial axes, is there any need to keep track of the celestial axes for the WCS that does? This will then get ignored later, right? In other words, if one WCS doesn't have celestial axes, why not set both ``slicing_axes_celestial1`` and ``slicing_axes_celestial2`` to ``[]``?"", 'comment_created': datetime.datetime(2020, 8, 6, 8, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466233034, 'comment_body': 'Maybe you can simply use ``slicing_axes1`` instead of ``slicing_axes_celestial1`` in the if statement above?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466233306, 'comment_body': 'print statements will need to be removed once the PR is ready for a final review', 'comment_created': datetime.datetime(2020, 8, 6, 8, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466233986, 'comment_body': ""At this point, issn't slices a list with just slice(None)? if so, is the sorting needed?"", 'comment_created': datetime.datetime(2020, 8, 6, 8, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466237767, 'comment_body': ""Why not simply 'if i not in slicing axes:' to avoid the empty first clause?"", 'comment_created': datetime.datetime(2020, 8, 6, 8, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 467576405, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 9, 12, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467576909, 'comment_body': 'Sure, also double-checked that it worked', 'comment_created': datetime.datetime(2020, 8, 9, 12, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467577973, 'comment_body': 'It is interesting, but I just ran the test again and now it seems there is indeed a link between the `FREQ` and `WAVE`... Not sure what changed, except I switched my `astropy` version to `4.1rc1`. ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467578082, 'comment_body': 'This could be a bug, however...', 'comment_created': datetime.datetime(2020, 8, 9, 12, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467578517, 'comment_body': 'Sure, am adding the `@pytest.mark.xfail` decorator and changing to \r\n```python\r\nassert len(links) == 1\r\n```', 'comment_created': datetime.datetime(2020, 8, 9, 12, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467578717, 'comment_body': 'Sorry you are absolutely right, I was copying and pasting things and forgot to edit this out. ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579033, 'comment_body': 'Yup, agreed', 'comment_created': datetime.datetime(2020, 8, 9, 12, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579231, 'comment_body': ""It's funny in hindsight, but I am guessing it was by mistake. "", 'comment_created': datetime.datetime(2020, 8, 9, 12, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579251, 'comment_body': 'Sure, am removing them now... ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579626, 'comment_body': 'Yup, agreed. ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467580110, 'comment_body': 'Sure, guess I was trying to separate the celestial axes from the rest originally...', 'comment_created': datetime.datetime(2020, 8, 9, 12, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467580369, 'comment_body': ""Not sure, but it wasn't working before, hence the changes introduced... "", 'comment_created': datetime.datetime(2020, 8, 9, 12, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471157197, 'comment_body': 'Actually I just realized this will work because the initial check of using pixel_to_pixel with the full WCS will work with astropy 4.1 - so we could in principle allow this test to pass for astropy 4.1 and later. I can do that in a follow up though.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471157305, 'comment_body': 'Could you take a quick look again and let me know what errors you get if you do just use the default forwards and backwards?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471157557, 'comment_body': 'Can you revert these changes since the original code is a bit more readable?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471723868, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 19, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471815865, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 22, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 472426292, 'comment_body': 'The error is gone now... ü§î', 'comment_created': datetime.datetime(2020, 8, 18, 19, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 474732866, 'comment_body': 'Remove print statement', 'comment_created': datetime.datetime(2020, 8, 21, 14, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 474733284, 'comment_body': 'Can you remove the changes to this file from this PR since they are unrelated?', 'comment_created': datetime.datetime(2020, 8, 21, 14, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 474738720, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 21, 14, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 474744655, 'comment_body': 'Sure, done', 'comment_created': datetime.datetime(2020, 8, 21, 14, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '222d31e4288f7f69ac0f5a0e30159d31e146521b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
467674431,Update 1D Profile viewer to use wcsaxes for plotting and add sliders,"<!-- # Pull Request Template -->

## Description
To replace https://github.com/glue-viz/glue/pull/2156. 

Tasks accomplished with this PR:

1. Update the existing glue's 1D Profile viewer to use `astropy`'s `wcsaxes` for plotting.
2. Add a `'slice'` function option to the 1D Profile to enable plotting a 1D spectrum of a data cube (e.g. an IRIS raster data cube) at a position picked out by glue-solar's pixel extraction tool.
3. Add sliders to 1D Profile viewer to update plot.
4. Enable deletion of `BaseData` type data so that now the dataset in the data collection generated by `glue-solar`'s pixel extraction tool can be deleted.


<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",False,2167,https://api.github.com/repos/glue-viz/glue/pulls/2167,https://github.com/glue-viz/glue/pull/2167,closed,331,65,17,14,14,55,0,0,[],2020-08-13 23:03:23+00:00,2021-08-27 19:46:28+00:00,32733785.0,"378 days, 20:43:05","[{'comment_id': 471157749, 'comment_body': 'Did you mean to remove SubsetGroup?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471157859, 'comment_body': 'Revert change?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 56, 51, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158402, 'comment_body': 'If we want to add this by default, we need to make sure the icon is different from point_selection (at the moment they might be the same?)', 'comment_created': datetime.datetime(2020, 8, 16, 21, 0, 56, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158435, 'comment_body': 'Revert?', 'comment_created': datetime.datetime(2020, 8, 16, 21, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158482, 'comment_body': 'Revert?', 'comment_created': datetime.datetime(2020, 8, 16, 21, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471158599, 'comment_body': 'Is there a reason for changing the previous behavior here?', 'comment_created': datetime.datetime(2020, 8, 16, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471725897, 'comment_body': 'Well, if I do so I would get an error thrown since some native `glue` `cmaps` are not in the standard `matplotlib` library. Is there an alternative which would make this acceptable like a `try-except` statement? ', 'comment_created': datetime.datetime(2020, 8, 17, 19, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471727905, 'comment_body': ""Yes, it was because I wanted to conform to APE 14's pixel convention: https://docs.astropy.org/en/stable/wcs/wcsapi.html#pixel-conventions-and-definitions"", 'comment_created': datetime.datetime(2020, 8, 17, 19, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471730264, 'comment_body': 'The icon for the pixel extraction tool looks similar but not the same as the point selection tool, it was designed like so on purpose to reflect their similar functionality. \r\n\r\n<img width=""26"" alt=""Screenshot 2020-08-18 at 3 32 17 AM"" src=""https://user-images.githubusercontent.com/26264600/90436594-88883200-e103-11ea-9eb9-163c5ecc4c27.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 19, 33, 35, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471730798, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 19, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471730838, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 19, 34, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471731523, 'comment_body': 'Oh, wait... I think I did this by accident. Should I add the `core.SubsetGroup` back? ', 'comment_created': datetime.datetime(2020, 8, 17, 19, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471735310, 'comment_body': '> The icon added looks identical to https://github.com/glue-viz/glue/blob/master/glue/icons/glue_crosshair.png?\r\n\r\nI think they are not really identical, except maybe there are two different pixel extraction tool icons right now with different icons, one from `glue` and the other from `glue-solar` (with the latter to be removed once the former can be upstreamed), so I think you might have been referring to this second icon. \r\n\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 19, 44, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471809456, 'comment_body': 'I tried reverting this, but then would get an error that no plot would show in the 1D Profile viewer. ', 'comment_created': datetime.datetime(2020, 8, 17, 22, 28, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471810988, 'comment_body': 'Like so: \r\n\r\n<img width=""1440"" alt=""Screenshot 2020-08-18 at 6 31 32 AM"" src=""https://user-images.githubusercontent.com/26264600/90450565-a1e9a800-e11c-11ea-843d-ec89c0d2afdd.png"">\r\n', 'comment_created': datetime.datetime(2020, 8, 17, 22, 33, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 474029876, 'comment_body': 'I think I can see why this is needed, as WCSAxes plots against array index, but this feels like the wrong place to put it?', 'comment_created': datetime.datetime(2020, 8, 20, 14, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 474031399, 'comment_body': ""anything pixel extraction related shouldn't be in this PR right? That code is still living in glue-solar for now?"", 'comment_created': datetime.datetime(2020, 8, 20, 14, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 474032021, 'comment_body': 'How is this change needed for this PR?', 'comment_created': datetime.datetime(2020, 8, 20, 14, 36, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 474141112, 'comment_body': 'Sure, let me remove that from this PR\r\n', 'comment_created': datetime.datetime(2020, 8, 20, 17, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475087322, 'comment_body': 'Not sure where else to place this line of code though... Any suggestions?', 'comment_created': datetime.datetime(2020, 8, 22, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475428212, 'comment_body': 'Is the if statement really needed? Mabye just write ``self._reference_data = self.viewer_state.reference_data`` directly?', 'comment_created': datetime.datetime(2020, 8, 24, 8, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 475434816, 'comment_body': ""I guess the question is why x needs updating? why is it not correct when returned from visible_data? Changing it here seems dangerous because there's no guarantee there aren't gaps in the data."", 'comment_created': datetime.datetime(2020, 8, 24, 8, 45, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 475435110, 'comment_body': 'Why remove this?', 'comment_created': datetime.datetime(2020, 8, 24, 8, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 475439987, 'comment_body': ""Actually @Cadair has been saying we don't need it if I remember correctly... I could add this back if that is not the case. "", 'comment_created': datetime.datetime(2020, 8, 24, 8, 54, 37, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475440143, 'comment_body': 'Sure ', 'comment_created': datetime.datetime(2020, 8, 24, 8, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475493016, 'comment_body': 'WCSAxes makes this redundant right? If you plot a coupled axis it now shows both coords.', 'comment_created': datetime.datetime(2020, 8, 24, 10, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 481084397, 'comment_body': 'Ah yes of course!', 'comment_created': datetime.datetime(2020, 9, 1, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481084677, 'comment_body': 'Well but wait it is still needed when not in slice mode, since you might be e.g. averaging over many slices with slightly different x axes', 'comment_created': datetime.datetime(2020, 9, 1, 12, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481090647, 'comment_body': 'Okay, let me put it back üëåüèº', 'comment_created': datetime.datetime(2020, 9, 1, 12, 12, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 481091001, 'comment_body': 'Why was this removed?', 'comment_created': datetime.datetime(2020, 9, 1, 12, 13, 33, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481091291, 'comment_body': 'This question is still relevant', 'comment_created': datetime.datetime(2020, 9, 1, 12, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481091576, 'comment_body': 'Let me check it again more closely ', 'comment_created': datetime.datetime(2020, 9, 1, 12, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 481091768, 'comment_body': 'Yes just checked, and this warning is still needed in non-slice mode', 'comment_created': datetime.datetime(2020, 9, 1, 12, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481092475, 'comment_body': ""I think in future we'll want to try and avoid duplication with the image viewer - I can investigate once we add this to the 3-d viewer (to visualize >3-d datasets)"", 'comment_created': datetime.datetime(2020, 9, 1, 12, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481093917, 'comment_body': 'Remove print statement', 'comment_created': datetime.datetime(2020, 9, 1, 12, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481094657, 'comment_body': 'If slices is a list/tuple you can just do ``data_slice = self.viewer_state.slices[:]``', 'comment_created': datetime.datetime(2020, 9, 1, 12, 20, 25, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481095365, 'comment_body': 'For subsets you might also need to call ``get_mask`` and then blank out any non-selected values in the profile (see also my comment about subsets in the main review)', 'comment_created': datetime.datetime(2020, 9, 1, 12, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481095806, 'comment_body': 'Avoid duplication with image viewer by moving this to glue.utils? (you can make a new glue.utils.wcs module)', 'comment_created': datetime.datetime(2020, 9, 1, 12, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 481185472, 'comment_body': 'I have been playing around with the different settings for a bit... Seems like there is a bug with the warning that would bring back the much dreaded extra sliders even when the function is not `slice`, especially when changing between the `x-axis` options. Let me see if there is a way around it. ', 'comment_created': datetime.datetime(2020, 9, 1, 14, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482199486, 'comment_body': 'Will add this back... Think I was having problems with these lines before', 'comment_created': datetime.datetime(2020, 9, 2, 16, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482209748, 'comment_body': ""Found out why now... It's because the `x_att` and `x_att_pixel` have been mixed up. Am patching this now. "", 'comment_created': datetime.datetime(2020, 9, 2, 16, 38, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482212480, 'comment_body': 'But I think I do need to make a deep copy of it somehow, otherwise it would not work as the slices would be updated in place and so no spectrum plot will show. ', 'comment_created': datetime.datetime(2020, 9, 2, 16, 42, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 482213231, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 2, 16, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 483483140, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 4, 8, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 483497558, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 4, 9, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 483498362, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 4, 9, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 484932916, 'comment_body': ""Just to be clear, ``[:]`` does to a copy for a list/tuple (unlike Numpy arrays). But I'm ok with leaving it as is as it is more explicit."", 'comment_created': datetime.datetime(2020, 9, 8, 13, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 484934774, 'comment_body': 'For other viewers the approach is instead to do:\r\n\r\n```\r\nself._calculate_profile(reset=True)\r\nforce=True\r\n```\r\n\r\nwhich ensures the visual properties are updated next. Maybe switch to this approach?', 'comment_created': datetime.datetime(2020, 9, 8, 13, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 484935844, 'comment_body': 'Remove if unused?', 'comment_created': datetime.datetime(2020, 9, 8, 13, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 484936141, 'comment_body': 'Remove if unused', 'comment_created': datetime.datetime(2020, 9, 8, 13, 50, 21, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 485418205, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 9, 8, 6, 21, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 485418434, 'comment_body': ""Yup, was hesitant before because I wasn't sure if I was in the right direction. "", 'comment_created': datetime.datetime(2020, 9, 9, 8, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 485418544, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 9, 9, 8, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 485418908, 'comment_body': 'Okay... Agree that it is better to be more explicit here. ', 'comment_created': datetime.datetime(2020, 9, 9, 8, 7, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 489105486, 'comment_body': 'Tried changing to \r\n\r\n```python\r\n    self._calculate_profile(reset=True)\r\n    self._update_profile(force=True)\r\n```\r\nBut error was thrown upon attempting to view via 1D Profile viewer as data cannot be added for some reason... ', 'comment_created': datetime.datetime(2020, 9, 16, 1, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '24ddbdc7a9c693c23c1e3bdb1c99ee0b5570b14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aabf3d7b48d959d0e8e6b4aae265942223264d01', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'aff74772d9ae859896954cb36e35dd09e237d627', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7302e3cc4e02793539114a1462898df43da389f6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '085468b10c549e21291b396d5225b6fe08b07bd3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7272c108f4d2993648bf9f77d1590342cd143e06', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3b827141adddb0672a038f22377dd12e8e474403', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '62706dc2ab2749f998f658ca47f01228ef0d37f1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a7bbdf7638e609476ccddb465e990ce41cf9abfb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f981636de22b6617222ee01b03586633b74cb14e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '971ad8cf8f376a2cc1b278ce3ffc807d790ff2ca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c05af5f00cd932f8134f8061a53c46337d3d7e62', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '67553e7af45e2d02292003b535ee85aa4c18883c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '462c534dbeccd1d75f1b8f7e7f909a4a81334c36', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
447948725,Update 'wcs_autolinking' code to handle N-D cases,"<!-- # Pull Request Template -->

## Description
To rewrite the `__init__` of the `WCSLink` class to handle the case of N-D data cubes where `N >= 4`. While retaining the linking of the `wcs` spatial coordinates, support has been added for other quantities as dimensions as well including but not limited to time and wavelength. 

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",True,2161,https://api.github.com/repos/glue-viz/glue/pulls/2161,https://github.com/glue-viz/glue/pull/2161,closed,340,52,2,1,14,41,0,0,[],2020-07-12 20:11:14+00:00,2020-08-24 08:19:45+00:00,3672511.0,"42 days, 12:08:31","[{'comment_id': 453629561, 'comment_body': ""At the moment this block won't work if the WCS has no celestial components (for example if it is *just* spectral and time) - but to be general, it would make sense to support that use case"", 'comment_created': datetime.datetime(2020, 7, 13, 12, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 453629689, 'comment_body': 'Remove print statements', 'comment_created': datetime.datetime(2020, 7, 13, 12, 57, 42, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 453770937, 'comment_body': 'I have just checked by writing two new tests in `test_wcs_autolinking` to confirm that the code would work for the case where there are no spatial axes but with just one temporal and one spectral (either `vacuum wavelength` or `air wavelength`). But it is true the newly written code would not work if we have two data cubes of different numbers of dimension. ', 'comment_created': datetime.datetime(2020, 7, 13, 16, 21, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 453771360, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 7, 13, 16, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 454844346, 'comment_body': 'Could you add tests with:\r\n\r\n- one 2d dataset with WAVE and TIME and a 1-d dataset with WAVE\r\n- one 1d dataset with FREQ and a 1-d dataset with WAVE\r\n- one 3d dataset with RA---TAN, FREQ, DEC--TAN and a 2-d dataset with FREQ and TIME\r\n- one 3d dataset with RA---TAN, FREQ, DEC--TAN and a 2-d dataset with WAVE and TIME\r\n\r\nSome might not work yet but we want them to in the long run', 'comment_created': datetime.datetime(2020, 7, 15, 7, 21, 50, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 455175576, 'comment_body': 'Sure, will do so as soon as possible üëç ', 'comment_created': datetime.datetime(2020, 7, 15, 16, 25, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 455248825, 'comment_body': 'Added this use case for the wcs auto-linking between some IRIS Level 2 multiscan data sets with 4D sequentially-stacked data cubes and 3D SJI data cubes to be used in demo docs. ', 'comment_created': datetime.datetime(2020, 7, 15, 18, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 456486319, 'comment_body': 'Done adding these four new tests, with test `#2` and `#4` not yet assuming there is a link. Now in wcs auto-linking processing the celestial axes will be whole-ly optional. üòÄ', 'comment_created': datetime.datetime(2020, 7, 17, 14, 42, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 466227065, 'comment_body': 'Can you just remove this code since indeed the test is no longer needed?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 15, 4, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466228299, 'comment_body': ""We could make this a little more general by changing TIME to e.g. TAI in wcs2 - this should still work but at least shows we aren't using matching by CTYPE string."", 'comment_created': datetime.datetime(2020, 8, 6, 8, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466229375, 'comment_body': 'Can you write the test as if it was supposed to work, remove the TODO, and add an xfail decorator? Then it makes it easier once we do actually implement support for this.', 'comment_created': datetime.datetime(2020, 8, 6, 8, 19, 2, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466229694, 'comment_body': 'As before', 'comment_created': datetime.datetime(2020, 8, 6, 8, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466230329, 'comment_body': 'Can this ever be satisfied since we are in the != 1 case?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 20, 41, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466230701, 'comment_body': 'Why does pixel_to_pixel not work here?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466232439, 'comment_body': ""If you know one WCS doesn't have celestial axes, is there any need to keep track of the celestial axes for the WCS that does? This will then get ignored later, right? In other words, if one WCS doesn't have celestial axes, why not set both ``slicing_axes_celestial1`` and ``slicing_axes_celestial2`` to ``[]``?"", 'comment_created': datetime.datetime(2020, 8, 6, 8, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466233034, 'comment_body': 'Maybe you can simply use ``slicing_axes1`` instead of ``slicing_axes_celestial1`` in the if statement above?', 'comment_created': datetime.datetime(2020, 8, 6, 8, 25, 24, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466233306, 'comment_body': 'print statements will need to be removed once the PR is ready for a final review', 'comment_created': datetime.datetime(2020, 8, 6, 8, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466233986, 'comment_body': ""At this point, issn't slices a list with just slice(None)? if so, is the sorting needed?"", 'comment_created': datetime.datetime(2020, 8, 6, 8, 27, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 466237767, 'comment_body': ""Why not simply 'if i not in slicing axes:' to avoid the empty first clause?"", 'comment_created': datetime.datetime(2020, 8, 6, 8, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 467576405, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 9, 12, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467576909, 'comment_body': 'Sure, also double-checked that it worked', 'comment_created': datetime.datetime(2020, 8, 9, 12, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467577973, 'comment_body': 'It is interesting, but I just ran the test again and now it seems there is indeed a link between the `FREQ` and `WAVE`... Not sure what changed, except I switched my `astropy` version to `4.1rc1`. ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 29, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467578082, 'comment_body': 'This could be a bug, however...', 'comment_created': datetime.datetime(2020, 8, 9, 12, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467578517, 'comment_body': 'Sure, am adding the `@pytest.mark.xfail` decorator and changing to \r\n```python\r\nassert len(links) == 1\r\n```', 'comment_created': datetime.datetime(2020, 8, 9, 12, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467578717, 'comment_body': 'Sorry you are absolutely right, I was copying and pasting things and forgot to edit this out. ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579033, 'comment_body': 'Yup, agreed', 'comment_created': datetime.datetime(2020, 8, 9, 12, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579231, 'comment_body': ""It's funny in hindsight, but I am guessing it was by mistake. "", 'comment_created': datetime.datetime(2020, 8, 9, 12, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579251, 'comment_body': 'Sure, am removing them now... ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467579626, 'comment_body': 'Yup, agreed. ', 'comment_created': datetime.datetime(2020, 8, 9, 12, 46, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467580110, 'comment_body': 'Sure, guess I was trying to separate the celestial axes from the rest originally...', 'comment_created': datetime.datetime(2020, 8, 9, 12, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 467580369, 'comment_body': ""Not sure, but it wasn't working before, hence the changes introduced... "", 'comment_created': datetime.datetime(2020, 8, 9, 12, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471157197, 'comment_body': 'Actually I just realized this will work because the initial check of using pixel_to_pixel with the full WCS will work with astropy 4.1 - so we could in principle allow this test to pass for astropy 4.1 and later. I can do that in a follow up though.', 'comment_created': datetime.datetime(2020, 8, 16, 20, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471157305, 'comment_body': 'Could you take a quick look again and let me know what errors you get if you do just use the default forwards and backwards?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 53, 21, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471157557, 'comment_body': 'Can you revert these changes since the original code is a bit more readable?', 'comment_created': datetime.datetime(2020, 8, 16, 20, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 471723868, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 19, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 471815865, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 17, 22, 48, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 472426292, 'comment_body': 'The error is gone now... ü§î', 'comment_created': datetime.datetime(2020, 8, 18, 19, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 474732866, 'comment_body': 'Remove print statement', 'comment_created': datetime.datetime(2020, 8, 21, 14, 26, 30, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 474733284, 'comment_body': 'Can you remove the changes to this file from this PR since they are unrelated?', 'comment_created': datetime.datetime(2020, 8, 21, 14, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 474738720, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 8, 21, 14, 35, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 474744655, 'comment_body': 'Sure, done', 'comment_created': datetime.datetime(2020, 8, 21, 14, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '222d31e4288f7f69ac0f5a0e30159d31e146521b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
456678061,Add NDData support as data factories to glue,"<!-- # Pull Request Template -->

## Description
Add `astropy.nddata` support as data factories in order to offer an alternative means to load more specific data types, such as FITS files, but using the `NDData`, making the manipulation of `units`, `mask`, `uncertainty`, and `meta` of any FITS data more manageable in the context of `glue`. 

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",False,2164,https://api.github.com/repos/glue-viz/glue/pulls/2164,https://github.com/glue-viz/glue/pull/2164,closed,137,2,4,7,3,0,0,0,[],2020-07-25 22:58:14+00:00,2021-08-27 19:46:27+00:00,34375693.0,"397 days, 20:48:13",[],"[{'commit_sha': 'e0f0e315f3958f9203ad72d98d51af93e9def143', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '9c8010236c80501d1f9557bdc45af265bb1be0c4', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4fcf20db0cbeca85478c41009b4519dbf4c1b3c9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e2aab37d32404975f82e4fc8b5e28abd30e1bda1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '3a632b98db9c14b29eb055cbbeb3e0e19a614f67', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e4d0336b48b0c838748b5abdcef72f5c1286b474', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0b089d77cfda03213f8d1fd0bc58ab95781789f9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
413769536,Add a preferred_cmap attribute to visual.py,"<!--# Pull Request Template-->

## Description

<!--Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.-->

To enable the addition of a `preferred_cmap` attribute so that if this parameter is set a `matplotlib.colors.Colormap` object can be used as the colormap setting of the `2D image`.
",True,2131,https://api.github.com/repos/glue-viz/glue/pulls/2131,https://github.com/glue-viz/glue/pull/2131,closed,28,8,4,1,9,40,0,0,[],2020-05-05 21:46:26+00:00,2020-08-05 11:41:43+00:00,7912517.0,"91 days, 13:55:17","[{'comment_id': 425434165, 'comment_body': 'This docstring seems out of date?', 'comment_created': datetime.datetime(2020, 5, 14, 21, 13, 39, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425434569, 'comment_body': 'In general, we should avoid modifying any of the .glu files in the test suite, since these double up as backward-compatibility tests. We should make the deserializer for visual robust to missing ``preferred_cmap``', 'comment_created': datetime.datetime(2020, 5, 14, 21, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425435528, 'comment_body': ""I don't think we should listen for changes in preferred_cmap - the way I see it it should just be a parameter that affects future image viewers that are open, not change existing ones if preferred_cmap is updated."", 'comment_created': datetime.datetime(2020, 5, 14, 21, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425801531, 'comment_body': 'Yup, it is. Thanks for pointing this out! Will update it shortly. ', 'comment_created': datetime.datetime(2020, 5, 15, 13, 28, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425801743, 'comment_body': 'Understood. Will revert the changes now... ', 'comment_created': datetime.datetime(2020, 5, 15, 13, 28, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425802058, 'comment_body': 'Now I see what I should do... Thanks @astrofrog!', 'comment_created': datetime.datetime(2020, 5, 15, 13, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425809992, 'comment_body': 'Done, rebased and pushed', 'comment_created': datetime.datetime(2020, 5, 15, 13, 42, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425908198, 'comment_body': ""I wouldn't make this a state property - I would just make it so that when ``self.cmap`` is set, you can check ``layer.style.preferred_cmap`` to see if it's set, and if not, use colormaps.members[0][1]"", 'comment_created': datetime.datetime(2020, 5, 15, 16, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425908377, 'comment_body': 'Can you remove lines like this that are commented out?', 'comment_created': datetime.datetime(2020, 5, 15, 16, 18, 2, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425908649, 'comment_body': ""As before, don't add this as a callback property, just access it on ``layer.style`` whenever it is needed."", 'comment_created': datetime.datetime(2020, 5, 15, 16, 18, 32, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425908733, 'comment_body': 'Can you remove the comment?', 'comment_created': datetime.datetime(2020, 5, 15, 16, 18, 42, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425939725, 'comment_body': 'Eliminated the `preferred_cmap` as a state property.', 'comment_created': datetime.datetime(2020, 5, 15, 17, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425939820, 'comment_body': 'Yup, done. ', 'comment_created': datetime.datetime(2020, 5, 15, 17, 15, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425940025, 'comment_body': 'Okay, sure. Deleted. ', 'comment_created': datetime.datetime(2020, 5, 15, 17, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425941633, 'comment_body': 'Yup, certainly. Done. ', 'comment_created': datetime.datetime(2020, 5, 15, 17, 19, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425942428, 'comment_body': ""I don't think you need to include this, it probably won't be relevant for many viewers\r\n"", 'comment_created': datetime.datetime(2020, 5, 15, 17, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 425948596, 'comment_body': ""I tried running glue with L79 commented out, but got the error:\r\n```\r\nFailed to add data\r\n'ImageLayerState' object has no attribute 'preferred_cmap'\r\n```\r\nSo maybe we should keep it?\r\n"", 'comment_created': datetime.datetime(2020, 5, 15, 17, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 425948991, 'comment_body': 'The error shows up when trying to view the loaded `SunPy Map` object, BTW... ', 'comment_created': datetime.datetime(2020, 5, 15, 17, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 430458080, 'comment_body': ""@kakirastern - I think this indicates that the layer state needs to have a default value set to None. I think it would still be best to not show this in the ``config.py`` file here, and it's a good test that it should be possible to not set the preferred cmap."", 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 430614900, 'comment_body': '@astrofrog Thanks for the tip! Let me try your suggestion and make changes soon. ', 'comment_created': datetime.datetime(2020, 5, 26, 18, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 430640048, 'comment_body': 'Done, it worked! üëç ', 'comment_created': datetime.datetime(2020, 5, 26, 19, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 431804702, 'comment_body': 'Is this line needed?', 'comment_created': datetime.datetime(2020, 5, 28, 12, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 431805894, 'comment_body': 'Rather than storing ``preferred_cmap`` on the state, why not just access ``self.layer.style.preferred_cmap`` here? (this will avoid ``self.layer.style.preferred_cmap`` and ``self.preferred_cmap`` from getting out of sync.', 'comment_created': datetime.datetime(2020, 5, 28, 12, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 432074723, 'comment_body': 'Not really. Was thinking about doing something extra about it which turned out not necessary after all. But forgot to remove it. Thanks for pointing this out! ', 'comment_created': datetime.datetime(2020, 5, 28, 19, 39, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 432079902, 'comment_body': 'Done ‚úÖDouble-checked that the code still works after modifying. ', 'comment_created': datetime.datetime(2020, 5, 28, 19, 47, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 432113244, 'comment_body': 'Maybe you could actually code this up in the property on the Visual class in case we end up using this elsewhere too?', 'comment_created': datetime.datetime(2020, 5, 28, 20, 46, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 432113455, 'comment_body': 'This can be written more simply as:\r\n\r\n```\r\nself.cmap = self.layer.style.preferred_cmap or colormaps.members[0][1]\r\n```', 'comment_created': datetime.datetime(2020, 5, 28, 20, 46, 25, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 432113590, 'comment_body': 'I think the changes in this file are no longer needed', 'comment_created': datetime.datetime(2020, 5, 28, 20, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 432840553, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2020, 5, 30, 13, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 432842145, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 30, 13, 33, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 432842151, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 30, 13, 33, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 453634908, 'comment_body': 'I think Matplotlib has a get_cmap method we could use here to avoid having to implement convert_colormap_from_name?', 'comment_created': datetime.datetime(2020, 7, 13, 13, 6, 35, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 453635324, 'comment_body': 'Is this needed?', 'comment_created': datetime.datetime(2020, 7, 13, 13, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 453804682, 'comment_body': 'Yup, I just tried out `get_cmap` and that worked as expected. ', 'comment_created': datetime.datetime(2020, 7, 13, 17, 16, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 453807790, 'comment_body': 'Yeah, you are right. I checked and indeed this code is not needed. ', 'comment_created': datetime.datetime(2020, 7, 13, 17, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 454850247, 'comment_body': 'Can you revert these changes? This was just fixed in https://github.com/glue-viz/glue/pull/2159', 'comment_created': datetime.datetime(2020, 7, 15, 7, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'astrofrog', 'type': 'User'}, {'comment_id': 455168397, 'comment_body': 'My apologies, there was some problem with my IDE... I have already rebased but the changes were not picked up. Let me check again to see if I could fix it. ', 'comment_created': datetime.datetime(2020, 7, 15, 16, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 456499736, 'comment_body': 'Hey @astrofrog I tried but it seems very difficult to untangle the mess I have created since the commit I have made for this change is deep within the PR... Is there any workarounds you would suggest me do to fix this? Any suggestion would be much appreciated. ', 'comment_created': datetime.datetime(2020, 7, 17, 15, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 456739299, 'comment_body': 'No worries, change reverted üëç ', 'comment_created': datetime.datetime(2020, 7, 18, 2, 46, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 456784463, 'comment_body': 'Sorry the code looked eerily like my own, as I have submitted a very similar commit before the patch PR #2159 was opened, even with the same variable name, so I was confused üòê Now the issue has been fixed. ', 'comment_created': datetime.datetime(2020, 7, 18, 12, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '381fe7527308e6a00442de5e26a13c4466911125', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
412415100,Add open with SunPy Map GUI option,"<!-- # Pull Request Template -->

## Description

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->

Add a ""`SunPy Map`"" option for loading `SunPy` map objects to `glue` via the `glue-solar` plugin. 
",True,15,https://api.github.com/repos/glue-viz/glue-solar/pulls/15,https://github.com/glue-viz/glue-solar/pull/15,closed,350,11,12,18,5,22,0,0,[],2020-05-02 07:55:58+00:00,2020-05-20 16:45:15+00:00,1586957.0,"18 days, 8:49:17","[{'comment_id': 426487343, 'comment_body': 'Why was this isort skiped? ', 'comment_created': datetime.datetime(2020, 5, 18, 9, 22, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 426593613, 'comment_body': 'Hmm... I think I copied this line from elsewhere. Let me try removing it and see if anything bad will happen. ', 'comment_created': datetime.datetime(2020, 5, 18, 12, 37, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428099437, 'comment_body': 'What was the Exception? ', 'comment_created': datetime.datetime(2020, 5, 20, 15, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428099683, 'comment_body': 'Would calling it `loader.py` be enough?', 'comment_created': datetime.datetime(2020, 5, 20, 15, 21, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428099775, 'comment_body': 'Would calling it `loader.py` be enough?', 'comment_created': datetime.datetime(2020, 5, 20, 15, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428122045, 'comment_body': ""Oh, it is for the `reproject`'s deprecation of `independent_celestial_slices`... "", 'comment_created': datetime.datetime(2020, 5, 20, 15, 51, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428123207, 'comment_body': 'I have a funny feeling we should keep the different loaders separate, since otherwise they would be harder to maintain in the near future. ', 'comment_created': datetime.datetime(2020, 5, 20, 15, 53, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428123937, 'comment_body': 'I am not saying we merge them but the folder names give away what loader this is for without having to replicate the folder name into the filename. ', 'comment_created': datetime.datetime(2020, 5, 20, 15, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428124801, 'comment_body': 'Could I get a comment saying this please? Does it still error with the latest reproject? ', 'comment_created': datetime.datetime(2020, 5, 20, 15, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428124923, 'comment_body': 'Oh I see, let me fix them... ', 'comment_created': datetime.datetime(2020, 5, 20, 15, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428132639, 'comment_body': 'Sure, and should I restrict the reproject version to `> 0.6`?', 'comment_created': datetime.datetime(2020, 5, 20, 16, 6, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428134206, 'comment_body': 'No, the error goes away with the latest version of `reproject`', 'comment_created': datetime.datetime(2020, 5, 20, 16, 9, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428138464, 'comment_body': 'Yeah pin it to the version that works. ', 'comment_created': datetime.datetime(2020, 5, 20, 16, 15, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428144406, 'comment_body': 'Yup, made the changes just now', 'comment_created': datetime.datetime(2020, 5, 20, 16, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428144496, 'comment_body': 'Yup, done', 'comment_created': datetime.datetime(2020, 5, 20, 16, 24, 54, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428145157, 'comment_body': 'Cool, pinned `reproject` to version `>= 0.7` and removed redundant snippet of try-and-catch code. ', 'comment_created': datetime.datetime(2020, 5, 20, 16, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428152371, 'comment_body': 'What was the reason for the new blank line at the end of each doc string? ', 'comment_created': datetime.datetime(2020, 5, 20, 16, 36, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428153590, 'comment_body': 'Sorry, it is the style some orgs I have worked with adopt... I can remove them if you prefer', 'comment_created': datetime.datetime(2020, 5, 20, 16, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428155498, 'comment_body': 'I think @astrofrog does it in `glue`, so I am following suit', 'comment_created': datetime.datetime(2020, 5, 20, 16, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428156302, 'comment_body': 'Works for me.', 'comment_created': datetime.datetime(2020, 5, 20, 16, 40, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428156573, 'comment_body': 'Cool', 'comment_created': datetime.datetime(2020, 5, 20, 16, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': 'bf98b90fff616564f18758d8c355a461a4732ba1', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '4dfb1927285ac646c1a1130ffbfdf97b4c8956be', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '611d8f9adb6141a0bec45a302b3c212c91ea03a3', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '27b41dfee5d7ae6642e234a5a83c95911c3281ab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fd194cf36192b2367ea2b8ffc665d9f2ee9591da', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd7696f948cd5a12f43f91c526bca58792ce9dc0d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c9fe6670448532ad7615e40d8ac0fadcc0ab4f69', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a869d29fdf507f1acb8b71472839bab8b5846551', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f8315fb12456f3458aa2755008b58228cda42e1e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f319c03036eaa51a0b9b39d48a8f8ef174b971ad', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '85ec6481bd91b6e7e5298544258975107629b08d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '748497efc257375ccf79b701f0b8931ffc0ff0ce', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '693ad402c3fdc4d041381bb0bdd48121cee4186f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fa0bfd801d522e2677e747e7cf79080c4fa7032d', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd9b3dca8a4c3c0d5a25ba43f6d65224b3997984b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '01e7977bfa90d533778759d082dd82ecbfea7cab', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '542dd08aefefcef6006d9c31a599543b9d6131cb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '91c5b6a96cd687398b522a310036ae45c24445d6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
419765848,"Add ""Loading and Overplotting AIA and HMI files as SunPy Maps"" docs","<!-- # Pull Request Template -->

## Description

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->

Add docs for the GSoC 2020 `glue-solar` project work on ""Load a HMI and AIA file as maps, overplot with colormaps"" as planned. Including are both an RST file plus some PNG image files. 
",True,17,https://api.github.com/repos/glue-viz/glue-solar/pulls/17,https://github.com/glue-viz/glue-solar/pull/17,closed,91,2,9,4,0,15,0,0,[],2020-05-18 22:06:47+00:00,2020-05-24 11:25:01+00:00,479894.0,"5 days, 13:18:14","[{'comment_id': 426919203, 'comment_body': 'we should probably add glue here as well :D ', 'comment_created': datetime.datetime(2020, 5, 18, 22, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Cadair', 'type': 'User'}, {'comment_id': 426924959, 'comment_body': 'No problem! üòâ Done', 'comment_created': datetime.datetime(2020, 5, 18, 22, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428192137, 'comment_body': '```suggestion\r\nvery straightforward. Upon firing up ``glue`` while the Python environment has\r\n```', 'comment_created': datetime.datetime(2020, 5, 20, 17, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428192740, 'comment_body': 'Outside the scope of this PR but is there anyway to automate this aka if I open a AIA file glue/glue-solar figures it out and loads the correct loader?', 'comment_created': datetime.datetime(2020, 5, 20, 17, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428203509, 'comment_body': 'This makes it sounds like each HMI file has a different colour map. ', 'comment_created': datetime.datetime(2020, 5, 20, 17, 58, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428203734, 'comment_body': '```suggestion\r\nAutolinking is automatically detected. If this the first time, you would be prompted\r\n```', 'comment_created': datetime.datetime(2020, 5, 20, 17, 59, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428204172, 'comment_body': 'Is there anything that can be done with the overlapping images? Say If i wanted the value of the pixel in both images?', 'comment_created': datetime.datetime(2020, 5, 20, 17, 59, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428669404, 'comment_body': 'They do in fact... ', 'comment_created': datetime.datetime(2020, 5, 21, 14, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428670659, 'comment_body': 'They do?!', 'comment_created': datetime.datetime(2020, 5, 21, 14, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428670995, 'comment_body': 'Will need to work on that next for the ""WCS info for derived datasets (i.e. raster + SJI time linking)"" task in our plans I reckon. I think I should work on some tutorials to guide the user on the study of different kinds of solar datasets in separate PRs. ', 'comment_created': datetime.datetime(2020, 5, 21, 14, 2, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428671804, 'comment_body': 'Yup, otherwise it would be difficult to tell the AIA layer and HMI layer apart, which is crucial for the overplotting. ', 'comment_created': datetime.datetime(2020, 5, 21, 14, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428672679, 'comment_body': 'Good point. ', 'comment_created': datetime.datetime(2020, 5, 21, 14, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428672947, 'comment_body': ""Yeah if that's the case, I am ok with both examples as they are. We will have to come back to them once we get more features implemented."", 'comment_created': datetime.datetime(2020, 5, 21, 14, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428673729, 'comment_body': 'I think in the long term that is possible, but will need to work out the details in time though. I can say make the SunPy maps importer do this for us as long as the data is solar ones. ', 'comment_created': datetime.datetime(2020, 5, 21, 14, 7, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428674222, 'comment_body': 'Agreed. I think I should open some issues about these proposed tutorials. ', 'comment_created': datetime.datetime(2020, 5, 21, 14, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '163ff00fe5cd29d8808254828625819b3de8a30e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '42d4fa21c78238f4e61bcbc82231956eb36c4425', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'a1de1caca0bb63da8ab8e061cb79d25fef000e7a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'de7be6223c66c9772f30c5fd279748aed350f84c', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
420800265,Add loading IRIS level 2 raster and sji data together docs,"<!-- # Pull Request Template -->

## Description

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->

To add docs to walk the user through how to load IRIS level 2 `raster` and `sji` data files into `glue` using `glue-solar`'s ""Load IRIS Observation"" VizieR Importer"". With a RST and three PNG files added in addition to the previous work. 
",True,18,https://api.github.com/repos/glue-viz/glue-solar/pulls/18,https://github.com/glue-viz/glue-solar/pull/18,closed,38,0,5,2,0,17,0,0,[],2020-05-20 14:47:00+00:00,2020-05-24 11:36:26+00:00,334166.0,"3 days, 20:49:26","[{'comment_id': 428205858, 'comment_body': 'Could we get an example of the final result? \r\n', 'comment_created': datetime.datetime(2020, 5, 20, 18, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428205944, 'comment_body': 'VizieR?', 'comment_created': datetime.datetime(2020, 5, 20, 18, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428645210, 'comment_body': ""Yeah, that's what is says on the top on the loader... Could have been some misnomer, but I am not sure. "", 'comment_created': datetime.datetime(2020, 5, 21, 13, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428646690, 'comment_body': 'Sure, that could be another RST file or the same one... I only included the details for the loading since that is what is listed in our plans for `glue-solar`. But I could open another PR to discuss how to use `glue-solar` to investigate IRIS Level 2 ""raster"" and ""SJI"" data like what I have done recently. ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428647969, 'comment_body': 'Would the load not mean an image viewer is created at the end of the process? ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 23, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428651421, 'comment_body': 'Not really, the loader and viewer are two distinct parts from what I can tell... ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428652357, 'comment_body': 'So we can load the data and then do nothing with it? ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 31, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428654347, 'comment_body': 'Yup, think so... Unless you know what to do next, otherwise it is easy to lose directions in what needed to be done to meaningfully look at the ""raster"" and ""SJI"" data from the same observation together. ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 34, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428656526, 'comment_body': 'https://vizier.u-strasbg.fr/viz-bin/VizieR', 'comment_created': datetime.datetime(2020, 5, 21, 13, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428657130, 'comment_body': 'Fair but I am not sure that an example that just loads data is all that useful. ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 39, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428657468, 'comment_body': 'Does that come from glue core?', 'comment_created': datetime.datetime(2020, 5, 21, 13, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428658526, 'comment_body': 'Yup, it does', 'comment_created': datetime.datetime(2020, 5, 21, 13, 42, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428659570, 'comment_body': 'I totally agree, which is the reason why I had been playing around with some IRIS level 2 data to get a sense about what I have been doing... I will writeup the details regarding the use of glue-solar for IRIS data after the data have been properly loaded soon. ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 43, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428660173, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2020, 5, 21, 13, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428660462, 'comment_body': 'In that case, I will ignore it. ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 45, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 428660584, 'comment_body': 'Hence the need to look up some spectral lines and determine what their uses are so I could include these in our piece, as I have previously mentioned on Riot IRC earlier. ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 45, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 428661755, 'comment_body': 'My pleasure @nabobalis! üòÉ', 'comment_created': datetime.datetime(2020, 5, 21, 13, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '2440c270ce762501324ddd572f0b27dc6d742b4b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fa416f4be2e197352d6e2996d71882bc46872cf6', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
437281161,Update IRIS data labels with OBSID for filtering,"<!-- # Pull Request Template -->

## Description

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
Fixes #10. Adds the `OBSID` detail that is unique to each observation to the data labels of IRIS data as uploaded with either the file uploader or directory uploader. Only changes the label. Primary aim is for better filtering of IRIS observational data.  

For one observation:
<img width=""1438"" alt=""Screenshot 2020-06-20 04 08 26"" src=""https://user-images.githubusercontent.com/26264600/85176858-62821500-b2ad-11ea-8b5d-bbe509546f02.png"">

For two observations:
<img width=""1440"" alt=""Screenshot 2020-06-20 04 10 47"" src=""https://user-images.githubusercontent.com/26264600/85176914-804f7a00-b2ad-11ea-9509-4c1d031b1fcc.png"">
",True,23,https://api.github.com/repos/glue-viz/glue-solar/pulls/23,https://github.com/glue-viz/glue-solar/pull/23,closed,6,6,2,1,5,2,0,0,[],2020-06-19 20:21:56+00:00,2020-06-21 08:31:59+00:00,130203.0,"1 day, 12:10:03","[{'comment_id': 443110259, 'comment_body': '`window` here is the title of the data? ', 'comment_created': datetime.datetime(2020, 6, 20, 7, 39, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 443173952, 'comment_body': 'Yup', 'comment_created': datetime.datetime(2020, 6, 21, 2, 3, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '0d1a17f94b3e43b27b3b0f9c826e0955860884a9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
460442226,"Add User's and Developer's Guides to ""docs""","<!-- # Pull Request Template -->

## Description

1. To add the User's Guide and Developer's guide to the `docs` subdirectory.
2. To add `sphinx-automodapi` to `glue-solar` in preparation of addition of `API` documentation.

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",True,28,https://api.github.com/repos/glue-viz/glue-solar/pulls/28,https://github.com/glue-viz/glue-solar/pull/28,closed,296,5,5,5,1,41,0,0,[],2020-07-31 19:44:33+00:00,2020-08-01 11:28:38+00:00,56645.0,15:44:05,"[{'comment_id': 463944662, 'comment_body': 'I thought ""Glue-viz"" was the github org but the package was called ""glue""?', 'comment_created': datetime.datetime(2020, 8, 1, 9, 37, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944711, 'comment_body': '""Glue-viz"" is a plugin? ', 'comment_created': datetime.datetime(2020, 8, 1, 9, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944727, 'comment_body': '```suggestion\r\nplugin in particular is not only code, but also to report any issues you have\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 9, 38, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944749, 'comment_body': 'Should ""Glue-viz"" here be ""glue-solar""?', 'comment_created': datetime.datetime(2020, 8, 1, 9, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944772, 'comment_body': '```suggestion\r\nby opening an issue on our GitHub issue tracker. This way, we can help you work around the problem\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 9, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944794, 'comment_body': '```suggestion\r\nand hopefully resolve it as soon as it arises. To use GitHub, you will will need to have a GitHub account\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 9, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944831, 'comment_body': '```suggestion\r\nand be signed into it to report an issue. Having joined GitHub will make it easier to report and track\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 9, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944931, 'comment_body': '```suggestion\r\n``Glue-solar`` has some `online documentation <https://glue-solar.readthedocs.io/en/latest/>`__ and we strive to make it as comprehensive\r\n```\r\nAny place we use the old URL should be changed.', 'comment_created': datetime.datetime(2020, 8, 1, 9, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463944950, 'comment_body': '```suggestion\r\nand developer documentation.\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 9, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946270, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 9, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946292, 'comment_body': 'Should probably be updated to use f-strings instead of format.', 'comment_created': datetime.datetime(2020, 8, 1, 10, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946380, 'comment_body': '```suggestion\r\n`SunPy Documentation Rules <https://docs.sunpy.org/en/latest/dev_guide/documentation.html>`__, though it is not\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946381, 'comment_body': '```suggestion\r\n`doctest <https://docs.astropy.org/en/stable/development/testguide.html#doctests>`__\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946396, 'comment_body': '```suggestion\r\n`super() <https://docs.python.org/3/library/functions.html#super>`__ should be used consistently in all subclasses,\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946400, 'comment_body': '```suggestion\r\n6. Classes should use the builtin `super() <https://docs.python.org/3/library/functions.html#super>`__ function\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946403, 'comment_body': '```suggestion\r\n`Python Standard Library <https://docs.python.org/3/library/index.html>`__, and packages that are already\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946434, 'comment_body': '```suggestion\r\n`Sphinx <https://www.sphinx-doc.org/en/stable/>`__, which is a tool very suitable for documenting Python projects.\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946436, 'comment_body': '```suggestion\r\n`Media-wiki-like syntax <http://docutils.sourceforge.net/docs/user/rst/quickstart.html>`__ called\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946439, 'comment_body': '```suggestion\r\n`reStructuredText <http://docutils.sourceforge.net/rst.html>`__. In addition to parsing static files\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 1, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946443, 'comment_body': '```suggestion\r\nto what you are reading right now, the `Python documentation <https://www.python.org/doc/>`__\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 2, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946467, 'comment_body': 'Is tox setup for glue-solar?', 'comment_created': datetime.datetime(2020, 8, 1, 10, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946480, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 2, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946484, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946510, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 2, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946514, 'comment_body': '```suggestion\r\n`Writing a custom viewer for glue <http://docs.glueviz.org/en/latest/customizing_guide/viewer.html>`__,\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946520, 'comment_body': '```suggestion\r\n`Writing a custom viewer for glue with Qt <http://docs.glueviz.org/en/latest/customizing_guide/qt_viewer.html>`__\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 3, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946526, 'comment_body': '```suggestion\r\nMatplotlib <http://docs.glueviz.org/en/latest/customizing_guide/matplotlib_qt_viewer.html>`__,\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 3, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946741, 'comment_body': 'Later on we will probably want to change the layout of this. ', 'comment_created': datetime.datetime(2020, 8, 1, 10, 5, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946745, 'comment_body': '```suggestion\r\n`installing and running glue <http://docs.glueviz.org/en/stable/installation/installation.html>`__.\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946752, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 5, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946776, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946786, 'comment_body': 'Python27?', 'comment_created': datetime.datetime(2020, 8, 1, 10, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463946789, 'comment_body': '```suggestion\r\n`Getting Started <http://docs.glueviz.org/en/stable/getting_started/index.html>`__ section of the official ``Glue``\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 10, 6, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463948687, 'comment_body': 'Sorry I meant `Glue-solar`', 'comment_created': datetime.datetime(2020, 8, 1, 10, 31, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 463948717, 'comment_body': 'Yup', 'comment_created': datetime.datetime(2020, 8, 1, 10, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 463948778, 'comment_body': 'Oh, yeah... Typo. Should be `37`.', 'comment_created': datetime.datetime(2020, 8, 1, 10, 32, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 463948826, 'comment_body': 'Okay, let me make the changes accordingly', 'comment_created': datetime.datetime(2020, 8, 1, 10, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 463949777, 'comment_body': 'Yeah, agreed', 'comment_created': datetime.datetime(2020, 8, 1, 10, 45, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 463951409, 'comment_body': 'Yes, I can do `tox -e build_docs` locally at the time being', 'comment_created': datetime.datetime(2020, 8, 1, 11, 6, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 463952103, 'comment_body': 'Why were these commented out?', 'comment_created': datetime.datetime(2020, 8, 1, 11, 15, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 463953043, 'comment_body': 'Oh, an error was thrown for me locally while trying to run `tox -e build_docs` on my machine, so I comment them out for now. ', 'comment_created': datetime.datetime(2020, 8, 1, 11, 27, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '229ea3e0584a3ebe494f1275c58fea808b5cef00', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '248bc76eb9ab27e01e2e906c6582083e2fc359fb', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '7366aa52973ddc5960fb2dde64830c595463ff57', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b8c5df974a5f0f13699d21227516eac73961a86b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b9b6e21fe2f278ede01594f75abb094580028d46', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
462869107,Add 'contributing' and 'code reference' docs to repo,"<!-- # Pull Request Template -->

## Description
Add the remaining main documentation to `docs`, including `contributing` and `code reference`, to supplement the `user's guide` and `developer's guide` already added to repo. 

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",True,29,https://api.github.com/repos/glue-viz/glue-solar/pulls/29,https://github.com/glue-viz/glue-solar/pull/29,closed,155,19,13,21,2,23,0,0,[],2020-08-04 16:18:11+00:00,2020-08-10 22:02:17+00:00,539046.0,"6 days, 5:44:06","[{'comment_id': 465174040, 'comment_body': 'I would probably just link to the sunpy one.', 'comment_created': datetime.datetime(2020, 8, 4, 16, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465174466, 'comment_body': 'Okay, sure', 'comment_created': datetime.datetime(2020, 8, 4, 16, 24, 7, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 465174515, 'comment_body': '```suggestion\r\n.. automodapi:: glue_solar.core\r\n```\r\n\r\nShould be enough since the init file imports everything from core.', 'comment_created': datetime.datetime(2020, 8, 4, 16, 24, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465174980, 'comment_body': '```suggestion\r\n.. automodapi:: glue_solar.core.sunpy_maps\r\n```\r\nSame here. Should need to compare before and after. ', 'comment_created': datetime.datetime(2020, 8, 4, 16, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465175536, 'comment_body': 'Sure, and I think then I can remove the other similar ones starting with the pattern `glue_solar.core` as well...', 'comment_created': datetime.datetime(2020, 8, 4, 16, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 465190618, 'comment_body': ""```suggestion\r\ncommands = sphinx-build -v --color -W --keep-going -b html -d _build/.doctrees . _build/html\r\n```\r\nWe don't want the full log from sphinx normally."", 'comment_created': datetime.datetime(2020, 8, 4, 16, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465190804, 'comment_body': 'Maybe only `-v` is needed.', 'comment_created': datetime.datetime(2020, 8, 4, 16, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465199824, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 17, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465199931, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 17, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465201052, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 4, 17, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465201527, 'comment_body': 'You reckon we should keep the docs build separate from the other ones when running `tox` at root?', 'comment_created': datetime.datetime(2020, 8, 4, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 465201817, 'comment_body': ""Let's see if this made a difference..."", 'comment_created': datetime.datetime(2020, 8, 4, 17, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 465209204, 'comment_body': 'I am not sure I follow.', 'comment_created': datetime.datetime(2020, 8, 4, 17, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 465209362, 'comment_body': 'These are covered by the extras.', 'comment_created': datetime.datetime(2020, 8, 4, 17, 22, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468199049, 'comment_body': 'I ended up doing something a little different as it felt a bit odd to use the same licence for the `Code of Conduct` for `glue-solar` with `sunpy`, so I adapted the `sunpy` one. Hope this arrangement is okay with you. ', 'comment_created': datetime.datetime(2020, 8, 10, 21, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 468203942, 'comment_body': 'Why is this here?', 'comment_created': datetime.datetime(2020, 8, 10, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468204326, 'comment_body': 'Should be ok. ', 'comment_created': datetime.datetime(2020, 8, 10, 21, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468204782, 'comment_body': '```suggestion\r\nthe `glue-solar channel <https://app.element.io/#/room/#glue-solar:openastronomy.org>`_ hosted by Element.\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 21, 48, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468205794, 'comment_body': '```suggestion\r\nParts of this code of conduct have been adapted from the `astropy <https://www.astropy.org/code_of_conduct.html>`__,\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 21, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468205851, 'comment_body': '```suggestion\r\nthe `sunpy <https://docs.sunpy.org/en/stable/code_of_conduct.html>`__ and the\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 21, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468205896, 'comment_body': '```suggestion\r\n`Python Software Foundation <https://www.python.org/psf/conduct/>`__ codes of conduct.\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 21, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468206111, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 10, 21, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 468206591, 'comment_body': 'It is for in case we will need to use it in the future to turn on `nitpicky`. I have used it for some `astropy` docs before, and thought we might need it someday if our docs grow larger in size and there might be some problems that can only be resolved by `nitpick-exceptions`.', 'comment_created': datetime.datetime(2020, 8, 10, 21, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': '0cdaabddba0b70d84797fbb02a06b0988225b638', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'ce380381df107ab5616ffaabf738ac2eecef3161', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '83e12bac737c9371b3c35f7c4066cf0132b6e32e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '025668351d38b51293d3572f2b13dcb23c5b78f2', 'committer_username': 'nabobalis', 'committer_name': 'Nabil Freij', 'committer_email': 'nabil.freij@gmail.com', 'commit_date': datetime.datetime(2012, 1, 30, 17, 52, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fca4737a967977f3ff66ae4642905ffd54a98b3e', 'committer_username': 'nabobalis', 'committer_name': 'Nabil Freij', 'committer_email': 'nabil.freij@gmail.com', 'commit_date': datetime.datetime(2012, 1, 30, 17, 52, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9e3c14d3df174cd9764c22a850c7b6b4cf978a8', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '70d08d9ee213f5f0db215aaed0688b2dc5d5899a', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b99c91d2a1cdf474126a1cef52f6c7d5d0f34d6b', 'committer_username': 'nabobalis', 'committer_name': 'Nabil Freij', 'committer_email': 'nabil.freij@gmail.com', 'commit_date': datetime.datetime(2012, 1, 30, 17, 52, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ffe2dd322225c1f48f35afccda4b93d32d35922', 'committer_username': 'nabobalis', 'committer_name': 'Nabil Freij', 'committer_email': 'nabil.freij@gmail.com', 'commit_date': datetime.datetime(2012, 1, 30, 17, 52, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f27b460635e6a66830301952be56be1522909426', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '195a900a5dbf7d15264381eb8ede38cf0d400e8c', 'committer_username': 'nabobalis', 'committer_name': 'Nabil Freij', 'committer_email': 'nabil.freij@gmail.com', 'commit_date': datetime.datetime(2012, 1, 30, 17, 52, 11, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0b003479c7851eb5677118df945e9f50356be63', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '07dfc91b9b9ee45f4110cb37d0263f9b0db11ebe', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0652c26c0de5bb34d329e57673a1b6f754328719', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'e74bcd6c1bebcdd3645fdf0922ad1ec2aa0f668b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'fe48a2173b9103ecd0b59c815395128d12e66c28', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'cd0b8a1a68655a68f277d43c3d565f4e4e7de212', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c01816f102a8bf602148820431aed14088561f9f', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '0a2d942b1f85a9f05cb0fbdbed3851448c27721e', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '6aca9a42243b9366288e8a61507718d7ac8c5bd9', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd706912ecae698e0e4b738a735195c1f3757d02b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
472012495,Fix TypeError bug in glue_solar/instruments/iris/iris.py,"<!-- # Pull Request Template -->

## Description
Patches `glue_solar/instruments/iris/iris.py` in response to a non-critical bug encountered while running `glue` with the `glue-solar` plugin. 

Original error traceback as follows: 
```bash
Traceback (most recent call last):
  File ""/Users/krisstern/glue/glue/utils/misc.py"", line 55, in result
    return func(*args, **kwargs)
  File ""/Users/krisstern/glue/glue/app/qt/application.py"", line 249, in _choose_load_data
    data = data_importer()
  File ""/Users/krisstern/glue-solar/glue_solar/instruments/iris/iris.py"", line 79, in import_iris
    wi = QtIRISImporter(directory)
  File ""/Users/krisstern/glue-solar/glue_solar/instruments/iris/loader.py"", line 38, in __init__
    self.directory = Path(directory)
  File ""/opt/miniconda3/envs/astronomy-2020/lib/python3.8/pathlib.py"", line 1038, in __new__
    self = cls._from_parts(args, init=False)
  File ""/opt/miniconda3/envs/astronomy-2020/lib/python3.8/pathlib.py"", line 679, in _from_parts
    drv, root, parts = self._parse_args(args)
  File ""/opt/miniconda3/envs/astronomy-2020/lib/python3.8/pathlib.py"", line 663, in _parse_args
    a = os.fspath(a)
TypeError: expected str, bytes or os.PathLike object, not list
```

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",True,32,https://api.github.com/repos/glue-viz/glue-solar/pulls/32,https://github.com/glue-viz/glue-solar/pull/32,closed,25,4,4,4,4,10,0,0,[],2020-08-22 17:15:18+00:00,2020-08-24 18:23:45+00:00,176907.0,"2 days, 1:08:27","[{'comment_id': 475111962, 'comment_body': 'Does this need to be set to None?', 'comment_created': datetime.datetime(2020, 8, 22, 17, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 475112041, 'comment_body': 'Does this not mean the data is only the last `window_data` for the last `scan_data`? ', 'comment_created': datetime.datetime(2020, 8, 22, 17, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 475182111, 'comment_body': ""I think I better, otherwise if the code below doesn't run I would not run into some error thrown. It's a safer way of initialising the variable IMO. "", 'comment_created': datetime.datetime(2020, 8, 23, 7, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475182581, 'comment_body': 'I tried it but normally we only handle one window at a time, so this should technically be an acceptable way to go. The step where the entire directory is loaded comes from https://github.com/glue-viz/glue-solar/blob/f443704e5e69fe73099da14477dbd95386f67854/glue_solar/instruments/iris/iris.py#L78\r\nwhere the [loader code](https://github.com/glue-viz/glue-solar/blob/f443704e5e69fe73099da14477dbd95386f67854/glue_solar/instruments/iris/loader.py#L21) uploads individual files from a particular IRIS observation directory. ', 'comment_created': datetime.datetime(2020, 8, 23, 7, 12, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475198485, 'comment_body': ""Fair enough,it is probably my ignorance of how glue/glue-solar work. I just don't understand why we loop over and then just return the last instance in that loop. "", 'comment_created': datetime.datetime(2020, 8, 23, 9, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 475200064, 'comment_body': 'No worries, I think I got stumped by this earlier adapting the code for ""SunPy Map"" too', 'comment_created': datetime.datetime(2020, 8, 23, 10, 8, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 475799533, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 18, 5, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 475799622, 'comment_body': '```suggestion\r\n        assert not isinstance(raster_data, list)\r\n```', 'comment_created': datetime.datetime(2020, 8, 24, 18, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 475800053, 'comment_body': ""I can't say I am a fan of having to do `\\` due to the line length."", 'comment_created': datetime.datetime(2020, 8, 24, 18, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 475801774, 'comment_body': 'Sure, just removed that from the code. ', 'comment_created': datetime.datetime(2020, 8, 24, 18, 9, 55, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}]","[{'commit_sha': 'f443704e5e69fe73099da14477dbd95386f67854', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '03879e77d0560377b9a51adcd97d49955a049d95', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'c49fce32e32408b79873a1a90abfe1c908b18703', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'f3f7aae07c4911f1f6ed08e4a6cc1ba855fb2dad', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50
473291640,Add data loader customization guide as developer docs,"<!-- # Pull Request Template -->

## Description
To add developer docs for a guide to add a customized data loader in the `glue-solar` plugin to load custom data to `glue`. 

<!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. -->
",True,33,https://api.github.com/repos/glue-viz/glue-solar/pulls/33,https://github.com/glue-viz/glue-solar/pull/33,closed,74,0,2,5,3,22,0,0,[],2020-08-25 15:37:18+00:00,2020-08-25 23:01:05+00:00,26627.0,7:23:47,"[{'comment_id': 476612757, 'comment_body': '```suggestion\r\nthat are often used in solar physics research.\r\nThere are two ways to customize `glue` using the `glue-solar` plugin:\r\n```', 'comment_created': datetime.datetime(2020, 8, 25, 17, 22, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476612948, 'comment_body': '```suggestion\r\nThe `glue` data visualization tool is highly customizable for different data types, such as FITS files\r\n```', 'comment_created': datetime.datetime(2020, 8, 25, 17, 22, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476613522, 'comment_body': '```suggestion\r\n2. The second option is to develop a custom viewer to enable a specific way to view your data, such as\r\n```', 'comment_created': datetime.datetime(2020, 8, 25, 17, 23, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476613712, 'comment_body': 'Do we have a better example?', 'comment_created': datetime.datetime(2020, 8, 25, 17, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476615463, 'comment_body': 'pre-processed? ', 'comment_created': datetime.datetime(2020, 8, 25, 17, 25, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476617566, 'comment_body': '```suggestion\r\nwalk through how to construct such a custom data loader for your solar physics use case.\r\n```', 'comment_created': datetime.datetime(2020, 8, 25, 17, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476618598, 'comment_body': 'I am not sure this is useful information? ', 'comment_created': datetime.datetime(2020, 8, 25, 17, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476627264, 'comment_body': ""I guess my issue with this part of the doc is that I don't feel like I understand more on how to write a custom loader. I know a lot how to layout a new subpackage. "", 'comment_created': datetime.datetime(2020, 8, 25, 17, 42, 17, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476789725, 'comment_body': 'Yup sorry, another way of saying the data should first be reduced, which should be a given... ', 'comment_created': datetime.datetime(2020, 8, 25, 22, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476790325, 'comment_body': ""It's chiefly for those who are new to testing with the `pytest` framework"", 'comment_created': datetime.datetime(2020, 8, 25, 22, 14, 45, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476790886, 'comment_body': ""That's why I am providing the link to the official info in the end... Or do you reckon I should move this to top?\r\n"", 'comment_created': datetime.datetime(2020, 8, 25, 22, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476791384, 'comment_body': 'Not for solar physics not at the moment... ', 'comment_created': datetime.datetime(2020, 8, 25, 22, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476794954, 'comment_body': ""An init file isn't only for pytest tho. "", 'comment_created': datetime.datetime(2020, 8, 25, 22, 21, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476795641, 'comment_body': 'Would that not be post-processed? ', 'comment_created': datetime.datetime(2020, 8, 25, 22, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476796131, 'comment_body': 'That is fine.', 'comment_created': datetime.datetime(2020, 8, 25, 22, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476797699, 'comment_body': 'I guess I am wondering is there more to be said from the solar physics side or you experience of writing the code for glue-solar that is missing from the official guide? ', 'comment_created': datetime.datetime(2020, 8, 25, 22, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476798165, 'comment_body': 'True... Let me add to it', 'comment_created': datetime.datetime(2020, 8, 25, 22, 25, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476799115, 'comment_body': ""Don't think there is much except the code to load the solar data is highly dependent on the instrument used... "", 'comment_created': datetime.datetime(2020, 8, 25, 22, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476799262, 'comment_body': 'Oh, you are right', 'comment_created': datetime.datetime(2020, 8, 25, 22, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476804115, 'comment_body': 'Good point.', 'comment_created': datetime.datetime(2020, 8, 25, 22, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 476808101, 'comment_body': 'Cool üòé Code added for this', 'comment_created': datetime.datetime(2020, 8, 25, 22, 38, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kakirastern', 'type': 'User'}, {'comment_id': 476812406, 'comment_body': '```suggestion\r\ngeneral the ``astropy.io.fits`` methods should be able to handle most but not all as an instrument-agnostic option.\r\n```', 'comment_created': datetime.datetime(2020, 8, 25, 22, 44, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}]","[{'commit_sha': '5abf72b3638c5928834e57a496c117b89c39e557', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'b153863f91dcf071840a09f62af517fd92d1eaca', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': 'd04a8668f8a87667a86e4d82d816f139480fc6ac', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '74fbc86819652916a2c3866f1ddd914650bcb3c2', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}, {'commit_sha': '1973d2442ac09504df8694d973a677e089510e1b', 'committer_username': '', 'committer_name': '', 'committer_email': '', 'commit_date': ''}]",Kris Stern,26264600,,User,,100,,14,50

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
1768238,glue,glue-viz/glue,Python,152,724,40,63,6962,483,24,18,"[{'id': 471296403, 'number': 2168, 'closed': datetime.datetime(2020, 8, 21, 14, 24, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 23, 50, 48, tzinfo=datetime.timezone.utc), 'time_taken': 52403.0, 'time_delta': '14:33:23', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 467674431, 'number': 2167, 'closed': datetime.datetime(2021, 8, 27, 19, 46, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 23, 3, 23, tzinfo=datetime.timezone.utc), 'time_taken': 32733785.0, 'time_delta': '378 days, 20:43:05', 'additions': 331, 'deletions': 65, 'state': 'closed'}, {'id': 456678061, 'number': 2164, 'closed': datetime.datetime(2021, 8, 27, 19, 46, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 22, 58, 14, tzinfo=datetime.timezone.utc), 'time_taken': 34375693.0, 'time_delta': '397 days, 20:48:13', 'additions': 137, 'deletions': 2, 'state': 'closed'}, {'id': 447948725, 'number': 2161, 'closed': datetime.datetime(2020, 8, 24, 8, 19, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 20, 11, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3672511.0, 'time_delta': '42 days, 12:08:31', 'additions': 340, 'deletions': 52, 'state': 'closed'}, {'id': 434082367, 'number': 2156, 'closed': datetime.datetime(2020, 8, 20, 23, 52, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 1, 50, 41, tzinfo=datetime.timezone.utc), 'time_taken': 5868138.0, 'time_delta': '67 days, 22:02:18', 'additions': 588, 'deletions': 46, 'state': 'closed'}, {'id': 416936402, 'number': 2139, 'closed': datetime.datetime(2020, 5, 15, 9, 26, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 19, 54, 31, tzinfo=datetime.timezone.utc), 'time_taken': 221507.0, 'time_delta': '2 days, 13:31:47', 'additions': 60, 'deletions': 0, 'state': 'closed'}, {'id': 413769536, 'number': 2131, 'closed': datetime.datetime(2020, 8, 5, 11, 41, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 5, 21, 46, 26, tzinfo=datetime.timezone.utc), 'time_taken': 7912517.0, 'time_delta': '91 days, 13:55:17', 'additions': 28, 'deletions': 8, 'state': 'closed'}]"
174129609,glue-solar,glue-viz/glue-solar,Python,9,9,7,7,158,5,1,2,"[{'id': 473291640, 'number': 33, 'closed': datetime.datetime(2020, 8, 25, 23, 1, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 15, 37, 18, tzinfo=datetime.timezone.utc), 'time_taken': 26627.0, 'time_delta': '7:23:47', 'additions': 74, 'deletions': 0, 'state': 'closed'}, {'id': 472012495, 'number': 32, 'closed': datetime.datetime(2020, 8, 24, 18, 23, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 22, 17, 15, 18, tzinfo=datetime.timezone.utc), 'time_taken': 176907.0, 'time_delta': '2 days, 1:08:27', 'additions': 25, 'deletions': 4, 'state': 'closed'}, {'id': 466308037, 'number': 30, 'closed': datetime.datetime(2020, 8, 11, 20, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 19, 26, 10, tzinfo=datetime.timezone.utc), 'time_taken': 2679.0, 'time_delta': '0:44:39', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 462869107, 'number': 29, 'closed': datetime.datetime(2020, 8, 10, 22, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 16, 18, 11, tzinfo=datetime.timezone.utc), 'time_taken': 539046.0, 'time_delta': '6 days, 5:44:06', 'additions': 155, 'deletions': 19, 'state': 'closed'}, {'id': 460442226, 'number': 28, 'closed': datetime.datetime(2020, 8, 1, 11, 28, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 31, 19, 44, 33, tzinfo=datetime.timezone.utc), 'time_taken': 56645.0, 'time_delta': '15:44:05', 'additions': 296, 'deletions': 5, 'state': 'closed'}, {'id': 455987721, 'number': 27, 'closed': datetime.datetime(2020, 7, 24, 7, 43, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 22, 42, 56, tzinfo=datetime.timezone.utc), 'time_taken': 32456.0, 'time_delta': '9:00:56', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 453676142, 'number': 26, 'closed': datetime.datetime(2020, 8, 11, 22, 4, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 17, 40, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1916644.0, 'time_delta': '22 days, 4:24:04', 'additions': 145, 'deletions': 1, 'state': 'closed'}, {'id': 440290646, 'number': 25, 'closed': datetime.datetime(2020, 6, 26, 8, 28, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 22, 35, 22, tzinfo=datetime.timezone.utc), 'time_taken': 35572.0, 'time_delta': '9:52:52', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 437281161, 'number': 23, 'closed': datetime.datetime(2020, 6, 21, 8, 31, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 20, 21, 56, tzinfo=datetime.timezone.utc), 'time_taken': 130203.0, 'time_delta': '1 day, 12:10:03', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 432046256, 'number': 22, 'closed': datetime.datetime(2020, 6, 16, 22, 30, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 20, 30, 4, tzinfo=datetime.timezone.utc), 'time_taken': 612013.0, 'time_delta': '7 days, 2:00:13', 'additions': 17, 'deletions': 10, 'state': 'closed'}, {'id': 425460002, 'number': 21, 'closed': datetime.datetime(2020, 8, 25, 14, 7, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 30, 12, 32, 26, tzinfo=datetime.timezone.utc), 'time_taken': 7522479.0, 'time_delta': '87 days, 1:34:39', 'additions': 436, 'deletions': 5, 'state': 'closed'}, {'id': 422100554, 'number': 20, 'closed': datetime.datetime(2020, 5, 24, 11, 8, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 19, 9, 43, tzinfo=datetime.timezone.utc), 'time_taken': 143923.0, 'time_delta': '1 day, 15:58:43', 'additions': 4, 'deletions': 9, 'state': 'closed'}, {'id': 420800265, 'number': 18, 'closed': datetime.datetime(2020, 5, 24, 11, 36, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 14, 47, tzinfo=datetime.timezone.utc), 'time_taken': 334166.0, 'time_delta': '3 days, 20:49:26', 'additions': 38, 'deletions': 0, 'state': 'closed'}, {'id': 419765848, 'number': 17, 'closed': datetime.datetime(2020, 5, 24, 11, 25, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 22, 6, 47, tzinfo=datetime.timezone.utc), 'time_taken': 479894.0, 'time_delta': '5 days, 13:18:14', 'additions': 91, 'deletions': 2, 'state': 'closed'}, {'id': 412415100, 'number': 15, 'closed': datetime.datetime(2020, 5, 20, 16, 45, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 7, 55, 58, tzinfo=datetime.timezone.utc), 'time_taken': 1586957.0, 'time_delta': '18 days, 8:49:17', 'additions': 350, 'deletions': 11, 'state': 'closed'}, {'id': 407602896, 'number': 14, 'closed': datetime.datetime(2020, 5, 17, 16, 26, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 23, 43, 46, tzinfo=datetime.timezone.utc), 'time_taken': 2133747.0, 'time_delta': '24 days, 16:42:27', 'additions': 14, 'deletions': 10, 'state': 'closed'}, {'id': 396322387, 'number': 13, 'closed': datetime.datetime(2020, 4, 7, 15, 32, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 31, 13, 6, 37, tzinfo=datetime.timezone.utc), 'time_taken': 613527.0, 'time_delta': '7 days, 2:25:27', 'additions': 42, 'deletions': 1, 'state': 'closed'}]"
