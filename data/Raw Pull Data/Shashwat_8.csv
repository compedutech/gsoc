pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
943939913,Transition to webpack 5,"# What this PR does

Upgrades webpack to version 5

# Changes

### 1. Switch to relative paths for css assets

This is because absolute paths are now relative to the root of the project. 

### 2. Using asset modules instead of `url-loader`

[`url-loader`](https://v4.webpack.js.org/loaders/url-loader/) has been deprecated for Webpack 5 in favor of [asset modules](https://webpack.js.org/guides/asset-modules/). There are multiple asset types and I have gone with the [general asset type](https://webpack.js.org/guides/asset-modules/#general-asset-type). From the documentation - 

> Now webpack will automatically choose between resource and inline by following a default condition: a file with size less than 8kb will be treated as a inline module type and resource module type otherwise.

### 3. Single manifest file

Before, two manifest files were being created - one for css and another for JS. I've combined them into one `manifests.json` file so that the manifest plugin is only executed once. 

### 4. Replace `webpack-rtl-plugin` with `rtlcss-webpack-plugin`

[`webpack-rtl-plugin`](https://github.com/romainberger/webpack-rtl-plugin) was last updated on Mar 15, 2019. Despite there being a [PR which adds support for Webpack 5](https://github.com/romainberger/webpack-rtl-plugin/pull/37), it hasn't been merged for over 8 months. So its been replaced with [`rtlcss-webpack-plugin`](https://github.com/wix/rtlcss-webpack-plugin/) which looks to be maintained more actively. 

### 5. Add CssMinimizerWebpackPlugin to minify css

For some reason,`webpack-rtl-plugin` also minified the css files - both the RTL and non RTL ones. Since we no longer use that plugin, we need to minify the css with  [`css-minimizer-webpack-plugin`](https://github.com/webpack-contrib/css-minimizer-webpack-plugin) 

### 6. Remove ExcludeAssetsPlugin

This plugin was used to clean up the empty JS files which were being generated by Webpack. With v5, Webpack no longer generates these files, so there was no need to use this plugin. 

### 7. Remove Parallel Webpack

[Parallel Webpack](https://github.com/trivago/parallel-webpack) was used to speed up the build process by spreading the workload across multiple processors. The repo for this project has been archived and it does not support webpack 5. [Webpack doesn't have native support for parallelism](https://github.com/webpack/webpack/issues/14386), but that might change in the future. 

### 8. Use webpack dev server by default

Earlier, this was only being used with `yarn hot`. I couldn't get `yarn hot` to work so it might have been broken for a while. Regardless, `yarn start` now uses webpack dev server. The files are written to the disk presently, but I will try to use the server directly. I haven't been been able to make that work so far. The switch to webpack dev server also means that the webpage reloads automatically on code changes. It also shows warnings and errors inside of the browser. 

### 9. Fix regex for coverage

The regex which split `main.js` into multiple modules broke because webpack uses arrow functions instead of the function keyword. [I've changed that so that](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4982/commits/3a75ee282aceab7bbfc662ed3272564ac343149c) `yarn coverage` still works as expected. 
 
There are some other configuration changes but these are the major ones I could think of. 

# Performance

These numbers are obviously not scientific but the time taken is consistent from the testing I've done.

| command  | cache | Webpack 5 | Webpack 4 |
| --------  | ------------------- | --------------------- | --------------------- |
| `yarn start` | no | 70s | 40s |
| `yarn start` | yes | 10s | 10s |
| `yarn build` | no | 101s | 75s |
| `yarn build` | yes | 41s | 25s |

For rebuilds, it takes about 2000ms the first time and the subsequent rebuilds are much faster, around 800ms. This is probably due to the source map configuration. Unfortunately, if we want the right line numbers in the error messages, I think this is the best that can be done. More details can be found [here](https://webpack.js.org/configuration/devtool/)",True,4982,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4982,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4982,closed,1506,2914,10,14,8,19,0,0,[],2022-05-23 05:23:12+00:00,2022-06-09 15:15:00+00:00,1504308.0,"17 days, 9:51:48","[{'comment_id': 890220074, 'comment_body': 'What other hash options are available?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 38, 36, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890221209, 'comment_body': 'Is this available in webpack 5?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890221581, 'comment_body': 'What other hash options are available?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890224451, 'comment_body': ""Why don't we keep this in memory itself? Why do we need to write to disk?"", 'comment_created': datetime.datetime(2022, 6, 6, 14, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890226463, 'comment_body': 'Can we explore doing splitting for vendor bundle?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890266549, 'comment_body': 'Explore if we can pass any options that might be helpful.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890274762, 'comment_body': 'currently has an issue with dynamic import bundles if we switch to in-memory', 'comment_created': datetime.datetime(2022, 6, 6, 15, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890275397, 'comment_body': 'Need to check how this works with Ruby server and enable hot module replacement.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890279265, 'comment_body': 'Remove this.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890279367, 'comment_body': '```suggestion\r\n  const outputPath = path.resolve(`${config.outputPath}/${config.jsDirectory}`);\r\n```', 'comment_created': datetime.datetime(2022, 6, 6, 15, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890283454, 'comment_body': ""```suggestion\r\n  let devtool = 'eval-cheap-source-map';\r\n```"", 'comment_created': datetime.datetime(2022, 6, 6, 15, 41, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890293871, 'comment_body': 'Can explore later on how to split vendor checks and make it work with Ruby', 'comment_created': datetime.datetime(2022, 6, 6, 15, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890299350, 'comment_body': '@ragesoss Need to validate if `coverage.rake` file is working as expected since the output in `public/assets/javascripts/main.js` might have changed from webpack 4 to 5.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890633134, 'comment_body': 'Yep, I tried it out locally and the coverage.rake is still working.', 'comment_created': datetime.datetime(2022, 6, 6, 23, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 890739438, 'comment_body': ""[It is](https://webpack.js.org/plugins/define-plugin/) but it looks like since Webpack 4 defining `mode` should set `process.env.NODE_ENV` [automatically](https://webpack.js.org/guides/production/#specify-the-mode) - so this might've been redundant as well. "", 'comment_created': datetime.datetime(2022, 6, 7, 3, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 890741078, 'comment_body': 'Looks like the supported substitutions are `hash`, `fullhash`, `contenthash` and `chunkhash`. The reason I went with `contenthash` was because the [webpack 5 migration guide recommended it](https://webpack.js.org/migrate/5/#clean-up-configuration)', 'comment_created': datetime.datetime(2022, 6, 7, 3, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 890742233, 'comment_body': 'The `rtl-css-plugin` still has some deprecation warnings when using `contenthash`. Which is why I used `fullhash` here. ', 'comment_created': datetime.datetime(2022, 6, 7, 3, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 893625759, 'comment_body': '@TheTrio Were you able to explore this?', 'comment_created': datetime.datetime(2022, 6, 9, 15, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 893657221, 'comment_body': ""The defaults were good enough in my opinion so there wasn't much to configure. As for CSS Nano options, auto prefixing was the only one that felt necessary to enable but then I found out that stylus loader already does that. \n\nSo no, not much there I think. Do you have some specific configuration in mind? "", 'comment_created': datetime.datetime(2022, 6, 9, 15, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}]","[{'commit_sha': '55702dbee83b02455f3cdac24630c7cbb5c00faf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a75ee282aceab7bbfc662ed3272564ac343149c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9eab5cf39ab37e714a1425903537685efa69c6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d13541ef694a4f6c4eaa3bd767fb0d81f6658e', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b578ca2baf38093ceb8388a989a7704f80fe171', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cad19623efe1b1d874b2809a26499624d3e3e107', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82062b35bb7cfb53632c476c0a7c8989815384c0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1e3a4c20c50d6f2b2daed428258a22a1db81263', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4610c8378596846ec4a78fe5a96edf7d9ec2e0c3', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc50cfbc41f1ea59cb204b6a94cda22db9d6ba7f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98fe934c3de7aa2349be841327e73c4f8170af74', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '482a1c4fd0e38b6e0880efe3ab48dcc4b3261969', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f546e863640a1696436cc9c5c505b13ba9ca38f7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757ca33c4803e57ded81dc3081297762855f03a8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
969405914,add support for HMR,"Addresses #5003 and #5005 

This PR attempts to add support for HMR along with in memory mode for Webpack. 

It sets up a proxy so that all requests to Rails under `/assets` are forwarded to the Webpack dev server.  The dev server holds these files in memory instead of writing them to the disk - which should make things a bit faster. 

I've also had to split up `app.jsx` into multiple parts to ensure that the Redux store remains persistent across hot reloads. 

~~There are still some issues - for example, pages which load TinyMCE will not be hot reloaded - but for the most part, HMR should work as expected.~~ TinyMCE should no longer causes any issues. See below for details.

## How to Enable

To enable it, make sure your `application.yml` has the following options set

```
DISABLE_SENTRY: ""true""
hot_loading: ""true""
```

After that, you can run either `yarn hot` or `yarn hot:no-lint` to start the dev server. Then start the Rails server as usual.

Now you can edit the React code and have it reflected in the browser without needing a refresh. The progress(and any errors) can be viewed in the browser console.

![hmr](https://user-images.githubusercontent.com/10794178/174094309-f27ee6f9-e97d-4f52-bed6-d267d8297297.gif)

If the code results in an error(runtime or compile time), its shown in the browser as an overlay.

![error](https://user-images.githubusercontent.com/10794178/174095242-8569cb2d-3f19-45c2-bc0c-67261e188192.gif)

Across these ""refreshes"", the Redux state stays persistent. However, if you edit one of the reducer files, the page will hard reload. ",True,5013,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5013,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5013,closed,169,111,17,11,9,8,0,0,[],2022-06-16 14:35:56+00:00,2022-06-22 20:13:24+00:00,538648.0,"6 days, 5:37:28","[{'comment_id': 903016626, 'comment_body': 'so... what if, instead of switching on Rails.env.development, this middleware just varied the host based on environment? Like, it uses localhost:3000 in test and localhist:8080 in dev?', 'comment_created': datetime.datetime(2022, 6, 21, 19, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903019294, 'comment_body': 'Would this work as `/assets/javascripts/#{filename}.js` (which would delegate the domain to the proxy middleware)?', 'comment_created': datetime.datetime(2022, 6, 21, 20, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903030212, 'comment_body': ""Yes, that's correct, although the proxy middleware is probably not involved in this case since the URL has `localhost:8080` directly."", 'comment_created': datetime.datetime(2022, 6, 21, 20, 17, 42, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 903041767, 'comment_body': 'ah, I think I misunderstood you. Did you mean to replace this with `/assets/javascripts/#{filename}.js`?', 'comment_created': datetime.datetime(2022, 6, 21, 20, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 903052045, 'comment_body': ""Yeah, that that's what I meant."", 'comment_created': datetime.datetime(2022, 6, 21, 20, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903928928, 'comment_body': ""I don't really understand what is going on here. Why does one branch lead to calling the normal `perform_request` (whatever that is), and the other calls `@app.call(env)`?"", 'comment_created': datetime.datetime(2022, 6, 22, 15, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903949861, 'comment_body': 'I found a similar example here - https://github.com/ncr/rack-proxy#rails-middleware-example\n\nI think `@app.call` is the default behavior. And the `super` call is for when we need to forward the request to the Dev Server. ', 'comment_created': datetime.datetime(2022, 6, 22, 15, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 904029195, 'comment_body': ""Can you add comments about what this file is for, how it gets loaded, and what example it's following?\r\n\r\nI think this file should probably be moved to a location that more clearly communicates the idea that this is just a file for dev/test environments and isn't used in production. Maybe `lib/development/dev_server_proxy.rb`.\r\n\r\nAlso, you should add a simplecov filter for this file in `spec/spec_helper.rb`.\r\n"", 'comment_created': datetime.datetime(2022, 6, 22, 16, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '18fb465712c39f9bdbe7dcf14512dc55c3dcc6de', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1422267e6791132a78964ce9c7f5452f53de011', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b33e20387b7fc8f48f06b133940d0f8b7e152c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1aa99452eeb9302a594ab1424940b254a41125', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c231a9d30c176207a239402a51c211a2f487fa88', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce19f5c1d59701ca2d593539ff60353d9bc8381f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0790d492c450821b7fe503a848d674cdad0c9cb', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0845975ae0ec19fad1a50495a5a4c1c0c71e10c2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0442498bb19e761e3c424bc8edbffe53854c5e', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4383f52aa5c25d518876efa787d242414fd715', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a553363d3174a81421059bc4215530b4a6c31e37', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
963149567,Switch to Istanbul for coverage,"We currently use [JSCover](https://github.com/tntim96/JSCover) for getting Javascript coverage. Unfortunately, [JSCover doesn't support source maps](https://github.com/tntim96/JSCover/issues/224) which means that to get coverage data anyone can actually read and understand, we split up the `main.js` bundle(generated by webpack) into different files. This is done in `lib/tasks/coverage.rake`

This is problematic for multiple reasons - firstly even a slight change in the output can break it(since it uses regular expressions)- as happened recently when webpack switched to arrow functions instead of the using the `function` keyword. Secondly, the coverage report is based off of the code transpiled by webpack. This not only affects the statistics but more importantly, makes it harder to read the code.

 This PR attempts to switch to [Istanbul](https://istanbul.js.org/) instead, which does support the use of source maps. This means that the hack with the regex and splitting of `main.js` bundle is no longer required. 

Unfortunately, Istanbul [doesn't support storing this coverage data in local storage](https://github.com/istanbuljs/istanbuljs/issues/315). The way I've dealt with this is by writing the coverage report to the disk at the end of each test and merging it with the previous tests results.

However, this means that if the page reloads or refreshes during the test, there would be some loss of data. This is because Istanbul stores the coverage report in `window.__coverage__` instead of a persistent store.

Istanbul also generates considerably larger coverage files - around 6MB, which exceeds the 5MB limit Chrome has for local storage. So even writing to local storage manually is not an option. The only good way I can think of right now is to inject some JS ourselves so that whenever the page changes, it writes the coverage data to Indexed DB, which has a storage limit of 50MB. 

But even that might not be reliable [given how the History API works](https://stackoverflow.com/a/3522154/5055190) - so the most robust(but also the most painful) option might just be to change the way Istanbul works - instead of writing to `window.__coverage__` we write to IndexedDB. But that won't be straightforward either, since IndexedDB is non blocking, not to mention that we'd have to rewrite a lot of existing code.

I have no good answers here. But hopefully, this is a small case which won't affect the data much.

## How to run

```
yarn coverage
COVERAGE=true bundle exec rspec spec/ --color --profile --format documentation
```

The generated report is `public/js_coverage/index.html`. You can either open the html file directly or run `rails s` and go to `http://localhost:3000/js_coverage/index.html` ",True,5002,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5002,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5002,closed,425,206,16,9,1,4,0,0,[],2022-06-09 17:18:59+00:00,2022-06-16 16:00:38+00:00,600099.0,"6 days, 22:41:39","[{'comment_id': 898223385, 'comment_body': 'I think the previous name is better; the tests being run in this step are much more important than the coverage.', 'comment_created': datetime.datetime(2022, 6, 15, 17, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 898223738, 'comment_body': ""What's this change for?"", 'comment_created': datetime.datetime(2022, 6, 15, 17, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 898227390, 'comment_body': ""I've gone into detail in the [commit message](https://github.com/WikiEducationFoundation/WikiEduDashboard/commit/a9e0be488ffaee2c98e3a11115ae10ca91efd934)"", 'comment_created': datetime.datetime(2022, 6, 15, 17, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 898238971, 'comment_body': 'Very nice, thanks.', 'comment_created': datetime.datetime(2022, 6, 15, 17, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': 'a95fdd0505b02e80ec488496d6e8d85beba179fe', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aa2a8c4be1637e89b235e455505a29581b51671', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e0be488ffaee2c98e3a11115ae10ca91efd934', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3afb0cf1ffb60291d2ca35c5b199e1676ed4ddc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fa04fcefff7c7952582797c11402a21c9c0d424', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe299c7e961a261800a38688f080f98a4beaf1f4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '252ed45007634bfceefab25b1ae67fb1fefd95c4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc3c57f535b03d3bdaf7a0763678a2b2de6e9b86', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed7f5c389599ee2550ee7cde801a6bf8b9af80f8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
977390103,Upgrade yarn to v3,"This upgrades yarn from v1(yarn classic) to v3(yarn modern)

In order to update your local version of yarn, you have two options
<details>
  <summary>Using NPM or another package manager</summary>
If you don't want to uninstall the current global `yarn` for some reason, you should update to the latest version of yarn 1. If installed via npm, do

```
npm i -g yarn@latest
```

</details>
<details>
  <summary>Using Corepack</summary>
  
This is the way [recommended](https://yarnpkg.com/getting-started/install) by Yarn 

[Corepack](https://www.npmjs.com/package/corepack) is shipped by default in node `14.19.0+` and node `16.9.0+`. In this case, you need not install anything. However, you should uninstall yarn if you installed it globally(via npm, homebrew or any other package manager)

For npm, run the following command

```
npm uninstall -g yarn
```
Then enable corepack
```
corepack enable
```
</details>

Now, you should have access to `yarn`.

And that's about it. The `yarn` command will use the binary present in `.yarn/releases`, ensuring that everyone has the same version of yarn. ",True,5022,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5022,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5022,closed,15009,11130,8,6,6,2,0,0,[],2022-06-23 16:27:34+00:00,2022-07-08 20:49:09+00:00,1311695.0,"15 days, 4:21:35","[{'comment_id': 915150157, 'comment_body': 'What is the `immutable` flag for here, and should we also be using that for building production assets for deployment, to make sure they match what is being tested in CI?', 'comment_created': datetime.datetime(2022, 7, 6, 18, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915163611, 'comment_body': '`yarn install --immutable` fails if after installing the packages the lockfile changed. This happens when someone added a package to the `package.json` but forgot to commit the lockfile. Nothing to do with how assets are generated so `yarn install` should be fine for deployments.', 'comment_created': datetime.datetime(2022, 7, 6, 19, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}]","[{'commit_sha': 'ee2d6616c79f57bcd05c290945259a9bf4d715a3', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5db3b9b612dc426471b86ac588b59ca24c60860', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd22acbef7142b8582e68e1674785731cd7b5b6a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23258957dbe867a8fab665114998f0e1119e667', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86e0cad81d40ee06b82f117454f7dfce93347461', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8ff9025af6188c9d99b2aecc5a81fa5514ebd0c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
992515153,remove lodash from bundle,"There was a single occurrence of `lodash` in  `app/assets/javascripts/components/students/utils/setOtherEditedArticles.js` which caused the entire package to be included in the final bundle. This fixes that. 

Lodash is still used by `eslint`, webpack and other development tools so I've listed it as a dev-dependency.

I've also updated the command for `yarn analyze` to make sure it analyzes the production bundle and not the development one. ",True,5040,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5040,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5040,closed,8,19,4,1,0,0,0,0,[],2022-07-10 23:00:52+00:00,2022-07-11 22:37:41+00:00,85009.0,23:36:49,[],"[{'commit_sha': '0f1543a77212c2574006dda85887bc46390cb8f7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1016598904,Update react dnd,"This upgrades [`react-dnd`](https://react-dnd.github.io/react-dnd/) to v16. From this version, the library only supports functional components via hooks. I've rewritten the HOC to use hooks instead.

With this, `vendors.js` goes from `1.35MB` to `1.32MB`",True,5093,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5093,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5093,closed,157,182,9,3,3,0,0,0,[],2022-08-03 16:59:06+00:00,2022-08-05 19:13:40+00:00,180874.0,"2 days, 2:14:34",[],"[{'commit_sha': 'ed26e8f87b809847ac9cd50e884c931963faf618', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5538560f5c6f0ba9c3b6fdc237c73f4a6c2d357d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ef69e7f0e6fdce77848f375f920f5b760e2f36', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1006394736,Migrate to datefns,"This removes `moment-js` as a dependency. 

With this, `vendors.js` goes from `1.42MB` to `1.37MB`",True,5065,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5065,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5065,closed,306,211,45,16,2,7,0,0,[],2022-07-23 17:53:43+00:00,2022-07-27 18:46:46+00:00,348783.0,"4 days, 0:53:03","[{'comment_id': 929147097, 'comment_body': ""How hard would it be to fix the tests so that this isn't necessary? If it shouldn't happen in production, hopefully it doesn't... but it this would probably prevent us from discovering it if it was happening in production."", 'comment_created': datetime.datetime(2022, 7, 25, 17, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929150001, 'comment_body': 'I think `formatWithTime` and `formatWithoutTime` might have room for improvement in the names. Format what? A Date? A DateTime? I think this works for a Date or a DateTime, right?\r\n\r\nMaybe `formatDateAndTime` and `formatDate` (or `formatDateWithoutTime`)?', 'comment_created': datetime.datetime(2022, 7, 25, 17, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929150724, 'comment_body': 'Comments documenting the expected constraints on the `date` input (strings? Date objects?) would be helpful for all these functions.', 'comment_created': datetime.datetime(2022, 7, 25, 17, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929156575, 'comment_body': ""Hmm, I think this affects one or two React tests so shouldn't be too difficult to fix. Should I just raise an Error if this ever happens? That would fail the CI so if it is happening right now we would have an idea where and how."", 'comment_created': datetime.datetime(2022, 7, 25, 18, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 929158565, 'comment_body': 'Yes, I think raising a console error (and then returning the new Date, so that it would still work the same way as with moment.js) would be a good way to flush out any places where this happens in production.', 'comment_created': datetime.datetime(2022, 7, 25, 18, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929160951, 'comment_body': ""It works for any valid ISO 8601 string or a Date object. I'll improve the function names to reflect that."", 'comment_created': datetime.datetime(2022, 7, 25, 18, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 929162093, 'comment_body': ""All the functions here should work for valid ISO 8601 strings or Date objects. I'll add a comment for that."", 'comment_created': datetime.datetime(2022, 7, 25, 18, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}]","[{'commit_sha': '671907df7b293f4e0b338b5cbf5f12cc45c79dea', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46fe0cec8b2e05a80e220e3d7acd2d32cb463e6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b6a2a67915755a07bab7f9d4073ceebc22ddbe8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e8581c80fdbaf04d8bcac3a1d6877c3e78a3f7b', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4afefd0b1d660b85b3e5aa7bd0e8044eaa779bf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13261043f7f9a4cdc4a45fbf68d89b723324810c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bcc40bcfc5fed3e315dc3daf03e2e3dfac621aa', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3db15d3ac6216dfa1c89d6ee66c9e632a13ff2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0294b3fcc77d4f3231b45c40e61fcacf65e8a9', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55fdc4fc17941eeca1d836e4150feebae6bf68c1', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '889b4bf134324f98f32119205dd2e800ef8f0352', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f451030a835714425a2fb4199e43346c27e95b0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0dc5d6320ecadb01a144211d90500530fd26dc8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6042657149745b8f214801bde856ecf8070910bc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9616ea0083af1c400da11374f5df61271142e538', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2f2c86fef609b83c8cae215442295fe56047030', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1019085053,reduce usage of JQuery,"This PR attempts to remove all the instances of JQuery from all routes except for

1. the campaigns route
2. the survey route

JQuery is only downloaded when the user visits these routes.

Also, instead of including `jquery-ui` in the vendors bundle, I've imported it dynamically so that it only gets loaded when its required.

This reduces `vendors.js` from `1.32MB` to `1.27MB`",True,5098,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5098,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5098,closed,129,211,30,7,0,16,0,0,[],2022-08-05 21:00:27+00:00,2022-08-08 22:11:37+00:00,263470.0,"3 days, 1:11:10","[{'comment_id': 940569390, 'comment_body': 'any way to avoid this?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940575636, 'comment_body': 'One way would to be to do all this manually in all the haml files which need JQuery. Or I suppose I could include the JQuery from the JS itself. What do you think?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940576071, 'comment_body': 'Do we have polyfills to ensure that this works across browsers? Browser support for this just dates to early 2022, and elsewhere in the codebase we use `Object.assign` for this kind of thing.', 'comment_created': datetime.datetime(2022, 8, 8, 19, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940577198, 'comment_body': 'Is `getInitialState` the best place for this, or should it be in a different lifecycle function?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940577889, 'comment_body': 'What are these changes for?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940578263, 'comment_body': 'What are these changes for?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 16, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940583935, 'comment_body': 'I think including the jquery from the campaigns and surveys js files makes the most sense, just in terms of making sure the js files are the places that keep the details about what they require to work properly.', 'comment_created': datetime.datetime(2022, 8, 8, 19, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940587509, 'comment_body': ""Yeah `Object.assign` would be simpler but it doesn't clone the object recursively(which the JQuery version does)\r\n\r\n`core-js` does have polyfills for [`structuredClone`](https://github.com/zloirock/core-js#structuredclone) so it shouldn't be an issue."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940589375, 'comment_body': ""This should be done in the constructor but because we're not using ES6 classes that doesn't exist. In [the docs](https://reactjs.org/docs/react-without-es6.html#setting-the-initial-state), they've used `getInitialState` in place of the constructor so that's what I went with. "", 'comment_created': datetime.datetime(2022, 8, 8, 19, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940590231, 'comment_body': 'Cool.', 'comment_created': datetime.datetime(2022, 8, 8, 19, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940590629, 'comment_body': ""I've removed [`users_profile.js`](https://github.com/WikiEducationFoundation/WikiEduDashboard/blob/2f6fdea8e9c41698591754eb8c158f27955b63fc/app/assets/javascripts/utils/users_profile.js) and implemented the functionality using CSS instead."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940590719, 'comment_body': ""Hmm... do we even need deep cloning here? I can't think of a reason we would."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 28, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940591938, 'comment_body': ""This used to use JQuery's `slideToggle` to implement the closing and opening animation. This doesn't have a direct alternative in JS so I used some css animations instead."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940592820, 'comment_body': 'Whoops, I missed that. :+1: ', 'comment_created': datetime.datetime(2022, 8, 8, 19, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940593730, 'comment_body': 'No idea :shrug: I went with it just to be safe. Should I just use `Object.assign`?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940598316, 'comment_body': ""I think so. I'm pretty confident there's no reason why a shallow clone wouldn't be fine here. The `block` object is not that complicated, and here we're ultimately just replacing a block (as identified by its `id` attribute) in the redux state with a version of it that has been modified in an explicit way."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '081fda5fde634997a4608492e35aa6a8dc32e7da', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e13537ef8265d86a74f78c172b05dd248b0873cd', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02832761b49d40f47fa8478e99bd1ee9c87dd2a2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '123de17e2308d67c4ca68d4a0bda696b389634ec', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de4ddde6193a932994008b830be26c41ffd4f20', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5704f344d401654e6b383f93aa83fa1f643d77f0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '090c7035e7d6cd3e56a0f2f62fca91450d62d0f0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
992312228,convert course lists to JSX,"This PR attempts to convert several of the courses lists to react components. This includes the lists at the following URLs

1.  `/explore`
2. `/active_courses`
3. `/courses_by_wiki`

For `/explore` and `/active_courses`, the entire page is rendered in react. This includes the search functionality on `/explore`

For `/courses_by_wiki`, the header stats are part of the haml file. 

There still remain 4 courses tables which are rendered on the server. They are:-

1. `app/views/campaigns/programs.html.haml`
2. `app/views/dashboard/_admin_courses.html.haml`
3. `app/views/unsubmitted_courses/index.html.haml`
4. `app/views/dashboard/index.html.haml`

Converting them will require a bit more effort and since this PR is already quite large, I think I'll take a stab at these in another PR. ",True,5039,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5039,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5039,closed,1098,515,55,31,5,23,0,0,[],2022-07-09 22:11:13+00:00,2022-07-19 15:28:31+00:00,839838.0,"9 days, 17:17:18","[{'comment_id': 920320515, 'comment_body': ""Can't these also be imported straight from the `constants` index like the others?"", 'comment_created': datetime.datetime(2022, 7, 13, 17, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920324918, 'comment_body': 'This function would benefit from a renaming (eg, `wikiDomain`).', 'comment_created': datetime.datetime(2022, 7, 13, 17, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920343104, 'comment_body': 'This is a magic number. It should be replaced with a named constant, and if the actual code for querying 7 days worth of revisions lives on the server, the constant should have a comment about where the server value comes from.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920348077, 'comment_body': 'Put these in the right spot to keep the exports in alphabetical order.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920349934, 'comment_body': 'As we discussed, this should follow the example of the `articles` reducer for handling default sort order for columns where `desc` should be the default.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920350189, 'comment_body': 'Same here, follow the `articles` reducer as the example.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920350496, 'comment_body': 'Put these in alphabetical order.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920351098, 'comment_body': 'A comment to explain the purpose would be helpful here.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920353828, 'comment_body': 'It seems like this is being overloaded for HTML vs JSON, with the same instance variables being set up (and the same queries being run) for both.\r\n\r\nWould this make more sense with a different controller action for the html index versus the JSON active courses list?', 'comment_created': datetime.datetime(2022, 7, 13, 17, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920354827, 'comment_body': 'As above, I think re-using the same action for both HTML and JSON will result in duplicate queries being run.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920359041, 'comment_body': 'Yeah this is something I changed in [321f966](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5039/commits/321f966ea4ee2641400b4daaea692d213bffb5c2)\r\n\r\nI need the presenter to get the course string prefix. In this case though, I suppose that will always be equal to `Features.default_course_string_prefix`? If so, I could just set it to that. ', 'comment_created': datetime.datetime(2022, 7, 13, 17, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920362444, 'comment_body': ""I guess this is the only dynamic part of the explore page now? It looks like initializing a CoursesPresenter is going to also do a query for the campaign courses, even if it's not going to need it (as with serving this HTML route), so it might make sense to just use `Features.default_course_string_prefix` instead of the presenter. I think in this context it will be the same. "", 'comment_created': datetime.datetime(2022, 7, 13, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920362989, 'comment_body': 'I think this can be `Features.default_course_string_prefix` as well.', 'comment_created': datetime.datetime(2022, 7, 13, 18, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920363430, 'comment_body': 'Same here, I think. Replace presenter with `Features.default_course_string_prefix`.', 'comment_created': datetime.datetime(2022, 7, 13, 18, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920365088, 'comment_body': ""Since `_head` is already being loaded with the default string prefix, maybe these aren't necessary at all (in any of the three react_root templates you changed)?"", 'comment_created': datetime.datetime(2022, 7, 13, 18, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920370474, 'comment_body': 'Does this not work anymore?', 'comment_created': datetime.datetime(2022, 7, 13, 18, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920370588, 'comment_body': 'Does this not work anymore?', 'comment_created': datetime.datetime(2022, 7, 13, 18, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920374098, 'comment_body': ""Yeah, for /explore and /active_courses, I think these should always be equal to the default.\r\n\r\nFor an individual campaign, it could vary based on the campaign's default course type, but that could be done just by loading the campaign itself and doing `campaign.course_string_prefix` instead of going through an otherwise-unnecessary presenter."", 'comment_created': datetime.datetime(2022, 7, 13, 18, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920374707, 'comment_body': 'It does - I renamed it to `is clickable` under `campaigns list`. Should I change the name back?', 'comment_created': datetime.datetime(2022, 7, 13, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920375460, 'comment_body': 'ah I think I removed this accidentally. Will add back. ', 'comment_created': datetime.datetime(2022, 7, 13, 18, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920376147, 'comment_body': 'Nope, I just missed that. The name change is fine.', 'comment_created': datetime.datetime(2022, 7, 13, 18, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920376533, 'comment_body': 'I thought the value might be different for different campaigns. I suppose that case might not be relevant for these templates. ', 'comment_created': datetime.datetime(2022, 7, 13, 18, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920378908, 'comment_body': ""I think for explore, we can just use the default. I guess it would be theoretically possible that the featured campaign being shown here would have a different prefix, but that's unlikely to actually happen, I think it will still be better to just simplify it by using the default in this context."", 'comment_created': datetime.datetime(2022, 7, 13, 18, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': 'bcd97fcf992b865f0ad18b7cec3a1dd34a538c1d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b113ad66051a0cd05711d4dfb6e976c502fa6bb', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7939bc004a6cde5557e315a9de190c70fc97e42d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b8c0d24f5194d0ff889a6aee0969363306bb07', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '578b962bfaedd0527c2a7191de3ab922345a7625', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd36eb1d3cd38713b95a906fc7d3455be4643245', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f69504acc7fac0a6c4ff0317023dd56e92b6e9f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c7f1fe220e900ca2f6fc85d335e2cdea2da15ca', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a833a6b91b42b9b81267d50b3105cc681ac6b4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f95a43bcb3df1f3204ae355ff7214dec437f9fc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0d063ba71bc1532313fb963c17e2dd8f76d3795', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d84f21de199bbdf0233f0ba2839269405ef8a8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5196447ede44cccdf0572fcc5dcdc410cba42ccf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee3cf92e489e789f9f4ffabae0556b81e39cab5d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321f966ea4ee2641400b4daaea692d213bffb5c2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f1734d36a29b22424452906f00f080db43a750b', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd31b0ebb01ea971889d789640598f8d29efc073a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d0c60c88d7397998caf984c00f1381750ed4d94', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2bb6d301c9f535ccc5367eb9b2895e6226678fc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f421f73cf9e8a3da9b6980aa2c237d7cd9206d5a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4925a915383ed41a1be5db966fd20bcf818e7d53', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3abfccf0b7cfe42d5fb7e48672aa4add2366629', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f53f23ba9bf0ee99bfcf8f05bc954933350b7a3', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f0d96ab5a208483ffa68044a3b9b1e19867f40', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5697ab3aa02311bd4673dc853e9a7add2533d61', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '654ea52d442d86ffa60c41e0f19434ee7ca64076', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1091bf112c4557566bf2c18ab795791137dbcb43', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6e3f7c1e37d1868d63b7cc0fb725ca44295e334', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aea87b11379a77628debce18eddcb071b12cfd6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af70d0ce396cad7d0f78f856a9af8c193b759b20', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3449d8e25b6b1074b2297ae7649b5af5463d964', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
980147676,Convert campaigns list to JSX,"This PR attempts to convert all campaigns list to React components. 

The list(or rather table) of campaigns is rendered on 3 routes. All of these routes have a different ""version"" of the list

1. `/explore` -> render only the 10 newest campaigns. Displays campaign statistics
2. `/` -> render the campaigns created by the user. Displays campaign statistics
3. `/campaigns` -> render all the campaigns. Display only the title and links to the CSVs. Has a search bar.

The views responsible for these were `/app/views/campaigns/_campaigns.html.haml` and `/app/views/campaigns/_row.html.haml`. They are no longer required and have been removed.

I've created several new components, most important of which is `CampaignList`. I've tried to make this component as generic as possible to allow sharing code between the lists rendered on the different routes. 

```js
const CampaignList = ({ keys, showSearch, RowElement, headerText, userOnly, newest }) => ...
```

I've also rewritten most of [`app/assets/javascripts/campaigns.js`](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5026/commits/94e72eea21ae2773bfd2fbab6cfdc2d30ae8d43b#diff-782d559cd700c376e62d9282ff694ecf9372160ee8c7ef47ac94fd67a65202ea) to use vanilla JS instead of jQuery. Because of the use of the Editable jQuery plugin for editing campaigns, converting the rest of the file would require a lot more work - likely converting the whole campaigns route to a React component.",True,5026,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5026,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5026,closed,551,356,31,29,4,9,0,0,[],2022-06-27 14:33:21+00:00,2022-07-11 19:11:17+00:00,1226276.0,"14 days, 4:37:56","[{'comment_id': 915172071, 'comment_body': 'Are these both supposed to be true/false values? A comment on how to use the parameters would be helpful. Does the name `fetchAllCampaigns` still accurately describe the function, or should it be renamed?', 'comment_created': datetime.datetime(2022, 7, 6, 19, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915188598, 'comment_body': ""Yes, they are supposed to be booleans. I forgot to add a default value - will do that to make sure existing code doesn't break. \r\n\r\nAs for renaming it, I thought about calling it `fetchCampaigns` but that already exists. "", 'comment_created': datetime.datetime(2022, 7, 6, 19, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 915199326, 'comment_body': ""Can you explain what this change does and why it's needed?"", 'comment_created': datetime.datetime(2022, 7, 6, 19, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915200804, 'comment_body': 'What  does `fetchCampaigns` do, and can it be renamed?', 'comment_created': datetime.datetime(2022, 7, 6, 19, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915224369, 'comment_body': ""This messes up the alignment of the table headers. \r\n![image](https://user-images.githubusercontent.com/10794178/177635959-e72ffdc8-9f61-4eb8-a65d-f9f9e4650320.png)\r\n\r\nThe reason it doesn't affect other tables is because their columns show only on desktops, which overrides `display` so this style never applies.\r\n\r\nWhich reminds me - should I set `desktop_only` to `true` for these columns?"", 'comment_created': datetime.datetime(2022, 7, 6, 20, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 915235595, 'comment_body': ""Mobile is very bad overall these days, so I don't think there's much benefit in narrow things like setting 'desktop_only'. At some point — maybe a future internship project — we'll go more systematically through to get things tidy on mobile."", 'comment_created': datetime.datetime(2022, 7, 6, 20, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 916874064, 'comment_body': ""I've renamed this to `fetchCampaignStatistics`. The `fetchAllCampaigns` function now returns all the campaigns(but without the statistics) "", 'comment_created': datetime.datetime(2022, 7, 8, 14, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 917009158, 'comment_body': 'This is not a good variable name. `@campaigns` instead?', 'comment_created': datetime.datetime(2022, 7, 8, 17, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 918090861, 'comment_body': ""This action name doesn't match what's going on here. We don't use fetchCampaignStatistics with *all* campaigns anymore.\r\n\r\nThis action and the corresponding reducer code will be used for both fetching *all* campaigns without stats, and for fetching some set of campaigns with stats. It's probably fine that they continue to share the same reducer path, but these cases should use different redux action types so that the action log is an accurate account of what's happening: `RECEIVE_ALL_CAMPAIGNS` vs `RECEIVE_CAMPAIGNS_WITH_STATS` or similar.\r\n\r\nSimilarly, I note that we use `RECEIVE_CAMPAIGNS` action specifically for receiving the campaigns for an individual course. That should be renamed `RECEIVE_COURSE_CAMPAIGNS` or similar.\r\n"", 'comment_created': datetime.datetime(2022, 7, 11, 15, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': 'b66916930aae176d0bfcc3fa0b738a2f501f8b48', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58bdbde56deefcc00a28d7ef61a450611559e47', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea58fab7d646723b8c6d64d8f116e0b99e6fe956', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9a13dc25ea8350af28d84ec65965ed1672752ff', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a470f640f89de9552e9c6c2f57e92568f0bb6338', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e383f248042cae2cbd5034868322b68a1baf48e8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9601844f6fe9014fa9205ed4fbc6f5bd0ede21c2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4754028f5bcc1cdbc0b8cd7af77a5529c05405ab', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba5b435717a14cb14457df06958bbf028c76719d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98deaca29f028c6cca542a843717791b06f3497d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dc3b0719fe1afca4c6e624b0141cd78ae0686cf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab03ce73bc9753822361b9dfb012210e457eb9ed', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14c6bc4172eafe7067818f682782eb416e3841db', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f703c58fb32e964b089f403c212e2b18177265ed', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae4d5e7122716a491bc22c8d7d58658dd7993e8d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97af2419414511e57345aa08ae665ec1d273eab7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77d9247b09af1bbc2c09b651bd82e826017d8c1f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '500dc2d0db2886a2152cee11503b7c1bef1781a2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b67392a97f726e9ee9ecd1f98208b465cfdb103a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c91b30ad088822a6705f0f78149a404bc1383f7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c41db0940abe076df0a5ce1d9b93917ebe755d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a015013224182ba104755df78b1ab308bf24ab', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5306a6aa5f72b24456fd89a4d51ab311ef44a5a0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba5a99c1fabd60e5fd486bea3c0f174d130a385', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f51943d8d02986bad189341107ac6c71c61ef39', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38a0e7c81b5d5c6ff0902518595d3d2f57cc994', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b59cb16430e2f25d1bba70daea304a05007be8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8adabf2f4d2ee9113f0e7ed14d177617a6885b44', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c843599e7f48159174f6170da6f0589996bb3f5', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
943939913,Transition to webpack 5,"# What this PR does

Upgrades webpack to version 5

# Changes

### 1. Switch to relative paths for css assets

This is because absolute paths are now relative to the root of the project. 

### 2. Using asset modules instead of `url-loader`

[`url-loader`](https://v4.webpack.js.org/loaders/url-loader/) has been deprecated for Webpack 5 in favor of [asset modules](https://webpack.js.org/guides/asset-modules/). There are multiple asset types and I have gone with the [general asset type](https://webpack.js.org/guides/asset-modules/#general-asset-type). From the documentation - 

> Now webpack will automatically choose between resource and inline by following a default condition: a file with size less than 8kb will be treated as a inline module type and resource module type otherwise.

### 3. Single manifest file

Before, two manifest files were being created - one for css and another for JS. I've combined them into one `manifests.json` file so that the manifest plugin is only executed once. 

### 4. Replace `webpack-rtl-plugin` with `rtlcss-webpack-plugin`

[`webpack-rtl-plugin`](https://github.com/romainberger/webpack-rtl-plugin) was last updated on Mar 15, 2019. Despite there being a [PR which adds support for Webpack 5](https://github.com/romainberger/webpack-rtl-plugin/pull/37), it hasn't been merged for over 8 months. So its been replaced with [`rtlcss-webpack-plugin`](https://github.com/wix/rtlcss-webpack-plugin/) which looks to be maintained more actively. 

### 5. Add CssMinimizerWebpackPlugin to minify css

For some reason,`webpack-rtl-plugin` also minified the css files - both the RTL and non RTL ones. Since we no longer use that plugin, we need to minify the css with  [`css-minimizer-webpack-plugin`](https://github.com/webpack-contrib/css-minimizer-webpack-plugin) 

### 6. Remove ExcludeAssetsPlugin

This plugin was used to clean up the empty JS files which were being generated by Webpack. With v5, Webpack no longer generates these files, so there was no need to use this plugin. 

### 7. Remove Parallel Webpack

[Parallel Webpack](https://github.com/trivago/parallel-webpack) was used to speed up the build process by spreading the workload across multiple processors. The repo for this project has been archived and it does not support webpack 5. [Webpack doesn't have native support for parallelism](https://github.com/webpack/webpack/issues/14386), but that might change in the future. 

### 8. Use webpack dev server by default

Earlier, this was only being used with `yarn hot`. I couldn't get `yarn hot` to work so it might have been broken for a while. Regardless, `yarn start` now uses webpack dev server. The files are written to the disk presently, but I will try to use the server directly. I haven't been been able to make that work so far. The switch to webpack dev server also means that the webpage reloads automatically on code changes. It also shows warnings and errors inside of the browser. 

### 9. Fix regex for coverage

The regex which split `main.js` into multiple modules broke because webpack uses arrow functions instead of the function keyword. [I've changed that so that](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4982/commits/3a75ee282aceab7bbfc662ed3272564ac343149c) `yarn coverage` still works as expected. 
 
There are some other configuration changes but these are the major ones I could think of. 

# Performance

These numbers are obviously not scientific but the time taken is consistent from the testing I've done.

| command  | cache | Webpack 5 | Webpack 4 |
| --------  | ------------------- | --------------------- | --------------------- |
| `yarn start` | no | 70s | 40s |
| `yarn start` | yes | 10s | 10s |
| `yarn build` | no | 101s | 75s |
| `yarn build` | yes | 41s | 25s |

For rebuilds, it takes about 2000ms the first time and the subsequent rebuilds are much faster, around 800ms. This is probably due to the source map configuration. Unfortunately, if we want the right line numbers in the error messages, I think this is the best that can be done. More details can be found [here](https://webpack.js.org/configuration/devtool/)",True,4982,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4982,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4982,closed,1506,2914,10,14,8,19,0,0,[],2022-05-23 05:23:12+00:00,2022-06-09 15:15:00+00:00,1504308.0,"17 days, 9:51:48","[{'comment_id': 890220074, 'comment_body': 'What other hash options are available?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 38, 36, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890221209, 'comment_body': 'Is this available in webpack 5?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 39, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890221581, 'comment_body': 'What other hash options are available?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890224451, 'comment_body': ""Why don't we keep this in memory itself? Why do we need to write to disk?"", 'comment_created': datetime.datetime(2022, 6, 6, 14, 42, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890226463, 'comment_body': 'Can we explore doing splitting for vendor bundle?', 'comment_created': datetime.datetime(2022, 6, 6, 14, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890266549, 'comment_body': 'Explore if we can pass any options that might be helpful.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890274762, 'comment_body': 'currently has an issue with dynamic import bundles if we switch to in-memory', 'comment_created': datetime.datetime(2022, 6, 6, 15, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890275397, 'comment_body': 'Need to check how this works with Ruby server and enable hot module replacement.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 33, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890279265, 'comment_body': 'Remove this.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 37, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890279367, 'comment_body': '```suggestion\r\n  const outputPath = path.resolve(`${config.outputPath}/${config.jsDirectory}`);\r\n```', 'comment_created': datetime.datetime(2022, 6, 6, 15, 37, 12, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890283454, 'comment_body': ""```suggestion\r\n  let devtool = 'eval-cheap-source-map';\r\n```"", 'comment_created': datetime.datetime(2022, 6, 6, 15, 41, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890293871, 'comment_body': 'Can explore later on how to split vendor checks and make it work with Ruby', 'comment_created': datetime.datetime(2022, 6, 6, 15, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890299350, 'comment_body': '@ragesoss Need to validate if `coverage.rake` file is working as expected since the output in `public/assets/javascripts/main.js` might have changed from webpack 4 to 5.', 'comment_created': datetime.datetime(2022, 6, 6, 15, 59, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 890633134, 'comment_body': 'Yep, I tried it out locally and the coverage.rake is still working.', 'comment_created': datetime.datetime(2022, 6, 6, 23, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 890739438, 'comment_body': ""[It is](https://webpack.js.org/plugins/define-plugin/) but it looks like since Webpack 4 defining `mode` should set `process.env.NODE_ENV` [automatically](https://webpack.js.org/guides/production/#specify-the-mode) - so this might've been redundant as well. "", 'comment_created': datetime.datetime(2022, 6, 7, 3, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 890741078, 'comment_body': 'Looks like the supported substitutions are `hash`, `fullhash`, `contenthash` and `chunkhash`. The reason I went with `contenthash` was because the [webpack 5 migration guide recommended it](https://webpack.js.org/migrate/5/#clean-up-configuration)', 'comment_created': datetime.datetime(2022, 6, 7, 3, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 890742233, 'comment_body': 'The `rtl-css-plugin` still has some deprecation warnings when using `contenthash`. Which is why I used `fullhash` here. ', 'comment_created': datetime.datetime(2022, 6, 7, 3, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 893625759, 'comment_body': '@TheTrio Were you able to explore this?', 'comment_created': datetime.datetime(2022, 6, 9, 15, 7, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dhruvdutt', 'type': 'User'}, {'comment_id': 893657221, 'comment_body': ""The defaults were good enough in my opinion so there wasn't much to configure. As for CSS Nano options, auto prefixing was the only one that felt necessary to enable but then I found out that stylus loader already does that. \n\nSo no, not much there I think. Do you have some specific configuration in mind? "", 'comment_created': datetime.datetime(2022, 6, 9, 15, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}]","[{'commit_sha': '55702dbee83b02455f3cdac24630c7cbb5c00faf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a75ee282aceab7bbfc662ed3272564ac343149c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9eab5cf39ab37e714a1425903537685efa69c6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19d13541ef694a4f6c4eaa3bd767fb0d81f6658e', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b578ca2baf38093ceb8388a989a7704f80fe171', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cad19623efe1b1d874b2809a26499624d3e3e107', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82062b35bb7cfb53632c476c0a7c8989815384c0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1e3a4c20c50d6f2b2daed428258a22a1db81263', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4610c8378596846ec4a78fe5a96edf7d9ec2e0c3', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc50cfbc41f1ea59cb204b6a94cda22db9d6ba7f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98fe934c3de7aa2349be841327e73c4f8170af74', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '482a1c4fd0e38b6e0880efe3ab48dcc4b3261969', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f546e863640a1696436cc9c5c505b13ba9ca38f7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '757ca33c4803e57ded81dc3081297762855f03a8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
955390244,Switch to react spring,"Addresses #4510 

This also introduces a new drop target so that you can drag items into an empty week. 
 
Before: 

![before](https://user-images.githubusercontent.com/10794178/171541604-a9fd4719-3b3d-4e62-891e-b5e5c85d41cc.gif)

After: 

![drag](https://user-images.githubusercontent.com/10794178/171541654-bae24620-bd3a-4e44-aadc-1681f4741f70.gif)
",True,4992,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4992,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4992,closed,153,57,7,5,3,1,0,0,[],2022-06-02 02:43:39+00:00,2022-06-03 19:01:03+00:00,145044.0,"1 day, 16:17:24","[{'comment_id': 888447109, 'comment_body': 'Use I18n.', 'comment_created': datetime.datetime(2022, 6, 2, 22, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '9b6a355982311048ff84876c8eb2d726b683aa01', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c158316821cda14140eb7af44264692fe466ab07', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54d4a2337658a7b10240ba661684704b13773e27', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79c11a524598d1f15630cad382f44917f68fb03b', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '818fd8298780026c868a432517317f43b5e8a0a6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
959875300,add fallback route,"This prevents the ""route not found"" warning for pages which are server rendered. Should clean up the logs of the test suite. ",True,4997,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/4997,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/4997,closed,2,0,1,1,1,0,0,0,[],2022-06-07 04:32:13+00:00,2022-06-07 17:48:43+00:00,47790.0,13:16:30,[],"[{'commit_sha': '072393ee4049f439c79c707925921e4bc69d9f88', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
963149567,Switch to Istanbul for coverage,"We currently use [JSCover](https://github.com/tntim96/JSCover) for getting Javascript coverage. Unfortunately, [JSCover doesn't support source maps](https://github.com/tntim96/JSCover/issues/224) which means that to get coverage data anyone can actually read and understand, we split up the `main.js` bundle(generated by webpack) into different files. This is done in `lib/tasks/coverage.rake`

This is problematic for multiple reasons - firstly even a slight change in the output can break it(since it uses regular expressions)- as happened recently when webpack switched to arrow functions instead of the using the `function` keyword. Secondly, the coverage report is based off of the code transpiled by webpack. This not only affects the statistics but more importantly, makes it harder to read the code.

 This PR attempts to switch to [Istanbul](https://istanbul.js.org/) instead, which does support the use of source maps. This means that the hack with the regex and splitting of `main.js` bundle is no longer required. 

Unfortunately, Istanbul [doesn't support storing this coverage data in local storage](https://github.com/istanbuljs/istanbuljs/issues/315). The way I've dealt with this is by writing the coverage report to the disk at the end of each test and merging it with the previous tests results.

However, this means that if the page reloads or refreshes during the test, there would be some loss of data. This is because Istanbul stores the coverage report in `window.__coverage__` instead of a persistent store.

Istanbul also generates considerably larger coverage files - around 6MB, which exceeds the 5MB limit Chrome has for local storage. So even writing to local storage manually is not an option. The only good way I can think of right now is to inject some JS ourselves so that whenever the page changes, it writes the coverage data to Indexed DB, which has a storage limit of 50MB. 

But even that might not be reliable [given how the History API works](https://stackoverflow.com/a/3522154/5055190) - so the most robust(but also the most painful) option might just be to change the way Istanbul works - instead of writing to `window.__coverage__` we write to IndexedDB. But that won't be straightforward either, since IndexedDB is non blocking, not to mention that we'd have to rewrite a lot of existing code.

I have no good answers here. But hopefully, this is a small case which won't affect the data much.

## How to run

```
yarn coverage
COVERAGE=true bundle exec rspec spec/ --color --profile --format documentation
```

The generated report is `public/js_coverage/index.html`. You can either open the html file directly or run `rails s` and go to `http://localhost:3000/js_coverage/index.html` ",True,5002,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5002,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5002,closed,425,206,16,9,1,4,0,0,[],2022-06-09 17:18:59+00:00,2022-06-16 16:00:38+00:00,600099.0,"6 days, 22:41:39","[{'comment_id': 898223385, 'comment_body': 'I think the previous name is better; the tests being run in this step are much more important than the coverage.', 'comment_created': datetime.datetime(2022, 6, 15, 17, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 898223738, 'comment_body': ""What's this change for?"", 'comment_created': datetime.datetime(2022, 6, 15, 17, 9, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 898227390, 'comment_body': ""I've gone into detail in the [commit message](https://github.com/WikiEducationFoundation/WikiEduDashboard/commit/a9e0be488ffaee2c98e3a11115ae10ca91efd934)"", 'comment_created': datetime.datetime(2022, 6, 15, 17, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 898238971, 'comment_body': 'Very nice, thanks.', 'comment_created': datetime.datetime(2022, 6, 15, 17, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': 'a95fdd0505b02e80ec488496d6e8d85beba179fe', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aa2a8c4be1637e89b235e455505a29581b51671', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9e0be488ffaee2c98e3a11115ae10ca91efd934', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3afb0cf1ffb60291d2ca35c5b199e1676ed4ddc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fa04fcefff7c7952582797c11402a21c9c0d424', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe299c7e961a261800a38688f080f98a4beaf1f4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '252ed45007634bfceefab25b1ae67fb1fefd95c4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc3c57f535b03d3bdaf7a0763678a2b2de6e9b86', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed7f5c389599ee2550ee7cde801a6bf8b9af80f8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
969405914,add support for HMR,"Addresses #5003 and #5005 

This PR attempts to add support for HMR along with in memory mode for Webpack. 

It sets up a proxy so that all requests to Rails under `/assets` are forwarded to the Webpack dev server.  The dev server holds these files in memory instead of writing them to the disk - which should make things a bit faster. 

I've also had to split up `app.jsx` into multiple parts to ensure that the Redux store remains persistent across hot reloads. 

~~There are still some issues - for example, pages which load TinyMCE will not be hot reloaded - but for the most part, HMR should work as expected.~~ TinyMCE should no longer causes any issues. See below for details.

## How to Enable

To enable it, make sure your `application.yml` has the following options set

```
DISABLE_SENTRY: ""true""
hot_loading: ""true""
```

After that, you can run either `yarn hot` or `yarn hot:no-lint` to start the dev server. Then start the Rails server as usual.

Now you can edit the React code and have it reflected in the browser without needing a refresh. The progress(and any errors) can be viewed in the browser console.

![hmr](https://user-images.githubusercontent.com/10794178/174094309-f27ee6f9-e97d-4f52-bed6-d267d8297297.gif)

If the code results in an error(runtime or compile time), its shown in the browser as an overlay.

![error](https://user-images.githubusercontent.com/10794178/174095242-8569cb2d-3f19-45c2-bc0c-67261e188192.gif)

Across these ""refreshes"", the Redux state stays persistent. However, if you edit one of the reducer files, the page will hard reload. ",True,5013,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5013,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5013,closed,169,111,17,11,9,8,0,0,[],2022-06-16 14:35:56+00:00,2022-06-22 20:13:24+00:00,538648.0,"6 days, 5:37:28","[{'comment_id': 903016626, 'comment_body': 'so... what if, instead of switching on Rails.env.development, this middleware just varied the host based on environment? Like, it uses localhost:3000 in test and localhist:8080 in dev?', 'comment_created': datetime.datetime(2022, 6, 21, 19, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903019294, 'comment_body': 'Would this work as `/assets/javascripts/#{filename}.js` (which would delegate the domain to the proxy middleware)?', 'comment_created': datetime.datetime(2022, 6, 21, 20, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903030212, 'comment_body': ""Yes, that's correct, although the proxy middleware is probably not involved in this case since the URL has `localhost:8080` directly."", 'comment_created': datetime.datetime(2022, 6, 21, 20, 17, 42, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 903041767, 'comment_body': 'ah, I think I misunderstood you. Did you mean to replace this with `/assets/javascripts/#{filename}.js`?', 'comment_created': datetime.datetime(2022, 6, 21, 20, 32, 35, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 903052045, 'comment_body': ""Yeah, that that's what I meant."", 'comment_created': datetime.datetime(2022, 6, 21, 20, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903928928, 'comment_body': ""I don't really understand what is going on here. Why does one branch lead to calling the normal `perform_request` (whatever that is), and the other calls `@app.call(env)`?"", 'comment_created': datetime.datetime(2022, 6, 22, 15, 44, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 903949861, 'comment_body': 'I found a similar example here - https://github.com/ncr/rack-proxy#rails-middleware-example\n\nI think `@app.call` is the default behavior. And the `super` call is for when we need to forward the request to the Dev Server. ', 'comment_created': datetime.datetime(2022, 6, 22, 15, 59, 28, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 904029195, 'comment_body': ""Can you add comments about what this file is for, how it gets loaded, and what example it's following?\r\n\r\nI think this file should probably be moved to a location that more clearly communicates the idea that this is just a file for dev/test environments and isn't used in production. Maybe `lib/development/dev_server_proxy.rb`.\r\n\r\nAlso, you should add a simplecov filter for this file in `spec/spec_helper.rb`.\r\n"", 'comment_created': datetime.datetime(2022, 6, 22, 16, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '18fb465712c39f9bdbe7dcf14512dc55c3dcc6de', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1422267e6791132a78964ce9c7f5452f53de011', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57b33e20387b7fc8f48f06b133940d0f8b7e152c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1aa99452eeb9302a594ab1424940b254a41125', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c231a9d30c176207a239402a51c211a2f487fa88', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce19f5c1d59701ca2d593539ff60353d9bc8381f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd0790d492c450821b7fe503a848d674cdad0c9cb', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0845975ae0ec19fad1a50495a5a4c1c0c71e10c2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0442498bb19e761e3c424bc8edbffe53854c5e', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb4383f52aa5c25d518876efa787d242414fd715', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a553363d3174a81421059bc4215530b4a6c31e37', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
970567617,Update coverage documentation,This also deletes `lib/tasks/instrument_js.rake`. ,True,5018,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5018,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5018,closed,6,51,2,2,1,0,0,0,[],2022-06-17 12:28:17+00:00,2022-06-21 17:23:57+00:00,363340.0,"4 days, 4:55:40",[],"[{'commit_sha': '6df4b470c8c5d2399ca107a2d8671f7066cb4798', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4938bee10217aa82a18bbd9c4ec56e119ea578e', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
977390103,Upgrade yarn to v3,"This upgrades yarn from v1(yarn classic) to v3(yarn modern)

In order to update your local version of yarn, you have two options
<details>
  <summary>Using NPM or another package manager</summary>
If you don't want to uninstall the current global `yarn` for some reason, you should update to the latest version of yarn 1. If installed via npm, do

```
npm i -g yarn@latest
```

</details>
<details>
  <summary>Using Corepack</summary>
  
This is the way [recommended](https://yarnpkg.com/getting-started/install) by Yarn 

[Corepack](https://www.npmjs.com/package/corepack) is shipped by default in node `14.19.0+` and node `16.9.0+`. In this case, you need not install anything. However, you should uninstall yarn if you installed it globally(via npm, homebrew or any other package manager)

For npm, run the following command

```
npm uninstall -g yarn
```
Then enable corepack
```
corepack enable
```
</details>

Now, you should have access to `yarn`.

And that's about it. The `yarn` command will use the binary present in `.yarn/releases`, ensuring that everyone has the same version of yarn. ",True,5022,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5022,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5022,closed,15009,11130,8,6,6,2,0,0,[],2022-06-23 16:27:34+00:00,2022-07-08 20:49:09+00:00,1311695.0,"15 days, 4:21:35","[{'comment_id': 915150157, 'comment_body': 'What is the `immutable` flag for here, and should we also be using that for building production assets for deployment, to make sure they match what is being tested in CI?', 'comment_created': datetime.datetime(2022, 7, 6, 18, 43, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915163611, 'comment_body': '`yarn install --immutable` fails if after installing the packages the lockfile changed. This happens when someone added a package to the `package.json` but forgot to commit the lockfile. Nothing to do with how assets are generated so `yarn install` should be fine for deployments.', 'comment_created': datetime.datetime(2022, 7, 6, 19, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}]","[{'commit_sha': 'ee2d6616c79f57bcd05c290945259a9bf4d715a3', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5db3b9b612dc426471b86ac588b59ca24c60860', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd22acbef7142b8582e68e1674785731cd7b5b6a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f23258957dbe867a8fab665114998f0e1119e667', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86e0cad81d40ee06b82f117454f7dfce93347461', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8ff9025af6188c9d99b2aecc5a81fa5514ebd0c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
980147676,Convert campaigns list to JSX,"This PR attempts to convert all campaigns list to React components. 

The list(or rather table) of campaigns is rendered on 3 routes. All of these routes have a different ""version"" of the list

1. `/explore` -> render only the 10 newest campaigns. Displays campaign statistics
2. `/` -> render the campaigns created by the user. Displays campaign statistics
3. `/campaigns` -> render all the campaigns. Display only the title and links to the CSVs. Has a search bar.

The views responsible for these were `/app/views/campaigns/_campaigns.html.haml` and `/app/views/campaigns/_row.html.haml`. They are no longer required and have been removed.

I've created several new components, most important of which is `CampaignList`. I've tried to make this component as generic as possible to allow sharing code between the lists rendered on the different routes. 

```js
const CampaignList = ({ keys, showSearch, RowElement, headerText, userOnly, newest }) => ...
```

I've also rewritten most of [`app/assets/javascripts/campaigns.js`](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5026/commits/94e72eea21ae2773bfd2fbab6cfdc2d30ae8d43b#diff-782d559cd700c376e62d9282ff694ecf9372160ee8c7ef47ac94fd67a65202ea) to use vanilla JS instead of jQuery. Because of the use of the Editable jQuery plugin for editing campaigns, converting the rest of the file would require a lot more work - likely converting the whole campaigns route to a React component.",True,5026,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5026,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5026,closed,551,356,31,29,4,9,0,0,[],2022-06-27 14:33:21+00:00,2022-07-11 19:11:17+00:00,1226276.0,"14 days, 4:37:56","[{'comment_id': 915172071, 'comment_body': 'Are these both supposed to be true/false values? A comment on how to use the parameters would be helpful. Does the name `fetchAllCampaigns` still accurately describe the function, or should it be renamed?', 'comment_created': datetime.datetime(2022, 7, 6, 19, 11, 29, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915188598, 'comment_body': ""Yes, they are supposed to be booleans. I forgot to add a default value - will do that to make sure existing code doesn't break. \r\n\r\nAs for renaming it, I thought about calling it `fetchCampaigns` but that already exists. "", 'comment_created': datetime.datetime(2022, 7, 6, 19, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 915199326, 'comment_body': ""Can you explain what this change does and why it's needed?"", 'comment_created': datetime.datetime(2022, 7, 6, 19, 48, 3, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915200804, 'comment_body': 'What  does `fetchCampaigns` do, and can it be renamed?', 'comment_created': datetime.datetime(2022, 7, 6, 19, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 915224369, 'comment_body': ""This messes up the alignment of the table headers. \r\n![image](https://user-images.githubusercontent.com/10794178/177635959-e72ffdc8-9f61-4eb8-a65d-f9f9e4650320.png)\r\n\r\nThe reason it doesn't affect other tables is because their columns show only on desktops, which overrides `display` so this style never applies.\r\n\r\nWhich reminds me - should I set `desktop_only` to `true` for these columns?"", 'comment_created': datetime.datetime(2022, 7, 6, 20, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 915235595, 'comment_body': ""Mobile is very bad overall these days, so I don't think there's much benefit in narrow things like setting 'desktop_only'. At some point — maybe a future internship project — we'll go more systematically through to get things tidy on mobile."", 'comment_created': datetime.datetime(2022, 7, 6, 20, 37, 30, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 916874064, 'comment_body': ""I've renamed this to `fetchCampaignStatistics`. The `fetchAllCampaigns` function now returns all the campaigns(but without the statistics) "", 'comment_created': datetime.datetime(2022, 7, 8, 14, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 917009158, 'comment_body': 'This is not a good variable name. `@campaigns` instead?', 'comment_created': datetime.datetime(2022, 7, 8, 17, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 918090861, 'comment_body': ""This action name doesn't match what's going on here. We don't use fetchCampaignStatistics with *all* campaigns anymore.\r\n\r\nThis action and the corresponding reducer code will be used for both fetching *all* campaigns without stats, and for fetching some set of campaigns with stats. It's probably fine that they continue to share the same reducer path, but these cases should use different redux action types so that the action log is an accurate account of what's happening: `RECEIVE_ALL_CAMPAIGNS` vs `RECEIVE_CAMPAIGNS_WITH_STATS` or similar.\r\n\r\nSimilarly, I note that we use `RECEIVE_CAMPAIGNS` action specifically for receiving the campaigns for an individual course. That should be renamed `RECEIVE_COURSE_CAMPAIGNS` or similar.\r\n"", 'comment_created': datetime.datetime(2022, 7, 11, 15, 45, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': 'b66916930aae176d0bfcc3fa0b738a2f501f8b48', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f58bdbde56deefcc00a28d7ef61a450611559e47', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea58fab7d646723b8c6d64d8f116e0b99e6fe956', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9a13dc25ea8350af28d84ec65965ed1672752ff', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a470f640f89de9552e9c6c2f57e92568f0bb6338', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e383f248042cae2cbd5034868322b68a1baf48e8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9601844f6fe9014fa9205ed4fbc6f5bd0ede21c2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4754028f5bcc1cdbc0b8cd7af77a5529c05405ab', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba5b435717a14cb14457df06958bbf028c76719d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98deaca29f028c6cca542a843717791b06f3497d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dc3b0719fe1afca4c6e624b0141cd78ae0686cf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab03ce73bc9753822361b9dfb012210e457eb9ed', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14c6bc4172eafe7067818f682782eb416e3841db', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f703c58fb32e964b089f403c212e2b18177265ed', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae4d5e7122716a491bc22c8d7d58658dd7993e8d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97af2419414511e57345aa08ae665ec1d273eab7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77d9247b09af1bbc2c09b651bd82e826017d8c1f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '500dc2d0db2886a2152cee11503b7c1bef1781a2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b67392a97f726e9ee9ecd1f98208b465cfdb103a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c91b30ad088822a6705f0f78149a404bc1383f7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18c41db0940abe076df0a5ce1d9b93917ebe755d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6a015013224182ba104755df78b1ab308bf24ab', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5306a6aa5f72b24456fd89a4d51ab311ef44a5a0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aba5a99c1fabd60e5fd486bea3c0f174d130a385', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f51943d8d02986bad189341107ac6c71c61ef39', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38a0e7c81b5d5c6ff0902518595d3d2f57cc994', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80b59cb16430e2f25d1bba70daea304a05007be8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8adabf2f4d2ee9113f0e7ed14d177617a6885b44', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c843599e7f48159174f6170da6f0589996bb3f5', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
992294157,add instructions for HMR,I just remembered that we don't actually have instructions for how to enable HMR,True,5038,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5038,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5038,closed,13,5,1,1,0,0,0,0,[],2022-07-09 19:39:19+00:00,2022-07-11 19:16:32+00:00,171433.0,"1 day, 23:37:13",[],"[{'commit_sha': '3dd790b816f00ac4489dd2fc1900241bea4ab017', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
992312228,convert course lists to JSX,"This PR attempts to convert several of the courses lists to react components. This includes the lists at the following URLs

1.  `/explore`
2. `/active_courses`
3. `/courses_by_wiki`

For `/explore` and `/active_courses`, the entire page is rendered in react. This includes the search functionality on `/explore`

For `/courses_by_wiki`, the header stats are part of the haml file. 

There still remain 4 courses tables which are rendered on the server. They are:-

1. `app/views/campaigns/programs.html.haml`
2. `app/views/dashboard/_admin_courses.html.haml`
3. `app/views/unsubmitted_courses/index.html.haml`
4. `app/views/dashboard/index.html.haml`

Converting them will require a bit more effort and since this PR is already quite large, I think I'll take a stab at these in another PR. ",True,5039,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5039,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5039,closed,1098,515,55,31,5,23,0,0,[],2022-07-09 22:11:13+00:00,2022-07-19 15:28:31+00:00,839838.0,"9 days, 17:17:18","[{'comment_id': 920320515, 'comment_body': ""Can't these also be imported straight from the `constants` index like the others?"", 'comment_created': datetime.datetime(2022, 7, 13, 17, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920324918, 'comment_body': 'This function would benefit from a renaming (eg, `wikiDomain`).', 'comment_created': datetime.datetime(2022, 7, 13, 17, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920343104, 'comment_body': 'This is a magic number. It should be replaced with a named constant, and if the actual code for querying 7 days worth of revisions lives on the server, the constant should have a comment about where the server value comes from.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 38, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920348077, 'comment_body': 'Put these in the right spot to keep the exports in alphabetical order.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920349934, 'comment_body': 'As we discussed, this should follow the example of the `articles` reducer for handling default sort order for columns where `desc` should be the default.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920350189, 'comment_body': 'Same here, follow the `articles` reducer as the example.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920350496, 'comment_body': 'Put these in alphabetical order.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920351098, 'comment_body': 'A comment to explain the purpose would be helpful here.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920353828, 'comment_body': 'It seems like this is being overloaded for HTML vs JSON, with the same instance variables being set up (and the same queries being run) for both.\r\n\r\nWould this make more sense with a different controller action for the html index versus the JSON active courses list?', 'comment_created': datetime.datetime(2022, 7, 13, 17, 51, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920354827, 'comment_body': 'As above, I think re-using the same action for both HTML and JSON will result in duplicate queries being run.', 'comment_created': datetime.datetime(2022, 7, 13, 17, 52, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920359041, 'comment_body': 'Yeah this is something I changed in [321f966](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5039/commits/321f966ea4ee2641400b4daaea692d213bffb5c2)\r\n\r\nI need the presenter to get the course string prefix. In this case though, I suppose that will always be equal to `Features.default_course_string_prefix`? If so, I could just set it to that. ', 'comment_created': datetime.datetime(2022, 7, 13, 17, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920362444, 'comment_body': ""I guess this is the only dynamic part of the explore page now? It looks like initializing a CoursesPresenter is going to also do a query for the campaign courses, even if it's not going to need it (as with serving this HTML route), so it might make sense to just use `Features.default_course_string_prefix` instead of the presenter. I think in this context it will be the same. "", 'comment_created': datetime.datetime(2022, 7, 13, 18, 1, 27, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920362989, 'comment_body': 'I think this can be `Features.default_course_string_prefix` as well.', 'comment_created': datetime.datetime(2022, 7, 13, 18, 2, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920363430, 'comment_body': 'Same here, I think. Replace presenter with `Features.default_course_string_prefix`.', 'comment_created': datetime.datetime(2022, 7, 13, 18, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920365088, 'comment_body': ""Since `_head` is already being loaded with the default string prefix, maybe these aren't necessary at all (in any of the three react_root templates you changed)?"", 'comment_created': datetime.datetime(2022, 7, 13, 18, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920370474, 'comment_body': 'Does this not work anymore?', 'comment_created': datetime.datetime(2022, 7, 13, 18, 11, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920370588, 'comment_body': 'Does this not work anymore?', 'comment_created': datetime.datetime(2022, 7, 13, 18, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920374098, 'comment_body': ""Yeah, for /explore and /active_courses, I think these should always be equal to the default.\r\n\r\nFor an individual campaign, it could vary based on the campaign's default course type, but that could be done just by loading the campaign itself and doing `campaign.course_string_prefix` instead of going through an otherwise-unnecessary presenter."", 'comment_created': datetime.datetime(2022, 7, 13, 18, 16, 7, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920374707, 'comment_body': 'It does - I renamed it to `is clickable` under `campaigns list`. Should I change the name back?', 'comment_created': datetime.datetime(2022, 7, 13, 18, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920375460, 'comment_body': 'ah I think I removed this accidentally. Will add back. ', 'comment_created': datetime.datetime(2022, 7, 13, 18, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920376147, 'comment_body': 'Nope, I just missed that. The name change is fine.', 'comment_created': datetime.datetime(2022, 7, 13, 18, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 920376533, 'comment_body': 'I thought the value might be different for different campaigns. I suppose that case might not be relevant for these templates. ', 'comment_created': datetime.datetime(2022, 7, 13, 18, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 920378908, 'comment_body': ""I think for explore, we can just use the default. I guess it would be theoretically possible that the featured campaign being shown here would have a different prefix, but that's unlikely to actually happen, I think it will still be better to just simplify it by using the default in this context."", 'comment_created': datetime.datetime(2022, 7, 13, 18, 22, 14, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': 'bcd97fcf992b865f0ad18b7cec3a1dd34a538c1d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b113ad66051a0cd05711d4dfb6e976c502fa6bb', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7939bc004a6cde5557e315a9de190c70fc97e42d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd3b8c0d24f5194d0ff889a6aee0969363306bb07', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '578b962bfaedd0527c2a7191de3ab922345a7625', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd36eb1d3cd38713b95a906fc7d3455be4643245', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f69504acc7fac0a6c4ff0317023dd56e92b6e9f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c7f1fe220e900ca2f6fc85d335e2cdea2da15ca', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7a833a6b91b42b9b81267d50b3105cc681ac6b4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f95a43bcb3df1f3204ae355ff7214dec437f9fc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0d063ba71bc1532313fb963c17e2dd8f76d3795', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d84f21de199bbdf0233f0ba2839269405ef8a8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5196447ede44cccdf0572fcc5dcdc410cba42ccf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee3cf92e489e789f9f4ffabae0556b81e39cab5d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321f966ea4ee2641400b4daaea692d213bffb5c2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f1734d36a29b22424452906f00f080db43a750b', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd31b0ebb01ea971889d789640598f8d29efc073a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d0c60c88d7397998caf984c00f1381750ed4d94', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2bb6d301c9f535ccc5367eb9b2895e6226678fc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f421f73cf9e8a3da9b6980aa2c237d7cd9206d5a', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4925a915383ed41a1be5db966fd20bcf818e7d53', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3abfccf0b7cfe42d5fb7e48672aa4add2366629', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f53f23ba9bf0ee99bfcf8f05bc954933350b7a3', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0f0d96ab5a208483ffa68044a3b9b1e19867f40', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5697ab3aa02311bd4673dc853e9a7add2533d61', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '654ea52d442d86ffa60c41e0f19434ee7ca64076', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1091bf112c4557566bf2c18ab795791137dbcb43', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6e3f7c1e37d1868d63b7cc0fb725ca44295e334', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8aea87b11379a77628debce18eddcb071b12cfd6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af70d0ce396cad7d0f78f856a9af8c193b759b20', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3449d8e25b6b1074b2297ae7649b5af5463d964', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
992515153,remove lodash from bundle,"There was a single occurrence of `lodash` in  `app/assets/javascripts/components/students/utils/setOtherEditedArticles.js` which caused the entire package to be included in the final bundle. This fixes that. 

Lodash is still used by `eslint`, webpack and other development tools so I've listed it as a dev-dependency.

I've also updated the command for `yarn analyze` to make sure it analyzes the production bundle and not the development one. ",True,5040,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5040,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5040,closed,8,19,4,1,0,0,0,0,[],2022-07-10 23:00:52+00:00,2022-07-11 22:37:41+00:00,85009.0,23:36:49,[],"[{'commit_sha': '0f1543a77212c2574006dda85887bc46390cb8f7', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
997762927,split bundles based on routes,"This is [one of the recommendations on the official documentation](https://reactjs.org/docs/code-splitting.html#route-based-code-splitting). It means that the user only downloads the code of the routes they actually visit.

I've also had to change the default export in the course creator file because dynamic imports don't support named exports.",True,5050,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5050,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5050,closed,46,44,3,1,2,0,0,0,[],2022-07-15 13:30:55+00:00,2022-07-25 17:59:24+00:00,880109.0,"10 days, 4:28:29",[],"[{'commit_sha': 'e1e700273ad3425e082c9d9fef0ece3c963a7a0d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
998451512,Fix eslint plugin config,"Because `lintDirtyModulesOnly` was set to `true` during `yarn build` and `yarn coverage` as well, the build would never fail since there would be no dirty modules. ",True,5052,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5052,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5052,closed,12,8,5,2,0,0,0,0,[],2022-07-16 15:48:59+00:00,2022-07-18 18:19:30+00:00,181831.0,"2 days, 2:30:31",[],"[{'commit_sha': 'd1df3e00e9f2fe499dcad5aae6e0c8a7fdc98437', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2f76b0abf1f32930850b6aa903be270a92c98d4', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
998628738,remove moment recur as a dependency,"This PR attempts to rewrite the file `app/assets/javascripts/utils/course_date_utils.js` to use date-fns instead of moment-js. It also removes `moment-recur` as a dependency.

`moment-recur` wasn't actually being used for anything - its `.matches` function wasn't even called so removing it was straightforward.

With this, there are no packages which depend upon `moment-js`.",True,5053,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5053,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5053,closed,141,144,10,6,3,13,0,0,[],2022-07-17 12:06:51+00:00,2022-07-19 18:54:21+00:00,197250.0,"2 days, 6:47:30","[{'comment_id': 924698687, 'comment_body': 'Why is this done here instead of within `getDate()`?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924706570, 'comment_body': ""Can you include a test where there are exceptions, but not all the meeting dates are exceptions?\r\n\r\nAlso, another where the normal meeting days are all exceptions but there there's also an exception for a non-meeting day (eg, removing Tuesday and Thursday, but adding Wednesday), which should not produce a blackout week."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 16, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924708391, 'comment_body': ""This file is melting my brain, but I assume that since the tests are passing, these changes can't have broken anything really important."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924711724, 'comment_body': ""Does `parseISO(datetime)` do the same thing as moment(datetime, 'YYYY-MM-DD'), or is this changing the format of these `dateProps` values?"", 'comment_created': datetime.datetime(2022, 7, 19, 16, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924713626, 'comment_body': 'Some changes are for aesthetic/readability reasons. You can see commit [30a7801](https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5053/commits/30a7801ac0da3fafb4aca379edeb42ebb2191241) for the changes limited to the migration. That should (hopefully) be easier to follow', 'comment_created': datetime.datetime(2022, 7, 19, 16, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 924715905, 'comment_body': ""The format is not being changed - `moment(datetime, 'YYYY-MM-DD')` simply parses the given string(`datetime`) according to the given format(`YYYY-MM-DD`) to return a moment date object. \r\n\r\n`parseISO` will fail if the date can't be parsed according to the ISO format(which is the same as `YYYY-MM-DD`). It also returns a native JS Date object instead of something library specific(like moment). That's the only difference here."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 924720736, 'comment_body': 'All the other parts of this are being converted to not use `moment` but this one is just being removed. Does that change the behavior?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924720834, 'comment_body': 'The rest of the file still uses moment js so `getDate()` still returns a moment date object.', 'comment_created': datetime.datetime(2022, 7, 19, 16, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 924724372, 'comment_body': ""Yeah I'm not sure about this. This if condition and body are the same as the one on line 64. So I thought this might just be accidental repetition and removed it."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 35, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 924724446, 'comment_body': 'Can you explain more about the change to this function and why the first argument (and the `meetings` function) are not needed?', 'comment_created': datetime.datetime(2022, 7, 19, 16, 35, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924726196, 'comment_body': ""Yes, very helpful. I'm still not in a mindset to fully understand the core change, but I think have a a clear idea of what that core change is versus the trivial parts and formatting changes."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 37, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 924731346, 'comment_body': ""So the `meetings` function was setting the rules for the `recurrence`(See line 173 - `meetings.every(weekdays).daysOfWeek();`) But if you take a look at this function, we aren't using any other property of `recurrence` other than `endDate()` and `startDate()`. Now see line 166 in the `meetings` function where we explicitly set the start and end date of the recurrence to `course.timeline_start, course.timeline_end`.\r\n\r\nSo I used those values directly in this function instead of creating the recurrence for no apparent reason. If you take a look the the documentation for `moment-recur`, you'll find that the [magic really happens when you call](https://github.com/c-trimm/moment-recur#matching=) `recur.matches('some-date')` after setting rules. But we were just setting the rules - no call to `.matches` was being made.\r\n\r\nHopefully that makes sense."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 42, 26, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 924736568, 'comment_body': ""Yeah, it looks like that's the case. I see I added it in https://github.com/WikiEducationFoundation/WikiEduDashboard/commit/2b9ae07a8764eba7c84ec7d44da78c7a2d46e86e but I guess that duplicated part must have been useless. I can't think of any way this would change behavior."", 'comment_created': datetime.datetime(2022, 7, 19, 16, 46, 15, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '30a7801ac0da3fafb4aca379edeb42ebb2191241', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89ee8616a799aa0d72e1ae909423dfb0da7d8bac', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7f3b51a943178c13edb889730f438b8832c6778', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e0b5c32b2c2189cc12c71e36678cbe048e58cd2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44e30e11717f18f51c1ac503f593ebe4e479d816', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb4aae29ecc101589ac34ceed7d7d3149c1586c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1001584395,don't escape dashboard title,This prevents symbols like `&` from being converted to entities(`&amp` in this case),True,5060,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5060,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5060,closed,3,2,1,1,0,0,0,0,[],2022-07-20 04:33:14+00:00,2022-07-20 15:39:43+00:00,39989.0,11:06:29,[],"[{'commit_sha': 'a5c45fd3aa369c94fed1c35538d4bcf2f982a34f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1006394736,Migrate to datefns,"This removes `moment-js` as a dependency. 

With this, `vendors.js` goes from `1.42MB` to `1.37MB`",True,5065,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5065,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5065,closed,306,211,45,16,2,7,0,0,[],2022-07-23 17:53:43+00:00,2022-07-27 18:46:46+00:00,348783.0,"4 days, 0:53:03","[{'comment_id': 929147097, 'comment_body': ""How hard would it be to fix the tests so that this isn't necessary? If it shouldn't happen in production, hopefully it doesn't... but it this would probably prevent us from discovering it if it was happening in production."", 'comment_created': datetime.datetime(2022, 7, 25, 17, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929150001, 'comment_body': 'I think `formatWithTime` and `formatWithoutTime` might have room for improvement in the names. Format what? A Date? A DateTime? I think this works for a Date or a DateTime, right?\r\n\r\nMaybe `formatDateAndTime` and `formatDate` (or `formatDateWithoutTime`)?', 'comment_created': datetime.datetime(2022, 7, 25, 17, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929150724, 'comment_body': 'Comments documenting the expected constraints on the `date` input (strings? Date objects?) would be helpful for all these functions.', 'comment_created': datetime.datetime(2022, 7, 25, 17, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929156575, 'comment_body': ""Hmm, I think this affects one or two React tests so shouldn't be too difficult to fix. Should I just raise an Error if this ever happens? That would fail the CI so if it is happening right now we would have an idea where and how."", 'comment_created': datetime.datetime(2022, 7, 25, 18, 0, 51, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 929158565, 'comment_body': 'Yes, I think raising a console error (and then returning the new Date, so that it would still work the same way as with moment.js) would be a good way to flush out any places where this happens in production.', 'comment_created': datetime.datetime(2022, 7, 25, 18, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 929160951, 'comment_body': ""It works for any valid ISO 8601 string or a Date object. I'll improve the function names to reflect that."", 'comment_created': datetime.datetime(2022, 7, 25, 18, 6, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 929162093, 'comment_body': ""All the functions here should work for valid ISO 8601 strings or Date objects. I'll add a comment for that."", 'comment_created': datetime.datetime(2022, 7, 25, 18, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}]","[{'commit_sha': '671907df7b293f4e0b338b5cbf5f12cc45c79dea', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd46fe0cec8b2e05a80e220e3d7acd2d32cb463e6', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b6a2a67915755a07bab7f9d4073ceebc22ddbe8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e8581c80fdbaf04d8bcac3a1d6877c3e78a3f7b', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4afefd0b1d660b85b3e5aa7bd0e8044eaa779bf', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13261043f7f9a4cdc4a45fbf68d89b723324810c', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bcc40bcfc5fed3e315dc3daf03e2e3dfac621aa', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3db15d3ac6216dfa1c89d6ee66c9e632a13ff2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f0294b3fcc77d4f3231b45c40e61fcacf65e8a9', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55fdc4fc17941eeca1d836e4150feebae6bf68c1', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '889b4bf134324f98f32119205dd2e800ef8f0352', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f451030a835714425a2fb4199e43346c27e95b0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0dc5d6320ecadb01a144211d90500530fd26dc8', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6042657149745b8f214801bde856ecf8070910bc', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9616ea0083af1c400da11374f5df61271142e538', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2f2c86fef609b83c8cae215442295fe56047030', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1014483437,remove react spring,"This replaces react spring with [`react-flip-toolkit`](https://www.npmjs.com/package/react-flip-toolkit)

## Before

https://user-images.githubusercontent.com/10794178/182266183-385afa3a-0f89-4ea6-8717-cb2e84fbe062.mp4

## After

https://user-images.githubusercontent.com/10794178/182266193-53201da4-7ed8-4863-9e91-10b96ce94b5f.mp4

`vendors.js` goes from `1.37MB` to `1.35MB`
",True,5088,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5088,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5088,closed,79,120,6,1,1,0,0,0,[],2022-08-02 00:25:31+00:00,2022-08-03 16:29:41+00:00,144250.0,"1 day, 16:04:10",[],"[{'commit_sha': '43ca07b92a04e558d635c2f73145cfeef0b13886', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1015493171,remove references to lodash,"Since we've switched over to `lodash-es` completely, these parts are no longer relevant. ",True,5090,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5090,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5090,closed,0,23,2,1,0,0,0,0,[],2022-08-02 19:05:05+00:00,2022-08-03 16:23:59+00:00,76734.0,21:18:54,[],"[{'commit_sha': '8e42362489c82ffda8e1c5e81776e35f1609e1da', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1016598904,Update react dnd,"This upgrades [`react-dnd`](https://react-dnd.github.io/react-dnd/) to v16. From this version, the library only supports functional components via hooks. I've rewritten the HOC to use hooks instead.

With this, `vendors.js` goes from `1.35MB` to `1.32MB`",True,5093,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5093,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5093,closed,157,182,9,3,3,0,0,0,[],2022-08-03 16:59:06+00:00,2022-08-05 19:13:40+00:00,180874.0,"2 days, 2:14:34",[],"[{'commit_sha': 'ed26e8f87b809847ac9cd50e884c931963faf618', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5538560f5c6f0ba9c3b6fdc237c73f4a6c2d357d', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41ef69e7f0e6fdce77848f375f920f5b760e2f36', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1019085053,reduce usage of JQuery,"This PR attempts to remove all the instances of JQuery from all routes except for

1. the campaigns route
2. the survey route

JQuery is only downloaded when the user visits these routes.

Also, instead of including `jquery-ui` in the vendors bundle, I've imported it dynamically so that it only gets loaded when its required.

This reduces `vendors.js` from `1.32MB` to `1.27MB`",True,5098,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5098,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5098,closed,129,211,30,7,0,16,0,0,[],2022-08-05 21:00:27+00:00,2022-08-08 22:11:37+00:00,263470.0,"3 days, 1:11:10","[{'comment_id': 940569390, 'comment_body': 'any way to avoid this?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940575636, 'comment_body': 'One way would to be to do all this manually in all the haml files which need JQuery. Or I suppose I could include the JQuery from the JS itself. What do you think?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 13, 26, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940576071, 'comment_body': 'Do we have polyfills to ensure that this works across browsers? Browser support for this just dates to early 2022, and elsewhere in the codebase we use `Object.assign` for this kind of thing.', 'comment_created': datetime.datetime(2022, 8, 8, 19, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940577198, 'comment_body': 'Is `getInitialState` the best place for this, or should it be in a different lifecycle function?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940577889, 'comment_body': 'What are these changes for?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940578263, 'comment_body': 'What are these changes for?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 16, 24, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940583935, 'comment_body': 'I think including the jquery from the campaigns and surveys js files makes the most sense, just in terms of making sure the js files are the places that keep the details about what they require to work properly.', 'comment_created': datetime.datetime(2022, 8, 8, 19, 20, 13, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940587509, 'comment_body': ""Yeah `Object.assign` would be simpler but it doesn't clone the object recursively(which the JQuery version does)\r\n\r\n`core-js` does have polyfills for [`structuredClone`](https://github.com/zloirock/core-js#structuredclone) so it shouldn't be an issue."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940589375, 'comment_body': ""This should be done in the constructor but because we're not using ES6 classes that doesn't exist. In [the docs](https://reactjs.org/docs/react-without-es6.html#setting-the-initial-state), they've used `getInitialState` in place of the constructor so that's what I went with. "", 'comment_created': datetime.datetime(2022, 8, 8, 19, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940590231, 'comment_body': 'Cool.', 'comment_created': datetime.datetime(2022, 8, 8, 19, 28, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940590629, 'comment_body': ""I've removed [`users_profile.js`](https://github.com/WikiEducationFoundation/WikiEduDashboard/blob/2f6fdea8e9c41698591754eb8c158f27955b63fc/app/assets/javascripts/utils/users_profile.js) and implemented the functionality using CSS instead."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940590719, 'comment_body': ""Hmm... do we even need deep cloning here? I can't think of a reason we would."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 28, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940591938, 'comment_body': ""This used to use JQuery's `slideToggle` to implement the closing and opening animation. This doesn't have a direct alternative in JS so I used some css animations instead."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 30, 6, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940592820, 'comment_body': 'Whoops, I missed that. :+1: ', 'comment_created': datetime.datetime(2022, 8, 8, 19, 31, 17, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}, {'comment_id': 940593730, 'comment_body': 'No idea :shrug: I went with it just to be safe. Should I just use `Object.assign`?', 'comment_created': datetime.datetime(2022, 8, 8, 19, 32, 26, tzinfo=datetime.timezone.utc), 'commenter': 'TheTrio', 'type': 'User'}, {'comment_id': 940598316, 'comment_body': ""I think so. I'm pretty confident there's no reason why a shallow clone wouldn't be fine here. The `block` object is not that complicated, and here we're ultimately just replacing a block (as identified by its `id` attribute) in the redux state with a version of it that has been modified in an explicit way."", 'comment_created': datetime.datetime(2022, 8, 8, 19, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ragesoss', 'type': 'User'}]","[{'commit_sha': '081fda5fde634997a4608492e35aa6a8dc32e7da', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e13537ef8265d86a74f78c172b05dd248b0873cd', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02832761b49d40f47fa8478e99bd1ee9c87dd2a2', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '123de17e2308d67c4ca68d4a0bda696b389634ec', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6de4ddde6193a932994008b830be26c41ffd4f20', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5704f344d401654e6b383f93aa83fa1f643d77f0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}, {'commit_sha': '090c7035e7d6cd3e56a0f2f62fca91450d62d0f0', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1024257507,only parse prop as date if it isn't undefined,This prevents the component from throwing an error when the prop is undefined.,True,5110,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5110,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5110,closed,14,9,1,1,0,0,0,0,[],2022-08-11 19:48:22+00:00,2022-08-11 21:11:50+00:00,5008.0,1:23:28,[],"[{'commit_sha': '63e1065a7eae3d57fa147f52b693a697d039b2db', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1035274228,fix user profile page,"I didn't notice that the user profile page depended on the Editable JS plugin. This plugin was already being loaded on the campaigns page.

Loading it on the profile page fixes the issue where in clicking the ""Edit Details"" button simply reloaded the page.",True,5127,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5127,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5127,closed,7,2,5,1,2,0,0,0,[],2022-08-24 10:24:10+00:00,2022-08-24 21:39:31+00:00,40521.0,11:15:21,[],"[{'commit_sha': 'd0472cc2d614ecbdfd9081dd7d0ee74d3c5bc9e9', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49
1035281035,add JS Overview,Some ideas on what could be done next to improve our JS stack. ,True,5128,https://api.github.com/repos/WikiEducationFoundation/WikiEduDashboard/pulls/5128,https://github.com/WikiEducationFoundation/WikiEduDashboard/pull/5128,closed,91,1,1,1,0,0,0,0,[],2022-08-24 10:30:18+00:00,2022-08-24 17:45:16+00:00,26098.0,7:14:58,[],"[{'commit_sha': '1e3757ac80ae05b55aad2f9145b6a94ed9add43f', 'committer_username': 'TheTrio', 'committer_name': 'Shashwat', 'committer_email': 'shashwatkhanna312@gmail.com', 'commit_date': datetime.datetime(2015, 2, 1, 6, 59, 34, tzinfo=datetime.timezone.utc)}]",Shashwat,10794178,shashwatkhanna312@gmail.com,User,,28,,33,49

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
27940263,WikiEduDashboard,WikiEducationFoundation/WikiEduDashboard,Ruby,598,387,39,217,17319,344,36,72,"[{'id': 1489702806, 'number': 5487, 'closed': datetime.datetime(2023, 8, 28, 17, 16, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 12, 56, 20, tzinfo=datetime.timezone.utc), 'time_taken': 274785.0, 'time_delta': '3 days, 4:19:45', 'additions': 217, 'deletions': 19, 'state': 'closed'}, {'id': 1472939833, 'number': 5483, 'closed': datetime.datetime(2023, 8, 21, 20, 45, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 12, 15, 50, 27, tzinfo=datetime.timezone.utc), 'time_taken': 795328.0, 'time_delta': '9 days, 4:55:28', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 1465378266, 'number': 5476, 'closed': datetime.datetime(2023, 8, 9, 1, 43, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 14, 39, 27, tzinfo=datetime.timezone.utc), 'time_taken': 126243.0, 'time_delta': '1 day, 11:04:03', 'additions': 102, 'deletions': 31, 'state': 'closed'}, {'id': 1457554735, 'number': 5471, 'closed': datetime.datetime(2023, 8, 3, 19, 10, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 7, 37, 31, tzinfo=datetime.timezone.utc), 'time_taken': 214401.0, 'time_delta': '2 days, 11:33:21', 'additions': 408, 'deletions': 274, 'state': 'closed'}, {'id': 1426271121, 'number': 5451, 'closed': datetime.datetime(2023, 7, 21, 20, 3, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 9, 11, 22, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1068045.0, 'time_delta': '12 days, 8:40:45', 'additions': 143, 'deletions': 0, 'state': 'closed'}, {'id': 1419570689, 'number': 5445, 'closed': datetime.datetime(2023, 7, 5, 18, 32, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 4, 12, 26, 5, tzinfo=datetime.timezone.utc), 'time_taken': 108381.0, 'time_delta': '1 day, 6:06:21', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1394264883, 'number': 5430, 'closed': datetime.datetime(2023, 6, 16, 20, 50, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 15, 14, 36, 20, tzinfo=datetime.timezone.utc), 'time_taken': 108862.0, 'time_delta': '1 day, 6:14:22', 'additions': 16, 'deletions': 1, 'state': 'closed'}, {'id': 1352901237, 'number': 5396, 'closed': datetime.datetime(2023, 7, 3, 21, 27, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 16, 17, 47, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4160364.0, 'time_delta': '48 days, 3:39:24', 'additions': 976, 'deletions': 27, 'state': 'closed'}, {'id': 1309626632, 'number': 5358, 'closed': datetime.datetime(2023, 4, 11, 21, 9, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 11, 20, 26, tzinfo=datetime.timezone.utc), 'time_taken': 2632.0, 'time_delta': '0:43:52', 'additions': 13, 'deletions': 78, 'state': 'closed'}, {'id': 1306511481, 'number': 5354, 'closed': datetime.datetime(2023, 4, 11, 21, 47, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 8, 14, 42, 25, tzinfo=datetime.timezone.utc), 'time_taken': 284683.0, 'time_delta': '3 days, 7:04:43', 'additions': 15, 'deletions': 7, 'state': 'closed'}, {'id': 1305114356, 'number': 5350, 'closed': datetime.datetime(2023, 4, 10, 20, 38, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 18, 16, 23, tzinfo=datetime.timezone.utc), 'time_taken': 354149.0, 'time_delta': '4 days, 2:22:29', 'additions': 60, 'deletions': 5, 'state': 'closed'}, {'id': 1291917192, 'number': 5328, 'closed': datetime.datetime(2023, 4, 1, 14, 18, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 27, 19, 56, 1, tzinfo=datetime.timezone.utc), 'time_taken': 411748.0, 'time_delta': '4 days, 18:22:28', 'additions': 154, 'deletions': 79, 'state': 'closed'}, {'id': 1270465198, 'number': 5284, 'closed': datetime.datetime(2023, 3, 14, 16, 57, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 10, 0, 21, 29, tzinfo=datetime.timezone.utc), 'time_taken': 405358.0, 'time_delta': '4 days, 16:35:58', 'additions': 126, 'deletions': 54, 'state': 'closed'}, {'id': 1270254999, 'number': 5282, 'closed': datetime.datetime(2023, 3, 10, 21, 21, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 9, 20, 15, 44, tzinfo=datetime.timezone.utc), 'time_taken': 90336.0, 'time_delta': '1 day, 1:05:36', 'additions': 7, 'deletions': 1, 'state': 'closed'}, {'id': 1263023058, 'number': 5273, 'closed': datetime.datetime(2023, 3, 6, 16, 23, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 4, 9, 55, 24, tzinfo=datetime.timezone.utc), 'time_taken': 196115.0, 'time_delta': '2 days, 6:28:35', 'additions': 15, 'deletions': 14, 'state': 'closed'}, {'id': 1259010920, 'number': 5269, 'closed': datetime.datetime(2023, 3, 3, 22, 20, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 1, 15, 24, 26, tzinfo=datetime.timezone.utc), 'time_taken': 197746.0, 'time_delta': '2 days, 6:55:46', 'additions': 172, 'deletions': 25, 'state': 'closed'}, {'id': 1254246747, 'number': 5267, 'closed': datetime.datetime(2023, 2, 27, 19, 49, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 25, 16, 7, 22, tzinfo=datetime.timezone.utc), 'time_taken': 186109.0, 'time_delta': '2 days, 3:41:49', 'additions': 133, 'deletions': 10, 'state': 'closed'}, {'id': 1233422569, 'number': 5254, 'closed': datetime.datetime(2023, 2, 16, 19, 2, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 8, 11, 46, 42, tzinfo=datetime.timezone.utc), 'time_taken': 717339.0, 'time_delta': '8 days, 7:15:39', 'additions': 78, 'deletions': 13, 'state': 'closed'}, {'id': 1226404048, 'number': 5250, 'closed': datetime.datetime(2023, 2, 6, 22, 30, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 2, 11, 18, 57, tzinfo=datetime.timezone.utc), 'time_taken': 385919.0, 'time_delta': '4 days, 11:11:59', 'additions': 86, 'deletions': 69, 'state': 'closed'}, {'id': 1224722280, 'number': 5249, 'closed': datetime.datetime(2023, 2, 6, 22, 33, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 11, 23, 51, tzinfo=datetime.timezone.utc), 'time_taken': 472156.0, 'time_delta': '5 days, 11:09:16', 'additions': 81, 'deletions': 4, 'state': 'closed'}, {'id': 1212307871, 'number': 5243, 'closed': datetime.datetime(2023, 1, 27, 21, 15, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 21, 8, 24, 30, tzinfo=datetime.timezone.utc), 'time_taken': 564634.0, 'time_delta': '6 days, 12:50:34', 'additions': 128, 'deletions': 16, 'state': 'closed'}, {'id': 1196549507, 'number': 5234, 'closed': datetime.datetime(2023, 1, 17, 19, 13, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 10, 53, 58, tzinfo=datetime.timezone.utc), 'time_taken': 375590.0, 'time_delta': '4 days, 8:19:50', 'additions': 59, 'deletions': 8, 'state': 'closed'}, {'id': 1187061147, 'number': 5231, 'closed': datetime.datetime(2023, 1, 6, 0, 36, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 5, 20, 23, 48, tzinfo=datetime.timezone.utc), 'time_taken': 15148.0, 'time_delta': '4:12:28', 'additions': 44, 'deletions': 16, 'state': 'closed'}, {'id': 1177964574, 'number': 5228, 'closed': datetime.datetime(2022, 12, 29, 19, 13, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 26, 18, 22, 54, tzinfo=datetime.timezone.utc), 'time_taken': 262252.0, 'time_delta': '3 days, 0:50:52', 'additions': 137, 'deletions': 43, 'state': 'closed'}, {'id': 1035281035, 'number': 5128, 'closed': datetime.datetime(2022, 8, 24, 17, 45, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 10, 30, 18, tzinfo=datetime.timezone.utc), 'time_taken': 26098.0, 'time_delta': '7:14:58', 'additions': 91, 'deletions': 1, 'state': 'closed'}, {'id': 1035274228, 'number': 5127, 'closed': datetime.datetime(2022, 8, 24, 21, 39, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 24, 10, 24, 10, tzinfo=datetime.timezone.utc), 'time_taken': 40521.0, 'time_delta': '11:15:21', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 1030253090, 'number': 5119, 'closed': datetime.datetime(2023, 1, 30, 23, 15, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 18, 17, 22, 8, tzinfo=datetime.timezone.utc), 'time_taken': 14277230.0, 'time_delta': '165 days, 5:53:50', 'additions': 61, 'deletions': 56, 'state': 'closed'}, {'id': 1024257507, 'number': 5110, 'closed': datetime.datetime(2022, 8, 11, 21, 11, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 19, 48, 22, tzinfo=datetime.timezone.utc), 'time_taken': 5008.0, 'time_delta': '1:23:28', 'additions': 14, 'deletions': 9, 'state': 'closed'}, {'id': 1019085053, 'number': 5098, 'closed': datetime.datetime(2022, 8, 8, 22, 11, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 263470.0, 'time_delta': '3 days, 1:11:10', 'additions': 129, 'deletions': 211, 'state': 'closed'}, {'id': 1016598904, 'number': 5093, 'closed': datetime.datetime(2022, 8, 5, 19, 13, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 3, 16, 59, 6, tzinfo=datetime.timezone.utc), 'time_taken': 180874.0, 'time_delta': '2 days, 2:14:34', 'additions': 157, 'deletions': 182, 'state': 'closed'}, {'id': 1015493171, 'number': 5090, 'closed': datetime.datetime(2022, 8, 3, 16, 23, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 19, 5, 5, tzinfo=datetime.timezone.utc), 'time_taken': 76734.0, 'time_delta': '21:18:54', 'additions': 0, 'deletions': 23, 'state': 'closed'}, {'id': 1014483437, 'number': 5088, 'closed': datetime.datetime(2022, 8, 3, 16, 29, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 2, 0, 25, 31, tzinfo=datetime.timezone.utc), 'time_taken': 144250.0, 'time_delta': '1 day, 16:04:10', 'additions': 79, 'deletions': 120, 'state': 'closed'}, {'id': 1012622727, 'number': 5083, 'closed': datetime.datetime(2022, 8, 1, 22, 42, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 10, 47, 7, tzinfo=datetime.timezone.utc), 'time_taken': 215721.0, 'time_delta': '2 days, 11:55:21', 'additions': 60, 'deletions': 107, 'state': 'closed'}, {'id': 1006394736, 'number': 5065, 'closed': datetime.datetime(2022, 7, 27, 18, 46, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 23, 17, 53, 43, tzinfo=datetime.timezone.utc), 'time_taken': 348783.0, 'time_delta': '4 days, 0:53:03', 'additions': 306, 'deletions': 211, 'state': 'closed'}, {'id': 1001584395, 'number': 5060, 'closed': datetime.datetime(2022, 7, 20, 15, 39, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 4, 33, 14, tzinfo=datetime.timezone.utc), 'time_taken': 39989.0, 'time_delta': '11:06:29', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 998628738, 'number': 5053, 'closed': datetime.datetime(2022, 7, 19, 18, 54, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 17, 12, 6, 51, tzinfo=datetime.timezone.utc), 'time_taken': 197250.0, 'time_delta': '2 days, 6:47:30', 'additions': 141, 'deletions': 144, 'state': 'closed'}, {'id': 998451512, 'number': 5052, 'closed': datetime.datetime(2022, 7, 18, 18, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 16, 15, 48, 59, tzinfo=datetime.timezone.utc), 'time_taken': 181831.0, 'time_delta': '2 days, 2:30:31', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 997762927, 'number': 5050, 'closed': datetime.datetime(2022, 7, 25, 17, 59, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 15, 13, 30, 55, tzinfo=datetime.timezone.utc), 'time_taken': 880109.0, 'time_delta': '10 days, 4:28:29', 'additions': 46, 'deletions': 44, 'state': 'closed'}, {'id': 992515153, 'number': 5040, 'closed': datetime.datetime(2022, 7, 11, 22, 37, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 10, 23, 0, 52, tzinfo=datetime.timezone.utc), 'time_taken': 85009.0, 'time_delta': '23:36:49', 'additions': 8, 'deletions': 19, 'state': 'closed'}, {'id': 992312228, 'number': 5039, 'closed': datetime.datetime(2022, 7, 19, 15, 28, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 22, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 839838.0, 'time_delta': '9 days, 17:17:18', 'additions': 1098, 'deletions': 515, 'state': 'closed'}, {'id': 992294157, 'number': 5038, 'closed': datetime.datetime(2022, 7, 11, 19, 16, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 9, 19, 39, 19, tzinfo=datetime.timezone.utc), 'time_taken': 171433.0, 'time_delta': '1 day, 23:37:13', 'additions': 13, 'deletions': 5, 'state': 'closed'}, {'id': 980147676, 'number': 5026, 'closed': datetime.datetime(2022, 7, 11, 19, 11, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 27, 14, 33, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1226276.0, 'time_delta': '14 days, 4:37:56', 'additions': 551, 'deletions': 356, 'state': 'closed'}, {'id': 977390103, 'number': 5022, 'closed': datetime.datetime(2022, 7, 8, 20, 49, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 23, 16, 27, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1311695.0, 'time_delta': '15 days, 4:21:35', 'additions': 15009, 'deletions': 11130, 'state': 'closed'}, {'id': 970567617, 'number': 5018, 'closed': datetime.datetime(2022, 6, 21, 17, 23, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 12, 28, 17, tzinfo=datetime.timezone.utc), 'time_taken': 363340.0, 'time_delta': '4 days, 4:55:40', 'additions': 6, 'deletions': 51, 'state': 'closed'}, {'id': 969405914, 'number': 5013, 'closed': datetime.datetime(2022, 6, 22, 20, 13, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 14, 35, 56, tzinfo=datetime.timezone.utc), 'time_taken': 538648.0, 'time_delta': '6 days, 5:37:28', 'additions': 169, 'deletions': 111, 'state': 'closed'}, {'id': 963149567, 'number': 5002, 'closed': datetime.datetime(2022, 6, 16, 16, 0, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 9, 17, 18, 59, tzinfo=datetime.timezone.utc), 'time_taken': 600099.0, 'time_delta': '6 days, 22:41:39', 'additions': 425, 'deletions': 206, 'state': 'closed'}, {'id': 959875300, 'number': 4997, 'closed': datetime.datetime(2022, 6, 7, 17, 48, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 7, 4, 32, 13, tzinfo=datetime.timezone.utc), 'time_taken': 47790.0, 'time_delta': '13:16:30', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 955390244, 'number': 4992, 'closed': datetime.datetime(2022, 6, 3, 19, 1, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 2, 2, 43, 39, tzinfo=datetime.timezone.utc), 'time_taken': 145044.0, 'time_delta': '1 day, 16:17:24', 'additions': 153, 'deletions': 57, 'state': 'closed'}, {'id': 943939913, 'number': 4982, 'closed': datetime.datetime(2022, 6, 9, 15, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 23, 5, 23, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1504308.0, 'time_delta': '17 days, 9:51:48', 'additions': 1506, 'deletions': 2914, 'state': 'closed'}, {'id': 936826077, 'number': 4975, 'closed': datetime.datetime(2022, 5, 18, 18, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 15, 19, 55, 11, tzinfo=datetime.timezone.utc), 'time_taken': 254127.0, 'time_delta': '2 days, 22:35:27', 'additions': 50, 'deletions': 11, 'state': 'closed'}, {'id': 936658489, 'number': 4974, 'closed': datetime.datetime(2022, 5, 16, 18, 6, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 15, 2, 31, 16, tzinfo=datetime.timezone.utc), 'time_taken': 142539.0, 'time_delta': '1 day, 15:35:39', 'additions': 0, 'deletions': 33, 'state': 'closed'}, {'id': 915300402, 'number': 4946, 'closed': datetime.datetime(2022, 5, 3, 18, 6, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 21, 12, 34, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1056716.0, 'time_delta': '12 days, 5:31:56', 'additions': 207, 'deletions': 39, 'state': 'closed'}, {'id': 913997734, 'number': 4942, 'closed': datetime.datetime(2022, 4, 20, 16, 28, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 20, 9, 35, 44, tzinfo=datetime.timezone.utc), 'time_taken': 24758.0, 'time_delta': '6:52:38', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 909544918, 'number': 4935, 'closed': datetime.datetime(2022, 4, 14, 21, 32, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 14, 3, 56, 55, tzinfo=datetime.timezone.utc), 'time_taken': 63352.0, 'time_delta': '17:35:52', 'additions': 379, 'deletions': 380, 'state': 'closed'}, {'id': 909506165, 'number': 4934, 'closed': datetime.datetime(2022, 4, 14, 21, 28, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 14, 2, 24, 10, tzinfo=datetime.timezone.utc), 'time_taken': 68651.0, 'time_delta': '19:04:11', 'additions': 62, 'deletions': 4, 'state': 'closed'}, {'id': 905282976, 'number': 4922, 'closed': datetime.datetime(2022, 4, 11, 20, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 10, 17, 5, 16, tzinfo=datetime.timezone.utc), 'time_taken': 97662.0, 'time_delta': '1 day, 3:07:42', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 904267333, 'number': 4920, 'closed': datetime.datetime(2022, 4, 8, 23, 16, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 8, 22, 32, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2636.0, 'time_delta': '0:43:56', 'additions': 7, 'deletions': 3, 'state': 'closed'}, {'id': 903458345, 'number': 4918, 'closed': datetime.datetime(2022, 4, 8, 16, 35, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 8, 6, 5, 15, tzinfo=datetime.timezone.utc), 'time_taken': 37795.0, 'time_delta': '10:29:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 903232581, 'number': 4917, 'closed': datetime.datetime(2022, 4, 7, 22, 24, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 7, 21, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 2353.0, 'time_delta': '0:39:13', 'additions': 31, 'deletions': 7, 'state': 'closed'}, {'id': 891128867, 'number': 4886, 'closed': datetime.datetime(2022, 4, 7, 16, 25, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 27, 20, 12, 52, tzinfo=datetime.timezone.utc), 'time_taken': 936782.0, 'time_delta': '10 days, 20:13:02', 'additions': 704, 'deletions': 70, 'state': 'closed'}, {'id': 883998674, 'number': 4869, 'closed': datetime.datetime(2022, 3, 21, 18, 54, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 19, 15, 40, 41, tzinfo=datetime.timezone.utc), 'time_taken': 184458.0, 'time_delta': '2 days, 3:14:18', 'additions': 328, 'deletions': 389, 'state': 'closed'}, {'id': 881720677, 'number': 4862, 'closed': datetime.datetime(2022, 3, 16, 19, 56, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 16, 19, 23, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1992.0, 'time_delta': '0:33:12', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 877856129, 'number': 4850, 'closed': datetime.datetime(2022, 3, 15, 21, 12, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 11, 22, 0, 2, tzinfo=datetime.timezone.utc), 'time_taken': 342722.0, 'time_delta': '3 days, 23:12:02', 'additions': 169, 'deletions': 8, 'state': 'closed'}, {'id': 876679904, 'number': 4841, 'closed': datetime.datetime(2022, 3, 10, 21, 27, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 10, 17, 50, 52, tzinfo=datetime.timezone.utc), 'time_taken': 13017.0, 'time_delta': '3:36:57', 'additions': 431, 'deletions': 313, 'state': 'closed'}, {'id': 875017699, 'number': 4830, 'closed': datetime.datetime(2022, 3, 9, 15, 41, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 9, 8, 0, 52, tzinfo=datetime.timezone.utc), 'time_taken': 27647.0, 'time_delta': '7:40:47', 'additions': 201, 'deletions': 134, 'state': 'closed'}, {'id': 868059709, 'number': 4818, 'closed': datetime.datetime(2022, 3, 4, 22, 0, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 1, 16, 43, 53, tzinfo=datetime.timezone.utc), 'time_taken': 278208.0, 'time_delta': '3 days, 5:16:48', 'additions': 880, 'deletions': 1149, 'state': 'closed'}, {'id': 866160084, 'number': 4811, 'closed': datetime.datetime(2022, 2, 28, 17, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 27, 19, 34, 41, tzinfo=datetime.timezone.utc), 'time_taken': 80299.0, 'time_delta': '22:18:19', 'additions': 13, 'deletions': 6, 'state': 'closed'}, {'id': 863544419, 'number': 4807, 'closed': datetime.datetime(2022, 2, 25, 18, 22, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 25, 15, 7, 45, tzinfo=datetime.timezone.utc), 'time_taken': 11661.0, 'time_delta': '3:14:21', 'additions': 51, 'deletions': 17, 'state': 'closed'}, {'id': 862592372, 'number': 4804, 'closed': datetime.datetime(2022, 2, 24, 18, 37, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 24, 16, 2, 7, tzinfo=datetime.timezone.utc), 'time_taken': 9312.0, 'time_delta': '2:35:12', 'additions': 61, 'deletions': 61, 'state': 'closed'}, {'id': 857011075, 'number': 4796, 'closed': datetime.datetime(2022, 2, 22, 22, 4, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 18, 13, 7, 48, tzinfo=datetime.timezone.utc), 'time_taken': 377780.0, 'time_delta': '4 days, 8:56:20', 'additions': 242, 'deletions': 248, 'state': 'closed'}, {'id': 849016503, 'number': 4784, 'closed': datetime.datetime(2022, 2, 16, 17, 20, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 12, 13, 51, 9, tzinfo=datetime.timezone.utc), 'time_taken': 358170.0, 'time_delta': '4 days, 3:29:30', 'additions': 47, 'deletions': 2, 'state': 'closed'}, {'id': 847825856, 'number': 4782, 'closed': datetime.datetime(2022, 2, 11, 19, 13, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 11, 16, 19, 17, tzinfo=datetime.timezone.utc), 'time_taken': 10451.0, 'time_delta': '2:54:11', 'additions': 5, 'deletions': 0, 'state': 'closed'}]"
