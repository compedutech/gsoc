pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
427060817,Updated VCS interface and integration of editor,"This pr is part of my GSoC project. It has a new UI for commit dock and implemented new features like stage/unstage, discarding changes, branch checkout, fetch/pull/push and etc. 

Testing this branch requires a custom compiled version of [godot-git-plugin](https://github.com/godotengine/godot-git-plugin/pull/37). Both branches are in sync so you can check it out.  

Here is a gif for curiosity. 
<img src=""https://user-images.githubusercontent.com/29702428/85693492-ebf17700-b6f3-11ea-9e07-117f7bf7f1e6.gif"" width=""256"">",False,39255,https://api.github.com/repos/godotengine/godot/pulls/39255,https://github.com/godotengine/godot/pull/39255,closed,1437,393,8,10,11,92,2,0,"[{'name': 'enhancement'}, {'name': 'topic:editor'}]",2020-06-03 08:56:57+00:00,2021-10-05 10:56:10+00:00,42256753.0,"489 days, 1:59:13","[{'comment_id': 445140815, 'comment_body': 'There are double spaces after `implement`. Minor typo I presume', 'comment_created': datetime.datetime(2020, 6, 24, 20, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445141442, 'comment_body': 'Also I think we are decided on what we are calling the plugin. We have removed places where we refer to it as addon. If you are changing these prompts, might as well change `addon` to `plugin`', 'comment_created': datetime.datetime(2020, 6, 24, 20, 6, 46, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445142093, 'comment_body': 'Since this exact line repeats quite a lot of times, you can easily put this line in a macro and call that macro wherever you need it', 'comment_created': datetime.datetime(2020, 6, 24, 20, 7, 59, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445143444, 'comment_body': ""Godot follows generally a convention of `p_` and `r_` (for references) prefix, as you already have been using. There are a few places where this isn't used in this PR. You can find those easily by going through the diff.\r\n\r\nThis is not high priority but yes, this will be required to get this PR merged in finally"", 'comment_created': datetime.datetime(2020, 6, 24, 20, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445146285, 'comment_body': 'The `if (is_addon_ready())` check has not be done here and also in a few functions below, unlike the functions above. Is there a specific reason for that?', 'comment_created': datetime.datetime(2020, 6, 24, 20, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445148389, 'comment_body': 'I think this is being used as a constant. You could declare this as const or change this to a macro, so this is not modified by anyone', 'comment_created': datetime.datetime(2020, 6, 24, 20, 20, 36, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445149935, 'comment_body': 'The filename convention for icon files seems to be PascalCase. This can be easily changed', 'comment_created': datetime.datetime(2020, 6, 24, 20, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445151175, 'comment_body': 'I think we should handle the case if the user does not put anything as username or password. Maybe raise  a warning or a red coloured text if we find empty username and password', 'comment_created': datetime.datetime(2020, 6, 24, 20, 25, 56, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445152151, 'comment_body': 'You can remove all the code directly if it is not planned to be used', 'comment_created': datetime.datetime(2020, 6, 24, 20, 27, 48, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445152605, 'comment_body': 'Would really like this renamed from addon to plugin because several users raised questions on what this line actually meant', 'comment_created': datetime.datetime(2020, 6, 24, 20, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445153954, 'comment_body': 'Minor typo in `adopting` if you are planning to leave this here', 'comment_created': datetime.datetime(2020, 6, 24, 20, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445159598, 'comment_body': 'I am not sure why this is needed. I will build and run and check this again. Would like to know why this is being done.', 'comment_created': datetime.datetime(2020, 6, 24, 20, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445163003, 'comment_body': 'What was the rationale behind converting all these to tool buttons?', 'comment_created': datetime.datetime(2020, 6, 24, 20, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445348139, 'comment_body': 'Tool buttons are used in other docks and match the editor theme. The normal button has a rectangle box with a border as a background that breaks the theme. ', 'comment_created': datetime.datetime(2020, 6, 25, 7, 4, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 445354613, 'comment_body': 'The stage and unstage have a button to open the changed file. It opens the same scene again and again in new tabs. ', 'comment_created': datetime.datetime(2020, 6, 25, 7, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 445359698, 'comment_body': 'I am not sure why we are checking it on every operation. Instead, we can make sure the dock should appear only when the addon is ready.  https://github.com/godotengine/godot/blob/ac7e44cf73110e67c6e566f150eb5d09c0b2b482/editor/plugins/version_control_editor_plugin.cpp#L116\r\nWe can move this line to the point where we have loaded the plugin without errors. ', 'comment_created': datetime.datetime(2020, 6, 25, 7, 28, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 445378757, 'comment_body': 'Note that ToolButton was removed in the `master` branch in profit of plain Buttons with `set_flat(true)` called on them.', 'comment_created': datetime.datetime(2020, 6, 25, 8, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Calinou', 'type': 'User'}, {'comment_id': 445439306, 'comment_body': 'Icon filenames have snake_case for the 3.2 branch. The should be changed while porting it to 4.0. ', 'comment_created': datetime.datetime(2020, 6, 25, 9, 47, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 445440520, 'comment_body': '@akien-mga  should I compress or remove unnecessary tags from SVG the file.  ', 'comment_created': datetime.datetime(2020, 6, 25, 9, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 445446925, 'comment_body': 'See https://docs.godotengine.org/en/latest/development/editor/creating_icons.html#icon-optimization', 'comment_created': datetime.datetime(2020, 6, 25, 10, 0, 37, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 445504264, 'comment_body': 'I thought we wanted to remove this file completely and move everything in the calling place. Do you want to do this later or abandon the idea ? ', 'comment_created': datetime.datetime(2020, 6, 25, 11, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 445506153, 'comment_body': 'I believe it should be possible to commit without message. But indeed we should probably popup a warning.', 'comment_created': datetime.datetime(2020, 6, 25, 12, 2, 21, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 445506907, 'comment_body': 'The two next tests should like use ERR_FAIL_COND_V_MSG instead. This is usually what we do when a function fails.\r\nI think we should consider this as an error (and not a warning) because the commit button should be disabled when the two following conditions are not met.', 'comment_created': datetime.datetime(2020, 6, 25, 12, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 445507356, 'comment_body': 'Same here, this should be an error this it should not be possible to interact with the VCS dock if there is no initialized VCS.', 'comment_created': datetime.datetime(2020, 6, 25, 12, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'groud', 'type': 'User'}, {'comment_id': 445543497, 'comment_body': 'Actually only removing some default behavior functions would be the effect of making that shift. The file itself will be needed because it contains the definitions of the public functions that Godot calls into', 'comment_created': datetime.datetime(2020, 6, 25, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 466836601, 'comment_body': '@Paulb23 Could you help me to set margin and space between line no and fold gutters so line change gutter do not overlap on fold gutters?  This is how it looks currently\r\n![Screenshot from 2020-08-07 11-17-30](https://user-images.githubusercontent.com/29702428/89613751-9981a980-d8a0-11ea-9ed4-ea150265a00f.png).\r\nI need 2px space between line no and fold gutters for line change gutters.  \r\n', 'comment_created': datetime.datetime(2020, 8, 7, 5, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 467221277, 'comment_body': 'The line number gutter pads by an additional char, the fold gutter currently draws over this padding, so the fold icon draw code needs updating.\r\n\r\nHowever, if possible I would recommend holding on for #40973 first, where this is fixed and in general should make gutters easier.', 'comment_created': datetime.datetime(2020, 8, 7, 19, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Paulb23', 'type': 'User'}, {'comment_id': 467456991, 'comment_body': '@Paulb23 I am currently working the 3.2 branch and I will later port this to master. ', 'comment_created': datetime.datetime(2020, 8, 8, 11, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 467573195, 'comment_body': 'Just noticed, `\\""function` could be `\\"" function`', 'comment_created': datetime.datetime(2020, 8, 9, 11, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467573541, 'comment_body': ""This function doesn't seem to be defined anywhere. Consider removing it"", 'comment_created': datetime.datetime(2020, 8, 9, 11, 44, 3, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467573679, 'comment_body': 'p_area :) ', 'comment_created': datetime.datetime(2020, 8, 9, 11, 45, 19, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467573705, 'comment_body': 'Also p_text', 'comment_created': datetime.datetime(2020, 8, 9, 11, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467574388, 'comment_body': 'All of this depends on the format of the data received from EditorVCSInterface. Could we arrange all that into a neat little struct? EditorVCSInterface can then handle transferring data from the data received from the plugin and return that to Godot', 'comment_created': datetime.datetime(2020, 8, 9, 11, 52, 51, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467602012, 'comment_body': 'Using data structures on both sides would be better IMO. ', 'comment_created': datetime.datetime(2020, 8, 9, 16, 19, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 467606353, 'comment_body': '@Janglee123 Yes it would be the best case, but it also needs to be convertible to-and-from a variant to be sent through the Object::call() function', 'comment_created': datetime.datetime(2020, 8, 9, 17, 5, 16, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 469397507, 'comment_body': 'The `= List<EditorVCSInterface::Commit>()` can be omitted if you want, although not very important', 'comment_created': datetime.datetime(2020, 8, 12, 16, 44, 57, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 469400131, 'comment_body': 'All these are more suited to be `struct` instead of classes since they are only being used for storage, which means you can remove the `public:` because structs have members public by default. Also you can remove the constructors too because you are not doing anything fancy in them.\r\n\r\nBut this looks much more well organized than before! Good work!', 'comment_created': datetime.datetime(2020, 8, 12, 16, 49, 25, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 469401668, 'comment_body': ""All these helper functions can be private if I understand this correctly. I don't think they will need to be called from outside"", 'comment_created': datetime.datetime(2020, 8, 12, 16, 52, 3, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671695913, 'comment_body': '`fetchs` -> `Fetches`', 'comment_created': datetime.datetime(2021, 7, 17, 13, 11, 31, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671695952, 'comment_body': '`corrent` -> `current`', 'comment_created': datetime.datetime(2021, 7, 17, 13, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671695989, 'comment_body': 'Same as above ^', 'comment_created': datetime.datetime(2021, 7, 17, 13, 12, 7, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671696302, 'comment_body': 'Are the commented bindings needed?', 'comment_created': datetime.datetime(2021, 7, 17, 13, 15, 25, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671696628, 'comment_body': 'Can `branch_select` ever be empty here? If a person makes a repo with `git init --bare` they might have no branches in it.', 'comment_created': datetime.datetime(2021, 7, 17, 13, 18, 47, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671696671, 'comment_body': 'Addon -> plugin \r\n:)', 'comment_created': datetime.datetime(2021, 7, 17, 13, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671696908, 'comment_body': 'There are multiple calls with the same string so you can probably create a function that prints this and call it whenever needed. Probably named `_ensure_vcs_plugin_is_initialized()` or something similar', 'comment_created': datetime.datetime(2021, 7, 17, 13, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 671698297, 'comment_body': 'Thanks for point it out. Those are need and used. I might have messed while rebasing. ', 'comment_created': datetime.datetime(2021, 7, 17, 13, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 671699826, 'comment_body': 'All of these should be made `virtual`, see #50219.', 'comment_created': datetime.datetime(2021, 7, 17, 13, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Xrayez', 'type': 'User'}, {'comment_id': 673016455, 'comment_body': 'Indeed, it would be best to remove it (same with other redundant `List<>` constructor calls).', 'comment_created': datetime.datetime(2021, 7, 20, 10, 53, 12, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673017316, 'comment_body': ""This was marked as resolved, but it's still not defined anywhere and included in the header."", 'comment_created': datetime.datetime(2021, 7, 20, 10, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673017597, 'comment_body': '```suggestion\r\n\tvirtual Array _get_file_diff(String p_identifier, TreeArea p_area);\r\n```\r\n(Same in `.cpp`.)', 'comment_created': datetime.datetime(2021, 7, 20, 10, 54, 56, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673018378, 'comment_body': '```suggestion\r\n\t// TODO: Add new branch feature.\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 10, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673019098, 'comment_body': 'Make sure to end error messages with a dot (applies to all error messages added in this PR).', 'comment_created': datetime.datetime(2021, 7, 20, 10, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673019497, 'comment_body': '```suggestion\r\n\t// FIXIT: The project.godot file shows weird behavior.\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 10, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673020239, 'comment_body': '```suggestion\r\n\t// Stage area\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 10, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673020590, 'comment_body': 'Dead code.', 'comment_created': datetime.datetime(2021, 7, 20, 10, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673020990, 'comment_body': '```suggestion\r\n\tdiff_view_type_select->add_item(TTR(""Split""), DIFF_VIEW_TYPE_SPLIT);\r\n\tdiff_view_type_select->add_item(TTR(""Unified""), DIFF_VIEW_TYPE_UNIFIED);\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 11, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673021409, 'comment_body': ""These shouldn't be necessary as you're not adding any additional usage hints."", 'comment_created': datetime.datetime(2021, 7, 20, 11, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673022702, 'comment_body': '```suggestion\r\n\tERR_PRINT(vformat(""The selected VCS plugin does not implement the \\""%s\\"" function."", p_function));\r\n```', 'comment_created': datetime.datetime(2021, 7, 20, 11, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673023003, 'comment_body': 'Dead code?', 'comment_created': datetime.datetime(2021, 7, 20, 11, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673023199, 'comment_body': ""Shouldn't these be bound as virtual methods so that they appear in the docs and can be overridden from script?"", 'comment_created': datetime.datetime(2021, 7, 20, 11, 4, 19, tzinfo=datetime.timezone.utc), 'commenter': 'akien-mga', 'type': 'User'}, {'comment_id': 673391116, 'comment_body': 'We Will allow other plugins to use VCS interface, but not for now. ', 'comment_created': datetime.datetime(2021, 7, 20, 18, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Janglee123', 'type': 'User'}, {'comment_id': 673734374, 'comment_body': ""On second thought, I don't think there is any harm in allowing editor plugins or tool scripts to interact with EditorVCSInterface, if it's just the matter of binding a handful of functions"", 'comment_created': datetime.datetime(2021, 7, 21, 7, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673736308, 'comment_body': 'It would be nice to turn all references to the godot-git-plugin e.g. from `ADDON` to `PLUGIN`, just so that it remains consistent throughout the editor and the plugin. ', 'comment_created': datetime.datetime(2021, 7, 21, 7, 42, 10, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673796862, 'comment_body': 'After the macro name change, you will require a change to the error message here as well: ""Select a Version Control addon"" -> ""Select a Version Control System plugin""', 'comment_created': datetime.datetime(2021, 7, 21, 9, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673934972, 'comment_body': 'Can also change addons -> plugins here as well', 'comment_created': datetime.datetime(2021, 7, 21, 12, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673937019, 'comment_body': 'This can be present tense here as well, like the other docstrings on this page', 'comment_created': datetime.datetime(2021, 7, 21, 12, 43, 6, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673940733, 'comment_body': 'This function returns ""Git"" IIRC, and in that case it is actually returning the current VCS in use', 'comment_created': datetime.datetime(2021, 7, 21, 12, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673943733, 'comment_body': '```suggestion\r\n\t\t\t\tThis method is called when the user wants to commit staged changes.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 12, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673943900, 'comment_body': '```suggestion\r\n\t\t\t\tDiscard the changes made in a file present at [code]file_path[/code].\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 12, 52, 49, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673944586, 'comment_body': '```suggestion\r\n\t\t\t\tFetches changes from the remote.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 12, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673945312, 'comment_body': '```suggestion\r\n\t\t\t\tReturns an Array of available branch names\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 12, 54, 47, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673947576, 'comment_body': '```suggestion\r\n\t\t\t\tCheckout a [code]branch[/code] in the VCS.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 12, 57, 40, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673949208, 'comment_body': '```suggestion\r\n\t\tUsed by the editor to display VCS extracted information in the editor. The implementation of this API is included in VCS plugins, which are essentially GDNative plugins. These VCS plugins are scripts that are attached (on demand) to the object instance of [code]EditorVCSInterface[/code]. All the virtual functions listed below, instead of performing the task themselves, call the internally defined functions in the VCS plugins to provide a plug-n-play experience. VCS plugin is supposed to override and implement them.\r\n```\r\nRemoving the point about ""placing in the project folder"" just so that we can make the plugins available in the asset browser in the future without touching this API documentation.', 'comment_created': datetime.datetime(2021, 7, 21, 12, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673952183, 'comment_body': '```suggestion\r\n\t\t\t\tReturns an Array of Dictionary objects (see [method create_diff_file] and [method add_diff_hunks_into_diff_file]) containing the changes in a file or a commit hash. The [code]identifier[/code] can be commit hash or file path based on value of area (see [enum TreeArea]).\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673957482, 'comment_body': ""```suggestion\r\n\t\t\t\tReturns an Array of Dictionary objects, each containing a line diff. (see [method create_diff_hunk])\r\n```\r\nI can't seem to recall what the `p_text` argument is for so feel free to add some words about it to this docstring"", 'comment_created': datetime.datetime(2021, 7, 21, 13, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673958567, 'comment_body': '```suggestion\r\n\t\t\t\tReturns Array of Dictionary (see [method create_status_file]) objects, each containing the status data of a modified file. Equivalent to running plain [code]git status[/code].\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 12, 24, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673959449, 'comment_body': '```suggestion\r\n\t\t\t\tReturns Array of Dictionary (see [method create_commit]) objects, each containing the data for a past commit.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 13, 31, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673960341, 'comment_body': '```suggestion\r\n\t\t\t\tCalled when initializing the VCS plugin from the editor. Returns whether or not the plugin was successfully initialized.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673961216, 'comment_body': '```suggestion\r\n\t\t\t\tReturns whether the VCS plugin has been initialized.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 15, 50, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673962104, 'comment_body': '```suggestion\r\n\t\t\t\tPulls changes from the remote.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 16, 53, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673962516, 'comment_body': '```suggestion\r\n\t\t\t\tPushes changes to the remote.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 17, 21, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673964156, 'comment_body': '```suggestion\r\n\t\t\t\tCalled after initializing the plugin. The plugin should save the sent account credentials for future use while performing remote operations.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673964596, 'comment_body': '```suggestion\r\n\t\t\t\tShuts down VCS plugin instance. Called when the user either closes the editor or shuts down the VCS plugin through the editor UI.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 19, 51, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673966856, 'comment_body': '```suggestion\r\n\t\t\t\tStage file present at [code]file_path[/code] to the staged area.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673967344, 'comment_body': '```suggestion\r\n\t\t\t\tUnstage file present at [code]file_path[/code] from the staged area to the unstaged area.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 22, 58, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673967842, 'comment_body': '```suggestion\r\n\t\t\t\tShow an error message while performing a VCS operation.\r\n```', 'comment_created': datetime.datetime(2021, 7, 21, 13, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673968385, 'comment_body': '```suggestion\r\n\t\t\t\tEmitted when the stage area is refreshed by the editor.\r\n```\r\nIs changing `plugin` -> `editor` accurate here?', 'comment_created': datetime.datetime(2021, 7, 21, 13, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673970084, 'comment_body': ""A small number of functions below this are not using the `p_argument_name` convention. Just go over the PR diff once to see if there are any others as well. I don't feel this should affect the operation of the plugin but it wouldn't hurt to check."", 'comment_created': datetime.datetime(2021, 7, 21, 13, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 673970612, 'comment_body': '^ Reminder, these need to be uncommented or deleted', 'comment_created': datetime.datetime(2021, 7, 21, 13, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 702054706, 'comment_body': '```suggestion\r\n\t\t\t\tCalled to checkout a [code]branch[/code] in the VCS.\r\n```\r\nJust a small documentation error I found while looking again.', 'comment_created': datetime.datetime(2021, 9, 3, 17, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 702057294, 'comment_body': '```suggestion\r\n\t// TODO: Add new branch feature.\r\n```', 'comment_created': datetime.datetime(2021, 9, 3, 17, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 702058090, 'comment_body': 'We should ideally also check to see if it is a bare repository with 0 branches, but it is really rare to see a user create a bare repository because most Git repositories need to sync to a remote Git repo to actually function as a reliable VCS solution.', 'comment_created': datetime.datetime(2021, 9, 3, 17, 25, 50, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}]","[{'commit_sha': '4d29a2df93bd3b7c0cdc44e630bc80aa793655d6', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '319ca8cc43f47abb8b44d45e29030cbefe4c6d8e', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ade06f3d10f431906abcb5121f096da659540ac', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1ffe487c4beab2ceea4d1505921c88c32b4cace', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a720dae24daee91e573c901c72361e6669029beb', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3029093a7dcb8827902766d5ef2a96045301e01', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e3fc4e21a82b1d7dd4b05098d311c7581bcee0ba', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4ff13b8483f78440f40b9481f21a042e1decb42', 'committer_username': 'twaritwaikar', 'committer_name': 'Twarit Waikar', 'committer_email': 'wtwarit@gmail.com', 'commit_date': datetime.datetime(2017, 9, 9, 15, 13, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a49f12323c5911262c433a9c77ddfc72801c251', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0511afa4ec9b1985d028f91c318ce564fdd49cde', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}]",Meru Patel,29702428,merupatel123@gmail.com,User,,31,,36,56
444369286,Version control system improvements,This is port for 4.0 branch of #39255. I have not tested hooks with GDnative plugin for this port but GUI is working without crashing. ,False,40129,https://api.github.com/repos/godotengine/godot/pulls/40129,https://github.com/godotengine/godot/pull/40129,closed,1102,324,7,3,4,0,3,0,"[{'name': 'enhancement'}, {'name': 'archived'}, {'name': 'topic:editor'}]",2020-07-05 07:08:50+00:00,2022-04-18 15:03:11+00:00,56361261.0,"652 days, 7:54:21",[],"[{'commit_sha': '79b766313d8f46e2ac9605a6886e3065dda480d4', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1eef71de4fac133ad95da27685e5005ebb41cbaf', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '657786de85b6a96f645e4e3e73c766a425767f79', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}]",Meru Patel,29702428,merupatel123@gmail.com,User,,31,,36,56
423301615,Changes for new version control system,"It is based on libgit2-bump-fix and requires [vcs-new-ui](https://github.com/Janglee123/godot/tree/vcs-new-ui) to work. Both branches are updated parallelly.  

Edit: Moved to https://github.com/godotengine/godot-git-plugin/pull/47",False,37,https://api.github.com/repos/godotengine/godot-git-plugin/pulls/37,https://github.com/godotengine/godot-git-plugin/pull/37,closed,596,172,7,6,3,15,1,0,[{'name': 'enhancement'}],2020-05-26 16:03:49+00:00,2020-09-05 10:06:13+00:00,8791344.0,"101 days, 18:02:24","[{'comment_id': 444090536, 'comment_body': 'Reminder that we will also need to port these changes', 'comment_created': datetime.datetime(2020, 6, 23, 9, 30, 35, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445166832, 'comment_body': 'This will be ported as well, especially while doing a mac build', 'comment_created': datetime.datetime(2020, 6, 24, 20, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445168427, 'comment_body': 'This can be converted to const or a macro', 'comment_created': datetime.datetime(2020, 6, 24, 20, 59, 20, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445169626, 'comment_body': 'Are these variables required to be stored as member variables?', 'comment_created': datetime.datetime(2020, 6, 24, 21, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445170319, 'comment_body': 'We are also following the Godot convention of parameter naming of p_ and r_. This will be required I guess before merging', 'comment_created': datetime.datetime(2020, 6, 24, 21, 3, 7, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445171022, 'comment_body': 'Minor nitpick: A newline here. Git likes to work with files like that', 'comment_created': datetime.datetime(2020, 6, 24, 21, 4, 29, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445173471, 'comment_body': 'You need not treat this variable as an enum. You can use normal camelCase for it', 'comment_created': datetime.datetime(2020, 6, 24, 21, 9, 43, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445174122, 'comment_body': 'Ah this is a clever way to avoid the switch I guess', 'comment_created': datetime.datetime(2020, 6, 24, 21, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445175182, 'comment_body': 'Is freeing the references not required here? I think freeing them has been done elsewhere too', 'comment_created': datetime.datetime(2020, 6, 24, 21, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445175740, 'comment_body': 'Would like to keep this consistent to our other errors, which start with Git in PascalCase', 'comment_created': datetime.datetime(2020, 6, 24, 21, 14, 38, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 445177754, 'comment_body': 'It should be `Credentials` :) Also I think this would leak memory, it maybe I am misunderstanding how this has been used above', 'comment_created': datetime.datetime(2020, 6, 24, 21, 19, 6, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467571319, 'comment_body': 'Typo: `lenght` -> `length`', 'comment_created': datetime.datetime(2020, 8, 9, 11, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467572526, 'comment_body': 'Typo: Forwarded', 'comment_created': datetime.datetime(2020, 8, 9, 11, 34, 21, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467572547, 'comment_body': 'Typo: Failed', 'comment_created': datetime.datetime(2020, 8, 9, 11, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}, {'comment_id': 467572617, 'comment_body': 'Typo: Failed', 'comment_created': datetime.datetime(2020, 8, 9, 11, 35, 1, tzinfo=datetime.timezone.utc), 'commenter': 'twaritwaikar', 'type': 'User'}]","[{'commit_sha': '8807b8136cc74251abf40e98d25a3bd53b8ae14e', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04b28bb79f0c8e688818a597193577daae198f37', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aeff502ddccd4ecda43921105e69700c92c436e', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97bcf03a73f3064a821d4e000c4ac94c9d5914a7', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}, {'commit_sha': '552acedc3970b9925990037201d42d8a44c9daf8', 'committer_username': 'twaritwaikar', 'committer_name': 'Twarit Waikar', 'committer_email': 'wtwarit@gmail.com', 'commit_date': datetime.datetime(2017, 9, 9, 15, 13, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8eaf7a04067c208ba1c0293d9d8aa0846297195c', 'committer_username': 'Janglee123', 'committer_name': 'Meru Patel', 'committer_email': 'merupatel123@gmail.com', 'commit_date': datetime.datetime(2017, 6, 26, 8, 2, 46, tzinfo=datetime.timezone.utc)}]",Meru Patel,29702428,merupatel123@gmail.com,User,,31,,36,56

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
15634981,godot,godotengine/godot,C++,19936,88115,1515,2965,66484,13319,14,2834,"[{'id': 1051808721, 'number': 65582, 'closed': None, 'created': datetime.datetime(2022, 9, 9, 17, 0, 11, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 46, 'deletions': 0, 'state': 'open'}, {'id': 597364748, 'number': 47204, 'closed': datetime.datetime(2021, 3, 30, 21, 40, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 21, 46, 11, tzinfo=datetime.timezone.utc), 'time_taken': 863662.0, 'time_delta': '9 days, 23:54:22', 'additions': 37, 'deletions': 13, 'state': 'closed'}, {'id': 584100015, 'number': 46623, 'closed': datetime.datetime(2021, 3, 4, 22, 40, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 3, 16, 38, 2, tzinfo=datetime.timezone.utc), 'time_taken': 108135.0, 'time_delta': '1 day, 6:02:15', 'additions': 22, 'deletions': 1, 'state': 'closed'}, {'id': 542963077, 'number': 44528, 'closed': datetime.datetime(2020, 12, 19, 20, 29, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 19, 18, 41, 51, tzinfo=datetime.timezone.utc), 'time_taken': 6459.0, 'time_delta': '1:47:39', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 444369286, 'number': 40129, 'closed': datetime.datetime(2022, 4, 18, 15, 3, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 7, 8, 50, tzinfo=datetime.timezone.utc), 'time_taken': 56361261.0, 'time_delta': '652 days, 7:54:21', 'additions': 1102, 'deletions': 324, 'state': 'closed'}, {'id': 427060817, 'number': 39255, 'closed': datetime.datetime(2021, 10, 5, 10, 56, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 3, 8, 56, 57, tzinfo=datetime.timezone.utc), 'time_taken': 42256753.0, 'time_delta': '489 days, 1:59:13', 'additions': 1437, 'deletions': 393, 'state': 'closed'}, {'id': 415853854, 'number': 38649, 'closed': datetime.datetime(2020, 5, 11, 5, 54, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 11, 4, 7, 37, tzinfo=datetime.timezone.utc), 'time_taken': 6414.0, 'time_delta': '1:46:54', 'additions': 53, 'deletions': 2, 'state': 'closed'}, {'id': 402564138, 'number': 37840, 'closed': datetime.datetime(2020, 4, 13, 11, 55, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 13, 9, 38, 23, tzinfo=datetime.timezone.utc), 'time_taken': 8216.0, 'time_delta': '2:16:56', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 400246462, 'number': 37656, 'closed': datetime.datetime(2020, 4, 7, 13, 46, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 7, 12, 48, 46, tzinfo=datetime.timezone.utc), 'time_taken': 3471.0, 'time_delta': '0:57:51', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 398967786, 'number': 37602, 'closed': datetime.datetime(2020, 4, 10, 9, 55, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 5, 8, 30, 56, tzinfo=datetime.timezone.utc), 'time_taken': 437078.0, 'time_delta': '5 days, 1:24:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 393586569, 'number': 37293, 'closed': datetime.datetime(2020, 5, 5, 14, 49, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 13, 26, 25, tzinfo=datetime.timezone.utc), 'time_taken': 3547371.0, 'time_delta': '41 days, 1:22:51', 'additions': 64, 'deletions': 3, 'state': 'closed'}, {'id': 393443417, 'number': 37286, 'closed': datetime.datetime(2021, 5, 8, 2, 52, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 8, 10, 19, tzinfo=datetime.timezone.utc), 'time_taken': 35318549.0, 'time_delta': '408 days, 18:42:29', 'additions': 75, 'deletions': 99, 'state': 'closed'}, {'id': 392942065, 'number': 37274, 'closed': datetime.datetime(2020, 3, 26, 8, 29, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 11, 45, 48, tzinfo=datetime.timezone.utc), 'time_taken': 161011.0, 'time_delta': '1 day, 20:43:31', 'additions': 12, 'deletions': 5, 'state': 'closed'}, {'id': 391872080, 'number': 37212, 'closed': datetime.datetime(2021, 3, 3, 16, 51, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 15, 20, 58, tzinfo=datetime.timezone.utc), 'time_taken': 29986239.0, 'time_delta': '347 days, 1:30:39', 'additions': 22, 'deletions': 1, 'state': 'closed'}, {'id': 384461021, 'number': 36830, 'closed': datetime.datetime(2021, 8, 30, 11, 7, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 5, 19, 34, 22, tzinfo=datetime.timezone.utc), 'time_taken': 46884813.0, 'time_delta': '542 days, 15:33:33', 'additions': 68, 'deletions': 0, 'state': 'closed'}, {'id': 379180648, 'number': 36518, 'closed': datetime.datetime(2020, 3, 12, 21, 24, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 24, 19, 36, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1475292.0, 'time_delta': '17 days, 1:48:12', 'additions': 30, 'deletions': 10, 'state': 'closed'}, {'id': 378134301, 'number': 36411, 'closed': datetime.datetime(2020, 2, 23, 7, 46, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 21, 7, 3, 56, tzinfo=datetime.timezone.utc), 'time_taken': 175373.0, 'time_delta': '2 days, 0:42:53', 'additions': 88, 'deletions': 39, 'state': 'closed'}, {'id': 377009907, 'number': 36347, 'closed': datetime.datetime(2020, 2, 20, 6, 12, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 19, 7, 35, 4, tzinfo=datetime.timezone.utc), 'time_taken': 81429.0, 'time_delta': '22:37:09', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 375684643, 'number': 36236, 'closed': datetime.datetime(2020, 3, 2, 15, 50, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 15, 6, 17, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1416773.0, 'time_delta': '16 days, 9:32:53', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 372751549, 'number': 36026, 'closed': datetime.datetime(2020, 2, 9, 15, 19, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 8, 19, 47, 23, tzinfo=datetime.timezone.utc), 'time_taken': 70301.0, 'time_delta': '19:31:41', 'additions': 14, 'deletions': 8, 'state': 'closed'}, {'id': 369054111, 'number': 35739, 'closed': datetime.datetime(2022, 7, 5, 10, 28, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 30, 12, 45, 26, tzinfo=datetime.timezone.utc), 'time_taken': 76628563.0, 'time_delta': '886 days, 21:42:43', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 261756554, 'number': 27115, 'closed': datetime.datetime(2019, 3, 16, 17, 54, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 3, 16, 7, 55, 32, tzinfo=datetime.timezone.utc), 'time_taken': 35952.0, 'time_delta': '9:59:12', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
186986904,godot-git-plugin,godotengine/godot-git-plugin,C++,67,677,24,14,287,70,3,7,"[{'id': 480496175, 'number': 47, 'closed': datetime.datetime(2022, 1, 10, 15, 0, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 5, 10, 26, 31, tzinfo=datetime.timezone.utc), 'time_taken': 42525250.0, 'time_delta': '492 days, 4:34:10', 'additions': 609, 'deletions': 171, 'state': 'closed'}, {'id': 423301615, 'number': 37, 'closed': datetime.datetime(2020, 9, 5, 10, 6, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 26, 16, 3, 49, tzinfo=datetime.timezone.utc), 'time_taken': 8791344.0, 'time_delta': '101 days, 18:02:24', 'additions': 596, 'deletions': 172, 'state': 'closed'}, {'id': 418136681, 'number': 34, 'closed': datetime.datetime(2021, 4, 19, 18, 56, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 14, 17, 12, 14, tzinfo=datetime.timezone.utc), 'time_taken': 29382236.0, 'time_delta': '340 days, 1:43:56', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 391460678, 'number': 21, 'closed': datetime.datetime(2022, 1, 10, 15, 5, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 10, 39, 14, tzinfo=datetime.timezone.utc), 'time_taken': 57126351.0, 'time_delta': '661 days, 4:25:51', 'additions': 63, 'deletions': 61, 'state': 'closed'}]"
