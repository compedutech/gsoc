pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1257518525,Fixes- #1404 Make Observable copy-pastable,"# Description

Fixes -#1404 
Leveraged the `<CopyToClipboardButton/>` component to make the observable value copy-pastable.

## Type of change

Please delete options that are not relevant.

- [ ] Bug fix (non-breaking change which fixes an issue).
- [x] New feature (non-breaking change which adds functionality).
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] I have read and understood the rules about [how to Contribute](https://intelowl.readthedocs.io/en/latest/Contribute.html) to this project
- [x] The pull request is for the branch `develop`
- [ ] A new analyzer or connector was added, in which case:
    - [ ] [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) file was updated.
    - [ ] [Advanced-Usage](./Advanced-Usage.md) was updated (in case the analyzer/connector provides additional optional configuration).
    - [ ] Secrets were added in [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the [Installation](./Installation.md) docs, if necessary.
    - [ ] If the analyzer/connector requires mocked testing, `_monkeypatch()` was used in its class to apply the necessary decorators.
    - [ ] If a File analyzer was added, its name was explicitly defined in [test_file_scripts.py](https://github.com/intelowlproject/IntelOwl/blob/master/tests/analyzers_manager/test_file_scripts.py) (not required for Observable Analyzers).
- [ ] If external libraries/packages with restrictive licenses were used, they were added in the [Legal Notice](https://github.com/certego/IntelOwl/blob/master/.github/legal_notice.md) section.
- [ ] The tests gave 0 errors.
- [x] Linters (`Black`, `Flake`, `Isort`) gave 0 errors. If you have correctly installed [pre-commit](https://intelowl.readthedocs.io/en/latest/Contribute.html#how-to-start-setup-project-and-development-instance), it does these checks and adjustments on your behalf.
- [ ] If changes were made to an existing model/serializer/view, the docs were updated and regenerated (check [CONTRIBUTE.md](./Contribute.md)).
- [ ] If the analyzer is free, Please add it in the `FREE_TO_USE_ANALYZERS` playbook in `playbook_config.json`

### Important Rules
- If your changes decrease the overall tests coverage (you will know after the Codecov CI job is done), you should add the required tests to fix the problem
- Everytime you make changes to the PR and you think the work is done, you should explicitly ask for a review

# Real World Example

Please delete if the PR is for bug fixing.
Otherwise, please provide the resulting raw JSON of a finished analysis (and, if you like, a screenshot of the results). This is to allow the maintainers to understand how the analyzer works.",True,1578,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/1578,https://github.com/intelowlproject/IntelOwl/pull/1578,closed,19,1,1,4,2,0,0,0,[],2023-02-28 17:36:49+00:00,2023-03-21 09:57:49+00:00,1786860.0,"20 days, 16:21:00",[],"[{'commit_sha': 'b1f0c436a308dc34ff6f24921f80ea5f5cc95214', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2c50b028a4b2429c2f90f8f05c319c142d099cb', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcd5e67eaf98fccebc636e7959606fd13aa4b690', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70987db3b3a5f1c0f6a92f2d6f1da2ef67d16c0a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1191432267,"Allow to retry entire job, closes #1026","(Please add to the PR name the issue/s that this PR would close if merged by using a [Github](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue) keyword. Example: `closes #999`. If your PR is made by a single commit, please add that clause in the commit too. This is all required to automate the closure of related issues.)

# Description

Fixes #1026 
adding retry button to jobresults page

## Type of change

Please delete options that are not relevant.


- [ ] New feature (non-breaking change which adds functionality).


# Checklist

- [x] I have read and understood the rules about [how to Contribute](https://intelowl.readthedocs.io/en/latest/Contribute.html) to this project
- [x] The pull request is for the branch `develop`
- [ ] A new plugin (analyzer, connector or playbook) was added or changed, in which case:
    - [ ] [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) file was updated.
    - [ ] [Advanced-Usage](./Advanced-Usage.md) was updated (in case the plugin provides additional optional configuration).
    - [ ] Secrets were added in [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the [Installation](./Installation.md) docs, if necessary.
    - [ ] If the plugin requires mocked testing, `_monkeypatch()` was used in its class to apply the necessary decorators.
    - [ ] If a File analyzer was added, its name was explicitly defined in [test_file_scripts.py](https://github.com/intelowlproject/IntelOwl/blob/master/tests/analyzers_manager/test_file_scripts.py) (not required for Observable Analyzers).
    - [ ] If you created a new analyzer and it is free (does not require API keys), please add it in the `FREE_TO_USE_ANALYZERS` playbook in `playbook_config.json`
    - [ ] I have provided the resulting raw JSON of a finished analysis and a screenshot of the results.
- [ ] If external libraries/packages with restrictive licenses were used, they were added in the [Legal Notice](https://github.com/certego/IntelOwl/blob/master/.github/legal_notice.md) section.
- [ ] The tests gave 0 errors.
- [x] Linters (`Black`, `Flake`, `Isort`) gave 0 errors. If you have correctly installed [pre-commit](https://intelowl.readthedocs.io/en/latest/Contribute.html#how-to-start-setup-project-and-development-instance), it does these checks and adjustments on your behalf.
- [ ] If changes were made to an existing model/serializer/view, the docs were updated and regenerated (check [CONTRIBUTE.md](./Contribute.md)).
- [ ] If the GUI has been modified, I have a provided a screenshot of the result in the PR.

### Important Rules
- If you miss to compile the Checklist properly, your PR won't be reviewed by the maintainers.
- If your changes decrease the overall tests coverage (you will know after the Codecov CI job is done), you should add the required tests to fix the problem
- Everytime you make changes to the PR and you think the work is done, you should explicitly ask for a review. After being reviewed and received a ""change request"", you should explicitly ask for a review again once you have made the requested changes.",True,1407,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/1407,https://github.com/intelowlproject/IntelOwl/pull/1407,closed,67,8,3,22,7,17,0,0,[],2023-01-09 20:53:27+00:00,2023-02-03 10:47:44+00:00,2123657.0,"24 days, 13:54:17","[{'comment_id': 1065584574, 'comment_body': 'this component is a copy paste of the retryPlugin....we need a component which creates a new job with the same parameters as the one selected', 'comment_created': datetime.datetime(2023, 1, 10, 10, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1065587122, 'comment_body': 'we need that button to create a new job, not to retry all the analyzers', 'comment_created': datetime.datetime(2023, 1, 10, 10, 15, 44, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1065591134, 'comment_body': 'you need to leverage the same APIs leveraged for the creation of a normal job. Please check how IntelOwl implements the ""Scan"" button because basically that button should do the same', 'comment_created': datetime.datetime(2023, 1, 10, 10, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1065652683, 'comment_body': 'working on it.', 'comment_created': datetime.datetime(2023, 1, 10, 11, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1090447837, 'comment_body': 'this is smart way to re-use existing components', 'comment_created': datetime.datetime(2023, 1, 30, 10, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1090450793, 'comment_body': 'the title could be more ""descriptive"". Something like ""Retry the analysis"" or ""Force run the same analysis"" would be better from a user perspective', 'comment_created': datetime.datetime(2023, 1, 30, 10, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1090453715, 'comment_body': 'Then, even if the button is cool, as you may notice, there is another possible user experience problem.\r\n\r\nThe button ""retry"" is right next the ""delete"" one. They are both very little and it could be easy to click the wrong one. At this time I would suggest to make those 2 buttons larger and add a brief description in both of them (like the other ones on the right). In that way chances of wrong clicks are highly reduced and all the buttons follow the same rendering. What do you think? Could you please make this last change?', 'comment_created': datetime.datetime(2023, 1, 30, 10, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1090498229, 'comment_body': 'ah, another last thing. IT would be cool if, once the button is clicked, the user would be redirected to the job result page of the new analysis. Otherwise, as you can see in your video, the user should do few more clicks', 'comment_created': datetime.datetime(2023, 1, 30, 11, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1092250430, 'comment_body': 'yes, these changes would make the UX better, working on them.', 'comment_created': datetime.datetime(2023, 1, 31, 17, 16, 46, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1093299343, 'comment_body': 'review on this @mlodic ? \r\n\r\n<img width=""597"" alt=""image"" src=""https://user-images.githubusercontent.com/90976669/216071830-1ed27d67-4157-4fd5-bc35-6fc97257f127.png"">\r\n\r\n\r\n(for smaller screens)\r\n<img width=""577"" alt=""Screenshot 2023-02-01 at 7 54 35 PM"" src=""https://user-images.githubusercontent.com/90976669/216069626-06a65a91-3de5-49e1-904e-3efb424a3274.png"">\r\n\r\nig now the button\'s are well described, and the size\'s good to, very hard to misclick now.\r\n', 'comment_created': datetime.datetime(2023, 2, 1, 14, 27, 25, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1093319348, 'comment_body': 'Cool but you just suggested me another change, if you would like to do that :P \r\n\r\nI guess it could make sense that for smaller screens the description is not shown :P Could you do that with the already available react-strap libraries? In that way, once there is no space, the page would simply adapt to the size of the screen.', 'comment_created': datetime.datetime(2023, 2, 1, 14, 42, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1093377060, 'comment_body': '@mlodic i believe that the smaller screens are more in need of that description, for a better a UX and less misclicks in all, removing them might defeat the purpose.', 'comment_created': datetime.datetime(2023, 2, 1, 15, 26, 4, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1093394619, 'comment_body': ""also for the navigation part, since im leveraging the `createJob` component, in case of multiple observables it creates multiple jobs and navigates back to the `jobs` page, improves UX or go about navigating to the actual job itself?\r\n\r\nhttps://user-images.githubusercontent.com/90976669/216088602-24ab88af-8bf7-430e-9738-9fa2cccf2104.mov\r\n\r\nwould like to know if there's a better way to implement this.\r\n"", 'comment_created': datetime.datetime(2023, 2, 1, 15, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1093444801, 'comment_body': ""ok for the description.\r\n\r\nI didn't understand your last question, could you rewrite that please?"", 'comment_created': datetime.datetime(2023, 2, 1, 16, 17, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1093960037, 'comment_body': 'yes had a doubt, it just resolved itself. ', 'comment_created': datetime.datetime(2023, 2, 2, 2, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1095491660, 'comment_body': 'the status code error for timeout should be 504, not 500', 'comment_created': datetime.datetime(2023, 2, 3, 8, 42, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1095634805, 'comment_body': ""@mlodic isn't 500 the time in ms after which the callback func is executed?"", 'comment_created': datetime.datetime(2023, 2, 3, 10, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}]","[{'commit_sha': '5595e3df6a37222de0ad3e92afc87b22ad284f05', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5e8561d1ef75c217dad7af94e16560ad2d9027c', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b74e718fd9ba6f5d37745bf6093eec2e6a1cb5dd', 'committer_username': 'mlodic', 'committer_name': 'Matteo Lodi', 'committer_email': None, 'commit_date': datetime.datetime(2017, 8, 1, 12, 6, 51, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e786b27aa8b87639c3a6ba0a4c5bba9f45c8e9f', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1b3d6760b2abe97f9b57f6ad87507f399a2d934', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed30055b21c768a15dec5faa05ab394a23abd77b', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cb8ef2207aa1ee983ee5af6480104b4c0995967', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bcbc886685f9ee9f20da025c445f139112ea5a8', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '321dda95a1c3801a17043d6785af6bdf2e91addf', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '568e1aaf05ae683715737640f64d8f1fc7002086', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfd028eb6f3e18dc687019a45c58017e67d78bab', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a34804b8881d16a312a62039482b8729da891bd6', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcbb2bd71cc5e45968f265b9aafd5458baf730b3', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed358610875a4c7df417ec44925e80edf2925d6d', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '739cccdb8e4eb043863d8371bf38a80d2d1280bc', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '459ed5fc93705476fce0639bbc719869c4029924', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cab2fc5345183de7d63be8f4a454751dc13b0b45', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ac1ca08756ca64b5ecad7d1fba7a4340c0de92b8', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '863e8aae8952100840aaab37b7c93a852a14bc32', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0d7b414a7aadbbf6f452707f30d2afe426a0b70', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef8bd71c438584497107bc1e17daf79969c062bb', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9c297808b34600e03b022f88b389c80c4668cab3', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1175593723,fixes #1096,"# Fixes #1096 
Changed the time format from seconds to mm:ss, in the jobHistory page.

## Type of change

Please delete options that are not relevant.


- [x] New feature (non-breaking change which adds functionality).


# Checklist

- [x] I have read and understood the rules about [how to Contribute](https://intelowl.readthedocs.io/en/latest/Contribute.html) to this project
- [x] The pull request is for the branch `develop`
- [ ] A new analyzer or connector was added, in which case:
    - [ ] [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) file was updated.
    - [ ] [Advanced-Usage](./Advanced-Usage.md) was updated (in case the analyzer/connector provides additional optional configuration).
    - [ ] Secrets were added in [env_file_app_template](https://github.com/intelowlproject/IntelOwl/blob/master/docker/env_file_app_template), [env_file_app_ci](https://github.com/certego/IntelOwl/blob/master/docker/env_file_app_ci) and in the [Installation](./Installation.md) docs, if necessary.
    - [ ] If the analyzer/connector requires mocked testing, `_monkeypatch()` was used in its class to apply the necessary decorators.
    - [ ] If a File analyzer was added, its name was explicitly defined in [test_file_scripts.py](https://github.com/intelowlproject/IntelOwl/blob/master/tests/analyzers_manager/test_file_scripts.py) (not required for Observable Analyzers).
- [ ] If external libraries/packages with restrictive licenses were used, they were added in the [Legal Notice](https://github.com/certego/IntelOwl/blob/master/.github/legal_notice.md) section.
- [ ] The tests gave 0 errors.
- [x] Linters (`Black`, `Flake`, `Isort`) gave 0 errors. If you have correctly installed [pre-commit](https://intelowl.readthedocs.io/en/latest/Contribute.html#how-to-start-setup-project-and-development-instance), it does these checks and adjustments on your behalf.
- [ ] If changes were made to an existing model/serializer/view, the docs were updated and regenerated (check [CONTRIBUTE.md](./Contribute.md)).
- [ ] If the analyzer is free, Please add it in the `FREE_TO_USE_ANALYZERS` playbook in `playbook_config.json`

### Important Rules
- If your changes decrease the overall tests coverage (you will know after the Codecov CI job is done), you should add the required tests to fix the problem
- Everytime you make changes to the PR and you think the work is done, you should explicitly ask for a review

# Real World Example

Please delete if the PR is for bug fixing.
Otherwise, please provide the resulting raw JSON of a finished analysis (and, if you like, a screenshot of the results). This is to allow the maintainers to understand how the analyzer works.

<img width=""246"" alt=""image"" src=""https://user-images.githubusercontent.com/90976669/209208409-a92f9e6f-74bf-4f91-a88c-fe88cafb174b.png"">

<img width=""802"" alt=""image"" src=""https://user-images.githubusercontent.com/90976669/209208620-ed2f8d84-8302-4b43-94c1-49c421ae7425.png"">



",True,1362,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/1362,https://github.com/intelowlproject/IntelOwl/pull/1362,closed,13,2,2,4,1,5,0,0,[],2022-12-22 19:07:50+00:00,2022-12-27 09:42:32+00:00,398082.0,"4 days, 14:34:42","[{'comment_id': 1056186102, 'comment_body': 'can you remove debug logs after testing?', 'comment_created': datetime.datetime(2022, 12, 23, 9, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1056516618, 'comment_body': 'done.', 'comment_created': datetime.datetime(2022, 12, 23, 17, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1056587130, 'comment_body': 'is not a good way to add numbers to variables. Please find a more explicative way to call it', 'comment_created': datetime.datetime(2022, 12, 23, 19, 1, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1056591441, 'comment_body': 'can you show me with which criteria do you have chosen these numbers? Code like this seems non-maintanable because you created your own parser for the date. I am sure there is another way to do this by selecting the minutes and the seconds by leveraging the libraries', 'comment_created': datetime.datetime(2022, 12, 23, 19, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1056769671, 'comment_body': 'yea sure, here\'s how i have chosen these numbers.\r\n\r\n<img width=""550"" alt=""Screenshot 2022-12-24 at 2 09 18 PM"" src=""https://user-images.githubusercontent.com/90976669/209428084-fbc36c0d-8f8b-46fb-803c-cfd6a97c6091.png"">\r\n\r\n\r\nI can use the `moment.js` library to achieve the same, but it seems to me like a bit of overkill here, though if it\'s something that\'s more maintainable i\'ll use that, lemme know.', 'comment_created': datetime.datetime(2022, 12, 24, 8, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}]","[{'commit_sha': '1499871e3926321a2cefe902be3373ad490faaf4', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '605246abcc7719cec0597e9fbacf5929a1f8d238', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf89841c285316cc40ac9027c3b9ba20fbfe0bd2', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7759d47766cbe082ff299f2b58a08327ccfa36f5', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1332784129,Added LinkedIn release action,"closes #1299.
# Description

Added a gh action to run on every new release, which first generates an access token using secrets `LINKEDIN_CLIENT_ID` and `LINKEDIN_CLIENT_SECRET` , then on it's success posts to linkedIn with the newest release and lastly returns the post url.

## Type of change

- [x] New feature (non-breaking change which adds functionality).


# Checklist

- [x] I have read and understood the rules about [how to Contribute](https://intelowl.readthedocs.io/en/latest/Contribute.html) to this project
- [x] The pull request is for the branch `develop`
- [ ] A new plugin (analyzer, connector or playbook) was added or changed, in which case:
    - [ ] [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) file was updated.
    - [ ] [Advanced-Usage](./Advanced-Usage.md) was updated (in case the plugin provides additional optional configuration).
    - [ ] If the plugin requires mocked testing, `_monkeypatch()` was used in its class to apply the necessary decorators.
    - [ ] If a File analyzer was added, its name was explicitly defined in [test_file_scripts.py](https://github.com/intelowlproject/IntelOwl/blob/master/tests/analyzers_manager/test_file_scripts.py) (not required for Observable Analyzers).
    - [ ] If you created a new analyzer and it is free (does not require API keys), please add it in the `FREE_TO_USE_ANALYZERS` playbook in `playbook_config.json`
    - [ ] I have provided the resulting raw JSON of a finished analysis and a screenshot of the results.
- [ ] If external libraries/packages with restrictive licenses were used, they were added in the [Legal Notice](https://github.com/certego/IntelOwl/blob/master/.github/legal_notice.md) section.
- [ ] Linters (`Black`, `Flake`, `Isort`) gave 0 errors. If you have correctly installed [pre-commit](https://intelowl.readthedocs.io/en/latest/Contribute.html#how-to-start-setup-project-and-development-instance), it does these checks and adjustments on your behalf.
- [ ] I have added tests for the feature/bug I solved. All the tests (new and old ones) gave 0 errors.
- [ ] If changes were made to an existing model/serializer/view, the docs were updated and regenerated (check [CONTRIBUTE.md](./Contribute.md)).
- [ ] If the GUI has been modified:
    - [ ] I have a provided a screenshot of the result in the PR.
    - [ ] I have created new frontend tests for the new component or updated existing ones.

### Important Rules
- If you miss to compile the Checklist properly, your PR won't be reviewed by the maintainers.
- If your changes decrease the overall tests coverage (you will know after the Codecov CI job is done), you should add the required tests to fix the problem
- Everytime you make changes to the PR and you think the work is done, you should explicitly ask for a review. After being reviewed and received a ""change request"", you should explicitly ask for a review again once you have made the requested changes.",False,1672,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/1672,https://github.com/intelowlproject/IntelOwl/pull/1672,closed,80,0,1,3,6,0,0,0,[],2023-04-29 14:52:43+00:00,2023-05-08 17:35:29+00:00,787366.0,"9 days, 2:42:46",[],"[{'commit_sha': '7ab47352175ed51d868b69fe5c91633cf3ab42ba', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a4948acd715bb9a7cc515820fc5757230a5a10b', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b251494fd94a5587ddfdf2c9e185e657ad147c7', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1400385398,added up auth module.,"added up auth module, verified the endpoints plus initialised the next.js frontend
",True,43,https://api.github.com/repos/certego/BuffaLogs/pulls/43,https://github.com/certego/BuffaLogs/pull/43,closed,11024,5,41,3,2,0,0,0,[],2023-06-20 19:13:22+00:00,2023-06-26 06:17:23+00:00,471841.0,"5 days, 11:04:01",[],"[{'commit_sha': '525628ea032686c756814d1fb6736bdf87076447', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ebfbb658481af68a0938c5316f0da21aff94bae', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62dfee49b6c06832f97f7250ded5d91099ed5d86', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1400385398,added up auth module.,"added up auth module, verified the endpoints plus initialised the next.js frontend
",True,43,https://api.github.com/repos/certego/BuffaLogs/pulls/43,https://github.com/certego/BuffaLogs/pull/43,closed,11024,5,41,3,2,0,0,0,[],2023-06-20 19:13:22+00:00,2023-06-26 06:17:23+00:00,471841.0,"5 days, 11:04:01",[],"[{'commit_sha': '525628ea032686c756814d1fb6736bdf87076447', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ebfbb658481af68a0938c5316f0da21aff94bae', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62dfee49b6c06832f97f7250ded5d91099ed5d86', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1427476109,Build Dashboard + Landing Page + Hook in APIs,"opening up a pr so to track my commits.
not ready for a merge yet.",True,44,https://api.github.com/repos/certego/BuffaLogs/pulls/44,https://github.com/certego/BuffaLogs/pull/44,closed,2741,498,28,16,5,0,0,0,[],2023-07-10 12:56:13+00:00,2023-08-17 08:52:31+00:00,3268578.0,"37 days, 19:56:18",[],"[{'commit_sha': 'b43e7c0491136a448f0d07fd834171a7fa72e849', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bcad05a453094e3a2efea0debb64c11fd12ee99', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61f494101228d78f5341fde8730e7fb413149625', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1570fe73b5f767fc7abaeef71d40dfc91a5cc85', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b029dbff3e7028ba063dc39724c0074480e3628', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e43ffe1778bdf47911633b4a91ac57948f30b12d', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aed80114e0808c81a588d55fc8f2a9f6df5435a0', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70b6c50a6083377b781bc90f0ed4284f7f16802d', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc52011d735f0d0d20151aab54684f90111a6ed2', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73dc4bace7b71371cdd3bb3e3fb923f415d11f25', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37787a54ca9f0b85ebd20b0f86534f66477fdf34', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8ce7c33a2b9a7fd0269c3a818e1f169e9bb0f5', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a34046ad9d869125b21bb0ccff760bcdc71978f', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7caddac965008f374e43f26ad15c5d5a654c975a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be4c1ddb7c3eaa6bf0a4f2af58ba069873fbb1c8', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8652839df05ba768a20e2835b8ac47105217817', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1427476109,Build Dashboard + Landing Page + Hook in APIs,"opening up a pr so to track my commits.
not ready for a merge yet.",True,44,https://api.github.com/repos/certego/BuffaLogs/pulls/44,https://github.com/certego/BuffaLogs/pull/44,closed,2741,498,28,16,5,0,0,0,[],2023-07-10 12:56:13+00:00,2023-08-17 08:52:31+00:00,3268578.0,"37 days, 19:56:18",[],"[{'commit_sha': 'b43e7c0491136a448f0d07fd834171a7fa72e849', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bcad05a453094e3a2efea0debb64c11fd12ee99', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61f494101228d78f5341fde8730e7fb413149625', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1570fe73b5f767fc7abaeef71d40dfc91a5cc85', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b029dbff3e7028ba063dc39724c0074480e3628', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e43ffe1778bdf47911633b4a91ac57948f30b12d', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aed80114e0808c81a588d55fc8f2a9f6df5435a0', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '70b6c50a6083377b781bc90f0ed4284f7f16802d', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc52011d735f0d0d20151aab54684f90111a6ed2', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73dc4bace7b71371cdd3bb3e3fb923f415d11f25', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37787a54ca9f0b85ebd20b0f86534f66477fdf34', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be8ce7c33a2b9a7fd0269c3a818e1f169e9bb0f5', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a34046ad9d869125b21bb0ccff760bcdc71978f', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7caddac965008f374e43f26ad15c5d5a654c975a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be4c1ddb7c3eaa6bf0a4f2af58ba069873fbb1c8', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8652839df05ba768a20e2835b8ac47105217817', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1487150644,Add First Visit Guide (closes #1589),"closes #1589 

# Description
A tutorial guide to make first time visitors familiar to intelowl's frontend, by going through all major functionalities over various pages.

## Type of change

Please delete options that are not relevant.

- [ ] Bug fix (non-breaking change which fixes an issue).
- [x] New feature (non-breaking change which adds functionality).
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch `develop`
- [ ] I have read and understood the rules about [how to Contribute](https://intelowl.readthedocs.io/en/latest/Contribute.html) to this project
- [ ] A new plugin (analyzer, connector, visualizer, playbook or ingestor) was added or changed, in which case:
    - [ ] [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) file was updated.
    - [ ] [Advanced-Usage](./Advanced-Usage.md) was updated (in case the plugin provides additional optional configuration).
    - [ ] If the plugin requires mocked testing, `_monkeypatch()` was used in its class to apply the necessary decorators.
    - [ ] If a File analyzer was added and it supports a mimetype which is not already supported, you added a sample of that type inside the archive `test_files.zip` and you added the default tests for that mimetype in [test_classes.py](https://github.com/intelowlproject/IntelOwl/blob/master/tests/analyzers_manager/test_classes.py).
    - [ ] If you created a new analyzer and it is free (does not require API keys), please add it in the `FREE_TO_USE_ANALYZERS` playbook in `playbook_config.json`.
    - [ ] Check if it could make sense to add that analyzer/connector to other freely available playbooks.
    - [ ] I have provided the resulting raw JSON of a finished analysis and a screenshot of the results.
- [ ] If external libraries/packages with restrictive licenses were used, they were added in the [Legal Notice](https://github.com/certego/IntelOwl/blob/master/.github/legal_notice.md) section.
- [x] Linters (`Black`, `Flake`, `Isort`) gave 0 errors. If you have correctly installed [pre-commit](https://intelowl.readthedocs.io/en/latest/Contribute.html#how-to-start-setup-project-and-development-instance), it does these checks and adjustments on your behalf.
- [ ] I have added tests for the feature/bug I solved (see `tests` folder). All the tests (new and old ones) gave 0 errors.
- [ ] If changes were made to an existing model/serializer/view, the docs were updated and regenerated (check [CONTRIBUTE.md](./Contribute.md)).
- [x] If the GUI has been modified:
    - [x] I have a provided a screenshot of the result in the PR.
    - [ ] I have created new frontend tests for the new component or updated existing ones.

### Important Rules
- If you miss to compile the Checklist properly, your PR won't be reviewed by the maintainers.
- If your changes decrease the overall tests coverage (you will know after the Codecov CI job is done), you should add the required tests to fix the problem
- Everytime you make changes to the PR and you think the work is done, you should explicitly ask for a review. After being reviewed and received a ""change request"", you should explicitly ask for a review again once you have made the requested changes.",True,1852,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/1852,https://github.com/intelowlproject/IntelOwl/pull/1852,closed,673,31,11,11,2,11,0,0,[],2023-08-23 23:26:17+00:00,2023-08-28 12:54:26+00:00,394089.0,"4 days, 13:28:09","[{'comment_id': 1305309903, 'comment_body': 'change these names in: `guideState` and `setGuideState`. I know it seems a silly request but ""state"" is a very generic term in react (basically every useState hook return a state) and with this names you have to use a generic var name in other part of codes (like dashboard) or  rename them `const { setState: setGuideState, state } = useGuideContext();`. If you use a specific name here you can simply import them with `{stateGuide, setStateGuide} = ...`', 'comment_created': datetime.datetime(2023, 8, 25, 7, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'drosetti', 'type': 'User'}, {'comment_id': 1305313417, 'comment_body': 'rename var to setGuideState and guideState (following the renaming in the GuideContect file). Also change the order: the state before the setState.', 'comment_created': datetime.datetime(2023, 8, 25, 7, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'drosetti', 'type': 'User'}, {'comment_id': 1305313787, 'comment_body': 'rename state to guideState and order guideState before setGuideState', 'comment_created': datetime.datetime(2023, 8, 25, 7, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'drosetti', 'type': 'User'}, {'comment_id': 1305367849, 'comment_body': 'that makes perfect sense, now i refactored it to `guideState` and `setGuideState` now, and changed up the imports as well accordingly.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1305439880, 'comment_body': '```suggestion\r\n            Welcome to IntelOwls Guide for First Time Visitors!\r\n            For further\r\n            questions you could either check out our <a href=""https://intelowl.readthedocs.io/en/latest/"">docs</a> or reach us\r\n            out on <a href=""https://www.honeynet.org/gsoc/"">the official IntelOwl slack channel</a>\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305440979, 'comment_body': 'on a second thought, I think that the dashboard section could be the last one to be viewed. This is because I think that first we have to explain how IntelOwl works', 'comment_created': datetime.datetime(2023, 8, 25, 9, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305443262, 'comment_body': '```suggestion\r\n<br>Plugins</br> are the core modular components of IntelOwl that can be easily added, changed and customized. \r\n</p><p>\r\nThe most important ones are the Analyzers that allow to perform data extraction on the observables and/or files that you would like to analyze.\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305452021, 'comment_body': '```suggestion\r\n          <p>Write up your own plugin configuration!</p>\r\n          <p>\r\n            Note: Some plugins work out-of-the-box, while others requires to be configured (with API keys for instance).\r\n          </p>\r\n```\r\nI think this info is too specific.', 'comment_created': datetime.datetime(2023, 8, 25, 9, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305452607, 'comment_body': '```suggestion\r\n            You could get started with analyzing various observables with just\r\n            three steps{"" ""}\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305454961, 'comment_body': '```suggestion\r\n        <div id=""guidebox"">\r\n          <p>Select a <br>Playbook</br>. Playbooks are designed to be easy to share sequence of running Analyzers/Connectors on a particular kind of observable.</p>\r\n        </div>\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305949386, 'comment_body': 'makes sense, changing sequence and pushing.', 'comment_created': datetime.datetime(2023, 8, 25, 17, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}]","[{'commit_sha': 'd5d1e6098189cdb1949aa42d1fa2413442d20c2b', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ada29d2e819a41223f010f7ee53b82e8f505d62a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f1516df8ad9d238fa7d6caf828a056900e32f87', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aca9ad250608c22244d18df5c93d98cf21ff2b7', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e0e8ba2d22d907bd3998e814dd8b9a19b43db6', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b39969bd29998de439960af8b98ccba849772c9', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c81f003b50c6c71f6dcdc746848d180bce3eab7', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '586d45bc36f96614f18139697f58444eed4516c4', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '310bdc4303d08a51fe286e78dc392afb8b885290', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c65bea3c8eb80060ddfdc98ce44994eb0fb8c78a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d405e162d4353eef38f3669ee63ad69bcff7c6a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83
1487150644,Add First Visit Guide (closes #1589),"closes #1589 

# Description
A tutorial guide to make first time visitors familiar to intelowl's frontend, by going through all major functionalities over various pages.

## Type of change

Please delete options that are not relevant.

- [ ] Bug fix (non-breaking change which fixes an issue).
- [x] New feature (non-breaking change which adds functionality).
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected).

# Checklist

- [x] The pull request is for the branch `develop`
- [ ] I have read and understood the rules about [how to Contribute](https://intelowl.readthedocs.io/en/latest/Contribute.html) to this project
- [ ] A new plugin (analyzer, connector, visualizer, playbook or ingestor) was added or changed, in which case:
    - [ ] [Usage](https://github.com/intelowlproject/IntelOwl/blob/master/docs/source/Usage.md) file was updated.
    - [ ] [Advanced-Usage](./Advanced-Usage.md) was updated (in case the plugin provides additional optional configuration).
    - [ ] If the plugin requires mocked testing, `_monkeypatch()` was used in its class to apply the necessary decorators.
    - [ ] If a File analyzer was added and it supports a mimetype which is not already supported, you added a sample of that type inside the archive `test_files.zip` and you added the default tests for that mimetype in [test_classes.py](https://github.com/intelowlproject/IntelOwl/blob/master/tests/analyzers_manager/test_classes.py).
    - [ ] If you created a new analyzer and it is free (does not require API keys), please add it in the `FREE_TO_USE_ANALYZERS` playbook in `playbook_config.json`.
    - [ ] Check if it could make sense to add that analyzer/connector to other freely available playbooks.
    - [ ] I have provided the resulting raw JSON of a finished analysis and a screenshot of the results.
- [ ] If external libraries/packages with restrictive licenses were used, they were added in the [Legal Notice](https://github.com/certego/IntelOwl/blob/master/.github/legal_notice.md) section.
- [x] Linters (`Black`, `Flake`, `Isort`) gave 0 errors. If you have correctly installed [pre-commit](https://intelowl.readthedocs.io/en/latest/Contribute.html#how-to-start-setup-project-and-development-instance), it does these checks and adjustments on your behalf.
- [ ] I have added tests for the feature/bug I solved (see `tests` folder). All the tests (new and old ones) gave 0 errors.
- [ ] If changes were made to an existing model/serializer/view, the docs were updated and regenerated (check [CONTRIBUTE.md](./Contribute.md)).
- [x] If the GUI has been modified:
    - [x] I have a provided a screenshot of the result in the PR.
    - [ ] I have created new frontend tests for the new component or updated existing ones.

### Important Rules
- If you miss to compile the Checklist properly, your PR won't be reviewed by the maintainers.
- If your changes decrease the overall tests coverage (you will know after the Codecov CI job is done), you should add the required tests to fix the problem
- Everytime you make changes to the PR and you think the work is done, you should explicitly ask for a review. After being reviewed and received a ""change request"", you should explicitly ask for a review again once you have made the requested changes.",True,1852,https://api.github.com/repos/intelowlproject/IntelOwl/pulls/1852,https://github.com/intelowlproject/IntelOwl/pull/1852,closed,673,31,11,11,2,11,0,0,[],2023-08-23 23:26:17+00:00,2023-08-28 12:54:26+00:00,394089.0,"4 days, 13:28:09","[{'comment_id': 1305309903, 'comment_body': 'change these names in: `guideState` and `setGuideState`. I know it seems a silly request but ""state"" is a very generic term in react (basically every useState hook return a state) and with this names you have to use a generic var name in other part of codes (like dashboard) or  rename them `const { setState: setGuideState, state } = useGuideContext();`. If you use a specific name here you can simply import them with `{stateGuide, setStateGuide} = ...`', 'comment_created': datetime.datetime(2023, 8, 25, 7, 45, 34, tzinfo=datetime.timezone.utc), 'commenter': 'drosetti', 'type': 'User'}, {'comment_id': 1305313417, 'comment_body': 'rename var to setGuideState and guideState (following the renaming in the GuideContect file). Also change the order: the state before the setState.', 'comment_created': datetime.datetime(2023, 8, 25, 7, 47, 56, tzinfo=datetime.timezone.utc), 'commenter': 'drosetti', 'type': 'User'}, {'comment_id': 1305313787, 'comment_body': 'rename state to guideState and order guideState before setGuideState', 'comment_created': datetime.datetime(2023, 8, 25, 7, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'drosetti', 'type': 'User'}, {'comment_id': 1305367849, 'comment_body': 'that makes perfect sense, now i refactored it to `guideState` and `setGuideState` now, and changed up the imports as well accordingly.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}, {'comment_id': 1305439880, 'comment_body': '```suggestion\r\n            Welcome to IntelOwls Guide for First Time Visitors!\r\n            For further\r\n            questions you could either check out our <a href=""https://intelowl.readthedocs.io/en/latest/"">docs</a> or reach us\r\n            out on <a href=""https://www.honeynet.org/gsoc/"">the official IntelOwl slack channel</a>\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305440979, 'comment_body': 'on a second thought, I think that the dashboard section could be the last one to be viewed. This is because I think that first we have to explain how IntelOwl works', 'comment_created': datetime.datetime(2023, 8, 25, 9, 43, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305443262, 'comment_body': '```suggestion\r\n<br>Plugins</br> are the core modular components of IntelOwl that can be easily added, changed and customized. \r\n</p><p>\r\nThe most important ones are the Analyzers that allow to perform data extraction on the observables and/or files that you would like to analyze.\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305452021, 'comment_body': '```suggestion\r\n          <p>Write up your own plugin configuration!</p>\r\n          <p>\r\n            Note: Some plugins work out-of-the-box, while others requires to be configured (with API keys for instance).\r\n          </p>\r\n```\r\nI think this info is too specific.', 'comment_created': datetime.datetime(2023, 8, 25, 9, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305452607, 'comment_body': '```suggestion\r\n            You could get started with analyzing various observables with just\r\n            three steps{"" ""}\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 52, 30, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305454961, 'comment_body': '```suggestion\r\n        <div id=""guidebox"">\r\n          <p>Select a <br>Playbook</br>. Playbooks are designed to be easy to share sequence of running Analyzers/Connectors on a particular kind of observable.</p>\r\n        </div>\r\n```', 'comment_created': datetime.datetime(2023, 8, 25, 9, 54, 50, tzinfo=datetime.timezone.utc), 'commenter': 'mlodic', 'type': 'User'}, {'comment_id': 1305949386, 'comment_body': 'makes sense, changing sequence and pushing.', 'comment_created': datetime.datetime(2023, 8, 25, 17, 30, 29, tzinfo=datetime.timezone.utc), 'commenter': 'abheektripathy', 'type': 'User'}]","[{'commit_sha': 'd5d1e6098189cdb1949aa42d1fa2413442d20c2b', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ada29d2e819a41223f010f7ee53b82e8f505d62a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f1516df8ad9d238fa7d6caf828a056900e32f87', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7aca9ad250608c22244d18df5c93d98cf21ff2b7', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46e0e8ba2d22d907bd3998e814dd8b9a19b43db6', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b39969bd29998de439960af8b98ccba849772c9', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c81f003b50c6c71f6dcdc746848d180bce3eab7', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '586d45bc36f96614f18139697f58444eed4516c4', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '310bdc4303d08a51fe286e78dc392afb8b885290', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c65bea3c8eb80060ddfdc98ce44994eb0fb8c78a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d405e162d4353eef38f3669ee63ad69bcff7c6a', 'committer_username': 'abheektripathy', 'committer_name': '0xAbhk', 'committer_email': None, 'commit_date': datetime.datetime(2021, 9, 18, 15, 29, 26, tzinfo=datetime.timezone.utc)}]",0xAbhk,90976669,,User,,48,,39,83

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
231109256,IntelOwl,intelowlproject/IntelOwl,Python,420,3652,81,60,2443,80,58,19,"[{'id': 1487150644, 'number': 1852, 'closed': datetime.datetime(2023, 8, 28, 12, 54, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 23, 26, 17, tzinfo=datetime.timezone.utc), 'time_taken': 394089.0, 'time_delta': '4 days, 13:28:09', 'additions': 673, 'deletions': 31, 'state': 'closed'}, {'id': 1332784129, 'number': 1672, 'closed': datetime.datetime(2023, 5, 8, 17, 35, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 29, 14, 52, 43, tzinfo=datetime.timezone.utc), 'time_taken': 787366.0, 'time_delta': '9 days, 2:42:46', 'additions': 80, 'deletions': 0, 'state': 'closed'}, {'id': 1257518525, 'number': 1578, 'closed': datetime.datetime(2023, 3, 21, 9, 57, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 17, 36, 49, tzinfo=datetime.timezone.utc), 'time_taken': 1786860.0, 'time_delta': '20 days, 16:21:00', 'additions': 19, 'deletions': 1, 'state': 'closed'}, {'id': 1191432267, 'number': 1407, 'closed': datetime.datetime(2023, 2, 3, 10, 47, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 20, 53, 27, tzinfo=datetime.timezone.utc), 'time_taken': 2123657.0, 'time_delta': '24 days, 13:54:17', 'additions': 67, 'deletions': 8, 'state': 'closed'}, {'id': 1175593723, 'number': 1362, 'closed': datetime.datetime(2022, 12, 27, 9, 42, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 22, 19, 7, 50, tzinfo=datetime.timezone.utc), 'time_taken': 398082.0, 'time_delta': '4 days, 14:34:42', 'additions': 13, 'deletions': 2, 'state': 'closed'}]"
605497977,BuffaLogs,certego/BuffaLogs,Python,6,19,3,5,141,14,6,3,"[{'id': 1427476109, 'number': 44, 'closed': datetime.datetime(2023, 8, 17, 8, 52, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 12, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 3268578.0, 'time_delta': '37 days, 19:56:18', 'additions': 2741, 'deletions': 498, 'state': 'closed'}, {'id': 1400385398, 'number': 43, 'closed': datetime.datetime(2023, 6, 26, 6, 17, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 19, 13, 22, tzinfo=datetime.timezone.utc), 'time_taken': 471841.0, 'time_delta': '5 days, 11:04:01', 'additions': 11024, 'deletions': 5, 'state': 'closed'}]"
