pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
711652364,[WIP] Sanft,"Added a benchmarking script for spatial SSAs using the model from Sanft, 2015.",False,298,https://api.github.com/repos/SciML/SciMLBenchmarks.jl/pulls/298,https://github.com/SciML/SciMLBenchmarks.jl/pull/298,closed,413,191,3,15,5,0,0,0,[],2021-08-12 21:43:12+00:00,2022-01-25 21:44:41+00:00,14342489.0,"166 days, 0:01:29",[],"[{'commit_sha': '23e974b90426230e52b0b839a1baf522c4b665b2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d261283942cb90b3d9cc74d90fd001144a6da93', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9308cecb70259dd3ec919f0aa13da9a085d2bd48', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ea9509fd64b2aa000003a81a96c13ce5784686c', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '452e03ec8e9c823266f009d4c22e0c387c5e5413', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '691ab74c6d9168623e5dece5a14dc6524bfced81', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a10d1893dce8ce9f602e85e49d95c52768703e0e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9207a0c75eda2bd1ed6f60929bbb9be28b7fce05', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038151fbd7f0e1f6d0e872742fac3bbcadb364d7', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e8262a47ba5c8fab3271e2fbf2dec51ce0131a0', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd883ee201b9d9fcc6996040838b388fb7a581a2a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd5fc383c6a4b32185e20e1faca08005f6ae6be', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6874a0e4a1ef0e26554d672aee4243070d7ba187', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd333ef51b684c9c2026b35f2f11c0bbaac4fb0f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd08b079fe6995a1cf97517e2041bfaf8d132f244', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
678233313,Next Subvolume Method on Graphs,An implementation of the Next Subvolume Method (NSM) -- the first spatial method in DiffEqJump. Also added two tests for spatial SSAs and a `utils.jl` file with some utility structs and functions for spatial SSAs.,True,183,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/183,https://github.com/SciML/JumpProcesses.jl/pull/183,closed,673,10,11,51,8,92,0,0,[],2021-06-25 23:41:30+00:00,2021-07-08 19:07:51+00:00,1106781.0,"12 days, 19:26:21","[{'comment_id': 661069091, 'comment_body': 'linear search over an iterator instead of an array. ', 'comment_created': datetime.datetime(2021, 6, 30, 1, 36, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 661069903, 'comment_body': 'this does not work correctly. Gives negative values', 'comment_created': datetime.datetime(2021, 6, 30, 1, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 662515217, 'comment_body': 'Can you check with Direct that this has no appreciable performance difference?', 'comment_created': datetime.datetime(2021, 7, 1, 18, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663528675, 'comment_body': 'return `nothing` or the rate? (Not sure if there is any context where knowing the old rate might be needed / useful.)', 'comment_created': datetime.datetime(2021, 7, 4, 16, 40, 32, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663530145, 'comment_body': '`numrxjumps` instead of `num_jumps`?', 'comment_created': datetime.datetime(2021, 7, 4, 16, 53, 17, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663530270, 'comment_body': '`size(starting_state,1)`?', 'comment_created': datetime.datetime(2021, 7, 4, 16, 54, 21, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663530397, 'comment_body': 'Why two `aggregate` functions? ', 'comment_created': datetime.datetime(2021, 7, 4, 16, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532178, 'comment_body': 'Maybe\r\n\r\n```julia\r\nstruct SpatialJump{J}\r\n    src::J    # source location\r\n    jidx::Int # index of jump as a diffusion hop or reaction\r\n    dst::J    # destination location\r\nend\r\n```', 'comment_created': datetime.datetime(2021, 7, 4, 17, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532231, 'comment_body': 'What advantage is there to actually declaring these (empty) functions vs. just leaving a comment that this is the API? I think it would perhaps be better to just comment them out here but make clear they are the API / public interface in documentation. (Happy to hear arguments against that though.)', 'comment_created': datetime.datetime(2021, 7, 4, 17, 11, 46, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532255, 'comment_body': 'Why a field for the dimension instead of a type parameter? (As in Array{T,N} having N give the dimension?)', 'comment_created': datetime.datetime(2021, 7, 4, 17, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532264, 'comment_body': ""Before we go too much further I'd suggest we add support for rectangular grids and make this a vector. Otherwise call this SquareCartesianGrid.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 7, 4, 17, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532290, 'comment_body': 'If this is called in hot loops, maybe it makes more sense to store the total number of sites in CartesianGrid and calculate it in a constructor?\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532299, 'comment_body': ""This won't always work right. Think about a 2D, 10x10 grid. You can get location 11 if you calculate the right neighbor of site 10, which is not a valid location. (Or maybe you don't use this in places where that can happen?)"", 'comment_created': datetime.datetime(2021, 7, 4, 17, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532324, 'comment_body': 'Drop the generators here and in num_neighbors as we discussed.\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532358, 'comment_body': 'This will just switch to using an array?\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 12, 54, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532368, 'comment_body': '#return total rate of site\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532430, 'comment_body': '`# return total reaction rate of the site`\r\n\r\nsimilar for diffusion below\r\n\r\nagain, do these need to be forward declared or can they just be commented out and made the API for new versions?', 'comment_created': datetime.datetime(2021, 7, 4, 17, 13, 30, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532459, 'comment_body': 'Make clear first index is site and second is species in comments.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 13, 52, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532591, 'comment_body': 'return total rate for any reaction at the site?', 'comment_created': datetime.datetime(2021, 7, 4, 17, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532673, 'comment_body': 'maybe call `total_site_rx_rate` or `total_site_rxrate`? Similar for the diffusion rate.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 15, 40, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532758, 'comment_body': 'total rate for any diffusive jump from the site\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532808, 'comment_body': 'return nothing or old rate?\r\n\r\n', 'comment_created': datetime.datetime(2021, 7, 4, 17, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532850, 'comment_body': 'Move these comments to a test (even if not included right now), or delete.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 17, 33, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663532920, 'comment_body': 'Also, why drop the inline?', 'comment_created': datetime.datetime(2021, 7, 4, 17, 18, 14, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663533473, 'comment_body': 'Remove these TODOs before we merge. Probably better to just have TODOs in the first PR post as a checklist.', 'comment_created': datetime.datetime(2021, 7, 4, 17, 23, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663548431, 'comment_body': 'You don’t need this comment', 'comment_created': datetime.datetime(2021, 7, 4, 19, 46, 22, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663548458, 'comment_body': 'Drop comment', 'comment_created': datetime.datetime(2021, 7, 4, 19, 46, 45, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663548546, 'comment_body': 'Use `size` to get the length', 'comment_created': datetime.datetime(2021, 7, 4, 19, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663548842, 'comment_body': 'Depending on benchmarking we could also just multiply by rand and round up.', 'comment_created': datetime.datetime(2021, 7, 4, 19, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663549398, 'comment_body': 'Use `size`', 'comment_created': datetime.datetime(2021, 7, 4, 19, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663549630, 'comment_body': 'These should be removed once you’re done debugging.', 'comment_created': datetime.datetime(2021, 7, 4, 19, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663550237, 'comment_body': 'Haven’t you already allocated this in the aggregation? Why not fill in the already allocated fields?', 'comment_created': datetime.datetime(2021, 7, 4, 20, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663551694, 'comment_body': 'Again, don’t allocate just use the existing allocate field. ', 'comment_created': datetime.datetime(2021, 7, 4, 20, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663552015, 'comment_body': 'Cleanup comments.', 'comment_created': datetime.datetime(2021, 7, 4, 20, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663552329, 'comment_body': 'Just call the function twice; don’t use a loop…', 'comment_created': datetime.datetime(2021, 7, 4, 20, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663552367, 'comment_body': 'This allocates a new vector…', 'comment_created': datetime.datetime(2021, 7, 4, 20, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663577903, 'comment_body': 'Use `size`', 'comment_created': datetime.datetime(2021, 7, 5, 0, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663577967, 'comment_body': 'Use `size`', 'comment_created': datetime.datetime(2021, 7, 5, 0, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 663578504, 'comment_body': 'Why not make a version that takes a scalar for `species` and avoid creating a vector? Or else, can it work with a tuple instead?', 'comment_created': datetime.datetime(2021, 7, 5, 0, 30, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 664855588, 'comment_body': 'Looks like there is no difference noticeable. I tested Direct on gene expression and found no difference in allocations or performance', 'comment_created': datetime.datetime(2021, 7, 6, 20, 26, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664857308, 'comment_body': 'Returning old_rate', 'comment_created': datetime.datetime(2021, 7, 6, 20, 28, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664857705, 'comment_body': 'Changed', 'comment_created': datetime.datetime(2021, 7, 6, 20, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664858147, 'comment_body': 'changed', 'comment_created': datetime.datetime(2021, 7, 6, 20, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664858936, 'comment_body': 'The first one takes in only the necessary information. The second one takes in extra inputs such as `p` and `t` in order to comply with the existing interface in `ssajump.jl`', 'comment_created': datetime.datetime(2021, 7, 6, 20, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664860532, 'comment_body': 'I thinks it makes sense to just merge these together into one with the existing interface. ', 'comment_created': datetime.datetime(2021, 7, 6, 20, 34, 39, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 664862522, 'comment_body': 'changed', 'comment_created': datetime.datetime(2021, 7, 6, 20, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664864261, 'comment_body': 'One advantage is that (as far as I understand) the docstring will apply to all methods of this abstract function. Another is that perhaps some of them can be implemented from each other, such that `get_site_rate` for `AbstractSpatialRates`. In OOP languages this is standard practice. I am happy to change it if you say so.', 'comment_created': datetime.datetime(2021, 7, 6, 20, 41, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664953079, 'comment_body': 'okay.', 'comment_created': datetime.datetime(2021, 7, 7, 0, 14, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664954924, 'comment_body': ""I would guess that's how it's implemented internally?"", 'comment_created': datetime.datetime(2021, 7, 7, 0, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664975978, 'comment_body': 'good idea. Making a version that takes a scalar', 'comment_created': datetime.datetime(2021, 7, 7, 1, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976037, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976072, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976134, 'comment_body': 'got it, thanks', 'comment_created': datetime.datetime(2021, 7, 7, 1, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976234, 'comment_body': 'got it', 'comment_created': datetime.datetime(2021, 7, 7, 1, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976504, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976691, 'comment_body': 'yes, this was because it needed to reset after a simulation. I added a `reset!` function to take care of that without allocating', 'comment_created': datetime.datetime(2021, 7, 7, 1, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976729, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 33, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664976900, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 34, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664977190, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664977214, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664977224, 'comment_body': 'okay', 'comment_created': datetime.datetime(2021, 7, 7, 1, 35, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664986133, 'comment_body': 'Yes, you are right. I fixed it', 'comment_created': datetime.datetime(2021, 7, 7, 2, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 664994935, 'comment_body': 'Where should I put them for now? Or can they stay until the merge?', 'comment_created': datetime.datetime(2021, 7, 7, 2, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 665606404, 'comment_body': '`issite`', 'comment_created': datetime.datetime(2021, 7, 7, 18, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665608244, 'comment_body': 'They can stay till we merge, but we should drop at that point. Better to track them long-term in a spatial TODO issue.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 21, 31, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665611975, 'comment_body': 'Why a Tuple instead of a CartesianIndex?', 'comment_created': datetime.datetime(2021, 7, 7, 18, 27, 26, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665612614, 'comment_body': 'Iterators would be better, but even a Tuple of CartesianIndices would be an improvement.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665613436, 'comment_body': 'Alternatively here you could use a Tuple, but probably better to unroll the loop with only two sites as you did.', 'comment_created': datetime.datetime(2021, 7, 7, 18, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665614046, 'comment_body': ""No, if you did down it is specialized for linear ranges (so is perhaps better/faster). \r\n\r\nWe can look at this later if it is rate limiting in benchmarking. I'd leave as is for now."", 'comment_created': datetime.datetime(2021, 7, 7, 18, 30, 38, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665627518, 'comment_body': ""I can change it but I don't see why `issite` is better. It's less readable and seems to not follow the current style in the package, e.g. `update_state` instead of `updatestate`"", 'comment_created': datetime.datetime(2021, 7, 7, 18, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 665628182, 'comment_body': 'Because I have not heard of `CartesianIndex` :). Why is it better than `Tuple`?', 'comment_created': datetime.datetime(2021, 7, 7, 18, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 665630177, 'comment_body': 'It is the native way to index matrices and such with 2 or more dimensions. Like a tuple but designed for indexing. Maybe checkout the docs on it. ', 'comment_created': datetime.datetime(2021, 7, 7, 18, 55, 43, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665632457, 'comment_body': 'https://docs.julialang.org/en/v1/manual/style-guide/#Use-naming-conventions-consistent-with-Julia-base/\r\n\r\nWe aren’t great about this, and some names in DiffEqJump predate it. ', 'comment_created': datetime.datetime(2021, 7, 7, 18, 59, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665634088, 'comment_body': 'There are also probably already routines for converting to linear indices and vice versa in Base. ', 'comment_created': datetime.datetime(2021, 7, 7, 19, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 665784635, 'comment_body': 'okay, changed', 'comment_created': datetime.datetime(2021, 7, 8, 0, 16, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 665784731, 'comment_body': 'Will look into this after this PR is merged as agreed today', 'comment_created': datetime.datetime(2021, 7, 8, 0, 16, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 665784810, 'comment_body': 'Will do after the PR is merged as agreed today', 'comment_created': datetime.datetime(2021, 7, 8, 0, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 666239843, 'comment_body': '@Vilin97 did you want to update this one?', 'comment_created': datetime.datetime(2021, 7, 8, 14, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666251723, 'comment_body': 'I wonder if we should just store a `numspecies` field in `p` and calculate this in the constructor? This might make a bunch of the code cleaner.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 33, 52, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666254069, 'comment_body': 'Put this in DiffEqJump.jl', 'comment_created': datetime.datetime(2021, 7, 8, 14, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666256878, 'comment_body': 'If you are `using LightGraphs` why do you need to define this? Calling `neighbors(graph,site)` should call `LightGraphs.neighbors(graph,site)` already.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 39, 34, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666261846, 'comment_body': 'comment out', 'comment_created': datetime.datetime(2021, 7, 8, 14, 44, 51, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666263180, 'comment_body': 'comment out', 'comment_created': datetime.datetime(2021, 7, 8, 14, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666266981, 'comment_body': 'We can leave this one for future cleanup.', 'comment_created': datetime.datetime(2021, 7, 8, 14, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666277215, 'comment_body': 'missing', 'comment_created': datetime.datetime(2021, 7, 8, 15, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 666278497, 'comment_body': 'Why is the location parameterized?', 'comment_created': datetime.datetime(2021, 7, 8, 15, 2, 58, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 666281116, 'comment_body': '@Vilin97 The original paper is: Elf, Johan and Ehrenberg, M, Spontaneous separation of bi-stable biochemical systems into spatial domains of opposite phases,Systems Biology, 2004 vol. 1(2) pp. 230-236', 'comment_created': datetime.datetime(2021, 7, 8, 15, 5, 57, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666398986, 'comment_body': ""For some reason I get an error if I don't do it. Not sure why."", 'comment_created': datetime.datetime(2021, 7, 8, 17, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 666400178, 'comment_body': 'Thank you. Added', 'comment_created': datetime.datetime(2021, 7, 8, 17, 46, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 666415399, 'comment_body': ""Are you trying to set\r\n```julia\r\n neighbors(graph::AbstractGraph, site) = neighbors(graph, site) \r\n```\r\nYou don't need to do that...\r\n\r\nIf not, where / what error are you getting if you just remove this definition?"", 'comment_created': datetime.datetime(2021, 7, 8, 18, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 666459561, 'comment_body': 'In case we ever want to use something like `CartesianIndex` for site locations instead of integers', 'comment_created': datetime.datetime(2021, 7, 8, 19, 22, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 666462143, 'comment_body': 'Oops, did not see this before merging. Will update in the next PR', 'comment_created': datetime.datetime(2021, 7, 8, 19, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}]","[{'commit_sha': '4b47c859bb625f7411a21c0070c8e16824041d48', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '182b38b2d03fd2b42c5315d059a540128ba67fb2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93f99e69e8fed9fd7de8272358e7ab9cf13d3ab8', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53b1890368d287fff87679789fb7e48dec1a20ca', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '811b4c4bafd2c3f2d26b785edf26415b37583211', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c4b1e90958cbcb1acc5dac68c465590cabf4cfd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c39eec365cc37c1741acb42c49b0a16a8a32a35f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '529acf57a54644169d770947fe9e4f76c6b75dc4', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd061f3d7ac7071869bed3393173e40de500c5602', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acdf78263d4bf9c3eb69361f63e267568280a1dd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85a0509372518e6ab727846b0b0348cdb8aca259', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f81a07a04379dd0939a2738db3055b27fb032125', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97259819c68819e1caf0bd17f2cf383e28a7edca', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9debc2b741e85411ec1a860081adfebb4ec77b60', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78cac56220ab27b6a0ca56443576afb8b07a4d58', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3ab3de3142de9098adff2cea60694a97cac8a9a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd067a86d68bdd03c138f86ee1815628bda37b81b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '981794bcd770eaa60109f08ee0f4fbf68c9f04d0', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07c8222fe51520ec8c3a29a9ce74fcbfcd2038fb', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d86b67845acf6308f22c80d01e8163e03839ed9', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '997b3ae52f719b2921ef170521754204ac878028', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f3bb21e277132b3c43ec388db2ae49d66bdb2e0', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9296443047f8f1e7c9b72c53c1392119ba18311', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbeb540b32808894c79649d957f3dd4a92068285', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3f1fc218ad32042918f7f59c9894f6899ffa3ff', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c736e244d0041bfaaca32a0725abc6c4a6cd017', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5432184661c80a242314de198ae196d88c3eb056', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a521386f28f3e5fa0ae514616607afc8172f6f84', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87a19d9eef87753aa6e7e28579b827624eee318d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '561fc4854dd7c6bb8aac205e175f6abcadc4f557', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e55804b34b7db4c6c592f1a894c3f982ff5cd814', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '473aa57c1f4b97aa7d873e795c1f480224e42b29', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425c922a0f0df25715c5177b62ffbbb34f29bef4', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91c47563097e6a9406042fe379801de64e7f9559', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30514502c0bff7ee60b6315a7f6aaae55263fb80', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf79cc5dae6f30440d9bd4fa7c06ec05148225c1', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '472fe9941e8a1692228288084ad9600528f9ed18', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cc720e9872611981c028aa58d145cd070bb2a6d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd2528fac4655dafc3e5f52b5d37dfcb7be02be', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b1f366f749eddcb50234badd314eb55d48bef08', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fda6d86e3bd87715f6fb6ce99858ef2d1f0da734', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab511c8b40d5daf862d9140407d80614caf57e1e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db2d5d2992bb8de97b920507157e625626fc73c2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9499a66136d995a290a2f241e94359b479813586', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47d5e9b5b941e8568742c174cd9e561047fae3d6', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e67201373336de3471d31e736a00b3e1150e921d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee4234ae635c2544586a0bb93a815b28b2145c5b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f49609b3fca91656165e88a13eb2d8be3313481', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07148b67fe1d15e26307cfd9a8c9470c12761472', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea0c10b7542628cf564674f97a4eb62b9840c1af', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1fa8ad98429640634a1c7aa38dcad686c5408c2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
687205287,Spatial TODOs,"Completing TODOs from https://github.com/SciML/DiffEqJump.jl/issues/189. So far, wrote a pure diffusion test on a 2D grid and added `numspecies` to the NSM aggregator.
EDIT: wrote, optimized and benchmarked several versions of `CartesianGrid`, and implemented support of hopping rates that vary from neighbor to neighbor. Other forms of hopping rates, such as D_s * L_{i,j}, can now easily be added without modifying the code in `nsm.jl`. This completes all but three last TODOs.",True,192,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/192,https://github.com/SciML/JumpProcesses.jl/pull/192,closed,637,352,11,42,1,93,0,0,[],2021-07-10 16:14:24+00:00,2021-07-31 00:20:32+00:00,1757168.0,"20 days, 8:06:08","[{'comment_id': 676787389, 'comment_body': 'What is all this stuff? Looks like test code.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676789585, 'comment_body': 'Move the spatial tests back to the end.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676789907, 'comment_body': 'Is this function specific to NSM?', 'comment_created': datetime.datetime(2021, 7, 26, 17, 7, 24, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676801636, 'comment_body': ""Let's leave this for a future PR."", 'comment_created': datetime.datetime(2021, 7, 26, 17, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676802716, 'comment_body': 'flatten from a `JumpSet` as input, but for now make sure that only the `MassActionJump` field is set? That seems more inline with what users are passing in.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676807974, 'comment_body': 'not a big deal here, but in general you could just say `.= u0` to broadcast the value of `u0` into that column, avoiding allocations.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676809838, 'comment_body': 'Again, you should generally use broadcast with such operations to avoid allocations. i.e.\r\n```julia\r\nend_state .+= @view sol.u[end]\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 17, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676820656, 'comment_body': 'I think it would be better of one could call JumpProblem with an algorithm like `DirectCR`, but if you pass the spatial keyword arguments it internally calls `flatten`. i.e. the flattening is all hidden from the user. ', 'comment_created': datetime.datetime(2021, 7, 26, 17, 52, 29, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676820991, 'comment_body': 'This would mean tweaking the main `JumpProblem` constructor.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 52, 58, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676821819, 'comment_body': ""I'm skipping reviewing this one. We can come back to it when we are doing serious benchmarks later."", 'comment_created': datetime.datetime(2021, 7, 26, 17, 54, 4, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676822743, 'comment_body': 'Make the type Float64 to avoid changing the type when returning at the end.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676823900, 'comment_body': 'To avoid more allocations (again not a big deal here, but always a good habit to be in):\r\n```julia\r\nlaplacian .*= hopping_rate \r\nlaplacian\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 17, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676827176, 'comment_body': 'Is it necessary to make the 2D coordinates linear? i.e. could you instead do\r\n```julia\r\nstarting_state = zeros(Int, length(u0), linear_size, linear_size)\r\n```', 'comment_created': datetime.datetime(2021, 7, 26, 18, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676846494, 'comment_body': 'Not concretely typed.', 'comment_created': datetime.datetime(2021, 7, 26, 18, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676847458, 'comment_body': 'What if the user specifies a Cartesian grid?', 'comment_created': datetime.datetime(2021, 7, 26, 18, 32, 22, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676848447, 'comment_body': 'Not concretely typed.', 'comment_created': datetime.datetime(2021, 7, 26, 18, 33, 56, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676848685, 'comment_body': ""Can't you avoid this if you append! instead of push!?"", 'comment_created': datetime.datetime(2021, 7, 26, 18, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676894751, 'comment_body': 'I think splatting and `vcat` can potentially have performance issues on large systems (i.e. many spatial sites). Just preallocate the array and fill it in block by block, or else perhaps use `append!`?', 'comment_created': datetime.datetime(2021, 7, 26, 19, 47, 3, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676895219, 'comment_body': ""What if the user didn't pass a graph (i.e. a Cartesian grid)?"", 'comment_created': datetime.datetime(2021, 7, 26, 19, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676895518, 'comment_body': ""So this doesn't work with other `hopping_constant` forms? (Like if the out rate is constant?)"", 'comment_created': datetime.datetime(2021, 7, 26, 19, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676896890, 'comment_body': 'or just use `vec(u0)`.', 'comment_created': datetime.datetime(2021, 7, 26, 19, 50, 39, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676897669, 'comment_body': 'I think it would be better for this function to be an intermediary within `JumpProblem`, and return the data that the current `JumpProblem` constructor needs at https://github.com/SciML/DiffEqJump.jl/blob/512a711fb53c1793fc46a9c55b2eaa4030c14c29/src/problem.jl#L96', 'comment_created': datetime.datetime(2021, 7, 26, 19, 51, 56, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 676966235, 'comment_body': 'Forgot to delete. Deleted now.', 'comment_created': datetime.datetime(2021, 7, 26, 21, 45, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 676968323, 'comment_body': 'It is not. Moving it and other helper functions common to all spatial SSAs to `utils.jl`.', 'comment_created': datetime.datetime(2021, 7, 26, 21, 49, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 676968637, 'comment_body': 'Leave variable rx rates for a future PR? Okay.', 'comment_created': datetime.datetime(2021, 7, 26, 21, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 676972452, 'comment_body': ""The reason I want to take `rates` as input is that in `MassActionJump` only scaled rates are stored. I could write a function called `unscalerate` -- inverse to `scalerate`. Then I would first unscale rates from massaction jumps and then flatten. If you think it would be better, I'll go ahead and do that."", 'comment_created': datetime.datetime(2021, 7, 26, 21, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677025156, 'comment_body': 'Got it. Done', 'comment_created': datetime.datetime(2021, 7, 27, 0, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677025545, 'comment_body': ""I'll remove it from the PR for now then"", 'comment_created': datetime.datetime(2021, 7, 27, 0, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677034484, 'comment_body': 'At the moment this would break things. It would be easy to support receiving input in this form. In order to support output in this form, there can be a `cartesianize`, which takes a solution with ""unrolled"" shape and reshapes it into Cartesian shape.', 'comment_created': datetime.datetime(2021, 7, 27, 0, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677052581, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 7, 27, 1, 34, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677052642, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 7, 27, 1, 34, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677052674, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 7, 27, 1, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677052852, 'comment_body': 'good point. Fixed', 'comment_created': datetime.datetime(2021, 7, 27, 1, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677060375, 'comment_body': 'I eliminated all but three `vcat`s. ', 'comment_created': datetime.datetime(2021, 7, 27, 1, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677061451, 'comment_body': 'I added support for other grids like `CartesianGrid`. The reason I did it this way at first is that the grid itself is not used in `solve`. It is only used in flattening. Therefore, I thought there would be no reason for the user to pass in something specialized like `CartesianGrid` if `LightGraphs.grid` is available.\r\n\r\nIf `hopping_constants` are of another form, when we flatten, each hop must still get its own rate. Thus, there is no performance to be gained from accepting other forms of `hopping_constants`. I can add it for user convenience though.', 'comment_created': datetime.datetime(2021, 7, 27, 1, 59, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677061800, 'comment_body': 'Agree. Fixed it.', 'comment_created': datetime.datetime(2021, 7, 27, 2, 0, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677062780, 'comment_body': 'Update: I did add support for variable reaction rates in flattening. It makes more sense, because each flattened reaction gets its own rates after flattening anyway. So may as well accept variable rates as input.', 'comment_created': datetime.datetime(2021, 7, 27, 2, 3, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677433913, 'comment_body': ""Why would you need to unscale the rate? The scalings there should still be applied in the spatial case. They are scalings due to the reaction order, not volumes or such. It isn't generally true that `p` maps directly to the rates in a `MassActionJump`, so you need to work with `scaled_rates` as the rate constants."", 'comment_created': datetime.datetime(2021, 7, 27, 13, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677438043, 'comment_body': 'Why do you need the converts?', 'comment_created': datetime.datetime(2021, 7, 27, 13, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677439186, 'comment_body': 'If you use the old `scaled_rates` then here you can pass `scale_rates=false` to avoid scaling them again. You should probably also pass `nocopy=true`, then `ma_jump` will take ownership of the passed in arrays and skip copying them.', 'comment_created': datetime.datetime(2021, 7, 27, 13, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677447155, 'comment_body': 'We can change this later, but ultimately the interface should take a `JumpSet` and return a new `JumpSet`, replacing `Jumps`. ', 'comment_created': datetime.datetime(2021, 7, 27, 13, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677452124, 'comment_body': ""You can also just say something like\r\n```julia\r\nhop_netstoch = Vector{eltype(netstoch)}(undef, num_nodes*num_species*6))\r\n```\r\nto preallocate the full vector with the right size but not set values in any entries (they'll just be garbage values)."", 'comment_created': datetime.datetime(2021, 7, 27, 13, 31, 23, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677646593, 'comment_body': 'Is there a more descriptive name for each version that could be used? (Even if longer, like CartesianGridRejection, or such.)', 'comment_created': datetime.datetime(2021, 7, 27, 17, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677668036, 'comment_body': 'I added a keyword arg `scale_rates`, which is false in case the passed in rates come from `MassActionJump`', 'comment_created': datetime.datetime(2021, 7, 27, 17, 44, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677671459, 'comment_body': 'You are right. I had these because I was getting an error when stoichiometry vectors of type `Any[]` were passed in. But now that I am taking them from `MassActionJump`, there is no error. I deleted these `convert`', 'comment_created': datetime.datetime(2021, 7, 27, 17, 49, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677672095, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 27, 17, 49, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677673074, 'comment_body': ""It's unclear to me what it means to flatten something that is not a massaction jump. We can just use `flatten` as an intermediate function in the final interface"", 'comment_created': datetime.datetime(2021, 7, 27, 17, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677674342, 'comment_body': ""I'm not doing that because this need not be a grid. The size of `hop_netstoch` is num_nodes*(sum of outdegrees of all nodes in graph). "", 'comment_created': datetime.datetime(2021, 7, 27, 17, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677702615, 'comment_body': ""So why not set it to that size? Couldn't you be reserving too much then currently?"", 'comment_created': datetime.datetime(2021, 7, 27, 18, 34, 21, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677703128, 'comment_body': ""I don't think you want to request too much memory, as I'm not sure it will ever shrink..."", 'comment_created': datetime.datetime(2021, 7, 27, 18, 35, 7, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677705146, 'comment_body': ""don't need `DiffEqJump.` here."", 'comment_created': datetime.datetime(2021, 7, 27, 18, 38, 17, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677705859, 'comment_body': 'Why drop `total_site_rate`? Seems like a useful convenience function to have.', 'comment_created': datetime.datetime(2021, 7, 27, 18, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677709426, 'comment_body': ""Can't you just uses the `dims` kwargs to `sum`?"", 'comment_created': datetime.datetime(2021, 7, 27, 18, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677711756, 'comment_body': 'Better name if possible.', 'comment_created': datetime.datetime(2021, 7, 27, 18, 47, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677712849, 'comment_body': 'Why give a type for species?', 'comment_created': datetime.datetime(2021, 7, 27, 18, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677713451, 'comment_body': 'reaction i?', 'comment_created': datetime.datetime(2021, 7, 27, 18, 50, 13, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677717788, 'comment_body': '`foreach` probably makes more sense than `map`.', 'comment_created': datetime.datetime(2021, 7, 27, 18, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677717980, 'comment_body': '`foreach` again.', 'comment_created': datetime.datetime(2021, 7, 27, 18, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677718906, 'comment_body': '`@inbounds @. ...`', 'comment_created': datetime.datetime(2021, 7, 27, 18, 58, 9, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677719242, 'comment_body': '`@inbounds @.` to broadcast everything', 'comment_created': datetime.datetime(2021, 7, 27, 18, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677720707, 'comment_body': 'Ahh, this is not so great a memory layout since you are slicing across a row and this is a frequently called function. Could it be better to transpose so the layout in this case is site by species?', 'comment_created': datetime.datetime(2021, 7, 27, 19, 0, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677828064, 'comment_body': 'Changed to `sizehint!`ing the correct number', 'comment_created': datetime.datetime(2021, 7, 27, 21, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677829773, 'comment_body': 'Maybe it would make sense to only keep one of the three?', 'comment_created': datetime.datetime(2021, 7, 27, 21, 59, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677835560, 'comment_body': 'Changed to `HopRatesUnifNbr`', 'comment_created': datetime.datetime(2021, 7, 27, 22, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677835806, 'comment_body': 'Not needed. Fixed', 'comment_created': datetime.datetime(2021, 7, 27, 22, 12, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677836212, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2021, 7, 27, 22, 13, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677901642, 'comment_body': 'I deleted `CartesianGrid3` and renamed all other utility structs to descriptive names', 'comment_created': datetime.datetime(2021, 7, 28, 1, 12, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677901704, 'comment_body': 'brought it back', 'comment_created': datetime.datetime(2021, 7, 28, 1, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677902026, 'comment_body': 'I transposed both `hopping_constants` and `rates` internally (the input is still the same) for better memory access.', 'comment_created': datetime.datetime(2021, 7, 28, 1, 13, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 678493915, 'comment_body': 'Why type `Any`? We should never by working with stoichiometries that are type any.', 'comment_created': datetime.datetime(2021, 7, 28, 17, 4, 3, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 678495116, 'comment_body': ""What are you trying to do here? We don't want to change the type; everything should work fine with Float32s for example."", 'comment_created': datetime.datetime(2021, 7, 28, 17, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 678495412, 'comment_body': 'Why are all these converts needed?', 'comment_created': datetime.datetime(2021, 7, 28, 17, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 678496592, 'comment_body': 'If `total_rates` are coming from a user-supplied `MassActionJump`, I think we can assume that they were already scaled in creating it. So here `scale_rates=false` is probably what we want. Sorry for any confusion about this!', 'comment_created': datetime.datetime(2021, 7, 28, 17, 8, 7, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 679344677, 'comment_body': 'This happens if we do `MassActionJump([], [], [])`, which is done in `diffusion.jl`. ', 'comment_created': datetime.datetime(2021, 7, 29, 17, 20, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 679345843, 'comment_body': 'If the user passes in a `MassActionJump` with arrays of type `Any`, as in `MassActionJump([], [], [])`, this catches that. What would be a better way to do this?', 'comment_created': datetime.datetime(2021, 7, 29, 17, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 679348465, 'comment_body': 'The method on line 7 (https://github.com/SciML/DiffEqJump.jl/pull/192/files/a330c42c4a8909b909753c8bc32005369201de8f#diff-208a047f849b0efd9cf21d343ed068871f368976846397bc992f78ce89512f9bR7) is the one that takes in a `MassActionJump`. It then calls the main `flatten` method (https://github.com/SciML/DiffEqJump.jl/pull/192/files/a330c42c4a8909b909753c8bc32005369201de8f#diff-208a047f849b0efd9cf21d343ed068871f368976846397bc992f78ce89512f9bR54) with `scale_rates = false`.', 'comment_created': datetime.datetime(2021, 7, 29, 17, 26, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 680038172, 'comment_body': '`@view hopping_constants[:,site]`', 'comment_created': datetime.datetime(2021, 7, 30, 16, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680042197, 'comment_body': 'Why does the previous `flatten` also not do this?', 'comment_created': datetime.datetime(2021, 7, 30, 16, 9, 14, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680042569, 'comment_body': 'Why is there a `num_species*num_rxs` term and not just `num_rxs`?', 'comment_created': datetime.datetime(2021, 7, 30, 16, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680046745, 'comment_body': 'Can this be written a bit more efficiently as a `foreach` that `push!` a single `map` call instead of appending two map calls?', 'comment_created': datetime.datetime(2021, 7, 30, 16, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680047239, 'comment_body': ""Again, I'm just trying to keep memory use down since it can grow quickly in flattening."", 'comment_created': datetime.datetime(2021, 7, 30, 16, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680048365, 'comment_body': ""But doesn't the second `flatten` version above leave `rx_rates` a vector?"", 'comment_created': datetime.datetime(2021, 7, 30, 16, 16, 8, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680057733, 'comment_body': 'Should this be reset too?', 'comment_created': datetime.datetime(2021, 7, 30, 16, 23, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680058779, 'comment_body': 'return `nothing`', 'comment_created': datetime.datetime(2021, 7, 30, 16, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680064389, 'comment_body': 'This should be in DiffEqJump.jl not here.', 'comment_created': datetime.datetime(2021, 7, 30, 16, 28, 53, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680073497, 'comment_body': 'sum of the hopping rates?', 'comment_created': datetime.datetime(2021, 7, 30, 16, 36, 16, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680077381, 'comment_body': 'For future PR we should optimize this to just assume they are all in the right layout from the user (to minimize copying internally).', 'comment_created': datetime.datetime(2021, 7, 30, 16, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680084551, 'comment_body': ""Maybe a better way to optimize this is to store the partial sums of the hopping constants instead of the constants themselves, and then use those for sampling the next direction? Then we just multiply their already stored total sum, which is fixed, by the new amount of the species to update the `sum_rate`? Wouldn't that avoid all these vector operations?"", 'comment_created': datetime.datetime(2021, 7, 30, 16, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 680171273, 'comment_body': 'It was a typo. I now changed from `rx_rates::Vector` to `rx_rates::AbstractArray` in the previous `flatten`.', 'comment_created': datetime.datetime(2021, 7, 30, 19, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 680171583, 'comment_body': 'Right. It should be `num_nodes * num_rxs` instead. Fixed.', 'comment_created': datetime.datetime(2021, 7, 30, 19, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 680172526, 'comment_body': 'The second `flatten` is supposed to call the third `flatten` if `rx_rates` is a vector.', 'comment_created': datetime.datetime(2021, 7, 30, 19, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 680173445, 'comment_body': 'What do you mean? `pqdata` is not stored in the aggregation, so it cannot be reset.', 'comment_created': datetime.datetime(2021, 7, 30, 19, 26, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 680276220, 'comment_body': 'I think it is stored in the priority queue though, so you might be able to reuse it. We can save that for the next PR.', 'comment_created': datetime.datetime(2021, 7, 31, 0, 19, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}]","[{'commit_sha': '580805088d7d89a721c224b12873dd26379c56cc', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39a847cbff2833c19241a8ba59bb4d498e6afa23', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fcad9ece0da6108fca4f967b910414cc5434da42', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc3d24cad3d4b7cdf4cd0b63ba5f751c44695e41', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6caebf12e09363c5af267f053249a743054d0a55', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e52155899432e6556d22888c29edccf9b2a00a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71c67776a27e1ea9c84e87a18ed99c9681a94ecc', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a0f7e1497913179071493b21088b7b0dd4b9d8d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '205a6fc062514a653ead6999bf4b10f0b8367bb7', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3ce7d2c569658dfd8019e2307aaae88150e950c', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '111dbe737ef17186e40f51d0cf663a09993fe4ef', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '486bfa4b32a10553efb633f77db7722b2c50497d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60825d84a1072dd65ba9535d49b9f33f1e22da33', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd17f57bad174ff640806fdf18a584054baf64f90', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5b7247a916ffcc1d96a4fd5b6f510736be5120e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8e59f17de4deaf5618a666b56be497fb2fb2409', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80787350470cc0cd6875e095a743db5d29ef4058', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74bc1ed68c1b4e31bf72cd70cc47d862ae9ff9e0', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3037ee237b954032b02fd1c86d0f2a99e2d68480', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ab8363487e81d44066750bfd6cbb08b8f5ab975', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b09361ca6087ef6d9a612854337d1d278c003929', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30e4d89b09ade4098a92059b34214f4e4dc1967f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6620aa1eda533ac2c73a847c5c4e6d27bd926b47', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3194c6a45408227186274eff393e753711c6aea0', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95e49f984fb683734d9cdae1008afcc195b5c8c7', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9969d5d5cf569ebc1f3d1cb37951e6d00d7b7c8a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0154f32cccf87c43a175fd6d1845e72d47f0e5ec', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba938f94b53f6562f7cd1fd9e9c2851b9e5a51ca', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98b75850db1496e33078cec8e75db45a24f9df1f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a280e892d7450e4fc1da89888213116cc33a3ab', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e735987f3bd7fb60e93751c3d33ca2e9c167a46', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f94970139287ae38ef6b94fcfb60e337154c6db', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91bf17452f6698e79f8b85cbf7269e035e91b8bd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7e24ab29cb81d412652379090b4e7502871314f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79a50699e16766fc426d11d4e2d0eaf8294946d3', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41018aa79ab4d9f7e45b93a9a5562e53fa6b4585', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e672088fb2dce631626cb15b339d25637a21ccfd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1ca6e2832ef820f8dbd4571581bf61eb3feccf2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a330c42c4a8909b909753c8bc32005369201de8f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4510ff4dcb3d2f0f2c457e5d1155953c9d20ba1a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0684ae86fead385c14c940f980265574b8668509', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '85198991b5801a6ea29d23a67afb15b86b574d7a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
698056954,added `reset!` for `PriorityTable`,"Wrote a `reset!` function for the `PriorityTable` used in `DirectCR` and `RSSACR`. This slightly reduces allocations per run, since a new table does not get allocated every time. Here is a benchmark for before and after. There is a small improvement
![image](https://user-images.githubusercontent.com/17322558/127247811-d8523ee1-337f-428f-928c-1a0d74fdd06a.png)
",True,195,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/195,https://github.com/SciML/JumpProcesses.jl/pull/195,closed,22,17,3,3,1,7,0,0,[],2021-07-27 17:37:11+00:00,2021-07-28 17:12:54+00:00,84943.0,23:35:43,"[{'comment_id': 677694105, 'comment_body': 'Will this make the first bucket really big in memory (length num_jumps), and hold that memory forever? ', 'comment_created': datetime.datetime(2021, 7, 27, 18, 21, 38, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677694432, 'comment_body': ""(since you don't reset the memory used by the table in `reset!`?)"", 'comment_created': datetime.datetime(2021, 7, 27, 18, 22, 9, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677696068, 'comment_body': 'How does the initial table change here? Is it the same (i.e. the same set of buckets)?', 'comment_created': datetime.datetime(2021, 7, 27, 18, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 677697828, 'comment_body': 'Yes, the same set of buckets. If these buckets were created in the first run, chances are the same buckets will be needed for other runs. So the idea is to just empty all the buckets and fill them again instead of recreating the whole table\r\n', 'comment_created': datetime.datetime(2021, 7, 27, 18, 27, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 677700030, 'comment_body': ""Yes, it will. And that's bad. I'll change that."", 'comment_created': datetime.datetime(2021, 7, 27, 18, 30, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 678490457, 'comment_body': ""I went to merge, and noticed that it now appears we don't actually use the `p.maxrate` with the updates. Should we just remove that field from the aggregation? Otherwise this is good to go."", 'comment_created': datetime.datetime(2021, 7, 28, 16, 59, 13, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 678499716, 'comment_body': ""Actually, we can remove this later on. Maybe we want to tweak this down the line to support using that field. So I'll merge as is now."", 'comment_created': datetime.datetime(2021, 7, 28, 17, 12, 46, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}]","[{'commit_sha': 'c974d3cd2eb9caf62022792c0c5c1c9377de535b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ef14dcba39d17b88ad2f77bbe9884a25055f8dc', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '330073379a5ede2f6fd851bf18348ed046a1e1bb', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
700620313,[WIP] DirectCRonDirect,Implemented `DirectCRonDirect` -- a spatial SSA that chooses the site with the composition-rejection search and chooses the reaction or hop via linear search (Direct method).,True,197,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/197,https://github.com/SciML/JumpProcesses.jl/pull/197,closed,217,34,8,19,0,15,0,0,[],2021-07-31 00:04:22+00:00,2021-08-04 01:33:47+00:00,350965.0,"4 days, 1:29:25","[{'comment_id': 682049064, 'comment_body': 'Maybe call it SpatialDirectCR or DirectCRDirect?', 'comment_created': datetime.datetime(2021, 8, 3, 19, 40, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682052142, 'comment_body': 'Constant-complexity stochastic simulation algorithm with optimal binning, Kevin R. Sanft and Hans G. Othmer, Journal of Chemical Physics 143, 074108 (2015); doi: 10.1063/1.4928635\r\n\r\nTheir 3D spatial example might be a good one to check performance on. It shows relative performance of both NSM and DirectCRDirect as the mesh size in increased, so we can check we see similar scalings.', 'comment_created': datetime.datetime(2021, 8, 3, 19, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682054329, 'comment_body': ""Isn't this giving the same issue we just had of making the first bucket really big?"", 'comment_created': datetime.datetime(2021, 8, 3, 19, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682054533, 'comment_body': 'Does `fill_rates_and...` handle all needed resetting? For NSM too?', 'comment_created': datetime.datetime(2021, 8, 3, 19, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682057550, 'comment_body': 'Can we factor out this if-else sampling step since it is the same in NSM and DirectCRDirect? ', 'comment_created': datetime.datetime(2021, 8, 3, 19, 54, 1, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682060531, 'comment_body': ""Don't need `DiffEqJump`"", 'comment_created': datetime.datetime(2021, 8, 3, 19, 58, 43, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682060628, 'comment_body': ""Don't need DiffEqJump"", 'comment_created': datetime.datetime(2021, 8, 3, 19, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682111124, 'comment_body': 'Yes, I had forgotten to make these changes in the spatial DirectCR', 'comment_created': datetime.datetime(2021, 8, 3, 21, 21, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 682111637, 'comment_body': 'Yes. I can move it out to `initialize!` if you think it makes more sense.', 'comment_created': datetime.datetime(2021, 8, 3, 21, 22, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 682116723, 'comment_body': 'Yes, done. Good idea.', 'comment_created': datetime.datetime(2021, 8, 3, 21, 31, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 682123330, 'comment_body': 'For some reason my REPL sometimes complaints about it when there is no `DiffEqJump` at front', 'comment_created': datetime.datetime(2021, 8, 3, 21, 44, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 682173265, 'comment_body': 'Rename these local variables.', 'comment_created': datetime.datetime(2021, 8, 3, 23, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682173511, 'comment_body': 'No it’s fine, just checking. ', 'comment_created': datetime.datetime(2021, 8, 3, 23, 48, 33, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682174044, 'comment_body': 'Maybe call this something like `sample_jump_at_site_direct`?', 'comment_created': datetime.datetime(2021, 8, 3, 23, 50, 1, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682174373, 'comment_body': 'Actually the `direct` isn’t needed; other appraoches could use the same function and just dispatch (like RSSA).', 'comment_created': datetime.datetime(2021, 8, 3, 23, 50, 55, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}]","[{'commit_sha': '8f75027a29ffdeb43594ccfa13ecd32874887d35', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '391a698ec21e643c8256cdf4a2f32e0f51b0f22d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e5c68f31b61084171340a385103ce497032b300', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'def1b8c3a7ca7d7173d61574f72a96b2b7685b86', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b88d9f993dfaf1b4dde34259cc7bc9affecb0cfc', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02085f8e4eb4402a3d2d0602fd7bb897b75a765', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8bcd445c15711e4c89a07debb08621539903cedc', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aa7123cdbc473eaa2855c8a3eed259eb3ef48931', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '877db2cc7e7c9405f110ac42d3476bbe49cd6a14', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe2195148a9b991d154191d37925be4c574a3021', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0bb2ce9a8e753b731d8f5358d6f5d725d162505a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a72fb1dda394022920de4f55e9069d088783ae5', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '550a3a2937094ced06d68271b2977bd6f2dde05b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5b3daf1b1d488e03ea8bc407891f18ad8a69d8e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '516509bba2765f088b4d49e55c4399c93fa84756', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a423226ea718aa03f3ea9bc9dfd25a8704a1c7f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e62a0a08fe7bd3247c012d7ba5bc7ce972612b1', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36045dc664e604dfb0dc5572036c4ef03acb83a9', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d465f7408cda0fc88450159b98a69e5f24416df', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
701649497,Improved `HopRatesGeneral`,"Now `HopRatesGeneral` uses cumulative sums of hopping constants avoiding unnecessary summations and vector operations. Also improved the interface so that hopping constants are now passed in as Matrix{Vector}, with [s,i] being vector of hopping constants of species s at site i to its neighbors",True,198,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/198,https://github.com/SciML/JumpProcesses.jl/pull/198,closed,51,53,5,5,0,5,0,0,[],2021-08-02 17:24:04+00:00,2021-08-02 21:47:38+00:00,15814.0,4:23:34,"[{'comment_id': 681225503, 'comment_body': 'Why not\r\n```\r\nhop_constants[ci] = hopping_constants[species, site] * ones(num_neighbors(spatial_system, site))\r\n```', 'comment_created': datetime.datetime(2021, 8, 2, 19, 43, 16, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 681229934, 'comment_body': 'Why not use an `Array{F,3}` where the first index ranges over the cumulative sums of the neighbors, then species and then location? (Or perhaps location than species if that makes more sense.)', 'comment_created': datetime.datetime(2021, 8, 2, 19, 51, 29, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 681231535, 'comment_body': '`@inbounds`', 'comment_created': datetime.datetime(2021, 8, 2, 19, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 681280082, 'comment_body': 'Because the number of neighbors is different for different sites', 'comment_created': datetime.datetime(2021, 8, 2, 21, 23, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 681280855, 'comment_body': 'Yeah, I was thinking structured grids again…', 'comment_created': datetime.datetime(2021, 8, 2, 21, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}]","[{'commit_sha': 'ef5ce12484df5f75705c1e5745902408881f1e19', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a398f7d8a2a76efde7cac94752696fe3edb5a95', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0df2cf95a566cab482981ea5c9a5404464a8e17a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e16b2fd7a746e38b35da5acc0dced9bdf25264bc', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '794dd8d8b0d7ebbda5a5a939cddf6f32974c612c', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
702883963,made `tstops` type-stable in `SSAStepper`,,True,199,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/199,https://github.com/SciML/JumpProcesses.jl/pull/199,closed,1,2,1,3,0,2,0,0,[],2021-08-04 02:25:21+00:00,2021-08-04 03:13:05+00:00,2864.0,0:47:44,"[{'comment_id': 682241960, 'comment_body': 'This needs to stay a keyword argument, but you could set it to\r\n```julia\r\ntstops = eltype(jump_prob.prob.tspan)[]\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 2, 35, 20, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 682245051, 'comment_body': 'Needs a comma at the end', 'comment_created': datetime.datetime(2021, 8, 4, 2, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}]","[{'commit_sha': 'eec04368ef3cddc3ba435e7f49423dfb9ae1f4f6', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0208989a7386d785f7d2a997c4623636f85788ab', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe31409e65b7865b3dfc4ed9b429080b91212fa5', 'committer_username': 'isaacsas', 'committer_name': 'Sam Isaacson', 'committer_email': None, 'commit_date': datetime.datetime(2014, 10, 24, 18, 25, 34, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
704944455,Cosmetic improvements,"A purely cosmetic PR: added docstrings, `Base.show` functions, exporting more so `DiffEqJump.` does not have to be used in defining hopping constants.",True,201,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/201,https://github.com/SciML/JumpProcesses.jl/pull/201,closed,431,317,9,6,1,5,0,0,[],2021-08-05 18:52:28+00:00,2021-08-05 20:01:30+00:00,4142.0,1:09:02,"[{'comment_id': 683722162, 'comment_body': 'This is the wrong show dispatch. This probably should be for the text mimetype. 2-argument should is supposed to be round-trippable.', 'comment_created': datetime.datetime(2021, 8, 5, 19, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 683722246, 'comment_body': 'same here.', 'comment_created': datetime.datetime(2021, 8, 5, 19, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 683722315, 'comment_body': 'and here', 'comment_created': datetime.datetime(2021, 8, 5, 19, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 683722406, 'comment_body': 'and here.', 'comment_created': datetime.datetime(2021, 8, 5, 19, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ChrisRackauckas', 'type': 'User'}, {'comment_id': 683730370, 'comment_body': 'Thanks. Fixed', 'comment_created': datetime.datetime(2021, 8, 5, 19, 28, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}]","[{'commit_sha': '892f196f15c1eb597e2f607d24c90a9007c83732', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '639caf3f45c0e7aa544471886b28b64d337109ba', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ef6954af8d21a830f6db269d39f478eaf356c61', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0444acc116b288501958258f012e204993cb0cb1', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbb0b931747141524e8455e21ab95f7cadf54f9d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '00d185db45f64347ba5fca3a0b761f78d4ecb597', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
705111971,Now the general form of hopping rates with a cartesian grid is faster,wrote HopRatesGeneralGrid -- an optimized version of `HopRatesGeneral` for cartesian grids. It takes about twice less time to sample a neighbor now.,True,202,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/202,https://github.com/SciML/JumpProcesses.jl/pull/202,closed,154,43,7,5,1,13,0,0,[],2021-08-06 00:43:29+00:00,2021-08-09 18:33:53+00:00,323424.0,"3 days, 17:50:24","[{'comment_id': 685245662, 'comment_body': 'of length `num_neighbors...`?', 'comment_created': datetime.datetime(2021, 8, 9, 14, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685247415, 'comment_body': '`pad_hop_vec!` and have it take the vector to fill in as the first input?', 'comment_created': datetime.datetime(2021, 8, 9, 14, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685247975, 'comment_body': '`pad_hop_vec!(@view new_hopping_constant[:,species,site], grid, site,...)` ?', 'comment_created': datetime.datetime(2021, 8, 9, 14, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685248685, 'comment_body': 'Maybe just say returns the `nth` Cartesian grid neighbor ignoring boundaries?', 'comment_created': datetime.datetime(2021, 8, 9, 14, 33, 59, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685249054, 'comment_body': '@inbounds', 'comment_created': datetime.datetime(2021, 8, 9, 14, 34, 27, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685256478, 'comment_body': ""For allocation reasons perhaps we should require the `cumsum`'ed hopping constants to be passed in, or at least add a keyword argument that lets users pre-cumsum them to save memory. (This should hold for each type where possible.)"", 'comment_created': datetime.datetime(2021, 8, 9, 14, 43, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685259223, 'comment_body': 'Why do you need a sum here if you just set `rates` to be all zeros?', 'comment_created': datetime.datetime(2021, 8, 9, 14, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685259351, 'comment_body': 'Can we do the `cumsum` in place here before calling the one-argument version to save memory?', 'comment_created': datetime.datetime(2021, 8, 9, 14, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685259991, 'comment_body': 'In fact, since this is all internal why make a one-argument version? Just finish the code off inside this version...', 'comment_created': datetime.datetime(2021, 8, 9, 14, 47, 4, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685386565, 'comment_body': 'I put `cumsum!` in here to avoid the extra allocation. I think having two versions is convenient, e.g. for testing in `test_utils.jl`. We can also expose the main constructor to the user because it might be more convenient to pass in `Array{F, 3}` instead of `Matrix{Vector{F}}` for `hopping_constants`.', 'comment_created': datetime.datetime(2021, 8, 9, 17, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 685388194, 'comment_body': 'This is in a constructor, which will only be called once at aggregation step. Do we really need `@inbounds` for things that are called once?', 'comment_created': datetime.datetime(2021, 8, 9, 17, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 685388940, 'comment_body': 'Done. Using kwarg `do_cumsum = true` now.', 'comment_created': datetime.datetime(2021, 8, 9, 17, 32, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 685390457, 'comment_body': ""I don't. Changed."", 'comment_created': datetime.datetime(2021, 8, 9, 17, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}]","[{'commit_sha': '600fa423e67577b22e8dfc00d324dc01caefad94', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62778ba0a68d49ff9d1d2e1a2e50f3139336f195', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33597fcc4253bb48644873ff517df1f8dfa5750b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62fde0acb77b8f05cd347730852fd614a2e975fb', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73318b5534795d67bda49af8365e94fc47345450', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
705760449,"Two more forms of hopping rates: D_s * L_{i,j} and D_{s,i} * L_{i,j}","Also reworked little bits of `nsm.jl` and `DirectCRDirect` for compatibility, and factored out more common functions from `HopRates`",True,203,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/203,https://github.com/SciML/JumpProcesses.jl/pull/203,closed,400,177,8,18,0,21,0,0,[],2021-08-06 21:39:49+00:00,2021-08-09 22:09:58+00:00,261009.0,"3 days, 0:30:09","[{'comment_id': 685262641, 'comment_body': 'Whichever of these two PRs gets merged second will need to update from master since you have this change in both of them.', 'comment_created': datetime.datetime(2021, 8, 9, 14, 49, 57, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685266663, 'comment_body': 'Why `rand(algs)` instead of both spatial SSAs? \r\n\r\nAlso, once local testing has convinced us everything is working, the spatial tests should `using StableRngs` with a fixed seed:\r\n```julia\r\nusing StableRNGs\r\nrng = StableRNG(12345)\r\nrand(rng,...)\r\nJumpProblem(...; rng=rng,...)\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 14, 54, 11, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685270610, 'comment_body': 'Maybe better to have this conform to the `rand` interface?\r\n```julia\r\nrand_nbr(rng,graph::AbstractGraph,site) = ...\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 14, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685271622, 'comment_body': 'See comments in other PR about making this work in-place. Only update in one PR and after merging update to master.', 'comment_created': datetime.datetime(2021, 8, 9, 14, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685271905, 'comment_body': '`@inbounds`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685274296, 'comment_body': '`update_hop_rate!` or `update_hop_rates!`?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 2, 45, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685275619, 'comment_body': 'Is this just you reordering stuff in the file? If so, please leave such changes to separate, cosmetic PRs. It gets confusing if it looks like you are deleting and adding stuff that is actually not changing.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685397906, 'comment_body': ""`rand(algs)` so that tests don't take twice longer than they do. If that's bad, I can change it to use both.\r\nWhat is the benefit of `StableRngs` with a fixed seed? To avoid the very small probability that tests don't get passed because of a 1 in a million fluke?"", 'comment_created': datetime.datetime(2021, 8, 9, 17, 46, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 685400148, 'comment_body': 'Both exist. `update_hop_rates!` just calls `update_hop_rate!` several times.', 'comment_created': datetime.datetime(2021, 8, 9, 17, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 685400499, 'comment_body': 'Got it. I put it back now.', 'comment_created': datetime.datetime(2021, 8, 9, 17, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}, {'comment_id': 685470916, 'comment_body': ""Yes, let's test all the algorithms for now. If it starts taking too long we can change it to just use a specific fixed one of them for most tests (I wouldn't want to use a random algorithm in any case).\r\n\r\nThe benefit of using a fixed seed and StableRNG is it makes the test deterministic, so if it suddenly breaks we know it is definitely a code issue. For your tests it probably doesn't matter, but we've definitely had issues with other tests occasionally breaking because of the rng hitting a degenerate case."", 'comment_created': datetime.datetime(2021, 8, 9, 19, 42, 14, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685493050, 'comment_body': 'This is a bit opaque. Can we use more descriptive names than `A` and `B`?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685494291, 'comment_body': '`sample_target_site` maybe?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 21, 12, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685496123, 'comment_body': 'so `hop_const_cumulative_sums[end, species, site]` is not a scalar value?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685497734, 'comment_body': 'Maybe a more systematic naming scheme is in order, like\r\n```julia\r\nHopRatesDsLij\r\nHopRatesLijs\r\nHopRatesDsiLij\r\n```', 'comment_created': datetime.datetime(2021, 8, 9, 20, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685511410, 'comment_body': 'Again, allow the possibility that it is already cumsum`ed?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 50, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685511705, 'comment_body': 'We should add the `cumsum` kwarg to any other HopRate* constructors that allocate to calculate the `cumsum`.', 'comment_created': datetime.datetime(2021, 8, 9, 20, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685514657, 'comment_body': 'HopRatesGridDsLij?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685516712, 'comment_body': 'HopRatesGeneralDsiLij?', 'comment_created': datetime.datetime(2021, 8, 9, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685519838, 'comment_body': 'HopRatesGeneralGridDsiLij', 'comment_created': datetime.datetime(2021, 8, 9, 21, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'isaacsas', 'type': 'User'}, {'comment_id': 685528593, 'comment_body': 'This is a typo. Fixed.', 'comment_created': datetime.datetime(2021, 8, 9, 21, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Vilin97', 'type': 'User'}]","[{'commit_sha': 'dea9d7b5911e94dd3247ccfcc283c9290fe39b27', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b97b8f8272bd72666a00d5f93a2e1e42e9f71cb', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ff4385f136a41753a222e60be7f01991852e869', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c75ad0f928c4b372f4a826f1c8bbc26de3ccc11b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d9d4e504628bc5572e465c3f8f1d414b8132e4', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '197e8fc82bfbeeff3527fbdd095034dc2bc86770', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22e5dcaa54cfc67e68ae032d3e9585d5f4511d54', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5616581ac62d279cd0c44718d99027fd51cbd51c', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c690c1cf6219ec31e0dd87c5a4d0d818513a2db2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5cfe27fca59b8176840e4c1a3efaf9e8468d7ac', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdbb402e6fb6b3b300245b322d1e8f83ea295780', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd920415a4461597c6eb994832a014d6faf8203d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b0917d8dcfd6ddb8da4d4769a9d0e8fe6c11073', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf734a97d25a8d418fadb32f184d3f4f5518d3c1', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e12395dade67d8b0f2cb3b7a9d7435cbfa4c132', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d2172be1014a30df27b6aaf64f026093b07165', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e38645797f12ac17c0aa20291d5bd921af0530fd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62f4c5611efc8528f7a4d6634d0e535e92c8917b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
712646676,Rename file,Rename `DirectCRDirect` to `directCRDirect`,True,204,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/204,https://github.com/SciML/JumpProcesses.jl/pull/204,closed,1,1,2,5,3,0,0,0,[],2021-08-13 21:56:54+00:00,2021-08-14 14:05:10+00:00,58096.0,16:08:16,[],"[{'commit_sha': 'a949a7b00dccae3dce3f07ebabdf96d66d90cfef', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0dd2cc3ac6f9c9e9ed4cc3b9ade920c9b28fdec1', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2a0a76894d57d3d79c5ee7e7947aafc63d8317a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '119c08b08ebeed4a5e7edb1e44cf4f35d647322b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '44e0b95024dca3733adf7d6501da08473df92b9e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
717092296,New priority table,"Rewrote the `PriorityTable` to be faster. The image shows the comparison of the old `PriorityTable` (PT) with the new one (PT2), as well as mutable binary heap (PQ). The benchmark is just update time for these three structs.

![image](https://user-images.githubusercontent.com/17322558/130311023-c67988af-a01e-469a-b07a-0f697ca41665.png)

Gist with benchmarking script: https://gist.github.com/Vilin97/60e3d5dae28e49142a60baac8aac638a. Or just run https://github.com/Vilin97/DiffEqJump.jl/blob/testing-new-PT/src/benchmarks/structs.jl",False,208,https://api.github.com/repos/SciML/JumpProcesses.jl/pulls/208,https://github.com/SciML/JumpProcesses.jl/pull/208,closed,175,274,8,28,4,0,0,0,[],2021-08-21 04:59:55+00:00,2022-07-21 05:31:30+00:00,28859495.0,"334 days, 0:31:35",[],"[{'commit_sha': '70f8163a54ef7ad64c4b910354ffd399adcafdfd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbdbfd29e264c52cb4aed32829bbb87e9812d02b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a57c5778067eb1d78a0bd596cb04e425cfa62b4', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fb6d9064dfc06fa17c0b9784d68295dd1b4a38d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed9e46338ee5f1da610ca4b5151aebeda8f83828', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8246506ea765c343bfc59a132f5cc2474df8c1f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0696466baa9e4ab952c6e5e859436503c8f93ab1', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b38663eb9755dbfb21f4e7ade48794592b9ce0ac', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3030a8bae8e9e5a09579bd2c48c5013eb59df8ce', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38036b9e0cf9c3b293fa794783d41b479c6c7131', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b31b3c7caf3961e4ba9461ec3d697d6a27ba7b3d', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '963b7828adbc4eb24312693872995c731ba7a287', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d54351292967162b65448c1bdb25faa2d05036b', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b7a5fdd274be7bb9a19941997fa604d5d40a89b6', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8253759ace5073da5d7161cd6b229379ec36bd8e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3a23b86039e06e25158a9a4697267b76b695f630', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46b98ba25bf08d5f0dc54954d87f357651303989', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6815837e9b256b81c85c12c03e1061b23a9238dd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a870184b69c79eb79ed171763bf279cb0f46e167', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2372dabf252b7f29fdf2ddac0a0413e6205ca4ae', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba177d3822124036dffcaf76e60d0e5d28c86796', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7bda9bd0ee63a5b9d8716e0b8dbc8101c4d71f5', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6c76cf6cbc424ac6c36a6ecd8825ea2f4d13bfa', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b714a67395caa171ec36b4ab65fd11f19e724749', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6214002e9ac815e528bf781b9fcea14fae33f3fd', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd76ca26f2c9d758fa45f74ccb4456b49804ffa2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '180c5e7264ba65b670cb8e62ca480ad339aa9e9f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0de34257178643920328b5f58c93e04af4e99e74', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
711761254,Tutorial for the spatial reversible binding jump model,`DiffEqJump` now has spatial solvers! See https://github.com/SciML/DiffEqJump.jl/issues/189 for what was done this summer and what is left to do. This tutorial explains how to use the newly added functionality.,False,430,https://api.github.com/repos/SciML/SciMLTutorials.jl/pulls/430,https://github.com/SciML/SciMLTutorials.jl/pull/430,closed,1471,0,4,2,2,0,0,0,[],2021-08-12 23:14:24+00:00,2021-08-14 13:07:19+00:00,136375.0,"1 day, 13:52:55",[],"[{'commit_sha': 'd15a28b42a374a32bb98dbb2df250ff4c039caee', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a04b809f64a63aafbd399a924cb3b0777b3f884e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16
711652364,[WIP] Sanft,"Added a benchmarking script for spatial SSAs using the model from Sanft, 2015.",False,298,https://api.github.com/repos/SciML/SciMLBenchmarks.jl/pulls/298,https://github.com/SciML/SciMLBenchmarks.jl/pull/298,closed,413,191,3,15,5,0,0,0,[],2021-08-12 21:43:12+00:00,2022-01-25 21:44:41+00:00,14342489.0,"166 days, 0:01:29",[],"[{'commit_sha': '23e974b90426230e52b0b839a1baf522c4b665b2', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d261283942cb90b3d9cc74d90fd001144a6da93', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9308cecb70259dd3ec919f0aa13da9a085d2bd48', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ea9509fd64b2aa000003a81a96c13ce5784686c', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '452e03ec8e9c823266f009d4c22e0c387c5e5413', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '691ab74c6d9168623e5dece5a14dc6524bfced81', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a10d1893dce8ce9f602e85e49d95c52768703e0e', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9207a0c75eda2bd1ed6f60929bbb9be28b7fce05', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '038151fbd7f0e1f6d0e872742fac3bbcadb364d7', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e8262a47ba5c8fab3271e2fbf2dec51ce0131a0', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd883ee201b9d9fcc6996040838b388fb7a581a2a', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cd5fc383c6a4b32185e20e1faca08005f6ae6be', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6874a0e4a1ef0e26554d672aee4243070d7ba187', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd333ef51b684c9c2026b35f2f11c0bbaac4fb0f', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd08b079fe6995a1cf97517e2041bfaf8d132f244', 'committer_username': 'Vilin97', 'committer_name': 'Vasily Ilin', 'committer_email': 'vasilin97@gmail.com', 'commit_date': datetime.datetime(2016, 2, 18, 19, 40, 31, tzinfo=datetime.timezone.utc)}]",Vasily Ilin,17322558,vasilin97@gmail.com,User,,49,,17,16

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
72398177,SciMLBenchmarks.jl,SciML/SciMLBenchmarks.jl,MATLAB,80,317,17,55,2918,87,54,52,"[{'id': 1527293010, 'number': 742, 'closed': None, 'created': datetime.datetime(2023, 9, 23, 5, 30, 56, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 16, 'deletions': 6, 'state': 'open'}, {'id': 1527277003, 'number': 741, 'closed': datetime.datetime(2023, 9, 23, 4, 19, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 23, 4, 12, 2, tzinfo=datetime.timezone.utc), 'time_taken': 422.0, 'time_delta': '0:07:02', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1516563351, 'number': 719, 'closed': datetime.datetime(2023, 9, 15, 2, 22, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 15, 0, 57, 25, tzinfo=datetime.timezone.utc), 'time_taken': 5103.0, 'time_delta': '1:25:03', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1511282311, 'number': 713, 'closed': datetime.datetime(2023, 9, 15, 0, 59, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 2, 43, 2, tzinfo=datetime.timezone.utc), 'time_taken': 253010.0, 'time_delta': '2 days, 22:16:50', 'additions': 5, 'deletions': 6, 'state': 'closed'}, {'id': 711652364, 'number': 298, 'closed': datetime.datetime(2022, 1, 25, 21, 44, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 21, 43, 12, tzinfo=datetime.timezone.utc), 'time_taken': 14342489.0, 'time_delta': '166 days, 0:01:29', 'additions': 413, 'deletions': 191, 'state': 'closed'}]"
80893293,JumpProcesses.jl,SciML/JumpProcesses.jl,Julia,35,138,12,37,1456,66,20,7,"[{'id': 1990760418, 'number': 432, 'closed': datetime.datetime(2024, 8, 5, 16, 16, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 28, 5, 16, 9, tzinfo=datetime.timezone.utc), 'time_taken': 730850.0, 'time_delta': '8 days, 11:00:50', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 1667669878, 'number': 392, 'closed': None, 'created': datetime.datetime(2024, 1, 7, 8, 9, 14, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 20, 'deletions': 76, 'state': 'open'}, {'id': 1527205621, 'number': 351, 'closed': datetime.datetime(2024, 8, 6, 17, 50, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 23, 23, 56, tzinfo=datetime.timezone.utc), 'time_taken': 27541585.0, 'time_delta': '318 days, 18:26:25', 'additions': 182, 'deletions': 94, 'state': 'closed'}, {'id': 1511340021, 'number': 348, 'closed': datetime.datetime(2023, 9, 13, 2, 21, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 12, 4, 20, 35, tzinfo=datetime.timezone.utc), 'time_taken': 79236.0, 'time_delta': '22:00:36', 'additions': 25, 'deletions': 19, 'state': 'closed'}, {'id': 1509566916, 'number': 346, 'closed': None, 'created': datetime.datetime(2023, 9, 11, 4, 39, 20, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 341, 'deletions': 59, 'state': 'open'}, {'id': 1508976033, 'number': 345, 'closed': datetime.datetime(2023, 9, 12, 0, 51, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 10, 1, 38, 52, tzinfo=datetime.timezone.utc), 'time_taken': 169941.0, 'time_delta': '1 day, 23:12:21', 'additions': 114, 'deletions': 3, 'state': 'closed'}, {'id': 1508922734, 'number': 344, 'closed': datetime.datetime(2023, 9, 9, 21, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 9, 19, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 6315.0, 'time_delta': '1:45:15', 'additions': 100, 'deletions': 7, 'state': 'closed'}, {'id': 1500148658, 'number': 343, 'closed': None, 'created': datetime.datetime(2023, 9, 3, 4, 42, 37, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 102, 'deletions': 24, 'state': 'open'}, {'id': 1500130313, 'number': 342, 'closed': datetime.datetime(2023, 9, 4, 20, 29, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 3, 2, 12, 58, tzinfo=datetime.timezone.utc), 'time_taken': 152167.0, 'time_delta': '1 day, 18:16:07', 'additions': 48, 'deletions': 39, 'state': 'closed'}, {'id': 1040579555, 'number': 264, 'closed': datetime.datetime(2022, 9, 4, 4, 34, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 30, 7, 35, 22, tzinfo=datetime.timezone.utc), 'time_taken': 421157.0, 'time_delta': '4 days, 20:59:17', 'additions': 13, 'deletions': 38, 'state': 'closed'}, {'id': 1031714591, 'number': 259, 'closed': datetime.datetime(2022, 8, 31, 6, 3, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 20, 6, 55, 19, tzinfo=datetime.timezone.utc), 'time_taken': 947318.0, 'time_delta': '10 days, 23:08:38', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1031307008, 'number': 257, 'closed': datetime.datetime(2022, 8, 19, 16, 54, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 19, 15, 38, 29, tzinfo=datetime.timezone.utc), 'time_taken': 4544.0, 'time_delta': '1:15:44', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 1017134643, 'number': 255, 'closed': datetime.datetime(2022, 8, 9, 17, 46, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 7, 6, 51, tzinfo=datetime.timezone.utc), 'time_taken': 470374.0, 'time_delta': '5 days, 10:39:34', 'additions': 295, 'deletions': 204, 'state': 'closed'}, {'id': 843315708, 'number': 219, 'closed': datetime.datetime(2022, 2, 18, 22, 6, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 8, 22, 55, 31, tzinfo=datetime.timezone.utc), 'time_taken': 861069.0, 'time_delta': '9 days, 23:11:09', 'additions': 248, 'deletions': 10, 'state': 'closed'}, {'id': 721509000, 'number': 210, 'closed': datetime.datetime(2022, 2, 19, 20, 19, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 17, 49, 22, tzinfo=datetime.timezone.utc), 'time_taken': 15215386.0, 'time_delta': '176 days, 2:29:46', 'additions': 124, 'deletions': 45, 'state': 'closed'}, {'id': 721483703, 'number': 209, 'closed': datetime.datetime(2021, 8, 31, 12, 59, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 27, 17, 3, 36, tzinfo=datetime.timezone.utc), 'time_taken': 330949.0, 'time_delta': '3 days, 19:55:49', 'additions': 70, 'deletions': 1, 'state': 'closed'}, {'id': 717092296, 'number': 208, 'closed': datetime.datetime(2022, 7, 21, 5, 31, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 4, 59, 55, tzinfo=datetime.timezone.utc), 'time_taken': 28859495.0, 'time_delta': '334 days, 0:31:35', 'additions': 175, 'deletions': 274, 'state': 'closed'}, {'id': 717018125, 'number': 207, 'closed': datetime.datetime(2021, 8, 20, 22, 36, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 20, 21, 57, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2330.0, 'time_delta': '0:38:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 712646676, 'number': 204, 'closed': datetime.datetime(2021, 8, 14, 14, 5, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 21, 56, 54, tzinfo=datetime.timezone.utc), 'time_taken': 58096.0, 'time_delta': '16:08:16', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 705760449, 'number': 203, 'closed': datetime.datetime(2021, 8, 9, 22, 9, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 21, 39, 49, tzinfo=datetime.timezone.utc), 'time_taken': 261009.0, 'time_delta': '3 days, 0:30:09', 'additions': 400, 'deletions': 177, 'state': 'closed'}, {'id': 705111971, 'number': 202, 'closed': datetime.datetime(2021, 8, 9, 18, 33, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 0, 43, 29, tzinfo=datetime.timezone.utc), 'time_taken': 323424.0, 'time_delta': '3 days, 17:50:24', 'additions': 154, 'deletions': 43, 'state': 'closed'}, {'id': 704944455, 'number': 201, 'closed': datetime.datetime(2021, 8, 5, 20, 1, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 18, 52, 28, tzinfo=datetime.timezone.utc), 'time_taken': 4142.0, 'time_delta': '1:09:02', 'additions': 431, 'deletions': 317, 'state': 'closed'}, {'id': 702883963, 'number': 199, 'closed': datetime.datetime(2021, 8, 4, 3, 13, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 2, 25, 21, tzinfo=datetime.timezone.utc), 'time_taken': 2864.0, 'time_delta': '0:47:44', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 701649497, 'number': 198, 'closed': datetime.datetime(2021, 8, 2, 21, 47, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 2, 17, 24, 4, tzinfo=datetime.timezone.utc), 'time_taken': 15814.0, 'time_delta': '4:23:34', 'additions': 51, 'deletions': 53, 'state': 'closed'}, {'id': 700620313, 'number': 197, 'closed': datetime.datetime(2021, 8, 4, 1, 33, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 31, 0, 4, 22, tzinfo=datetime.timezone.utc), 'time_taken': 350965.0, 'time_delta': '4 days, 1:29:25', 'additions': 217, 'deletions': 34, 'state': 'closed'}, {'id': 698056954, 'number': 195, 'closed': datetime.datetime(2021, 7, 28, 17, 12, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 17, 37, 11, tzinfo=datetime.timezone.utc), 'time_taken': 84943.0, 'time_delta': '23:35:43', 'additions': 22, 'deletions': 17, 'state': 'closed'}, {'id': 697485710, 'number': 194, 'closed': datetime.datetime(2021, 7, 27, 17, 37, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 2, 40, 40, tzinfo=datetime.timezone.utc), 'time_taken': 53830.0, 'time_delta': '14:57:10', 'additions': 650, 'deletions': 366, 'state': 'closed'}, {'id': 687205287, 'number': 192, 'closed': datetime.datetime(2021, 7, 31, 0, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 16, 14, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1757168.0, 'time_delta': '20 days, 8:06:08', 'additions': 637, 'deletions': 352, 'state': 'closed'}, {'id': 678233313, 'number': 183, 'closed': datetime.datetime(2021, 7, 8, 19, 7, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 23, 41, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1106781.0, 'time_delta': '12 days, 19:26:21', 'additions': 673, 'deletions': 10, 'state': 'closed'}, {'id': 468183666, 'number': 140, 'closed': datetime.datetime(2020, 8, 15, 12, 46, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 21, 8, 6, tzinfo=datetime.timezone.utc), 'time_taken': 56330.0, 'time_delta': '15:38:50', 'additions': 14, 'deletions': 12, 'state': 'closed'}, {'id': 467606276, 'number': 139, 'closed': datetime.datetime(2020, 8, 15, 12, 45, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 20, 4, 6, tzinfo=datetime.timezone.utc), 'time_taken': 146463.0, 'time_delta': '1 day, 16:41:03', 'additions': 57, 'deletions': 1, 'state': 'closed'}, {'id': 465580141, 'number': 136, 'closed': datetime.datetime(2020, 8, 10, 15, 48, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 15, 40, 48, tzinfo=datetime.timezone.utc), 'time_taken': 482.0, 'time_delta': '0:08:02', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 458040359, 'number': 131, 'closed': datetime.datetime(2021, 7, 27, 2, 46, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 20, 35, 29, tzinfo=datetime.timezone.utc), 'time_taken': 31385462.0, 'time_delta': '363 days, 6:11:02', 'additions': 321, 'deletions': 1, 'state': 'closed'}, {'id': 432085768, 'number': 118, 'closed': datetime.datetime(2020, 6, 15, 19, 3, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 21, 53, 51, tzinfo=datetime.timezone.utc), 'time_taken': 508169.0, 'time_delta': '5 days, 21:09:29', 'additions': 153, 'deletions': 19, 'state': 'closed'}, {'id': 429428550, 'number': 115, 'closed': datetime.datetime(2020, 6, 10, 21, 46, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 20, 36, 5, tzinfo=datetime.timezone.utc), 'time_taken': 349813.0, 'time_delta': '4 days, 1:10:13', 'additions': 130, 'deletions': 158, 'state': 'closed'}, {'id': 426101395, 'number': 110, 'closed': datetime.datetime(2020, 6, 2, 2, 30, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 16, 55, 52, tzinfo=datetime.timezone.utc), 'time_taken': 34472.0, 'time_delta': '9:34:32', 'additions': 283, 'deletions': 12, 'state': 'closed'}]"
72398867,SciMLTutorials.jl,SciML/SciMLTutorials.jl,CSS,128,712,25,44,1297,14,5,0,"[{'id': 711761254, 'number': 430, 'closed': datetime.datetime(2021, 8, 14, 13, 7, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 23, 14, 24, tzinfo=datetime.timezone.utc), 'time_taken': 136375.0, 'time_delta': '1 day, 13:52:55', 'additions': 1471, 'deletions': 0, 'state': 'closed'}]"
