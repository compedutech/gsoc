pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
607576737,[openwrt] Convert into an OpenWRT package #6,"Closes #6

* Create package NetJSON Monitoring and OpenWISP Monitoring.
* Add a CI Workflow
* Add directory structure with common files and docs as other OpenWISP modules
* Add `runbuild` script to automatically compile packages",True,25,https://api.github.com/repos/openwisp/openwrt-openwisp-monitoring/pulls/25,https://github.com/openwisp/openwrt-openwisp-monitoring/pull/25,closed,1193,102,14,30,10,65,0,0,[],2021-04-01 18:03:57+00:00,2021-06-06 23:41:01+00:00,5722624.0,"66 days, 5:37:04","[{'comment_id': 626224343, 'comment_body': 'use 0.1.0', 'comment_created': datetime.datetime(2021, 5, 5, 2, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 626224417, 'comment_body': 'name should be `openwisp-monitoring`', 'comment_created': datetime.datetime(2021, 5, 5, 2, 51, 58, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 626224505, 'comment_body': 'variant should not be needed', 'comment_created': datetime.datetime(2021, 5, 5, 2, 52, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 626224635, 'comment_body': 'simply put `Package/openwisp-monitoring/install`', 'comment_created': datetime.datetime(2021, 5, 5, 2, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962035, 'comment_body': 'we need two packages here, one is netjson-monitoring, one is openwisp-monitoring (depends on openwisp-config).', 'comment_created': datetime.datetime(2021, 5, 9, 23, 55, 52, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962128, 'comment_body': 'we need to do this with a daemon which runs in an infinite loop, see openwisp-config to see how to do this.', 'comment_created': datetime.datetime(2021, 5, 9, 23, 56, 27, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962226, 'comment_body': ""let's put * as default (see one of the latest changes).\r\n```\r\nconfig monitoring 'monitoring'\r\n\toption monitored_interfaces '*'\r\n```\r\n"", 'comment_created': datetime.datetime(2021, 5, 9, 23, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962298, 'comment_body': 'remove this file from the package (this is kind of a workaround).', 'comment_created': datetime.datetime(2021, 5, 9, 23, 58, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962396, 'comment_body': '`monitoring.monitoring.monitored_interfaces`', 'comment_created': datetime.datetime(2021, 5, 9, 23, 58, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962427, 'comment_body': 'remove this file', 'comment_created': datetime.datetime(2021, 5, 9, 23, 58, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962465, 'comment_body': 'please start preparing a basic README', 'comment_created': datetime.datetime(2021, 5, 9, 23, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 632083229, 'comment_body': 'I am trying to split it in two packages but there are some problems in makefile due to which only one package is shown in menuconfig. Will fix it soon', 'comment_created': datetime.datetime(2021, 5, 13, 20, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 633025872, 'comment_body': ""let's keep it simple: replace `openwisp-openwrt-monitoring` with `openwisp-monitoring`, `openwisp-netjson-monitoring` with `netjson-monitoring`."", 'comment_created': datetime.datetime(2021, 5, 16, 1, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 633025968, 'comment_body': 'please replace any `monitoring_config` with `openwisp_monitoring`', 'comment_created': datetime.datetime(2021, 5, 16, 1, 21, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 633026233, 'comment_body': '/usr/sbin/monitoring > /usr/sbin/openwisp_monitoring\r\n\r\nplease get the name right, double check every line.\r\n\r\n`openwisp_monitoring` for the agent, `netjson_monitoring` for the command which returns NetJSON output', 'comment_created': datetime.datetime(2021, 5, 16, 1, 24, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 633026264, 'comment_body': ""if we use underscore for `openwisp_monitoring`, we shall use underscore for `netjson_monitoring` too, let's keep it consistent"", 'comment_created': datetime.datetime(2021, 5, 16, 1, 25, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 633954191, 'comment_body': 'Have a look here for a package that is split into multiple packages via one makefile. \r\n I believe you may also need to create a [Config.in](https://github.com/openwrt/packages/blob/master/net/modemmanager/Config.in) file. \r\n https://github.com/openwrt/packages/blob/master/net/modemmanager/Makefile', 'comment_created': datetime.datetime(2021, 5, 18, 0, 43, 29, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 634337056, 'comment_body': 'Hi @nickberry17 sorry I forget to resolve this. This issue was arising due to some dependencies. If I remove `rpcd-mod-iwinfo` from DEPENDS, package compiles without any error or warning. I am searching for the reason why it occurs. Maybe user needs to install the package manually. :thinking: \r\n\r\n\r\nAlso, Config.in is used here to install extra dependencies (if I am not wrong), i.e. `libmbim` and `libqmi`', 'comment_created': datetime.datetime(2021, 5, 18, 12, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 634800999, 'comment_body': ""OK, let's find out what is going on with that.  Is it an error related to compiling `rpcd-mod-iwinfo` or an error installing that package into the OpenWrt image? Also, earlier I pointed you to ModemManager when I should have shown you [libqmi](https://github.com/openwrt/packages/blob/master/libs/libqmi/Makefile), sorry!  Libqmi split the utils from the library.\r\n>Also, Config.in is used here to install extra dependencies (if I am not wrong), i.e. libmbim and libqmi\r\n\r\nYes, keep that in mind, you may need it later when you want to break the package up or add nice extra options for the user.\r\n"", 'comment_created': datetime.datetime(2021, 5, 18, 22, 47, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 635613374, 'comment_body': 'I have to select `rpcd-mod-iwinfo` first before selecting for openwisp packages. That solves the issue', 'comment_created': datetime.datetime(2021, 5, 19, 22, 1, 26, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637233919, 'comment_body': 'I think category should be Administration\r\n```\r\n\tCATEGORY:=Administration\r\n\tSECTION:=admin\r\n\tSUBMENU:=openwisp\r\n```', 'comment_created': datetime.datetime(2021, 5, 21, 21, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637234843, 'comment_body': 'Same, category should be Administration\r\n```\r\n\tCATEGORY:=Administration\r\n\tSECTION:=admin\r\n\tSUBMENU:=openwisp\r\n```', 'comment_created': datetime.datetime(2021, 5, 21, 21, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637235536, 'comment_body': 'The `*` is a cool feature.  Can we leverage the implementation somehow to allow for multiple management VPNs too?  Shall I open an issue to track that discussion?', 'comment_created': datetime.datetime(2021, 5, 21, 21, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637235910, 'comment_body': 'Try using [`config_get_bool`](https://openwrt.org/docs/guide-developer/config-scripting#reading_booleans) for `verify_ssl` and any other booleans', 'comment_created': datetime.datetime(2021, 5, 21, 21, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637241576, 'comment_body': 'Try passing the [instance name argument ](https://openwrt.org/docs/guide-developer/procd-init-scripts#defining_service_instances)to `procd_open_instance`, it will make the logs look nicer and helps keep things organised if we ever in the future want multiple instances to run simultaneously. `""openwisp_monitoring_${1}""`. See[ usage here](https://github.com/openwrt/packages/blob/791892d482c2255c8681b51bb0b78aa06d48f0e0/utils/watchcat/files/watchcat.init#L94).\r\n\r\nDo we want to also restart the service when the config file is changed?  ', 'comment_created': datetime.datetime(2021, 5, 21, 21, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637241693, 'comment_body': 'nitpick: but please check the indentation', 'comment_created': datetime.datetime(2021, 5, 21, 21, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637243448, 'comment_body': 'Please consider moving all configuration actions into a `config_openwisp_monitoring` function, and startup into a `start_service` function.(https://github.com/openwrt/packages/blob/791892d482c2255c8681b51bb0b78aa06d48f0e0/utils/watchcat/files/watchcat.init)', 'comment_created': datetime.datetime(2021, 5, 21, 21, 28, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637244651, 'comment_body': 'If we use a [`time_to_seconds`](https://github.com/openwrt/packages/blob/791892d482c2255c8681b51bb0b78aa06d48f0e0/utils/watchcat/files/watchcat.init#L19) helper function then the user will be able to enter various strings like: `1d` for 1 day, `10h` for 10 hours, `5m` for 5 minutes, `10` or `10s` for 10 seconds', 'comment_created': datetime.datetime(2021, 5, 21, 21, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637254044, 'comment_body': 'I\'m not quite sure we should be doing it this way.  What if the value is undefined?  Instead of writing the exception handling code yourself, if you define a `config_openwisp_monitoring` function as I mention elsewhere, `procd` should automatically pass the `openwisp_monitoring` configuration (either file or UCI, I\'m not sure which) as the `$1` argument and, you are then able to do something like this: `config_get period ""$1"" period ""120""`  That\'s: _""assign the value in the config file to `period`, and if it is null use `120` as a default value""_', 'comment_created': datetime.datetime(2021, 5, 21, 21, 55, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637291869, 'comment_body': 'What if user adds time like 10h30m? Should that case be handled too?', 'comment_created': datetime.datetime(2021, 5, 21, 23, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637293964, 'comment_body': 'We can :thinking: For now, we are taking all vpn interfaces into consideration', 'comment_created': datetime.datetime(2021, 5, 21, 23, 16, 18, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637295144, 'comment_body': 'I divide it in two functions as we are using two different config files', 'comment_created': datetime.datetime(2021, 5, 21, 23, 21, 54, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637301681, 'comment_body': '@nickberry17 management interface information is sent by [openwisp-config](https://github.com/openwisp/openwisp-config) ', 'comment_created': datetime.datetime(2021, 5, 21, 23, 52, 16, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 637420010, 'comment_body': 'Have a look at my pullrequest #108 for parsing the uci to generate the service arguments. This is much cleaner', 'comment_created': datetime.datetime(2021, 5, 22, 15, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 637420793, 'comment_body': 'The `default` is not needed and so we also do not need this line `package/openwisp-monitoring=$(call Package/openwisp-monitoring/default)` This is also true for `netjson-monitoring`', 'comment_created': datetime.datetime(2021, 5, 22, 16, 5, 20, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 637421072, 'comment_body': 'Can you please refactoring the script that it has more have a look and feel of a C programm with a main and help function?\r\nHave a look at https://github.com/openwrt/packages/blob/master/net/mwan3/files/usr/sbin/mwan3rtmon thats only an example.\r\nFrom my point of view, this has certain advantages. If you later decide to make a C program out of it, then you already know what you need for functions. My experience as a maintainer has often shown me that.\r\n\r\nAlso add a valid license header', 'comment_created': datetime.datetime(2021, 5, 22, 16, 8, 17, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 637421633, 'comment_body': ""@nickberry17 I don't see that, since we then have to parse that, but I don't care. You can already do it the way you suggested."", 'comment_created': datetime.datetime(2021, 5, 22, 16, 13, 6, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 637421730, 'comment_body': 'Not needed', 'comment_created': datetime.datetime(2021, 5, 22, 16, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 637451931, 'comment_body': '@feckert I think improvements like this one be done incrementally, so this request can become an issue and we can work on it once we the packages compile and the basic functionality works as expected. ', 'comment_created': datetime.datetime(2021, 5, 22, 21, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 637462155, 'comment_body': 'Modified and added a tag too as done in [openwisp-config](https://github.com/openwisp/openwisp-config/blob/7cbb2eb2f07a6bdbff87c8034d7bf22efc510c6e/openwisp-config/files/openwisp.init#L105). It may help in debugging :thinking: ', 'comment_created': datetime.datetime(2021, 5, 22, 23, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637462292, 'comment_body': '> What if user adds time like 10h30m? Should that case be handled too?\r\n\r\nI use `time_to_seconds` helper function mentioned above for now. We can open an issue for discussion if needed.', 'comment_created': datetime.datetime(2021, 5, 22, 23, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637462851, 'comment_body': 'Sorry, which pull request is referred here?', 'comment_created': datetime.datetime(2021, 5, 22, 23, 34, 47, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 637617504, 'comment_body': ""Sorry, I know I'm going off on a tangent, but what I meant is can we define multiple management VPN interfaces for openwisp-config?  I tried adding two (wg0 and tun0) but that did not work.  I'm not asking about monitoring stats from them.  If that is not currently possible then I would like to open an issue for that.  Let's move this discussion into the chat."", 'comment_created': datetime.datetime(2021, 5, 23, 23, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637618247, 'comment_body': 'Just for later, but I think you can use a cleaner syntax here.\r\n\r\n`[  -n ""$base_url"" ] && base_url=""--url $base_url""`', 'comment_created': datetime.datetime(2021, 5, 23, 23, 44, 23, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637618308, 'comment_body': ""Also, run the whole thing through [shellcheck](https://www.shellcheck.net/), it's useful for ensuring the script will run properly in OpenWrt's `ash` shell (it is different from bash or zsh), and can help you find some subtle bugs straight away. "", 'comment_created': datetime.datetime(2021, 5, 23, 23, 45, 1, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637619967, 'comment_body': "">What if user adds time like 10h30m? Should that case be handled too?\r\n\r\n\r\nI don't think it's necessary to cover this kind of case"", 'comment_created': datetime.datetime(2021, 5, 23, 23, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 637620067, 'comment_body': 'For security should we opt to verify SSL by default? @nemesisdesign  ', 'comment_created': datetime.datetime(2021, 5, 23, 23, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 638195992, 'comment_body': 'yes, thanks for spotting!', 'comment_created': datetime.datetime(2021, 5, 24, 18, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638196987, 'comment_body': ""BTW maybe we'll have to create variants too, like we do for openwisp-config, eg, `openwisp-monitoring-openssl`, `openwisp-monitoring-mbedtls`, etc."", 'comment_created': datetime.datetime(2021, 5, 24, 18, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 638840741, 'comment_body': 'Not working as expected. Will try to merge them in one', 'comment_created': datetime.datetime(2021, 5, 25, 14, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 639117924, 'comment_body': ""I added this loop to retry for 5 times(although it can be customisable). This will ensure errors like interrupted system calls don't create hurdles in the way"", 'comment_created': datetime.datetime(2021, 5, 25, 19, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 639118327, 'comment_body': 'Will store data collected temporarily if this happens', 'comment_created': datetime.datetime(2021, 5, 25, 19, 19, 58, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 639249172, 'comment_body': 'Opened #33 for this', 'comment_created': datetime.datetime(2021, 5, 25, 22, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 641070462, 'comment_body': 'log only if it fails more than the max amount of retries', 'comment_created': datetime.datetime(2021, 5, 28, 0, 21, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 641106054, 'comment_body': ':+1: ', 'comment_created': datetime.datetime(2021, 5, 28, 1, 31, 25, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 642715072, 'comment_body': 'the lines below the heading must be of equal length of the line above or some RST parsers will complain.', 'comment_created': datetime.datetime(2021, 6, 1, 0, 31, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642715241, 'comment_body': '`$(1)/etc/config/monitoring` > `$(1)/etc/config/openwisp_monitoring`', 'comment_created': datetime.datetime(2021, 6, 1, 0, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642715423, 'comment_body': '@nickberry17 that is not possible at the moment, only 1 management interface is supported', 'comment_created': datetime.datetime(2021, 6, 1, 0, 33, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 642716414, 'comment_body': ""I don't see dependencies defined for this package.\r\nIsn't it described in the project idea that this package should depend on openwisp-config?\r\n\r\nYou see, without defining this dependency, if you try to install only openwrt-openwisp-monitoring, nothing will work, because curl will not be installed (unless you have installed it manually). \r\n\r\nOpenWISP Config defines a set of dependencies: https://github.com/openwisp/openwisp-config/blob/master/openwisp-config/Makefile#L21\r\n\r\nWe also rely on the openwisp-config configuration to get the URL, UUID and key.\r\n\r\nIf you look at the structure of the Makefile of openwisp-config, you will see there are 4 packages, one for each SSL library supported by openwisp and one which does not depend on any SSL library and can used only for plain HTTP (no SSL).\r\n\r\nThis means that we'll have to replicate the same here, we'll need:\r\n\r\n- openwisp-monitoring-openssl\r\n- openwisp-monitoring-mbedtls\r\n- openwisp-monitoring-wolfssl\r\n- openwisp-monitoring-nossl\r\n\r\nThis is very common in OpenWRT, look also at openvpn or other packages who need SSL support.\r\nYou may ask yourself why, the reason is that openssl is huge compared to `wolfssl` and `mbedtls`, which are lighter and less fully featured implementations which are suited for embedded development where in many cases available space is limited."", 'comment_created': datetime.datetime(2021, 6, 1, 0, 38, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644275354, 'comment_body': ""Why is this needed? If it's a dependency, it should be defined in the `Makefile` and hence will not be needed here, it will be added automatically by `make defconfig`."", 'comment_created': datetime.datetime(2021, 6, 2, 19, 52, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644275760, 'comment_body': 'comfig > config\r\n\r\nplease double check mistakes like this in every line', 'comment_created': datetime.datetime(2021, 6, 2, 19, 53, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644275985, 'comment_body': ""let's use openwrt 21 since it's going to be released very soon"", 'comment_created': datetime.datetime(2021, 6, 2, 19, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644277853, 'comment_body': ""make sure that anything related to this package stays in `/etc/openwisp/monitoring`, there's already an `/etc/openwisp` directory created by openwisp-config, but make sure it's created if it doesn't exist, just to be extra sure code won't fail."", 'comment_created': datetime.datetime(2021, 6, 2, 19, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644278434, 'comment_body': '`url` > `URL`\r\n\r\nmake sure any variable containing constants like this (variables that do not change) are uppercase please.', 'comment_created': datetime.datetime(2021, 6, 2, 19, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 644280083, 'comment_body': '`$(1)/etc/openwisp/monitoring`', 'comment_created': datetime.datetime(2021, 6, 2, 20, 0, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '914c240a5de99f7bc2cf223838266ead3cbf2fed', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e572990d538d471532c37a4a6f1b8452290de71d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a406eb6fcff78e799827355fa6f3ca733686c995', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0dfb1019984a2471cedaebd972362e5340893dc', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6352ba35092f2241efd5d7037d7c985530b30796', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ebeeb39a7ddc14ef5a10e3f07e47a846d1d4985', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec1b77f7a2e41529cf883aff8a58726c0068a681', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'abee39815f59961d99b8ad7599b2c9cbe342c1cc', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e5cc9e2602267e5e0f66f324213f690de657145d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf8aa7e56371557279d83ae0b1f7484f14f844f5', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '002f6ae47dabf6c59851b285bfa29e5337b9db5f', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '48b4706bf925ae97caf98313e6c0a19daaea745d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a962e2eefcf6c8abf1eb28fcc66c3a167ec7d598', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7270840ce95483a1408997e5242839ea17dc3d65', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '155d5bc30b0b69eada417daf9bfbcb068263cf8c', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd256e10d349f4c331d35d4708482d4fe9361472b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a087e523e2c5eff7a20f504bb9b4968410397bd', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e119220b0fca2a617233bad537525cba6a375310', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1121204422c2d3fb42bd3abfda80eb3615379df4', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd55d938e11a9b9245635a0bf37c9e8b42f7e65d3', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '444285ad0e9bbb0fe51784da69dcee383b756251', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a82f95c165c0d2891ecaf23d3b71242263cec65b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dfa1569a6426b85b9af7a4c89136fad542850d8', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bfa2d63894ed15e328282d2c3a51b52fe9cdc602', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d3ad28d03dbcb36a3dc66bf97c562f9f304495', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'deb15b1ac70317145bfe7a50103bc107020bf080', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8129968ea7eaf4232bd8b4fc74356ff5280cbf4', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33a899c141b88eba5656d6d0698882dc38d02ced', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd90d7628991846f0785e3a3279813c1a0a53e69f', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c13e2dde5b8737d752923f73905fc0c21198a3e', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}]",Kapil Bansal,42766576,kapilbansal.gbpecdelhi@gmail.com,User,,86,,19,50
655360356,[change] Add support for new OpenWRT Packages in Backwards Compatible Manner,"Closes #296

<!--
Before submitting a Pull Request, please make sure you have read
the OpenWISP Contributing Guidelines:
http://openwisp.io/docs/developer/contributing.html#how-to-commit-your-changes-properly
-->

Checks:

- [ ] I have manually tested the proposed changes
- [ ] I have written new test cases to avoid regressions (if necessary)
- [ ] I have updated the documentation (e.g. README.rst)
",True,302,https://api.github.com/repos/openwisp/openwisp-monitoring/pulls/302,https://github.com/openwisp/openwisp-monitoring/pull/302,closed,479,154,5,10,5,27,0,0,[],2021-05-27 21:10:33+00:00,2022-04-25 15:28:06+00:00,28750653.0,"332 days, 18:17:33","[{'comment_id': 641030157, 'comment_body': ""```suggestion\r\nThese packages are required to make the `checks <#available-checks>`_ and\r\n```\r\n\r\nLet's write it as above for consistency. "", 'comment_created': datetime.datetime(2021, 5, 27, 23, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 641030992, 'comment_body': 'You can directly execute delete query without checking if the queryset exists. It should not raise an error. ', 'comment_created': datetime.datetime(2021, 5, 27, 23, 13, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 641031268, 'comment_body': ""Let's rename use a more descriptive name like `delete_monitoring_templates`. "", 'comment_created': datetime.datetime(2021, 5, 27, 23, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 641034482, 'comment_body': 'Rename the file to `0003_remove_monitoring_templates.py`', 'comment_created': datetime.datetime(2021, 5, 27, 23, 24, 14, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 663580178, 'comment_body': ""let's not do this. Let's instead change the data migrations which introduce the template so they do nothing. Otherwise we risk that some people will upgrade the system and not read this, get their monitoring template removed without having installed the new package.\r\n\r\nWe should advise users using previous versions to remove this template manually and install the new openwrt package in the README."", 'comment_created': datetime.datetime(2021, 7, 5, 0, 41, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 663742048, 'comment_body': '> We should advise users using previous versions to remove this template manually and install the new openwrt package in the README.\r\n\r\nSounds good! ', 'comment_created': datetime.datetime(2021, 7, 5, 8, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 664115726, 'comment_body': "">Let's instead change the data migrations which introduce the template so they do nothing.\r\n\r\nWhat will be the best way to do so? Should I remove that function or just empty the operations list?"", 'comment_created': datetime.datetime(2021, 7, 5, 20, 23, 52, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 664462393, 'comment_body': ""Replacing the function with `migrations.RunPython.noop` will be good I guess. Don't forget to leave a comment explaining why migration file is like that.\r\n\r\n> Should I remove that function or just empty the operations list?\r\n\r\nWon't Django raise error on this? "", 'comment_created': datetime.datetime(2021, 7, 6, 11, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 668622080, 'comment_body': ""Wasn't sure about that and replaced the function with `migrations.RunPython.noop` as suggested"", 'comment_created': datetime.datetime(2021, 7, 13, 10, 9, 11, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 711772311, 'comment_body': 'I believe this information should come much earlier in the README, we should probably move it up (eg: what about moving it before https://github.com/openwisp/openwisp-monitoring/tree/issues/298-receive-data-when-device-was-offline#device-health-status?\r\n\r\nAnd what if we move https://github.com/openwisp/openwisp-monitoring#setup-integrate-in-an-existing-django-project) just after the development install instructions?', 'comment_created': datetime.datetime(2021, 9, 19, 16, 51, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 711772865, 'comment_body': ""as said, I would not remove this code but add a new migration which introduces the following changes:\r\n\r\n- ensure the name of the files do not collide with the openwrt openwisp monitoring package\r\n- change the code of the monitoring template so that if it detects the openwrt monitoring package agent it stops and doesn't collect/send data\r\n- remove the automatic install of openwisp-config since it's painful to maintain and can cause issues"", 'comment_created': datetime.datetime(2021, 9, 19, 16, 56, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 729315103, 'comment_body': '> * remove the automatic install of openwisp-config since it\'s painful to maintain and can cause issues\r\n\r\nShould we remove file for updating openwisp-packages, i.e. `""/usr/sbin/update-openwisp-packages""`', 'comment_created': datetime.datetime(2021, 10, 14, 20, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 737929017, 'comment_body': ""let's make clear in the heading and in the text that we are talking about what is needed on the OpenWrt side"", 'comment_created': datetime.datetime(2021, 10, 28, 0, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 853454348, 'comment_body': 'I have kept this section in the documentation for returning users. I think this has better DX than completely removing this section. ', 'comment_created': datetime.datetime(2022, 4, 19, 20, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 853454779, 'comment_body': 'I can remove this if needed. I added this only as a precaution to users. ', 'comment_created': datetime.datetime(2022, 4, 19, 20, 21, 15, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 853456348, 'comment_body': 'I have removed the code that was responsible for creating the default monitoring template. \r\nOn new systems, no monitoring template will be created because of this. \r\n\r\nI also thought of commenting the code that creates the template for reference. But, we can always use git to check the older version of the code. ', 'comment_created': datetime.datetime(2022, 4, 19, 20, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 853457269, 'comment_body': '@nemesisdesign I have updated the `/usr/sbin/update-openwisp-packages""` script and only removed the part that installed openwisp-config. \r\n', 'comment_created': datetime.datetime(2022, 4, 19, 20, 25, 1, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 853459004, 'comment_body': '🤝', 'comment_created': datetime.datetime(2022, 4, 19, 20, 27, 23, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 855499765, 'comment_body': 'I think we should move this section under the installation instructions as we have in OpenWISP Controller', 'comment_created': datetime.datetime(2022, 4, 21, 18, 48, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 855501110, 'comment_body': 'I think we need a ""Deploy it in production"" section like the one we have in OpenWISP Controller: https://github.com/openwisp/openwisp-controller#deploy-it-in-production.', 'comment_created': datetime.datetime(2022, 4, 21, 18, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 855502354, 'comment_body': ""in the same Layer 2 network, any computer has both L2 and L3 networks working in its stack, saying that  something is deployed in an L2 network doesn't have much sense."", 'comment_created': datetime.datetime(2022, 4, 21, 18, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 855503854, 'comment_body': ""I think last sentence is not entirely correct, it shouldn't take long, a few seconds max, the user may be misled by this and waste time if there's any issue."", 'comment_created': datetime.datetime(2022, 4, 21, 18, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 855504303, 'comment_body': 'please try to break the links to avoid having lines that are too long, eg:\r\n\r\n```\r\n`instructions ....\r\n<link>`_\r\n```\r\n\r\nThis helps with the maintenance of the document.', 'comment_created': datetime.datetime(2022, 4, 21, 18, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 856278621, 'comment_body': 'This section looks really good right now. \r\n\r\nMaybe, we can also copy this section to the openwisp2-docs in the future. ', 'comment_created': datetime.datetime(2022, 4, 22, 14, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pandafy', 'type': 'User'}, {'comment_id': 856467154, 'comment_body': 'this must be removed: https://github.com/openwisp/openwisp-monitoring/issues/306.', 'comment_created': datetime.datetime(2022, 4, 22, 18, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '3f06d30d41c6b1bc202734162feecbc5c9e359f9', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f25d3a55fb29ed02f9d9391c0c03f848748896bb', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87f257e3763b355a99273f6bd30a3d6ea4225662', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc98226a3549357e57ba1fe175506efc9e54239a', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21fc491be049093b0225ae6c27086eac750a4a57', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74fa674171e97163591d5b12b59cac0a5ab9b4fc', 'committer_username': 'pandafy', 'committer_name': 'Gagan Deep', 'committer_email': 'pandafy.dev@gmail.com', 'commit_date': datetime.datetime(2017, 9, 19, 9, 57, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '402f78c4ffd247c6f10b2b60ae91a7d2d3d44e65', 'committer_username': 'pandafy', 'committer_name': 'Gagan Deep', 'committer_email': 'pandafy.dev@gmail.com', 'commit_date': datetime.datetime(2017, 9, 19, 9, 57, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63dbe6810b98cb42cc5b1b3b6722e4b1200dc83b', 'committer_username': 'pandafy', 'committer_name': 'Gagan Deep', 'committer_email': 'pandafy.dev@gmail.com', 'commit_date': datetime.datetime(2017, 9, 19, 9, 57, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '014d44f64d1db57581af570f85f36093d5ee6498', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5cfdf50e7edbaad58027d0dacc47344dd092fc1', 'committer_username': 'pandafy', 'committer_name': 'Gagan Deep', 'committer_email': 'pandafy.dev@gmail.com', 'commit_date': datetime.datetime(2017, 9, 19, 9, 57, 26, tzinfo=datetime.timezone.utc)}]",Kapil Bansal,42766576,kapilbansal.gbpecdelhi@gmail.com,User,,86,,19,50
630077816,[test] Lua tests for netjson monitoring,Closes #7 ,True,26,https://api.github.com/repos/openwisp/openwrt-openwisp-monitoring/pulls/26,https://github.com/openwisp/openwrt-openwisp-monitoring/pull/26,closed,3467,583,41,23,6,27,0,0,[],2021-05-04 20:31:02+00:00,2021-07-20 18:15:04+00:00,6644642.0,"76 days, 21:44:02","[{'comment_id': 628962594, 'comment_body': 'this can go in interfaces', 'comment_created': datetime.datetime(2021, 5, 10, 0, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962632, 'comment_body': 'do not use `_functions` suffix for a filename please', 'comment_created': datetime.datetime(2021, 5, 10, 0, 0, 30, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962654, 'comment_body': 'do not use `_functions` suffix for a filename please', 'comment_created': datetime.datetime(2021, 5, 10, 0, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628962848, 'comment_body': '`test_interface.lua` > `test_interfaces.lua` ', 'comment_created': datetime.datetime(2021, 5, 10, 0, 1, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628963003, 'comment_body': 'we can move this to a `wifi.lua` file', 'comment_created': datetime.datetime(2021, 5, 10, 0, 2, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628963018, 'comment_body': ""what's this"", 'comment_created': datetime.datetime(2021, 5, 10, 0, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628963113, 'comment_body': '`NetJSon` > `NetJSON`', 'comment_created': datetime.datetime(2021, 5, 10, 0, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628963173, 'comment_body': ""let's put things like cpu, memory, disk in a file called `resources.lua`"", 'comment_created': datetime.datetime(2021, 5, 10, 0, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 628963266, 'comment_body': 'why this print here?', 'comment_created': datetime.datetime(2021, 5, 10, 0, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 629693607, 'comment_body': 'I added it for checking the output :grimacing: Will remove it soon', 'comment_created': datetime.datetime(2021, 5, 10, 21, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 634350733, 'comment_body': 'Added for testing purpose only. Removed now', 'comment_created': datetime.datetime(2021, 5, 18, 12, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 650761071, 'comment_body': 'Please add a shebang and a file HEADER', 'comment_created': datetime.datetime(2021, 6, 14, 8, 50, 52, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 666522307, 'comment_body': 'Modified this as it was not working as expected when I test', 'comment_created': datetime.datetime(2021, 7, 8, 21, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 666522386, 'comment_body': 'Same as above', 'comment_created': datetime.datetime(2021, 7, 8, 21, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 666522904, 'comment_body': 'This file contains all openwrt mocks that are used for testing functions. Will rename the file too', 'comment_created': datetime.datetime(2021, 7, 8, 21, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 670069521, 'comment_body': ""are you using 4 spaces here? Aren't we using 2?"", 'comment_created': datetime.datetime(2021, 7, 15, 2, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670069543, 'comment_body': ""are you using 4 spaces here? Aren't we using 2?"", 'comment_created': datetime.datetime(2021, 7, 15, 2, 1, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670070004, 'comment_body': ""white space is off around the comparison operators here, why isn't the qa check spotting this?"", 'comment_created': datetime.datetime(2021, 7, 15, 2, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670070047, 'comment_body': 'same here', 'comment_created': datetime.datetime(2021, 7, 15, 2, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670070163, 'comment_body': 'indentation in this file is also 4', 'comment_created': datetime.datetime(2021, 7, 15, 2, 3, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670070250, 'comment_body': 'here indentation is 2', 'comment_created': datetime.datetime(2021, 7, 15, 2, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 670735879, 'comment_body': 'There is an open issue for this https://github.com/luarocks/luacheck/issues/19\r\n\r\nFor now, I will check on my IDE', 'comment_created': datetime.datetime(2021, 7, 15, 19, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 671724549, 'comment_body': ""so, I tried this part and here's a few issues I found:\r\n\r\n./install-dev.sh needs sudo, I think it doesn't hurt to use `sudo ./install-dev.sh ` in the example.\r\n\r\nThen, run-qa-checks depends on openwisp-utils, but there's no mention of this, so the script will fail if a user follows this verbatim. Please fix this.\r\n\r\nWhenever you write a piece of docs,if you really want other people working with you to be able to make something useful out of it, try to test it by following verbatim on a new system."", 'comment_created': datetime.datetime(2021, 7, 17, 17, 43, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671724699, 'comment_body': 'I see quite some output like:\r\n\r\n```\r\nTestNetJSON.test_wifi_interfaces_stats_include ... {""interfaces"":[{""mac"":""00:00:00:00:00:00"",""type"":""wireless"",""up"":true,""name"":""mesh1"",""wireless"":{""noise"":-87,""ssid"":""meshID"",""country"":""00"",""clients"":[{""mac"":""00:00:00:00:00:00"",""noise"":0,""ht"":true,""vht"":false,""signal"":-67,""wmm"":true,""authorized"":true,""mfp"":true,""auth"":true}],""channel"":40,""tx_power"":20,""mode"":""802.11s"",""signal"":-76,""frequency"":5200},""multicast"":true,""statistics"":{""rx_frame_errors"":0,""rx_crc_errors"":0,""tx_heartbeat_errors"":0,""rx_over_errors"":0,""rx_errors"":0,""tx_packets"":138182411,""tx_carrier_errors"":0,""rx_packets"":94311062,""rx_length_errors"":0,""tx_errors"":0,""tx_aborted_errors"":0,""tx_window_errors"":0,""tx_bytes"":151599685066,""collisions"":0,""rx_missed_errors"":0,""rx_fifo_errors"":0,""rx_dropped"":0,""tx_fifo_errors"":0,""rx_compressed"":0,""multicast"":0,""tx_compressed"":0,""rx_bytes"":24917085991,""tx_dropped"":0},""mtu"":1500},{""mac"":""00:00:00:00:00:00"",""type"":""ethernet"",""up"":true,""txqueuelen"":1000,""link_supported"":[""10baseT-H"",""10baseT-F"",""100baseT-H"",""100baseT-F"",""1000baseT-F""],""name"":""wan"",""speed"":""1000F"",""multicast"":true,""mtu"":1500},{""mac"":""00:00:00:00:00:00"",""type"":""wireless"",""up"":true,""txqueuelen"":1000,""name"":""wlan1"",""wireless"":{""country"":""00"",""noise"":0,""ssid"":""ssid"",""channel"":13,""tx_power"":20,""mode"":""access_point"",""signal"":-33,""frequency"":5180},""multicast"":true,""statistics"":{""tx_crc_errors"":0,""tx_heartbeat_errors"":0,""tx_over_errors"":0,""rx_errors"":0,""tx_packets"":0,""tx_carrier_errors"":0,""rx_packets"":2367515,""tx_length_errors"":0,""tx_missed_errors"":0,""tx_frame_errors"":0,""tx_errors"":0,""tx_aborted_errors"":0,""tx_window_errors"":0,""tx_bytes"":0,""collisions"":0,""rx_fifo_errors"":0,""rx_dropped"":0,""tx_fifo_errors"":0,""rx_compressed"":0,""multicast"":0,""tx_compressed"":0,""rx_bytes"":531596854,""tx_dropped"":0},""mtu"":1500},{""mac"":""00:00:00:00:00:00"",""type"":""wireless"",""up"":true,""txqueuelen"":1000,""name"":""mesh0"",""wireless"":{""noise"":0,""ssid"":""meshID"",""country"":""00"",""clients"":[{""mac"":""00:00:00:00:00:00"",""noise"":-87,""ht"":false,""vht"":true,""signal"":-76,""wmm"":true,""authorized"":true,""mfp"":true,""auth"":true}],""channel"":11,""tx_power"":20,""mode"":""802.11s"",""signal"":-67,""frequency"":2462},""multicast"":true,""mtu"":1500},{""mac"":""00:00:00:00:00:00"",""type"":""wireless"",""up"":true,""txqueuelen"":1000,""name"":""wlan0"",""wireless"":{""country"":""00"",""noise"":0,""ssid"":""OpenWRT"",""channel"":13,""tx_power"":20,""mode"":""station"",""signal"":-62,""frequency"":2472},""multicast"":true,""statistics"":{""rx_frame_errors"":0,""rx_crc_errors"":0,""tx_heartbeat_errors"":0,""rx_over_errors"":0,""rx_errors"":0,""tx_packets"":2367747,""tx_carrier_errors"":0,""rx_packets"":198,""rx_length_errors"":0,""tx_errors"":0,""tx_aborted_errors"":0,""tx_window_errors"":0,""tx_bytes"":531641723,""collisions"":0,""rx_missed_errors"":0,""rx_fifo_errors"":0,""rx_dropped"":0,""tx_fifo_errors"":0,""rx_compressed"":0,""multicast"":0,""tx_compressed"":0,""rx_bytes"":25967,""tx_dropped"":0},""mtu"":1500}],""type"":""DeviceMonitoring"",""general"":{""hostname"":""08-00-27-56-92-F5""},""resources"":{""disk"":{},""load"":[0.37,0.95,1.23]}}\r\n``` \r\n\r\nCan this extra output be avoided? If you remember, we did some work in the python module to suppress noisy output because some new contributors gets confused and think that output is because of errors.', 'comment_created': datetime.datetime(2021, 7, 17, 17, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671741477, 'comment_body': ""Please include `pip install openwisp-utils[qa]` in the example or we risk people to miss that because most people don't read text but copy/paste the examples.\r\n\r\nEg:\r\n\r\n```\r\n# install openwisp-utils QA tools first\r\npip install openwisp-utils[qa]\r\n\r\n# run QA checks before committing code\r\n./run-qa-checks\r\n```"", 'comment_created': datetime.datetime(2021, 7, 17, 20, 42, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 673360453, 'comment_body': 'I added the same in README. \r\n\r\nBtw, I am thinking to include it in `install-dev.sh`. :thinking: ', 'comment_created': datetime.datetime(2021, 7, 20, 17, 58, 34, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 673370150, 'comment_body': '> I added the same in README.\r\n> \r\n> Btw, I am thinking to include it in `install-dev.sh`.\r\n\r\nwell, it depends if the dev/user is using a virtualenv or not, I think we leave it up to them to manage.', 'comment_created': datetime.datetime(2021, 7, 20, 18, 13, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '5d65084d0b75a9fe9ada0c9c4cebbefb35a238d3', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cb0653afc6e4f30a50fd3a470dd2855776c4d76', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '55de405a408a27046e41a9a464d4562a1ab76e13', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '864b9cd6b7901f3fad221958cff03aa817809fe6', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81e6f745040632db5f9988534ab2f7bc3ceb88aa', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdce6fe13ad571af63ea5bfa912c2daed6441f30', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f71cea3e884c11e6e5274b8c8e47186e561b362', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '358dceff80e0f6da6bd740bfb543f68fdcedcf06', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd52fa2c84d8ebc38c3f56017f86d4ddfd8acabc7', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '683032317ae01ff8b4c5279200127e04e0d25cf8', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f960aaa10c346c116fa546f89fcc88f86699f304', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cb23dc4b0804e8ce09cbb11d76ccc7f489856f0', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '365e2a75136af877d5dad382e85b026e0fe40a7b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14f392937ffb57271ebf40fcddbaa8a3dcbfa7ca', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88bbcd6c169c2ba7e045ef124cd2fb8f1349a3f7', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdc452fd54096720fe433182f8aa53ee99a68910', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '371110dc6cc10627e58ef67a9ba472f64cbd9494', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81bf403a48847215069768c84ab99a1ffdba5171', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '64a9f0cb4123b4e196e7737cb9ed3ea82b90b69e', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82cef9ab9b90b438dc0dc0f577ab40cc4acaf09b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9834b09f1ac0d8efd417118b8a66aca46a3620f9', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03944f36316938c57e080336e3b8cdb8a9594f5c', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88d23f42ef38069e4b6dace2190556b5357168e5', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}]",Kapil Bansal,42766576,kapilbansal.gbpecdelhi@gmail.com,User,,86,,19,50
689397772,[fix] Fix errors in package and improve debugging,"Fixes #41 
 
* Fix error related to monitoring interfaces when `*` is passed
* Add verbose mode for easy debugging",True,42,https://api.github.com/repos/openwisp/openwrt-openwisp-monitoring/pulls/42,https://github.com/openwisp/openwrt-openwisp-monitoring/pull/42,closed,85,38,4,10,1,4,0,0,[],2021-07-13 21:00:20+00:00,2021-07-24 23:38:21+00:00,959881.0,"11 days, 2:38:01","[{'comment_id': 669107732, 'comment_body': 'Adding this to log all errors in the instance so that it can be accessed using logread', 'comment_created': datetime.datetime(2021, 7, 13, 21, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 669108328, 'comment_body': 'Reverting quotes as this was causing `monitoring.agent` to read `--url http://www.....` as one word', 'comment_created': datetime.datetime(2021, 7, 13, 21, 2, 47, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 671727638, 'comment_body': 'requiring the user to remember to wrap the value around double quotes is really bad and weird. I think we can do better than this.', 'comment_created': datetime.datetime(2021, 7, 17, 18, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 671729336, 'comment_body': 'does \r\n\r\n```\r\nmonitored_interfaces=""--monitored_interfaces \\""$monitored_interfaces\\""""\r\n```\r\n\r\nallow us to not having to wrap the value in quotes in the UCI config file?', 'comment_created': datetime.datetime(2021, 7, 17, 18, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': 'b2e640d30e5afc7547263723a64ac1fec1b6d96f', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd63705bfc9ba16d9766d7c8c9b1bdca9e885eb7', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cdc85845718b8a916b37c6d426421cae829c28bc', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2dd0aff2f922868751d299d2ac6376eb506585af', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43434649baccb40e93afa01aa88ac89ecbb36567', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '617b25a78d159c558db943b7662fb24db8c23fd9', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ffcaec1a9a9944f918b7f707670bfecc50a9e4a', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff2d98b16c4d34edcf39076847daed97d060de71', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '021307c57289763847e3f3f59dda051ab1751d9e', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0083e00d3824833aea1de0062e84f2be97acf7e3', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}]",Kapil Bansal,42766576,kapilbansal.gbpecdelhi@gmail.com,User,,86,,19,50
655510403,[feature] Resilient sending: store data for later sending if offline #29 #31,Closes #29 ,True,34,https://api.github.com/repos/openwisp/openwrt-openwisp-monitoring/pulls/34,https://github.com/openwisp/openwrt-openwisp-monitoring/pull/34,closed,221,61,5,29,7,64,0,0,[],2021-05-27 23:07:40+00:00,2021-08-22 19:07:30+00:00,7502390.0,"86 days, 19:59:50","[{'comment_id': 663578921, 'comment_body': 'is it free or available memory?', 'comment_created': datetime.datetime(2021, 7, 5, 0, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 663579052, 'comment_body': 'what about `/tmp/openwisp/monitoring`?', 'comment_created': datetime.datetime(2021, 7, 5, 0, 33, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 664085388, 'comment_body': 'Free memory', 'comment_created': datetime.datetime(2021, 7, 5, 18, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 664085456, 'comment_body': 'I will change that', 'comment_created': datetime.datetime(2021, 7, 5, 18, 37, 4, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 665823326, 'comment_body': 'there\'s a problem with this: on modern systems it will always look like the free memory is almost nonexistent.\r\nLinux allocates almost the entire memory to the operating system, ready to be used if needed.\r\nThat\'s why on modern systems you will see that there\'s also another metric called ""available memory"".\r\nWe should try to use available memory and use free memory only if missing.\r\nOtherwise, we risk this work to be uneffective, because the daemon will think the memory is full and will not store the data. ', 'comment_created': datetime.datetime(2021, 7, 8, 2, 22, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 666527520, 'comment_body': 'My bad it is available memory. I mentioned free here as that memory used can be freed when needed :thinking: ', 'comment_created': datetime.datetime(2021, 7, 8, 21, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 666527755, 'comment_body': 'I take available memory here', 'comment_created': datetime.datetime(2021, 7, 8, 21, 24, 11, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 667646298, 'comment_body': 'You could use `ubus call system info` to get the information in one call\r\n\r\n```\r\nroot@st-dev-07 ~ # ubus call system info\r\n{\r\n        ""localtime"": 1626076905,\r\n        ""uptime"": 1443394,\r\n        ""load"": [\r\n                1760,\r\n                1728,\r\n                64\r\n        ],\r\n        ""memory"": {\r\n                ""total"": 4117020672,\r\n                ""free"": 3917463552,\r\n                ""shared"": 2035712,\r\n                ""buffered"": 33484800,\r\n                ""available"": 3958448128,\r\n                ""cached"": 62803968\r\n        },\r\n        ""swap"": {\r\n                ""total"": 0,\r\n                ""free"": 0\r\n        }\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 7, 12, 6, 2, 37, tzinfo=datetime.timezone.utc), 'commenter': 'feckert', 'type': 'User'}, {'comment_id': 668236150, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 7, 12, 20, 32, 59, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 676056147, 'comment_body': 'use uppercase var name please', 'comment_created': datetime.datetime(2021, 7, 24, 23, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 676056190, 'comment_body': 'use upepr case var name please', 'comment_created': datetime.datetime(2021, 7, 24, 23, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 678650521, 'comment_body': 'Sending SIGUSR1 signal once data is collected', 'comment_created': datetime.datetime(2021, 7, 28, 21, 3, 39, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 678651096, 'comment_body': 'Trapping send_data to ensure data is sent as soon as it is collected', 'comment_created': datetime.datetime(2021, 7, 28, 21, 4, 33, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 679506876, 'comment_body': 'I think we need to add some more info in the README to explain how the 2 processes work.', 'comment_created': datetime.datetime(2021, 7, 29, 21, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 682056808, 'comment_body': 'Made this change for openwisp-monitoring module.', 'comment_created': datetime.datetime(2021, 8, 3, 19, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685575477, 'comment_body': 'why container?', 'comment_created': datetime.datetime(2021, 8, 9, 22, 59, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685575852, 'comment_body': 'please move the comment above the line of code to avoid the line being too long', 'comment_created': datetime.datetime(2021, 8, 9, 23, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685575921, 'comment_body': 'always leave a space after the comment', 'comment_created': datetime.datetime(2021, 8, 9, 23, 0, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685576094, 'comment_body': ""if you're starting comments with lowercase letters be consistent and ensure the style of all comments is consistent "", 'comment_created': datetime.datetime(2021, 8, 9, 23, 1, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685576502, 'comment_body': 'can you use jsonfilter to get this? It should be available by default on OpenWRT and should result in being cleaner.', 'comment_created': datetime.datetime(2021, 8, 9, 23, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685576929, 'comment_body': 'wouldn\'t it be more readable if we had something like `MODE=""collect""` and `MODE=""send""`?', 'comment_created': datetime.datetime(2021, 8, 9, 23, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685578140, 'comment_body': ""why are you collecting the data before checking for the memory availability?\r\nIf the data is large and the memory is already at full capacity, isn't there's a chance the agent my crash here? In that case it would not be as robust as intended wouldn't it?"", 'comment_created': datetime.datetime(2021, 8, 9, 23, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685579674, 'comment_body': ""2 observations here:\r\n\r\n- isn't this value a constant which doesn't change in the loop?\r\n  if so, why define it inside loop, which is executed many times? Can't this be defined just once at the beginning of the function?\r\n- I think it can be renamed to `MAX_RETRIES`\r\n\r\nKeep in mind the same suggestion for any other variable which doesn't need to be in the loop, I see a few different ones here so please double check here and in any other loop.\r\n\r\nPlease also keep in mind that uppercase is generally used for constants which are defined at the beginning of the program and used in different places. For anything else defined only in specific functions, please use lowercase naming and flag them as [local variables](https://tldp.org/LDP/abs/html/localvar.html)."", 'comment_created': datetime.datetime(2021, 8, 9, 23, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685581734, 'comment_body': 'why are you adding 1 here, before any failure?\r\nIs this `FAILURES` variable actually a counter of how many attempts have been made? In that case I would name it `attempts`.', 'comment_created': datetime.datetime(2021, 8, 9, 23, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685582899, 'comment_body': 'please always leave a space from the beginning of the comment and keep the first case consistent with the other comments. Applies to any other comment.', 'comment_created': datetime.datetime(2021, 8, 9, 23, 18, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685583881, 'comment_body': ""we not use -eq instead of = for consistency with other sections? Let's choose one way of doing it and let's stick to it, however I personally prefer to use `==` instead of `=` because the single equal sign can be confused with assignment.\r\n\r\nApplies to all other boolean evaluations."", 'comment_created': datetime.datetime(2021, 8, 9, 23, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685584373, 'comment_body': 'I\'d use ""Retrying in $TIME seconds""', 'comment_created': datetime.datetime(2021, 8, 9, 23, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685584725, 'comment_body': 'what is 0.05, a percentage? Please make it explicit.', 'comment_created': datetime.datetime(2021, 8, 9, 23, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685585341, 'comment_body': 'suggestion:\r\n\r\nmaximum number of retries in case of failures to send data to the server, defaults to ``5``.\r\nin case the maximum number of retries is reached .... (link the section below so the user knows what happens in this case).', 'comment_created': datetime.datetime(2021, 8, 9, 23, 25, 15, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685585848, 'comment_body': 'This title is not very informative of what is being explained here.\r\n\r\nWe want to explain that this agent works with 2 processes, one for collecting and one for sending.\r\n\r\nWe could name this section ""Collecting vs sending"".', 'comment_created': datetime.datetime(2021, 8, 9, 23, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685590564, 'comment_body': 'Citing the server as being down is not a great example, the most common case is the OpenWRT device simply not being able to send the data for network connectivity issues.\r\n\r\nI think we could divide this section further and explain what happens in the most important cases, eg:\r\n\r\n1st heading: collecting vs sending\r\n\r\nIntro: this agent uses 2 different processes, one for sending data and one for collecting it.\r\nThis allows to handle failures in sending the data in a more flexible way because old data stored during network connectivity issues can be sent at the same time while new data is being collected: if old data has piled up for sending and takes several minutes to be uploaded, new data is collected without being delayed by the sending.\r\n\r\nSubheading 1: Collect mode\r\n\r\nIn this mode the agent is in charge of collecting data ...\r\nThe data is collected only if ...\r\nIf there is not enough memory ...\r\nOnce data is collected, a signal is sent to the other agent so that ...\r\n\r\nSubheading 2: Send mode\r\n\r\nIn this mode the agent .....\r\nIf sending fails .... explain retries...\r\nIf all attempts fail ...', 'comment_created': datetime.datetime(2021, 8, 9, 23, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685592086, 'comment_body': 'are you sure this is needed and are we sure this section of explainin how to select the packages with makemenu config is needed at all? The explanations above are enough in most cases, this seems redundant to me.', 'comment_created': datetime.datetime(2021, 8, 9, 23, 43, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 685835512, 'comment_body': ':grimacing: Fixed now', 'comment_created': datetime.datetime(2021, 8, 10, 9, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685849595, 'comment_body': 'Changing it to increase after failure', 'comment_created': datetime.datetime(2021, 8, 10, 9, 25, 16, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685858028, 'comment_body': ""`==` is not defined in strict POSIX. That's why I used single `=` as suggested by `shellcheck`.\r\n\r\nChanging `=` to -eq where integer comparisions are made for consistency."", 'comment_created': datetime.datetime(2021, 8, 10, 9, 36, 43, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685859516, 'comment_body': ""This was not, that's why I removed it :sweat_smile: "", 'comment_created': datetime.datetime(2021, 8, 10, 9, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685871056, 'comment_body': 'I added this section to make it consistent with `**openwisp-config** :thinking: ', 'comment_created': datetime.datetime(2021, 8, 10, 9, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685992915, 'comment_body': ""We also don't need to evaluate process id each time but in starting collect data will starts first before send data :thinking: "", 'comment_created': datetime.datetime(2021, 8, 10, 13, 0, 3, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 685993473, 'comment_body': 'Is there a way to improve this too? I tried searching for one but end in futile.', 'comment_created': datetime.datetime(2021, 8, 10, 13, 0, 42, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 686238361, 'comment_body': 'but the other process may be restarted', 'comment_created': datetime.datetime(2021, 8, 10, 18, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 687059363, 'comment_body': 'instead of logging an error, I suggest just echoing to standard error a message like ""The supplied mode is invalid, only collect and send are accepted.""', 'comment_created': datetime.datetime(2021, 8, 11, 18, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 687318850, 'comment_body': 'lol, I think it may be a good idea to remove it from there too then :grin: \r\n\r\nhey what do you think @nickberry17 @feckert, do you think this section to be useful at all?', 'comment_created': datetime.datetime(2021, 8, 12, 2, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 687319045, 'comment_body': ""at the moment I don't have ideas on how to further improve this."", 'comment_created': datetime.datetime(2021, 8, 12, 2, 21, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 687319240, 'comment_body': 'shouldn\'t it be ""helps to handle""?', 'comment_created': datetime.datetime(2021, 8, 12, 2, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 687319345, 'comment_body': '@nickberry17 your review of this text would be super helpful!', 'comment_created': datetime.datetime(2021, 8, 12, 2, 22, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 688780297, 'comment_body': 'I think this should be changed too.\r\n0 should be returned if case of success, else we should return 1', 'comment_created': datetime.datetime(2021, 8, 13, 21, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 688780818, 'comment_body': 'Added zeroes while sending data in url directly.', 'comment_created': datetime.datetime(2021, 8, 13, 21, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 688812908, 'comment_body': 'Changed', 'comment_created': datetime.datetime(2021, 8, 13, 22, 37, 44, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 691723012, 'comment_body': 'can we use -eq here too?', 'comment_created': datetime.datetime(2021, 8, 19, 2, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 691724430, 'comment_body': 'can we use -eq here too please?', 'comment_created': datetime.datetime(2021, 8, 19, 2, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 691724469, 'comment_body': 'can we use -eq here too please?', 'comment_created': datetime.datetime(2021, 8, 19, 2, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 692573647, 'comment_body': 'verbose_mode is still lowercase', 'comment_created': datetime.datetime(2021, 8, 20, 0, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 692579622, 'comment_body': '>If a signal is received from other agent\r\n\r\nfrom the other agent (if only one agent)\r\n\r\nor \r\n\r\nfrom another agent (if multiple other agents)', 'comment_created': datetime.datetime(2021, 8, 20, 0, 41, 14, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692579836, 'comment_body': '>for data file again\r\n\r\nfor the data file again', 'comment_created': datetime.datetime(2021, 8, 20, 0, 41, 56, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692580612, 'comment_body': '>exponential backoff\r\n\r\nan exponential backoff\r\n\r\n>until max retries are reached\r\n\r\nuntil `max_retries` is reached (refer to the variable directly)\r\n\r\nor \r\n\r\n""the maximum number of retries is reached"" (refer to what the variable represents)', 'comment_created': datetime.datetime(2021, 8, 20, 0, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692582796, 'comment_body': ' `-eq` is only for comparing numbers to numbers, but I think here you are still comparing the response code (which I think is a string) to the string ""200"".   So in that case using `=` makes sense here.   This is starting to smell like JavaScript isn\'t it?   See if it works by comparing it to `200` using `-eq` (it may).\r\n\r\nThe only problem with using a more type restrictive `-eq` operator is what happens when you compare it to something that\'s not a number?  `Out of range` is thrown, but it does also evaluate as false, though that extra output can interrupt your program.\r\n\r\n\r\n```\r\n#!/bin/sh\r\nx=""hello""\r\n\r\nif [ ""$x"" -eq 200 ];\r\nthen\r\n        echo ""yes""\r\nelse\r\n        echo ""no""\r\nfi\r\n```\r\n```\r\nsh: hello: out of range\r\nno\r\n```\r\n\r\nIt sounds like @devkapilbansal has a good understanding of it.  Going forward as a code style I suggest using `-eq` for numbers _iff_ numbers are being compared, and `=` for strings to minimise confusion about what we expect to happen.  What do you think @nemesisdesign ?', 'comment_created': datetime.datetime(2021, 8, 20, 0, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692587693, 'comment_body': 'Can you write this one out in long form to satisfy POSIX? You want it to be double the base seconds times number of `failures` squared, to achieve the exponential backoff, right?\r\n\r\n`$((BASE_SECONDS * 2 * (failures) * (failures)))`\r\n https://github.com/koalaman/shellcheck/wiki/SC3019 ', 'comment_created': datetime.datetime(2021, 8, 20, 1, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692590178, 'comment_body': '>in next cycle\r\n\r\nin the next cycle', 'comment_created': datetime.datetime(2021, 8, 20, 1, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692597444, 'comment_body': 'That would not work, `-eq` compares two numbers', 'comment_created': datetime.datetime(2021, 8, 20, 1, 39, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}, {'comment_id': 692629376, 'comment_body': 'I was trying to get exponent instead of square, i.e. 2^failures. Nvm, I use a cleaner way to do so.', 'comment_created': datetime.datetime(2021, 8, 20, 3, 19, 12, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 692630847, 'comment_body': 'Here, I use `=` beause in case of failure, error message will be there along with `response_code` which will be string. This is changed to `-eq` in #63 where error message is instead stored in a file.', 'comment_created': datetime.datetime(2021, 8, 20, 3, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 697826704, 'comment_body': 'Would it be better to replace the section with a GIF?\r\n\r\n![OpenWISP Package Compiling](https://user-images.githubusercontent.com/42766576/131209183-60b8308d-a283-43a7-bb3c-25fa3db9cfe5.gif)', 'comment_created': datetime.datetime(2021, 8, 28, 7, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'devkapilbansal', 'type': 'User'}, {'comment_id': 697882478, 'comment_body': 'Yes, is always good to have something visual :+1: \r\npelase upload the gif to a media branch (to keep the main branch lightweight).', 'comment_created': datetime.datetime(2021, 8, 28, 15, 19, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 697931103, 'comment_body': ""> Would it be better to replace the section with a GIF?\r\n> \r\n> ![OpenWISP Package Compiling](https://user-images.githubusercontent.com/42766576/131209183-60b8308d-a283-43a7-bb3c-25fa3db9cfe5.gif)\r\n\r\nI like the idea of a GIF, but it add a note saying it's not necessary to select all of those packages; only the one you need."", 'comment_created': datetime.datetime(2021, 8, 28, 23, 39, 19, tzinfo=datetime.timezone.utc), 'commenter': 'mips171', 'type': 'User'}]","[{'commit_sha': 'd0605887c36b2a8b0a6b4eb10be497b64b67b42e', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e9679f16dfe5814979dfffc0be5e377a8fb1a22', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9c292bdd58fdb752f99493a93cff0c63010b126', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c29b3a089330d59a235dfc00c28a7becf3d2006', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef8ea48760ac0316545f2548ac179573651ad32b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '599d96f8b296624d50b6a965d1e673f7d30c7c7f', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '546128dec0b7d891ae6bed4ad14ec7c0cc0f7a72', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c74a5e22913807b5bccd0f716d3c119217d873c', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04d4b60a34eb9be3697f82539928ddece036b541', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b19a6e78c82ddebda89be009dd3305a2d171a3bb', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6236cd771e7fb20dca9f59ca874cd3891b7b8a8d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3ff2355713619c216d783b0ce283eeb49a8dab8', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0069e7f117100a75626726d9cbb955d8270242e', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92eec8b043ac7d4cebc8561ab216ba5c5972b456', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5ecf404b769e244187fdf9e8d81d9519a0616c7', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ae51965f33cbf814747f214f802ed65a4889b08', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78f707b1e4d8825164d6a2642da119b8c808711a', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfc36a38f9847d53211b9792ea0e3acb74a5b81d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd4737801ad17c47bb388f9e23b41dc9305a12db7', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f11f9f13b9601c304ea64ac337b6a83c3f3cb59d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5cf0f304c0e82c9debc0aaabae0715c70006d9b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1f9cab8e85c8d44ddfe9194754e3ce56b9b99bb', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45033fd93bd83926d21b555d0148f24bfa0926f7', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f2cec3aea79a47657d71886bd488656aa81fc9b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dcbb87504cf1249649c7274819f6ed06adf997b', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '623ca633303292c9656e310fda9640189c38a9bb', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75ddd0fb13d161c71bdd79e198d7d2a302db4f01', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adc6f2f06be6e97517339aea39aeffc98b1c267e', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a04f2ba93d8e2008ad9e5d1f238a5e7b3d8340e', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}]",Kapil Bansal,42766576,kapilbansal.gbpecdelhi@gmail.com,User,,86,,19,50
707226551,[feature] Allow specify time of received timeseries data #298,"Closes #298

<!--
Before submitting a Pull Request, please make sure you have read
the OpenWISP Contributing Guidelines:
http://openwisp.io/docs/developer/contributing.html#how-to-commit-your-changes-properly
-->

Checks:

- [x] I have manually tested the proposed changes
- [x] I have written new test cases to avoid regressions (if necessary)
- [x] I have updated the documentation (e.g. README.rst)
",True,316,https://api.github.com/repos/openwisp/openwisp-monitoring/pulls/316,https://github.com/openwisp/openwisp-monitoring/pull/316,closed,170,31,10,10,3,4,0,0,[],2021-08-10 10:27:14+00:00,2021-09-19 16:55:30+00:00,3479296.0,"40 days, 6:28:16","[{'comment_id': 689965035, 'comment_body': 'what if a bogus time is supplied?\r\nPlease make sure 400 bad request is returned with a proper error message + a test.', 'comment_created': datetime.datetime(2021, 8, 17, 1, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 692575108, 'comment_body': ""I think we should pass this around as argument instead of using an attribute, it's an argument specified by the sender, it's really weird to set it as an attribute."", 'comment_created': datetime.datetime(2021, 8, 20, 0, 26, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 701518426, 'comment_body': ""please flag 'Incorrect time format' as translatable"", 'comment_created': datetime.datetime(2021, 9, 3, 1, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}, {'comment_id': 701519078, 'comment_body': 'The fact that use use `is_latest` in one place and `current` in the other does not convince me 100%.\r\n\r\nDid you think about this?\r\n\r\nAlso, please let\'s clarify what this line means, a user may not understand what ""whether the data is latest or not"", I think we should write something like ""whether the data has just been collected (latest data) or was collected previously and is being sent now due to network connectivity issues on the sender side"".', 'comment_created': datetime.datetime(2021, 9, 3, 1, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nemesifier', 'type': 'User'}]","[{'commit_sha': '7ce882c233d05635b90272fdf14ab595448a360d', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1c3f3075b9b68f5f8c6f4827bc886c7cc815eb0a', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39775942c4f9d23dbf9e425d7d5d10257d45bbc0', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d1a903e885aa23d8d93cda69ebfd9b452bc8b37', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd11715f0856127b17aa78331cd4353998a226a56', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '52747c63a7b479726b8eacf077d24e1a1b1cb592', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b5b6f865c8264c0517ea6d701f8677b644f5f80', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9a5bfc3426bbb012cc16413d8fdbc6209c32a339', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e07e740be4f9a8743612dbc7a02832176beb29d0', 'committer_username': 'nemesifier', 'committer_name': 'Federico Capoano', 'committer_email': 'f.capoano@openwisp.io', 'commit_date': datetime.datetime(2011, 6, 9, 22, 30, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8328c8308dfaceace428b1b7fd1f73ede551ed65', 'committer_username': 'devkapilbansal', 'committer_name': 'Kapil Bansal', 'committer_email': 'kapilbansal.gbpecdelhi@gmail.com', 'commit_date': datetime.datetime(2018, 8, 28, 8, 20, 6, tzinfo=datetime.timezone.utc)}]",Kapil Bansal,42766576,kapilbansal.gbpecdelhi@gmail.com,User,,86,,19,50

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
249025293,openwrt-openwisp-monitoring,openwisp/openwrt-openwisp-monitoring,Lua,20,22,11,12,111,15,6,2,"[{'id': 1112000752, 'number': 106, 'closed': datetime.datetime(2022, 11, 23, 19, 38, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 6, 16, 18, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1480788.0, 'time_delta': '17 days, 3:19:48', 'additions': 100, 'deletions': 4, 'state': 'closed'}, {'id': 1098207992, 'number': 104, 'closed': datetime.datetime(2022, 11, 23, 19, 41, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 25, 0, 31, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2574568.0, 'time_delta': '29 days, 19:09:28', 'additions': 21, 'deletions': 7, 'state': 'closed'}, {'id': 1097730781, 'number': 103, 'closed': datetime.datetime(2022, 12, 19, 22, 35, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 24, 16, 45, 2, tzinfo=datetime.timezone.utc), 'time_taken': 4859425.0, 'time_delta': '56 days, 5:50:25', 'additions': 9, 'deletions': 4, 'state': 'closed'}, {'id': 942111278, 'number': 96, 'closed': datetime.datetime(2022, 6, 1, 23, 32, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 19, 23, 35, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1123003.0, 'time_delta': '12 days, 23:56:43', 'additions': 42, 'deletions': 6, 'state': 'closed'}, {'id': 770653073, 'number': 77, 'closed': datetime.datetime(2022, 4, 19, 17, 32, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 15, 51, 27, tzinfo=datetime.timezone.utc), 'time_taken': 14607666.0, 'time_delta': '169 days, 1:41:06', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 758606289, 'number': 76, 'closed': None, 'created': datetime.datetime(2021, 10, 14, 18, 43, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 101, 'deletions': 114, 'state': 'open'}, {'id': 748900302, 'number': 73, 'closed': datetime.datetime(2021, 10, 4, 16, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 4, 12, 47, 15, tzinfo=datetime.timezone.utc), 'time_taken': 12825.0, 'time_delta': '3:33:45', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 746959555, 'number': 72, 'closed': datetime.datetime(2021, 10, 20, 2, 0, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 30, 18, 50, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1667411.0, 'time_delta': '19 days, 7:10:11', 'additions': 25, 'deletions': 16, 'state': 'closed'}, {'id': 733966706, 'number': 68, 'closed': datetime.datetime(2021, 9, 15, 1, 16, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 14, 19, 28, 6, tzinfo=datetime.timezone.utc), 'time_taken': 20898.0, 'time_delta': '5:48:18', 'additions': 3, 'deletions': 5, 'state': 'closed'}, {'id': 733951562, 'number': 67, 'closed': datetime.datetime(2021, 9, 19, 16, 27, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 14, 19, 4, 40, tzinfo=datetime.timezone.utc), 'time_taken': 422595.0, 'time_delta': '4 days, 21:23:15', 'additions': 13, 'deletions': 8, 'state': 'closed'}, {'id': 729848882, 'number': 66, 'closed': datetime.datetime(2021, 10, 1, 20, 3, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 8, 17, 38, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1995901.0, 'time_delta': '23 days, 2:25:01', 'additions': 140, 'deletions': 80, 'state': 'closed'}, {'id': 715295677, 'number': 63, 'closed': datetime.datetime(2021, 9, 3, 1, 16, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 17, 46, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1322994.0, 'time_delta': '15 days, 7:29:54', 'additions': 15, 'deletions': 6, 'state': 'closed'}, {'id': 712670099, 'number': 62, 'closed': datetime.datetime(2021, 9, 1, 14, 21, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 13, 23, 18, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1609396.0, 'time_delta': '18 days, 15:03:16', 'additions': 51, 'deletions': 49, 'state': 'closed'}, {'id': 707864690, 'number': 56, 'closed': datetime.datetime(2021, 8, 28, 15, 16, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 23, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1524668.0, 'time_delta': '17 days, 15:31:08', 'additions': 2327, 'deletions': 2463, 'state': 'closed'}, {'id': 707730078, 'number': 53, 'closed': datetime.datetime(2021, 9, 6, 15, 22, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 21, 30, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2310713.0, 'time_delta': '26 days, 17:51:53', 'additions': 363, 'deletions': 291, 'state': 'closed'}, {'id': 707619775, 'number': 52, 'closed': datetime.datetime(2021, 8, 12, 2, 14, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 19, 29, 4, tzinfo=datetime.timezone.utc), 'time_taken': 110750.0, 'time_delta': '1 day, 6:45:50', 'additions': 21, 'deletions': 1, 'state': 'closed'}, {'id': 706770720, 'number': 48, 'closed': datetime.datetime(2021, 8, 15, 21, 42, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 19, 12, 16, tzinfo=datetime.timezone.utc), 'time_taken': 527441.0, 'time_delta': '6 days, 2:30:41', 'additions': 32, 'deletions': 13, 'state': 'closed'}, {'id': 706717816, 'number': 47, 'closed': datetime.datetime(2021, 9, 19, 14, 59, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 17, 49, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3532234.0, 'time_delta': '40 days, 21:10:34', 'additions': 107, 'deletions': 79, 'state': 'closed'}, {'id': 689397772, 'number': 42, 'closed': datetime.datetime(2021, 7, 24, 23, 38, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 13, 21, 0, 20, tzinfo=datetime.timezone.utc), 'time_taken': 959881.0, 'time_delta': '11 days, 2:38:01', 'additions': 85, 'deletions': 38, 'state': 'closed'}, {'id': 679269204, 'number': 38, 'closed': datetime.datetime(2021, 6, 29, 1, 19, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 18, 17, 49, tzinfo=datetime.timezone.utc), 'time_taken': 25286.0, 'time_delta': '7:01:26', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 671825124, 'number': 37, 'closed': datetime.datetime(2021, 6, 16, 20, 33, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 19, 37, 20, tzinfo=datetime.timezone.utc), 'time_taken': 3390.0, 'time_delta': '0:56:30', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 655510403, 'number': 34, 'closed': datetime.datetime(2021, 8, 22, 19, 7, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 23, 7, 40, tzinfo=datetime.timezone.utc), 'time_taken': 7502390.0, 'time_delta': '86 days, 19:59:50', 'additions': 221, 'deletions': 61, 'state': 'closed'}, {'id': 650849531, 'number': 30, 'closed': datetime.datetime(2021, 7, 6, 2, 22, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 23, 20, 14, 26, tzinfo=datetime.timezone.utc), 'time_taken': 3737278.0, 'time_delta': '43 days, 6:07:58', 'additions': 595, 'deletions': 477, 'state': 'closed'}, {'id': 630077816, 'number': 26, 'closed': datetime.datetime(2021, 7, 20, 18, 15, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 4, 20, 31, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6644642.0, 'time_delta': '76 days, 21:44:02', 'additions': 3467, 'deletions': 583, 'state': 'closed'}, {'id': 607576737, 'number': 25, 'closed': datetime.datetime(2021, 6, 6, 23, 41, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 1, 18, 3, 57, tzinfo=datetime.timezone.utc), 'time_taken': 5722624.0, 'time_delta': '66 days, 5:37:04', 'additions': 1193, 'deletions': 102, 'state': 'closed'}]"
248636968,openwisp-monitoring,openwisp/openwisp-monitoring,Python,108,160,12,21,573,42,19,9,"[{'id': 740470997, 'number': 319, 'closed': datetime.datetime(2021, 9, 23, 17, 6, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 22, 13, 28, 42, tzinfo=datetime.timezone.utc), 'time_taken': 99465.0, 'time_delta': '1 day, 3:37:45', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 707226551, 'number': 316, 'closed': datetime.datetime(2021, 9, 19, 16, 55, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 10, 27, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3479296.0, 'time_delta': '40 days, 6:28:16', 'additions': 170, 'deletions': 31, 'state': 'closed'}, {'id': 655360356, 'number': 302, 'closed': datetime.datetime(2022, 4, 25, 15, 28, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 21, 10, 33, tzinfo=datetime.timezone.utc), 'time_taken': 28750653.0, 'time_delta': '332 days, 18:17:33', 'additions': 479, 'deletions': 154, 'state': 'closed'}, {'id': 611847902, 'number': 292, 'closed': datetime.datetime(2021, 4, 16, 21, 7, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 19, 45, 49, tzinfo=datetime.timezone.utc), 'time_taken': 696098.0, 'time_delta': '8 days, 1:21:38', 'additions': 42, 'deletions': 0, 'state': 'closed'}, {'id': 596879468, 'number': 279, 'closed': datetime.datetime(2021, 3, 20, 15, 17, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 21, 10, 46, tzinfo=datetime.timezone.utc), 'time_taken': 65201.0, 'time_delta': '18:06:41', 'additions': 151, 'deletions': 174, 'state': 'closed'}, {'id': 563611154, 'number': 267, 'closed': datetime.datetime(2021, 1, 28, 22, 50, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 28, 22, 29, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1237.0, 'time_delta': '0:20:37', 'additions': 3, 'deletions': 7, 'state': 'closed'}, {'id': 555926517, 'number': 262, 'closed': datetime.datetime(2021, 1, 20, 2, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 15, 20, 19, 12, tzinfo=datetime.timezone.utc), 'time_taken': 368328.0, 'time_delta': '4 days, 6:18:48', 'additions': 125, 'deletions': 95, 'state': 'closed'}, {'id': 542613442, 'number': 256, 'closed': datetime.datetime(2020, 12, 18, 15, 42, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 18, 15, 24, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1056.0, 'time_delta': '0:17:36', 'additions': 0, 'deletions': 312, 'state': 'closed'}, {'id': 521265122, 'number': 251, 'closed': datetime.datetime(2020, 12, 10, 1, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 15, 21, 48, 59, tzinfo=datetime.timezone.utc), 'time_taken': 2086467.0, 'time_delta': '24 days, 3:34:27', 'additions': 135, 'deletions': 233, 'state': 'closed'}, {'id': 520525740, 'number': 250, 'closed': datetime.datetime(2020, 12, 15, 23, 42, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 13, 11, 30, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2808727.0, 'time_delta': '32 days, 12:12:07', 'additions': 3, 'deletions': 4, 'state': 'closed'}]"
