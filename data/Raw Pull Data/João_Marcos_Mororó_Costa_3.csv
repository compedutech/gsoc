pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
395042850,Fix spectral illuminance to CIE XYZ conversions,"Hey guys, this is what I was working at before I stopped last year ...
This basically fix the green/blue tints when physically rendering sky:

![appleseed](https://user-images.githubusercontent.com/43460229/77813852-bf917480-708a-11ea-98e6-09817a2fff77.png)

This also improve conversion from cieXYZ to spectrum.

I changed the cornell box light radiance to the one used in: https://www.graphics.cornell.edu/online/box/data.html, I don't know where does your current data come from. But it got I bit reddish after the change:

![1_appleseed_new](https://user-images.githubusercontent.com/43460229/77814341-f1a4d580-708e-11ea-9f33-a284c4db232e.png)

Using data from https://www.graphics.cornell.edu/online/box/data.html,:
![1_appleseed_new_original_values](https://user-images.githubusercontent.com/43460229/77814361-1bf69300-708f-11ea-96ee-42af7d7a226f.png)",True,2811,https://api.github.com/repos/appleseedhq/appleseed/pulls/2811,https://github.com/appleseedhq/appleseed/pull/2811,closed,437,345,70,7,17,61,1,0,[{'name': 'PR | Squash'}],2020-03-28 03:59:58+00:00,2020-06-13 14:24:06+00:00,6690248.0,"77 days, 10:24:08","[{'comment_id': 399618562, 'comment_body': ""In some cases like this one. I couldn't tell for sure if it was an emission spectrum of a reflective spectrum. I was hoping to get some help, so I wouldn't need to dig the source code too much. When I didn't know, I let reflectance, this way it keeps the same as before."", 'comment_created': datetime.datetime(2020, 3, 28, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 406649555, 'comment_body': 'I think we should consider this an emission since loosely speaking, it produces ""colors"" that are directly visible ""on screen"".', 'comment_created': datetime.datetime(2020, 4, 10, 7, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654032, 'comment_body': 'Constants are spelled in CamelCase: `NormalizationCIE19312Deg`, or even better: `NormalizationCIECMF19312Deg`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654862, 'comment_body': '*SIMD*', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654892, 'comment_body': 'Insert another blank line, block comments are always preceded by two blank lines.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655013, 'comment_body': 'Mark `explicit`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655072, 'comment_body': '`spectral_reflectance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655078, 'comment_body': '`spectrum_illuminance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655105, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655269, 'comment_body': ""Instead of hardcoding the use of `XYZCMFCIE19312Deg`, it should be set in `LightingConditions` like it's done for `spectrum_reflectance_to_ciexyz()`."", 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655294, 'comment_body': 'This normalization factor should be baked into the CMF function stored in `LightingConditions`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656440, 'comment_body': ""I don't really understand what's the difference between this code and `spectrum_reflectance_to_ciexyz()` when `LightingConditions::m_cmf` is set to `XYZCMFCIE19312Deg` (which is the case by default in the renderer), apart from the normalization factor."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656662, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656700, 'comment_body': 'CIE is an acronym and thus should always be spelled in upper case.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656709, 'comment_body': 'Two blank lines before block comments.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656722, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656743, 'comment_body': 'Just:\r\n\r\n    const SIMDColorMatching XYZCMFCIE19312DegSIMD(XYZCMFCIE19312Deg);', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656757, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656952, 'comment_body': ""Wrap `if` body in curly braces if it's longer than one line."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656980, 'comment_body': 'Make arg const.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 431012490, 'comment_body': 'In spectrum_reflectance_to_ciexyz() we multiply the reflectance spectrum by an illuminant.\r\nA reflectance spectrum is not directly converted to another color space. We convert a reflected spectrum that we get when the reflectance spectrum is illuminated by a certain illuminant, d65 by default.', 'comment_created': datetime.datetime(2020, 5, 27, 10, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431019952, 'comment_body': 'spectral_illuminance_to_ciexyz()?', 'comment_created': datetime.datetime(2020, 5, 27, 10, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431023797, 'comment_body': ""We should rename LightningCoditions then. Since spectral illuminance doesn't need any lighting condition."", 'comment_created': datetime.datetime(2020, 5, 27, 10, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432487534, 'comment_body': ""That's a good change but it obscures the main changes of this PR. If possible, I would suggest to split this into its own commit."", 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432487691, 'comment_body': 'If the enum is scoped, the `InputFormat` prefixes become redundant and should be removed.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432491681, 'comment_body': ""it won't compile"", 'comment_created': datetime.datetime(2020, 5, 29, 13, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432831434, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831453, 'comment_body': 'Remove extra space after type.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831460, 'comment_body': 'End full line comments with periods.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831484, 'comment_body': 'Order alphabetically.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831529, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831631, 'comment_body': 'Choose your casing: either ""Standard Color Matching Functions"" or ""Standard color matching functions"".', 'comment_created': datetime.datetime(2020, 5, 30, 10, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831727, 'comment_body': 'The previous comment stated the use of CIE 1964 10-deg CMFs, now your comments states the use of CIE 1931 2-deg CMFs. Did you change the standard lighting conditions?', 'comment_created': datetime.datetime(2020, 5, 30, 10, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831762, 'comment_body': ""Regression, you're now computing luminance on a CIE XYZ triplet. Please double-check the rest of the PR for similar regressions (because I assume they may have been introduced with global search & replace operations)."", 'comment_created': datetime.datetime(2020, 5, 30, 10, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831837, 'comment_body': 'its -> their', 'comment_created': datetime.datetime(2020, 5, 30, 10, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831888, 'comment_body': 'It should be `ColorMatchingFunctions` (plural). Comments should also use the plural form.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831901, 'comment_body': 'Align arguments with neighboring functions.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831969, 'comment_body': ""IMHO the CMFs should be part of `LightingConditions`. Don't you think?"", 'comment_created': datetime.datetime(2020, 5, 30, 10, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432832632, 'comment_body': 'The comment was wrong', 'comment_created': datetime.datetime(2020, 5, 30, 11, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 436366997, 'comment_body': 'Yes absolutely :)', 'comment_created': datetime.datetime(2020, 6, 7, 14, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367208, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367221, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367280, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367298, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367368, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367373, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367500, 'comment_body': ""I'm not sure the comment here is correct, or at least it's not complete as it doesn't seem to describe what `m_cmf_illuminance` is."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367579, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367828, 'comment_body': 'Make argument `const`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367853, 'comment_body': 'Wrap into anonymous namespace.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368046, 'comment_body': ""Add a `// todo:` because this isn't correct when picking a color for an emitter."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368109, 'comment_body': 'Update case name: `SpectralReflectanceToCIEXYZ`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368166, 'comment_body': 'Update test case name.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368962, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369024, 'comment_body': 'Nice catch!', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369053, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369172, 'comment_body': 'This line can be moved out of the `if`...', 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369205, 'comment_body': ""...since it's the same as this one."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369443, 'comment_body': 'Fix indentation (check the previous function for how to indent such code).', 'comment_created': datetime.datetime(2020, 6, 7, 14, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369466, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436370020, 'comment_body': 'Sorry about that. This comment was for the normalizer. I forgot to change it. ', 'comment_created': datetime.datetime(2020, 6, 7, 14, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}]","[{'commit_sha': '5e84983fa76cba3e168761875357624f9c32fcc4', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92154cc7cce61d35e502ffca5ec1586c963bb550', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95ef2b7fd64a6ec09038c3935b72f5efecfcc48d', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8dd28b4e2247d4250deb82843ff68de4aa33fe', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966f88cd017e54e18dfa66ed4765f6e2bddecc9e', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a9e95c73a6131c24154fba08042cd2585fbc968', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2951cfc2c0654792edbfae7d63dceb534bb29d', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
434236819,Fix compilation when spectral support is disabled,"Fix compilation error pointed by Mango3.

> appleseed-master fails to compile in RGB mode but compiles fine in spectral mode. In the RGBSpectrum class some new methods you introduced in the DynamicSpectrum class e.g. illuminance_to_rgb, reflectance_to_rgb are not available and compilation give errors.",True,2873,https://api.github.com/repos/appleseedhq/appleseed/pulls/2873,https://github.com/appleseedhq/appleseed/pull/2873,closed,28,7,1,1,0,0,0,0,[],2020-06-15 01:23:03+00:00,2020-06-22 07:06:41+00:00,625418.0,"7 days, 5:43:38",[],"[{'commit_sha': '0202ed831d399da58983da7183e9929c922e252c', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
427644236,Sun position algorithm,Draft of sun position implementation.,False,2870,https://api.github.com/repos/appleseedhq/appleseed/pulls/2870,https://github.com/appleseedhq/appleseed/pull/2870,open,628,0,6,4,1,14,0,0,[],2020-06-04 07:30:15+00:00,,0.0,,"[{'comment_id': 443359507, 'comment_body': 'Revert indentation changes.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443359542, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 16, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443359666, 'comment_body': '`bind_sun_positioner` maybe?', 'comment_created': datetime.datetime(2020, 6, 22, 7, 16, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443359770, 'comment_body': ""Don't commit this file."", 'comment_created': datetime.datetime(2020, 6, 22, 7, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443360208, 'comment_body': ""That doesn't look correct, the order of initialization was correct before and cannot be changed."", 'comment_created': datetime.datetime(2020, 6, 22, 7, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443360311, 'comment_body': 'Fix formatting and indentation.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443360363, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 18, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443360474, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 18, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443360800, 'comment_body': ""That simply won't work. This method _must_ be defined in the cpp file, otherwise whoever includes that header file gets its own implementation of `release()` which defeats the very purpose of this mechanism."", 'comment_created': datetime.datetime(2020, 6, 22, 7, 19, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443360943, 'comment_body': 'One blank line too many here.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 19, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443361031, 'comment_body': 'One blank line too many.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443361118, 'comment_body': 'Typo + formatting.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443361384, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 22, 7, 20, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 443494981, 'comment_body': 'Sorry, this shouldn’t be here. I forgot to remove it .', 'comment_created': datetime.datetime(2020, 6, 22, 11, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}]","[{'commit_sha': '1aaa93c9ded0301d4d5a79ce10eac06a6e6a37dd', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b203c666028f9bef6639a96c370f6117dfca874a', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '519e8759e1f34fb85d048bafc578147474befef8', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b22ee1a5116c6d9e3801b21a503fbf6ebe8600f0', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
422147725,Add sun disc.,"This is a draft because https://github.com/appleseedhq/appleseed/pull/2811 is still open.
",False,2866,https://api.github.com/repos/appleseedhq/appleseed/pulls/2866,https://github.com/appleseedhq/appleseed/pull/2866,open,35153,634,15,8,0,39,0,0,[],2020-05-22 21:38:04+00:00,,0.0,,"[{'comment_id': 447748920, 'comment_body': 'Comment needs to be updated.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 55, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447749245, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447749629, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 56, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447750114, 'comment_body': 'Remove blank line.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447750344, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 30, 14, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447751068, 'comment_body': ""This is problematic as the cost scales lineary with the number of lights. Moreover, the code isn't complete: it won't take into account lights in nested assemblies.\r\n\r\nMake `light` const."", 'comment_created': datetime.datetime(2020, 6, 30, 14, 57, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447751348, 'comment_body': ""`light_ptr` doesn't bring any value, it can be eliminated."", 'comment_created': datetime.datetime(2020, 6, 30, 14, 58, 20, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447755983, 'comment_body': ""The direction in shading rays should always be normalized, if I'm not mistaken."", 'comment_created': datetime.datetime(2020, 6, 30, 15, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447756229, 'comment_body': 'Why do you need a temporary variable?', 'comment_created': datetime.datetime(2020, 6, 30, 15, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447756374, 'comment_body': 'It should be `shade_lights()` (plural).', 'comment_created': datetime.datetime(2020, 6, 30, 15, 4, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447756850, 'comment_body': 'Why is this header required? Was it missing before?', 'comment_created': datetime.datetime(2020, 6, 30, 15, 5, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447757448, 'comment_body': ""That's a better way to iterate over all lights."", 'comment_created': datetime.datetime(2020, 6, 30, 15, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447759005, 'comment_body': ""We shouldn't clamp the intensity of each individual light, rather we should clamp the sum of all lights + the environment."", 'comment_created': datetime.datetime(2020, 6, 30, 15, 8, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447759783, 'comment_body': ""You're returning a copy of the vector, this is crazily expensive."", 'comment_created': datetime.datetime(2020, 6, 30, 15, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447760026, 'comment_body': 'Remove word ""Space"".', 'comment_created': datetime.datetime(2020, 6, 30, 15, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447760293, 'comment_body': ""Why is this necessary? Most likely it isn't, remove."", 'comment_created': datetime.datetime(2020, 6, 30, 15, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447760639, 'comment_body': 'What are ""semi-physical"" light sources?', 'comment_created': datetime.datetime(2020, 6, 30, 15, 10, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447761598, 'comment_body': 'Visibility -> visible, both in the param name and variable name.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447761880, 'comment_body': 'Remove blank line.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 12, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447763497, 'comment_body': 'Could you explain this change?', 'comment_created': datetime.datetime(2020, 6, 30, 15, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447763709, 'comment_body': 'Typo', 'comment_created': datetime.datetime(2020, 6, 30, 15, 14, 41, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447763844, 'comment_body': 'We spell constants in CamelCase.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447764094, 'comment_body': 'Wrap multi-line `if` body in curly braces.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 15, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447764419, 'comment_body': 'Is there a reference for this code? Paper name, or equation number?', 'comment_created': datetime.datetime(2020, 6, 30, 15, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447764938, 'comment_body': '`std::pow(distance_to_center, 2.0f)` is just `square(distance_to_center)`, which is considerably faster to compute.\r\n\r\nWould directly passing distance_to_center^2 make sense?', 'comment_created': datetime.datetime(2020, 6, 30, 15, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447765908, 'comment_body': ""Not sure to understand what's going on here. Seems wrong."", 'comment_created': datetime.datetime(2020, 6, 30, 15, 17, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447766045, 'comment_body': 'Make const.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447766351, 'comment_body': 'Typo', 'comment_created': datetime.datetime(2020, 6, 30, 15, 18, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447766536, 'comment_body': 'If everything is done in double precision here, you should continue doing so.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447769136, 'comment_body': 'Just ""Visible"" seems clearer.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447769209, 'comment_body': '`visible`', 'comment_created': datetime.datetime(2020, 6, 30, 15, 21, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447769449, 'comment_body': 'Prefer `true` and `false` for boolean values.', 'comment_created': datetime.datetime(2020, 6, 30, 15, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 447769947, 'comment_body': 'Typo', 'comment_created': datetime.datetime(2020, 6, 30, 15, 22, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 449736826, 'comment_body': 'This was to shift the sun but should be done after we compute sun radiance.', 'comment_created': datetime.datetime(2020, 7, 4, 4, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 449736855, 'comment_body': 'I am changing this value', 'comment_created': datetime.datetime(2020, 7, 4, 4, 13, 27, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 449737052, 'comment_body': 'it does make sense, but does it make any difference?', 'comment_created': datetime.datetime(2020, 7, 4, 4, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 449737124, 'comment_body': ""Add the paper, not sure if it's the best way to add it though."", 'comment_created': datetime.datetime(2020, 7, 4, 4, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 450642474, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 7, 7, 6, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 450642615, 'comment_body': '*binded* -> *bound*\r\n\r\nTerminate full line comments with a period.', 'comment_created': datetime.datetime(2020, 7, 7, 6, 41, 47, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}]","[{'commit_sha': '39b94c675b7058cdf1477031ded926afffd4343d', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc408e32fb673fb87bfcefcb7bf192e5cf1b0a38', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd43427ee4f588a5c1137e05bb57b3f5f1a4f994', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dcca7b373b4e7fa739ff6dbadc9496910c1d764', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b3a1637819f0408f136c1c90cba8d442018abf1', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4add97905046ae8da60abee14bec60355ea2ebf6', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fae2f15235cc03872b8518c5c923d8a56bb089e', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c921d6f702f23fc9a202f86f347ae2e6c6688504', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
438799337,Add sun positioning algorithm.,Make https://github.com/appleseedhq/appleseed/pull/2870 works in blenderseed.,False,518,https://api.github.com/repos/appleseedhq/blenderseed/pulls/518,https://github.com/appleseedhq/blenderseed/pull/518,open,123,13,3,1,0,1,0,0,[],2020-06-23 20:23:09+00:00,,0.0,,"[{'comment_id': 525200472, 'comment_body': ""For the above parameters I would add in some kind of appleseed prefix, such as 'as_' in order to avoid potential conflict with another addon.  Such things have happened in the past."", 'comment_created': datetime.datetime(2020, 11, 17, 14, 33, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jdent02', 'type': 'User'}]","[{'commit_sha': '2e4be51365ba7b67e6685281ffe4614d302200c3', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
440346335,Add sun positioner.,Don't review it yet.,False,365,https://api.github.com/repos/appleseedhq/appleseed-max/pulls/365,https://github.com/appleseedhq/appleseed-max/pull/365,open,613,87,19,1,0,0,0,0,[],2020-06-26 02:24:13+00:00,,0.0,,[],"[{'commit_sha': '3dd3cc5497eed0de0bac29b106b047ac94bf3e50', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
438914197,Add solar positional algorithm.,,False,235,https://api.github.com/repos/appleseedhq/appleseed-maya/pulls/235,https://github.com/appleseedhq/appleseed-maya/pull/235,open,315,28,4,2,0,0,0,0,[],2020-06-24 01:59:40+00:00,,0.0,,[],"[{'commit_sha': '5104bc833e44dd3bed24ce763780699debfb299a', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '267d747d56b10fea716d014a6952e2a3de91b69c', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
395042850,Fix spectral illuminance to CIE XYZ conversions,"Hey guys, this is what I was working at before I stopped last year ...
This basically fix the green/blue tints when physically rendering sky:

![appleseed](https://user-images.githubusercontent.com/43460229/77813852-bf917480-708a-11ea-98e6-09817a2fff77.png)

This also improve conversion from cieXYZ to spectrum.

I changed the cornell box light radiance to the one used in: https://www.graphics.cornell.edu/online/box/data.html, I don't know where does your current data come from. But it got I bit reddish after the change:

![1_appleseed_new](https://user-images.githubusercontent.com/43460229/77814341-f1a4d580-708e-11ea-9f33-a284c4db232e.png)

Using data from https://www.graphics.cornell.edu/online/box/data.html,:
![1_appleseed_new_original_values](https://user-images.githubusercontent.com/43460229/77814361-1bf69300-708f-11ea-96ee-42af7d7a226f.png)",True,2811,https://api.github.com/repos/appleseedhq/appleseed/pulls/2811,https://github.com/appleseedhq/appleseed/pull/2811,closed,437,345,70,7,17,61,1,0,[{'name': 'PR | Squash'}],2020-03-28 03:59:58+00:00,2020-06-13 14:24:06+00:00,6690248.0,"77 days, 10:24:08","[{'comment_id': 399618562, 'comment_body': ""In some cases like this one. I couldn't tell for sure if it was an emission spectrum of a reflective spectrum. I was hoping to get some help, so I wouldn't need to dig the source code too much. When I didn't know, I let reflectance, this way it keeps the same as before."", 'comment_created': datetime.datetime(2020, 3, 28, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 406649555, 'comment_body': 'I think we should consider this an emission since loosely speaking, it produces ""colors"" that are directly visible ""on screen"".', 'comment_created': datetime.datetime(2020, 4, 10, 7, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654032, 'comment_body': 'Constants are spelled in CamelCase: `NormalizationCIE19312Deg`, or even better: `NormalizationCIECMF19312Deg`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654862, 'comment_body': '*SIMD*', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654892, 'comment_body': 'Insert another blank line, block comments are always preceded by two blank lines.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655013, 'comment_body': 'Mark `explicit`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655072, 'comment_body': '`spectral_reflectance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655078, 'comment_body': '`spectrum_illuminance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655105, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655269, 'comment_body': ""Instead of hardcoding the use of `XYZCMFCIE19312Deg`, it should be set in `LightingConditions` like it's done for `spectrum_reflectance_to_ciexyz()`."", 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655294, 'comment_body': 'This normalization factor should be baked into the CMF function stored in `LightingConditions`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656440, 'comment_body': ""I don't really understand what's the difference between this code and `spectrum_reflectance_to_ciexyz()` when `LightingConditions::m_cmf` is set to `XYZCMFCIE19312Deg` (which is the case by default in the renderer), apart from the normalization factor."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656662, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656700, 'comment_body': 'CIE is an acronym and thus should always be spelled in upper case.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656709, 'comment_body': 'Two blank lines before block comments.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656722, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656743, 'comment_body': 'Just:\r\n\r\n    const SIMDColorMatching XYZCMFCIE19312DegSIMD(XYZCMFCIE19312Deg);', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656757, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656952, 'comment_body': ""Wrap `if` body in curly braces if it's longer than one line."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656980, 'comment_body': 'Make arg const.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 431012490, 'comment_body': 'In spectrum_reflectance_to_ciexyz() we multiply the reflectance spectrum by an illuminant.\r\nA reflectance spectrum is not directly converted to another color space. We convert a reflected spectrum that we get when the reflectance spectrum is illuminated by a certain illuminant, d65 by default.', 'comment_created': datetime.datetime(2020, 5, 27, 10, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431019952, 'comment_body': 'spectral_illuminance_to_ciexyz()?', 'comment_created': datetime.datetime(2020, 5, 27, 10, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431023797, 'comment_body': ""We should rename LightningCoditions then. Since spectral illuminance doesn't need any lighting condition."", 'comment_created': datetime.datetime(2020, 5, 27, 10, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432487534, 'comment_body': ""That's a good change but it obscures the main changes of this PR. If possible, I would suggest to split this into its own commit."", 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432487691, 'comment_body': 'If the enum is scoped, the `InputFormat` prefixes become redundant and should be removed.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432491681, 'comment_body': ""it won't compile"", 'comment_created': datetime.datetime(2020, 5, 29, 13, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432831434, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831453, 'comment_body': 'Remove extra space after type.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831460, 'comment_body': 'End full line comments with periods.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831484, 'comment_body': 'Order alphabetically.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831529, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831631, 'comment_body': 'Choose your casing: either ""Standard Color Matching Functions"" or ""Standard color matching functions"".', 'comment_created': datetime.datetime(2020, 5, 30, 10, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831727, 'comment_body': 'The previous comment stated the use of CIE 1964 10-deg CMFs, now your comments states the use of CIE 1931 2-deg CMFs. Did you change the standard lighting conditions?', 'comment_created': datetime.datetime(2020, 5, 30, 10, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831762, 'comment_body': ""Regression, you're now computing luminance on a CIE XYZ triplet. Please double-check the rest of the PR for similar regressions (because I assume they may have been introduced with global search & replace operations)."", 'comment_created': datetime.datetime(2020, 5, 30, 10, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831837, 'comment_body': 'its -> their', 'comment_created': datetime.datetime(2020, 5, 30, 10, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831888, 'comment_body': 'It should be `ColorMatchingFunctions` (plural). Comments should also use the plural form.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831901, 'comment_body': 'Align arguments with neighboring functions.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831969, 'comment_body': ""IMHO the CMFs should be part of `LightingConditions`. Don't you think?"", 'comment_created': datetime.datetime(2020, 5, 30, 10, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432832632, 'comment_body': 'The comment was wrong', 'comment_created': datetime.datetime(2020, 5, 30, 11, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 436366997, 'comment_body': 'Yes absolutely :)', 'comment_created': datetime.datetime(2020, 6, 7, 14, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367208, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367221, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367280, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367298, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367368, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367373, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367500, 'comment_body': ""I'm not sure the comment here is correct, or at least it's not complete as it doesn't seem to describe what `m_cmf_illuminance` is."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367579, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367828, 'comment_body': 'Make argument `const`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367853, 'comment_body': 'Wrap into anonymous namespace.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368046, 'comment_body': ""Add a `// todo:` because this isn't correct when picking a color for an emitter."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368109, 'comment_body': 'Update case name: `SpectralReflectanceToCIEXYZ`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368166, 'comment_body': 'Update test case name.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368962, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369024, 'comment_body': 'Nice catch!', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369053, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369172, 'comment_body': 'This line can be moved out of the `if`...', 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369205, 'comment_body': ""...since it's the same as this one."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369443, 'comment_body': 'Fix indentation (check the previous function for how to indent such code).', 'comment_created': datetime.datetime(2020, 6, 7, 14, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369466, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436370020, 'comment_body': 'Sorry about that. This comment was for the normalizer. I forgot to change it. ', 'comment_created': datetime.datetime(2020, 6, 7, 14, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}]","[{'commit_sha': '5e84983fa76cba3e168761875357624f9c32fcc4', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92154cc7cce61d35e502ffca5ec1586c963bb550', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95ef2b7fd64a6ec09038c3935b72f5efecfcc48d', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8dd28b4e2247d4250deb82843ff68de4aa33fe', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966f88cd017e54e18dfa66ed4765f6e2bddecc9e', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a9e95c73a6131c24154fba08042cd2585fbc968', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2951cfc2c0654792edbfae7d63dceb534bb29d', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
395042850,Fix spectral illuminance to CIE XYZ conversions,"Hey guys, this is what I was working at before I stopped last year ...
This basically fix the green/blue tints when physically rendering sky:

![appleseed](https://user-images.githubusercontent.com/43460229/77813852-bf917480-708a-11ea-98e6-09817a2fff77.png)

This also improve conversion from cieXYZ to spectrum.

I changed the cornell box light radiance to the one used in: https://www.graphics.cornell.edu/online/box/data.html, I don't know where does your current data come from. But it got I bit reddish after the change:

![1_appleseed_new](https://user-images.githubusercontent.com/43460229/77814341-f1a4d580-708e-11ea-9f33-a284c4db232e.png)

Using data from https://www.graphics.cornell.edu/online/box/data.html,:
![1_appleseed_new_original_values](https://user-images.githubusercontent.com/43460229/77814361-1bf69300-708f-11ea-96ee-42af7d7a226f.png)",True,2811,https://api.github.com/repos/appleseedhq/appleseed/pulls/2811,https://github.com/appleseedhq/appleseed/pull/2811,closed,437,345,70,7,17,61,1,0,[{'name': 'PR | Squash'}],2020-03-28 03:59:58+00:00,2020-06-13 14:24:06+00:00,6690248.0,"77 days, 10:24:08","[{'comment_id': 399618562, 'comment_body': ""In some cases like this one. I couldn't tell for sure if it was an emission spectrum of a reflective spectrum. I was hoping to get some help, so I wouldn't need to dig the source code too much. When I didn't know, I let reflectance, this way it keeps the same as before."", 'comment_created': datetime.datetime(2020, 3, 28, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 406649555, 'comment_body': 'I think we should consider this an emission since loosely speaking, it produces ""colors"" that are directly visible ""on screen"".', 'comment_created': datetime.datetime(2020, 4, 10, 7, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654032, 'comment_body': 'Constants are spelled in CamelCase: `NormalizationCIE19312Deg`, or even better: `NormalizationCIECMF19312Deg`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654862, 'comment_body': '*SIMD*', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654892, 'comment_body': 'Insert another blank line, block comments are always preceded by two blank lines.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655013, 'comment_body': 'Mark `explicit`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655072, 'comment_body': '`spectral_reflectance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655078, 'comment_body': '`spectrum_illuminance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655105, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655269, 'comment_body': ""Instead of hardcoding the use of `XYZCMFCIE19312Deg`, it should be set in `LightingConditions` like it's done for `spectrum_reflectance_to_ciexyz()`."", 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655294, 'comment_body': 'This normalization factor should be baked into the CMF function stored in `LightingConditions`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656440, 'comment_body': ""I don't really understand what's the difference between this code and `spectrum_reflectance_to_ciexyz()` when `LightingConditions::m_cmf` is set to `XYZCMFCIE19312Deg` (which is the case by default in the renderer), apart from the normalization factor."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656662, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656700, 'comment_body': 'CIE is an acronym and thus should always be spelled in upper case.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656709, 'comment_body': 'Two blank lines before block comments.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656722, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656743, 'comment_body': 'Just:\r\n\r\n    const SIMDColorMatching XYZCMFCIE19312DegSIMD(XYZCMFCIE19312Deg);', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656757, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656952, 'comment_body': ""Wrap `if` body in curly braces if it's longer than one line."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656980, 'comment_body': 'Make arg const.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 431012490, 'comment_body': 'In spectrum_reflectance_to_ciexyz() we multiply the reflectance spectrum by an illuminant.\r\nA reflectance spectrum is not directly converted to another color space. We convert a reflected spectrum that we get when the reflectance spectrum is illuminated by a certain illuminant, d65 by default.', 'comment_created': datetime.datetime(2020, 5, 27, 10, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431019952, 'comment_body': 'spectral_illuminance_to_ciexyz()?', 'comment_created': datetime.datetime(2020, 5, 27, 10, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431023797, 'comment_body': ""We should rename LightningCoditions then. Since spectral illuminance doesn't need any lighting condition."", 'comment_created': datetime.datetime(2020, 5, 27, 10, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432487534, 'comment_body': ""That's a good change but it obscures the main changes of this PR. If possible, I would suggest to split this into its own commit."", 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432487691, 'comment_body': 'If the enum is scoped, the `InputFormat` prefixes become redundant and should be removed.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432491681, 'comment_body': ""it won't compile"", 'comment_created': datetime.datetime(2020, 5, 29, 13, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432831434, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831453, 'comment_body': 'Remove extra space after type.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831460, 'comment_body': 'End full line comments with periods.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831484, 'comment_body': 'Order alphabetically.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831529, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831631, 'comment_body': 'Choose your casing: either ""Standard Color Matching Functions"" or ""Standard color matching functions"".', 'comment_created': datetime.datetime(2020, 5, 30, 10, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831727, 'comment_body': 'The previous comment stated the use of CIE 1964 10-deg CMFs, now your comments states the use of CIE 1931 2-deg CMFs. Did you change the standard lighting conditions?', 'comment_created': datetime.datetime(2020, 5, 30, 10, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831762, 'comment_body': ""Regression, you're now computing luminance on a CIE XYZ triplet. Please double-check the rest of the PR for similar regressions (because I assume they may have been introduced with global search & replace operations)."", 'comment_created': datetime.datetime(2020, 5, 30, 10, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831837, 'comment_body': 'its -> their', 'comment_created': datetime.datetime(2020, 5, 30, 10, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831888, 'comment_body': 'It should be `ColorMatchingFunctions` (plural). Comments should also use the plural form.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831901, 'comment_body': 'Align arguments with neighboring functions.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831969, 'comment_body': ""IMHO the CMFs should be part of `LightingConditions`. Don't you think?"", 'comment_created': datetime.datetime(2020, 5, 30, 10, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432832632, 'comment_body': 'The comment was wrong', 'comment_created': datetime.datetime(2020, 5, 30, 11, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 436366997, 'comment_body': 'Yes absolutely :)', 'comment_created': datetime.datetime(2020, 6, 7, 14, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367208, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367221, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367280, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367298, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367368, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367373, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367500, 'comment_body': ""I'm not sure the comment here is correct, or at least it's not complete as it doesn't seem to describe what `m_cmf_illuminance` is."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367579, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367828, 'comment_body': 'Make argument `const`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367853, 'comment_body': 'Wrap into anonymous namespace.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368046, 'comment_body': ""Add a `// todo:` because this isn't correct when picking a color for an emitter."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368109, 'comment_body': 'Update case name: `SpectralReflectanceToCIEXYZ`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368166, 'comment_body': 'Update test case name.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368962, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369024, 'comment_body': 'Nice catch!', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369053, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369172, 'comment_body': 'This line can be moved out of the `if`...', 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369205, 'comment_body': ""...since it's the same as this one."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369443, 'comment_body': 'Fix indentation (check the previous function for how to indent such code).', 'comment_created': datetime.datetime(2020, 6, 7, 14, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369466, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436370020, 'comment_body': 'Sorry about that. This comment was for the normalizer. I forgot to change it. ', 'comment_created': datetime.datetime(2020, 6, 7, 14, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}]","[{'commit_sha': '5e84983fa76cba3e168761875357624f9c32fcc4', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92154cc7cce61d35e502ffca5ec1586c963bb550', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95ef2b7fd64a6ec09038c3935b72f5efecfcc48d', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8dd28b4e2247d4250deb82843ff68de4aa33fe', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966f88cd017e54e18dfa66ed4765f6e2bddecc9e', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a9e95c73a6131c24154fba08042cd2585fbc968', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2951cfc2c0654792edbfae7d63dceb534bb29d', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5
395042850,Fix spectral illuminance to CIE XYZ conversions,"Hey guys, this is what I was working at before I stopped last year ...
This basically fix the green/blue tints when physically rendering sky:

![appleseed](https://user-images.githubusercontent.com/43460229/77813852-bf917480-708a-11ea-98e6-09817a2fff77.png)

This also improve conversion from cieXYZ to spectrum.

I changed the cornell box light radiance to the one used in: https://www.graphics.cornell.edu/online/box/data.html, I don't know where does your current data come from. But it got I bit reddish after the change:

![1_appleseed_new](https://user-images.githubusercontent.com/43460229/77814341-f1a4d580-708e-11ea-9f33-a284c4db232e.png)

Using data from https://www.graphics.cornell.edu/online/box/data.html,:
![1_appleseed_new_original_values](https://user-images.githubusercontent.com/43460229/77814361-1bf69300-708f-11ea-96ee-42af7d7a226f.png)",True,2811,https://api.github.com/repos/appleseedhq/appleseed/pulls/2811,https://github.com/appleseedhq/appleseed/pull/2811,closed,437,345,70,7,17,61,1,0,[{'name': 'PR | Squash'}],2020-03-28 03:59:58+00:00,2020-06-13 14:24:06+00:00,6690248.0,"77 days, 10:24:08","[{'comment_id': 399618562, 'comment_body': ""In some cases like this one. I couldn't tell for sure if it was an emission spectrum of a reflective spectrum. I was hoping to get some help, so I wouldn't need to dig the source code too much. When I didn't know, I let reflectance, this way it keeps the same as before."", 'comment_created': datetime.datetime(2020, 3, 28, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 406649555, 'comment_body': 'I think we should consider this an emission since loosely speaking, it produces ""colors"" that are directly visible ""on screen"".', 'comment_created': datetime.datetime(2020, 4, 10, 7, 57, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654032, 'comment_body': 'Constants are spelled in CamelCase: `NormalizationCIE19312Deg`, or even better: `NormalizationCIECMF19312Deg`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654862, 'comment_body': '*SIMD*', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429654892, 'comment_body': 'Insert another blank line, block comments are always preceded by two blank lines.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 51, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655013, 'comment_body': 'Mark `explicit`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655072, 'comment_body': '`spectral_reflectance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 53, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655078, 'comment_body': '`spectrum_illuminance_to_ciexyz()`', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655105, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655269, 'comment_body': ""Instead of hardcoding the use of `XYZCMFCIE19312Deg`, it should be set in `LightingConditions` like it's done for `spectrum_reflectance_to_ciexyz()`."", 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429655294, 'comment_body': 'This normalization factor should be baked into the CMF function stored in `LightingConditions`.', 'comment_created': datetime.datetime(2020, 5, 24, 16, 56, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656440, 'comment_body': ""I don't really understand what's the difference between this code and `spectrum_reflectance_to_ciexyz()` when `LightingConditions::m_cmf` is set to `XYZCMFCIE19312Deg` (which is the case by default in the renderer), apart from the normalization factor."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 11, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656662, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656700, 'comment_body': 'CIE is an acronym and thus should always be spelled in upper case.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656709, 'comment_body': 'Two blank lines before block comments.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656722, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656743, 'comment_body': 'Just:\r\n\r\n    const SIMDColorMatching XYZCMFCIE19312DegSIMD(XYZCMFCIE19312Deg);', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656757, 'comment_body': 'Use `std::size_t`.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 14, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656952, 'comment_body': ""Wrap `if` body in curly braces if it's longer than one line."", 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 429656980, 'comment_body': 'Make arg const.', 'comment_created': datetime.datetime(2020, 5, 24, 17, 17, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 431012490, 'comment_body': 'In spectrum_reflectance_to_ciexyz() we multiply the reflectance spectrum by an illuminant.\r\nA reflectance spectrum is not directly converted to another color space. We convert a reflected spectrum that we get when the reflectance spectrum is illuminated by a certain illuminant, d65 by default.', 'comment_created': datetime.datetime(2020, 5, 27, 10, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431019952, 'comment_body': 'spectral_illuminance_to_ciexyz()?', 'comment_created': datetime.datetime(2020, 5, 27, 10, 34, 25, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 431023797, 'comment_body': ""We should rename LightningCoditions then. Since spectral illuminance doesn't need any lighting condition."", 'comment_created': datetime.datetime(2020, 5, 27, 10, 41, 55, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432487534, 'comment_body': ""That's a good change but it obscures the main changes of this PR. If possible, I would suggest to split this into its own commit."", 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432487691, 'comment_body': 'If the enum is scoped, the `InputFormat` prefixes become redundant and should be removed.', 'comment_created': datetime.datetime(2020, 5, 29, 13, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432491681, 'comment_body': ""it won't compile"", 'comment_created': datetime.datetime(2020, 5, 29, 13, 44, 12, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 432831434, 'comment_body': 'Remove extra blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 14, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831453, 'comment_body': 'Remove extra space after type.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 30, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831460, 'comment_body': 'End full line comments with periods.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831484, 'comment_body': 'Order alphabetically.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831529, 'comment_body': 'Remove redundant blank line.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831631, 'comment_body': 'Choose your casing: either ""Standard Color Matching Functions"" or ""Standard color matching functions"".', 'comment_created': datetime.datetime(2020, 5, 30, 10, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831727, 'comment_body': 'The previous comment stated the use of CIE 1964 10-deg CMFs, now your comments states the use of CIE 1931 2-deg CMFs. Did you change the standard lighting conditions?', 'comment_created': datetime.datetime(2020, 5, 30, 10, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831762, 'comment_body': ""Regression, you're now computing luminance on a CIE XYZ triplet. Please double-check the rest of the PR for similar regressions (because I assume they may have been introduced with global search & replace operations)."", 'comment_created': datetime.datetime(2020, 5, 30, 10, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831837, 'comment_body': 'its -> their', 'comment_created': datetime.datetime(2020, 5, 30, 10, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831888, 'comment_body': 'It should be `ColorMatchingFunctions` (plural). Comments should also use the plural form.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831901, 'comment_body': 'Align arguments with neighboring functions.', 'comment_created': datetime.datetime(2020, 5, 30, 10, 56, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432831969, 'comment_body': ""IMHO the CMFs should be part of `LightingConditions`. Don't you think?"", 'comment_created': datetime.datetime(2020, 5, 30, 10, 57, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 432832632, 'comment_body': 'The comment was wrong', 'comment_created': datetime.datetime(2020, 5, 30, 11, 9, 32, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}, {'comment_id': 436366997, 'comment_body': 'Yes absolutely :)', 'comment_created': datetime.datetime(2020, 6, 7, 14, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367208, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367221, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367280, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367298, 'comment_body': 'Align arguments.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367368, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367373, 'comment_body': 'Mark as `inline`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 11, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367500, 'comment_body': ""I'm not sure the comment here is correct, or at least it's not complete as it doesn't seem to describe what `m_cmf_illuminance` is."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 13, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367579, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 14, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367828, 'comment_body': 'Make argument `const`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436367853, 'comment_body': 'Wrap into anonymous namespace.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 16, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368046, 'comment_body': ""Add a `// todo:` because this isn't correct when picking a color for an emitter."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 18, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368109, 'comment_body': 'Update case name: `SpectralReflectanceToCIEXYZ`.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 19, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368166, 'comment_body': 'Update test case name.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 20, 5, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436368962, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369024, 'comment_body': 'Nice catch!', 'comment_created': datetime.datetime(2020, 6, 7, 14, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369053, 'comment_body': 'Revert.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 29, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369172, 'comment_body': 'This line can be moved out of the `if`...', 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 32, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369205, 'comment_body': ""...since it's the same as this one."", 'comment_created': datetime.datetime(2020, 6, 7, 14, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369443, 'comment_body': 'Fix indentation (check the previous function for how to indent such code).', 'comment_created': datetime.datetime(2020, 6, 7, 14, 32, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436369466, 'comment_body': 'Fix indentation.', 'comment_created': datetime.datetime(2020, 6, 7, 14, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dictoon', 'type': 'User'}, {'comment_id': 436370020, 'comment_body': 'Sorry about that. This comment was for the normalizer. I forgot to change it. ', 'comment_created': datetime.datetime(2020, 6, 7, 14, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'mororo250', 'type': 'User'}]","[{'commit_sha': '5e84983fa76cba3e168761875357624f9c32fcc4', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '92154cc7cce61d35e502ffca5ec1586c963bb550', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95ef2b7fd64a6ec09038c3935b72f5efecfcc48d', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d8dd28b4e2247d4250deb82843ff68de4aa33fe', 'committer_username': 'mororo250', 'committer_name': 'João Marcos Mororo Costa', 'committer_email': 'joao_marcos_8@hotmail.com', 'commit_date': datetime.datetime(2018, 9, 21, 3, 0, 6, tzinfo=datetime.timezone.utc)}, {'commit_sha': '966f88cd017e54e18dfa66ed4765f6e2bddecc9e', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a9e95c73a6131c24154fba08042cd2585fbc968', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b2951cfc2c0654792edbfae7d63dceb534bb29d', 'committer_username': 'dictoon', 'committer_name': 'François Beaune', 'committer_email': 'franz@appleseedhq.net', 'commit_date': datetime.datetime(2010, 7, 2, 16, 33, 7, tzinfo=datetime.timezone.utc)}]",João Marcos Mororo Costa,43460229,joao_marcos_8@hotmail.com,User,,25,,21,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
753784,appleseed,appleseedhq/appleseed,C++,328,2185,130,99,11152,456,6,35,"[{'id': 434236819, 'number': 2873, 'closed': datetime.datetime(2020, 6, 22, 7, 6, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 1, 23, 3, tzinfo=datetime.timezone.utc), 'time_taken': 625418.0, 'time_delta': '7 days, 5:43:38', 'additions': 28, 'deletions': 7, 'state': 'closed'}, {'id': 427644236, 'number': 2870, 'closed': None, 'created': datetime.datetime(2020, 6, 4, 7, 30, 15, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 628, 'deletions': 0, 'state': 'open'}, {'id': 422147725, 'number': 2866, 'closed': None, 'created': datetime.datetime(2020, 5, 22, 21, 38, 4, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 35153, 'deletions': 634, 'state': 'open'}, {'id': 395042850, 'number': 2811, 'closed': datetime.datetime(2020, 6, 13, 14, 24, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 28, 3, 59, 58, tzinfo=datetime.timezone.utc), 'time_taken': 6690248.0, 'time_delta': '77 days, 10:24:08', 'additions': 437, 'deletions': 345, 'state': 'closed'}, {'id': 276204695, 'number': 2586, 'closed': datetime.datetime(2019, 5, 21, 7, 30, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 6, 14, 17, 13, tzinfo=datetime.timezone.utc), 'time_taken': 1271569.0, 'time_delta': '14 days, 17:12:49', 'additions': 342, 'deletions': 12, 'state': 'closed'}, {'id': 274209643, 'number': 2573, 'closed': datetime.datetime(2019, 4, 30, 6, 53, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 28, 21, 20, 3, tzinfo=datetime.timezone.utc), 'time_taken': 120783.0, 'time_delta': '1 day, 9:33:03', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 270250179, 'number': 2549, 'closed': datetime.datetime(2019, 4, 17, 6, 55, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 13, 19, 48, 50, tzinfo=datetime.timezone.utc), 'time_taken': 299226.0, 'time_delta': '3 days, 11:07:06', 'additions': 8188, 'deletions': 68, 'state': 'closed'}, {'id': 266093056, 'number': 2524, 'closed': datetime.datetime(2019, 4, 1, 14, 32, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 1, 5, 6, 8, tzinfo=datetime.timezone.utc), 'time_taken': 33988.0, 'time_delta': '9:26:28', 'additions': 16, 'deletions': 16, 'state': 'closed'}]"
19741515,blenderseed,appleseedhq/blenderseed,Python,43,273,45,15,921,36,2,3,"[{'id': 438799337, 'number': 518, 'closed': None, 'created': datetime.datetime(2020, 6, 23, 20, 23, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 123, 'deletions': 13, 'state': 'open'}, {'id': 271166512, 'number': 413, 'closed': datetime.datetime(2019, 4, 17, 11, 8, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 4, 17, 5, 58, 47, tzinfo=datetime.timezone.utc), 'time_taken': 18570.0, 'time_delta': '5:09:30', 'additions': 1, 'deletions': 4, 'state': 'closed'}]"
45906123,appleseed-max,appleseedhq/appleseed-max,C++,16,33,27,7,661,46,2,2,"[{'id': 440346335, 'number': 365, 'closed': None, 'created': datetime.datetime(2020, 6, 26, 2, 24, 13, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 613, 'deletions': 87, 'state': 'open'}]"
71044525,appleseed-maya,appleseedhq/appleseed-maya,C++,22,89,27,7,808,40,4,1,"[{'id': 438914197, 'number': 235, 'closed': None, 'created': datetime.datetime(2020, 6, 24, 1, 59, 40, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 315, 'deletions': 28, 'state': 'open'}]"
