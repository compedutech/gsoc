pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
649772902,"JAMES-3516 Add threadId property to MessageResult POJO, MailboxMessage POJO","We don't have threadId guessing algorithm yet, so now threadId property is naive implemented equals MessageId.
I think I should have put threadId property to some Implemented MailboxMessage constructor/ builder. However I not sure which Message model JMAP is using... ",True,446,https://api.github.com/repos/apache/james-project/pulls/446,https://github.com/apache/james-project/pull/446,closed,131,1,10,5,8,8,1,0,[{'name': 'waiting merge'}],2021-05-21 08:29:47+00:00,2021-05-25 08:58:19+00:00,347312.0,"4 days, 0:28:32","[{'comment_id': 636775432, 'comment_body': 'I would not be surprised that this breaks if you try to really access it... Did you see the implementations of MessageId for memory and Cassandra?', 'comment_created': datetime.datetime(2021, 5, 21, 9, 29, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 636775621, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 5, 21, 9, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 636776345, 'comment_body': ""I'm not convinced about this... I will think about it. "", 'comment_created': datetime.datetime(2021, 5, 21, 9, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 636860185, 'comment_body': 'Please favor composition.\r\n\r\nI would suggest:\r\n\r\n```\r\npublic class ThreadId {\r\n   private final MessageId baseMessageId;\r\n}\r\n```', 'comment_created': datetime.datetime(2021, 5, 21, 11, 56, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 636860644, 'comment_body': 'Put these methods before equals, toString, hashcode.', 'comment_created': datetime.datetime(2021, 5, 21, 11, 57, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 636870561, 'comment_body': 'You then should built a ThreadId that wraps the messageId.', 'comment_created': datetime.datetime(2021, 5, 21, 12, 14, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 636871080, 'comment_body': 'It may worth writing tests for this in SimpleMailboxMessageTest ?', 'comment_created': datetime.datetime(2021, 5, 21, 12, 15, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 636871395, 'comment_body': 'Can we try in MailboxManagerTest to access the threadId of a message?', 'comment_created': datetime.datetime(2021, 5, 21, 12, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '7123192e560cb2ad9785577d80d73f8e0f12e8ca', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '602cc1a02fe3a19f148a03ef3e6bac6fd8b80fd1', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e29d783ee3b7e17e2026d92f500f81993b8d4a45', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0dfac54d64d5def4f1d8aaef3a0b29ea227a9db', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d0fb5860956efad10581b917763440384b14abb', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
654500306,JAMES-3516 Using the MessageResult::getThreadId property at the JMAP level,Using the MessageResult::getThreadId property at the JMAP level - in Email/get + Email/import,True,458,https://api.github.com/repos/apache/james-project/pulls/458,https://github.com/apache/james-project/pull/458,closed,26,9,3,2,0,2,0,0,[],2021-05-27 05:04:01+00:00,2021-05-29 04:41:59+00:00,171478.0,"1 day, 23:37:58","[{'comment_id': 640290783, 'comment_body': 'We should not expose at the JMAP level `getBaseMessageId` which is an implementation detail.\r\n\r\nWe should have a `ThreadId::serialize` method IMO', 'comment_created': datetime.datetime(2021, 5, 27, 5, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 640294881, 'comment_body': 'Can we have at least one unit test for this method?', 'comment_created': datetime.datetime(2021, 5, 27, 5, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '9a1a7fb1eec1487e4f3d58663de022b15f5d51b3', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db1d30ebd68d695c6fa9f5d2f9ff910528e469d8', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
655919499,JAMES-3516 Exposing AppendResult::getThreadId allow advertising the threadId as part of Email/set and Email/Import results,,True,460,https://api.github.com/repos/apache/james-project/pulls/460,https://github.com/apache/james-project/pull/460,closed,258,43,25,2,6,8,0,0,[],2021-05-28 06:36:26+00:00,2021-06-05 02:57:39+00:00,678073.0,"7 days, 20:21:13","[{'comment_id': 641337354, 'comment_body': 'This feels wrong.\r\n\r\n1. We can have a factory method for ThreadId to make things more explicit:\r\n\r\n```\r\nthis.threadId = ThreadId.forBaseMessageId(id.getMessageId());\r\n```\r\n\r\n2. We are leaking some business decisions all around our data model.\r\n\r\n`new ThreadId(id.getMessageId())` is a decision that I would love to see taken only once.\r\n\r\nThis means we need to cary over the threadId along in the data model. We need to\r\n\r\n - Have a constructor parameter for `threadId` here in `AppendResult`\r\n  - Cary the threadId parameter over in `MessageMetaData` POJO.', 'comment_created': datetime.datetime(2021, 5, 28, 7, 39, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 641337821, 'comment_body': 'We do not keep threadId into account for equals & hashCode?\r\n\r\nIs that POJO equalsVerifer tested?\r\n\r\nCan you fix it?', 'comment_created': datetime.datetime(2021, 5, 28, 7, 40, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 641338486, 'comment_body': 'I would prefer:\r\n\r\n```\r\nThreadId.fromJava(appendResult.getThreadId)\r\n```', 'comment_created': datetime.datetime(2021, 5, 28, 7, 41, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 641474315, 'comment_body': 'This is a breaking change. We need to handle the old format.\r\n\r\nPlease add the test.', 'comment_created': datetime.datetime(2021, 5, 28, 11, 23, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 641474380, 'comment_body': '\r\n\r\nThis is a breaking change. We need to handle the old format.\r\n\r\nPlease add the test.\r\n', 'comment_created': datetime.datetime(2021, 5, 28, 11, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 642206317, 'comment_body': 'getThreadIdElseFallbackToOldFormat => retrieveThreadId ?', 'comment_created': datetime.datetime(2021, 5, 31, 4, 44, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 642207968, 'comment_body': 'Maybe it could be nice in serialization test to have a different value for messgeId and threadId, to show that it is supported?', 'comment_created': datetime.datetime(2021, 5, 31, 4, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 642208128, 'comment_body': ""Idem, can't we have distinct values?"", 'comment_created': datetime.datetime(2021, 5, 31, 4, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': 'bcc26a8791c136b83d87ffae44f5a1363768c0a5', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7b6c9ce54da2b568a8f803eec24aa39394b198b', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
663162066,JAMES-3516 Implement naive ThreadIdGuessingAlgorithm,"Just a few ideas want to show to you, not really some proper code yet.
My idea is enabling setThreadId in MailboxMessage (just like MoqSeq). 
Then in MessageStorer we can use message.setThreadId(with ThreadId from ThreadIdGuessingAlgorithm)
```
MailboxMessage message = messageFactory.createMessage(messageId, mailbox, internalDate, size, bodyStartOctet, content, flags, propertyBuilder, attachments);
threadId = ThreadIdManager.setThreadId(MailboxMessage message,...);
message.setThreadId(threadId);
return Mono.from(messageMapper.addReactive(mailbox, message))
    .map(metadata -> Pair.of(metadata, Optional.of(attachments)));
```",True,481,https://api.github.com/repos/apache/james-project/pulls/481,https://github.com/apache/james-project/pull/481,closed,247,0,6,2,9,24,1,0,[{'name': 'waiting merge'}],2021-06-07 04:46:02+00:00,2021-06-16 04:11:47+00:00,775545.0,"8 days, 23:25:45","[{'comment_id': 646299876, 'comment_body': 'Do we take the mime message as an input? If I remember correctly MailboxMessage already has a ThreadId allocated to it...\r\n\r\nThreadId guessing needs to happen before.\r\n\r\nPlease consider...\r\n\r\n - The subject (string)\r\n - The references ( `List<String>` ) including `In-Reply-To`\r\n - The `MimeMessageId (`String`)\r\n - The James mailbox   `MessageId`\r\n \r\nhttps://jmap.io/spec-mail.html#threads\r\n\r\n```\r\nThe exact algorithm for determining whether two Emails belong to the same Thread is not mandated in this spec to allow for compatibility with different existing systems. For new implementations, it is suggested that two messages belong in the same Thread if both of the following conditions apply:\r\n\r\n    An identical message id [@!RFC5322] appears in both messages in any of the Message-Id, In-Reply-To, and References header fields.\r\n    After stripping automatically added prefixes such as “Fwd:”, “Re:”, “[List-Tag]”, etc., and ignoring white space, the subjects are the same. This avoids the situation where a person replies to an old message as a convenient way of finding the right recipient to send to but changes the subject and starts a new conversation.\r\n\r\n```', 'comment_created': datetime.datetime(2021, 6, 7, 6, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 646300280, 'comment_body': ""I don't see what is specific for memory here just yet."", 'comment_created': datetime.datetime(2021, 6, 7, 6, 22, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 646300440, 'comment_body': ""We don't need a manager just yet."", 'comment_created': datetime.datetime(2021, 6, 7, 6, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 646300747, 'comment_body': 'I think only the ThreadIdGuessingAlgorithm makes sense and that we can drop ThreadIdManager.', 'comment_created': datetime.datetime(2021, 6, 7, 6, 23, 10, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 646301120, 'comment_body': 'No I would definitly prefer to have threadId final and add the required onstructor parameters!', 'comment_created': datetime.datetime(2021, 6, 7, 6, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 648847760, 'comment_body': 'Why do we need this getter?', 'comment_created': datetime.datetime(2021, 6, 10, 4, 52, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 648847886, 'comment_body': 'Where do we use this field?', 'comment_created': datetime.datetime(2021, 6, 10, 4, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 648848771, 'comment_body': '```suggestion\r\n    ThreadId getThreadId(MessageId messageId, List<References> references, Subject subject);\r\n```\r\n\r\nWith\r\n\r\n```\r\npublic class Reference {\r\n    private final String value;\r\n    \r\n    // ...\r\n}\r\n```\r\n\r\nand \r\n\r\n```\r\npublic class Subject {\r\n    private final String value;\r\n    \r\n    // ...\r\n}\r\n```\r\n\r\nWhere references aggegates the In-Reply-To // References header fields.', 'comment_created': datetime.datetime(2021, 6, 10, 4, 54, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 648850201, 'comment_body': 'Ok it looks like I understand wrong about naive implementation level. I will working on this.', 'comment_created': datetime.datetime(2021, 6, 10, 4, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 648853524, 'comment_body': 'NaiveThreadIdGuessingAlgorithm', 'comment_created': datetime.datetime(2021, 6, 10, 5, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650638829, 'comment_body': 'I disagree with two methods. We should have  methods, several implementation.', 'comment_created': datetime.datetime(2021, 6, 14, 4, 11, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650638920, 'comment_body': 'The fact of being naive is an implementation detail that do not have its place in an interface.', 'comment_created': datetime.datetime(2021, 6, 14, 4, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650639192, 'comment_body': 'Technically it should be `BaseSubject`: `After stripping automatically added prefixes such as “Fwd:”, “Re:”, “[List-Tag]”, etc., and ignoring white space, the subjects are the same. This avoids the situation where a person replies to an old message as a convenient way of finding the right recipient to send to but changes the subject and starts a new conversation.`', 'comment_created': datetime.datetime(2021, 6, 14, 4, 12, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650641574, 'comment_body': 'Why we should not let guessThreadId algorithm handle the stripping subject job also?', 'comment_created': datetime.datetime(2021, 6, 14, 4, 24, 34, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 650642102, 'comment_body': 'As you want. Your proposal makes sense.', 'comment_created': datetime.datetime(2021, 6, 14, 4, 27, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650643087, 'comment_body': ""We could write a stripping method in ThreadIdGuessing impl and use it one for all (for input' subject and other searched mails' subjects)"", 'comment_created': datetime.datetime(2021, 6, 14, 4, 31, 44, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 650643546, 'comment_body': 'We already have code doing just that: `SearchUtil::getBaseSubject`... Though some more tests could be welcome, we can likely reuse it.', 'comment_created': datetime.datetime(2021, 6, 14, 4, 34, 1, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650648261, 'comment_body': 'I liked the ThreadIdGuessingAlgorithm terminology <3', 'comment_created': datetime.datetime(2021, 6, 14, 4, 55, 9, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650745613, 'comment_body': ""Don't we throw a `NotImplementedException` in those cases usually?"", 'comment_created': datetime.datetime(2021, 6, 14, 8, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 650765841, 'comment_body': 'We should implement the naive algorithm `new ThreadId(baseMessageId)` stuff....', 'comment_created': datetime.datetime(2021, 6, 14, 8, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650790999, 'comment_body': ""This supposes to be the not naive implementation method without baseMessageId in params.\r\nI don't understand Benoit's point yet.."", 'comment_created': datetime.datetime(2021, 6, 14, 9, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 650811215, 'comment_body': 'Naive and real implementation should have the same interface.\r\n\r\nWe can add parameters if needed.', 'comment_created': datetime.datetime(2021, 6, 14, 10, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 650856958, 'comment_body': 'In the future when we already have the real implementation, can we delete the NaiveImpl and unnecessary basedMessageId param?', 'comment_created': datetime.datetime(2021, 6, 14, 11, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 650865403, 'comment_body': 'Yes I think so...', 'comment_created': datetime.datetime(2021, 6, 14, 11, 30, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '0ed14901304a8ea387850620f4a427536b447362', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '464133e764e310907507ba0e304f219b82b1dc34', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
674215240,JAMES-3516 Add threadId column to cassandra tables,"WIP: Added threadId column to messageIdTable and imapUidTable. 
I think I should add threadId to ComposedMessageIdWithMetaData class.

I have some questions:
- What is the meaning of these two tables' name? From my view, it looks like rather mailbox message table.
- What is IMAP Uid?
- I see table messageV2 storing message metadata. Should we add threadId to this table too?",True,504,https://api.github.com/repos/apache/james-project/pulls/504,https://github.com/apache/james-project/pull/504,closed,242,39,25,4,5,16,0,0,[],2021-06-21 04:51:27+00:00,2021-06-28 10:29:30+00:00,625083.0,"7 days, 5:38:03","[{'comment_id': 656090528, 'comment_body': ""We should give the commands on Cassandra to perform for that I believe. But I consider that you probably don't know them.\r\n\r\nI will try to support you on this part when I have a bit of time.\r\n\r\nI think we need to modify the proper section in the new doc with Antora too :)"", 'comment_created': datetime.datetime(2021, 6, 22, 10, 31, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 656093590, 'comment_body': 'Maybe I would have added that constant in `CassandraMessageIds` and then import it here and in CassandraMessageIdTable instead', 'comment_created': datetime.datetime(2021, 6, 22, 10, 35, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 656273593, 'comment_body': ""We already defined threadId in AppendResult(separately from ComposedMessageId) and MessageMetaData class. IMO it's not suitable if we put threadId into ComposedMessageId or CassandraMessageIds constrants also."", 'comment_created': datetime.datetime(2021, 6, 22, 14, 24, 24, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 656971819, 'comment_body': 'Please handle the null case to allow a smooth upgrade', 'comment_created': datetime.datetime(2021, 6, 23, 10, 37, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 656971949, 'comment_body': 'Please handle the null case to allow a smooth upgrade', 'comment_created': datetime.datetime(2021, 6, 23, 10, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 656972507, 'comment_body': ""```suggestion\r\n### Adding threadId collumn to message metadata tables\r\n```\r\n\r\nThere's no v11 as we did not define any upgrade task."", 'comment_created': datetime.datetime(2021, 6, 23, 10, 38, 53, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 656973133, 'comment_body': ""Wrong. There's no upgrades to do here.\r\n\r\nHowever we need to document how to create the threadId collumn on existing tables (ALTER TABLE ...)"", 'comment_created': datetime.datetime(2021, 6, 23, 10, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 656973208, 'comment_body': 'Nope.', 'comment_created': datetime.datetime(2021, 6, 23, 10, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 656973620, 'comment_body': '```suggestion\r\n    <subsection name=""Adding threadId collumn to message metadata table"">\r\n```', 'comment_created': datetime.datetime(2021, 6, 23, 10, 40, 44, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 657597655, 'comment_body': ""It's more the other way around right? You should update the cassandra tables first before upgrading James?"", 'comment_created': datetime.datetime(2021, 6, 24, 3, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 657598550, 'comment_body': 'By using cqlsh: https://cassandra.apache.org/doc/latest/tools/cqlsh.html\r\n\r\nData manipulation with CQL: https://cassandra.apache.org/doc/latest/cql/dml.html# -> for finding your commands', 'comment_created': datetime.datetime(2021, 6, 24, 3, 28, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 657602366, 'comment_body': 'Yes.', 'comment_created': datetime.datetime(2021, 6, 24, 3, 42, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 657666634, 'comment_body': 'I would prefer the parameters to be `Row row, MessageId messageId` so that we do not read the messageId twice...', 'comment_created': datetime.datetime(2021, 6, 24, 6, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 657666828, 'comment_body': ""I'd like we do not read THREAD_ID_LOWERCASE twice"", 'comment_created': datetime.datetime(2021, 6, 24, 6, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 657666911, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 6, 24, 6, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 657666961, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 6, 24, 6, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '6ad0cecc3567545f47392742d1b6f5e9b49f7220', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1802ffa6017a29c8f74f31fe9534a8d87c27ad4', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab75bd404488c95ace3f23308b1032496f0ba1b2', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27020a2b5961dcb79f073a22e07d20f67c091f81', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
678787880,JAMES-3516 Allow setting threadId through MessageFactory::createMessage params,"After adding threadId property to SimpleMailboxMessage, we can enable setting threadId through MessageFactory::createMessage params",True,514,https://api.github.com/repos/apache/james-project/pulls/514,https://github.com/apache/james-project/pull/514,closed,184,70,29,3,2,0,0,0,[],2021-06-28 07:33:43+00:00,2021-07-02 01:59:47+00:00,325564.0,"3 days, 18:26:04",[],"[{'commit_sha': '158ddf838817b760e8ecb22be8cf92ff5c182749', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40d3396b9e7322c23d16264e203b070dcc5bd0d0', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '206eac968f83520024198807cfbb406e4137acfa', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
679744930,JAMES-3516 Plug threadIdGuessingAlgorithm to MessageManager,"I have some questions:
- Am I supporting threadId for other protocols beside JMAP also? I am interacting with how James store threadId generally.
- Should we have CassandraThreadIdGuessingAlgorithm and InMemoryThreadIdGuessingAlgorithm... separately in the future?",True,515,https://api.github.com/repos/apache/james-project/pulls/515,https://github.com/apache/james-project/pull/515,closed,207,55,28,4,6,11,0,0,[],2021-06-29 09:05:54+00:00,2021-07-08 08:47:10+00:00,776476.0,"8 days, 23:41:16","[{'comment_id': 660437287, 'comment_body': 'I think you need a hint there...\r\n\r\nMaximalBodyDescriptor do held a list of fields CF this debugging session:\r\n\r\n![Screenshot from 2021-06-29 16-17-11](https://user-images.githubusercontent.com/6928740/123771846-95fe7300-d8f5-11eb-841a-b0fb0aa600ae.png)\r\n\r\nWe can contribute a `MaximalBodyDescriptor::getFiled(String name)` method in mime4J ?\r\n\r\nThen we would likely be able to do threadId guessing easily in `StoreMessageManager::appendMessage` (the one with the big try catch...) Then we can pass the threadId as a parameter to other methods just like properties...', 'comment_created': datetime.datetime(2021, 6, 29, 9, 21, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 660439882, 'comment_body': 'Likely even better (and less hacky) in parseProperties there is a header isntance we do not use...\r\n\r\n```\r\nprivate PropertyBuilder parseProperties(BodyOffsetInputStream bIn) throws IOException, MimeException {\r\n        // Disable line length... This should be handled by the smtp server\r\n        // component and not the parser itself\r\n        // https://issues.apache.org/jira/browse/IMAP-122\r\n        final MimeTokenStream parser = getParser(bIn);\r\n        final HeaderImpl fields = readHeader(parser);\r\n        \r\n        // All we need for threadId guessing <3\r\n        fields.getFields(""Message-Id"")\r\n        \r\n        final MaximalBodyDescriptor descriptor = (MaximalBodyDescriptor) parser.getBodyDescriptor();\r\n        final MediaType mediaType = getMediaType(descriptor);\r\n        final PropertyBuilder propertyBuilder = getPropertyBuilder(descriptor, mediaType.mediaType, mediaType.subType);\r\n        setTextualLinesCount(parser, mediaType.mediaType, propertyBuilder);\r\n        return propertyBuilder;\r\n    }\r\n ```\r\n \r\n That method can then return an object combining properties and threadId....', 'comment_created': datetime.datetime(2021, 6, 29, 9, 24, 37, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 660484180, 'comment_body': 'How about using this header instance to get headers fields needed for ThreadIdGuessingAlgorithm, and still place ThreadIdGuessingAlgorithm at MessageStorer::appendMessageToStore as I am doing now? Because I think threadId should go with messageId. Otherwise we should move messageIdFactory.generate out of MessageStorer::appendMessageToStore.', 'comment_created': datetime.datetime(2021, 6, 29, 10, 24, 55, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 660647641, 'comment_body': 'This sounds like a good proposal to me ;-)', 'comment_created': datetime.datetime(2021, 6, 29, 14, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661177746, 'comment_body': 'Optional IMO', 'comment_created': datetime.datetime(2021, 6, 30, 6, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661177934, 'comment_body': 'We should IMO accept messages without MimeMessageId', 'comment_created': datetime.datetime(2021, 6, 30, 6, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661178182, 'comment_body': 'Idem, what if for any reason a message do not have a subject?', 'comment_created': datetime.datetime(2021, 6, 30, 6, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661178734, 'comment_body': 'Use Optional.ofNullable(...).map(...)', 'comment_created': datetime.datetime(2021, 6, 30, 6, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661178958, 'comment_body': 'Guavate.toImmutableList()', 'comment_created': datetime.datetime(2021, 6, 30, 6, 51, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661180844, 'comment_body': '`UnstructuredFieldImpl::getValue`\r\n\r\n(We need to handle possible encoded characters IMO cf HeaderCollectionTest::getHeadersShouldDecodeValues)', 'comment_created': datetime.datetime(2021, 6, 30, 6, 54, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 661913863, 'comment_body': 'We do not need to parse the field if it is already a `UnstructuredFieldImpl`', 'comment_created': datetime.datetime(2021, 7, 1, 1, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': 'da3545498f258f846c363279962b86ea1d635676', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47752e7fd42d24dc02a814ad1a1224e78b6596c0', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3dfb11e21951b62e7dbf1762a48170b5a48339b2', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c06f85c03da97caf1c5d35fe8a03ff5e9631aeb6', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
683589829,JAMES-3516 Implement SearchThreadIdGuessingAlgorithm,"Purpose: Experiment guessing threadId by doing search. Good to experiment but bad for production.

I changed a piece of code in buildSearchQuery. We did compare one to one corresponding field. We should compare many fields.

```
An identical message id [@!RFC5322] appears in both messages in any of the Message-Id, In-Reply-To, and References header fields.
```",True,529,https://api.github.com/repos/apache/james-project/pulls/529,https://github.com/apache/james-project/pull/529,closed,405,43,22,5,9,9,0,0,[],2021-07-05 10:47:16+00:00,2021-07-13 09:17:20+00:00,685804.0,"7 days, 22:30:04","[{'comment_id': 663984411, 'comment_body': ""This is a new interface, let's just have the reactive version!"", 'comment_created': datetime.datetime(2021, 7, 5, 14, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 663985549, 'comment_body': 'Can we extract a junit 5 contract off this?\r\n\r\nLocate the junit 5 contract in mailbox/store.', 'comment_created': datetime.datetime(2021, 7, 5, 14, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 664022277, 'comment_body': 'So is this what you mean:\r\n- bind SearchThreadIdGuessingAlgorithm to MemoryMailboxModule\r\n- move this test to mailbox/store and extract Cassandra and InMemory version of this?', 'comment_created': datetime.datetime(2021, 7, 5, 15, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 664166525, 'comment_body': 'No... \r\n\r\nI mean have this test suite as an interface, and default methods (we call that a contract). The test then implements the contract and tells which implementation to use. The contract is in mailbox/store but the test can be in mailbox/scanning-search without issues.', 'comment_created': datetime.datetime(2021, 7, 6, 0, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 664342410, 'comment_body': '`AbstractThreadIdGuessingAlgorithmTest` => `ThreadIdGuessingAlgorithmContract`', 'comment_created': datetime.datetime(2021, 7, 6, 8, 23, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 664362659, 'comment_body': 'Maybe you could have a look to parametrized tests to be making this more readable?', 'comment_created': datetime.datetime(2021, 7, 6, 8, 49, 6, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 665019724, 'comment_body': 'Put the parameter methods just above the tests they are related to IMO', 'comment_created': datetime.datetime(2021, 7, 7, 3, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 667621640, 'comment_body': ""I don't see anywhere to call it, is it necessary?"", 'comment_created': datetime.datetime(2021, 7, 12, 4, 49, 25, tzinfo=datetime.timezone.utc), 'commenter': 'vttranlina', 'type': 'User'}, {'comment_id': 667650550, 'comment_body': ""No direct call, but yes it's necessary. It can be understood as implicit test data thanks to @ParameterizedTest @MethodSource annotations.\r\nhttps://www.baeldung.com/parameterized-tests-junit-5 part 4.6 "", 'comment_created': datetime.datetime(2021, 7, 12, 6, 13, 35, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}]","[{'commit_sha': '047166ac2327b2e1bdbe4de79755dea0320d56f0', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89b9e2047cb1f13a8316fd99cf8443c93d6b454d', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa683e3b15b256f8953dfb43c2d6c93c11f12928', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d84b68bb486c118e9273953a2ace9b3f4cd618c', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d2ebd21bfd37cecdb29a8f21f5e5ac0db73c975', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
686473665,JAMES-3516 Implement MailboxManager::getThread API and plug it into JMAP Thread/get,WIP: Plug getThread API into JMAP Thread/get,True,534,https://api.github.com/repos/apache/james-project/pulls/534,https://github.com/apache/james-project/pull/534,closed,738,75,15,3,6,24,0,0,[],2021-07-09 04:08:46+00:00,2021-07-23 09:31:46+00:00,1228980.0,"14 days, 5:23:00","[{'comment_id': 666727870, 'comment_body': 'Use Publisher instead of Mono / Flux in TLD API\r\n\r\nThis allows subcomponents to not be dependant of the reactive technology...', 'comment_created': datetime.datetime(2021, 7, 9, 7, 18, 40, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 666728442, 'comment_body': 'No tests for this method?', 'comment_created': datetime.datetime(2021, 7, 9, 7, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 666729700, 'comment_body': 'TODO (Another PR)\r\n\r\nPush this to the search engine.\r\n\r\nHow: \r\n\r\n`SearchQuery::withThreadId` and implement it for scanning search, lucene search as well as ElasticSearch.', 'comment_created': datetime.datetime(2021, 7, 9, 7, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 666796310, 'comment_body': 'IMO we are testing ThreadIdGuessingAlgorithm in an inconvenient way. We depend on guice to resolve the loop of SearchThreadIdGuessingAlgorithm and MailboxManager, so we can test this from HTTP level. But we are having problems when testing ThreadIdGuessingAlgorithm APIs from the lower level (testing resource based on loop constructors). \r\n\r\nMy proposal solutions:\r\n- In the lower level tests: Using MessageMapper to save our custom messages with custom threadId (But we missed some actual guessing threadId)\r\nOR\r\n- SearchThreadIdGuessingAlgorithm depends on MailboxManger no more.\r\n\r\nPersonally, I would like to do something like inbox.appendMessage, and then getThread directly.\r\nWhat do you think?', 'comment_created': datetime.datetime(2021, 7, 9, 9, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 667054227, 'comment_body': 'Or...\r\n\r\nYou can implement MailboxManager  by doing directly the search without calling the guessing algorithm?', 'comment_created': datetime.datetime(2021, 7, 9, 15, 57, 27, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 667277582, 'comment_body': 'At the moment, we just use searching for InMemory, we still need NaiveThreadIdGuessingAlgorithm for Cassandra and OpenJPA. And I would like to package related ThreadId APIs in ThreadIdGuessingAlgorithm.\r\n\r\nWhat about recoding MailboxManager::search in SearchThreadIdGuessingAlgorithm? (a little duplicated though, but solve above problem)', 'comment_created': datetime.datetime(2021, 7, 10, 2, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 667313100, 'comment_body': 'No code duplication is not a solution.', 'comment_created': datetime.datetime(2021, 7, 10, 8, 54, 45, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668582750, 'comment_body': 'Returns the list of MessageId of messages belonging to that Thread', 'comment_created': datetime.datetime(2021, 7, 13, 9, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668583266, 'comment_body': '* @return  the list of MessageId of messages belonging to that Thread', 'comment_created': datetime.datetime(2021, 7, 13, 9, 19, 14, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668586553, 'comment_body': 'Methods with publishers should not throw.\r\n\r\nThey should return publisher that eventually completes with an error (`Flux.error`)\r\n\r\nThe error is returned when blocking the publisher not while generating the publisher.', 'comment_created': datetime.datetime(2021, 7, 13, 9, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668586853, 'comment_body': 'IMO that string method is likely not needed...', 'comment_created': datetime.datetime(2021, 7, 13, 9, 23, 46, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668587064, 'comment_body': 'private?', 'comment_created': datetime.datetime(2021, 7, 13, 9, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668590043, 'comment_body': '.switchIfEmpty(Mono.error(() -> new ThreadNotFoundException(threadId)));', 'comment_created': datetime.datetime(2021, 7, 13, 9, 27, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668590583, 'comment_body': 'Indent', 'comment_created': datetime.datetime(2021, 7, 13, 9, 28, 22, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668590965, 'comment_body': 'Use guava ImmutableList.of()', 'comment_created': datetime.datetime(2021, 7, 13, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668592275, 'comment_body': 'One mail in a tread?\r\n\r\nmail 1, mail 3 in thread 1\r\nmail 2 in thread 2\r\n\r\nget thread 1 -> mail 1 + mail 3 (not related emails are not returned)', 'comment_created': datetime.datetime(2021, 7, 13, 9, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668594269, 'comment_body': 'Unused :D', 'comment_created': datetime.datetime(2021, 7, 13, 9, 32, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668595156, 'comment_body': ""First message don't need the `In-Reply-To` field :D"", 'comment_created': datetime.datetime(2021, 7, 13, 9, 34, 5, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668597634, 'comment_body': ' - In-Reply-To references messsage1 but different subject -> NOMATCH\r\n - REFERENCES -> match\r\n  -Maybe 1-2 other fonctional tests.', 'comment_created': datetime.datetime(2021, 7, 13, 9, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668598009, 'comment_body': 'Oups you changed that license format', 'comment_created': datetime.datetime(2021, 7, 13, 9, 37, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 668602558, 'comment_body': 'Please introduce a ThreadId.Factory class here (ThreadId.Factory would of course call the MessageId.Factory)\r\n\r\nThis reduces temporal coupling...', 'comment_created': datetime.datetime(2021, 7, 13, 9, 43, 32, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670362934, 'comment_body': 'This method depends on MailboxManager::search which throws MailboxException. I guess there is nothing I can do with that.', 'comment_created': datetime.datetime(2021, 7, 15, 11, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 671074105, 'comment_body': ""I think those search methods were not reactive before and that throws stayed in the api interface. You can remove it I think. If you look at the current implementations of MailboxManager, they don't seem to throw it either"", 'comment_created': datetime.datetime(2021, 7, 16, 8, 42, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}, {'comment_id': 671077577, 'comment_body': 'And yes there is other publisher methods still doing this too... we should clean up a bit :)', 'comment_created': datetime.datetime(2021, 7, 16, 8, 48, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Arsnael', 'type': 'User'}]","[{'commit_sha': '21fbd8f8ac850136db08dc451113a5e6bdd41932', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd1c5fee564e0abcbe953325c178f4100176436c4', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67dfbec0a8f807faa6230cddd6d7edee1b9fdb2d', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
689803254,JAMES-3516 Enable threadId search query for MessageSearchIndex,"WIP: add threadId to ES document schema
Next: complete ES part, then ScanningSearch and Lucene",True,539,https://api.github.com/repos/apache/james-project/pulls/539,https://github.com/apache/james-project/pull/539,closed,374,2,23,5,1,9,0,0,[],2021-07-14 10:54:47+00:00,2021-07-19 02:52:21+00:00,403054.0,"4 days, 15:57:34","[{'comment_id': 669624521, 'comment_body': 'Should we strong type this?\r\n\r\n(ThreadId?)', 'comment_created': datetime.datetime(2021, 7, 14, 13, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670313680, 'comment_body': 'We can get the mapper factory that backs the storeMailboxManager instead IMO', 'comment_created': datetime.datetime(2021, 7, 15, 9, 52, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670315510, 'comment_body': 'I prefer us to have an `abstract MessageId generateMessageId()` method than this whole MapperProvider stuff to be honnest.', 'comment_created': datetime.datetime(2021, 7, 15, 9, 55, 24, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670317834, 'comment_body': ""GIVEN that this class can rely on the `scanning thread id guessing algorithm` (as InMemoryIntegrationResources should anyway),\r\n\r\nCan't we instead append messages to the main storeMailboxManager that happen to share (or not share) the `In-Reply-To` ?\r\n\r\nThis would remove all of the mapper dark magic, make us more feature oriented and also make this testing code more bullet proof.\r\n\r\nMy 2 cents."", 'comment_created': datetime.datetime(2021, 7, 15, 9, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670352787, 'comment_body': ""I know that. But how we solve that is an issue now.\r\nOnce we satisfy with the scanning threadId guessing algorithm then we can apply that to CassandraModule, JPA module, InmemoryModule by moving ThreadIdGuessingAlgorithm APIs to MailboxManager. That's will solve the constructor loop.\r\n\r\nIs this scanning with ElasticSearch good enough for production? Until then we maybe can move on."", 'comment_created': datetime.datetime(2021, 7, 15, 10, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 670365380, 'comment_body': ""If it's not yet. I guess we can come back and remove these message mapper dark magic later?"", 'comment_created': datetime.datetime(2021, 7, 15, 11, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 670907272, 'comment_body': 'Why this FQDN?', 'comment_created': datetime.datetime(2021, 7, 16, 1, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670907421, 'comment_body': 'We likely do not need this to be stored', 'comment_created': datetime.datetime(2021, 7, 16, 1, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 670908279, 'comment_body': 'Fair', 'comment_created': datetime.datetime(2021, 7, 16, 1, 44, 17, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '8bbc3ddf134dfd72482626d4150acfc81dd235a1', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f6e69d2e06cf11691a0420019b63338dbcc910', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e2ce87f566478fa47a55bd71da7c9d7624fc481', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '978749812fb5e447173572f106e3e0d2bcfc1324', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41c4c21b48d1ecd2594d3e1ab65c1c4a599b75e8', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
694863573,JAMES-3516 Update upgrade instructions follow adding threadId to ElasticSearch breaking change ,,True,547,https://api.github.com/repos/apache/james-project/pulls/547,https://github.com/apache/james-project/pull/547,closed,26,1,1,2,0,2,0,0,[],2021-07-22 04:34:57+00:00,2021-07-22 11:18:23+00:00,24206.0,6:43:26,"[{'comment_id': 674497074, 'comment_body': '```suggestion\r\nWe alreadyhave this field as part of newly created mappings, but we need to explicitly add this field to existing indices by doing:\r\n```', 'comment_created': datetime.datetime(2021, 7, 22, 4, 43, 58, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 674499787, 'comment_body': 'While we are at it `### Adding threadId column to message metadata tables` is missing from this menu...\r\n\r\nCan you add it?', 'comment_created': datetime.datetime(2021, 7, 22, 4, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': 'c74fec7aca21489155427cd30e97710246d7654d', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8126857f00528465a4eb3395dac14686985d0d30', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
695069118,JAMES-3516 Implement Thread Cassandra table,WIP: tests to be written,True,550,https://api.github.com/repos/apache/james-project/pulls/550,https://github.com/apache/james-project/pull/550,closed,424,0,6,1,3,9,0,0,[],2021-07-22 10:59:26+00:00,2021-08-03 02:01:13+00:00,1004507.0,"11 days, 15:01:47","[{'comment_id': 675256468, 'comment_body': 'Specify concurrency upon flatmap', 'comment_created': datetime.datetime(2021, 7, 23, 1, 24, 18, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 675256499, 'comment_body': 'Idem', 'comment_created': datetime.datetime(2021, 7, 23, 1, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 675424397, 'comment_body': 'Static import', 'comment_created': datetime.datetime(2021, 7, 23, 9, 23, 39, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 675425124, 'comment_body': 'Can we have a distinct `CassandraThreadIdGuessingModule` ?', 'comment_created': datetime.datetime(2021, 7, 23, 9, 24, 50, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 675425430, 'comment_body': 'And this one?', 'comment_created': datetime.datetime(2021, 7, 23, 9, 25, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 675442229, 'comment_body': 'I mean can we have a dedicated Guice module <3 ?', 'comment_created': datetime.datetime(2021, 7, 23, 9, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 675469204, 'comment_body': 'do you mean separate it like this?\r\n![image](https://user-images.githubusercontent.com/55171818/126770339-6c28796d-59bc-45dd-bddb-ce2978fb73fd.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 23, 10, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 675475136, 'comment_body': 'Or I should put ThreadId module here?\r\n![image](https://user-images.githubusercontent.com/55171818/126771404-6c9c3a26-8fdc-47fd-b166-bc82d65c180b.png)\r\n', 'comment_created': datetime.datetime(2021, 7, 23, 10, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 675988617, 'comment_body': 'Yes. To be honnest I think in some configuration supporting threads does not make sense.\r\n\r\n(IMAP only)\r\n\r\nHaving it separated makes it easier to switch it off if needed.', 'comment_created': datetime.datetime(2021, 7, 24, 11, 40, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '37920351e5faa58ba9cb8c9d65cb94249d973d32', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
699401286,JAMES-3516 Thread related data should be cleaned when MailboxDeletion or Expunged event happens,,True,560,https://api.github.com/repos/apache/james-project/pulls/560,https://github.com/apache/james-project/pull/560,closed,551,10,13,4,5,3,0,0,[],2021-07-29 10:19:35+00:00,2021-08-06 09:15:54+00:00,687379.0,"7 days, 22:56:19","[{'comment_id': 679035349, 'comment_body': 'I would prefer us to write a POJO rather than relying on a pair...', 'comment_created': datetime.datetime(2021, 7, 29, 10, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 679037595, 'comment_body': 'Please write tests for this clean up:\r\n\r\n - You perform it only for mailbox deletion\r\n - If you perform the deletion after the message is deleted in case of failure, you will  never do the cleanup...', 'comment_created': datetime.datetime(2021, 7, 29, 10, 42, 33, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 679038111, 'comment_body': 'CassandraMailboxManagerTest.DeletionTests', 'comment_created': datetime.datetime(2021, 7, 29, 10, 43, 25, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '14d98a6ef7c9846cc9444bba5bee9373fe4b7ec4', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60ce696b166fb1e7e9ee51227271941dcd725cf0', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06272aa2e8113f95bedd6d377619fd8b607768c3', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dee76c909b0338a05a6b71b2aa50c8d622c4d8db', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2
697497622,JAMES-3516 Implement ThreadIdGuessingAlgorithm for Distributed module,"The problem now is that the new message can't find related thread data from the thread table.
My guess is the Cassandra write is not finished yet before other new messages coming, or maybe even my code writing to Cassandra is not working.
I am working on this.",True,554,https://api.github.com/repos/apache/james-project/pulls/554,https://github.com/apache/james-project/pull/554,closed,395,52,11,2,6,12,0,0,[],2021-07-27 03:13:45+00:00,2021-08-05 07:12:18+00:00,791913.0,"9 days, 3:58:33","[{'comment_id': 677093022, 'comment_body': 'Store => Cassandra ?', 'comment_created': datetime.datetime(2021, 7, 27, 3, 37, 31, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 677093252, 'comment_body': 'I guess you need to subscribe (and schedule on an elastic scheduler) the insertSome mono', 'comment_created': datetime.datetime(2021, 7, 27, 3, 38, 21, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 677131311, 'comment_body': ""I tried .blockLast\r\n![image](https://user-images.githubusercontent.com/55171818/127100264-52b81e33-2f22-4165-9c2f-83d8880c6538.png)\r\nAnd then test guessing threadId for two newly related messages (non message before):\r\n![image](https://user-images.githubusercontent.com/55171818/127100406-edd20dbe-b74b-4f0c-872d-a8dcc62d2362.png)\r\nThe test was green. It's look like guessThreadId using Cassandra is ok now. \r\n\r\nBut the getThread API using ElasticSearch do not work properly. Even I tried to plug SearchThreadIdGuessingAlgorithm to Cassandra module and the result using ES is still not proper.\r\nThe inmemory test using ScanningSearch is ok, so my guess problem is at ES. I will continue working on this.\r\n"", 'comment_created': datetime.datetime(2021, 7, 27, 5, 34, 9, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 677135071, 'comment_body': '`flatMap(id -> insertSome(xxx).thenReturn(id))`', 'comment_created': datetime.datetime(2021, 7, 27, 5, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678016693, 'comment_body': 'I found it :)', 'comment_created': datetime.datetime(2021, 7, 28, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'quantranhong1999', 'type': 'User'}, {'comment_id': 678019384, 'comment_body': 'I prefer to not use the .sleep and wrap the assertion in an await.\r\n\r\n`Await.untilAsserted(() -> ...)`', 'comment_created': datetime.datetime(2021, 7, 28, 6, 44, 55, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678020766, 'comment_body': '```suggestion\r\n  @throws(classOf[IOException])\r\n```\r\n\r\nWe IMO do not need this...', 'comment_created': datetime.datetime(2021, 7, 28, 6, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678020891, 'comment_body': 'debug spotted', 'comment_created': datetime.datetime(2021, 7, 28, 6, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678020972, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 7, 28, 6, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678021102, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 7, 28, 6, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678021154, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 7, 28, 6, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}, {'comment_id': 678021245, 'comment_body': 'idem', 'comment_created': datetime.datetime(2021, 7, 28, 6, 48, 19, tzinfo=datetime.timezone.utc), 'commenter': 'chibenwa', 'type': 'User'}]","[{'commit_sha': '30ebb6340fbd21db12c6c41c537997f40a3bf28f', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc39f03ad7aa9b6b259bca666e3b81d04ddd7fb9', 'committer_username': 'quantranhong1999', 'committer_name': 'Trần Hồng Quân', 'committer_email': None, 'commit_date': datetime.datetime(2019, 9, 11, 2, 56, 31, tzinfo=datetime.timezone.utc)}]",Trần Hồng Quân,55171818,,User,,46,,5,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
38917208,james-project,apache/james-project,Java,466,865,56,133,15637,18,42,18,"[{'id': 2018975495, 'number': 2376, 'closed': datetime.datetime(2024, 8, 19, 5, 49, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 14, 10, 30, 54, tzinfo=datetime.timezone.utc), 'time_taken': 415089.0, 'time_delta': '4 days, 19:18:09', 'additions': 189, 'deletions': 39, 'state': 'closed'}, {'id': 2003333014, 'number': 2370, 'closed': datetime.datetime(2024, 8, 6, 3, 4, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 8, 5, 7, 38, 2, tzinfo=datetime.timezone.utc), 'time_taken': 69963.0, 'time_delta': '19:26:03', 'additions': 27, 'deletions': 0, 'state': 'closed'}, {'id': 1995726785, 'number': 2369, 'closed': datetime.datetime(2024, 8, 14, 2, 30, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 31, 7, 4, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1193145.0, 'time_delta': '13 days, 19:25:45', 'additions': 63, 'deletions': 55, 'state': 'closed'}, {'id': 1961479245, 'number': 2343, 'closed': datetime.datetime(2024, 7, 12, 0, 51, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 10, 4, 58, 8, tzinfo=datetime.timezone.utc), 'time_taken': 157990.0, 'time_delta': '1 day, 19:53:10', 'additions': 83, 'deletions': 31, 'state': 'closed'}, {'id': 1954863525, 'number': 2339, 'closed': datetime.datetime(2024, 7, 5, 14, 1, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 7, 5, 9, 40, 22, tzinfo=datetime.timezone.utc), 'time_taken': 15656.0, 'time_delta': '4:20:56', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 1939646554, 'number': 2315, 'closed': datetime.datetime(2024, 8, 12, 2, 46, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 26, 10, 7, 10, tzinfo=datetime.timezone.utc), 'time_taken': 4034375.0, 'time_delta': '46 days, 16:39:35', 'additions': 264, 'deletions': 194, 'state': 'closed'}, {'id': 1937284275, 'number': 2313, 'closed': datetime.datetime(2024, 6, 27, 9, 47, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 25, 9, 30, 20, tzinfo=datetime.timezone.utc), 'time_taken': 173819.0, 'time_delta': '2 days, 0:16:59', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 1920358618, 'number': 2301, 'closed': datetime.datetime(2024, 6, 17, 12, 40, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 14, 9, 55, 41, tzinfo=datetime.timezone.utc), 'time_taken': 269118.0, 'time_delta': '3 days, 2:45:18', 'additions': 49, 'deletions': 1, 'state': 'closed'}, {'id': 1916134477, 'number': 2295, 'closed': datetime.datetime(2024, 6, 14, 7, 55, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 12, 9, 27, tzinfo=datetime.timezone.utc), 'time_taken': 167284.0, 'time_delta': '1 day, 22:28:04', 'additions': 0, 'deletions': 14, 'state': 'closed'}, {'id': 1904551898, 'number': 2277, 'closed': datetime.datetime(2024, 6, 6, 6, 52, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 6, 5, 8, 40, 36, tzinfo=datetime.timezone.utc), 'time_taken': 79914.0, 'time_delta': '22:11:54', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1877559336, 'number': 2250, 'closed': datetime.datetime(2024, 5, 21, 2, 39, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 20, 5, 1, 27, tzinfo=datetime.timezone.utc), 'time_taken': 77899.0, 'time_delta': '21:38:19', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 1870774667, 'number': 2245, 'closed': datetime.datetime(2024, 5, 17, 7, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 15, 10, 8, 5, tzinfo=datetime.timezone.utc), 'time_taken': 162326.0, 'time_delta': '1 day, 21:05:26', 'additions': 118, 'deletions': 9, 'state': 'closed'}, {'id': 1866209316, 'number': 2243, 'closed': datetime.datetime(2024, 5, 16, 11, 41, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 13, 10, 4, 13, tzinfo=datetime.timezone.utc), 'time_taken': 265061.0, 'time_delta': '3 days, 1:37:41', 'additions': 26, 'deletions': 0, 'state': 'closed'}, {'id': 1857877151, 'number': 2234, 'closed': datetime.datetime(2024, 5, 8, 2, 50, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 7, 9, 51, 37, tzinfo=datetime.timezone.utc), 'time_taken': 61161.0, 'time_delta': '16:59:21', 'additions': 64, 'deletions': 3, 'state': 'closed'}, {'id': 1851247147, 'number': 2225, 'closed': datetime.datetime(2024, 5, 14, 2, 57, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 5, 2, 10, 55, 2, tzinfo=datetime.timezone.utc), 'time_taken': 1008136.0, 'time_delta': '11 days, 16:02:16', 'additions': 189, 'deletions': 14, 'state': 'closed'}, {'id': 1844947674, 'number': 2220, 'closed': datetime.datetime(2024, 5, 2, 7, 9, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 29, 5, 51, 29, tzinfo=datetime.timezone.utc), 'time_taken': 263858.0, 'time_delta': '3 days, 1:17:38', 'additions': 40, 'deletions': 22, 'state': 'closed'}, {'id': 1831276252, 'number': 2209, 'closed': datetime.datetime(2024, 4, 22, 2, 10, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 19, 10, 20, 25, tzinfo=datetime.timezone.utc), 'time_taken': 229817.0, 'time_delta': '2 days, 15:50:17', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 1826966015, 'number': 2207, 'closed': datetime.datetime(2024, 4, 22, 2, 11, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 17, 9, 7, 52, tzinfo=datetime.timezone.utc), 'time_taken': 406992.0, 'time_delta': '4 days, 17:03:12', 'additions': 27, 'deletions': 23, 'state': 'closed'}, {'id': 1826573577, 'number': 2206, 'closed': datetime.datetime(2024, 4, 17, 10, 13, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 17, 4, 9, 54, tzinfo=datetime.timezone.utc), 'time_taken': 21789.0, 'time_delta': '6:03:09', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 1811721953, 'number': 2191, 'closed': datetime.datetime(2024, 4, 22, 2, 25, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 8, 9, 57, 57, tzinfo=datetime.timezone.utc), 'time_taken': 1182476.0, 'time_delta': '13 days, 16:27:56', 'additions': 641, 'deletions': 58, 'state': 'closed'}, {'id': 1808531438, 'number': 2185, 'closed': datetime.datetime(2024, 4, 9, 3, 26, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 5, 6, 13, 11, tzinfo=datetime.timezone.utc), 'time_taken': 335625.0, 'time_delta': '3 days, 21:13:45', 'additions': 78, 'deletions': 17, 'state': 'closed'}, {'id': 1806622477, 'number': 2179, 'closed': datetime.datetime(2024, 4, 9, 3, 22, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 4, 4, 10, 8, 18, tzinfo=datetime.timezone.utc), 'time_taken': 407681.0, 'time_delta': '4 days, 17:14:41', 'additions': 190, 'deletions': 3, 'state': 'closed'}, {'id': 1797783785, 'number': 2166, 'closed': datetime.datetime(2024, 4, 2, 2, 26, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 29, 11, 18, 7, tzinfo=datetime.timezone.utc), 'time_taken': 313685.0, 'time_delta': '3 days, 15:08:05', 'additions': 872, 'deletions': 23, 'state': 'closed'}, {'id': 1793074388, 'number': 2160, 'closed': datetime.datetime(2024, 3, 27, 8, 52, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 27, 4, 14, 27, tzinfo=datetime.timezone.utc), 'time_taken': 16712.0, 'time_delta': '4:38:32', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1793059408, 'number': 2159, 'closed': datetime.datetime(2024, 3, 29, 3, 11, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 27, 3, 56, 15, tzinfo=datetime.timezone.utc), 'time_taken': 170130.0, 'time_delta': '1 day, 23:15:30', 'additions': 122, 'deletions': 4, 'state': 'closed'}, {'id': 1788624868, 'number': 2152, 'closed': datetime.datetime(2024, 3, 25, 14, 20, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 25, 4, 32, 2, tzinfo=datetime.timezone.utc), 'time_taken': 35320.0, 'time_delta': '9:48:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1785903960, 'number': 2148, 'closed': datetime.datetime(2024, 3, 26, 3, 12, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 22, 5, 40, 54, tzinfo=datetime.timezone.utc), 'time_taken': 336667.0, 'time_delta': '3 days, 21:31:07', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1784038723, 'number': 2146, 'closed': datetime.datetime(2024, 3, 22, 9, 15, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 21, 9, 47, 42, tzinfo=datetime.timezone.utc), 'time_taken': 84473.0, 'time_delta': '23:27:53', 'additions': 7, 'deletions': 28, 'state': 'closed'}, {'id': 1783998924, 'number': 2145, 'closed': datetime.datetime(2024, 3, 22, 13, 57, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 21, 9, 26, 23, tzinfo=datetime.timezone.utc), 'time_taken': 102678.0, 'time_delta': '1 day, 4:31:18', 'additions': 281, 'deletions': 15, 'state': 'closed'}, {'id': 1771691077, 'number': 2119, 'closed': datetime.datetime(2024, 3, 15, 2, 13, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 8, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 62272.0, 'time_delta': '17:17:52', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1771377116, 'number': 2116, 'closed': datetime.datetime(2024, 4, 15, 3, 39, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 4, 48, 33, tzinfo=datetime.timezone.utc), 'time_taken': 2760650.0, 'time_delta': '31 days, 22:50:50', 'additions': 1, 'deletions': 7, 'state': 'closed'}, {'id': 1771353081, 'number': 2115, 'closed': datetime.datetime(2024, 3, 18, 4, 4, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 4, 29, 4, tzinfo=datetime.timezone.utc), 'time_taken': 344123.0, 'time_delta': '3 days, 23:35:23', 'additions': 115, 'deletions': 3, 'state': 'closed'}, {'id': 1771323259, 'number': 2114, 'closed': datetime.datetime(2024, 3, 14, 7, 56, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 14, 4, 5, 24, tzinfo=datetime.timezone.utc), 'time_taken': 13879.0, 'time_delta': '3:51:19', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 1760186009, 'number': 2094, 'closed': datetime.datetime(2024, 3, 10, 20, 23, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 3, 7, 4, 27, 23, tzinfo=datetime.timezone.utc), 'time_taken': 316552.0, 'time_delta': '3 days, 15:55:52', 'additions': 29, 'deletions': 24, 'state': 'closed'}, {'id': 1734396521, 'number': 2028, 'closed': datetime.datetime(2024, 4, 16, 4, 31, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 20, 10, 33, 56, tzinfo=datetime.timezone.utc), 'time_taken': 4816659.0, 'time_delta': '55 days, 17:57:39', 'additions': 719, 'deletions': 203, 'state': 'closed'}, {'id': 1726794250, 'number': 2003, 'closed': datetime.datetime(2024, 2, 16, 10, 15, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 15, 3, 25, 29, tzinfo=datetime.timezone.utc), 'time_taken': 111021.0, 'time_delta': '1 day, 6:50:21', 'additions': 18, 'deletions': 4, 'state': 'closed'}, {'id': 1715152504, 'number': 1985, 'closed': datetime.datetime(2024, 2, 16, 2, 26, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 7, 8, 19, 39, tzinfo=datetime.timezone.utc), 'time_taken': 756402.0, 'time_delta': '8 days, 18:06:42', 'additions': 245, 'deletions': 10, 'state': 'closed'}, {'id': 1711285575, 'number': 1977, 'closed': datetime.datetime(2024, 2, 7, 2, 25, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 2, 5, 10, 0, 6, tzinfo=datetime.timezone.utc), 'time_taken': 145535.0, 'time_delta': '1 day, 16:25:35', 'additions': 412, 'deletions': 17, 'state': 'closed'}, {'id': 1701250809, 'number': 1963, 'closed': datetime.datetime(2024, 3, 19, 7, 50, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 30, 4, 27, 51, tzinfo=datetime.timezone.utc), 'time_taken': 4245776.0, 'time_delta': '49 days, 3:22:56', 'additions': 700, 'deletions': 983, 'state': 'closed'}, {'id': 1693329086, 'number': 1943, 'closed': datetime.datetime(2024, 1, 31, 2, 21, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 24, 9, 42, 28, tzinfo=datetime.timezone.utc), 'time_taken': 578313.0, 'time_delta': '6 days, 16:38:33', 'additions': 379, 'deletions': 9, 'state': 'closed'}, {'id': 1689448984, 'number': 1936, 'closed': datetime.datetime(2024, 1, 24, 8, 8, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 22, 9, 39, 57, tzinfo=datetime.timezone.utc), 'time_taken': 167286.0, 'time_delta': '1 day, 22:28:06', 'additions': 445, 'deletions': 136, 'state': 'closed'}, {'id': 1680435182, 'number': 1924, 'closed': datetime.datetime(2024, 1, 17, 3, 12, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 16, 9, 2, 3, tzinfo=datetime.timezone.utc), 'time_taken': 65436.0, 'time_delta': '18:10:36', 'additions': 18, 'deletions': 2, 'state': 'closed'}, {'id': 1680388088, 'number': 1923, 'closed': datetime.datetime(2024, 1, 17, 3, 25, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 16, 8, 39, 56, tzinfo=datetime.timezone.utc), 'time_taken': 67513.0, 'time_delta': '18:45:13', 'additions': 231, 'deletions': 0, 'state': 'closed'}, {'id': 1678870604, 'number': 1920, 'closed': datetime.datetime(2024, 1, 16, 2, 29, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 15, 9, 21, 19, tzinfo=datetime.timezone.utc), 'time_taken': 61689.0, 'time_delta': '17:08:09', 'additions': 140, 'deletions': 1, 'state': 'closed'}, {'id': 1670327807, 'number': 1908, 'closed': datetime.datetime(2024, 1, 10, 9, 57, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 9, 9, 55, 58, tzinfo=datetime.timezone.utc), 'time_taken': 86463.0, 'time_delta': '1 day, 0:01:03', 'additions': 1008, 'deletions': 8, 'state': 'closed'}, {'id': 1667423661, 'number': 1902, 'closed': datetime.datetime(2024, 1, 8, 6, 53, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 6, 17, 29, 19, tzinfo=datetime.timezone.utc), 'time_taken': 134649.0, 'time_delta': '1 day, 13:24:09', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1664358751, 'number': 1899, 'closed': datetime.datetime(2024, 1, 5, 7, 12, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 9, 12, 8, tzinfo=datetime.timezone.utc), 'time_taken': 79210.0, 'time_delta': '22:00:10', 'additions': 17, 'deletions': 17, 'state': 'closed'}, {'id': 1664356465, 'number': 1898, 'closed': datetime.datetime(2024, 1, 12, 2, 29, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 4, 9, 10, 24, tzinfo=datetime.timezone.utc), 'time_taken': 667155.0, 'time_delta': '7 days, 17:19:15', 'additions': 17, 'deletions': 17, 'state': 'closed'}, {'id': 1661648556, 'number': 1891, 'closed': datetime.datetime(2024, 1, 10, 7, 3, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2024, 1, 2, 10, 25, 23, tzinfo=datetime.timezone.utc), 'time_taken': 679109.0, 'time_delta': '7 days, 20:38:29', 'additions': 1472, 'deletions': 47, 'state': 'closed'}, {'id': 1658707733, 'number': 1886, 'closed': datetime.datetime(2024, 1, 3, 3, 16, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 28, 7, 23, 46, tzinfo=datetime.timezone.utc), 'time_taken': 503564.0, 'time_delta': '5 days, 19:52:44', 'additions': 218, 'deletions': 42, 'state': 'closed'}, {'id': 1658703807, 'number': 1885, 'closed': datetime.datetime(2024, 1, 3, 3, 16, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 28, 7, 18, 43, tzinfo=datetime.timezone.utc), 'time_taken': 503878.0, 'time_delta': '5 days, 19:57:58', 'additions': 264, 'deletions': 39, 'state': 'closed'}, {'id': 1656525579, 'number': 1881, 'closed': datetime.datetime(2023, 12, 26, 7, 27, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 25, 10, 12, 7, tzinfo=datetime.timezone.utc), 'time_taken': 76504.0, 'time_delta': '21:15:04', 'additions': 349, 'deletions': 8, 'state': 'closed'}, {'id': 1653445800, 'number': 1873, 'closed': datetime.datetime(2023, 12, 21, 12, 21, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 21, 9, 46, 6, tzinfo=datetime.timezone.utc), 'time_taken': 9344.0, 'time_delta': '2:35:44', 'additions': 164, 'deletions': 46, 'state': 'closed'}, {'id': 1651567089, 'number': 1870, 'closed': datetime.datetime(2023, 12, 21, 3, 45, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 20, 7, 28, 47, tzinfo=datetime.timezone.utc), 'time_taken': 72988.0, 'time_delta': '20:16:28', 'additions': 333, 'deletions': 15, 'state': 'closed'}, {'id': 1649867834, 'number': 1865, 'closed': datetime.datetime(2023, 12, 19, 7, 43, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 7, 40, 45, tzinfo=datetime.timezone.utc), 'time_taken': 152.0, 'time_delta': '0:02:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1649633234, 'number': 1864, 'closed': datetime.datetime(2023, 12, 19, 3, 26, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 19, 2, 57, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1782.0, 'time_delta': '0:29:42', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 1645832716, 'number': 1860, 'closed': datetime.datetime(2023, 12, 19, 2, 40, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 15, 11, 4, 13, tzinfo=datetime.timezone.utc), 'time_taken': 315354.0, 'time_delta': '3 days, 15:35:54', 'additions': 486, 'deletions': 1339, 'state': 'closed'}, {'id': 1643815007, 'number': 1852, 'closed': datetime.datetime(2023, 12, 19, 2, 49, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 14, 9, 13, 15, tzinfo=datetime.timezone.utc), 'time_taken': 408987.0, 'time_delta': '4 days, 17:36:27', 'additions': 158, 'deletions': 31, 'state': 'closed'}, {'id': 1638564486, 'number': 1849, 'closed': datetime.datetime(2023, 12, 18, 7, 47, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 11, 10, 46, 2, tzinfo=datetime.timezone.utc), 'time_taken': 594087.0, 'time_delta': '6 days, 21:01:27', 'additions': 505, 'deletions': 395, 'state': 'closed'}, {'id': 1635535953, 'number': 1845, 'closed': datetime.datetime(2023, 12, 11, 6, 45, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 8, 5, 8, 33, tzinfo=datetime.timezone.utc), 'time_taken': 265041.0, 'time_delta': '3 days, 1:37:21', 'additions': 19, 'deletions': 37, 'state': 'closed'}, {'id': 1633835085, 'number': 1843, 'closed': datetime.datetime(2023, 12, 7, 19, 47, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 7, 7, 8, 5, tzinfo=datetime.timezone.utc), 'time_taken': 45557.0, 'time_delta': '12:39:17', 'additions': 22, 'deletions': 3, 'state': 'closed'}, {'id': 1629585979, 'number': 1840, 'closed': datetime.datetime(2023, 12, 5, 8, 33, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 5, 5, 30, 38, tzinfo=datetime.timezone.utc), 'time_taken': 10985.0, 'time_delta': '3:03:05', 'additions': 79, 'deletions': 78, 'state': 'closed'}, {'id': 1627657628, 'number': 1835, 'closed': datetime.datetime(2023, 12, 4, 7, 38, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 12, 4, 6, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 3264.0, 'time_delta': '0:54:24', 'additions': 115, 'deletions': 68, 'state': 'closed'}, {'id': 1617772850, 'number': 1819, 'closed': datetime.datetime(2023, 11, 29, 8, 25, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 27, 11, 18, 31, tzinfo=datetime.timezone.utc), 'time_taken': 162426.0, 'time_delta': '1 day, 21:07:06', 'additions': 473, 'deletions': 202, 'state': 'closed'}, {'id': 1614163891, 'number': 1813, 'closed': datetime.datetime(2023, 11, 27, 4, 30, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 23, 10, 4, 21, tzinfo=datetime.timezone.utc), 'time_taken': 325569.0, 'time_delta': '3 days, 18:26:09', 'additions': 398, 'deletions': 77, 'state': 'closed'}, {'id': 1610598488, 'number': 1806, 'closed': datetime.datetime(2023, 11, 22, 11, 46, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 21, 9, 50, 6, tzinfo=datetime.timezone.utc), 'time_taken': 93412.0, 'time_delta': '1 day, 1:56:52', 'additions': 169, 'deletions': 20, 'state': 'closed'}, {'id': 1608786529, 'number': 1802, 'closed': datetime.datetime(2023, 11, 21, 2, 21, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 20, 10, 18, 49, tzinfo=datetime.timezone.utc), 'time_taken': 57733.0, 'time_delta': '16:02:13', 'additions': 140, 'deletions': 24, 'state': 'closed'}, {'id': 1602270856, 'number': 1798, 'closed': datetime.datetime(2023, 11, 17, 2, 57, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 15, 10, 19, tzinfo=datetime.timezone.utc), 'time_taken': 146298.0, 'time_delta': '1 day, 16:38:18', 'additions': 62, 'deletions': 6, 'state': 'closed'}, {'id': 1600092022, 'number': 1796, 'closed': datetime.datetime(2023, 11, 14, 11, 33, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 14, 5, 36, 23, tzinfo=datetime.timezone.utc), 'time_taken': 21408.0, 'time_delta': '5:56:48', 'additions': 12, 'deletions': 3, 'state': 'closed'}, {'id': 1598501489, 'number': 1794, 'closed': datetime.datetime(2023, 11, 14, 8, 2, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 13, 9, 37, 50, tzinfo=datetime.timezone.utc), 'time_taken': 80691.0, 'time_delta': '22:24:51', 'additions': 81, 'deletions': 1, 'state': 'closed'}, {'id': 1588244421, 'number': 1780, 'closed': datetime.datetime(2023, 11, 9, 4, 45, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 6, 9, 57, 46, tzinfo=datetime.timezone.utc), 'time_taken': 240457.0, 'time_delta': '2 days, 18:47:37', 'additions': 653, 'deletions': 178, 'state': 'closed'}, {'id': 1582408595, 'number': 1772, 'closed': datetime.datetime(2023, 11, 7, 8, 17, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 1, 10, 21, 58, tzinfo=datetime.timezone.utc), 'time_taken': 510960.0, 'time_delta': '5 days, 21:56:00', 'additions': 316, 'deletions': 154, 'state': 'closed'}, {'id': 1580715221, 'number': 1768, 'closed': datetime.datetime(2023, 11, 1, 3, 50, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 31, 10, 57, 34, tzinfo=datetime.timezone.utc), 'time_taken': 60804.0, 'time_delta': '16:53:24', 'additions': 86, 'deletions': 2, 'state': 'closed'}, {'id': 1560014066, 'number': 1756, 'closed': datetime.datetime(2023, 10, 18, 2, 9, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 10, 17, 8, 1, 28, tzinfo=datetime.timezone.utc), 'time_taken': 65267.0, 'time_delta': '18:07:47', 'additions': 152, 'deletions': 40, 'state': 'closed'}, {'id': 1529812550, 'number': 1739, 'closed': datetime.datetime(2023, 10, 3, 3, 13, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 26, 3, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 602926.0, 'time_delta': '6 days, 23:28:46', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 1528616810, 'number': 1738, 'closed': datetime.datetime(2023, 10, 6, 2, 6, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 25, 11, 34, 57, tzinfo=datetime.timezone.utc), 'time_taken': 916281.0, 'time_delta': '10 days, 14:31:21', 'additions': 722, 'deletions': 29, 'state': 'closed'}, {'id': 1525948306, 'number': 1737, 'closed': datetime.datetime(2023, 9, 26, 7, 5, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 22, 5, 11, 7, tzinfo=datetime.timezone.utc), 'time_taken': 352452.0, 'time_delta': '4 days, 1:54:12', 'additions': 195, 'deletions': 0, 'state': 'closed'}, {'id': 1516999224, 'number': 1729, 'closed': datetime.datetime(2023, 9, 18, 7, 22, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 15, 9, 17, 15, tzinfo=datetime.timezone.utc), 'time_taken': 252293.0, 'time_delta': '2 days, 22:04:53', 'additions': 391, 'deletions': 6, 'state': 'closed'}, {'id': 1515251005, 'number': 1727, 'closed': datetime.datetime(2023, 9, 15, 8, 43, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 14, 8, 42, 58, tzinfo=datetime.timezone.utc), 'time_taken': 86403.0, 'time_delta': '1 day, 0:00:03', 'additions': 128, 'deletions': 81, 'state': 'closed'}, {'id': 1513616191, 'number': 1725, 'closed': datetime.datetime(2023, 9, 15, 8, 42, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 13, 10, 18, 35, tzinfo=datetime.timezone.utc), 'time_taken': 167052.0, 'time_delta': '1 day, 22:24:12', 'additions': 5, 'deletions': 4, 'state': 'closed'}, {'id': 1505818828, 'number': 1719, 'closed': datetime.datetime(2023, 9, 11, 3, 17, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 7, 8, 17, 27, tzinfo=datetime.timezone.utc), 'time_taken': 327579.0, 'time_delta': '3 days, 18:59:39', 'additions': 18, 'deletions': 12, 'state': 'closed'}, {'id': 1491836876, 'number': 1705, 'closed': datetime.datetime(2023, 9, 1, 9, 34, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 28, 10, 37, 46, tzinfo=datetime.timezone.utc), 'time_taken': 341778.0, 'time_delta': '3 days, 22:56:18', 'additions': 476, 'deletions': 12, 'state': 'closed'}, {'id': 1486166206, 'number': 1697, 'closed': datetime.datetime(2023, 8, 26, 5, 51, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 23, 10, 25, 39, tzinfo=datetime.timezone.utc), 'time_taken': 242751.0, 'time_delta': '2 days, 19:25:51', 'additions': 109, 'deletions': 111, 'state': 'closed'}, {'id': 1478714463, 'number': 1685, 'closed': datetime.datetime(2023, 8, 18, 8, 38, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 17, 9, 40, 21, tzinfo=datetime.timezone.utc), 'time_taken': 82684.0, 'time_delta': '22:58:04', 'additions': 57, 'deletions': 42, 'state': 'closed'}, {'id': 1477029440, 'number': 1680, 'closed': datetime.datetime(2023, 8, 18, 8, 38, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 16, 8, 9, 35, tzinfo=datetime.timezone.utc), 'time_taken': 174556.0, 'time_delta': '2 days, 0:29:16', 'additions': 46, 'deletions': 22, 'state': 'closed'}, {'id': 1470094706, 'number': 1674, 'closed': datetime.datetime(2023, 8, 16, 5, 36, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 10, 10, 32, 10, tzinfo=datetime.timezone.utc), 'time_taken': 500661.0, 'time_delta': '5 days, 19:04:21', 'additions': 397, 'deletions': 3, 'state': 'closed'}, {'id': 1466632244, 'number': 1671, 'closed': datetime.datetime(2023, 8, 18, 8, 39, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 10, 19, 27, tzinfo=datetime.timezone.utc), 'time_taken': 857983.0, 'time_delta': '9 days, 22:19:43', 'additions': 192, 'deletions': 2, 'state': 'closed'}, {'id': 1464754467, 'number': 1669, 'closed': datetime.datetime(2023, 8, 17, 4, 20, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 7, 8, 0, 42, tzinfo=datetime.timezone.utc), 'time_taken': 850777.0, 'time_delta': '9 days, 20:19:37', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1457792720, 'number': 1665, 'closed': datetime.datetime(2023, 8, 3, 2, 27, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 10, 10, 38, tzinfo=datetime.timezone.utc), 'time_taken': 145038.0, 'time_delta': '1 day, 16:17:18', 'additions': 58, 'deletions': 8, 'state': 'closed'}, {'id': 1455683963, 'number': 1660, 'closed': datetime.datetime(2023, 8, 26, 18, 1, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 7, 15, 1, tzinfo=datetime.timezone.utc), 'time_taken': 2285198.0, 'time_delta': '26 days, 10:46:38', 'additions': 125, 'deletions': 42, 'state': 'closed'}, {'id': 1442564512, 'number': 1652, 'closed': datetime.datetime(2023, 7, 28, 3, 26, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 20, 10, 20, 43, tzinfo=datetime.timezone.utc), 'time_taken': 666320.0, 'time_delta': '7 days, 17:05:20', 'additions': 837, 'deletions': 145, 'state': 'closed'}, {'id': 1439009975, 'number': 1649, 'closed': datetime.datetime(2023, 7, 21, 4, 43, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 10, 38, 33, tzinfo=datetime.timezone.utc), 'time_taken': 237882.0, 'time_delta': '2 days, 18:04:42', 'additions': 366, 'deletions': 30, 'state': 'closed'}, {'id': 1437007749, 'number': 1646, 'closed': datetime.datetime(2023, 7, 18, 2, 29, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 17, 10, 3, 42, tzinfo=datetime.timezone.utc), 'time_taken': 59176.0, 'time_delta': '16:26:16', 'additions': 218, 'deletions': 10, 'state': 'closed'}, {'id': 1430934380, 'number': 1644, 'closed': datetime.datetime(2023, 7, 18, 1, 18, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 12, 9, 43, 40, tzinfo=datetime.timezone.utc), 'time_taken': 488081.0, 'time_delta': '5 days, 15:34:41', 'additions': 216, 'deletions': 5, 'state': 'closed'}, {'id': 1428706631, 'number': 1641, 'closed': datetime.datetime(2023, 7, 12, 3, 45, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 4, 57, 22, tzinfo=datetime.timezone.utc), 'time_taken': 82066.0, 'time_delta': '22:47:46', 'additions': 89, 'deletions': 1, 'state': 'closed'}, {'id': 1422204016, 'number': 1634, 'closed': datetime.datetime(2023, 7, 7, 1, 11, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 6, 4, 26, 56, tzinfo=datetime.timezone.utc), 'time_taken': 74671.0, 'time_delta': '20:44:31', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 1403090238, 'number': 1602, 'closed': datetime.datetime(2023, 6, 23, 7, 56, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 22, 8, 24, 37, tzinfo=datetime.timezone.utc), 'time_taken': 84739.0, 'time_delta': '23:32:19', 'additions': 42, 'deletions': 0, 'state': 'closed'}, {'id': 1390209788, 'number': 1591, 'closed': datetime.datetime(2023, 6, 14, 1, 49, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 13, 9, 25, 54, tzinfo=datetime.timezone.utc), 'time_taken': 58988.0, 'time_delta': '16:23:08', 'additions': 11, 'deletions': 6, 'state': 'closed'}, {'id': 1361123054, 'number': 1571, 'closed': datetime.datetime(2023, 5, 25, 5, 44, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 23, 10, 23, 23, tzinfo=datetime.timezone.utc), 'time_taken': 156092.0, 'time_delta': '1 day, 19:21:32', 'additions': 447, 'deletions': 0, 'state': 'closed'}, {'id': 1358930829, 'number': 1570, 'closed': datetime.datetime(2023, 5, 25, 5, 45, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 22, 9, 57, 56, tzinfo=datetime.timezone.utc), 'time_taken': 244039.0, 'time_delta': '2 days, 19:47:19', 'additions': 986, 'deletions': 3, 'state': 'closed'}, {'id': 1355457507, 'number': 1566, 'closed': datetime.datetime(2023, 5, 24, 7, 18, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 18, 9, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 508872.0, 'time_delta': '5 days, 21:21:12', 'additions': 1115, 'deletions': 0, 'state': 'closed'}, {'id': 1353862569, 'number': 1564, 'closed': datetime.datetime(2023, 5, 18, 10, 10, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 17, 10, 7, 45, tzinfo=datetime.timezone.utc), 'time_taken': 86556.0, 'time_delta': '1 day, 0:02:36', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 1350487421, 'number': 1562, 'closed': datetime.datetime(2023, 5, 17, 1, 42, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 15, 10, 0, 30, tzinfo=datetime.timezone.utc), 'time_taken': 142937.0, 'time_delta': '1 day, 15:42:17', 'additions': 28, 'deletions': 22, 'state': 'closed'}, {'id': 1316415989, 'number': 1522, 'closed': datetime.datetime(2023, 4, 27, 8, 31, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 17, 11, 8, 10, tzinfo=datetime.timezone.utc), 'time_taken': 854618.0, 'time_delta': '9 days, 21:23:38', 'additions': 1386, 'deletions': 17, 'state': 'closed'}, {'id': 1304466208, 'number': 1511, 'closed': datetime.datetime(2023, 4, 13, 7, 23, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 6, 9, 58, 36, tzinfo=datetime.timezone.utc), 'time_taken': 595483.0, 'time_delta': '6 days, 21:24:43', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 1279696172, 'number': 1489, 'closed': datetime.datetime(2023, 3, 19, 21, 11, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 17, 5, 36, 17, tzinfo=datetime.timezone.utc), 'time_taken': 228930.0, 'time_delta': '2 days, 15:35:30', 'additions': 53, 'deletions': 2, 'state': 'closed'}, {'id': 1278226430, 'number': 1488, 'closed': datetime.datetime(2023, 3, 19, 14, 36, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 16, 9, 44, 19, tzinfo=datetime.timezone.utc), 'time_taken': 276706.0, 'time_delta': '3 days, 4:51:46', 'additions': 22, 'deletions': 2, 'state': 'closed'}, {'id': 1264225796, 'number': 1474, 'closed': datetime.datetime(2023, 3, 8, 7, 48, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 6, 10, 49, 51, tzinfo=datetime.timezone.utc), 'time_taken': 161890.0, 'time_delta': '1 day, 20:58:10', 'additions': 63, 'deletions': 4, 'state': 'closed'}, {'id': 1261867874, 'number': 1473, 'closed': datetime.datetime(2023, 3, 9, 2, 38, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 3, 10, 39, 55, tzinfo=datetime.timezone.utc), 'time_taken': 489505.0, 'time_delta': '5 days, 15:58:25', 'additions': 55, 'deletions': 13, 'state': 'closed'}, {'id': 1247063663, 'number': 1447, 'closed': datetime.datetime(2023, 2, 21, 1, 17, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 20, 10, 35, 53, tzinfo=datetime.timezone.utc), 'time_taken': 52918.0, 'time_delta': '14:41:58', 'additions': 658, 'deletions': 57, 'state': 'closed'}, {'id': 1238703372, 'number': 1440, 'closed': datetime.datetime(2023, 2, 24, 3, 13, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 13, 10, 0, 55, tzinfo=datetime.timezone.utc), 'time_taken': 925980.0, 'time_delta': '10 days, 17:13:00', 'additions': 9, 'deletions': 8, 'state': 'closed'}, {'id': 1234702368, 'number': 1429, 'closed': datetime.datetime(2023, 2, 9, 15, 27, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 9, 8, 6, tzinfo=datetime.timezone.utc), 'time_taken': 26494.0, 'time_delta': '7:21:34', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1224454696, 'number': 1417, 'closed': datetime.datetime(2023, 7, 5, 1, 47, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 1, 8, 8, 56, tzinfo=datetime.timezone.utc), 'time_taken': 13282695.0, 'time_delta': '153 days, 17:38:15', 'additions': 133, 'deletions': 129, 'state': 'closed'}, {'id': 1199932886, 'number': 1398, 'closed': datetime.datetime(2023, 1, 18, 5, 5, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 8, 44, 9, tzinfo=datetime.timezone.utc), 'time_taken': 73302.0, 'time_delta': '20:21:42', 'additions': 676, 'deletions': 6, 'state': 'closed'}, {'id': 1196199767, 'number': 1391, 'closed': datetime.datetime(2023, 1, 16, 12, 5, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 13, 5, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 284381.0, 'time_delta': '3 days, 6:59:41', 'additions': 54, 'deletions': 52, 'state': 'closed'}, {'id': 1193469445, 'number': 1388, 'closed': datetime.datetime(2023, 1, 16, 4, 31, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 11, 8, 43, 16, tzinfo=datetime.timezone.utc), 'time_taken': 416878.0, 'time_delta': '4 days, 19:47:58', 'additions': 13, 'deletions': 3, 'state': 'closed'}, {'id': 1192181727, 'number': 1386, 'closed': datetime.datetime(2023, 1, 16, 9, 13, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 10, 10, 56, 20, tzinfo=datetime.timezone.utc), 'time_taken': 512205.0, 'time_delta': '5 days, 22:16:45', 'additions': 422, 'deletions': 28, 'state': 'closed'}, {'id': 1190343827, 'number': 1380, 'closed': datetime.datetime(2023, 1, 11, 3, 23, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 9, 7, 50, 59, tzinfo=datetime.timezone.utc), 'time_taken': 156775.0, 'time_delta': '1 day, 19:32:55', 'additions': 453, 'deletions': 88, 'state': 'closed'}, {'id': 1186299593, 'number': 1375, 'closed': datetime.datetime(2023, 1, 11, 2, 35, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 5, 10, 45, 52, tzinfo=datetime.timezone.utc), 'time_taken': 488971.0, 'time_delta': '5 days, 15:49:31', 'additions': 974, 'deletions': 1, 'state': 'closed'}, {'id': 1184608584, 'number': 1371, 'closed': datetime.datetime(2023, 1, 5, 8, 38, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 4, 9, 42, 46, tzinfo=datetime.timezone.utc), 'time_taken': 82539.0, 'time_delta': '22:55:39', 'additions': 27, 'deletions': 1, 'state': 'closed'}, {'id': 1180563214, 'number': 1367, 'closed': datetime.datetime(2022, 12, 30, 1, 58, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 29, 22, 33, 8, tzinfo=datetime.timezone.utc), 'time_taken': 12330.0, 'time_delta': '3:25:30', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 1179319086, 'number': 1366, 'closed': datetime.datetime(2023, 1, 4, 2, 31, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 28, 11, 9, 13, tzinfo=datetime.timezone.utc), 'time_taken': 573722.0, 'time_delta': '6 days, 15:22:02', 'additions': 616, 'deletions': 19, 'state': 'closed'}, {'id': 1170472173, 'number': 1362, 'closed': datetime.datetime(2022, 12, 20, 13, 57, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 19, 9, 45, 27, tzinfo=datetime.timezone.utc), 'time_taken': 101528.0, 'time_delta': '1 day, 4:12:08', 'additions': 36, 'deletions': 30, 'state': 'closed'}, {'id': 1164829357, 'number': 1360, 'closed': datetime.datetime(2022, 12, 28, 2, 0, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 14, 10, 13, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1179998.0, 'time_delta': '13 days, 15:46:38', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 1153752654, 'number': 1353, 'closed': datetime.datetime(2022, 12, 28, 2, 5, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 8, 10, 14, 3, tzinfo=datetime.timezone.utc), 'time_taken': 1698681.0, 'time_delta': '19 days, 15:51:21', 'additions': 365, 'deletions': 21, 'state': 'closed'}, {'id': 1148621437, 'number': 1352, 'closed': datetime.datetime(2022, 12, 15, 8, 51, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 6, 10, 25, 15, tzinfo=datetime.timezone.utc), 'time_taken': 771982.0, 'time_delta': '8 days, 22:26:22', 'additions': 30, 'deletions': 14, 'state': 'closed'}, {'id': 1146329857, 'number': 1350, 'closed': datetime.datetime(2022, 12, 15, 8, 52, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 12, 5, 10, 49, 52, tzinfo=datetime.timezone.utc), 'time_taken': 856933.0, 'time_delta': '9 days, 22:02:13', 'additions': 418, 'deletions': 4, 'state': 'closed'}, {'id': 1138769040, 'number': 1338, 'closed': datetime.datetime(2022, 12, 12, 6, 13, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 29, 10, 38, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1107308.0, 'time_delta': '12 days, 19:35:08', 'additions': 950, 'deletions': 171, 'state': 'closed'}, {'id': 1137238283, 'number': 1337, 'closed': datetime.datetime(2022, 12, 5, 2, 54, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 28, 9, 25, 23, tzinfo=datetime.timezone.utc), 'time_taken': 581375.0, 'time_delta': '6 days, 17:29:35', 'additions': 11, 'deletions': 5, 'state': 'closed'}, {'id': 1134717983, 'number': 1332, 'closed': datetime.datetime(2022, 12, 1, 5, 5, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 24, 10, 22, 45, tzinfo=datetime.timezone.utc), 'time_taken': 585745.0, 'time_delta': '6 days, 18:42:25', 'additions': 178, 'deletions': 3, 'state': 'closed'}, {'id': 1131535622, 'number': 1327, 'closed': datetime.datetime(2022, 11, 27, 7, 10, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 11, 22, 10, 31, 25, tzinfo=datetime.timezone.utc), 'time_taken': 419922.0, 'time_delta': '4 days, 20:38:42', 'additions': 674, 'deletions': 45, 'state': 'closed'}, {'id': 1104754817, 'number': 1284, 'closed': datetime.datetime(2022, 11, 3, 8, 8, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 31, 2, 52, 9, tzinfo=datetime.timezone.utc), 'time_taken': 278163.0, 'time_delta': '3 days, 5:16:03', 'additions': 12, 'deletions': 12, 'state': 'closed'}, {'id': 1101418108, 'number': 1276, 'closed': datetime.datetime(2022, 10, 31, 2, 52, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 27, 9, 27, 44, tzinfo=datetime.timezone.utc), 'time_taken': 321872.0, 'time_delta': '3 days, 17:24:32', 'additions': 233, 'deletions': 9, 'state': 'closed'}, {'id': 1097246555, 'number': 1269, 'closed': datetime.datetime(2022, 10, 26, 2, 20, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 24, 10, 4, 46, tzinfo=datetime.timezone.utc), 'time_taken': 144940.0, 'time_delta': '1 day, 16:15:40', 'additions': 826, 'deletions': 158, 'state': 'closed'}, {'id': 1095160699, 'number': 1264, 'closed': datetime.datetime(2022, 10, 26, 2, 19, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 21, 10, 52, 32, tzinfo=datetime.timezone.utc), 'time_taken': 401244.0, 'time_delta': '4 days, 15:27:24', 'additions': 198, 'deletions': 1, 'state': 'closed'}, {'id': 1087031631, 'number': 1255, 'closed': datetime.datetime(2022, 10, 18, 3, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 14, 7, 5, 21, tzinfo=datetime.timezone.utc), 'time_taken': 333579.0, 'time_delta': '3 days, 20:39:39', 'additions': 207, 'deletions': 33, 'state': 'closed'}, {'id': 1082710032, 'number': 1245, 'closed': datetime.datetime(2022, 10, 15, 6, 52, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 11, 3, 25, 33, tzinfo=datetime.timezone.utc), 'time_taken': 357989.0, 'time_delta': '4 days, 3:26:29', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 1075504105, 'number': 1226, 'closed': datetime.datetime(2022, 10, 10, 8, 35, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 10, 4, 5, 20, 51, tzinfo=datetime.timezone.utc), 'time_taken': 530087.0, 'time_delta': '6 days, 3:14:47', 'additions': 29, 'deletions': 3, 'state': 'closed'}, {'id': 1072425937, 'number': 1220, 'closed': datetime.datetime(2022, 10, 4, 2, 19, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 30, 9, 7, 47, tzinfo=datetime.timezone.utc), 'time_taken': 321125.0, 'time_delta': '3 days, 17:12:05', 'additions': 502, 'deletions': 5, 'state': 'closed'}, {'id': 1061363273, 'number': 1200, 'closed': datetime.datetime(2022, 9, 25, 15, 1, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 10, 12, 6, tzinfo=datetime.timezone.utc), 'time_taken': 449357.0, 'time_delta': '5 days, 4:49:17', 'additions': 505, 'deletions': 3, 'state': 'closed'}, {'id': 1061019024, 'number': 1197, 'closed': datetime.datetime(2022, 9, 23, 1, 44, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 20, 3, 34, 17, tzinfo=datetime.timezone.utc), 'time_taken': 252640.0, 'time_delta': '2 days, 22:10:40', 'additions': 405, 'deletions': 41, 'state': 'closed'}, {'id': 1051095592, 'number': 1184, 'closed': datetime.datetime(2022, 9, 9, 12, 2, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 9, 4, 31, 48, tzinfo=datetime.timezone.utc), 'time_taken': 27032.0, 'time_delta': '7:30:32', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1048492986, 'number': 1182, 'closed': datetime.datetime(2022, 9, 9, 12, 3, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 7, 9, 19, 54, tzinfo=datetime.timezone.utc), 'time_taken': 182610.0, 'time_delta': '2 days, 2:43:30', 'additions': 133, 'deletions': 6, 'state': 'closed'}, {'id': 1028593748, 'number': 1134, 'closed': datetime.datetime(2022, 8, 23, 9, 19, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 17, 9, 49, 16, tzinfo=datetime.timezone.utc), 'time_taken': 516633.0, 'time_delta': '5 days, 23:30:33', 'additions': 678, 'deletions': 217, 'state': 'closed'}, {'id': 1026253481, 'number': 1126, 'closed': datetime.datetime(2022, 8, 19, 1, 41, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 15, 9, 47, 20, tzinfo=datetime.timezone.utc), 'time_taken': 316474.0, 'time_delta': '3 days, 15:54:34', 'additions': 1028, 'deletions': 26, 'state': 'closed'}, {'id': 1023624067, 'number': 1119, 'closed': datetime.datetime(2022, 8, 23, 8, 46, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 11, 9, 16, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1034994.0, 'time_delta': '11 days, 23:29:54', 'additions': 265, 'deletions': 2, 'state': 'closed'}, {'id': 1021309878, 'number': 1112, 'closed': datetime.datetime(2022, 8, 16, 9, 24, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 9, 10, 6, 48, tzinfo=datetime.timezone.utc), 'time_taken': 602263.0, 'time_delta': '6 days, 23:17:43', 'additions': 28, 'deletions': 13, 'state': 'closed'}, {'id': 1018402006, 'number': 1106, 'closed': datetime.datetime(2022, 8, 16, 2, 43, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 5, 8, 28, 2, tzinfo=datetime.timezone.utc), 'time_taken': 929738.0, 'time_delta': '10 days, 18:15:38', 'additions': 121, 'deletions': 3, 'state': 'closed'}, {'id': 1017045901, 'number': 1105, 'closed': datetime.datetime(2022, 8, 5, 1, 27, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 4, 4, 55, 44, tzinfo=datetime.timezone.utc), 'time_taken': 73906.0, 'time_delta': '20:31:46', 'additions': 141, 'deletions': 0, 'state': 'closed'}, {'id': 1011800063, 'number': 1098, 'closed': datetime.datetime(2022, 8, 20, 5, 54, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 29, 10, 22, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1884712.0, 'time_delta': '21 days, 19:31:52', 'additions': 1332, 'deletions': 26, 'state': 'closed'}, {'id': 1008327064, 'number': 1092, 'closed': datetime.datetime(2022, 8, 9, 1, 51, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 26, 10, 17, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1179206.0, 'time_delta': '13 days, 15:33:26', 'additions': 1678, 'deletions': 1, 'state': 'closed'}, {'id': 1001937535, 'number': 1088, 'closed': datetime.datetime(2022, 7, 28, 9, 48, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 20, 10, 28, 2, tzinfo=datetime.timezone.utc), 'time_taken': 688805.0, 'time_delta': '7 days, 23:20:05', 'additions': 1219, 'deletions': 1, 'state': 'closed'}, {'id': 989883238, 'number': 1081, 'closed': datetime.datetime(2022, 7, 7, 9, 3, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 8, 51, 22, tzinfo=datetime.timezone.utc), 'time_taken': 705.0, 'time_delta': '0:11:45', 'additions': 7, 'deletions': 42, 'state': 'closed'}, {'id': 989882407, 'number': 1080, 'closed': datetime.datetime(2022, 7, 7, 9, 3, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 7, 8, 50, 32, tzinfo=datetime.timezone.utc), 'time_taken': 751.0, 'time_delta': '0:12:31', 'additions': 7, 'deletions': 42, 'state': 'closed'}, {'id': 986962821, 'number': 1077, 'closed': datetime.datetime(2022, 9, 22, 6, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 5, 3, 45, 40, tzinfo=datetime.timezone.utc), 'time_taken': 6836120.0, 'time_delta': '79 days, 2:55:20', 'additions': 92, 'deletions': 45, 'state': 'closed'}, {'id': 986203111, 'number': 1076, 'closed': datetime.datetime(2022, 8, 4, 9, 19, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 4, 9, 10, 29, tzinfo=datetime.timezone.utc), 'time_taken': 2678955.0, 'time_delta': '31 days, 0:09:15', 'additions': 2612, 'deletions': 2447, 'state': 'closed'}, {'id': 981105416, 'number': 1069, 'closed': datetime.datetime(2022, 6, 30, 15, 1, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 28, 8, 42, 50, tzinfo=datetime.timezone.utc), 'time_taken': 195499.0, 'time_delta': '2 days, 6:18:19', 'additions': 337, 'deletions': 20, 'state': 'closed'}, {'id': 970388443, 'number': 1056, 'closed': datetime.datetime(2022, 6, 22, 1, 30, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 17, 8, 58, 1, tzinfo=datetime.timezone.utc), 'time_taken': 405167.0, 'time_delta': '4 days, 16:32:47', 'additions': 80, 'deletions': 69, 'state': 'closed'}, {'id': 969047843, 'number': 1052, 'closed': datetime.datetime(2022, 6, 17, 6, 46, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 16, 8, 41, 37, tzinfo=datetime.timezone.utc), 'time_taken': 79469.0, 'time_delta': '22:04:29', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 965420168, 'number': 1048, 'closed': datetime.datetime(2022, 6, 14, 3, 2, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 13, 8, 23, 47, tzinfo=datetime.timezone.utc), 'time_taken': 67117.0, 'time_delta': '18:38:37', 'additions': 80, 'deletions': 4, 'state': 'closed'}, {'id': 950659129, 'number': 1032, 'closed': datetime.datetime(2022, 6, 3, 1, 25, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 30, 8, 11, 6, tzinfo=datetime.timezone.utc), 'time_taken': 321252.0, 'time_delta': '3 days, 17:14:12', 'additions': 197, 'deletions': 38, 'state': 'closed'}, {'id': 948102022, 'number': 1025, 'closed': datetime.datetime(2022, 6, 3, 8, 41, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 10, 16, 42, tzinfo=datetime.timezone.utc), 'time_taken': 685480.0, 'time_delta': '7 days, 22:24:40', 'additions': 577, 'deletions': 3, 'state': 'closed'}, {'id': 947898202, 'number': 1024, 'closed': datetime.datetime(2022, 5, 27, 7, 6, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 26, 5, 58, 9, tzinfo=datetime.timezone.utc), 'time_taken': 90502.0, 'time_delta': '1 day, 1:08:22', 'additions': 188, 'deletions': 2, 'state': 'closed'}, {'id': 939784844, 'number': 1005, 'closed': datetime.datetime(2022, 5, 23, 2, 44, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 18, 10, 27, 15, tzinfo=datetime.timezone.utc), 'time_taken': 404241.0, 'time_delta': '4 days, 16:17:21', 'additions': 158, 'deletions': 6, 'state': 'closed'}, {'id': 933459158, 'number': 997, 'closed': datetime.datetime(2022, 5, 26, 2, 39, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 11, 10, 21, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1268269.0, 'time_delta': '14 days, 16:17:49', 'additions': 283, 'deletions': 100, 'state': 'closed'}, {'id': 929337784, 'number': 991, 'closed': datetime.datetime(2022, 5, 9, 1, 34, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 5, 6, 5, 10, 58, tzinfo=datetime.timezone.utc), 'time_taken': 246228.0, 'time_delta': '2 days, 20:23:48', 'additions': 58, 'deletions': 1, 'state': 'closed'}, {'id': 910581068, 'number': 963, 'closed': datetime.datetime(2022, 4, 18, 6, 51, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 15, 4, 52, 2, tzinfo=datetime.timezone.utc), 'time_taken': 266354.0, 'time_delta': '3 days, 1:59:14', 'additions': 7, 'deletions': 6, 'state': 'closed'}, {'id': 900093606, 'number': 953, 'closed': datetime.datetime(2022, 4, 7, 2, 50, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 5, 11, 22, 18, tzinfo=datetime.timezone.utc), 'time_taken': 142070.0, 'time_delta': '1 day, 15:27:50', 'additions': 86, 'deletions': 4, 'state': 'closed'}, {'id': 888114854, 'number': 937, 'closed': datetime.datetime(2022, 3, 28, 3, 26, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 24, 9, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 324921.0, 'time_delta': '3 days, 18:15:21', 'additions': 454, 'deletions': 1, 'state': 'closed'}, {'id': 841306851, 'number': 876, 'closed': datetime.datetime(2022, 2, 14, 7, 8, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 7, 4, 34, 50, tzinfo=datetime.timezone.utc), 'time_taken': 614031.0, 'time_delta': '7 days, 2:33:51', 'additions': 141, 'deletions': 47, 'state': 'closed'}, {'id': 832340221, 'number': 869, 'closed': datetime.datetime(2022, 1, 31, 3, 11, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 26, 11, 38, 20, tzinfo=datetime.timezone.utc), 'time_taken': 401579.0, 'time_delta': '4 days, 15:32:59', 'additions': 666, 'deletions': 0, 'state': 'closed'}, {'id': 831052495, 'number': 859, 'closed': datetime.datetime(2022, 1, 28, 8, 14, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 25, 4, 16, 25, tzinfo=datetime.timezone.utc), 'time_taken': 273494.0, 'time_delta': '3 days, 3:58:14', 'additions': 685, 'deletions': 86, 'state': 'closed'}, {'id': 827370974, 'number': 852, 'closed': datetime.datetime(2022, 1, 21, 5, 9, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 20, 10, 17, 35, tzinfo=datetime.timezone.utc), 'time_taken': 67937.0, 'time_delta': '18:52:17', 'additions': 48, 'deletions': 1, 'state': 'closed'}, {'id': 825131896, 'number': 847, 'closed': datetime.datetime(2022, 1, 21, 5, 9, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 5, 27, 32, tzinfo=datetime.timezone.utc), 'time_taken': 258096.0, 'time_delta': '2 days, 23:41:36', 'additions': 220, 'deletions': 36, 'state': 'closed'}, {'id': 811864892, 'number': 814, 'closed': datetime.datetime(2022, 1, 4, 4, 55, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 30, 9, 16, 21, tzinfo=datetime.timezone.utc), 'time_taken': 416378.0, 'time_delta': '4 days, 19:39:38', 'additions': 55, 'deletions': 42, 'state': 'closed'}, {'id': 810321552, 'number': 810, 'closed': datetime.datetime(2022, 1, 10, 3, 52, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 27, 10, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1185105.0, 'time_delta': '13 days, 17:11:45', 'additions': 742, 'deletions': 45, 'state': 'closed'}, {'id': 804150592, 'number': 799, 'closed': datetime.datetime(2021, 12, 19, 3, 36, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 16, 7, 18, 30, tzinfo=datetime.timezone.utc), 'time_taken': 245878.0, 'time_delta': '2 days, 20:17:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 803028996, 'number': 797, 'closed': datetime.datetime(2021, 12, 16, 8, 24, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 15, 4, 1, 38, tzinfo=datetime.timezone.utc), 'time_taken': 102181.0, 'time_delta': '1 day, 4:23:01', 'additions': 38, 'deletions': 5, 'state': 'closed'}, {'id': 802208034, 'number': 795, 'closed': datetime.datetime(2021, 12, 15, 3, 46, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 14, 10, 52, 2, tzinfo=datetime.timezone.utc), 'time_taken': 60897.0, 'time_delta': '16:54:57', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 799560185, 'number': 791, 'closed': datetime.datetime(2021, 12, 16, 8, 19, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 10, 5, 0, 24, tzinfo=datetime.timezone.utc), 'time_taken': 530329.0, 'time_delta': '6 days, 3:18:49', 'additions': 220, 'deletions': 42, 'state': 'closed'}, {'id': 795791560, 'number': 781, 'closed': datetime.datetime(2021, 12, 14, 2, 6, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 6, 11, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 657176.0, 'time_delta': '7 days, 14:32:56', 'additions': 839, 'deletions': 18, 'state': 'closed'}, {'id': 794265080, 'number': 771, 'closed': datetime.datetime(2021, 12, 14, 4, 43, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 12, 3, 4, 32, 35, tzinfo=datetime.timezone.utc), 'time_taken': 951064.0, 'time_delta': '11 days, 0:11:04', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 787785990, 'number': 760, 'closed': datetime.datetime(2021, 12, 2, 2, 15, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 24, 10, 13, 18, tzinfo=datetime.timezone.utc), 'time_taken': 662503.0, 'time_delta': '7 days, 16:01:43', 'additions': 90, 'deletions': 2, 'state': 'closed'}, {'id': 785904656, 'number': 756, 'closed': datetime.datetime(2021, 11, 26, 4, 34, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 22, 10, 48, 7, tzinfo=datetime.timezone.utc), 'time_taken': 323204.0, 'time_delta': '3 days, 17:46:44', 'additions': 523, 'deletions': 20, 'state': 'closed'}, {'id': 782463787, 'number': 752, 'closed': datetime.datetime(2021, 11, 24, 1, 43, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 17, 8, 4, 36, tzinfo=datetime.timezone.utc), 'time_taken': 581930.0, 'time_delta': '6 days, 17:38:50', 'additions': 1155, 'deletions': 13, 'state': 'closed'}, {'id': 780440532, 'number': 747, 'closed': datetime.datetime(2021, 11, 18, 3, 23, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 15, 8, 52, 49, tzinfo=datetime.timezone.utc), 'time_taken': 239437.0, 'time_delta': '2 days, 18:30:37', 'additions': 363, 'deletions': 15, 'state': 'closed'}, {'id': 771098301, 'number': 727, 'closed': datetime.datetime(2021, 11, 10, 7, 54, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 2, 5, 29, tzinfo=datetime.timezone.utc), 'time_taken': 699951.0, 'time_delta': '8 days, 2:25:51', 'additions': 328, 'deletions': 30, 'state': 'closed'}, {'id': 767293435, 'number': 713, 'closed': datetime.datetime(2021, 11, 1, 4, 33, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 27, 10, 58, 43, tzinfo=datetime.timezone.utc), 'time_taken': 408870.0, 'time_delta': '4 days, 17:34:30', 'additions': 630, 'deletions': 31, 'state': 'closed'}, {'id': 763137932, 'number': 707, 'closed': datetime.datetime(2021, 10, 28, 7, 21, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 10, 42, 43, tzinfo=datetime.timezone.utc), 'time_taken': 592718.0, 'time_delta': '6 days, 20:38:38', 'additions': 803, 'deletions': 30, 'state': 'closed'}, {'id': 699401286, 'number': 560, 'closed': datetime.datetime(2021, 8, 6, 9, 15, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 10, 19, 35, tzinfo=datetime.timezone.utc), 'time_taken': 687379.0, 'time_delta': '7 days, 22:56:19', 'additions': 551, 'deletions': 10, 'state': 'closed'}, {'id': 697497622, 'number': 554, 'closed': datetime.datetime(2021, 8, 5, 7, 12, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 3, 13, 45, tzinfo=datetime.timezone.utc), 'time_taken': 791913.0, 'time_delta': '9 days, 3:58:33', 'additions': 395, 'deletions': 52, 'state': 'closed'}, {'id': 695069118, 'number': 550, 'closed': datetime.datetime(2021, 8, 3, 2, 1, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 10, 59, 26, tzinfo=datetime.timezone.utc), 'time_taken': 1004507.0, 'time_delta': '11 days, 15:01:47', 'additions': 424, 'deletions': 0, 'state': 'closed'}, {'id': 694863573, 'number': 547, 'closed': datetime.datetime(2021, 7, 22, 11, 18, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 4, 34, 57, tzinfo=datetime.timezone.utc), 'time_taken': 24206.0, 'time_delta': '6:43:26', 'additions': 26, 'deletions': 1, 'state': 'closed'}, {'id': 689803254, 'number': 539, 'closed': datetime.datetime(2021, 7, 19, 2, 52, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 10, 54, 47, tzinfo=datetime.timezone.utc), 'time_taken': 403054.0, 'time_delta': '4 days, 15:57:34', 'additions': 374, 'deletions': 2, 'state': 'closed'}, {'id': 686473665, 'number': 534, 'closed': datetime.datetime(2021, 7, 23, 9, 31, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 9, 4, 8, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1228980.0, 'time_delta': '14 days, 5:23:00', 'additions': 738, 'deletions': 75, 'state': 'closed'}, {'id': 683589829, 'number': 529, 'closed': datetime.datetime(2021, 7, 13, 9, 17, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 10, 47, 16, tzinfo=datetime.timezone.utc), 'time_taken': 685804.0, 'time_delta': '7 days, 22:30:04', 'additions': 405, 'deletions': 43, 'state': 'closed'}, {'id': 682460856, 'number': 524, 'closed': datetime.datetime(2021, 7, 5, 2, 58, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 2, 9, 3, 13, tzinfo=datetime.timezone.utc), 'time_taken': 237318.0, 'time_delta': '2 days, 17:55:18', 'additions': 417, 'deletions': 55, 'state': 'closed'}, {'id': 679744930, 'number': 515, 'closed': datetime.datetime(2021, 7, 8, 8, 47, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 9, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 776476.0, 'time_delta': '8 days, 23:41:16', 'additions': 207, 'deletions': 55, 'state': 'closed'}, {'id': 678787880, 'number': 514, 'closed': datetime.datetime(2021, 7, 2, 1, 59, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 7, 33, 43, tzinfo=datetime.timezone.utc), 'time_taken': 325564.0, 'time_delta': '3 days, 18:26:04', 'additions': 184, 'deletions': 70, 'state': 'closed'}, {'id': 674215240, 'number': 504, 'closed': datetime.datetime(2021, 6, 28, 10, 29, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 4, 51, 27, tzinfo=datetime.timezone.utc), 'time_taken': 625083.0, 'time_delta': '7 days, 5:38:03', 'additions': 242, 'deletions': 39, 'state': 'closed'}, {'id': 663162066, 'number': 481, 'closed': datetime.datetime(2021, 6, 16, 4, 11, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 7, 4, 46, 2, tzinfo=datetime.timezone.utc), 'time_taken': 775545.0, 'time_delta': '8 days, 23:25:45', 'additions': 247, 'deletions': 0, 'state': 'closed'}, {'id': 655919499, 'number': 460, 'closed': datetime.datetime(2021, 6, 5, 2, 57, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 6, 36, 26, tzinfo=datetime.timezone.utc), 'time_taken': 678073.0, 'time_delta': '7 days, 20:21:13', 'additions': 258, 'deletions': 43, 'state': 'closed'}, {'id': 654500306, 'number': 458, 'closed': datetime.datetime(2021, 5, 29, 4, 41, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 5, 4, 1, tzinfo=datetime.timezone.utc), 'time_taken': 171478.0, 'time_delta': '1 day, 23:37:58', 'additions': 26, 'deletions': 9, 'state': 'closed'}, {'id': 649772902, 'number': 446, 'closed': datetime.datetime(2021, 5, 25, 8, 58, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 8, 29, 47, tzinfo=datetime.timezone.utc), 'time_taken': 347312.0, 'time_delta': '4 days, 0:28:32', 'additions': 131, 'deletions': 1, 'state': 'closed'}, {'id': 616720422, 'number': 391, 'closed': datetime.datetime(2021, 5, 13, 2, 54, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 10, 22, 42, tzinfo=datetime.timezone.utc), 'time_taken': 2305898.0, 'time_delta': '26 days, 16:31:38', 'additions': 785, 'deletions': 383, 'state': 'closed'}, {'id': 611355218, 'number': 371, 'closed': datetime.datetime(2021, 4, 16, 1, 57, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 8, 8, 49, 13, tzinfo=datetime.timezone.utc), 'time_taken': 666480.0, 'time_delta': '7 days, 17:08:00', 'additions': 88, 'deletions': 4, 'state': 'closed'}, {'id': 601494064, 'number': 346, 'closed': datetime.datetime(2021, 4, 2, 12, 0, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 26, 10, 43, 12, tzinfo=datetime.timezone.utc), 'time_taken': 609448.0, 'time_delta': '7 days, 1:17:28', 'additions': 159, 'deletions': 29, 'state': 'closed'}, {'id': 600531924, 'number': 341, 'closed': datetime.datetime(2021, 3, 26, 6, 39, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 8, 19, 20, tzinfo=datetime.timezone.utc), 'time_taken': 80414.0, 'time_delta': '22:20:14', 'additions': 228, 'deletions': 27, 'state': 'closed'}, {'id': 497688610, 'number': 251, 'closed': datetime.datetime(2020, 10, 8, 5, 25, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 5, 8, 34, 29, tzinfo=datetime.timezone.utc), 'time_taken': 247860.0, 'time_delta': '2 days, 20:51:00', 'additions': 210, 'deletions': 0, 'state': 'closed'}]"
