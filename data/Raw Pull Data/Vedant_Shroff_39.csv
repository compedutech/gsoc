pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
427674610,Modified breeding to work per trait ,"Modified the genomes system to allow registering breeding algorithms per trait and a default breeding algorithm for the entity which will be used incase a breeding algorithm is not specified per trait. Also changed the traits to be stored in a linked hash map rather than a hash map so they are stored sequentially to maintain order. 
Added tests to check the working of Genomes while making modifications. 

**To-do list :**
- [x] Code Cleanup (major)
- [x] More tests to check breeding of multiple traits for the same entity
",True,10,https://api.github.com/repos/Terasology/Genome/pulls/10,https://github.com/Terasology/Genome/pull/10,closed,344,46,6,7,0,17,0,0,[],2020-06-04 08:31:45+00:00,2020-06-11 12:11:52+00:00,618007.0,"7 days, 3:40:07","[{'comment_id': 435425612, 'comment_body': '\\* imports should be avoided', 'comment_created': datetime.datetime(2020, 6, 4, 17, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 435425990, 'comment_body': 'These (debug?) prints should be removed in final state of PR', 'comment_created': datetime.datetime(2020, 6, 4, 17, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 435426574, 'comment_body': 'Newline at the end of the file is good practice', 'comment_created': datetime.datetime(2020, 6, 4, 17, 28, 1, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 435427605, 'comment_body': 'Is there a specific reason for these outputs to console? If these are for confirming something, they can be converted to another assert statement?', 'comment_created': datetime.datetime(2020, 6, 4, 17, 29, 43, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 435433284, 'comment_body': 'This method is not testing anything as there are no assert statements.', 'comment_created': datetime.datetime(2020, 6, 4, 17, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 435753848, 'comment_body': 'They were just used to check the values to confirm that the getProperty method was working correctly. Have replaced with assert statements', 'comment_created': datetime.datetime(2020, 6, 5, 7, 59, 49, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 435756104, 'comment_body': 'The resultant genes are randomized according to the breeding algorithms and therefore the print statements were used to check if the result was correct or not. Just the working of this piece of code was enough for the test, but I have replaced it with an assert to check for an empty String at the end', 'comment_created': datetime.datetime(2020, 6, 5, 8, 4, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 436389261, 'comment_body': ""Might as well fix this typo while we're here"", 'comment_created': datetime.datetime(2020, 6, 7, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'PS-Soundwave', 'type': 'User'}, {'comment_id': 438744885, 'comment_body': 'Why was this made public? This allows to modify or completely swap out the map, although we give specific acccessor methods below...\r\n\r\nAs this is public, it should also have Javadoc (which would be a good place to note down why can/should be done with it).', 'comment_created': datetime.datetime(2020, 6, 11, 12, 26, 34, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438745218, 'comment_body': 'Did you consider using `Name` instead of Strings to identify properties?', 'comment_created': datetime.datetime(2020, 6, 11, 12, 27, 11, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438747106, 'comment_body': 'This will easily throw a NPE if the property definitions does not contain the given property name. Consider changing the return type of this method to `Optional<BreedingAlgorithm>` and make the implementation null-safe, e.g., \r\n\r\n```java\r\nreturn Optional.ofNullable(propertyDefinitionMap.get(propertyName))\r\n            .map(GenePropertyDefinition::breedingAlgorithm);\r\n```', 'comment_created': datetime.datetime(2020, 6, 11, 12, 30, 59, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438748212, 'comment_body': ""I'm surprised that this works (using `@In` annotations for tests o.O Did you actually run this, or are the fields used yet?"", 'comment_created': datetime.datetime(2020, 6, 11, 12, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438749111, 'comment_body': ""Same here, I don't think this works (not even when using the MTE). The tests probably pass nevertheless as these fields are never used. I'd be in favor of removing dead code (of preparing for some other changes, move it to another PR)."", 'comment_created': datetime.datetime(2020, 6, 11, 12, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438768660, 'comment_body': 'It was made public so the Genome Manager can access the propertyDefinitionMap to get the appropriate traits in the order they are stored and access the details. It could be kept private and use a getter method to get the Map instead.', 'comment_created': datetime.datetime(2020, 6, 11, 13, 9, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 438769303, 'comment_body': 'I tried using it initially and it did not work. Took out the usage but forgot to remove the declarations, fixed :)', 'comment_created': datetime.datetime(2020, 6, 11, 13, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 438769461, 'comment_body': 'same as above. will remove this\r\n', 'comment_created': datetime.datetime(2020, 6, 11, 13, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 438772564, 'comment_body': 'This method is actually not used as it is sufficient to use the propertyDefinitionMap for the breeding algorithm of the traits, therefore I have removed it. But this is a fair point and I will keep it in mind for future work. For knowledge, is it preferred to use the Optional class for such a scenario or will a local variable with null check suffice?', 'comment_created': datetime.datetime(2020, 6, 11, 13, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}]","[{'commit_sha': 'a51265e136190bc920555a357dc7a73a09c18e14', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7462b2ae5c18017ce9f63404f2e6192fd00bbac4', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2ecb8a5337adebf3c4e8d16f2a9666f617cd67c', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a3f685b7fe079f56ef4240f8547b26cb7d7b8f1e', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c658b9bb56d6b1f1452960a1e6d52cef5f74ed4', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df8ddd4fd19a0452ab8167fd5c25561b4eb4889c', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96558b993302f791bf58c98ef38fb4067ba49477', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
429190231,added discrete and continuous breeding algorithms,"Added a new breeding algorithm for discrete traits. The breeding algorithm works for diploid traits using a Punnet square and selecting offspring traits at random from it. 

The continuous breeding algorithm uses random selection of genes from parents and uses mutation values to allow traits to have values outside of the range between the parents. The selected genes are then crossed in a square to get offspring genes.

Also added the HeldGenomeCheck command to check what the genes of the held item are and added a null overload to the Genome Maps to prevent compilation errors ",True,11,https://api.github.com/repos/Terasology/Genome/pulls/11,https://github.com/Terasology/Genome/pull/11,closed,392,11,9,9,0,8,0,0,[],2020-06-06 13:03:17+00:00,2020-07-07 15:45:12+00:00,2688115.0,"31 days, 2:41:55","[{'comment_id': 436276315, 'comment_body': '2020, please.', 'comment_created': datetime.datetime(2020, 6, 6, 15, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 436276340, 'comment_body': 'This can be simplified to a single boolean operation. \r\n`return !(genes1.compareToIgnoreCase(genes2));`', 'comment_created': datetime.datetime(2020, 6, 6, 15, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 436276472, 'comment_body': 'Throwing exception can potentially lead to a crash during runtime. \r\n\r\nAlternatives can be displaying and logging the error.', 'comment_created': datetime.datetime(2020, 6, 6, 15, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 436499475, 'comment_body': 'replaced with a log and changed validateGenes to replace a boolean value', 'comment_created': datetime.datetime(2020, 6, 8, 7, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 436499635, 'comment_body': 'fixed, had done this because implicit type casting of int to boolean was returning an error', 'comment_created': datetime.datetime(2020, 6, 8, 7, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 437125617, 'comment_body': 'Avoid `*` imports. There is a setting in IntelliJ Idea which auto converts multiple imports to `*` imports, you can bump up that number to some high value (like 999) to avoid these auto converts.', 'comment_created': datetime.datetime(2020, 6, 9, 4, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 437126193, 'comment_body': 'Instead of converting to `tt`, you can create a list of possible genes for the child, and assert that resultGenes is in the list. ', 'comment_created': datetime.datetime(2020, 6, 9, 4, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 437126306, 'comment_body': 'Newline at the end of files is recommended.', 'comment_created': datetime.datetime(2020, 6, 9, 4, 8, 35, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}]","[{'commit_sha': '5524c56fd3a7b6b360394532820fb3791bec27bc', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '776d5b131cbdd040d04614f729b2aa4beff27d5c', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '746ae52b3eba160818a3bfe00616bbdea1828343', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '446c5b7367d14471b7acdbadd680e898d4187a0d', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cfc6329a1941e98bc27d42e7bbb643b7794d11a', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b42f58586a54c9c22af471c5c58b7e27de5cd940', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd58c83633ef6ac19e7b7ea29adf01b4610412ea8', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce9432062ab6e5e9ec2d8d0efe4268eb266be5de', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dba57787b4ffd8270241187732f2730463f3eb29', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
433089178,Improved code quality ,This PR is a follow up PR to #10 after it was merged and certain problems were identified after merging.,True,12,https://api.github.com/repos/Terasology/Genome/pulls/12,https://github.com/Terasology/Genome/pull/12,closed,25,34,5,7,0,5,0,0,[],2020-06-11 13:41:53+00:00,2020-08-05 09:33:28+00:00,4737095.0,"54 days, 19:51:35","[{'comment_id': 438817458, 'comment_body': 'That works as well 😅  why did you decide go one step back with the abstractions and expose the map directly here? \r\nTo be honest, I liked the idea of hiding whatever we are doing internally here, and just providing an access method to get a breeding algorithm by name.', 'comment_created': datetime.datetime(2020, 6, 11, 14, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438818121, 'comment_body': 'In addition, instead of returning the original map you may want to create a (immutable) copy like you do in `SimpleGenomeManager`', 'comment_created': datetime.datetime(2020, 6, 11, 14, 13, 41, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438820155, 'comment_body': 'Hm, my gut feeling says that comparing to `Map`s by the String representation is not really a best practice... Is JUnit capable of comparing two maps in some way? Otherwise, instead of comparing the internal representations, maybe it makes sense to implement `GeneIndexGenomeMap::equals` so that you can do \r\n```java\r\nassertEquals(genomeMap1, genomeMap);\r\n```\r\n\r\nWould comparing `GeneIndexGenomeMap` be a common operation in general, or just for testing?', 'comment_created': datetime.datetime(2020, 6, 11, 14, 16, 42, tzinfo=datetime.timezone.utc), 'commenter': 'skaldarnar', 'type': 'User'}, {'comment_id': 438828396, 'comment_body': 'JUnit can use assertThat statements to check if a map contains certain elements. This can probably be used for a better test here. Since comparing such maps will probably never be used anywhere apart from testing, it might not be worth implementing the equals method there.', 'comment_created': datetime.datetime(2020, 6, 11, 14, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 438832490, 'comment_body': 'Returning an immutable map is definitely needed, will change that. I went back on the abstraction and deleted the getBreedingAlgorithm method as the propertyDefinitionMap contains more fields that are used in conjunction with the breeding algorithm and therefore when a particular field of the map is accessed, it returns a GenePropertyDefinition object which contains the breeding algorithm. Since this is already accessed, it did not feel necessary to have another method to get the same thing (since we already accessed it as a side product of accessing a value of the propertyDefinitionMap)', 'comment_created': datetime.datetime(2020, 6, 11, 14, 34, 16, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}]","[{'commit_sha': '5340b766f355ff0797ccd982248d9c8e457ddd63', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cceef3a597769a3d5727b8aa8e3e94168af9d2a9', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '588b2bf96bb7a70d62e0b8bebab85c0eeaf4d2dc', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3a0b4cda17cc3c9e88d13f521beba0eb0aca552', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c25246193ce3fe901a460619dbf10938949773a', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16759a6f84186524059f8bc42b9417b539368585', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '011def4b4aa6e76e634c8f7965b44f5a6875bac4', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
445682067,Added a null breeding algorithm overload to GeneIndexGenomeMap.setProperty ,"Added a null breeding algorithm overload to GeneIndexGenomeMap.setProperty as it was earlier calling itself. This should fix the error that Genomes was causing in NeoTTA, however I request that NeoTTA is tested before merging this PR. Other errors (most probably unrelated to Genomes) showed up while trying to run NeoTTA",True,14,https://api.github.com/repos/Terasology/Genome/pulls/14,https://github.com/Terasology/Genome/pull/14,closed,1,1,1,1,1,0,0,0,[],2020-07-07 21:08:30+00:00,2020-07-08 02:52:08+00:00,20618.0,5:43:38,[],"[{'commit_sha': 'ffbb3d11853ef845d7e29da34788e9b34531e8b6', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
461820101,modified canBreed() methods,"Changed the canBreed() checks for Continuous and Discrete breeding algorithms as they were implemented incorrectly earlier. The check now uses a check for length rather than comparing the genes if they are equal as done previously
",True,15,https://api.github.com/repos/Terasology/Genome/pulls/15,https://github.com/Terasology/Genome/pull/15,closed,2,2,2,1,0,0,0,0,[],2020-08-02 15:17:34+00:00,2020-08-14 17:28:11+00:00,1044637.0,"12 days, 2:10:37",[],"[{'commit_sha': '4b568aeffc43eac06c449df5d7a6234ad0fd1f91', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
435479536,Added Genome related events,"added genome related events to be handled by the GenomeAuthoritySystem if Genomes is enabled. 

*To-do before merging*
- [x] Write modifications for non sustainable bushes to inherit GenomeComponent and not throw NPE
- [x] Major Code Cleanup
- [x] Remove Genome Dependency. That was only for testing purposes
- [x] Add JavaDoc in the new Handlers and events
",True,93,https://api.github.com/repos/Terasology/SimpleFarming/pulls/93,https://github.com/Terasology/SimpleFarming/pull/93,closed,361,59,8,8,0,3,0,0,[],2020-06-16 21:36:27+00:00,2020-08-11 13:58:03+00:00,4810896.0,"55 days, 16:21:36","[{'comment_id': 445946375, 'comment_body': 'I think this is a mistake?', 'comment_created': datetime.datetime(2020, 6, 26, 3, 16, 10, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 446125048, 'comment_body': 'This feels like a bit clunky and weird to be doing through events tbh. That being said, given the state of optional dependencies this possibly is the best way to do this.', 'comment_created': datetime.datetime(2020, 6, 26, 11, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 446125244, 'comment_body': 'This event by contrast seems a bit weird than that there _should_ be a better way to do it.', 'comment_created': datetime.datetime(2020, 6, 26, 11, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}]","[{'commit_sha': '0ab5c88fca818ddc86c73c02050f37a79ec84ab2', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '767b90660bf0a01e9377c6734db89ec31c2643a5', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef5f6b9a0b86e645c6dcea5428f0ef2be86f2627', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4428f44d419b1001fa4760bf5143ea45b04ddeb1', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2630ca13bc1a66cdc2b2e5e0b2e9d31e67b411dd', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b1accdb3a4275d2fbcdba17d9b7315092d4f79f', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd5e458f0f604522befb9071f8154e6ff7904e249', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c38d62dd3f4bca29d5c46d139e7f63ea61b9caab', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
459594627,Modify filling trait via genes and breeding capability,"### Contains :
This PR adds two features :
1) Filling trait of seeds will now be affected by their filling gene. This PR contains the event which is then handled in EdibleFlora to change the filling value (https://github.com/Terasology/EdibleFlora/pull/6)
2) The Gene breeding is handled in the GenomeAuthoritySystem when the seedWorkstation is used to breed seeds.

This PR uses #93 as a base and therefore the diff will contain large parts of it, this should update once #93 is merged.

### How to test :
- Use the console command to get a seed, for example : `give apple`
- Plant the seed on the ground to get a bush
- Once the bush is fully grown, harvest it. This will attach genes to the seed and modify its filling value.
- Use the `setHunger <value>` command to set your hunger to a measurable value, say 50
- Eat the seed by right clicking while holding it and not looking at a block
- Use the `showHunger` command to see your hunger value. The value can be tallied with the difference between the setHunger and current hunger and the Genes observed via the `heldGenomeCheck` command.
**Note** : Make sure https://github.com/Terasology/EdibleFlora/pull/6 is a part of your workspace to test this properly.

### How to test breeding :
- Use the console command to get two of the same seeds, for example : `give apple 2`
- Plant the seeds on the ground to get two bushes
- Once the bush is fully grown, harvest it. This will attach genes to the seeds and modify its filling value.
- Use the console to give yourself a seedWorkstation `give seedWorkstation`
- Place the workstation and breed the two seeds you got to get an output seed
- Check its genes using the `HeldGenomeCheck command`.
- Input seeds can be re harvested to compare the genes and confirm a proper breeding
**Note** : Make sure https://github.com/Terasology/BasicCrafting/pull/3 is a part of your workspace to test this properly.

### To-do :
- [x] Change vocabulary and conversion of vocabulary-->value for filling to form more realistic values for filling. Currently the values are ~ 5 to 15 for testing purposes.
- [x] The breeding PR in basicCrafting is yet to be made, once it is made it will be linked here and appropriate testing instructions will follow. (https://github.com/Terasology/BasicCrafting/pull/3)
- [x] Javadocs

Also, this probably finally addresses #82 ",True,94,https://api.github.com/repos/Terasology/SimpleFarming/pulls/94,https://github.com/Terasology/SimpleFarming/pull/94,closed,71,13,4,8,1,1,0,0,[],2020-07-30 20:52:39+00:00,2020-08-16 07:49:22+00:00,1421803.0,"16 days, 10:56:43","[{'comment_id': 469891762, 'comment_body': 'Logging has to be removed before merge', 'comment_created': datetime.datetime(2020, 8, 13, 11, 46, 16, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}]","[{'commit_sha': '9e8d099f53b474bac60f7c3da032d2c1d3a3b725', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9df1909834a3c587e7182a14da4548a1e8d4f2d7', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bba6adf8241f44c7c8b45a12676db640d30faee3', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e727e0c473e2b99a05b0e2cb5688c5b394fa646', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '500c161290a530b570f718b1a8a929d82143b6d1', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b349f79321ec161d73c0e54343bc9bdd87305258', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1eae9a1e76fed38e57381677ae19edf2c66fc1c', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13c70b13a229e33c09b6b061468117eed964bd31', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
470440446,Created Tint Modifier System,"### Contains 
Created a tint modifier system for seeds to get a tint based on their genetically modified filling values. The tint serves as a visual representation for the filling rather than having to consume the seed to check. 
The filling values are divided into 3 different categories and corresponding tinting modifiers are applied, namely the `LowTinter`, `ModerateTinter` and the `MaxTinter`. This can later be modified into categories for the seed which can be used to differentiate between varieties of seeds for other purposes like special cooking recipes.
It is probably not desirable to have all seeds of a particular colour, therefore seeds with filling less than 1.5f after being genetically modified, will not have any tint but rather retain their original colour.
The tinting mechanism can be extended with the addition of more traits to vary the saturation and brightness of the tint, thus giving a better idea of the genes of the seed.

### How to test 
- Use the `give <seedname>` command to obtain a seed
- Plant the seed on the ground by right-clicking the ground while holding the seed
- Wait for the seed to grow or use the GrowthCan by the `give GrowthCan` command to speed up the process
- Harvest the seed. Based on the range in which the filling value lies, the seed will get a tint.

https://github.com/Terasology/EdibleFlora/pull/8 must be merged for this PR to work.

![blueApple](https://user-images.githubusercontent.com/32770414/90686582-2eb17480-e289-11ea-8b76-280e7bd1d6cf.PNG)
The above picture shows fruits affected by the moderateTint",True,95,https://api.github.com/repos/Terasology/SimpleFarming/pulls/95,https://github.com/Terasology/SimpleFarming/pull/95,closed,91,5,8,3,0,2,0,0,[],2020-08-19 20:33:36+00:00,2020-08-23 11:11:56+00:00,311900.0,"3 days, 14:38:20","[{'comment_id': 475104468, 'comment_body': 'What is the purpose of this check here? What if the filling is less than 1.5, does it remain un-tinted?', 'comment_created': datetime.datetime(2020, 8, 22, 16, 3, 21, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 475105356, 'comment_body': 'Yes, these values are still tweakable but the idea was to have a base value below which there would be no tint applied to the seed. So that the seeds are not tinted for no reasom but only the more filling seeds are tinted.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}]","[{'commit_sha': '57caa32618a5dee582d8203a304d935e264a6012', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e199ac66ea6edbb63d0e91f7a29f0c15fbe02cf', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f780537fd94aaed2d51bb2cd66211e9ea5d14c2a', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
459599983,Created FillingModifierSystem,"### Contains
The Filling Modifier System is a system that deals with the modifications in filling of the seeds by handling the OnFillingModifiedEvent handler. This is used currently in synergy with https://github.com/Terasology/SimpleFarming/pull/94 to modify the filling trait of the seeds via its Genes.

Also includes remaining recipes for the SeedWorkstation to allow breeding of like seeds

### How to test :
- Use the console command to get a seed, for example : `give apple`
- Plant the seed on the ground to get a bush
- Once the bush is fully grown, harvest it. This will attach genes to the seed and modify its filling value.
- Use the `setHunger <value>` command to set your hunger to a measurable value, say 50
- Eat the seed by right clicking while holding it and not looking at a block
- Use the `showHunger` command to see your hunger value. The value can be tallied with the difference between the setHunger and current hunger and the Genes observed via the `heldGenomeCheck` command.

**Note** : Make sure https://github.com/Terasology/SimpleFarming/pull/94 is a part of your workspace to test this properly.

### To-do
- [x] Javadoc
- [ ] Add remaining recipes",True,6,https://api.github.com/repos/Terasology/EdibleFlora/pulls/6,https://github.com/Terasology/EdibleFlora/pull/6,closed,26,0,1,2,0,0,0,0,[],2020-07-30 21:01:45+00:00,2020-08-16 07:55:10+00:00,1421605.0,"16 days, 10:53:25",[],"[{'commit_sha': '441214831e2f05b1e183d8ed265baac4a1109026', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '503cf6599d0f3cf19283f752fcbb7299310fde19', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
468345076,Added recipes for breeding seeds,"Added recipes to breed seeds in the SeedWorkstation. Can be tested by breeding like seeds in the SeedWorkstation block. This is useful for breeding of seeds that involves the breeding of genes to get more desirable genetics.
",True,7,https://api.github.com/repos/Terasology/EdibleFlora/pulls/7,https://github.com/Terasology/EdibleFlora/pull/7,closed,74,1,2,3,0,2,0,0,[],2020-08-15 17:30:36+00:00,2020-08-23 10:55:13+00:00,667477.0,"7 days, 17:24:37","[{'comment_id': 475104596, 'comment_body': 'Addition of a new category can be avoided. \r\n\r\nThis (`SeedBreeder`) can be removed from both prefabs, and it is working fine. Can you confirm that this and add changes?', 'comment_created': datetime.datetime(2020, 8, 22, 16, 4, 42, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}, {'comment_id': 475106278, 'comment_body': 'The extra categroy is not required in `SeedCraftingRecipes.prefab`, but I would still like to keep it here so adding a new block for the purpose of breeding seeds only can use the recipes by using the SeedBreeder category only and not have to use the other seed recipes.', 'comment_created': datetime.datetime(2020, 8, 22, 16, 23, 11, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}]","[{'commit_sha': '76c1f3ac27b7530d57fb43cbf185121e354ff684', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a84063e3cd8efae0dd3196bd79ab2f540359d12f', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8503a6751adc0b814bc3e963a2fe588808515bb9', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
470367383,Modified FillingModifierSystem to set entity filling value,"Modified FillingModifierSystem to set entity filling value in the event so it can be accessed by other systems without having to depend on hunger.

requires https://github.com/Terasology/SimpleFarming/pull/95 in the workspace to test as it contains the updated event code.",True,8,https://api.github.com/repos/Terasology/EdibleFlora/pulls/8,https://github.com/Terasology/EdibleFlora/pull/8,closed,2,0,1,1,0,0,0,0,[],2020-08-19 19:01:11+00:00,2020-08-23 11:12:00+00:00,317449.0,"3 days, 16:10:49",[],"[{'commit_sha': 'e33c956116ae99a26b5ebab3da198e2116f19c52', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
389518802,Modified search to show if an asset is broken,"<!-- Thanks for submitting a pull request for Terasology! :-)
Please fill in some details about the PR, below.
If the PR contains source code please make sure to run Checkstyle on it first.
If you add unit tests we'll love you forever! 

You might also want to read ""How to Work on a PR Efficiently"":
https://github.com/MovingBlocks/Terasology/wiki/How-to-Work-on-a-PR-Efficiently
-->

### Contains

Fixed #3741 to harden the search for blocks. The console now shows which asset is broken when a search command is issued in the in game console . 

### How to test

Break an asset (eg : ladders) and write the command 'search stone' or search for any asset in the console. The search will return 0 results and return a message indicating that ladders is broken . Then fix it and run the same command and it should work.

### Outstanding before merging

If it works perfectly , can also be applied to prefabs and commands in the search
",True,3858,https://api.github.com/repos/MovingBlocks/Terasology/pulls/3858,https://github.com/MovingBlocks/Terasology/pull/3858,closed,26,8,1,3,2,8,1,1,[{'name': 'Type: Bug'}],2020-03-16 22:10:01+00:00,2020-03-29 00:34:38+00:00,1045477.0,"12 days, 2:24:37","[{'comment_id': 395388679, 'comment_body': ""One of our style rules is to avoid star imports. IntelliJ defaults to using them however.\r\n\r\nYou'll need to go into settings and change the number of imports required before a star is used up to 99. It's pain that we can't automatically do that at the moment but oh well"", 'comment_created': datetime.datetime(2020, 3, 20, 0, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 395389097, 'comment_body': ""We try and have all variables have useful names, even if they're not used much. Here I'd suggest something like `matchingBlocks` or even just `outputList`"", 'comment_created': datetime.datetime(2020, 3, 20, 0, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 395389274, 'comment_body': 'See my above comment about naming. (Although this variable could easily be joined with the following line', 'comment_created': datetime.datetime(2020, 3, 20, 0, 23, 21, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 395389612, 'comment_body': 'Would it be possible to instead of returning here, to just keep looping through the `for` block? \r\nThat way the broken assets will be skipped but the rest of the command will still work and the printing will still work. ', 'comment_created': datetime.datetime(2020, 3, 20, 0, 24, 49, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 395390076, 'comment_body': ""The cleanup of the method is appreciated, but this line seems like it has just been removed. Is it actually not needed, because it looks like it's used in spawning the prefab."", 'comment_created': datetime.datetime(2020, 3, 20, 0, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'syntaxi', 'type': 'User'}, {'comment_id': 395655744, 'comment_body': 'Fixed , Turns out I was using a slightly older branch which had an outdated version of this method , have replaced it with the correct implementation along with other changes', 'comment_created': datetime.datetime(2020, 3, 20, 14, 1, 5, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 395657995, 'comment_body': 'Good idea, Sorry for not implementing this initially , it was on my mind but I forgot about it once I was done with the functionality . This is the new output after this change.\r\n![Screenshot from 2020-03-20 19-26-20](https://user-images.githubusercontent.com/32770414/77170830-9ea4ae80-6ae1-11ea-8d6d-589f04f44ea4.png)\r\n', 'comment_created': datetime.datetime(2020, 3, 20, 14, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}, {'comment_id': 395745482, 'comment_body': 'Fixed! Will keep this in mind from now on .', 'comment_created': datetime.datetime(2020, 3, 20, 16, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}]","[{'commit_sha': 'b6f2ab25a14c6f87a65408b604eb3601f58e4651', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86e5a9f4a2e899115ed01634f4a5abf2fe7bfdd7', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e417b18b83cb5595033880257124fff637c80eef', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
407320725,Added a new Biomes Metric mode and fixed OnBiomeChangedEvent,"### Contains

Added a new Biomes Metric mode to the debug mode showing information regarding the current biome in which the user is present. 
Also fixes the OnBiomeChanged event and block extra data storage by passing the chunk of the block as an argument to the setExtraData function. 
### How to test

Load/Create a world, Press F3 to toggle the debug mode, Press F4 to cycle between the metrics modes till the Biomes Metrics Mode is reached. This should contain the current Biome. Test by moving around with this enabled and watch the biome name change.",False,3904,https://api.github.com/repos/MovingBlocks/Terasology/pulls/3904,https://github.com/MovingBlocks/Terasology/pull/3904,closed,129,2,8,7,1,21,0,0,[],2020-04-22 14:16:50+00:00,2020-05-10 19:47:32+00:00,1575042.0,"18 days, 5:30:42","[{'comment_id': 413095215, 'comment_body': 'can you add some javadocs to this method.', 'comment_created': datetime.datetime(2020, 4, 22, 15, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pollend', 'type': 'User'}, {'comment_id': 413096229, 'comment_body': 'add some javadocs explaining what BiomesMetricsMode is', 'comment_created': datetime.datetime(2020, 4, 22, 15, 43, 47, tzinfo=datetime.timezone.utc), 'commenter': 'pollend', 'type': 'User'}, {'comment_id': 413096623, 'comment_body': 'can you provide some javadocs', 'comment_created': datetime.datetime(2020, 4, 22, 15, 44, 16, tzinfo=datetime.timezone.utc), 'commenter': 'pollend', 'type': 'User'}, {'comment_id': 413173848, 'comment_body': 'By convention, if a method takes a chunk, it should take a relative position, not absolute as here.', 'comment_created': datetime.datetime(2020, 4, 22, 17, 25, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 413175497, 'comment_body': '```suggestion\r\n     * Do not use this method for generating the world, use the overload taking chunk instead.\r\n     *\r\n```', 'comment_created': datetime.datetime(2020, 4, 22, 17, 27, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 413177111, 'comment_body': 'By convention, if a method takes a chunk, it should take a relative position, not absolute as here.', 'comment_created': datetime.datetime(2020, 4, 22, 17, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 413179087, 'comment_body': 'This is exactly what should not be happening. Methods taking chunk as a parameter should rely on chunk-relative coordinates.', 'comment_created': datetime.datetime(2020, 4, 22, 17, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 413183112, 'comment_body': 'Also, consider adding similar overloads for getExtraData, and similar javadocs notices for them. My wording is a bit different to yours, pick whichever you like more, or ask for input from someone else.', 'comment_created': datetime.datetime(2020, 4, 22, 17, 37, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422532354, 'comment_body': 'What is chunkPos used for?', 'comment_created': datetime.datetime(2020, 5, 9, 18, 52, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422532660, 'comment_body': ""I don't really like this approach. Could you maybe catch something like PlayerSpawnEvent, if it would be sensible?"", 'comment_created': datetime.datetime(2020, 5, 9, 18, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533127, 'comment_body': 'Replace this with call to `chunk.setExtraData`', 'comment_created': datetime.datetime(2020, 5, 9, 18, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533286, 'comment_body': ""We don't need to make any changes to this file in the end. Could you revert whatever changes happened here (formatting etc.) to keep the git diff cleaner?"", 'comment_created': datetime.datetime(2020, 5, 9, 19, 0, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533340, 'comment_body': ""This file also doesn't need any changes in the end"", 'comment_created': datetime.datetime(2020, 5, 9, 19, 1, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533405, 'comment_body': 'remove this method', 'comment_created': datetime.datetime(2020, 5, 9, 19, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533484, 'comment_body': '```suggestion\r\n     * You must not use this method with world gen code, call `setExtraData` on chunk instead.\r\n```', 'comment_created': datetime.datetime(2020, 5, 9, 19, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533560, 'comment_body': 'Just, you know, use whatever the javadoc syntax for linking methods is, instead of the quotes', 'comment_created': datetime.datetime(2020, 5, 9, 19, 3, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533644, 'comment_body': 'Revert all changes in this file too, please', 'comment_created': datetime.datetime(2020, 5, 9, 19, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533742, 'comment_body': 'Remove new methods, edit javadoc the same as in `WorldProviderCore`', 'comment_created': datetime.datetime(2020, 5, 9, 19, 5, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533833, 'comment_body': 'Revert all here', 'comment_created': datetime.datetime(2020, 5, 9, 19, 5, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422533847, 'comment_body': 'revert all here', 'comment_created': datetime.datetime(2020, 5, 9, 19, 6, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Adrijaned', 'type': 'User'}, {'comment_id': 422543452, 'comment_body': 'It is not used after worldPos was added. Removed with next commit.', 'comment_created': datetime.datetime(2020, 5, 9, 20, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'vedant-shroff', 'type': 'User'}]","[{'commit_sha': '28d537abc40ba5c7d7ce93442d5e87ebb7b0f884', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '465f0912f18c9c6d1ab6145c43a370b139ea0f48', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57269c05d80bc8c73af5ad6cf0a16d0ff03c6fe9', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e40b08007aa80a214313bc53df40ecdaebfd7afd', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54e2d304422f84a2885af0ee8e92a2929f4f7f91', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e75ded091ef4ec35a9f0bce091222e7672b444fb', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c1f9d436a9295ac7e3eedbf5b5c7127f6262278', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
438148098,added RetainComponentsComponent check to SetBlock,"### Contains
Added RetainComponentsComponent check to setBlock so it calls the updateBlockEntity method with the correct RetainComponents set and not an empty set

### How to test
Add components to RetainComponentsComponent in some module and then update the entity via WorldProvider.setBlock(). The components added should be retained after the update.",True,4060,https://api.github.com/repos/MovingBlocks/Terasology/pulls/4060,https://github.com/MovingBlocks/Terasology/pull/4060,closed,5,1,1,1,0,0,0,0,[],2020-06-22 20:00:32+00:00,2020-06-23 07:32:56+00:00,41544.0,11:32:24,[],"[{'commit_sha': '072fcbbb310499558b5d986136ee7362c8346c53', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
465552210,Change filling to ModifiableValue,Changed the `filling` value of the `FoodComponent` from Hunger to use the ModifiableValue type. This PR uses the type created in https://github.com/MovingBlocks/Terasology/pull/4094 and can be merged once https://github.com/Terasology/Hunger/pull/20 is merged so that the EdibleSubstance module works and does not throw an error by trying to directly access the filling value of FoodComponent,True,4,https://api.github.com/repos/Terasology/EdibleSubstance/pulls/4,https://github.com/Terasology/EdibleSubstance/pull/4,closed,3,1,1,2,0,0,0,0,[],2020-08-10 14:54:30+00:00,2020-08-15 06:42:52+00:00,402502.0,"4 days, 15:48:22",[],"[{'commit_sha': '521c995b9b67cef3f91d6aea7ccb433279c9d7dc', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dca5d1d6e75174604a7c3abb714866f8edfaa98e', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
457853234,Changed FoodComponent.filling to ModifiableValue,"Changed the FoodComponent to use the ModifiableValue type for the filling. The filling value can now be modified by other content modules correctly and the value can be used via the getValue function.

To test this PR, https://github.com/MovingBlocks/Terasology/pull/4094 is required in your workspace as the ModifiableValue type is used in this PR.

To-do before merging : 
- [x] Change the filling usage in EdibleSubstance to match ModifiableValue syntax
- [x] Re Run jenkins tests once ModifiableValue is merged.",True,20,https://api.github.com/repos/Terasology/Hunger/pulls/20,https://github.com/Terasology/Hunger/pull/20,closed,11,4,2,4,0,0,0,0,[],2020-07-28 14:36:14+00:00,2020-08-15 06:34:11+00:00,1526277.0,"17 days, 15:57:57",[],"[{'commit_sha': '451bdd4b15cfb39da1107757b62dbe6f81fdf316', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2053cb719f08b5ddf6c278ad12bc59f1a8c804ba', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '91fdfc8c5b8e126268b9837d0053f1da0e1d4bce', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf2fa082f5817d278433ffdab7bfe4119a5c2684', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
401625791,feat: move logic from regen component to system,"### Contains

Fixed #20 to make the RegenComponent fit better with ECS by removing logic in the RegenComponent and moving it to the RegenAuthoritySystem.

### How to test

Take some damage via fall damage or using the 'damage <amount>' command in the console and wait for your health to regenerate!",True,38,https://api.github.com/repos/Terasology/Health/pulls/38,https://github.com/Terasology/Health/pull/38,closed,66,64,3,2,0,0,1,0,[{'name': 'Type: Improvement'}],2020-04-09 20:21:38+00:00,2020-04-09 21:51:51+00:00,5413.0,1:30:13,[],"[{'commit_sha': 'ea6e9e565a889ebfcdb81be382f0b6a6a8cda1e7', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9406c77b3c77d418ff5c12f088adbf09457e7d9d', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
444141345,added OnRecipeCrafted event,"Added the OnRecipeCrafted event which is sent once a recipe is crafted. This can be used by other modules to modify the produce of the recipe that has been crafted as required. 
Also made a modification to the code so identical items in the recipe will not return the same slots to be removed from inventory but rather return different slots. 

Issue regarding stacked items and duplicate items has been fixed. Order of items is still an issue and maybe due to something unrelated to this PR
",True,3,https://api.github.com/repos/Terasology/BasicCrafting/pulls/3,https://github.com/Terasology/BasicCrafting/pull/3,closed,75,12,3,6,0,1,0,0,[],2020-07-03 17:07:41+00:00,2020-08-16 07:21:39+00:00,3766438.0,"43 days, 14:13:58","[{'comment_id': 471010480, 'comment_body': 'This is not used anywhere. Can be removed.', 'comment_created': datetime.datetime(2020, 8, 15, 16, 19, 1, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}]","[{'commit_sha': '0a940f8fa55ccf5219398b1ce39930f7bd0ff7c3', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06690e059d22a95caeaa69bc9362731c1248de77', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '195ed12d6191eee10220ddb48792b134632318e1', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b56f72305b79609e8c4d30e7fb4fe9d64065ada', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df3ea601efe6b7156f434a5ed1be9161848dabf3', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7d234fbbeedfc8efa758880de9400fdc1e5126c', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
466705173,Add FillingModification to cooking,"Adds a modifier for the filling values of items created via this module. The current filling value of ingredients is compared with the base value of the ingredients to get a modifier value which can be used to modify the filling of the final product.

Can be tested with genomes and simple farming since these modules modify the values of ingredients genetically.",True,153,https://api.github.com/repos/Terasology/Cooking/pulls/153,https://github.com/Terasology/Cooking/pull/153,closed,37,0,1,3,1,0,0,0,[],2020-08-12 11:32:39+00:00,2020-08-16 07:37:39+00:00,331500.0,"3 days, 20:05:00",[],"[{'commit_sha': 'f90ea7aae7b81e8b6b88f0743e7ea71dfe8b4570', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5528a37fe318418e130d651d1aa8d9ca7e5aa250', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '370f60a57b1706dd45f2721d8632a99d8967ae39', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29
467968718,Register BreedingAlgorithm with trait,"**Contains**
Changed the setSeedBasedProperty method call in the AnimalGeneticsSystem to pass the Breeding Algorithm as an argument after the changes made to genomes in https://github.com/Terasology/Genome/pull/10 .

**How to test**
- Use the `spawnPrefab deer` command to spawn multiple deer (atleast 2) in the world.
- Activate the deer by pressing `e` while looking at them and click activate mating
- Wait for the mating process to conclude and watch the console for feedback on the mating process

For best results, make sure https://github.com/Terasology/Genome/pull/15 is merged/in your workspace to avoid incorrect breeding failures. Certain issues with respect to the pathfinding still exist, however they are unrelated to this PR",True,6,https://api.github.com/repos/Terasology/WildAnimalsGenome/pulls/6,https://github.com/Terasology/WildAnimalsGenome/pull/6,closed,4,1,2,3,1,1,0,0,[],2020-08-14 12:55:34+00:00,2020-08-22 15:52:34+00:00,701820.0,"8 days, 2:57:00","[{'comment_id': 475077186, 'comment_body': 'This has to be removed before merge.', 'comment_created': datetime.datetime(2020, 8, 22, 10, 37, 29, tzinfo=datetime.timezone.utc), 'commenter': 'e-aakash', 'type': 'User'}]","[{'commit_sha': '6d3452297ec74e95305007ae0dea4cadfc6ce697', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3992ff4a92b2285411dcfb454c0365f21279267', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5376867f4ec35339090c106f53a87d67fa688930', 'committer_username': 'vedant-shroff', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 13, 12, 38, 28, tzinfo=datetime.timezone.utc)}]",,32770414,,User,,25,,22,29

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
17296611,Genome,Terasology/Genome,Java,7,1,19,14,64,4,4,0,"[{'id': 461820101, 'number': 15, 'closed': datetime.datetime(2020, 8, 14, 17, 28, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 15, 17, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1044637.0, 'time_delta': '12 days, 2:10:37', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 445682067, 'number': 14, 'closed': datetime.datetime(2020, 7, 8, 2, 52, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 21, 8, 30, tzinfo=datetime.timezone.utc), 'time_taken': 20618.0, 'time_delta': '5:43:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 445678133, 'number': 13, 'closed': datetime.datetime(2020, 7, 7, 21, 3, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 21, 2, 32, tzinfo=datetime.timezone.utc), 'time_taken': 32.0, 'time_delta': '0:00:32', 'additions': 392, 'deletions': 11, 'state': 'closed'}, {'id': 433089178, 'number': 12, 'closed': datetime.datetime(2020, 8, 5, 9, 33, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 11, 13, 41, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4737095.0, 'time_delta': '54 days, 19:51:35', 'additions': 25, 'deletions': 34, 'state': 'closed'}, {'id': 429190231, 'number': 11, 'closed': datetime.datetime(2020, 7, 7, 15, 45, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 13, 3, 17, tzinfo=datetime.timezone.utc), 'time_taken': 2688115.0, 'time_delta': '31 days, 2:41:55', 'additions': 392, 'deletions': 11, 'state': 'closed'}, {'id': 427674610, 'number': 10, 'closed': datetime.datetime(2020, 6, 11, 12, 11, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 8, 31, 45, tzinfo=datetime.timezone.utc), 'time_taken': 618007.0, 'time_delta': '7 days, 3:40:07', 'additions': 344, 'deletions': 46, 'state': 'closed'}]"
32200576,SimpleFarming,Terasology/SimpleFarming,Java,27,11,20,45,287,5,5,0,"[{'id': 502242198, 'number': 103, 'closed': datetime.datetime(2021, 8, 16, 19, 29, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 13, 12, 5, 55, tzinfo=datetime.timezone.utc), 'time_taken': 26551436.0, 'time_delta': '307 days, 7:23:56', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 480790781, 'number': 96, 'closed': datetime.datetime(2020, 9, 6, 19, 8, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 6, 14, 53, 24, tzinfo=datetime.timezone.utc), 'time_taken': 15317.0, 'time_delta': '4:15:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 470440446, 'number': 95, 'closed': datetime.datetime(2020, 8, 23, 11, 11, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 20, 33, 36, tzinfo=datetime.timezone.utc), 'time_taken': 311900.0, 'time_delta': '3 days, 14:38:20', 'additions': 91, 'deletions': 5, 'state': 'closed'}, {'id': 459594627, 'number': 94, 'closed': datetime.datetime(2020, 8, 16, 7, 49, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 20, 52, 39, tzinfo=datetime.timezone.utc), 'time_taken': 1421803.0, 'time_delta': '16 days, 10:56:43', 'additions': 71, 'deletions': 13, 'state': 'closed'}, {'id': 435479536, 'number': 93, 'closed': datetime.datetime(2020, 8, 11, 13, 58, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 21, 36, 27, tzinfo=datetime.timezone.utc), 'time_taken': 4810896.0, 'time_delta': '55 days, 16:21:36', 'additions': 361, 'deletions': 59, 'state': 'closed'}]"
108946914,EdibleFlora,Terasology/EdibleFlora,Java,2,0,15,14,48,0,4,0,"[{'id': 470367383, 'number': 8, 'closed': datetime.datetime(2020, 8, 23, 11, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 19, 1, 11, tzinfo=datetime.timezone.utc), 'time_taken': 317449.0, 'time_delta': '3 days, 16:10:49', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 468345076, 'number': 7, 'closed': datetime.datetime(2020, 8, 23, 10, 55, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 17, 30, 36, tzinfo=datetime.timezone.utc), 'time_taken': 667477.0, 'time_delta': '7 days, 17:24:37', 'additions': 74, 'deletions': 1, 'state': 'closed'}, {'id': 459599983, 'number': 6, 'closed': datetime.datetime(2020, 8, 16, 7, 55, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 21, 1, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1421605.0, 'time_delta': '16 days, 10:53:25', 'additions': 26, 'deletions': 0, 'state': 'closed'}, {'id': 435478795, 'number': 5, 'closed': datetime.datetime(2020, 7, 1, 18, 13, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 21, 34, 35, tzinfo=datetime.timezone.utc), 'time_taken': 1283915.0, 'time_delta': '14 days, 20:38:35', 'additions': 223, 'deletions': 1, 'state': 'closed'}]"
1438007,Terasology,MovingBlocks/Terasology,Java,1334,3658,188,339,12023,469,57,35,"[{'id': 455068929, 'number': 4094, 'closed': datetime.datetime(2020, 8, 3, 10, 5, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 11, 51, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1030462.0, 'time_delta': '11 days, 22:14:22', 'additions': 156, 'deletions': 0, 'state': 'closed'}, {'id': 438148098, 'number': 4060, 'closed': datetime.datetime(2020, 6, 23, 7, 32, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 20, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 41544.0, 'time_delta': '11:32:24', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 415771070, 'number': 3949, 'closed': datetime.datetime(2020, 5, 14, 9, 11, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 19, 44, 56, tzinfo=datetime.timezone.utc), 'time_taken': 307600.0, 'time_delta': '3 days, 13:26:40', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 407320725, 'number': 3904, 'closed': datetime.datetime(2020, 5, 10, 19, 47, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 22, 14, 16, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1575042.0, 'time_delta': '18 days, 5:30:42', 'additions': 129, 'deletions': 2, 'state': 'closed'}, {'id': 389518802, 'number': 3858, 'closed': datetime.datetime(2020, 3, 29, 0, 34, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 16, 22, 10, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1045477.0, 'time_delta': '12 days, 2:24:37', 'additions': 26, 'deletions': 8, 'state': 'closed'}]"
74308237,EdibleSubstance,Terasology/EdibleSubstance,Java,5,0,20,9,15,0,2,0,"[{'id': 465552210, 'number': 4, 'closed': datetime.datetime(2020, 8, 15, 6, 42, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 14, 54, 30, tzinfo=datetime.timezone.utc), 'time_taken': 402502.0, 'time_delta': '4 days, 15:48:22', 'additions': 3, 'deletions': 1, 'state': 'closed'}]"
13895163,Hunger,Terasology/Hunger,Java,10,1,19,24,89,0,4,0,"[{'id': 457853234, 'number': 20, 'closed': datetime.datetime(2020, 8, 15, 6, 34, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 14, 36, 14, tzinfo=datetime.timezone.utc), 'time_taken': 1526277.0, 'time_delta': '17 days, 15:57:57', 'additions': 11, 'deletions': 4, 'state': 'closed'}]"
187074454,Health,Terasology/Health,Java,14,0,23,15,210,3,2,0,"[{'id': 401625791, 'number': 38, 'closed': datetime.datetime(2020, 4, 9, 21, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 20, 21, 38, tzinfo=datetime.timezone.utc), 'time_taken': 5413.0, 'time_delta': '1:30:13', 'additions': 66, 'deletions': 64, 'state': 'closed'}]"
112166784,BasicCrafting,Terasology/BasicCrafting,Java,6,1,17,10,53,2,5,1,"[{'id': 444141345, 'number': 3, 'closed': datetime.datetime(2020, 8, 16, 7, 21, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 17, 7, 41, tzinfo=datetime.timezone.utc), 'time_taken': 3766438.0, 'time_delta': '43 days, 14:13:58', 'additions': 75, 'deletions': 12, 'state': 'closed'}]"
61688519,Cooking,Terasology/Cooking,Java,56,11,20,68,229,4,4,0,"[{'id': 466705173, 'number': 153, 'closed': datetime.datetime(2020, 8, 16, 7, 37, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 11, 32, 39, tzinfo=datetime.timezone.utc), 'time_taken': 331500.0, 'time_delta': '3 days, 20:05:00', 'additions': 37, 'deletions': 0, 'state': 'closed'}]"
96574083,WildAnimalsGenome,Terasology/WildAnimalsGenome,Java,7,0,20,14,51,0,3,0,"[{'id': 467968718, 'number': 6, 'closed': datetime.datetime(2020, 8, 22, 15, 52, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 12, 55, 34, tzinfo=datetime.timezone.utc), 'time_taken': 701820.0, 'time_delta': '8 days, 2:57:00', 'additions': 4, 'deletions': 1, 'state': 'closed'}]"
