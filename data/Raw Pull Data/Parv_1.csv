pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
968091854,"Experiment Class Refactor (update to #183), converting specific experiments to subclasses","As per the comments left in PR #183, Sub classes make more sense for increasing modular support and as a general framework. I've implemented the base Experiment Class and the Experiment Subclasses for Visual P300, N170 and SSVEP (although I can rewrite some of the code in SSVEP and make it better). Next step is running it and making sure it works the same, I'm having some trouble in downloading the psychopy package due to my Python version and I should get that done very soon. Wanted to put this through so we could talk about it in the dev meeting.

Changes as per the project proposal for Google Summer of Code for eeg-notebooks - https://summerofcode.withgoogle.com/programs/2022/projects/2baQ46dm.  

Implemented as a part of the GSOC period for EEG - Notebooks under the mentorship of John Griffiths.",True,184,https://api.github.com/repos/NeuroTechX/EEG-ExPy/pulls/184,https://github.com/NeuroTechX/EEG-ExPy/pull/184,closed,474,551,11,24,11,17,1,0,[{'name': 'enhancement'}],2022-06-15 12:09:18+00:00,2022-08-10 16:35:41+00:00,4854383.0,"56 days, 4:26:23","[{'comment_id': 911484877, 'comment_body': ""As discussed, let's add an argument here so that instructions can optionally be skipped. Default behaviour should be to show however.  "", 'comment_created': datetime.datetime(2022, 6, 30, 22, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}, {'comment_id': 911486147, 'comment_body': ""Also as discussed, this part (of the original code) has always looked a bit ugly to me. The alternative is to pre-calculate all of the itis, soas, jitters in advance, and then it will be known before the loop starts what the duration will be, and so the decision of whether or it is the duration param or the completion of the trial set will be clear and not determined on the fly at the end. \r\n\r\nHowever, I suggest we have a stab at this small adjustment at a later point, it isn't the focus or priority of the current PR. "", 'comment_created': datetime.datetime(2022, 6, 30, 22, 24, 2, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}, {'comment_id': 911489015, 'comment_body': ""having both the file name and the module name the exact same text (`Experiment`) may be common but is not clean. \r\n\r\nI think the experiment base class should be called something like `BaseExperiment' \r\n\r\nAlso I think we should import the final experiment classes into the init so that they can be imported more cleanly at the user level. \r\n\r\nSo the final use pattern would be something like\r\n\r\n```python\r\nfrom eegnb.experiments import VisualN170\r\nexpt = VisualN170()\r\nexpt.present()\r\n```\r\n\r\n\r\n"", 'comment_created': datetime.datetime(2022, 6, 30, 22, 30, 19, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}, {'comment_id': 911489582, 'comment_body': 'see comment below. I think \r\n\r\n```python\r\nclass ExperimentBase\r\n```\r\n\r\nor \r\n\r\n```python\r\nclass BaseExperiment\r\n```\r\n', 'comment_created': datetime.datetime(2022, 6, 30, 22, 31, 34, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}, {'comment_id': 911490502, 'comment_body': ""I actually don't like the name `present` for this method. Never did. \r\n\r\nI think this 'run experiment' method should be \r\n\r\n```python\r\ndef run(self):\r\n```\r\n\r\nthis would also help avoid any confusion with the `present_stimulus` method\r\n\r\n"", 'comment_created': datetime.datetime(2022, 6, 30, 22, 33, 44, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}, {'comment_id': 913034047, 'comment_body': 'Name it `window` instead of `mywin`', 'comment_created': datetime.datetime(2022, 7, 4, 13, 59, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 913035684, 'comment_body': ""I think `idx` is a better name than `ii` (which I've seen used for vectors), type annotation would also help :)"", 'comment_created': datetime.datetime(2022, 7, 4, 14, 1, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 913039972, 'comment_body': 'If the other experiments are named `P300Experiment` for example, then it should prob be `BaseExperiment`', 'comment_created': datetime.datetime(2022, 7, 4, 14, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 914685690, 'comment_body': 'I agree with you guys, gonna change it to BaseExperiment\r\nI faced some namespace errors when trying to get rid of the redundant imports so this would need to be done anyway.', 'comment_created': datetime.datetime(2022, 7, 6, 10, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Parvfect', 'type': 'User'}, {'comment_id': 914698839, 'comment_body': 'done\r\n', 'comment_created': datetime.datetime(2022, 7, 6, 10, 50, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Parvfect', 'type': 'User'}, {'comment_id': 914701020, 'comment_body': 'I agree, done\r\n', 'comment_created': datetime.datetime(2022, 7, 6, 10, 53, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Parvfect', 'type': 'User'}, {'comment_id': 914701925, 'comment_body': ""A problem with this is that the file VisualN170 is super buried in the folders, I don't mind bringing all the experiments out of their specific folder so this is possible but need to make sure it does not cause any other problems. "", 'comment_created': datetime.datetime(2022, 7, 6, 10, 54, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Parvfect', 'type': 'User'}, {'comment_id': 943296790, 'comment_body': 'Should be replaced with:\r\n\r\n```py\r\nif isinstance(experiment, BaseExperiment.__class__):\r\n    exp = experiment(eeg=eeg, duration=record_duration, save_fn=save_fn)\r\n    exp.run()\r\n```', 'comment_created': datetime.datetime(2022, 8, 11, 9, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 943296818, 'comment_body': 'These should not be instantiated globally, just leave the class in the dict and let the caller handle initialization.\r\n\r\nSo that, for example:\r\n\r\n```\r\n    ""visual-N170"": VisualN170(),\r\n```\r\n\r\nJust becomes\r\n\r\n```    \r\n    ""visual-N170"": VisualN170,\r\n```', 'comment_created': datetime.datetime(2022, 8, 11, 9, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 943299263, 'comment_body': 'Are these safe to set globally? @JohnGriffiths \r\n\r\nFeels like we set them like this in more places, in which case they would conflict.\r\n\r\nEdit: Indeed, but looks like they all set the same values? Should prob be consolidated. All hits: https://github.com/NeuroTechX/eeg-notebooks/search?q=prefs.hardware', 'comment_created': datetime.datetime(2022, 8, 11, 9, 48, 42, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}]","[{'commit_sha': '1634e81277c1edb79183591d5b49fccdc553299d', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd48093adef7094815ea4625b4f6bb1f5c477db9a', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f05f1c4919c5f635242c0c8cb574e259ed84a0e8', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38993e6a5cf7c0e9f4b35556be8c5cb70a117e73', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba01229a93040daf916ca3c61908811b180996bc', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19ffcdcf7019d34ac9e6dfd11337ff199498e138', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42d3f2634d01e25e5f5e2fd618c70284b055848c', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76c5036abc012074e770ea5fe3f0f0accd4f37a3', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd958d2390a86ec97bb7371288dcbd50f99c51d0', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f208e086a7302ffec069ed1475faabbf6b95f9d9', 'committer_username': 'ErikBjare', 'committer_name': 'Erik Bj√§reholt', 'committer_email': 'erik@bjareho.lt', 'commit_date': datetime.datetime(2012, 2, 3, 12, 54, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5db55f3c930a0390d617d01634b150b89908d279', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efb1928847e9d4d54d338ee4245c2f388e691b8b', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '251d04ea97fdf5bc58442de9c43c3a2dc9b6474b', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7436444bcdbeca3cbae8affa697ff7aea1b6b625', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee7cca9ed27e49469af8bef36bb15f5eb1c95307', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd73abe080b58173edc41351b912a4137c8850152', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee5ab09df22c4b190eab13aef0966469a5ddf7cb', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cb7895bd71b338d251cb089f7f65d6a61c652611', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4815d28c8937e78a332edae90f45be30120ae990', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ec461a6aa1110fc3a5c78c5a1686828766025a0', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1000bd5ece17922cab43b642fc01706bed39a53', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9f53b233da527e5cff333aaa568bcb2b8cf1cdb', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc97fb5569b854a19a53e5e632a821d7b97dffb3', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef3dba0316a8c9901298ae92e01cb22a4bc7c7de', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}]",Parv Agarwal,65726543,,User,,59,,51,17
1020492215,Adding pipelines for cli analysis,"
As discussed, it makes sense to transition from the notebooks for analysis of eegnb experiments to a cli that can provide the user an opportunity to do the analysis without getting his hands messy with the code. This is what is being implemented in this PR.

As of now, automating the two experiments VisualN170 and VisualP300 analysis by callable functions whose use is specified in the code and repeated here, 

```python

#Visual N170:
raw, epochs = load_eeg_data('visual-n170', device_name='muse2016_bfn')
make_erp_plot(epochs)

#Visual P300:
raw, epochs = load_eeg_data('visual-P300', device_name='muse2016', event_id={'Non-Target': 1, 'Target': 2})
make_erp_plot(epochs, conditions=OrderedDict(NonTarget=[1],Target=[2]))

```

Some discussion to be had on implementing all experiments and where this can go, but a start to make sure that there is something to talk about. 

Implemented as a part of the GSOC period for EEG - Notebooks under the mentorship of John Griffiths.",True,202,https://api.github.com/repos/NeuroTechX/EEG-ExPy/pulls/202,https://github.com/NeuroTechX/EEG-ExPy/pull/202,closed,641,41,12,38,18,6,1,1,[{'name': 'enhancement'}],2022-08-08 16:16:21+00:00,2022-10-16 19:31:18+00:00,5973297.0,"69 days, 3:14:57","[{'comment_id': 957247592, 'comment_body': 'If y is recommended, then assume and make it default\r\n\r\n```suggestion\r\n        generatereport = input(""\\n\\nGenerate Report? (Y/n): "").lower() != ""n""\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 12, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 957255828, 'comment_body': 'This loop is hot and will lead to 100% CPU until c is pressed. Enter is also no longer needed, contrary to instructions.\r\n\r\nI suggest something like this instead:\r\n\r\n```py\r\nprint(""Starting next cycle in 5 seconds, press Ctrl+C to cancel"")\r\ntry:\r\n    sleep(5)\r\nexcept KeyboardInterrupt:\r\n    break\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 12, 21, 56, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 957257219, 'comment_body': ""Don't commit this file.\r\n\r\nYou can add `.ipynb_checkpoints` to `.gitignore` to prevent this from happening again."", 'comment_created': datetime.datetime(2022, 8, 29, 12, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'ErikBjare', 'type': 'User'}, {'comment_id': 959786028, 'comment_body': '@Parvfect re: this - IMHO it is best to name files individually when committing. \r\n\r\ni.e. do\r\n\r\n```bash\r\ngit commit file1.py file2.py file3.py file4.py file5.py -m""my commit description""\r\n```\r\n\r\nrather than \r\n\r\n```bash\r\ngit commit * -m""my commit description""\r\n``` \r\n\r\nor \r\n\r\n```bash\r\ngit commit -a -m""my commit description""\r\n``` \r\n\r\nbecause the latter, even though syntactically simpler, will frequently lead to unintended files being committed, even when one is not being particularly sloppy. \r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 31, 16, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}, {'comment_id': 972065667, 'comment_body': 'nit: remove trailing `_`', 'comment_created': datetime.datetime(2022, 9, 15, 14, 32, 8, tzinfo=datetime.timezone.utc), 'commenter': 'oreHGA', 'type': 'User'}, {'comment_id': 972068542, 'comment_body': ""This is a good suggestion, but let's implement it on another dev branch PR to this one, as it's not directly related to the new code from this contribution. \r\n\r\n"", 'comment_created': datetime.datetime(2022, 9, 15, 14, 34, 33, tzinfo=datetime.timezone.utc), 'commenter': 'JohnGriffiths', 'type': 'User'}]","[{'commit_sha': 'a192bcdf1cd4536f9e03bfb8b8e39b2bc1e186dd', 'committer_username': 'JohnGriffiths', 'committer_name': 'John Griffiths', 'committer_email': None, 'commit_date': datetime.datetime(2010, 9, 13, 17, 59, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e029b4bcd110406027c6a5ed83747130d7f2070', 'committer_username': 'JohnGriffiths', 'committer_name': 'John Griffiths', 'committer_email': None, 'commit_date': datetime.datetime(2010, 9, 13, 17, 59, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f208e086a7302ffec069ed1475faabbf6b95f9d9', 'committer_username': 'ErikBjare', 'committer_name': 'Erik Bj√§reholt', 'committer_email': 'erik@bjareho.lt', 'commit_date': datetime.datetime(2012, 2, 3, 12, 54, 26, tzinfo=datetime.timezone.utc)}, {'commit_sha': '453b85dc791d5a3fddfe1a0a8171fa535ea2009f', 'committer_username': 'JohnGriffiths', 'committer_name': 'John Griffiths', 'committer_email': None, 'commit_date': datetime.datetime(2010, 9, 13, 17, 59, 10, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54ad1eb5cf88c03f1931da10115d61f6bd2e2569', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '68c4578785616eedc342a9d6ce4e1f2a4d34671b', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dfb3bccf97dde6ad41604f9b4529fededfc71a9', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2600826ddb95b55ca7d0cf0474e6f7d5c612ce44', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c23156d1488e01680c129d4af98058a6b2802796', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60525ecdbd399ce069c9adce9a979b27f2c79c90', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c7bbaefdb9118003433eeee2ef61af5ee9d9aca2', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95f48dad89a6e45b05faf64124fe6cc3fc429e1a', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b6525accf99dcbf33aceca4ab6d1f32cfdfccbd', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '290df2bd9fe7f2d9f081815359eb0a3a06022c5c', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2f7bc50c4be1d6a4cc4d37b47b250698d4c8ad0', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41a6563e39cd590f86abb2eab6cc35a12aaf8ee8', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '95d09c81676b53cd6c87112b71edffc068edd5d2', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2d09c7b3134322ee401c9e2c22dde0618c8b1db', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5717300a4f43a07462251739e2d6c6bb17ecf67d', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f1a0dab0c08fcc979b265816fc5deab24f61767', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe07732ed0e815713bb85c43ac80a448192de047', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f703fbd8ee4ccd9af28452912078955504434de3', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8976f3b0c4769e6c0347ea197df6fe1405362f7', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbe6a132caacc48b86b702e0e1124575409117ee', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a339ffc8a263044352bf65d4f24c98aca06089c7', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd6fda05838f129219945a4dfb800645fafda9eb', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2be3e62ef88c57765622093cfa6bb5b4a17076f9', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54c67cb340988e20f2bbcf79030d731fa7a9608b', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '957b8777a9afd009c6c1d4a824bda348a7d69ce1', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67bb36e7769319d5301650a2d65936b9c81b2be5', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6917cd21be36a64a5163d8c88978bf0efd9ae38', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76340c97f700ca9a1e07036146bd62312961fb1e', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77a5238ad93da78c1a5681a39d85ea8a374b2ba3', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fb3b5f415c7835fc26c88c2f2ceb7ff16bc0780', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b38a805c2a668adb1853b55660c36804bf77295d', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd32a6d16cef27b07bf98bec7a5f5fdc67564276f', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67391c8932fa86cbfc0a7a7c63e19cc33eb8a829', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a46746522c83478591236fc7c32e76edc76c9bf3', 'committer_username': 'Parvfect', 'committer_name': 'Parv Agarwal', 'committer_email': None, 'commit_date': datetime.datetime(2020, 5, 21, 16, 14, 55, tzinfo=datetime.timezone.utc)}]",Parv Agarwal,65726543,,User,,59,,51,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
286606463,EEG-ExPy,NeuroTechX/EEG-ExPy,Python,124,427,23,18,441,41,49,4,"[{'id': 1210722885, 'number': 218, 'closed': datetime.datetime(2023, 3, 10, 12, 41, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 19, 20, 35, 52, tzinfo=datetime.timezone.utc), 'time_taken': 4291509.0, 'time_delta': '49 days, 16:05:09', 'additions': 23, 'deletions': 20, 'state': 'closed'}, {'id': 1020492215, 'number': 202, 'closed': datetime.datetime(2022, 10, 16, 19, 31, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 8, 16, 16, 21, tzinfo=datetime.timezone.utc), 'time_taken': 5973297.0, 'time_delta': '69 days, 3:14:57', 'additions': 641, 'deletions': 41, 'state': 'closed'}, {'id': 968091854, 'number': 184, 'closed': datetime.datetime(2022, 8, 10, 16, 35, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 15, 12, 9, 18, tzinfo=datetime.timezone.utc), 'time_taken': 4854383.0, 'time_delta': '56 days, 4:26:23', 'additions': 474, 'deletions': 551, 'state': 'closed'}, {'id': 963328330, 'number': 183, 'closed': datetime.datetime(2024, 6, 16, 2, 57, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 9, 20, 48, 23, tzinfo=datetime.timezone.utc), 'time_taken': 63698945.0, 'time_delta': '737 days, 6:09:05', 'additions': 195, 'deletions': 257, 'state': 'closed'}]"
