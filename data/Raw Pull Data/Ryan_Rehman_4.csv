pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
415782615,Various search pills related bugfixes.,"<!-- What's this PR for?  (Just a link to an issue is fine.) -->
This is a WIP PR related to #10026 

some more bugs i notice are:-
- [x] If the width of the search pills overflows the searchbox, only way to refocus the searchbox for typing is to go to the end by using the right key on the pills.
- [x] multiple pasted pills get combined as one.
- [x] on reloading the page the pills having ""search"" operator get combined as one. (not sure if bug)",True,14930,https://api.github.com/repos/zulip/zulip/pulls/14930,https://github.com/zulip/zulip/pull/14930,closed,114,167,10,7,5,3,1,0,[{'name': 'size: XL'}],2020-05-10 21:19:27+00:00,2020-05-27 05:04:37+00:00,1410310.0,"16 days, 7:45:10","[{'comment_id': 422839697, 'comment_body': ""Can you explain why this change is correct?  I would have expected we'd still need to initialize the tab_bar module?"", 'comment_created': datetime.datetime(2020, 5, 11, 7, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 423468863, 'comment_body': 'I made this change as there were 2 searchboxes displayed when pills were enabled, I think the first commit could be considered as a non-mergable testing commit.', 'comment_created': datetime.datetime(2020, 5, 12, 5, 23, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 424198685, 'comment_body': 'OK, makes sense.  Best to label it as such clearly, e.g. ""TESTING"" in the commit message title.', 'comment_created': datetime.datetime(2020, 5, 13, 6, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'd2418095edc08c66e4892bb67611caba78878189', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21ff1c16dd268723503f44ca541c4710cf19e543', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '479b5c3dec561dd2a422bcfa892ee5576bdddebf', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f84d21709de5ac8a129fd31c5bc7aa1a73397f8', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a920f83b9d0c9250f6617a5bc808384c466f7cee', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '256f2150e0ba42849bca7a2546733544cb580ac7', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4812244b31f8ae69e351de3edb8676acb1cdc684', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
434018187,search: Simplify search suggestions code path.,"These are the preparatory commits which breaks up the 1st commit of PR #15172.
@showell .",True,15360,https://api.github.com/repos/zulip/zulip/pulls/15360,https://github.com/zulip/zulip/pull/15360,closed,9,28,2,3,3,0,1,0,[{'name': 'size: XL'}],2020-06-13 15:11:50+00:00,2020-06-16 03:16:41+00:00,216291.0,"2 days, 12:04:51",[],"[{'commit_sha': '9324051a82cab88aa3532a1719abf22e27926fbd', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b058031a4f9a370e72d02b5b1c0a52dffa093ee7', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01c935630e70c73a5519a52fc1cf30053c6dfb0e', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
426397615,search: Refactor and polish pills implementation.,"This is a WIP PR for the polishing work on search pills and a continuation of #14930.
( Will create a new PR when we want to migrate to the search_pills_enabled version. )

- [ ] If pills overflow, they break the 2 search icons.
- [ ] If the cursor is at the start of the input block and text exists, then it is not possible to delete the previous pill. This is an input pills specific problem and not a search pills one.",False,15172,https://api.github.com/repos/zulip/zulip/pulls/15172,https://github.com/zulip/zulip/pull/15172,closed,71,39,8,4,18,1,1,0,[{'name': 'size: XL'}],2020-06-02 07:18:01+00:00,2020-06-19 23:30:50+00:00,1527169.0,"17 days, 16:12:49","[{'comment_id': 442435209, 'comment_body': 'Does this selector need to be more specific?  I worry about clicking on a pill in the compose box, or something, being misinterpreted', 'comment_created': datetime.datetime(2020, 6, 18, 18, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '763d1e713029486f9e52f89cbbe54f60550e41ba', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '359e39c60c423900bf8e5e7155be227261879f4b', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f915d00849e1d0b1fbd7c2443720c92ec3bd236', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c252867ff7a3c83bf3cdb33b524f8d841d357c1', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
437412484,search pills: Fix pills misalignment bugs visible in firefox.,"Fixes #15480.

The screenshot was taken on firefox browser.
![firefox_pills](https://user-images.githubusercontent.com/40122794/85202955-d82ac700-b327-11ea-9840-35a76e15107a.png)",True,15484,https://api.github.com/repos/zulip/zulip/pulls/15484,https://github.com/zulip/zulip/pull/15484,closed,3,1,1,1,2,0,1,0,[{'name': 'size: XS'}],2020-06-20 13:28:59+00:00,2020-06-20 21:50:57+00:00,30118.0,8:21:58,[],"[{'commit_sha': 'c0a963b73a351f526fed8d22ddb1dc5926dc44d8', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
437534179,[WIP] search: Work towards polishing search pills.,"I think this resolves all the bugs reported at [#design > search pills](https://chat.zulip.org/#narrow/stream/101-design/topic/search.20pills).
Continuation of #15172 and Fixes #10026.

Also Fixes [#issues > pill event handler not firing](https://chat.zulip.org/#narrow/stream/9-issues/topic/pills.20event.20handler.20not.20firing).

The first 4 commits are ready for review.
WIP beacuse the UI texts will require discussion and planning to add `img_src` to the pills.",False,15507,https://api.github.com/repos/zulip/zulip/pulls/15507,https://github.com/zulip/zulip/pull/15507,closed,86,36,8,4,5,0,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2020-06-21 11:49:24+00:00,2024-01-14 23:56:03+00:00,112536399.0,"1302 days, 12:06:39",[],"[{'commit_sha': '232df3cf6f34f459043a847e5dade1f7d3029d92', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aefc3d4e7e78a7aa8529c2fb06728ad1df423119', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e82421caa57f9a2141fed3f12620577152fa0324', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '605d02ca21ad28ccb8f79498103d9dc6f15a2889', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
422008167,"message list: Render new messages only after ""newest"" is found.","Fixes #14017

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing Plan:** <!-- How have you tested? -->
Tested manually as follows:-

1. set 5 secs delay for [get messages](https://github.com/zulip/zulip/blob/master/zerver/views/messages.py#L804).
2. Also set 10 seconds delay if `query_info['found_newest']` = True in [same view function](https://github.com/zulip/zulip/blob/master/zerver/views/messages.py#L969)
3.  set timeout duration to 500000 in [sent messages](https://github.com/zulip/zulip/blob/master/static/js/sent_messages.js#L113). (not sure if necessary, was getting blueslip warnings about event loop restarting)
4. `./manage.py populate_db -n10000`
5. `./manage.py mark_all_messages_unread`
6. Go to private message narrow
7. send a message to that narrow when all the messages haven't been fetched.
Previously the new message would get temporarily displayed.
Now the new message isn't rendered but is processed. (such as unread count increases)
8. send another message when last batch is being fetched.
This message gets stored in `_newest_items` and after the fetch is complete and the new if condition in `message_list.js` is satisfied, the new message(`_newest_items`) is rendered after the fetched messages(`bottom_messages`).

I also tested the last point by discarding the new message event if ""newest"" has not been found by the current message list.
Then if a new message is sent while fetching the last batch for that narrow then the message is missing. (as mentioned in the issue)
",False,15065,https://api.github.com/repos/zulip/zulip/pulls/15065,https://github.com/zulip/zulip/pull/15065,closed,92,16,5,2,14,24,5,0,"[{'name': 'bug'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: XL'}, {'name': 'difficult'}]",2020-05-22 16:11:30+00:00,2020-06-16 18:15:17+00:00,2167427.0,"25 days, 2:03:47","[{'comment_id': 429689211, 'comment_body': ""We should do this using a modern ES6 pattern for default arguments, it'd be a lot cleaner."", 'comment_created': datetime.datetime(2020, 5, 25, 0, 7, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 429689349, 'comment_body': 'Maybe just `let opts= {}`, and scope it inside the `can_apply_locally` block?', 'comment_created': datetime.datetime(2020, 5, 25, 0, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 429689520, 'comment_body': 'Let\'s add a comment in here: ""We can\'t render new messages if we haven\'t found the latest messages in the view without making it appear the message was just after previously rendered messages when that\'s inaccurate.""', 'comment_created': datetime.datetime(2020, 5, 25, 0, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 429689547, 'comment_body': 'Maybe `defer_rendering` would be a better option?  ', 'comment_created': datetime.datetime(2020, 5, 25, 0, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 429690313, 'comment_body': ""I'm not sure what the implications are of doing this additional `append_to_view`.  \r\n\r\nWould it be easier to reason about if we just moved this logic in the `message_list_data.js` logic for `add_messages` there, and just had `if self.fetch_status.has_found_newest { messages.append(self._newest_items); self._newest_items = []; }`  there?\r\n\r\n(I think we might need to move the `FetchStatus` object from the `MessageList` to the `MessageListData`, but that preparatory refactoring is probably an improvement in any case)."", 'comment_created': datetime.datetime(2020, 5, 25, 0, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 432730306, 'comment_body': ""> I'm not sure what the implications are of doing this additional `append_to_view`.\r\n\r\nWill have to look into `append_to_view`, but without this I was getting the error:\r\n```js\r\nError: Cannot read property 'top' of undefined\r\n at Object../static/js/message_viewport.js.exports.recenter_view /static/js/message_viewport.js:317\r\n```\r\n\r\nAlso added a comment about `valid_non_duplicated_messages` after moving this logic."", 'comment_created': datetime.datetime(2020, 5, 29, 20, 54, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 432783695, 'comment_body': ""We should probably write some proper tests for the corner cases around this new feature, since it's somewhat tricky."", 'comment_created': datetime.datetime(2020, 5, 29, 23, 41, 45, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 434217561, 'comment_body': ""I don't understand this new test code; can you explain it?  The last line seems to not do much."", 'comment_created': datetime.datetime(2020, 6, 2, 22, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 434219305, 'comment_body': ""I'm not sure why we need to call `get_frontfill_anchor` here.  I had been imagining we'd do something with a cleaner interface, which is to pass `data.messages` into `finish_newer_batch`.  \r\n\r\nThen the logic in `finish_newer_batch` can loop through the messages, find the max message ID in them, and compare that to `expected_latest_id`; and use that to decide how to set `fetch_status.has_found_newest`.\r\n\r\nThis would result in `get_expected_max_message_id` not needing to be part of the API/interface for the `fetch_status` module."", 'comment_created': datetime.datetime(2020, 6, 2, 22, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 434220101, 'comment_body': ""I think we need the behavior to change for the `message_util.add_new_messages` in the else clause just a bit below, so this is probably the wrong place to do our conditional; I think we can just not modify this file and instead change `message_util.add_new_messages` (or lower down the call stack).  I'll post a common there on how I think this should work."", 'comment_created': datetime.datetime(2020, 6, 2, 22, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 434220731, 'comment_body': ""So, following the changes suggested above, I think this function could read:\r\n```\r\nif (!msg_list.data.has_found_newest()) {\r\n    // Comment explaining this corner case\r\n    message_list.data.fetch_status.update_expected_max_message_id(messages)\r\n   return;\r\n}\r\nreturn add_messages(messages, msg_list, {messages_are_new: true});\r\n```\r\n\r\nAnd then the `FetchStatus` logic would need to do the loop over message objects, but that's easy enough."", 'comment_created': datetime.datetime(2020, 6, 2, 23, 1, 33, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 436262013, 'comment_body': ""oh oops, it didn't call the `test_happy_path` function previously, so the test didn't do anything.\r\nI added explanation for this in the comments."", 'comment_created': datetime.datetime(2020, 6, 6, 11, 43, 43, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 436274603, 'comment_body': ""@ryanreh99 Is there a way to structure this test so that if we were to remove `test_happy_path` again, then the assertion `assert.equal(msg_list.data.fetch_status.can_load_newer_messages(), true);` would fail?\r\n\r\nIn general, an assertion is very weak (and sometimes confusing) if it's testing something to be `true` that was already `true` in the first place.  (There exception to the rule is where you are specifically testing that a function **doesn't** have side effects.)"", 'comment_created': datetime.datetime(2020, 6, 6, 14, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 436274705, 'comment_body': 'Yes I can confirm this is required for home view too. I tested this by setting the `found_newest` to False every time a message is received.', 'comment_created': datetime.datetime(2020, 6, 6, 14, 52, 11, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 436274807, 'comment_body': 'We seem to duplicate this idiom twice.   Does it make sense to have little helper called `max_id_for_messages`?', 'comment_created': datetime.datetime(2020, 6, 6, 14, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 436274824, 'comment_body': 'see other comment about duplicating this idiom', 'comment_created': datetime.datetime(2020, 6, 6, 14, 54, 20, tzinfo=datetime.timezone.utc), 'commenter': 'showell', 'type': 'User'}, {'comment_id': 436281152, 'comment_body': ""Thanks for the info!\r\n\r\n~The test fails on removing the `update_expected_max_message_id` line.\r\nBut I couldn't find any way to fail an assert on removing the `test_happy_path` line.~\r\n\r\n~I understand the above point.\r\nThis test was added only to test the `finish_newer_batch` function which is called by `test_happy_path`. So I left it like this.~"", 'comment_created': datetime.datetime(2020, 6, 6, 16, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 436404438, 'comment_body': 'The second commit resolves this problem.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 440560465, 'comment_body': ""I don't see why we need `post_scroll_cont`; can't we just have `cont` do two things?  "", 'comment_created': datetime.datetime(2020, 6, 16, 3, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 440560799, 'comment_body': ""In the first commit version of this, it'd be better to just do an if/else statement rather than mutating `opts`."", 'comment_created': datetime.datetime(2020, 6, 16, 3, 11, 42, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 440560952, 'comment_body': ""Do we need the check on `current_msg_list`?  I would think we don't; we don't want to add the message to non-visible message lists like home_msg_list that might not be caught up, either,"", 'comment_created': datetime.datetime(2020, 6, 16, 3, 12, 25, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 440598943, 'comment_body': ""I'm also skeptical of the change to have this return something, especially given that it doesn't do so in the other code path."", 'comment_created': datetime.datetime(2020, 6, 16, 5, 44, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 440599961, 'comment_body': ""I'm concerned that this `load_more` call will result in visiting a stream narrow fetching messages in a loop until we have the full history (at least downwards), even if you do a `near:1` narrow.  \r\n\r\nOh, I see, this is only going to happen with the `max_message_id` case.  Hmm.\r\n\r\nOK, the other thing to worry about here is whether everything breaks with a horrible endless loop in the event that the `max_message_id` message gets deleted or edited to be in a different topic.\r\n\r\nSo I think we need a circuit-breaker here, which I think could be that just before doing this additional call, we clear the `max_message_id` state; that should be correct, since we expect to not see the race we're worried about here again.\r\n\r\n(And you should add some comments explaining the purpose behind this feature so the codebase remains readable afterwards)."", 'comment_created': datetime.datetime(2020, 6, 16, 5, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 440869135, 'comment_body': 'Oh thanks for the review\r\nDidn\'t think of this situation.\r\nI\'m resetting the `expected_max_message_id` back to 0 when the race condition occurs (Before the re-fetch).\r\nBut if a message is again received while this happens (the reason we are adding this re-fetch) the `expected_max_message_id`\'s value again gets updated and we enter the fetch_status block again.\r\n___\r\nEDIT: I think i misunderstood, If the race-condition does not occur again but somehow if the `expected_max_message_id` is not valid anymore we reset it, as it\'s use is over and can we assume the race condition won\'t occur again.\r\nBut even if the race condition occurs again, the value gets updated so we keep on fetching until we find the ""newest"".', 'comment_created': datetime.datetime(2020, 6, 16, 13, 55, 2, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}]","[{'commit_sha': 'a16ad0753d013253d95a6c322694b8ba40372372', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbbd5ccb95da88f5db26f7cc5aa93d1a4b26e69c', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
444423698,message list: Fix exception re-rendering messages following local echo.,"Fixes #15346.

Step to reproduce:
1. Set 10 secs delay in [`do_send_messages`](https://github.com/zulip/zulip/blob/master/zerver/lib/actions.py#L1365)
2. Update the setTimeout timer to 5000ms from 0 in [`change_message_id`](https://github.com/zulip/zulip/blob/master/static/js/message_list_data.js#L554)
3. [OPTIONAL] Comment out the [re-selection](https://github.com/zulip/zulip/blob/master/static/js/message_list_view.js#L1092).
(The first 2 points are enough to always reproduce this exception.
Added this to test out the other code path which raises the exception,
which isn't necessary, but it is helpful to know when to create the race by scrolling or clicking,
i.e. when the message pointer loses focus. )
4. Send a message to the narrow / all messages, from a user.
5. Using a different user, send a message to the same message list. This message gets locally echoed.
6. Select the locally echoed message. The other users message gets displayed out of order, just below it.
7. Our sent message is received and the message is still selected, thus raising the exception.
(If point 3 was done, then we would have to manually re-select the message).
This PR allows the re-ordering of the message without raising the exception.

**Previously:**
![echo_bug_before](https://user-images.githubusercontent.com/40122794/86536157-094bef80-bf03-11ea-8b0a-ba52a8b1ef01.gif)
**Now:**
![echo_bug_after](https://user-images.githubusercontent.com/40122794/86536161-123cc100-bf03-11ea-888c-710adf32e63f.gif)",False,15680,https://api.github.com/repos/zulip/zulip/pulls/15680,https://github.com/zulip/zulip/pull/15680,closed,26,24,2,2,3,0,3,0,"[{'name': 'bug'}, {'name': 'area: compose (misc)'}, {'name': 'size: M'}]",2020-07-05 15:39:13+00:00,2020-07-06 22:37:30+00:00,111497.0,"1 day, 6:58:17",[],"[{'commit_sha': '1b2a6ea48080443ca93efe7059eb6b82704e537f', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e168b1ed02a1c85e230802078c6d1d32c91f8336', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
448226019,message send: Update failed message ui on re-send success.,"Fixes #15351.

Tested by changing network to offline while sending a message and by
changing network to slow 3G in dev tools while re-sending the message.",True,15771,https://api.github.com/repos/zulip/zulip/pulls/15771,https://github.com/zulip/zulip/pull/15771,closed,16,3,3,1,2,0,4,0,"[{'name': 'bug'}, {'name': 'area: compose (misc)'}, {'name': 'area: message-editing'}, {'name': 'size: S'}]",2020-07-13 12:33:04+00:00,2020-07-13 19:29:34+00:00,24990.0,6:56:30,[],"[{'commit_sha': '1010ad1d7364147e4e1e17da4c6945195588a018', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
423349010,message view: Show indicator while fetching new messages.,"#15060 

Should the svg be extracted ?
I copy pasted it because I noticed elsewhere that the same svg block is used twice only in the same file  ( [billing.html](https://github.com/zulip/zulip/blob/master/templates/corporate/billing.html#L68-L73) ), exactly the same as this case.",True,15098,https://api.github.com/repos/zulip/zulip/pulls/15098,https://github.com/zulip/zulip/pull/15098,closed,68,15,6,2,3,0,4,0,"[{'name': 'bug'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: L'}]",2020-05-26 17:33:23+00:00,2020-05-26 22:21:43+00:00,17300.0,4:48:20,[],"[{'commit_sha': 'e53aa06ebe9e30fd8e4dfc45cc36a7245f6a836c', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '57007a1bdefb24c710e94536923939a7221a87c1', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
431896645,message view: Fix position of `loading_older_messages_indicator`.,This bug can be viewed on entering a search query on CZO.,True,15273,https://api.github.com/repos/zulip/zulip/pulls/15273,https://github.com/zulip/zulip/pull/15273,closed,1,1,1,1,2,0,1,0,[{'name': 'size: XS'}],2020-06-09 15:45:26+00:00,2020-06-10 00:43:58+00:00,32312.0,8:58:32,[],"[{'commit_sha': '21d753994493f25cc794ba9c4052b44c17752fb4', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
433995899,"narrow: Show streams:all notice only after ""oldest"" is found.",Followup of PR #15273,False,15358,https://api.github.com/repos/zulip/zulip/pulls/15358,https://github.com/zulip/zulip/pull/15358,closed,64,66,6,1,6,2,1,0,[{'name': 'size: XL'}],2020-06-13 11:42:58+00:00,2020-06-16 07:25:05+00:00,243727.0,"2 days, 19:42:07","[{'comment_id': 439854770, 'comment_body': 'Should there be a hide call in the else clause here?  It seems like structurally there should be.  I think we can combine the if statements in this block to make it work cleanly; the `const filter` query is cheap.', 'comment_created': datetime.datetime(2020, 6, 14, 18, 13, 37, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 439854954, 'comment_body': ""I think rather than moving things here, the last commit should move these to a new `static/js/message_list_notices.js`; `narrow.js` is already pretty giant, so we shouldn't be moving things that could be a separate module into it."", 'comment_created': datetime.datetime(2020, 6, 14, 18, 16, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '0e0d39a5cf41df6f71296211caa1eb1593a89f72', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
434553092,message view: Fix loading indicators.,"Fixes #15374 

**Testing Plan:** <!-- How have you tested? -->
Tested it by displaying which message lists's indicator is displayed, below it.
And also by continuously fetching the `home_msg_list`.

Added the testing commit at the end where changes have been commented to pass tests.
",False,15385,https://api.github.com/repos/zulip/zulip/pulls/15385,https://github.com/zulip/zulip/pull/15385,closed,72,40,10,4,6,1,4,0,"[{'name': 'bug'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'priority: high'}, {'name': 'size: XL'}]",2020-06-15 13:48:00+00:00,2020-06-16 05:30:51+00:00,56571.0,15:42:51,"[{'comment_id': 440594365, 'comment_body': ""I think this should always be false; `message_list.all` is never rendered.  I'll fix this and add some explanatory comments that will help make this code more readable."", 'comment_created': datetime.datetime(2020, 6, 16, 5, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'e0432882347e16525dc10ab094f42e55fea6c75c', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78c87fadb405e89af93b2df8719f4c8c8375ab25', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bd43282589e5f506fe97e5ba94c4eb4a6efe5f6', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3370aee73803ee77b3cb23240c8058eac099fdd', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
437363837,message view: Fix link generation logic of the end of results notice.,"Fixes #15405
![ci](https://user-images.githubusercontent.com/40122794/85191662-4bf3b200-b2dd-11ea-85bf-a71c91a9c224.png)
",False,15479,https://api.github.com/repos/zulip/zulip/pulls/15479,https://github.com/zulip/zulip/pull/15479,closed,30,3,3,1,3,2,4,0,"[{'name': 'bug'}, {'name': 'priority: critical'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'size: M'}]",2020-06-20 04:34:02+00:00,2020-06-20 23:27:29+00:00,68007.0,18:53:27,"[{'comment_id': 443101829, 'comment_body': ""Let's not hardcode 7 here; and would it work to just add `streams: public` to the operators list we're passing into `operators_to_hash`?"", 'comment_created': datetime.datetime(2020, 6, 20, 4, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 443103629, 'comment_body': 'lgtm; but maybe we should extract this computation as a function and add some unit tests?', 'comment_created': datetime.datetime(2020, 6, 20, 5, 33, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'de0b35bb30b742d7f56bea557c19672523f5b902', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
438202118,"message view: Fix erroneous ""message outside current narrow"" notice.","Fixes #15497.
tested using the details mentioned in the issue.
![ci](https://user-images.githubusercontent.com/40122794/85339995-e2ed8380-b502-11ea-8ed9-04386150409b.png)
",True,15528,https://api.github.com/repos/zulip/zulip/pulls/15528,https://github.com/zulip/zulip/pull/15528,closed,15,4,2,2,3,0,4,0,"[{'name': 'bug'}, {'name': 'priority: critical'}, {'name': 'area: message feed (uncategorized)'}, {'name': 'size: S'}]",2020-06-22 22:08:40+00:00,2020-06-23 22:46:06+00:00,88646.0,"1 day, 0:37:26",[],"[{'commit_sha': 'be494bf2fa6ee4f2bf5eb368e724e888db8102c7', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa53c983663d7181c44b8e33d9945c153dca8337', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
452365753,ui: Fix loading spinner glitch.,"On calling `loading.make_indicator` for the second
time or more no spinner is being displayed.

This bug can be viewed on visiting a `near: 1` narrow
and the spinner for the newer messages is displayed
only once (i.e. the first time it is rendered), while
the logo is displayed every time.

This happens because `loading.destroy_indicator` sets
the css of that container to display: ""none"". This can
be removed as we are emptying the container just above.

Introduced in 953d475274368ceed0c9584e71498a3cd2c93d41.

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing Plan:** <!-- How have you tested? -->


**GIFs or Screenshots:** <!-- If a UI change.  See:
  https://zulip.readthedocs.io/en/latest/tutorials/screenshot-and-gif-software.html
  -->


<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->
",True,15852,https://api.github.com/repos/zulip/zulip/pulls/15852,https://github.com/zulip/zulip/pull/15852,closed,1,1,1,1,0,0,2,0,"[{'name': 'bug'}, {'name': 'size: XS'}]",2020-07-19 05:59:28+00:00,2020-07-20 18:00:38+00:00,129670.0,"1 day, 12:01:10",[],"[{'commit_sha': '1a2bd53a1b25fe67f486e5a1373b979f49ca6b39', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
471434589,ui: Add loading indicator for message edits.,"Fixes #16143.
![message_edit_indicator](https://user-images.githubusercontent.com/40122794/90857877-afb05f00-e3a2-11ea-83b0-ca8d57f992dd.gif)
",True,16177,https://api.github.com/repos/zulip/zulip/pulls/16177,https://github.com/zulip/zulip/pull/16177,closed,36,5,4,1,4,4,4,0,"[{'name': 'bug'}, {'name': 'area: message-editing'}, {'name': 'priority: high'}, {'name': 'size: M'}]",2020-08-21 06:09:39+00:00,2020-08-31 23:51:51+00:00,927732.0,"10 days, 17:42:12","[{'comment_id': 476910012, 'comment_body': ""We generally avoid using jQuery's `.data()` as a setter because if you try to read it with `.attr('data-message-id)`, it doesn't work."", 'comment_created': datetime.datetime(2020, 8, 26, 0, 26, 7, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 476911019, 'comment_body': 'Should this be called `reset_modal_ui`?', 'comment_created': datetime.datetime(2020, 8, 26, 0, 27, 55, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 476911358, 'comment_body': 'I usually find it cleaner to make separate show/hide methods just for readability, even if they share a line of code.', 'comment_created': datetime.datetime(2020, 8, 26, 0, 28, 32, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 476912791, 'comment_body': ""I'm not sure this refactoring is actually advisable, in that now we have a user-facing network delay both when opening the modal and when submitting it.\r\n\r\nI think it'd be not that hard to do a loading spinner with the chained 2-step network operation:\r\n* Start the spinner at the beginning\r\n* Stop the spinner in the error handler for the first request (keeping it going, by default, in the success handler)\r\n* Stop the spinner in both success and error handlers for the second request.\r\n"", 'comment_created': datetime.datetime(2020, 8, 26, 0, 30, 43, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': 'd410b796bb7939a44a1e7bc77935e98fe18e0d09', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
453942081,stream edit: Add support for adding all members of another stream.,"#15186
WIP PR because the non-typeahead  case (user presses the `Esc` key)
has not been implemented yet, will add it in a new commit.
And the logic for user-groups is remaining too, will create a new PR for this.

@shubhamdhama @pragatiagrawal31 could you have a look.

**Testing Plan:**
Added the node tests for all changes made here.",True,15859,https://api.github.com/repos/zulip/zulip/pulls/15859,https://github.com/zulip/zulip/pull/15859,closed,469,24,9,5,12,14,1,0,[{'name': 'size: XL'}],2020-07-20 23:37:59+00:00,2020-08-31 23:57:33+00:00,3629974.0,"42 days, 0:19:34","[{'comment_id': 458717489, 'comment_body': 'Instead of doing this function-check in `if` statement I\'d have done something like this,\r\n```js\r\n            if (opts.update_func) {\r\n                if (opts.update_func !== ""function"") {\r\n                    blueslip.error(<error message here>);\r\n                }\r\n                opts.update_func();\r\n            }\r\n```\r\nBut I\'m not sure we are doing these sort of checks at other places. But it\'s definitely a good thing to do. Maybe, typescript will take care of this in future.', 'comment_created': datetime.datetime(2020, 7, 22, 11, 15, 32, tzinfo=datetime.timezone.utc), 'commenter': 'shubhamdhama', 'type': 'User'}, {'comment_id': 458718490, 'comment_body': ""A small commit message for this commit https://github.com/zulip/zulip/pull/15859/commits/19e56e55fe2e7afb64696cbd6770cdbb922c2001 is appreciated. Can be 1-3 lines explaining that it's a preliminary commit."", 'comment_created': datetime.datetime(2020, 7, 22, 11, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'shubhamdhama', 'type': 'User'}, {'comment_id': 458899040, 'comment_body': ""> But I'm not sure we are doing these sort of checks at other places\r\n\r\nI see, I checked at other typeahead places and this check wasn't necessary as javascript already raises a `TypeError`."", 'comment_created': datetime.datetime(2020, 7, 22, 15, 54, 54, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 465377164, 'comment_body': ""These two lines are weird -- `sub.subscribers` is already a list of user ids; so you want to just `user_ids = user_ids.concat(sub.subscribers)`.\r\n\r\nAlso should this be called `get_user_ids_from_sub`, since it's potentially multiple streams?"", 'comment_created': datetime.datetime(2020, 8, 4, 23, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465377404, 'comment_body': ""When displaying these pills, do we want to show the number of users being added?  I think that'd be a very helpful visual hint."", 'comment_created': datetime.datetime(2020, 8, 4, 23, 2, 35, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465377869, 'comment_body': ""Couldn't this be done much more simply while we still have a `Set` by just removing the current user ID, rather than doing this awkward array splicing?"", 'comment_created': datetime.datetime(2020, 8, 4, 23, 4, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465379201, 'comment_body': 'I feel like this test is too mock-heavy.  Ideally, we should be doing end-to-end tests of the main logic, e.g. ""Type these 5 characters, verify the typeahead options are X, Y, Z in that order"".  Then ""Select Y, verify it creates a pill with Z data"".  Reading this test it seems like all we\'re doing is getting test ""coverage"" -- i.e. checking all the lines execute -- but not verifying much about the actual output as we go along.  (I could be missing something as I\'m mostly skimming these tests at this stage)\r\n\r\nhttps://zulip.readthedocs.io/en/latest/testing/philosophy.html\r\n\r\n@showell or @aero31aero may be able to provide more advice on setting this test up properly; our main typeahead tests balance this stuff well.', 'comment_created': datetime.datetime(2020, 8, 4, 23, 8, 4, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465379413, 'comment_body': ""If we're exporting this, we should add a comment defining its interface -- what does it do when called if one doesn't have the stream-edit UI open?"", 'comment_created': datetime.datetime(2020, 8, 4, 23, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465379592, 'comment_body': 'The refactor to pass this a `sub` might be worth doing as a prep commit to simplify things here.', 'comment_created': datetime.datetime(2020, 8, 4, 23, 9, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465380104, 'comment_body': 'Oh, I see, this is in a later commit.  OK.', 'comment_created': datetime.datetime(2020, 8, 4, 23, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465380456, 'comment_body': ""I don't really understand what this commit does; is this interface for copy-pasting content into the box?  "", 'comment_created': datetime.datetime(2020, 8, 4, 23, 12, 6, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465380833, 'comment_body': 'This sort of test is great.', 'comment_created': datetime.datetime(2020, 8, 4, 23, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 465381254, 'comment_body': 'Maybe ""Add subscribers.  Use #streamname to subscribe a whole stream"".', 'comment_created': datetime.datetime(2020, 8, 4, 23, 14, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 479634771, 'comment_body': 'Yes besides copy pasting, this last commit is added so that stream pills can be created when the user hides the typeahead (by pressing `Esc` key before enter). The user pill also has this feature.\r\n\r\n( I updated the commit )', 'comment_created': datetime.datetime(2020, 8, 29, 10, 21, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}]","[{'commit_sha': 'c129a858d1fbc31823a9babb5ba8cf9f177a2d01', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4b7a3fdfb0602c7b578a74e4d6cb9a901423bc5', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ac1c1e0e37ca4d663e37e9fd8a71b4ff2703a5f', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59c7ace54cd0797308c5696616642af5b6e0b0f3', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84f2e251f4b8429e7db7c01718d72ac971b9ba53', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
447664201,streams: Change streams permissions modal + other prep work.,"**Commit 1:**
This is required to fix buggy behaviour on addition of the third toggler.
`active_data.tab.text()` would return the selected tabs values of all the togglers, combined.

**Commit 2:**
Is just a refactor.

**Commit 3:**
Added this as the `personal` tab will be in the middle and we still want to use only the arrow keys to switch tabs.
`enable_tab` added for the ui updates.

**Commit 4-6:**
Since we are going to extract the modal and display it under `general` tab, this just makes it easier.
In a followup commit I could make it into 3 savings indicators - one for privacy, posting and retention.
They would lie on the same row as each's respective sub-heading.

@pragatiagrawal31 @shubhamdhama this is ready for review.

Also, currently we use the left, right arrows keys to switch between the [Subscribed | All streams] toggler.
Since these keys would be used for the [General | Personal | Subscribers] toggler.
Im not sure what keys should I map for the current toggler. Perhaps, shift + left, right keys ?",False,15756,https://api.github.com/repos/zulip/zulip/pulls/15756,https://github.com/zulip/zulip/pull/15756,open,313,168,12,5,15,5,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2020-07-10 22:10:28+00:00,,0.0,,"[{'comment_id': 453335293, 'comment_body': ""`active_data` isn't defined here."", 'comment_created': datetime.datetime(2020, 7, 12, 16, 14, 46, tzinfo=datetime.timezone.utc), 'commenter': 'shubhamdhama', 'type': 'User'}, {'comment_id': 453337767, 'comment_body': 'This else-if can be changed to just `if`.', 'comment_created': datetime.datetime(2020, 7, 12, 16, 39, 10, tzinfo=datetime.timezone.utc), 'commenter': 'shubhamdhama', 'type': 'User'}, {'comment_id': 475241834, 'comment_body': 'We should rename this function to something more generic and remove the `if (!url) {` condition which is present a few lines below and pass the url in every usage.\r\nIdeally, we should move these types of functions to a more generic place, maybe `settings_ui`?', 'comment_created': datetime.datetime(2020, 8, 23, 17, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'pragatiagrawal31', 'type': 'User'}, {'comment_id': 478562768, 'comment_body': 'Instead of passing the URL in next commit, we could have changed it here. And we can rename this function to, `save_subsection_settings`? Thoughts?', 'comment_created': datetime.datetime(2020, 8, 27, 16, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'pragatiagrawal31', 'type': 'User'}, {'comment_id': 478567419, 'comment_body': 'I think we can improve here, here we have a lot of code duplication, it will be a good case to use/create a class for the selector for these three event handlers. Have you tried and faced any problem with this, if not, then please try and let us know?', 'comment_created': datetime.datetime(2020, 8, 27, 17, 4, 18, tzinfo=datetime.timezone.utc), 'commenter': 'pragatiagrawal31', 'type': 'User'}]","[{'commit_sha': '52df7bb399c1bc50165583bebcf01de64007a327', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efb22607d00c1d65b2097d540dc0bbdade8386e5', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73b680ae144509d807c699b38354118bba968cde', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdda132f1c3cbe501056b44d2c225fff08fb278e', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f18b9978d0f128d0e58618bd67543f9fc3959e77', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
402371095,[WIP] notifications: Topics I Follow.," #12309.

- [x] Topic Follow Email Notifications
- [x] Topic Follow wildcard mentions
- [x] Topic Follow Push notifications
- [ ] Topic Follow Desktop and Audible notifications
- [x] UI and API changes for User values under `Notification triggers `

**Testing Plan:** <!-- How have you tested? -->
Beside the added tests, tested manually as follows:

```python
Zoe.enable_topic_follow_email_notifications = True
Zoe.enable_topic_follow_wildcard_mentions_notify = False
```
Enable stream specific email notifications for Zoe, Cordelia and Othello.
(They have posted to the topic before, thus are followers)
Mute the stream for Othello.
When Iago is the only one online, send a message.

On the /emails url:
Zoe gets a topic missed message email
Cordelia gets a stream missed message email

Edit the message content to `@ all`
Aaron, Hamlet, Prospero and Polonius gets a mention missed message email.
(Iago does not get any notification for being online.
Zoe and Cordelia doesn't get as they have already received.
Othello has muted to stream, so he does not receive an email either.)

Send another `@ all` message
Everyone but Iago and Hamlet receive a mail due to the reasons mentioned above.
Zoe get one too as even though `enable_topic_follow_wildcard_mentions_notify` is False, `wildcard_mentions_notify` is True

Mute the Topic as Zoe
Send another message as Iago.
Only Cordelia receives a stream missed message email",False,14555,https://api.github.com/repos/zulip/zulip/pulls/14555,https://github.com/zulip/zulip/pull/14555,closed,665,64,23,4,16,19,2,0,"[{'name': 'size: XL'}, {'name': 'has conflicts'}]",2020-04-12 17:21:35+00:00,2023-10-02 06:23:25+00:00,109515710.0,"1267 days, 13:01:50","[{'comment_id': 409179139, 'comment_body': 'I think ""because you contributed to this topic"" would be better for brevity?', 'comment_created': datetime.datetime(2020, 4, 15, 22, 49, 17, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409179452, 'comment_body': 'Also @hackerkid do we still not have i18n for this section of our emails configured?  ', 'comment_created': datetime.datetime(2020, 4, 15, 22, 50, 9, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409179909, 'comment_body': 'Do we need to check if the subscription is active, or a former subscription, here?  ', 'comment_created': datetime.datetime(2020, 4, 15, 22, 51, 34, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409180170, 'comment_body': 'Should we just include `is_muted=True` in the filter, and do `.values_list(""user_profile_id"", flat=True)` here?  Then we wouldn\'t need the next lines.', 'comment_created': datetime.datetime(2020, 4, 15, 22, 52, 18, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409180347, 'comment_body': ""Maybe worth adding a comment that we currently define contributors to be users who've sent a message to the topic, but we might later extend it to include users who've reacted to it (or marked themselves as following it)."", 'comment_created': datetime.datetime(2020, 4, 15, 22, 52, 48, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409180704, 'comment_body': ""For that reason I'd argue we should call this `get_followers_user_ids_for_topic`; I think that's what we'll call this in the future."", 'comment_created': datetime.datetime(2020, 4, 15, 22, 53, 44, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409181494, 'comment_body': 'So, I realize this will be an annoying project to change, but I think ""topic_` as the name is too brief, and should be E.g. `enable_followed_topic_desktop_notifications`.  \r\n\r\nAlso, do we want want the `wildcard_mentions_notify` option in this bundle bundle, as `enable_followed_topic_wildcard_mentions_notify`, so our table can be complete?', 'comment_created': datetime.datetime(2020, 4, 15, 22, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409181895, 'comment_body': ""Maybe add a bit more of a comment explaining this test?  It's a bit surprising the test setup doesn't feature changes to the user settings related to it.  And maybe `test_topic_follow_multiple_messages`?"", 'comment_created': datetime.datetime(2020, 4, 15, 22, 57, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409185589, 'comment_body': 'Let me start a chat.zulip.org thread before we change this.', 'comment_created': datetime.datetime(2020, 4, 15, 23, 8, 3, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409187367, 'comment_body': 'https://chat.zulip.org/#narrow/stream/3-backend/topic/topics.20I.20follow.20naming/near/854541', 'comment_created': datetime.datetime(2020, 4, 15, 23, 13, 15, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409187925, 'comment_body': 'We should probably at least have this query fetch the data for the whole set, ', 'comment_created': datetime.datetime(2020, 4, 15, 23, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409188149, 'comment_body': ""I don't think we need to do this database query; can't we just use is the `in_muted` data from `subscription_rows` just below?"", 'comment_created': datetime.datetime(2020, 4, 15, 23, 15, 37, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409188418, 'comment_body': 'Yeah, in fact, I think if you just delete this line and the query just above, the right thing will happen.', 'comment_created': datetime.datetime(2020, 4, 15, 23, 16, 29, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 409188915, 'comment_body': ""I think it'd be nice if this commit included `topic_push_notify`, just so that we only churn this file once (and then we can just have a line for `topic_*_notify`.  Though I think these flags should probably be called e.g. `topic_follow_email_notify`."", 'comment_created': datetime.datetime(2020, 4, 15, 23, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 416010004, 'comment_body': 'Added a comment to this test and the other tests for stream/mentioned missed message emails test functions.', 'comment_created': datetime.datetime(2020, 4, 27, 17, 32, 18, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 416011152, 'comment_body': 'Sure, will squash after the review of `topic_follow_push_notify` commit.', 'comment_created': datetime.datetime(2020, 4, 27, 17, 33, 50, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 417639840, 'comment_body': 'oh yes, `active` was required.\r\n(Removed this function as this db query no longer needed)', 'comment_created': datetime.datetime(2020, 4, 29, 22, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ryanreh99', 'type': 'User'}, {'comment_id': 418358379, 'comment_body': 'Let\'s add a block comment here making clear that in the future we\'ll likely replace this query with looking at a separate ""followed topics"" table for greater efficiency.', 'comment_created': datetime.datetime(2020, 5, 1, 0, 15, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}, {'comment_id': 418359172, 'comment_body': ""We shouldn't need this `is_muted` column, right?  Topic mutes are checked via `user_ids_muting_topic`, and we have the data on who has muted the stream via the `subscription_rows` query.  Best to not ask the database to do that `exists_subquery`.  We want this operation to be very fast, since we're doing it for every stream message.\r\n\r\nSo, I just realized that the index I added makes `messages_for_topic` fast, but not necessarily `get_followers_user_ids_for_topic`; it'll still need to look through all those messages to find the senders.  We might need yet another index that's on `(recipient_id, upper(topic), sender_id)` to support this query."", 'comment_created': datetime.datetime(2020, 5, 1, 0, 18, 39, tzinfo=datetime.timezone.utc), 'commenter': 'timabbott', 'type': 'User'}]","[{'commit_sha': '9ce62415daf66f3f310aff83bd84148fc9d14eb1', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '75841324a1f1dbb29ceb2a0508938368641acb93', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '16d217261d8ef8c00dea7246b62074c768275760', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f98ddff73a82d5bf16fe270c3b76cf761dfae29', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
429401098,Notification settings UI bug-fixes.,"First commit issue [#issues > @ all for newly subscribed stream](https://chat.zulip.org/#narrow/stream/9-issues/topic/.40all.20for.20newly.20subscribed.20stream).

Tested 2nd commit by uncommenting `PUSH_NOTIFICATION_BOUNCER_URL`
in [prod_settings_template -L315](https://github.com/zulip/zulip/blob/master/zproject/prod_settings_template.py#L315).",True,15239,https://api.github.com/repos/zulip/zulip/pulls/15239,https://github.com/zulip/zulip/pull/15239,closed,2,1,2,2,1,0,1,0,[{'name': 'size: XS'}],2020-06-06 19:42:49+00:00,2020-06-07 18:43:43+00:00,82854.0,23:00:54,[],"[{'commit_sha': 'e7095d9a72b95302de3d4aeba017d576eec6a8e9', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e720fb6623faa45b276305a380e838e8fd9e2baa', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5
444977540,subscriptions: Minor Bug-Fixes.,"Both the bugs are reproducible on CZO.

**2nd Commit:**
`scroll_element_into_container` is used in only 2 other places `list_cursor.js` and `stream_list.js` and both are implemented correctly.
![scroll](https://user-images.githubusercontent.com/40122794/86636707-3deaa480-bff2-11ea-90f7-13df1be806cf.gif)

**3rd Commit**
Previously:
![stream_click_before](https://user-images.githubusercontent.com/40122794/86636751-4cd15700-bff2-11ea-8c9d-29865daacbc1.gif)
Now:
![stream_click_after](https://user-images.githubusercontent.com/40122794/86636775-52c73800-bff2-11ea-931a-6b6ac54d8386.gif)

![ci](https://user-images.githubusercontent.com/40122794/86636821-5fe42700-bff2-11ea-82af-b10289c72164.png)
",True,15696,https://api.github.com/repos/zulip/zulip/pulls/15696,https://github.com/zulip/zulip/pull/15696,closed,3,8,2,3,1,0,1,0,[{'name': 'size: S'}],2020-07-06 20:09:09+00:00,2020-07-06 22:43:43+00:00,9274.0,2:34:34,[],"[{'commit_sha': '7ac96aa68900ba1361fe67446e299ef15382f6e9', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f956267c5dadd868f5ebe670804104da7c076c5d', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}, {'commit_sha': '012ec5a4103e9751a041b8afc8f7ffdf736a8641', 'committer_username': 'ryanreh99', 'committer_name': 'Ryan Rehman', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 9, 16, 6, 52, tzinfo=datetime.timezone.utc)}]",Ryan Rehman,40122794,,User,,10,,5,5

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
43160685,zulip,zulip/zulip,Python,7617,21020,375,1134,60335,2461,28,796,"[{'id': 632350864, 'number': 18384, 'closed': datetime.datetime(2021, 5, 7, 15, 47, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 7, 2, 37, tzinfo=datetime.timezone.utc), 'time_taken': 31494.0, 'time_delta': '8:44:54', 'additions': 29, 'deletions': 4, 'state': 'closed'}, {'id': 608564606, 'number': 17988, 'closed': datetime.datetime(2024, 8, 1, 0, 52, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 4, 15, 33, 12, tzinfo=datetime.timezone.utc), 'time_taken': 104923161.0, 'time_delta': '1214 days, 9:19:21', 'additions': 124, 'deletions': 49, 'state': 'closed'}, {'id': 585785616, 'number': 17500, 'closed': datetime.datetime(2021, 5, 10, 3, 42, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 5, 18, 3, 47, tzinfo=datetime.timezone.utc), 'time_taken': 5650720.0, 'time_delta': '65 days, 9:38:40', 'additions': 4, 'deletions': 11, 'state': 'closed'}, {'id': 543349204, 'number': 16940, 'closed': datetime.datetime(2023, 10, 1, 23, 59, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 21, 9, 10, 48, tzinfo=datetime.timezone.utc), 'time_taken': 87662908.0, 'time_delta': '1014 days, 14:48:28', 'additions': 542, 'deletions': 34, 'state': 'closed'}, {'id': 537670300, 'number': 16884, 'closed': datetime.datetime(2020, 12, 16, 0, 42, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 12, 12, 2, 24, 57, tzinfo=datetime.timezone.utc), 'time_taken': 339439.0, 'time_delta': '3 days, 22:17:19', 'additions': 10, 'deletions': 3, 'state': 'closed'}, {'id': 529013778, 'number': 16803, 'closed': datetime.datetime(2020, 11, 30, 2, 7, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 28, 21, 51, 14, tzinfo=datetime.timezone.utc), 'time_taken': 101803.0, 'time_delta': '1 day, 4:16:43', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 527616484, 'number': 16791, 'closed': datetime.datetime(2023, 10, 1, 23, 59, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 25, 18, 8, 35, tzinfo=datetime.timezone.utc), 'time_taken': 89877030.0, 'time_delta': '1040 days, 5:50:30', 'additions': 570, 'deletions': 34, 'state': 'closed'}, {'id': 524712867, 'number': 16775, 'closed': datetime.datetime(2020, 11, 20, 19, 50, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 20, 13, 41, 2, tzinfo=datetime.timezone.utc), 'time_taken': 22156.0, 'time_delta': '6:09:16', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 520929078, 'number': 16746, 'closed': datetime.datetime(2024, 7, 31, 16, 6, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 11, 14, 1, 13, 8, tzinfo=datetime.timezone.utc), 'time_taken': 117125581.0, 'time_delta': '1355 days, 14:53:01', 'additions': 864, 'deletions': 6, 'state': 'closed'}, {'id': 509087565, 'number': 16615, 'closed': datetime.datetime(2020, 10, 29, 18, 3, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 23, 16, 48, 44, tzinfo=datetime.timezone.utc), 'time_taken': 522902.0, 'time_delta': '6 days, 1:15:02', 'additions': 24, 'deletions': 1, 'state': 'closed'}, {'id': 508874695, 'number': 16612, 'closed': datetime.datetime(2021, 5, 28, 6, 28, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 23, 10, 33, 37, tzinfo=datetime.timezone.utc), 'time_taken': 18734118.0, 'time_delta': '216 days, 19:55:18', 'additions': 38, 'deletions': 29, 'state': 'closed'}, {'id': 500975825, 'number': 16517, 'closed': datetime.datetime(2021, 4, 20, 0, 43, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 10, 10, 13, 20, 40, tzinfo=datetime.timezone.utc), 'time_taken': 16543355.0, 'time_delta': '191 days, 11:22:35', 'additions': 305, 'deletions': 83, 'state': 'closed'}, {'id': 492663440, 'number': 16411, 'closed': datetime.datetime(2023, 5, 22, 13, 46, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 24, 19, 47, 36, tzinfo=datetime.timezone.utc), 'time_taken': 83786359.0, 'time_delta': '969 days, 17:59:19', 'additions': 125, 'deletions': 146, 'state': 'closed'}, {'id': 487938392, 'number': 16361, 'closed': datetime.datetime(2020, 9, 18, 23, 53, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 16, 12, 0, 27, tzinfo=datetime.timezone.utc), 'time_taken': 215598.0, 'time_delta': '2 days, 11:53:18', 'additions': 38, 'deletions': 12, 'state': 'closed'}, {'id': 481168008, 'number': 16313, 'closed': None, 'created': datetime.datetime(2020, 9, 7, 8, 9, 23, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 42, 'deletions': 2, 'state': 'open'}, {'id': 471434589, 'number': 16177, 'closed': datetime.datetime(2020, 8, 31, 23, 51, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 6, 9, 39, tzinfo=datetime.timezone.utc), 'time_taken': 927732.0, 'time_delta': '10 days, 17:42:12', 'additions': 36, 'deletions': 5, 'state': 'closed'}, {'id': 456814445, 'number': 15933, 'closed': datetime.datetime(2020, 7, 27, 18, 0, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 22, 27, 26, tzinfo=datetime.timezone.utc), 'time_taken': 70386.0, 'time_delta': '19:33:06', 'additions': 104, 'deletions': 111, 'state': 'closed'}, {'id': 453942081, 'number': 15859, 'closed': datetime.datetime(2020, 8, 31, 23, 57, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 23, 37, 59, tzinfo=datetime.timezone.utc), 'time_taken': 3629974.0, 'time_delta': '42 days, 0:19:34', 'additions': 469, 'deletions': 24, 'state': 'closed'}, {'id': 452365753, 'number': 15852, 'closed': datetime.datetime(2020, 7, 20, 18, 0, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 19, 5, 59, 28, tzinfo=datetime.timezone.utc), 'time_taken': 129670.0, 'time_delta': '1 day, 12:01:10', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 448226019, 'number': 15771, 'closed': datetime.datetime(2020, 7, 13, 19, 29, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 12, 33, 4, tzinfo=datetime.timezone.utc), 'time_taken': 24990.0, 'time_delta': '6:56:30', 'additions': 16, 'deletions': 3, 'state': 'closed'}, {'id': 447664201, 'number': 15756, 'closed': None, 'created': datetime.datetime(2020, 7, 10, 22, 10, 28, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 313, 'deletions': 168, 'state': 'open'}, {'id': 444977540, 'number': 15696, 'closed': datetime.datetime(2020, 7, 6, 22, 43, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 20, 9, 9, tzinfo=datetime.timezone.utc), 'time_taken': 9274.0, 'time_delta': '2:34:34', 'additions': 3, 'deletions': 8, 'state': 'closed'}, {'id': 444423698, 'number': 15680, 'closed': datetime.datetime(2020, 7, 6, 22, 37, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 15, 39, 13, tzinfo=datetime.timezone.utc), 'time_taken': 111497.0, 'time_delta': '1 day, 6:58:17', 'additions': 26, 'deletions': 24, 'state': 'closed'}, {'id': 438202118, 'number': 15528, 'closed': datetime.datetime(2020, 6, 23, 22, 46, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 22, 8, 40, tzinfo=datetime.timezone.utc), 'time_taken': 88646.0, 'time_delta': '1 day, 0:37:26', 'additions': 15, 'deletions': 4, 'state': 'closed'}, {'id': 437534179, 'number': 15507, 'closed': datetime.datetime(2024, 1, 14, 23, 56, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 21, 11, 49, 24, tzinfo=datetime.timezone.utc), 'time_taken': 112536399.0, 'time_delta': '1302 days, 12:06:39', 'additions': 86, 'deletions': 36, 'state': 'closed'}, {'id': 437412484, 'number': 15484, 'closed': datetime.datetime(2020, 6, 20, 21, 50, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 13, 28, 59, tzinfo=datetime.timezone.utc), 'time_taken': 30118.0, 'time_delta': '8:21:58', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 437363837, 'number': 15479, 'closed': datetime.datetime(2020, 6, 20, 23, 27, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 20, 4, 34, 2, tzinfo=datetime.timezone.utc), 'time_taken': 68007.0, 'time_delta': '18:53:27', 'additions': 30, 'deletions': 3, 'state': 'closed'}, {'id': 434553092, 'number': 15385, 'closed': datetime.datetime(2020, 6, 16, 5, 30, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 13, 48, tzinfo=datetime.timezone.utc), 'time_taken': 56571.0, 'time_delta': '15:42:51', 'additions': 72, 'deletions': 40, 'state': 'closed'}, {'id': 434018187, 'number': 15360, 'closed': datetime.datetime(2020, 6, 16, 3, 16, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 15, 11, 50, tzinfo=datetime.timezone.utc), 'time_taken': 216291.0, 'time_delta': '2 days, 12:04:51', 'additions': 9, 'deletions': 28, 'state': 'closed'}, {'id': 433995899, 'number': 15358, 'closed': datetime.datetime(2020, 6, 16, 7, 25, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 11, 42, 58, tzinfo=datetime.timezone.utc), 'time_taken': 243727.0, 'time_delta': '2 days, 19:42:07', 'additions': 64, 'deletions': 66, 'state': 'closed'}, {'id': 431896645, 'number': 15273, 'closed': datetime.datetime(2020, 6, 10, 0, 43, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 15, 45, 26, tzinfo=datetime.timezone.utc), 'time_taken': 32312.0, 'time_delta': '8:58:32', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 429401098, 'number': 15239, 'closed': datetime.datetime(2020, 6, 7, 18, 43, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 6, 19, 42, 49, tzinfo=datetime.timezone.utc), 'time_taken': 82854.0, 'time_delta': '23:00:54', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 426397615, 'number': 15172, 'closed': datetime.datetime(2020, 6, 19, 23, 30, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 2, 7, 18, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1527169.0, 'time_delta': '17 days, 16:12:49', 'additions': 71, 'deletions': 39, 'state': 'closed'}, {'id': 423349010, 'number': 15098, 'closed': datetime.datetime(2020, 5, 26, 22, 21, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 26, 17, 33, 23, tzinfo=datetime.timezone.utc), 'time_taken': 17300.0, 'time_delta': '4:48:20', 'additions': 68, 'deletions': 15, 'state': 'closed'}, {'id': 422008167, 'number': 15065, 'closed': datetime.datetime(2020, 6, 16, 18, 15, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 22, 16, 11, 30, tzinfo=datetime.timezone.utc), 'time_taken': 2167427.0, 'time_delta': '25 days, 2:03:47', 'additions': 92, 'deletions': 16, 'state': 'closed'}, {'id': 415782615, 'number': 14930, 'closed': datetime.datetime(2020, 5, 27, 5, 4, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 10, 21, 19, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1410310.0, 'time_delta': '16 days, 7:45:10', 'additions': 114, 'deletions': 167, 'state': 'closed'}, {'id': 402371095, 'number': 14555, 'closed': datetime.datetime(2023, 10, 2, 6, 23, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 17, 21, 35, tzinfo=datetime.timezone.utc), 'time_taken': 109515710.0, 'time_delta': '1267 days, 13:01:50', 'additions': 665, 'deletions': 64, 'state': 'closed'}, {'id': 399818034, 'number': 14474, 'closed': datetime.datetime(2020, 4, 6, 23, 26, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 6, 18, 13, 5, tzinfo=datetime.timezone.utc), 'time_taken': 18809.0, 'time_delta': '5:13:29', 'additions': 7, 'deletions': 4, 'state': 'closed'}, {'id': 397204019, 'number': 14428, 'closed': datetime.datetime(2020, 4, 1, 21, 51, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 1, 20, 1, 57, tzinfo=datetime.timezone.utc), 'time_taken': 6565.0, 'time_delta': '1:49:25', 'additions': 194, 'deletions': 168, 'state': 'closed'}, {'id': 391890121, 'number': 14282, 'closed': datetime.datetime(2020, 3, 22, 18, 29, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 17, 52, 45, tzinfo=datetime.timezone.utc), 'time_taken': 88603.0, 'time_delta': '1 day, 0:36:43', 'additions': 6, 'deletions': 7, 'state': 'closed'}, {'id': 381592052, 'number': 14066, 'closed': datetime.datetime(2020, 3, 31, 23, 2, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 28, 20, 58, 13, tzinfo=datetime.timezone.utc), 'time_taken': 2772253.0, 'time_delta': '32 days, 2:04:13', 'additions': 191, 'deletions': 15, 'state': 'closed'}, {'id': 376265079, 'number': 13935, 'closed': datetime.datetime(2020, 3, 27, 7, 21, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 17, 18, 16, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3330293.0, 'time_delta': '38 days, 13:04:53', 'additions': 54, 'deletions': 36, 'state': 'closed'}, {'id': 371940753, 'number': 13833, 'closed': datetime.datetime(2020, 5, 27, 6, 8, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 6, 14, 50, 51, tzinfo=datetime.timezone.utc), 'time_taken': 9559066.0, 'time_delta': '110 days, 15:17:46', 'additions': 13, 'deletions': 9, 'state': 'closed'}, {'id': 368702797, 'number': 13768, 'closed': datetime.datetime(2020, 2, 5, 1, 20, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 29, 18, 28, 9, tzinfo=datetime.timezone.utc), 'time_taken': 543114.0, 'time_delta': '6 days, 6:51:54', 'additions': 502, 'deletions': 168, 'state': 'closed'}, {'id': 364435777, 'number': 13702, 'closed': datetime.datetime(2020, 2, 3, 4, 55, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 18, 15, 19, 15, tzinfo=datetime.timezone.utc), 'time_taken': 1344964.0, 'time_delta': '15 days, 13:36:04', 'additions': 65, 'deletions': 7, 'state': 'closed'}, {'id': 356104374, 'number': 13559, 'closed': datetime.datetime(2020, 1, 18, 18, 28, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 22, 16, 58, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2338186.0, 'time_delta': '27 days, 1:29:46', 'additions': 196, 'deletions': 23, 'state': 'closed'}, {'id': 339580709, 'number': 13391, 'closed': datetime.datetime(2022, 5, 3, 16, 38, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 11, 19, 26, 40, tzinfo=datetime.timezone.utc), 'time_taken': 78095511.0, 'time_delta': '903 days, 21:11:51', 'additions': 118, 'deletions': 9, 'state': 'closed'}, {'id': 309470356, 'number': 13043, 'closed': datetime.datetime(2019, 10, 7, 20, 54, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 21, 12, 13, 53, tzinfo=datetime.timezone.utc), 'time_taken': 4092021.0, 'time_delta': '47 days, 8:40:21', 'additions': 3, 'deletions': 3, 'state': 'closed'}]"
