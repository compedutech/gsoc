pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
657437900,Original PR Code,"This is the initial code that has been added from https://github.com/sunpy/sunpy/pull/4591.

I can't seem to get RTD to read the generated images, so I'll let this PR be the initial code itself.",True,4,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/4,https://github.com/sunpy/sunkit-pyvista/pull/4,closed,227,4,9,31,3,67,0,0,[],2021-05-29 09:49:46+00:00,2021-05-31 13:04:46+00:00,184500.0,"2 days, 3:15:00","[{'comment_id': 641917703, 'comment_body': '`tox -e build_docs`\r\nSeems to always give me an error for mpl and scipy not being found because of the maps loaded in examples.', 'comment_created': datetime.datetime(2021, 5, 29, 9, 51, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 641917772, 'comment_body': ""Isn't that since they are not in the docs part of the requirements below?"", 'comment_created': datetime.datetime(2021, 5, 29, 9, 52, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641917984, 'comment_body': ""Even after adding `all` to `extras` I was experiencing, I'm not sure what the issue is"", 'comment_created': datetime.datetime(2021, 5, 29, 9, 55, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 641918344, 'comment_body': 'All where?', 'comment_created': datetime.datetime(2021, 5, 29, 9, 59, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641918640, 'comment_body': ""Nevermind, RTD still isn't displaying the image so I'll revert to the original code."", 'comment_created': datetime.datetime(2021, 5, 29, 10, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 641925850, 'comment_body': ""So is this still needed even if we can't get the gallery to display images on RTD?"", 'comment_created': datetime.datetime(2021, 5, 29, 11, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641925877, 'comment_body': ""```suggestion\r\n    'filename_pattern': '^((?!skip_).)*$',\r\n```"", 'comment_created': datetime.datetime(2021, 5, 29, 11, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641925911, 'comment_body': ""```suggestion\r\n    'doc_module': ('sunkit_pyvista'),\r\n```\r\nI would assume?"", 'comment_created': datetime.datetime(2021, 5, 29, 11, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641925919, 'comment_body': 'What does this do?', 'comment_created': datetime.datetime(2021, 5, 29, 11, 18, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641926027, 'comment_body': '```suggestion\r\n***************\r\nExample Gallery\r\n***************\r\n\r\nThis gallery contains examples of how to use sunkit-pyvista.\r\nMost of these examples require the sunpy sample data, which you can download by running::\r\n\r\n     >>> import sunpy.data.sample\r\n\r\nOnce downloaded the data will be stored in your user directory and you will not need to download it again.\r\n```', 'comment_created': datetime.datetime(2021, 5, 29, 11, 20, 28, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641933049, 'comment_body': 'Sorry I forgot to get rid of this', 'comment_created': datetime.datetime(2021, 5, 29, 12, 32, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 641933096, 'comment_body': ""Won't this cause the map.plot method to execute and display the output in RTD?"", 'comment_created': datetime.datetime(2021, 5, 29, 12, 33, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 641933187, 'comment_body': ""I left it commented for now incase there's a workaround with RTD and headless servers. Shall I remove it?"", 'comment_created': datetime.datetime(2021, 5, 29, 12, 34, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 641938425, 'comment_body': 'This governs what files to skip for the gallery. ', 'comment_created': datetime.datetime(2021, 5, 29, 13, 25, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 641938434, 'comment_body': 'Remove it if it wont be used. ', 'comment_created': datetime.datetime(2021, 5, 29, 13, 25, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642027435, 'comment_body': ""We don't use map.plot now, but if used later when implementing other methods like draw_quadrangle, this file is executed and the map is plotted (not sure if we need that). This file is only parsed and not executed."", 'comment_created': datetime.datetime(2021, 5, 30, 6, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642045616, 'comment_body': 'I am confused, what does this have to do with the map.plot method?', 'comment_created': datetime.datetime(2021, 5, 30, 9, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642045664, 'comment_body': '```suggestion\r\n```\r\nIf we dont need this?', 'comment_created': datetime.datetime(2021, 5, 30, 9, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642045721, 'comment_body': 'This should have more information.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642045812, 'comment_body': 'Yes, I forgot about this.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 11, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642045881, 'comment_body': 'I am not sure if this will be true going forward but the first example does the sample data. ', 'comment_created': datetime.datetime(2021, 5, 30, 9, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046028, 'comment_body': 'Are these only required for the doc build? If so, they should be in the docs section of the extras.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 12, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046083, 'comment_body': 'Remove this file.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 13, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046138, 'comment_body': 'Rename this file to be more informative. If you also want to skip the example, rename it to start `skip_<rest of the name>`', 'comment_created': datetime.datetime(2021, 5, 30, 9, 13, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046157, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 5, 30, 9, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046304, 'comment_body': '```suggestion\r\n\r\nUsing sunkit-pyvista, one can interface with the `pyvista` package to produce interactive 3D plots for sunpy Maps.\r\n```\r\nProbably want to link the sunpy map docs, tho I think we will need to make sure its setup in the docs/conf.py file.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046333, 'comment_body': 'Sorry I got confused, there was an issue with one of the draw methods on the local installation of sunpy on my system.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 15, 23, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642046397, 'comment_body': '```suggestion\r\n=======================================\r\nThree dimensional plots with sunpy Maps\r\n=======================================\r\n```\r\nMaybe?', 'comment_created': datetime.datetime(2021, 5, 30, 9, 15, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642046472, 'comment_body': 'Is it a bug or just a setup issue on your machine? ', 'comment_created': datetime.datetime(2021, 5, 30, 9, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047496, 'comment_body': 'That\'ll require `""sunpy"": (""https://docs.sunpy.org/en/stable/"", None)` to be added to as inter sphinx references right?', 'comment_created': datetime.datetime(2021, 5, 30, 9, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642047573, 'comment_body': 'Should this be added to gitignore?', 'comment_created': datetime.datetime(2021, 5, 30, 9, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642047686, 'comment_body': 'Can we sphinx interlink the SunpyPlotter, GenericMap and pyvista? \r\n\r\nIt is not setup in the docs/conf.py. \r\nYou will want to change the line that is:\r\n\r\n```\r\nintersphinx_mapping = {\'https://docs.python.org/\': None}\r\n```\r\nto something like:\r\n```\r\nintersphinx_mapping = {\r\n    ""python"": (\r\n        ""https://docs.python.org/3/"",\r\n        (None, ""http://www.astropy.org/astropy-data/intersphinx/python3.inv""),\r\n    ),\r\n    ""numpy"": (\r\n        ""https://numpy.org/doc/stable/"",\r\n        (None, ""http://www.astropy.org/astropy-data/intersphinx/numpy.inv""),\r\n    ),\r\n    ""matplotlib"": (\r\n        ""https://matplotlib.org/"",\r\n        (None, ""http://www.astropy.org/astropy-data/intersphinx/matplotlib.inv""),\r\n    ),\r\n    ""astropy"": (""https://docs.astropy.org/en/stable/"", None),\r\n    ""pyvista"": (""https://docs.pyvista.org/"", None),\r\n}\r\n```\r\nMind, I\'ve not tested this works.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047731, 'comment_body': '```suggestion\r\n\r\n###############################################################################\r\n```', 'comment_created': datetime.datetime(2021, 5, 30, 9, 28, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047804, 'comment_body': 'How does pyvista handle the other platforms? ', 'comment_created': datetime.datetime(2021, 5, 30, 9, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047857, 'comment_body': '```suggestion\r\n\r\n        Parameters\r\n```', 'comment_created': datetime.datetime(2021, 5, 30, 9, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047873, 'comment_body': '```suggestion\r\n\r\n        Returns\r\n```', 'comment_created': datetime.datetime(2021, 5, 30, 9, 29, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047908, 'comment_body': 'and else where.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 29, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642047913, 'comment_body': 'and else where.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 29, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642048259, 'comment_body': 'It should be already. ', 'comment_created': datetime.datetime(2021, 5, 30, 9, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642048260, 'comment_body': 'Yeah, I suppose', 'comment_created': datetime.datetime(2021, 5, 30, 9, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642049002, 'comment_body': ""I'll give this a shot\r\n"", 'comment_created': datetime.datetime(2021, 5, 30, 9, 39, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642049220, 'comment_body': 'If it is not required to install the package or even run the package, they should not be under this category. ', 'comment_created': datetime.datetime(2021, 5, 30, 9, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642049477, 'comment_body': 'The py38 tests are still failing though, we do need them as install dependencies.', 'comment_created': datetime.datetime(2021, 5, 30, 9, 43, 11, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642050230, 'comment_body': ""I had written code for draw_quadrangle which required map.plot() to be called first. So I assumed that we would need to call map.plot which would basically end up plotting the map in 2D which we wouldn't need for this project.\r\n\r\nAs of now, the docs execute this file as well and since RTD doesn't support headless displays, this produces an issue. This is unrelated to `plot()`"", 'comment_created': datetime.datetime(2021, 5, 30, 9, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642051733, 'comment_body': 'So when running on a vm pyvista warns the user that `PyVista will likely segfault when rendering`. Turns out this check is just disabled for windows because of it taking too long.\r\n\r\nThis was causing the RTD build to produce a segmentation fault so I added this in.', 'comment_created': datetime.datetime(2021, 5, 30, 10, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642052677, 'comment_body': 'Failing with?', 'comment_created': datetime.datetime(2021, 5, 30, 10, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642052967, 'comment_body': 'We use `all_corner_coords_from_map`which required matplotlib as a dependency for map', 'comment_created': datetime.datetime(2021, 5, 30, 10, 13, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642053414, 'comment_body': 'Ah I see. Then yeah, leave them there.', 'comment_created': datetime.datetime(2021, 5, 30, 10, 16, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642054984, 'comment_body': '```suggestion\r\n  sunpy[map]>=3.0.0\r\n```\r\nHopefully should fix it. ', 'comment_created': datetime.datetime(2021, 5, 30, 10, 31, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642055069, 'comment_body': 'Yeah.', 'comment_created': datetime.datetime(2021, 5, 30, 10, 31, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642055998, 'comment_body': 'We leave it in for now I guess?\r\n', 'comment_created': datetime.datetime(2021, 5, 30, 10, 39, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642056498, 'comment_body': 'You can also link to the example here, getting the reference is a pain. ', 'comment_created': datetime.datetime(2021, 5, 30, 10, 43, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642120540, 'comment_body': ""No need to delete this one, but I don't think we need to bother writing changelog entries until the first release of the package."", 'comment_created': datetime.datetime(2021, 5, 30, 19, 51, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 642444335, 'comment_body': 'I think we might as well keep track of what we are adding to the package as we go and I feel like the fragments make that easy. ', 'comment_created': datetime.datetime(2021, 5, 31, 12, 15, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642445268, 'comment_body': 'Should we not skip this example until we work around the lack of a display server?', 'comment_created': datetime.datetime(2021, 5, 31, 12, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642445703, 'comment_body': '```suggestion\r\n# We will firstly use an AIA 193 image from the sunpy sample data as the base image.\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 12, 18, 19, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642445908, 'comment_body': '```suggestion\r\n# sunkit-pyvista has a built in `PyVistaPlotter` class that can be used to plot maps\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 12, 18, 39, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642446013, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 12, 18, 48, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642446578, 'comment_body': '```suggestion\r\n        m : `sunpy.map.Map`\r\n        \tThe map to use.\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 12, 19, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642446663, 'comment_body': '```suggestion\r\n        `pyvista.StructuredGrid`\r\n```', 'comment_created': datetime.datetime(2021, 5, 31, 12, 19, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642447194, 'comment_body': '```suggestion\r\n        coords : `astropy.coordinates.SkyCoord`\r\n            Coordinate frame to use.\r\n        **kwargs :\r\n            Keyword arguments are passed to `pyvista.Plotter.add_mesh`.\r\n```\r\nMaybe?', 'comment_created': datetime.datetime(2021, 5, 31, 12, 20, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642447496, 'comment_body': 'We can leave it in and not execute it right?', 'comment_created': datetime.datetime(2021, 5, 31, 12, 21, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642448975, 'comment_body': 'Coordinates including the frame? Not just the frame right?', 'comment_created': datetime.datetime(2021, 5, 31, 12, 23, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642449504, 'comment_body': 'It executes it right now. ', 'comment_created': datetime.datetime(2021, 5, 31, 12, 24, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642449743, 'comment_body': 'I am not sure I follow.', 'comment_created': datetime.datetime(2021, 5, 31, 12, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 642451021, 'comment_body': 'We pass a set of coordinates to `plot_line` so I thought coordinate frame might be misleading', 'comment_created': datetime.datetime(2021, 5, 31, 12, 27, 14, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 642469285, 'comment_body': 'Hmm, I would add what you think is best then.', 'comment_created': datetime.datetime(2021, 5, 31, 12, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}]","[{'commit_sha': '2c7f9d9d9ea4f3714e44fa9d61bda1cead3147d3', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2cdb30854865359ce39db97c0fbcf85f9a2feea6', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62c48cfa2c9a1c882c6dff31b24ec69abc5e977d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '203abe7176ce9b69aa080191a55e909c86d44cea', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd352e8928787a5bde7a3756b216f99b911067ea', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d456a599dd99a5f2558a4610f4667c0bd465077', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c5c6b02639596a19f5de3279d0d9b8b07195c8d0', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '89386a7c6a4a494f3e2ea4cb48be2733afd262f7', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8168cfccd592f9f0f85f38aafcfb96399466ae99', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c56436cdec0f1161d67134e8eb2159d4a2a4cbe5', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f42a3afe846b6b34119221914e3fe8eb82abcfe', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dea7d273a07a9eac397d45f6d4c578055d8318bf', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '108f58ee6c0aecc9266f826515386e2b5c91748b', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f606f961109c1f257965e406928cb1427618c80', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '842c36023992e94950ec6496555de4f50fac4115', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82a148bc7a0bdc65d0f3b85c6541c5c7e72f989d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b227028d594d47db9988f65943d890e8d4005feb', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f078ac9008519aaadd05acfa6e32aa249c714f0f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '26a86306f9d2451addbaca57532eeb41bb954eb2', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '01503849b81c4ad4b32aead298bea37a258d9bf8', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ff86b4c39168fda571c3b1a32e29b797ecee043', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf6867c1b49cdc76216b860c7c5b0669446c5e28', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54caecb02dc8bf5d0ea1a265ea54bce6245df216', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4fca2427d1cf4c14bb7a32cdb8a9d8bf411307be', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8517a3c83dec3af123f88801befca0db56d458d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e626198ed6c6b0ad4a1ec052e2c18d9fc03e4aab', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a0a6b11c693a46b4e9955d5f606cebf50de14be', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b21a08d5e246f1463368dfd4c0a92d39fcafea74', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b310f0fcbc554a1da5851ee0d87622ab8b159c3', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19cde24bc67b8ade443b62748d5b6de9b2059598', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b1edca73e7e6a11d2ffc73118b82506e876856d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
661913930,Allows rotation and setting of initial camera coordinates.,"The added methods 
```py
def set_camera_coordinates(self, coord)
```
Takes a SkyCoord and sets the camera's coordinates with the specified coordinate frame, should we also allow for a separate frame to be passed here instead of converting it to the default one?
```py
def rotate_camera(self, angle: u.deg = None)
```
Takes a Quantity and rotates the camera relative to that particular frame. i.e. the rotation for each frame is already defined so this just adds to that rotation value.

For example :
```py
camera_position = SkyCoord(0*u.deg, 0*u.deg, 8*const.R_sun, obstime=m.observer_coordinate.obstime, frame=frames.HeliographicStonyhurst)
plotter.set_camera_coordinates(camera_position)

# Rotate the camera by a given angle
plotter.rotate_camera(90*u.deg)
```
`HeliographicStonyhurst` has a default roll (plotter.camera.roll) value of `90` so `plotter.rotate_camera(90*u.deg)` would just add 90, thereby rotating by 180 and producing the image below (rotated 90 deg clockwise against the user's perspective, I'm not sure if we want to rotate from the user's perspective or against):
![image](https://user-images.githubusercontent.com/50923538/120834092-345e1980-c580-11eb-9148-67232aac3a31.png)

Pyvista already has a `plotter.camera.roll` to specify a particular angle if required and we can point to their docs or we can have a separate method that sets rotation to a particular value instead of adding to it.

",True,10,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/10,https://github.com/sunpy/sunkit-pyvista/pull/10,closed,38,5,3,18,7,20,0,0,[],2021-06-04 16:33:10+00:00,2021-06-10 09:59:23+00:00,494773.0,"5 days, 17:26:13","[{'comment_id': 645727481, 'comment_body': 'Will this need a u.quantity decorator to ensure the unit type? ', 'comment_created': datetime.datetime(2021, 6, 4, 17, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 645727653, 'comment_body': 'I assume these were used for debugging?', 'comment_created': datetime.datetime(2021, 6, 4, 17, 9, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 645960609, 'comment_body': 'Ah yes, sorry\r\n', 'comment_created': datetime.datetime(2021, 6, 5, 8, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 645960635, 'comment_body': 'Oh yeah I suppose.', 'comment_created': datetime.datetime(2021, 6, 5, 8, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646122431, 'comment_body': ""Could we change this to `m.observer_coordinate` instead? It's simpler, and I think a common use case."", 'comment_created': datetime.datetime(2021, 6, 6, 12, 0, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646122617, 'comment_body': ""What's the motivation behind this? I think it might be better to not show the axes, but open to reasons why we should keep them."", 'comment_created': datetime.datetime(2021, 6, 6, 12, 1, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646122847, 'comment_body': 'I think it would be better to make this a method that sets the camera rotation, instead of adding (or subtracting) a given amount of rotation. This way the rotation is always relative to the solar north pole when specified. Thoughts?', 'comment_created': datetime.datetime(2021, 6, 6, 12, 3, 27, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646122866, 'comment_body': ""What's this for?"", 'comment_created': datetime.datetime(2021, 6, 6, 12, 3, 40, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646128441, 'comment_body': 'I was using it for displaying the plots and trying to figure out how the rotation works, we can get rid of them', 'comment_created': datetime.datetime(2021, 6, 6, 12, 49, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646128587, 'comment_body': ""Yes, that was what I initially thought of, but looking the comment I made above, the default map produces a plot like :\r\n![image](https://user-images.githubusercontent.com/50923538/120924950-c885c900-c6c5-11eb-8588-621617f3c0d5.png)\r\nSo this is 0 deg and rotation would be with respect to this with any specified value right?\r\n-45 deg is :\r\n![image](https://user-images.githubusercontent.com/50923538/120930408-bc702a80-c70a-11eb-9a7d-8a6503d228fa.png)\r\nI guess we leave it as it is, for now the map rotation is set in such a way that the north pole is pointing up but the user will have to be aware of this, as the produced plot isn't 0 deg and any rotation value specified should be relative to 0 deg and not the plot that is shown with rotation.\r\n\r\n"", 'comment_created': datetime.datetime(2021, 6, 6, 12, 50, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646128697, 'comment_body': ""This doesn't do anything, I needed some input on how we position the camera first so I left this in for now"", 'comment_created': datetime.datetime(2021, 6, 6, 12, 51, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646128936, 'comment_body': ""I'm still a bit confused on how we set the inital plot, whether we leave it in it's rotated position or forcefully set `roll` to a particular value to make the plot upright?"", 'comment_created': datetime.datetime(2021, 6, 6, 12, 53, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646131403, 'comment_body': 'I think we should set `roll` to the correct value to make sure the solar north pole is pointing up.', 'comment_created': datetime.datetime(2021, 6, 6, 13, 13, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646147104, 'comment_body': '![image](https://user-images.githubusercontent.com/50923538/120929849-51255900-c708-11eb-8e85-7a57a0c4361e.png)\r\nThat produces a plot really far away, is this the right behaviour?', 'comment_created': datetime.datetime(2021, 6, 6, 15, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646467250, 'comment_body': 'Yes, this looks right, since the default view angle (the width of the camera) is 30 degrees - https://docs.pyvista.org/core/camera.html#pyvista.Camera.view_angle. We should add a `view_angle` property to our `Plotter` that accepts a `u.deg` quantity as input, and sets the `view_angle` property on the pyvista plotter. Then it can be set to a smaller value to ""zoom in"" to the image. But we can do all this in the next PR.', 'comment_created': datetime.datetime(2021, 6, 7, 10, 33, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646469720, 'comment_body': 'I think what we should do here is\r\n- Specify that the input to our `rotate_camera` method is relative to the solar north pole.\r\n- Internally subtract 90 degrees from the value given to set the `plotter.camera.roll` property correctly\r\n- Call this method as `self.rotate_camer(0*u.deg)` in the plotter `__init__` to set the default starting camera position to solar north up\r\n\r\nI think we should also rename `rotate_camera` to `set_camera_rotation`.', 'comment_created': datetime.datetime(2021, 6, 7, 10, 37, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646739114, 'comment_body': ""Sure, that's what I assumed we'd do but the issue with that is the fact that different coordinate frames have different initial value set right? So, if we're rotating relative to the solar north pole, we'd just have to add to the current rotation because it's always pointing up anyway, thoughts?\r\n\r\nSure, I'll rename the method"", 'comment_created': datetime.datetime(2021, 6, 7, 16, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 646743335, 'comment_body': ""Ah, I forgot that the plotter could have different coordinate systems set. In that case the rotation should be relative to the z-axis of the coordinate system, which for the default coordinate frame is the solar north pole. I don't think this means that we want to be adding to the rotation each time though."", 'comment_created': datetime.datetime(2021, 6, 7, 16, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 646745102, 'comment_body': ""I'll play around with this a bit tonight and see what the results are. I didn't find rotation wrt a single axes in the docs. I'll update this PR in a bit, thanks for the help :)"", 'comment_created': datetime.datetime(2021, 6, 7, 16, 18, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 647592911, 'comment_body': ""Ah, okay. I'll adjust that later then\r\nWouldn't view angle translate to the zoom value?\r\n`view_angle` can't be set according to pyvista but zoom can though"", 'comment_created': datetime.datetime(2021, 6, 8, 16, 11, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': '729304da97001fa3c2087c8f15d384eafd7d5eb9', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f7f35a75bfa42732731b58ecbee653f2043cca8', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd56db7d8de073c668bae3e79934c705dc9405201', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47ae93a41563f9ec742ff221e584c4d3becdf629', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8559baf7cc642faf7500e30e4813ab13c24d081a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '370668ff576303327251606b6e9a95ddfae6200a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd101236985b72f625d4df016261ae081203dff3a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e87218debb95f41a8a93a57e068fa098089b9e6', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '450cd1630c199b00d16543e870e0c330adcc0345', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4cb8957b077f8987223220678bfc242a7081e599', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54e08c943d8b2ce1db350321b4212e57c2420235', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49a660ae95a09c5ba652b2e29505d8e0bc738fe4', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6ae54687e03e1d94463f08df1167dc9dd1ddf16c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f6bc6f283ec3b6677c9336e868b1ddf18713dce', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6a748f63b3c1e4395902a7bcf4f01a5a63a9870', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '726179ae789d172d0cc04c5868ab7200433a9aba', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a6d3358c7fa6821fefbf60dd41e2ed29aea01338', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ce12961e1022783614cdc15f4791355eb929f762', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
666689951,Adds ability to plot Pfsspy field lines,"A rough draft on adding functionality to plot field lines.
Most of the field creation of the lon, lat and and radius values are done in the example file and I'm not sure this is how we want it structured here.
Should we allow `plot_field_lines` method to accept Skycoord only as an argument and directly plot the field lines instead of creating the Skycoord with the `lon`, `lat` and `r` values being passed to SkyCood?

- [x] Specifying colors to the mesh",True,12,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/12,https://github.com/sunpy/sunkit-pyvista/pull/12,closed,81,0,4,16,3,15,0,0,[],2021-06-10 09:15:49+00:00,2021-06-12 11:14:49+00:00,179940.0,"2 days, 1:59:00","[{'comment_id': 649030318, 'comment_body': 'These all need descriptions. ', 'comment_created': datetime.datetime(2021, 6, 10, 9, 49, 12, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 649038075, 'comment_body': '```suggestion\r\nsunkit-pyvista and can also be used to plot field lines from `pfsspy`.\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 9, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649038164, 'comment_body': '```suggestion\r\nPlotting Field Lines from pfsspy\r\n```', 'comment_created': datetime.datetime(2021, 6, 10, 9, 59, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649039184, 'comment_body': 'This will be an issue if the AIA map and the GONG map were not taken at the same time. I will see if I can add a GONG map to the pfsspy sample data that is taken at the same observation date as the AIA map. Lets not block this PR on this point, but we should fix it before releasing the package!', 'comment_created': datetime.datetime(2021, 6, 10, 10, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649040354, 'comment_body': ""These lines should all go in the example script, and the `plot_field_lines` method should just take `field_lines` and `**kwargs` as input. That way, the user has access to the PFSS solution if they want to trace different lines through it or do other things that aren't plotting the lines."", 'comment_created': datetime.datetime(2021, 6, 10, 10, 2, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649040883, 'comment_body': ""Hmm, do you need to do `.ravel()` here? It should work without, but if it doesn't you have probably found a pfsspy bug."", 'comment_created': datetime.datetime(2021, 6, 10, 10, 3, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649041193, 'comment_body': ""Hmm, do you need to do `.ravel()` here? It should work without, but if it doesn't you have probably found a pfsspy bug."", 'comment_created': datetime.datetime(2021, 6, 10, 10, 4, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649041805, 'comment_body': ""I think you are going to want to add each field line as a separate mesh, because otherwise you will get lines drawn between the end of one field line and the start of the next. Perhaps I'm wrong though?"", 'comment_created': datetime.datetime(2021, 6, 10, 10, 5, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 649058834, 'comment_body': ""Yeah, these args are from pfsspy so I've left them as is for now, I'll understand them better and write their descriptions\r\n"", 'comment_created': datetime.datetime(2021, 6, 10, 10, 30, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 649059100, 'comment_body': 'Oh okay, yes\r\n', 'comment_created': datetime.datetime(2021, 6, 10, 10, 31, 22, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 649061325, 'comment_body': ""yeah this makes more sense, I'll update the PR"", 'comment_created': datetime.datetime(2021, 6, 10, 10, 34, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 649062238, 'comment_body': ""ravel wasn't needed, I'll update this."", 'comment_created': datetime.datetime(2021, 6, 10, 10, 36, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 649062376, 'comment_body': 'Ah yeah, I made this change locally, I forgot to commit sorry', 'comment_created': datetime.datetime(2021, 6, 10, 10, 36, 40, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 649894133, 'comment_body': '```suggestion\r\nsunkit-pyvista can be used to plot field lines from `pfsspy`.\r\n```', 'comment_created': datetime.datetime(2021, 6, 11, 11, 11, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 649894409, 'comment_body': '```suggestion\r\n            Field lines to be plotted.\r\n```', 'comment_created': datetime.datetime(2021, 6, 11, 11, 11, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}]","[{'commit_sha': '60f6cb52c06ef2b59f716a1846b32ffc3d85a4d1', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8f8e6232b6fcb5076f8fba06ed36f42637dc5d81', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e40977c9e6faa7ea47a58abb184e9d2d98d10c83', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e648ab422ea258e583f8029b554e4851783cd3f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67dba43abddd4a6b8e7eeaa27a8bd643db6d6f51', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b76d0b2b0701748272e245c87c04ac8c2a9a88c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f0202c3331d0c8045282afe0f771b4448560c61', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1b563da743da7a16e1e008c99effe7106767134', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a98b05f9ba074ee4a1fb128d7f98a828c764610d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '667f4176d553962eb3161eae9843b00964850315', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c47e9d361f59ddf0a6e1a50cbc4593cc174991f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '418dd095443de5725c3ab9bb2a1cf4436026d959', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e6968aaf113125880dadf73a5d9dd553e2b7489', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b65f5bda9e7556775c75c9548ec9acc54386061', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13e821d4cb13ce88fd09b906ae15c5e304443f90', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fd9de8c6825155278e95fc99ce658dc34e151ec', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
668942210,Adds draw_quadrangle method,"Adds `draw_quadrangle` from sunpy. I've taken the docstring from sunpy itself as it doesn't change here.
I don't think we need to worry about the `kwargs` which are passed to astropy's `Quadrangle` do we?
If yes, then we need to have a separate `quad_kwargs` or something.

![image](https://user-images.githubusercontent.com/50923538/121787955-fcda1780-cbe6-11eb-807a-2af248f40b8d.png)
",True,17,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/17,https://github.com/sunpy/sunkit-pyvista/pull/17,closed,44,0,3,12,3,4,0,0,[],2021-06-12 19:51:41+00:00,2021-06-23 14:03:45+00:00,929524.0,"10 days, 18:12:04","[{'comment_id': 656118892, 'comment_body': 'This is not ideal, as we don\'t want to have a map as an input argument. I propose that instead we just copy the logic from `draw_quadrangle` directly into this function to get the patch:\r\n```python\r\nbottom_left, top_right = get_rectangle_coordinates(\r\n            bottom_left, top_right=top_right, width=width, height=height)\r\n\r\n        width = Longitude(top_right.spherical.lon - bottom_left.spherical.lon)\r\n        height = top_right.spherical.lat - bottom_left.spherical.lat\r\n\r\n        kwergs = {\r\n            ""transform"": axes.get_transform(bottom_left.frame.replicate_without_data()),\r\n            ""edgecolor"": ""white"",\r\n            ""fill"": False,\r\n        }\r\n        kwergs.update(kwargs)\r\n        quad = Quadrangle(self._get_lon_lat(bottom_left), width, height, **kwergs)\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 11, 14, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 656132370, 'comment_body': 'We would need to have `get_rectangle_coordinages()`and `Quadrangle`  imported then right?\r\nAlso, `self` is a reference to a map object, how do we handle that?', 'comment_created': datetime.datetime(2021, 6, 22, 11, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 656137992, 'comment_body': 'Yep, we would need those imports. For _get_lon_lat, I think you can replace it with\r\n```python\r\nbottom_left = bottom_left.spherical\r\nquad = Quadrangle((bottom_left.lon, bottom_left.lat), width, height, **kwergs)\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 11, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 656139597, 'comment_body': 'Sure, thanks!', 'comment_created': datetime.datetime(2021, 6, 22, 11, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': '633ab2ca667a14b274526dab54b110b1e6408f14', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2f5fac71df8811413677799e83196879b3a2fe01', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '703f57897f7a702eae47931c1aa0aac9b417a73f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '787bf2ee4fb9ffa76f926fef7f521b04be0617fa', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ee79a96915e96526438b923ceac71e3e8548202a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '94a83e1b66e85a4218b9def0a0497579bc23ba0c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '32c00af7f99011718972d5ae97d1380ad30cbe5d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3f8580ff59f08f090ec4244a7e3ed76c6a795242', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e522d1d23d98b5fb29b38e426239012d0ca8c4c8', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0a49e21cfbc6be0b3667e7c7a8ecab4eca402bc', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53bec48c26215832d6d91c50c1236093438c1678', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd12b92fc84ca303a767f512c8f39b99f77d7e2ea', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
674733931,Adds basic tests for all main meshes.,"Fixes #22 

Tests that increase the codecov of the project, we still need to decide how to test meshes. 
As of now, I'm testing each individual mesh with it's `n_cells` and `n_points` value.

- [ ] Test for Pfsspy field lines
Based on how #21 goes, we need to decide whether to access each field line separately as they are added together and there isn't any way to get all the field lines and check their number of cells/points.",True,23,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/23,https://github.com/sunpy/sunkit-pyvista/pull/23,closed,68,3,2,6,4,2,0,0,[],2021-06-21 17:12:06+00:00,2021-06-23 13:33:52+00:00,159706.0,"1 day, 20:21:46","[{'comment_id': 655570225, 'comment_body': 'What was the reason for this change?', 'comment_created': datetime.datetime(2021, 6, 21, 17, 21, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 655572042, 'comment_body': ""My bad, that wasn't supposed to be a thing. I did that to demonstrate how a plot without cmap would look."", 'comment_created': datetime.datetime(2021, 6, 21, 17, 24, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': '0b9dbd0a98ba2c3e33640a12a757958645169e44', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '87d4bb5ee81b5ec63d01be20222643c6142fbeec', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd585b4fcaeb2eb68f771fb51efb54c3ab8653e21', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '390d1e4608a0c67169513ac6fdf898a0b025c983', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58a9a15ca113065f5699342fbaede2bf1facc38a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0e13f7b8a93ed9a2fbca56d9597b61c836d672c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
676391435,Adds a MultiBlock to store each plotted mesh.,"MultiBlocks work as an array of meshes.
Field lines are added into a separate MultiBlock which is then added to the MultiBlock of the plot.
We need to find a way to refer to each mesh other than it's position in the MultiBlock, but I think that can be done later?",True,24,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/24,https://github.com/sunpy/sunkit-pyvista/pull/24,closed,66,11,3,12,5,22,0,0,[],2021-06-23 15:20:25+00:00,2021-07-05 16:51:28+00:00,1042263.0,"12 days, 1:31:03","[{'comment_id': 663033476, 'comment_body': 'Codecov says this is missing?', 'comment_created': datetime.datetime(2021, 7, 2, 13, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663043542, 'comment_body': ""I haven't added tests for this yet, I'll add the test in on a separate PR along with other missing tests as mentioned in #33 "", 'comment_created': datetime.datetime(2021, 7, 2, 14, 12, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 663045250, 'comment_body': 'Why not just add them here?', 'comment_created': datetime.datetime(2021, 7, 2, 14, 15, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663046276, 'comment_body': ""I thought adding tests for a separate function unrelated to this PR would be irrelevant. If that's no issue with you then I shall add em here"", 'comment_created': datetime.datetime(2021, 7, 2, 14, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 663340735, 'comment_body': ""I don't see the issue with adding them here."", 'comment_created': datetime.datetime(2021, 7, 3, 9, 7, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663340931, 'comment_body': ""I've added them here"", 'comment_created': datetime.datetime(2021, 7, 3, 9, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 663341629, 'comment_body': 'Whats the endgoal of storing them twice?', 'comment_created': datetime.datetime(2021, 7, 3, 9, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663454555, 'comment_body': ""`multiblock`  allows us to combine all the plots into a single block whereas `all_meshes` just holds a reference to the meshes in a dictionary.\r\nmultiblock can handle dictionaries but when a list of dictionaries is passed to it, it won't work.\r\n```py\r\nall_meshes = {\r\n    'map' : [Polydata, Polydata],\r\n    'solar_axis' : [Ploydata]\r\n}\r\n``` \r\nwon't work, but : \r\n```py\r\nall_meshes = {\r\n   'map' : Polydata,\r\n  'solar_axis' : Polydata,\r\n}\r\n``` \r\nwill work if passed to `Multiblock()`\r\nSo I thought the best way was to have a separate multiblock.\r\n\r\nAnother way this could be done by just using a single method would be having a separate method to loop through the dictionary and add the individual meshes to the `Multiblock`, would that be better?"", 'comment_created': datetime.datetime(2021, 7, 4, 6, 31, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 663460859, 'comment_body': 'I was wondering what this would do to the memory usage to store the meshes twice, over just using the dict we have stored to pass that back into a multiblock when we needed it?', 'comment_created': datetime.datetime(2021, 7, 4, 7, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663461238, 'comment_body': 'Yeah, the latter approach seems better but we would need a separate method to flatten all `values` of the dictionary to a single list before being passed to `MultiBlock`, shall I go ahead with that?', 'comment_created': datetime.datetime(2021, 7, 4, 7, 34, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 663467932, 'comment_body': 'Sure.', 'comment_created': datetime.datetime(2021, 7, 4, 8, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663935199, 'comment_body': ""```suggestion\r\n        self._add_mesh_to_dict(block_name='maps', mesh=map_mesh)\r\n```"", 'comment_created': datetime.datetime(2021, 7, 5, 13, 32, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 663935322, 'comment_body': ""```suggestion\r\n        self._add_mesh_to_dict(block_name='quadrangles', mesh=quad_mesh)\r\n```"", 'comment_created': datetime.datetime(2021, 7, 5, 13, 33, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 663944934, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 13, 47, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663945104, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 13, 47, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663945154, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 13, 47, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663945242, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 13, 47, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663987275, 'comment_body': '```suggestion\r\n                      pv.core.composite.MultiBlock)\r\n```\r\nShould fix the tests', 'comment_created': datetime.datetime(2021, 7, 5, 14, 50, 6, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 663999609, 'comment_body': 'I was wondering if using a default dict with a list would make this simpler. But maybe its overkill.\r\n\r\nEven a named tuple?', 'comment_created': datetime.datetime(2021, 7, 5, 15, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 664013720, 'comment_body': 'Ah, my bad, sorry', 'comment_created': datetime.datetime(2021, 7, 5, 15, 33, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 664014161, 'comment_body': ""I thought of that too, but default dict wasn't really used anywhere in sunpy as well so I thought it wasn't required, maybe an upgrade later on?"", 'comment_created': datetime.datetime(2021, 7, 5, 15, 33, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 664018472, 'comment_body': 'Sure.', 'comment_created': datetime.datetime(2021, 7, 5, 15, 41, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}]","[{'commit_sha': 'f5791e19ed626d5928a706db539fa3c9db1f16b5', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fe4bb8ed4e3f0461894ecd83ad12f3233fdfdc8c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7fe1bace01d13dba93b0deea1cdf18f006b0a30', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35be6261998b60619b785d3a8f130a5341cee8a7', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b2845bf983908816f9f88c8d3fb7cfe3280af337', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bad892300fc2221b8d2c20a04a2b61717dd12a0', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '245973a024e73783f5bcbfde3a437c294defda7e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8b68cabd614db75063495319eb647490ffe978eb', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4295b38747392cd4f8e04c986d97cd317bb76b24', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34084fb85b902a2ad3dca8cba46805fbdd69db1c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd45fd7f0dc12e10c63e43650f9802b66af03b0db', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8470b7ac65a971a142a6e18ad6ed211bbec9965', 'committer_username': 'nabobalis', 'committer_name': 'Nabil Freij', 'committer_email': 'nabil.freij@gmail.com', 'commit_date': datetime.datetime(2012, 1, 30, 17, 52, 11, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
678245502,Adds clipping of data via clip_interval argument,"Similar to how it's done in sunpy, `plot_map()` accepts `clip_interval` as an argument :
```py
plotter.plot_map(m, clip_interval=(1, 99)*u.percent)
```
The above plot produces : 
![image](https://user-images.githubusercontent.com/50923538/123496426-a12b7780-d645-11eb-9cfb-8f2a03163fde.png)
as opposed to no clip interval : 
![image](https://user-images.githubusercontent.com/50923538/123496442-baccbf00-d645-11eb-8233-b8d6d6a6e714.png)

`vmin` and `vmax` is calculated based on the normalized mesh data, should we also allow accepting of `vmin` and `vmax` as separate arguments?",True,26,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/26,https://github.com/sunpy/sunkit-pyvista/pull/26,closed,45,3,4,9,7,4,0,0,[],2021-06-26 00:45:25+00:00,2021-07-01 13:43:51+00:00,478706.0,"5 days, 12:58:26","[{'comment_id': 661636650, 'comment_body': 'The new argument needs documenting below in the docstring.', 'comment_created': datetime.datetime(2021, 6, 30, 16, 29, 53, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 662120384, 'comment_body': ""Codecov says this line isn't covered?"", 'comment_created': datetime.datetime(2021, 7, 1, 9, 11, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662120419, 'comment_body': ""Codecov says this line isn't covered?"", 'comment_created': datetime.datetime(2021, 7, 1, 9, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662130987, 'comment_body': ""Ah, I forgot to add this in. I'll fix it"", 'comment_created': datetime.datetime(2021, 7, 1, 9, 25, 28, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': '6c363c18f3f87f587b310965ce99122c753ad01a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42c9a58183da3cd337cdff84b5a34672671b142f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a482c1a9665ce0524a7c2f16e24a5238a9dbdf1c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c890db9463e54ea9b853c00dab0ae0166667db51', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99614a159ae03448e18570a52da467e0d8a73a9e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d50967e464cbd123a3f4b6faad2983a9591a8ce', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c51b6d7098718ddb513a4ddd79c23d1b49eb8226', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dd567b545673ffc7d2df9f8b01815f33da7d415d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f3aa9e6ccdb1218f4f98edc20de52740daf16b1', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
679220269,plot_line() to plot a small sphere if a single coordinate is passed,"- `plot_line()` is changed to `plot_coordinates()`
- If the user passes a single coordinate, the plot produced is a small sphere (0.05 times `R_sun`)

![image](https://user-images.githubusercontent.com/50923538/123676105-22ab2180-d861-11eb-8d4c-242006d6e3a5.png)

- [ ] Tests are to be added
- [ ] Example to be re-written to plot on the brightest coordinate?",True,29,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/29,https://github.com/sunpy/sunkit-pyvista/pull/29,closed,43,9,4,9,5,3,0,0,[],2021-06-28 17:05:57+00:00,2021-07-01 11:59:22+00:00,240805.0,"2 days, 18:53:25","[{'comment_id': 661836957, 'comment_body': '```suggestion\r\nwhich also allows for a sphere with given ``radius`` to be plotted if a single coordinate is passed to it.\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 21, 55, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 661837201, 'comment_body': '```suggestion\r\n        radius : `int`, optional\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 21, 56, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 661837268, 'comment_body': '```suggestion\r\n\r\n        Notes\r\n```', 'comment_created': datetime.datetime(2021, 6, 30, 21, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}]","[{'commit_sha': '975fdd466563a347a3cd7dc0ec6858fe42c56de4', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b70a2c02e5cd68b397424da453d7fdbb794a0fc', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6e20798837d377bc4f634e9e498bbe39fa38c81', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e117d2ea7a78c729253c5ded67df0b45462d763f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66880954d073af338eca85c6a392bfbde501ff11', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1751c94c0e2e472ae5503fe3550b058f7b003836', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3aa7cda4af9f40fd250d8acaacd4eacd42b4489b', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2ac8113fe6ec88bf83572094b09220643731009', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '189a9ef9f8bcf4bac60c09bf02b687e58dc5d170', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
680124778,Rearranged examples with the current functionality,"Both 
- [x] #26 
- [x] #29 

need to be merged first and then a rebase.

![image](https://user-images.githubusercontent.com/50923538/123823870-2f8c4b80-d91b-11eb-82c8-c349929e185d.png)",True,30,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/30,https://github.com/sunpy/sunkit-pyvista/pull/30,closed,59,20,3,15,0,14,0,0,[],2021-06-29 15:23:21+00:00,2021-07-04 07:29:54+00:00,403593.0,"4 days, 16:06:33","[{'comment_id': 662525126, 'comment_body': '```suggestion\r\nAdded an example which deals with overplotting of the brightest pixel with :meth:`~sunkit_pyvista.plotter.SunpyPlotter.plot_coordinates`.\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 18, 57, 55, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662525389, 'comment_body': 'Was this meant to be a new example? ', 'comment_created': datetime.datetime(2021, 7, 1, 18, 58, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662533881, 'comment_body': 'Yeah, I thought this would be better as a separate example.\r\nI have to update this, sorry I thought I did', 'comment_created': datetime.datetime(2021, 7, 1, 19, 14, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 662534623, 'comment_body': ""I don't think there is enough different here to warrant a new example? "", 'comment_created': datetime.datetime(2021, 7, 1, 19, 16, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662618687, 'comment_body': '```suggestion\r\n###############################################################################\r\n# We can also plot an arbitrary point by passing a single coordinate to\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 22, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662618739, 'comment_body': '```suggestion\r\nsunkit-pyvista also extends features from `sunpy`, producing them in 3D.\r\n```\r\nWhat features?', 'comment_created': datetime.datetime(2021, 7, 1, 22, 6, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662619587, 'comment_body': '```suggestion\r\n###############################################################################\r\n# Start by creating a plotter\r\n```', 'comment_created': datetime.datetime(2021, 7, 1, 22, 8, 11, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 662714425, 'comment_body': 'The examples listed out here? Should they be called something else?', 'comment_created': datetime.datetime(2021, 7, 2, 3, 36, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 662823652, 'comment_body': 'It needs to explain what these features are. ', 'comment_created': datetime.datetime(2021, 7, 2, 8, 8, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663028082, 'comment_body': 'Can we link these?', 'comment_created': datetime.datetime(2021, 7, 2, 13, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663028193, 'comment_body': 'I think this title needs changing.', 'comment_created': datetime.datetime(2021, 7, 2, 13, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663325474, 'comment_body': 'Does ""Extending functionality from sunpy"" sound better?', 'comment_created': datetime.datetime(2021, 7, 3, 6, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 663341999, 'comment_body': 'Yeah that works.', 'comment_created': datetime.datetime(2021, 7, 3, 9, 20, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 663455566, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2021, 7, 4, 6, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': 'ee424da691ec01a5cb271e28ada44848b3ec55ff', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eb2517c576d434b28e2663405a7e33fc2e0dd205', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ceb65b13a80328dab0d287fdc0c4c43f2574e3c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ede4dcb02a281f2c0b7f11d17330b97ec32d5b5', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df08876161600a0a21066187a2eec04d415ad0e3', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '564cab190fe1610e78eb3aff716e1dd76741918c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49fd0c2bad6a96c3f380cede0254df617618f6b1', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0454ede9a953dd0f2d6872151668922662943033', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0615cedfc404e50a86839077e42911a3ac194ff1', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03ae1234cffe3beb4ec5006122599524bf637e4', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5cf02470a56dae2574988e54d017570e983e8f24', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca59ed8460f27bb69f829820cae8a0aa003cf767', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5d15b667add30a23bf08a3c944d23dec214fa1e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a683f72b8d88768e9df6963d3dbabc94f9166e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '910770a5bf9c6007797b7b06ee07f2abbdbd16da', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
684575626,Allows for saving and loading a plot,"Allows to save a plot as a vtm extension.
`field_arrays` can be added to a mesh https://docs.pyvista.org/core/objects.html#pyvista.DataObject.field_arrays
We can insert the color of each mesh as a `field_array` in each mesh, so when we load an image we could read from the `MulitBlock` and plot the color of each mesh that is saved.

- [x] Tests to be added
- [x] Load method to be added

",True,37,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/37,https://github.com/sunpy/sunkit-pyvista/pull/37,closed,103,2,3,17,1,34,0,0,[],2021-07-06 18:04:42+00:00,2021-07-14 09:34:46+00:00,660604.0,"7 days, 15:30:04","[{'comment_id': 664780321, 'comment_body': 'Why would we want to append this if we want to save it?', 'comment_created': datetime.datetime(2021, 7, 6, 18, 18, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 664838913, 'comment_body': 'because we can only save a single multiblock right?', 'comment_created': datetime.datetime(2021, 7, 6, 19, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 664841329, 'comment_body': 'My question is why does it need to be a class attribute?', 'comment_created': datetime.datetime(2021, 7, 6, 20, 0, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 664846276, 'comment_body': ""Ah yeah, it doesn't have to be actually, my bad. I'll change that"", 'comment_created': datetime.datetime(2021, 7, 6, 20, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 665764874, 'comment_body': ""This seems to have an issue with windows, I'll have to investigate further"", 'comment_created': datetime.datetime(2021, 7, 7, 23, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 666469142, 'comment_body': 'What caused the number change?', 'comment_created': datetime.datetime(2021, 7, 8, 19, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 666469437, 'comment_body': 'What does setting the default to nan do? ', 'comment_created': datetime.datetime(2021, 7, 8, 19, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 666469727, 'comment_body': 'Is it not fine if the directory already exists? ', 'comment_created': datetime.datetime(2021, 7, 8, 19, 40, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 666469994, 'comment_body': 'I am not a fan of doing this recursively ', 'comment_created': datetime.datetime(2021, 7, 8, 19, 41, 1, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 666470298, 'comment_body': '```suggestion\r\n        Loads the saved meshes into a `pyvsita.Plotter`.\r\n```', 'comment_created': datetime.datetime(2021, 7, 8, 19, 41, 31, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 666484982, 'comment_body': ""For now, we have a multiblock of multiblocks (containing meshes) for the field lines from pfsspy, the max depth is 2 for field lines but maybe we might have more depth later? I'm not so sure, recursion seemed the best way to do this without knowing the depth. What would you reckon I change it to?"", 'comment_created': datetime.datetime(2021, 7, 8, 20, 7, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 666486034, 'comment_body': ""It would store the meshes in that directory, suppose the user specified data.vtm and has a directory called `data` in that path, the individual meshes are stored inside the directory, isn't that not what we want?"", 'comment_created': datetime.datetime(2021, 7, 8, 20, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 666486911, 'comment_body': ""`field_arrays` are converted to numpy float and `None` isn't converted but stored as a string `'None'`, I thought nan would be better indicating it has no color"", 'comment_created': datetime.datetime(2021, 7, 8, 20, 10, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 666488499, 'comment_body': 'Ah, in `plot_quadrangle` I was adding the meshes directly after converting it to a numpy array, although this is fine because it is internally converted to a mesh, we needed to add a field array. Like in plot_map, the numpy array is converted to a `StructuredGrid` as a field array can be added, this caused a change in the number of cells.', 'comment_created': datetime.datetime(2021, 7, 8, 20, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 666870246, 'comment_body': 'But what if they want to save it in a pre-existing directory? ', 'comment_created': datetime.datetime(2021, 7, 9, 11, 11, 4, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 666893955, 'comment_body': ""The method saves both the miltiblock as a vtm file and the individual meshes of the same name as that of the vtk file in the specified filepath.\r\nFor example, filepath = mapdata.vtm\r\nThere's a vtm file named mapdata.vtm and a directory named mapdata with the individual meshes. Now if the user already has a directory named mapdata in the specified filepath, the individual meshes (vtp extension I guess) would be stored in that directory instead"", 'comment_created': datetime.datetime(2021, 7, 9, 11, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667515476, 'comment_body': 'Would an argument similar to overwrite where it save in specified directory be useful?', 'comment_created': datetime.datetime(2021, 7, 11, 17, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667521091, 'comment_body': 'Sure.', 'comment_created': datetime.datetime(2021, 7, 11, 18, 47, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 667782426, 'comment_body': '```suggestion\r\n        directory_path = file_path.parent\r\n```\r\nThis is a slightly clearer way to get the directory', 'comment_created': datetime.datetime(2021, 7, 12, 9, 42, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 667782921, 'comment_body': 'Do we need to check if the file (as well as the directory) exists too?', 'comment_created': datetime.datetime(2021, 7, 12, 9, 42, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 667783725, 'comment_body': ""```suggestion\r\n        Loads the saved meshes into this plotter.\r\n```\r\nJust to make it clear that we're not making a new plotter."", 'comment_created': datetime.datetime(2021, 7, 12, 9, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 667784431, 'comment_body': ""```suggestion\r\n    with pytest.raises(ValueError, match='already exists'):\r\n```\r\nThis makes sure it's only catching an error that has 'already exists' in the error message."", 'comment_created': datetime.datetime(2021, 7, 12, 9, 45, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 667807324, 'comment_body': 'Yeah, we could specify an `overwrite` keyword to allow for overwriting an existing file and  `allow_save` for saving in an already existing directory, does that sound good?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667820095, 'comment_body': 'I think just an `overwrite` keyword would be good. Either way, you need to check if the file is present as well right?', 'comment_created': datetime.datetime(2021, 7, 12, 10, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 667821683, 'comment_body': ""@nabobalis mentioned that the user might want to save the individual meshes in an existing directory of the same name as that of the vtm file, so I thought it would make sense to have allow_save as well. That way we'd skip the check"", 'comment_created': datetime.datetime(2021, 7, 12, 10, 42, 41, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667867994, 'comment_body': 'Or should we raise a warning saying that the directory exists and the files are being stored in there when `overwrite`=True?', 'comment_created': datetime.datetime(2021, 7, 12, 12, 0, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667889919, 'comment_body': 'I dont see the need to raise a warning if they pass in overwrite to be true.', 'comment_created': datetime.datetime(2021, 7, 12, 12, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 667892137, 'comment_body': ""But it's not really being overwritten, we write to the existing directory, is that fine?"", 'comment_created': datetime.datetime(2021, 7, 12, 12, 36, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667900279, 'comment_body': '@dstansby We need the file name without extension, not the parent directory, is there a better way to do this?', 'comment_created': datetime.datetime(2021, 7, 12, 12, 48, 25, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 668072732, 'comment_body': 'To help me understand, can you give an example of what `filepath` could be, and what the resulting saved file and directory would be called?', 'comment_created': datetime.datetime(2021, 7, 12, 16, 17, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 668081639, 'comment_body': 'filepath = `/home/user/map_data.vtm`\r\nin the /home/user/ directory a `map_data.vtm` file is stored as well as a directory named `map_data` in which each individual mesh of the multiblock is stored as a `.vtp` file.\r\ndirectory_path is basically getting rid of the file extension to refer to the directory instead of the `.vtm` file\r\n', 'comment_created': datetime.datetime(2021, 7, 12, 16, 29, 26, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 668083306, 'comment_body': ""Thanks - what you've done makes sense to me now :)"", 'comment_created': datetime.datetime(2021, 7, 12, 16, 31, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 668083914, 'comment_body': 'I think we:\r\n- Should error if either the file or directory is currently present\r\n- Not support saving to an existing directory', 'comment_created': datetime.datetime(2021, 7, 12, 16, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 668089166, 'comment_body': 'Sure, I shall make this change', 'comment_created': datetime.datetime(2021, 7, 12, 16, 40, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': 'c7bfb6265b7435e4eef2b0fcf1d56a815ab4a947', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b689840acc8ab83b55eb60656cbc948dcc8c014', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6da89833ee4b0cd33e7d986e82806bf1ddee3c3', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7afe8720e43e1664b30958244995596c3d85c7ff', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea3379ef337a71ed66169d832a440153fdf9f67', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '088c9ffe56eca3c2f75102c357500fadf07bbdb5', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78ea40b5470b71955388b064f5b578a0177444d4', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c1a82995010aa4628d44bea68364c33dd302004', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80a8ed1d6650e69df280c9b3624b614bcf37212d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '025ba17cd79d14d6e633ea3d5dc3b1ecaff91eb2', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8587507bb9449b87f2117668171a16c15ac67b7b', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93b5cf3413485bc2a846d72e392bfe789073f76a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2664b4071bb80626e4dae36445fe58a7bb3cf8d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '83679cdfdb847345f84969fe2832fe93bad6fde8', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ab392d876d4c4afcd589d7183625cd7485e7e7f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc1d9aa77a98eb1b8ba593818e1d52f1a9348fec', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef61c2c4a2e0f2d9a1e6708e568d8be8cc433c62', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
687218119,Adds figure test capability,"The figure tests can be performed using `verify_cache_image()` method in test_plotting.
3 command line arguments can be passed 

- reset_image_cache : rests the image_cache directory with all the new figures
- add_image_cache : option I added to make sure we don't mistakenly add a new figure unless this is specified to be True
- ignore_image_cache : ignores the image cache, doesn't perform comparing of the images.

The comparison happens through `pyvista.compare_images()` and the a threshold is set for the allowed error
(IMAGE_REGRESSION_ERROR >= 500 and warning at >=200).
High variance tests allow for a higher threshold with IMAGE_REGRESSION_ERROR >= 1000, but we haven't used this as all of our tests fall in the normal range (probably because we're not changing lighting conditions). I've left this in as maybe some of our tests might fall in this range.

Usage -
```py
plotter.show(before_close_callback=verify_cache_image)
# plotter being PyvistaPlotter not SunpyPlotter
```",True,38,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/38,https://github.com/sunpy/sunkit-pyvista/pull/38,closed,165,1,6,9,8,36,0,0,[],2021-07-10 18:03:03+00:00,2021-07-21 08:24:28+00:00,915685.0,"10 days, 14:21:25","[{'comment_id': 667516132, 'comment_body': 'What does this do? ', 'comment_created': datetime.datetime(2021, 7, 11, 18, 3, 57, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 667516182, 'comment_body': ""Don't we want this in the conftest.py file so we can use this across the library? "", 'comment_created': datetime.datetime(2021, 7, 11, 18, 4, 21, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 667516240, 'comment_body': ""Ah sorry that's a change that has to be removed, I added this when tox wasn't considering the images in image_cache"", 'comment_created': datetime.datetime(2021, 7, 11, 18, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667516550, 'comment_body': ""the global variables won't be accessible in test_plotting then right?\r\nWe'd have to use them in every function individually"", 'comment_created': datetime.datetime(2021, 7, 11, 18, 7, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667521077, 'comment_body': 'But what if we want to have figure tests in other files? Or is the plan to only support it in this file?', 'comment_created': datetime.datetime(2021, 7, 11, 18, 46, 56, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 667550299, 'comment_body': 'We can just call that fixture there right? For now all figure tests are only local to this file', 'comment_created': datetime.datetime(2021, 7, 11, 23, 24, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 667701468, 'comment_body': 'Not sure.', 'comment_created': datetime.datetime(2021, 7, 12, 7, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 667790665, 'comment_body': ""> the global variables won't be accessible in test_plotting then right?\r\n> We'd have to use them in every function individually\r\n\r\nIf you put them in `conftest.py`, `pytest` will make them available in test files, so I think we should have a `conftest.py` file with everything from line 94 up in it."", 'comment_created': datetime.datetime(2021, 7, 12, 9, 54, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 671482201, 'comment_body': 'What was this for?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671482357, 'comment_body': ""I can't add a comment to the png above, but should that be here?"", 'comment_created': datetime.datetime(2021, 7, 16, 19, 32, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671482693, 'comment_body': ""My bad, this was to run pytest locally, this shouldn't be here."", 'comment_created': datetime.datetime(2021, 7, 16, 19, 33, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 671482906, 'comment_body': 'Ah, sorry, that too.\r\n', 'comment_created': datetime.datetime(2021, 7, 16, 19, 33, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 671486302, 'comment_body': 'Do we not want a solar image as a background for the line?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671486341, 'comment_body': 'Do we not want a solar image as a background for the axis?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 40, 47, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671486426, 'comment_body': 'Do we not want a solar image as a background for the field lines?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 41, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671486556, 'comment_body': 'I see a large blue ball, is that the point?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671486752, 'comment_body': 'Do we not want a solar image as a background for the quadrangle?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 41, 43, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671486814, 'comment_body': ""I thought we'd test each mesh separately, would it be better to have it on a map?"", 'comment_created': datetime.datetime(2021, 7, 16, 19, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 671487164, 'comment_body': 'Is it not hard to tell if the figure is correct without?', 'comment_created': datetime.datetime(2021, 7, 16, 19, 42, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671487170, 'comment_body': ""Same idea as above, I thought we'd test each mesh separately"", 'comment_created': datetime.datetime(2021, 7, 16, 19, 42, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 671488482, 'comment_body': ""Not really, I just assumed it'd be better to avoid unnecessary computation"", 'comment_created': datetime.datetime(2021, 7, 16, 19, 45, 32, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 671891449, 'comment_body': 'Should this line be on the sun or just around?', 'comment_created': datetime.datetime(2021, 7, 18, 20, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 671892294, 'comment_body': ""It is an arbitrary line, I didn't really think it had any use except to show it was possible, so I let it be. @dstansby Does the position of the line matter?"", 'comment_created': datetime.datetime(2021, 7, 18, 20, 19, 33, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 673282944, 'comment_body': 'Do we not want the map to show up with the field lines?', 'comment_created': datetime.datetime(2021, 7, 20, 16, 33, 38, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673283125, 'comment_body': '```suggestion\r\ndef test_plot_map_with_functionality(aia171_test_map, plotter, verify_cache_image):\r\n```\r\nThe figure name too.', 'comment_created': datetime.datetime(2021, 7, 20, 16, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673283685, 'comment_body': 'Of VTK? Are these used?', 'comment_created': datetime.datetime(2021, 7, 20, 16, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673290791, 'comment_body': ""Sorry I misread David's comment, I'll add that in"", 'comment_created': datetime.datetime(2021, 7, 20, 16, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 673292283, 'comment_body': ""I'm not sure I understand what you meant"", 'comment_created': datetime.datetime(2021, 7, 20, 16, 46, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 673293549, 'comment_body': 'What is this comment and the variables for? ', 'comment_created': datetime.datetime(2021, 7, 20, 16, 48, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673294127, 'comment_body': 'Might be better to increase the width of the rectangle? I can barely see it on the main image. ', 'comment_created': datetime.datetime(2021, 7, 20, 16, 49, 7, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673294378, 'comment_body': 'I think at least it being near the sun so we could zoom in a little would be nicer. ', 'comment_created': datetime.datetime(2021, 7, 20, 16, 49, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673296593, 'comment_body': 'This has to be changed based on input from #49.\r\nI shall update the figures in that PR, as altering `line_width` does result in small regression errors', 'comment_created': datetime.datetime(2021, 7, 20, 16, 51, 38, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 673298750, 'comment_body': ""When we discussed about copying the function from pyvista I decided to leave this in because we might have some tests falling in this range, I could remove it if we don't need it."", 'comment_created': datetime.datetime(2021, 7, 20, 16, 53, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 673299343, 'comment_body': 'Alright, I shall make this change.', 'comment_created': datetime.datetime(2021, 7, 20, 16, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 673301085, 'comment_body': ""If these aren't used, I don't see the need in keeping them. "", 'comment_created': datetime.datetime(2021, 7, 20, 16, 55, 25, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 673330198, 'comment_body': ""Alright, I'll make that change"", 'comment_created': datetime.datetime(2021, 7, 20, 17, 24, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': 'fbde0c0471958cac91fd1742b9fadb9ba1bededc', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '451174c70a3395750ac306e453cfb96e2d04c00a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a6588020ba2c2f86b770d5cab77c9494cf16047', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63ef8d311ac602ff9f66ab573a799600268db632', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9582535408067f97a3706b633a3de72016cc9a3a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '34c9952d7ace1181e2c927d59db30885b99e598a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbacf9d2a59d97143065634d2968900fc53a84ff', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2aa9bd564b40869f5718e1dd0299d5be059c1dc', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ee1f1886ba0be45fca7b3c1bf231540cffd05ba', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
694035504,plot_quadrangle now uses a Spline instead of StructuredGrid,"From #37 plot_quadrangle was changed to use `StructuredGrid`, but #49 revealed that this might not be visually right.
Since `Quadrangle` from astropy allows `resolution` as input the individual points on the quadrangle are thick enough and can be combined to a MultiBlock instead., which still allows us to add field arrays which was a part of the original change to use StructuredGrid in #37.",True,52,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/52,https://github.com/sunpy/sunkit-pyvista/pull/52,closed,9,6,4,5,1,0,1,0,[{'name': 'enhancement'}],2021-07-21 04:23:30+00:00,2021-07-21 12:18:08+00:00,28478.0,7:54:38,[],"[{'commit_sha': 'fdc7ce1a6c6e4946c041ccdb18049c8b6d798376', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e09b1ca98c65f5a255a1f5633cf1148ecaedb17', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c6d3e62a833a2986587fa8ed15eb1edee05ae3b', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae7f2b6672eb2f091e63d5459bf9b9cf7b643f1e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02b4c8a1b1d646c5fd77846179f7a1427b05d551', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
695882652,Example and updated tests for saving and loading,"Updates the docstring with an example for saving and loading as well as a figure test for the same.
Also fixes #54 by maintaining a dictionary of all colormaps used in sunpy and saving the name of the used colormap as a field array",True,55,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/55,https://github.com/sunpy/sunkit-pyvista/pull/55,closed,29,6,5,7,0,21,0,0,[],2021-07-23 11:48:51+00:00,2021-07-24 20:01:18+00:00,115947.0,"1 day, 8:12:27","[{'comment_id': 676025197, 'comment_body': 'What happens if we dont skip this?', 'comment_created': datetime.datetime(2021, 7, 24, 17, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676025230, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 7, 24, 17, 34, 18, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676025314, 'comment_body': 'So color could be the colormap instance it self?', 'comment_created': datetime.datetime(2021, 7, 24, 17, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676025375, 'comment_body': 'Does this also test the colormap works properly now?', 'comment_created': datetime.datetime(2021, 7, 24, 17, 35, 42, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676027204, 'comment_body': ""Nothing actually, I had a look at how I wrote the save method for mapsequence and skipped it based on the review over at sunpy. I think it would error out if we test it again because it's not using a temp dir"", 'comment_created': datetime.datetime(2021, 7, 24, 17, 55, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676027371, 'comment_body': ""No, it's saved as a string. That's why we have the inverted cmlist dictionary"", 'comment_created': datetime.datetime(2021, 7, 24, 17, 56, 47, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676027403, 'comment_body': ""Yes, I could update the test for saving to include a map, I'll add that in actually."", 'comment_created': datetime.datetime(2021, 7, 24, 17, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676027482, 'comment_body': 'So what could its type be if not a string?', 'comment_created': datetime.datetime(2021, 7, 24, 17, 58, 32, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676027855, 'comment_body': ""`np.nan` is passed if there's no colour, hence the check"", 'comment_created': datetime.datetime(2021, 7, 24, 18, 2, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676028056, 'comment_body': 'Should we just check for that instead?', 'comment_created': datetime.datetime(2021, 7, 24, 18, 5, 6, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676028191, 'comment_body': 'I did that at first, `np.isnan()` errors out if we pass a string to it. Color is a valid string if the mesh has a color and this would cause an error', 'comment_created': datetime.datetime(2021, 7, 24, 18, 7, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676029132, 'comment_body': 'Why would we pass a string to it? Does a comparison to == np.nan not work?', 'comment_created': datetime.datetime(2021, 7, 24, 18, 16, 3, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676029301, 'comment_body': ""== comparison with np.nan doesn't work"", 'comment_created': datetime.datetime(2021, 7, 24, 18, 18, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676030986, 'comment_body': 'Why did the figure change?', 'comment_created': datetime.datetime(2021, 7, 24, 18, 35, 24, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676032680, 'comment_body': ""Ah, there might be another issue with the way we're saving plots.\r\n`clip_interval` isn't being saved, the figure changed because the previous figure had `clim` passed to add_mesh but after loading we're not passing the previously passed `clim`, how would we handle this?"", 'comment_created': datetime.datetime(2021, 7, 24, 18, 53, 16, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676034987, 'comment_body': ""We either save all the plot settings to a json file or we don't save them and just clarify in the documentation that these settings are not saved.\r\n\r\nIf we did the first one, how many plot settings do we need to save?"", 'comment_created': datetime.datetime(2021, 7, 24, 19, 17, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676036152, 'comment_body': ""I mean if we're passing kwargs to `add_mesh` I think we can't determine the various plot settings that has to be saved. We could consider the useful functions we've created like clip interval, but this is the only one I can think of as of now, I think we could mention that these settings aren't saved in the documentation"", 'comment_created': datetime.datetime(2021, 7, 24, 19, 31, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676037357, 'comment_body': ""There is no reason we couldn't save the kwargs? "", 'comment_created': datetime.datetime(2021, 7, 24, 19, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676037464, 'comment_body': ""We'd have to do this for every mesh then right?"", 'comment_created': datetime.datetime(2021, 7, 24, 19, 46, 3, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 676037613, 'comment_body': 'Yeah. \r\n\r\nI think this is worth an issue and a conversation on there. This is too big to decide on this PR.', 'comment_created': datetime.datetime(2021, 7, 24, 19, 47, 40, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 676037862, 'comment_body': ""Alright, I'll open one then"", 'comment_created': datetime.datetime(2021, 7, 24, 19, 50, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': 'e3ec00e7fecac36fbaa15f88c0ec14abade41dac', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb04adcede982bdb4e49f392aa749ca9fe140a1b', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1986d2f3fe64188dc390a8c69fb848b40647af8a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6d2eca3f52c0171a8b1e336418df99b4d1a3056', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1dedd9055246c3f643e9406196e403b8b5b6fea3', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f062962d1ae5f1dd35cb79a1fd01881948c5ae7', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1cfa761dc895223e43ceca3d444fd3101bc095e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
707203477,Changed saving of colors as strings to an rgb tuple,"Fixes #76  
Previously, field_arrays contained the name of the color as the 0th index of the `color` field array.
I've changed this to always have a tuple of type (r,g,b) as pyvista accepts this format for colors as well.

The default value of color is now always white - previously being `nan`. This avoids unnecessary checks when loading the colors.",True,73,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/73,https://github.com/sunpy/sunkit-pyvista/pull/73,closed,37,21,4,7,2,7,0,0,[],2021-08-10 09:57:03+00:00,2021-08-14 11:01:12+00:00,349449.0,"4 days, 1:04:09","[{'comment_id': 688007151, 'comment_body': '```suggestion\r\nChanged the manner that colors or colormaps are saved.\r\nChanged default of meshes to be white.\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 18, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 688007292, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 12, 18, 59, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nabobalis', 'type': 'User'}, {'comment_id': 688436777, 'comment_body': ""Sorry, I was wrong in my earlier comment - we shouldn't allow color as a keyword argument to `plot_map`, as it makes no sense to plot a map in a single color. Instead just leave this line in, add a warning below in the `if` block, and don't add color to the field array."", 'comment_created': datetime.datetime(2021, 8, 13, 11, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 688437577, 'comment_body': ""Could you create a new method called `_extract_color` that:\r\n\r\n- Takes `kwargs` as an input\r\n- Returns a color as an RGB tuple?\r\n\r\nThis was we can reduce code duplication in several of the new lines you've added."", 'comment_created': datetime.datetime(2021, 8, 13, 11, 18, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dstansby', 'type': 'User'}, {'comment_id': 688440859, 'comment_body': 'Yes, this makes more sense I shall do that', 'comment_created': datetime.datetime(2021, 8, 13, 11, 25, 10, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 688677040, 'comment_body': ""Alright, I'll make this change."", 'comment_created': datetime.datetime(2021, 8, 13, 17, 36, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}, {'comment_id': 688677192, 'comment_body': ""Yes I'll add this in."", 'comment_created': datetime.datetime(2021, 8, 13, 17, 36, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jeffreypaul15', 'type': 'User'}]","[{'commit_sha': '9e7e7875a2af07c7e752cfed70c9e706add0b98e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '25107a1768311981cbc9784063244b852adba5fc', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f7486790a8443dbd69a8a65b6d3c4106c48eaf4', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f595eaaff2ff20e32ae6d62154b106045c20879c', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40e48379177211ec1b2839bdcb805e68509e485e', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a1ffd56125cb9d6394d4555965b8bc44506c50f', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a52ce23d3c08f5c71e437d54a720d936fb95afb', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9
697698381,Adds BackgroundPlotter class which can be used for animations,"From #32, moved the Background Plotting to another class.

- [ ] Tests
- [ ] Examples",False,57,https://api.github.com/repos/sunpy/sunkit-pyvista/pulls/57,https://github.com/sunpy/sunkit-pyvista/pull/57,open,120,1,5,10,6,0,0,0,[],2021-07-27 09:38:26+00:00,,0.0,,[],"[{'commit_sha': '707e547df8bff50171251bee32761926af4d27ec', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a9f7c45cd73f75d04512df3984c03a1d8286a536', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72d0cae49b93637d51bdf803e2af51de132c412', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '46ff45cbf9e92246c54ed5e6c4b3bc7aa505a35b', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '14188d3572a7f2fc085d2f894c2c8450f141f16d', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a93b83460a48833076a0fef99ef70d93b8b759', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1d777fc7afa7067c7f55cacfb7e729b16256651', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '63807dedcaa3b1a5ddbde269b48d4392360612ba', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': '099c9424e9232c275cdf9c10024625a148258f8a', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e0517646e304be3243b172d86c1991c585f9e1d0', 'committer_username': 'jeffreypaul15', 'committer_name': 'Jeffrey Aaron Paul', 'committer_email': None, 'commit_date': datetime.datetime(2019, 5, 22, 16, 53, 20, tzinfo=datetime.timezone.utc)}]",Jeffrey Aaron Paul,50923538,,User,,32,,11,9

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
368821826,sunkit-pyvista,sunpy/sunkit-pyvista,Python,5,7,7,8,362,6,2,3,"[{'id': 762559970, 'number': 80, 'closed': datetime.datetime(2022, 1, 12, 22, 6, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 20, 17, 23, 40, tzinfo=datetime.timezone.utc), 'time_taken': 7274593.0, 'time_delta': '84 days, 4:43:13', 'additions': 1, 'deletions': 3, 'state': 'closed'}, {'id': 712795171, 'number': 79, 'closed': datetime.datetime(2021, 8, 16, 17, 2, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 14, 15, 43, 9, tzinfo=datetime.timezone.utc), 'time_taken': 177548.0, 'time_delta': '2 days, 1:19:08', 'additions': 2, 'deletions': 3, 'state': 'closed'}, {'id': 707203477, 'number': 73, 'closed': datetime.datetime(2021, 8, 14, 11, 1, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 10, 9, 57, 3, tzinfo=datetime.timezone.utc), 'time_taken': 349449.0, 'time_delta': '4 days, 1:04:09', 'additions': 37, 'deletions': 21, 'state': 'closed'}, {'id': 706133063, 'number': 70, 'closed': datetime.datetime(2021, 8, 18, 14, 37, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 9, 0, 19, 54, tzinfo=datetime.timezone.utc), 'time_taken': 829054.0, 'time_delta': '9 days, 14:17:34', 'additions': 61, 'deletions': 7, 'state': 'closed'}, {'id': 705950310, 'number': 69, 'closed': datetime.datetime(2021, 8, 9, 9, 29, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 7, 21, 55, 57, tzinfo=datetime.timezone.utc), 'time_taken': 128005.0, 'time_delta': '1 day, 11:33:25', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 702956670, 'number': 66, 'closed': datetime.datetime(2021, 8, 4, 8, 26, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 4, 35, 4, tzinfo=datetime.timezone.utc), 'time_taken': 13880.0, 'time_delta': '3:51:20', 'additions': 16, 'deletions': 0, 'state': 'closed'}, {'id': 699723983, 'number': 59, 'closed': datetime.datetime(2021, 8, 2, 19, 35, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 29, 17, 43, 38, tzinfo=datetime.timezone.utc), 'time_taken': 352338.0, 'time_delta': '4 days, 1:52:18', 'additions': 84, 'deletions': 5, 'state': 'closed'}, {'id': 697712228, 'number': 58, 'closed': datetime.datetime(2021, 7, 27, 10, 13, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 27, 9, 58, 30, tzinfo=datetime.timezone.utc), 'time_taken': 929.0, 'time_delta': '0:15:29', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 697698381, 'number': 57, 'closed': None, 'created': datetime.datetime(2021, 7, 27, 9, 38, 26, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 120, 'deletions': 1, 'state': 'open'}, {'id': 695882652, 'number': 55, 'closed': datetime.datetime(2021, 7, 24, 20, 1, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 11, 48, 51, tzinfo=datetime.timezone.utc), 'time_taken': 115947.0, 'time_delta': '1 day, 8:12:27', 'additions': 29, 'deletions': 6, 'state': 'closed'}, {'id': 694035504, 'number': 52, 'closed': datetime.datetime(2021, 7, 21, 12, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 4, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 28478.0, 'time_delta': '7:54:38', 'additions': 9, 'deletions': 6, 'state': 'closed'}, {'id': 692137278, 'number': 48, 'closed': datetime.datetime(2021, 7, 18, 20, 49, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 18, 19, 25, 4, tzinfo=datetime.timezone.utc), 'time_taken': 5064.0, 'time_delta': '1:24:24', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 690974159, 'number': 42, 'closed': datetime.datetime(2021, 7, 15, 19, 31, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 15, 19, 15, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1000.0, 'time_delta': '0:16:40', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 687218119, 'number': 38, 'closed': datetime.datetime(2021, 7, 21, 8, 24, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 18, 3, 3, tzinfo=datetime.timezone.utc), 'time_taken': 915685.0, 'time_delta': '10 days, 14:21:25', 'additions': 165, 'deletions': 1, 'state': 'closed'}, {'id': 684575626, 'number': 37, 'closed': datetime.datetime(2021, 7, 14, 9, 34, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 18, 4, 42, tzinfo=datetime.timezone.utc), 'time_taken': 660604.0, 'time_delta': '7 days, 15:30:04', 'additions': 103, 'deletions': 2, 'state': 'closed'}, {'id': 683545023, 'number': 35, 'closed': datetime.datetime(2021, 7, 5, 13, 37, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 5, 9, 48, 3, tzinfo=datetime.timezone.utc), 'time_taken': 13747.0, 'time_delta': '3:49:07', 'additions': 17, 'deletions': 2, 'state': 'closed'}, {'id': 682983228, 'number': 34, 'closed': datetime.datetime(2021, 7, 4, 7, 29, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 3, 7, 25, 4, tzinfo=datetime.timezone.utc), 'time_taken': 86648.0, 'time_delta': '1 day, 0:04:08', 'additions': 5, 'deletions': 1, 'state': 'closed'}, {'id': 681216965, 'number': 32, 'closed': datetime.datetime(2021, 7, 16, 19, 29, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 20, 34, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1378468.0, 'time_delta': '15 days, 22:54:28', 'additions': 82, 'deletions': 1, 'state': 'closed'}, {'id': 680124778, 'number': 30, 'closed': datetime.datetime(2021, 7, 4, 7, 29, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 29, 15, 23, 21, tzinfo=datetime.timezone.utc), 'time_taken': 403593.0, 'time_delta': '4 days, 16:06:33', 'additions': 59, 'deletions': 20, 'state': 'closed'}, {'id': 679220269, 'number': 29, 'closed': datetime.datetime(2021, 7, 1, 11, 59, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 28, 17, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 240805.0, 'time_delta': '2 days, 18:53:25', 'additions': 43, 'deletions': 9, 'state': 'closed'}, {'id': 678245502, 'number': 26, 'closed': datetime.datetime(2021, 7, 1, 13, 43, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 26, 0, 45, 25, tzinfo=datetime.timezone.utc), 'time_taken': 478706.0, 'time_delta': '5 days, 12:58:26', 'additions': 45, 'deletions': 3, 'state': 'closed'}, {'id': 676391435, 'number': 24, 'closed': datetime.datetime(2021, 7, 5, 16, 51, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 15, 20, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1042263.0, 'time_delta': '12 days, 1:31:03', 'additions': 66, 'deletions': 11, 'state': 'closed'}, {'id': 674733931, 'number': 23, 'closed': datetime.datetime(2021, 6, 23, 13, 33, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 17, 12, 6, tzinfo=datetime.timezone.utc), 'time_taken': 159706.0, 'time_delta': '1 day, 20:21:46', 'additions': 68, 'deletions': 3, 'state': 'closed'}, {'id': 670645376, 'number': 19, 'closed': datetime.datetime(2021, 7, 6, 17, 42, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 18, 23, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1811947.0, 'time_delta': '20 days, 23:19:07', 'additions': 34, 'deletions': 0, 'state': 'closed'}, {'id': 669779069, 'number': 18, 'closed': datetime.datetime(2021, 7, 27, 10, 24, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 14, 18, 19, 4, tzinfo=datetime.timezone.utc), 'time_taken': 3686728.0, 'time_delta': '42 days, 16:05:28', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 668942210, 'number': 17, 'closed': datetime.datetime(2021, 6, 23, 14, 3, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 12, 19, 51, 41, tzinfo=datetime.timezone.utc), 'time_taken': 929524.0, 'time_delta': '10 days, 18:12:04', 'additions': 44, 'deletions': 0, 'state': 'closed'}, {'id': 668527778, 'number': 16, 'closed': datetime.datetime(2021, 6, 17, 17, 29, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 20, 19, 7, tzinfo=datetime.timezone.utc), 'time_taken': 508245.0, 'time_delta': '5 days, 21:10:45', 'additions': 24, 'deletions': 4, 'state': 'closed'}, {'id': 668344500, 'number': 15, 'closed': datetime.datetime(2021, 6, 12, 11, 18, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 16, 45, 15, tzinfo=datetime.timezone.utc), 'time_taken': 66794.0, 'time_delta': '18:33:14', 'additions': 2, 'deletions': 19, 'state': 'closed'}, {'id': 666689951, 'number': 12, 'closed': datetime.datetime(2021, 6, 12, 11, 14, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 9, 15, 49, tzinfo=datetime.timezone.utc), 'time_taken': 179940.0, 'time_delta': '2 days, 1:59:00', 'additions': 81, 'deletions': 0, 'state': 'closed'}, {'id': 661913930, 'number': 10, 'closed': datetime.datetime(2021, 6, 10, 9, 59, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 4, 16, 33, 10, tzinfo=datetime.timezone.utc), 'time_taken': 494773.0, 'time_delta': '5 days, 17:26:13', 'additions': 38, 'deletions': 5, 'state': 'closed'}, {'id': 658975939, 'number': 7, 'closed': datetime.datetime(2021, 6, 2, 11, 11, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 12, 49, 4, tzinfo=datetime.timezone.utc), 'time_taken': 80562.0, 'time_delta': '22:22:42', 'additions': 31, 'deletions': 4, 'state': 'closed'}, {'id': 658336817, 'number': 6, 'closed': datetime.datetime(2021, 5, 31, 17, 53, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 14, 0, 2, tzinfo=datetime.timezone.utc), 'time_taken': 14031.0, 'time_delta': '3:53:51', 'additions': 87, 'deletions': 9, 'state': 'closed'}, {'id': 657437900, 'number': 4, 'closed': datetime.datetime(2021, 5, 31, 13, 4, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 29, 9, 49, 46, tzinfo=datetime.timezone.utc), 'time_taken': 184500.0, 'time_delta': '2 days, 3:15:00', 'additions': 227, 'deletions': 4, 'state': 'closed'}, {'id': 654090085, 'number': 1, 'closed': datetime.datetime(2021, 5, 29, 9, 50, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 17, 58, 23, tzinfo=datetime.timezone.utc), 'time_taken': 229900.0, 'time_delta': '2 days, 15:51:40', 'additions': 286, 'deletions': 5, 'state': 'closed'}]"
