pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
438510961,examples: DataFlow: Examples which use locked definitions,"Add examples demonstrating locking of objects.

```
async def run_me(obj, sleep_for, i) -> None:
    obj.i = i
    await asyncio.sleep(sleep_for)
    print(f""set i = {i}, got i = {obj.i}"")
```

Running `run_me` without a locked obj would give unexpected results, for example
```
set i = 2, got i = 1
set i = 1, got i = 1
set i = 2, got i = 1
set i = 1, got i = 1
```

with locking
```
set i = 2, got i = 2
set i = 1, got i = 1
set i = 2, got i = 2
set i = 1, got i = 1

```",True,730,https://api.github.com/repos/intel/dffml/pulls/730,https://github.com/intel/dffml/pull/730,closed,133,0,4,1,0,0,0,0,[],2020-06-23 11:35:20+00:00,2020-07-06 16:26:08+00:00,1140648.0,"13 days, 4:50:48",[],"[{'commit_sha': 'cc7abb0c051c48cc77f29459814033b944a66e25', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}]",Aghin Shah Alin,39557075,,User,,29,,2,3
442631800,Examples: DataFlow: Gitter chatbot tutorial,,True,758,https://api.github.com/repos/intel/dffml/pulls/758,https://github.com/intel/dffml/pull/758,closed,554,1,9,20,9,23,0,0,[],2020-07-01 11:20:02+00:00,2020-07-24 22:44:52+00:00,2028290.0,"23 days, 11:24:50","[{'comment_id': 448668384, 'comment_body': ""Can we replicate the functionality from shouldi with regards to `imp_enter` and the client session? Also, let's make sure to use `trust_env=True` for those of us stuck behind proxies :(\r\n\r\nhttps://github.com/intel/dffml/blob/398fddaa3f7d5feb0d20c269932a78cb8e6c53c8/examples/shouldi/shouldi/python/pypi.py#L12-L30"", 'comment_created': datetime.datetime(2020, 7, 1, 23, 33, 11, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 448669660, 'comment_body': ""Let's avoid single letter variable names in examples\r\n\r\n```suggestion\r\n        async with session.get(url, headers=headers) as resp:\r\n```"", 'comment_created': datetime.datetime(2020, 7, 1, 23, 37, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 449257276, 'comment_body': 'Can we comment and simplify this if possible?', 'comment_created': datetime.datetime(2020, 7, 2, 20, 44, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453094328, 'comment_body': '```suggestion\r\nand get the personal access token for your chatbot (If you are redirected to the Gitter docs\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 21, 55, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453094500, 'comment_body': '```suggestion\r\nOur dataflow will take a Gitter room URI as input (For https://gitter.im/dffml/community,\r\n```', 'comment_created': datetime.datetime(2020, 7, 10, 21, 55, 46, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453218155, 'comment_body': 'It would be nice if you split out each operation into its own `literalinclude` via the use of `:lines:`', 'comment_created': datetime.datetime(2020, 7, 11, 17, 48, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453218217, 'comment_body': 'It would be good to show how to use the `create` and `run` commands to run this from the command line as well', 'comment_created': datetime.datetime(2020, 7, 11, 17, 49, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453218568, 'comment_body': 'We can skip the json decoding by just grabbing the records as the output of `.cli`\r\n\r\n```suggestion\r\n        preds = await CLI.cli(\r\n```', 'comment_created': datetime.datetime(2020, 7, 11, 17, 53, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453218793, 'comment_body': 'Unused\r\n\r\n```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 11, 17, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453221147, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 11, 18, 23, 13, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453221174, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2020, 7, 11, 18, 23, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453221250, 'comment_body': 'Does this work?\r\n\r\n```suggestion\r\n        url, json={""text"": message}, headers=headers\r\n```', 'comment_created': datetime.datetime(2020, 7, 11, 18, 24, 31, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453221442, 'comment_body': ""Shouldn't we be using this in a `with` block, and removing `delete`?"", 'comment_created': datetime.datetime(2020, 7, 11, 18, 26, 12, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453224381, 'comment_body': ""Let's make sure that all comments start with a capitalized word\r\n\r\n```suggestion\r\n        # Only replace first occurrence of predict\r\n```"", 'comment_created': datetime.datetime(2020, 7, 11, 19, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 453224990, 'comment_body': 'I suspect that we need this to be of type BaseSecret\r\n\r\n```suggestion\r\n    secret: BaseSecret\r\n```', 'comment_created': datetime.datetime(2020, 7, 11, 19, 8, 21, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456231372, 'comment_body': 'Yes! Thanks!', 'comment_created': datetime.datetime(2020, 7, 17, 5, 48, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aghinsa', 'type': 'User'}, {'comment_id': 456581145, 'comment_body': 'Let\'s make the base part of this URL a part of the config,something like `api: str = ""https://api.gitter.im/v1""`\r\n\r\nWe also need to to write a test for this whole thing. We can use the `aiohttp` testing interfaces, or `httptest`', 'comment_created': datetime.datetime(2020, 7, 17, 17, 36, 53, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 456582085, 'comment_body': ""Let's use `:lines:` and explain what each operation is doing"", 'comment_created': datetime.datetime(2020, 7, 17, 17, 38, 48, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 458909028, 'comment_body': '```suggestion\r\nour dataflow).\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 16, 9, 33, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 458909043, 'comment_body': '```suggestion\r\n``get_room_id`` gets the ``room id`` from room name (The input to\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 16, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 458909737, 'comment_body': '```suggestion\r\n-----------------------------------------\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 16, 10, 31, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 458909883, 'comment_body': '```suggestion\r\n.. code-block:: python\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 16, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 458911059, 'comment_body': ""Pretty sure we don't need qoutes here\r\n\r\n```suggestion\r\n            configs.ini=operations:get_room_id.secret.config.filename \\\r\n```"", 'comment_created': datetime.datetime(2020, 7, 22, 16, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': '1d886b8da1769e9520896943259008ae2816e23a', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6081055d98b853aebb3af1966e09e0845e71af65', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f269ca243293ae2b4877935dc36c72b145d583fd', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5bf511b1a0fe5c0bfcf9491f4f63fb11da75546b', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd8e4b45908e8bd0c2acbdc52b01f52f64f5e8b7', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f573165cf23ac463926699ae2313cb8553b26aed', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e52e82aa872e5d0927343fe2d959da26d936bc9', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f397cd93ddbd49c1ecd12dce886341098804363c', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '476adee72a4458b6329dd8286aa50ef580bead83', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f20d087ee92f586f190b95dc745320aa092784f9', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a979a64919bc74f61609adb9c3e09ed063cc7c', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '628c948b776f7249c3c923bdd59a33e794606544', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fa06b05c36da8288c99b994d80a99b2d4c3f569', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7bdb940d47677cde581f88b046de9b04fc2d3d67', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aeb76baa8d145f506c451301b67af5b1090dfc0f', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f45518314df5fc9299beb494b111fe7f312862a0', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ddc235384dfa459f4255bb072b8a061f8a1be5c', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '352ebade9fa89fbddc232a81e67cd211bb4d2f7c', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0321751689ea85865b83cb1c6d0ea9fd6fa447f', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dda45ce1447651c87d2e02dd0d2f325cdb06229a', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}]",Aghin Shah Alin,39557075,,User,,29,,2,3
447361861,WIP: orchestrator: distribuited: NatsOrchestrator ,Milestone 1 of #790 ,False,772,https://api.github.com/repos/intel/dffml/pulls/772,https://github.com/intel/dffml/pull/772,closed,1634,2,11,23,13,13,1,0,[{'name': 'backlog'}],2020-07-10 10:31:55+00:00,2022-03-12 22:22:38+00:00,52746643.0,"610 days, 11:50:43","[{'comment_id': 463298856, 'comment_body': ""Let's take this out of the http service and put it in util somewhere, maybe `dffml/util/default.py` then use it in this file\r\n\r\nhttps://github.com/intel/dffml/blob/ad2286448b18ccd2b844e01ce02b8c1712d02e8d/service/http/dffml_service_http/routes.py#L41-L44"", 'comment_created': datetime.datetime(2020, 7, 30, 22, 8, 10, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 463686320, 'comment_body': 'Let\'s make sure we have NATs choose the port\r\n\r\nhttps://github.com/nats-io/nats-server/issues/1097#issuecomment-637232781\r\n\r\n```suggestion\r\n            [""nats-server"", ""-p"", ""-1""],\r\n```', 'comment_created': datetime.datetime(2020, 7, 31, 15, 42, 37, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 463687831, 'comment_body': 'The else case here is not handled, what is the else case?', 'comment_created': datetime.datetime(2020, 7, 31, 15, 45, 17, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 463692243, 'comment_body': 'Why no use of `with` here?', 'comment_created': datetime.datetime(2020, 7, 31, 15, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 463945384, 'comment_body': '    If no implementations are provided, the operation is assumed to be entrypoint loadable. opimpNetworkctx raises an exception if an implementation is not found in both ways.', 'comment_created': datetime.datetime(2020, 8, 1, 9, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'aghinsa', 'type': 'User'}, {'comment_id': 463945402, 'comment_body': 'My bad, updated to use with', 'comment_created': datetime.datetime(2020, 8, 1, 9, 47, 35, tzinfo=datetime.timezone.utc), 'commenter': 'aghinsa', 'type': 'User'}, {'comment_id': 465172128, 'comment_body': ""Let's move this into `docs/`"", 'comment_created': datetime.datetime(2020, 8, 4, 16, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 465173063, 'comment_body': ""Let's remove arguments from all `__aenter__`'s\r\n\r\n```suggestion\r\n    async def __aenter__(self):\r\n```"", 'comment_created': datetime.datetime(2020, 8, 4, 16, 21, 52, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 465175769, 'comment_body': ""Let's instantiate 3 workers (configurable to N workers, maybe use a loop or something) and make sure that it still work.\r\n\r\nLet's give each a different set of operations and make some of them overlap and some unique and makes sure that circular queues are setup appropriately."", 'comment_created': datetime.datetime(2020, 8, 4, 16, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 470758299, 'comment_body': '```suggestion\r\n        # Workers will register themselves with this orchestrator\r\n        # by publishing to the following channel\r\n```', 'comment_created': datetime.datetime(2020, 8, 14, 17, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 470758786, 'comment_body': 'TODO: remove this line', 'comment_created': datetime.datetime(2020, 8, 14, 17, 28, 56, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 470759897, 'comment_body': 'Move this before the `.wait()`', 'comment_created': datetime.datetime(2020, 8, 14, 17, 31, 5, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}, {'comment_id': 495592836, 'comment_body': ""Please make sure we have a `README.md` in this directory that combines your nodes and todos and is up to date with the state of the distributed implementations, it's limitations, and reasonings for those limitations"", 'comment_created': datetime.datetime(2020, 9, 27, 16, 59, 11, tzinfo=datetime.timezone.utc), 'commenter': 'pdxjohnny', 'type': 'User'}]","[{'commit_sha': 'f88645ec7a01105af09e4f70d6ed8d2c29a8cd15', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbf6335804f66146a09979f52b074d40425b5128', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bee41e3997e8d5661bbf4f2f102f352763dd17e0', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7d2554e1553a162f65d09cc1449c113ae2918212', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4de0405575b3795f748eb0f0a5872748de55ee2', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b21e47b077eb51cd1267103fb5346bb122d7859', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd42730a7be53939e80af07b25295434419d76ec', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd98d09b6ac1feb99de708a523e94fe4bf333b1b', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '332b8471e3cfa73d1d914d5ac342df5566bf82f0', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a935a95dd4a7545c93f78845fb8645df5a09c357', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '325ef76785ff4b588d89a7ffbb618d04459d29a7', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23a03a2a8f159290649f65917c16f16644de07fe', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e11c246645200633869a82b03ff24e5f2728d97a', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7779e590ff48808162432b875879ba4edc54a604', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd91075d3d410dea4814e60b7626ef0f1cfc440bc', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19f5b05b5dd12b87b4fbd9489fbe8c860b0ffe81', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a00110a1d524ad884b119b4931e40694fc59a29', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8235c6c3d77d08b637bba782263360a2364882c3', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4952cc06ff391b8081db399804f31643b4531365', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60c46915ad5784bc68171e6703036dd4252fee7d', 'committer_username': 'aghinsa', 'committer_name': 'Aghin Shah Alin', 'committer_email': None, 'commit_date': datetime.datetime(2018, 5, 23, 11, 52, 30, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f49ab35d06f56608a644ae7ab113a7e73316ae02', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07a59220227d34e99807ea6fb04323be90b6a341', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9d7bdd77ceb6923a505af7556f5ad58e51d48e7', 'committer_username': 'pdxjohnny', 'committer_name': 'John Andersen', 'committer_email': 'john.s.andersen@intel.com', 'commit_date': datetime.datetime(2013, 11, 15, 18, 35, 37, tzinfo=datetime.timezone.utc)}]",Aghin Shah Alin,39557075,,User,,29,,2,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
149512216,dffml,intel/dffml,Python,138,250,18,64,4168,412,39,27,"[{'id': 457579004, 'number': 815, 'closed': datetime.datetime(2020, 7, 28, 16, 47, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 6, 7, 40, tzinfo=datetime.timezone.utc), 'time_taken': 38373.0, 'time_delta': '10:39:33', 'additions': 17, 'deletions': 3, 'state': 'closed'}, {'id': 457577831, 'number': 814, 'closed': datetime.datetime(2020, 8, 28, 16, 0, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 6, 4, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2714196.0, 'time_delta': '31 days, 9:56:36', 'additions': 78, 'deletions': 30, 'state': 'closed'}, {'id': 457575875, 'number': 813, 'closed': datetime.datetime(2020, 8, 4, 16, 36, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 5, 58, 11, tzinfo=datetime.timezone.utc), 'time_taken': 643086.0, 'time_delta': '7 days, 10:38:06', 'additions': 208, 'deletions': 5, 'state': 'closed'}, {'id': 455682608, 'number': 802, 'closed': datetime.datetime(2020, 7, 24, 16, 18, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 12, 45, 46, tzinfo=datetime.timezone.utc), 'time_taken': 99146.0, 'time_delta': '1 day, 3:32:26', 'additions': 113, 'deletions': 10, 'state': 'closed'}, {'id': 447361861, 'number': 772, 'closed': datetime.datetime(2022, 3, 12, 22, 22, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 10, 31, 55, tzinfo=datetime.timezone.utc), 'time_taken': 52746643.0, 'time_delta': '610 days, 11:50:43', 'additions': 1634, 'deletions': 2, 'state': 'closed'}, {'id': 444288125, 'number': 762, 'closed': datetime.datetime(2020, 7, 6, 16, 9, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 14, 1, 52, tzinfo=datetime.timezone.utc), 'time_taken': 180448.0, 'time_delta': '2 days, 2:07:28', 'additions': 3, 'deletions': 184, 'state': 'closed'}, {'id': 442631800, 'number': 758, 'closed': datetime.datetime(2020, 7, 24, 22, 44, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 1, 11, 20, 2, tzinfo=datetime.timezone.utc), 'time_taken': 2028290.0, 'time_delta': '23 days, 11:24:50', 'additions': 554, 'deletions': 1, 'state': 'closed'}, {'id': 438510961, 'number': 730, 'closed': datetime.datetime(2020, 7, 6, 16, 26, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 11, 35, 20, tzinfo=datetime.timezone.utc), 'time_taken': 1140648.0, 'time_delta': '13 days, 4:50:48', 'additions': 133, 'deletions': 0, 'state': 'closed'}, {'id': 437171722, 'number': 721, 'closed': datetime.datetime(2022, 3, 12, 22, 22, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 15, 46, 10, tzinfo=datetime.timezone.utc), 'time_taken': 54542185.0, 'time_delta': '631 days, 6:36:25', 'additions': 394, 'deletions': 34, 'state': 'closed'}, {'id': 433821394, 'number': 707, 'closed': datetime.datetime(2020, 6, 12, 18, 51, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 12, 18, 15, tzinfo=datetime.timezone.utc), 'time_taken': 2189.0, 'time_delta': '0:36:29', 'additions': 57, 'deletions': 75, 'state': 'closed'}, {'id': 429931184, 'number': 696, 'closed': datetime.datetime(2020, 6, 9, 22, 12, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 10, 8, 15, tzinfo=datetime.timezone.utc), 'time_taken': 216258.0, 'time_delta': '2 days, 12:04:18', 'additions': 131, 'deletions': 25, 'state': 'closed'}, {'id': 428331521, 'number': 694, 'closed': datetime.datetime(2020, 6, 12, 17, 0, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 5, 9, 22, 2, tzinfo=datetime.timezone.utc), 'time_taken': 632319.0, 'time_delta': '7 days, 7:38:39', 'additions': 276, 'deletions': 159, 'state': 'closed'}, {'id': 424311874, 'number': 684, 'closed': datetime.datetime(2020, 6, 3, 20, 34, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 28, 7, 50, 24, tzinfo=datetime.timezone.utc), 'time_taken': 564263.0, 'time_delta': '6 days, 12:44:23', 'additions': 131, 'deletions': 2, 'state': 'closed'}, {'id': 419670439, 'number': 647, 'closed': datetime.datetime(2020, 5, 20, 16, 47, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 18, 18, 31, 38, tzinfo=datetime.timezone.utc), 'time_taken': 166524.0, 'time_delta': '1 day, 22:15:24', 'additions': 108, 'deletions': 2, 'state': 'closed'}, {'id': 404348018, 'number': 570, 'closed': datetime.datetime(2020, 5, 14, 5, 58, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 16, 12, 53, 55, tzinfo=datetime.timezone.utc), 'time_taken': 2394290.0, 'time_delta': '27 days, 17:04:50', 'additions': 1647, 'deletions': 85, 'state': 'closed'}, {'id': 397477221, 'number': 518, 'closed': datetime.datetime(2020, 4, 10, 15, 51, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 2, 10, 3, 8, tzinfo=datetime.timezone.utc), 'time_taken': 712100.0, 'time_delta': '8 days, 5:48:20', 'additions': 132, 'deletions': 63, 'state': 'closed'}, {'id': 394054984, 'number': 492, 'closed': datetime.datetime(2020, 3, 31, 17, 6, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 26, 9, 34, 59, tzinfo=datetime.timezone.utc), 'time_taken': 459076.0, 'time_delta': '5 days, 7:31:16', 'additions': 61, 'deletions': 0, 'state': 'closed'}, {'id': 391823538, 'number': 483, 'closed': datetime.datetime(2020, 3, 25, 0, 8, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 21, 6, 42, 2, tzinfo=datetime.timezone.utc), 'time_taken': 321959.0, 'time_delta': '3 days, 17:25:59', 'additions': 93, 'deletions': 97, 'state': 'closed'}, {'id': 384221664, 'number': 454, 'closed': datetime.datetime(2020, 3, 14, 23, 24, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 5, 11, 29, 42, tzinfo=datetime.timezone.utc), 'time_taken': 820460.0, 'time_delta': '9 days, 11:54:20', 'additions': 175, 'deletions': 19, 'state': 'closed'}, {'id': 376276851, 'number': 387, 'closed': datetime.datetime(2020, 3, 2, 6, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 17, 18, 58, 5, tzinfo=datetime.timezone.utc), 'time_taken': 1164955.0, 'time_delta': '13 days, 11:35:55', 'additions': 144, 'deletions': 48, 'state': 'closed'}, {'id': 367684284, 'number': 357, 'closed': datetime.datetime(2020, 1, 29, 16, 16, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 27, 20, 20, 20, tzinfo=datetime.timezone.utc), 'time_taken': 158159.0, 'time_delta': '1 day, 19:55:59', 'additions': 109, 'deletions': 34, 'state': 'closed'}, {'id': 366511314, 'number': 340, 'closed': datetime.datetime(2020, 1, 23, 19, 9, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 23, 18, 50, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1140.0, 'time_delta': '0:19:00', 'additions': 27, 'deletions': 27, 'state': 'closed'}, {'id': 364747023, 'number': 333, 'closed': datetime.datetime(2020, 1, 29, 16, 20, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 20, 10, 3, 27, tzinfo=datetime.timezone.utc), 'time_taken': 800204.0, 'time_delta': '9 days, 6:16:44', 'additions': 327, 'deletions': 198, 'state': 'closed'}, {'id': 361107532, 'number': 300, 'closed': datetime.datetime(2020, 1, 12, 22, 58, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 9, 18, 55, 34, tzinfo=datetime.timezone.utc), 'time_taken': 273764.0, 'time_delta': '3 days, 4:02:44', 'additions': 193, 'deletions': 2, 'state': 'closed'}, {'id': 360562596, 'number': 299, 'closed': datetime.datetime(2020, 1, 8, 17, 58, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 8, 17, 10, 53, tzinfo=datetime.timezone.utc), 'time_taken': 2835.0, 'time_delta': '0:47:15', 'additions': 187, 'deletions': 182, 'state': 'closed'}, {'id': 356766156, 'number': 274, 'closed': datetime.datetime(2020, 9, 26, 22, 17, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 25, 8, 45, 13, tzinfo=datetime.timezone.utc), 'time_taken': 23895150.0, 'time_delta': '276 days, 13:32:30', 'additions': 1194, 'deletions': 17, 'state': 'closed'}, {'id': 353717874, 'number': 268, 'closed': datetime.datetime(2019, 12, 20, 20, 30, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 16, 19, 15, 21, tzinfo=datetime.timezone.utc), 'time_taken': 350091.0, 'time_delta': '4 days, 1:14:51', 'additions': 131, 'deletions': 2, 'state': 'closed'}, {'id': 347633692, 'number': 253, 'closed': datetime.datetime(2019, 12, 12, 8, 18, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 2, 13, 48, 4, tzinfo=datetime.timezone.utc), 'time_taken': 844232.0, 'time_delta': '9 days, 18:30:32', 'additions': 296, 'deletions': 339, 'state': 'closed'}, {'id': 336700838, 'number': 238, 'closed': datetime.datetime(2019, 11, 12, 21, 49, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 5, 10, 19, 16, tzinfo=datetime.timezone.utc), 'time_taken': 646221.0, 'time_delta': '7 days, 11:30:21', 'additions': 691, 'deletions': 731, 'state': 'closed'}, {'id': 329564771, 'number': 226, 'closed': datetime.datetime(2019, 10, 25, 4, 19, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 18, 5, 15, 30, tzinfo=datetime.timezone.utc), 'time_taken': 601445.0, 'time_delta': '6 days, 23:04:05', 'additions': 749, 'deletions': 202, 'state': 'closed'}, {'id': 327531135, 'number': 221, 'closed': datetime.datetime(2019, 10, 13, 15, 53, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 13, 7, 19, 15, tzinfo=datetime.timezone.utc), 'time_taken': 30866.0, 'time_delta': '8:34:26', 'additions': 2, 'deletions': 3, 'state': 'closed'}]"
