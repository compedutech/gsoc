pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1049850835,Add custom controller documentation,"Custom controller support 2nd version wiki https://github.com/ArduPilot/ardupilot/pull/21216
",True,4580,https://api.github.com/repos/ArduPilot/ardupilot_wiki/pulls/4580,https://github.com/ArduPilot/ardupilot_wiki/pull/4580,closed,372,0,2,1,3,18,0,0,[],2022-09-08 09:34:09+00:00,2022-09-14 23:32:21+00:00,568692.0,"6 days, 13:58:12","[{'comment_id': 967437290, 'comment_body': '```suggestion\r\n- Custom controller parameters start with ``CC_`` in the GCS.\r\n```\r\nto avoid a build error...thinks its a param link', 'comment_created': datetime.datetime(2022, 9, 9, 20, 23, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967438291, 'comment_body': '```suggestion\r\n- :ref:`CC_TYPE<CC_TYPE>`: choose which custom controller backend to use, reboot required.   \r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 25, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967438608, 'comment_body': '```suggestion\r\n-  :ref:`CC_AXIS_MASK<CC_AXIS_MASK>`:  choose which axis to use custom controller output   \r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 25, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967439139, 'comment_body': '```suggestion\r\nThe attitude target and rate target are also made equal to the current attitude and gyro rate to make the error signal grow from zero in ``relax_attitude_controllers`` function. In order to avoid impulse input to the controller, the target resetting is not performed when the feedforward is disabled by setting :ref:`ATC_RATE_FF_ENAB<ATC_RATE_FF_ENAB>`  parameter to 0.\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967439609, 'comment_body': '```suggestion\r\n- Empty backend  set :ref:`CC_TYPE<CC_TYPE>`= 1\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 27, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967440003, 'comment_body': '```suggestion\r\n- PID backend  set :ref:`CC_TYPE<CC_TYPE>`= 2\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 27, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967440395, 'comment_body': '```suggestion\r\nEmpty Controller -  :ref:`CC_TYPE<CC_TYPE>`= 1\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 28, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967440760, 'comment_body': '```suggestion\r\nPID Controller - :ref:`CC_TYPE<CC_TYPE>`= 2\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 29, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967441428, 'comment_body': '```suggestion\r\n**Step #1:**  Compile and run the default SITL model. In the GCS, choose the custom controller type, assign axis mask and set which RC switch to activate the custom controller. Reboot autopilot. For example in mavproxy, using RC channel 6 as the enable/disable switch for the custom controller:\r\n```', 'comment_created': datetime.datetime(2022, 9, 9, 20, 30, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Hwurzburg', 'type': 'User'}, {'comment_id': 967762562, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 47, 7, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762610, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762614, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 47, 30, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762643, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 48, 12, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762662, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 48, 18, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762667, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762669, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762750, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2022, 9, 11, 5, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 967762775, 'comment_body': 'Done. ', 'comment_created': datetime.datetime(2022, 9, 11, 5, 49, 8, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}]","[{'commit_sha': '13bc136c623fa605ea1ea78d6ef66f4c3be2d3a3', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
988161288,Custom Controller Support,"This PR is part of the GSOC Simulink custom controller implementation project. The aim is to provide a systematic way to run a custom(secondary) controller with very little modification in the original attitude controller and vehicle code.  For this PR only the attitude controller is assumed to be customized. For convenience, original-primary means existing controller and custom-secondary means new controller. 

This PR has the following feature
- flag to compile out the changes in original code.
- In-flight run time transition between original and custom controller with RC switch.
- reset controller to avoid integrator build-up in the offline controller. 
- ground and inflight spool state separation to avoid build-up during arming and takeoff with the custom controller
- bitmask to choose which axis to run the custom controller for
- enable parameter to avoid accidental trigger via RC

I also added an example PID controller where a single PID is used for the attitude control with nonsense initial parameters. In the example, the custom controller gets its already input-shaped target from the AC_AttitudeControl library. I also check which functions in AC_AtttitudeControl or AC_AtttitudeControl_Multi need to be overloaded. Almost all of the functions inside AC_AtttitudeControl library construct target attitude from different reference attitude definitions that are used in various flight modes, ex: input_euler_angle_roll_pitch_yaw, input_rate_bf_roll_pitch_yaw. Since these functions are used to interpret the reference to generate the target attitude, they are not directly part of the controller. reset_yaw_target_and_rate and inertial_frame_reset don't affect the controller because they only change the current attitude/yaw target.

I also find that not running the original controller means that ATC_THR_MIX_MIN, ATC_THR_MIX_MAN, ATC_THR_MIX_MAX have no effect during different stages of flight if we are flying with a custom controller. Because update_throttle_rpy_mix function runs inside rate_controller_run. So, it might be a good idea to run the primary controller regardless or move update_throttle_rpy_mix out of rate_controller_run function.

Pros and cons I find with this approach.

Pros: 
- easily access the attitude controller and all of its functionality
- follows the similar structure as in Attitude Controller
- almost no modification to the AC_AttitudeController code and small modification to the vehicle code

Cons: 
- custom controller param table might reset original controller parameter values(Tridge will better explain)
- Lack of systematic way to store multiple new controllers that might be introduced in the future
- the possibility of making further changes inside the attitude  controller to better support the custom controller

In addition to all that, I could not get the custom controller parameters to appear on the MAVProxy. Which is another problem that I need to look into. For this reason, the default value of CUST_CNT_ENB and CUST_CNT_MSK parameters were changed to enable the custom controller. Setting RC6_OPTION to 6 and simply raising RC6 channel above 1800 will switch to the custom controller. 

How to test:
1. Set CUSTOMCONTROL_ENABLED inside AC_CustomControl.h to 1 
2. Set ATC_CUST_CNT_ENB parameter to 1 
3. Assign RCx_OPTION to 109. Ex: RC6_OPTION 109
4. arm and takeoff
5. Switch RCx to high value 

No difference can be observed as expected while switching . A message will pop on ground control station when switching between controller.",False,21123,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21123,https://github.com/ArduPilot/ardupilot/pull/21123,closed,280,2,10,8,4,16,1,0,[{'name': 'GSoC'}],2022-07-06 04:54:18+00:00,2022-08-09 00:09:08+00:00,2920490.0,"33 days, 19:14:50","[{'comment_id': 915197803, 'comment_body': 'I would be tempted to not bother with the defines here. You have the function in the base class. You could probably just call it `log` or `log_write` ', 'comment_created': datetime.datetime(2022, 7, 6, 19, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915198150, 'comment_body': 'This should live in `AC_CustomControl.h`', 'comment_created': datetime.datetime(2022, 7, 6, 19, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915198979, 'comment_body': '```suggestion\r\n            copter.attitude_control->set_custom_controller(ch_flag == AuxSwitchPos::HIGH);\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 6, 19, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915202204, 'comment_body': 'This is a little odd, the else if will always be true if it is compiled in. Better to do the else with defines.', 'comment_created': datetime.datetime(2022, 7, 6, 19, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915207140, 'comment_body': 'I think you will have to do this the other way round. Add sub group in in the attitude control upper level then load in the custom group. The same way the attitude controller is added to copter. ', 'comment_created': datetime.datetime(2022, 7, 6, 19, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915419564, 'comment_body': 'Do you mean ""#if CUSTOMCONTROL_ENABLED == ENABLED && FRAME_CONFIG != HELI_FRAME\r\n"" can be removed with no effect? ', 'comment_created': datetime.datetime(2022, 7, 7, 3, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 915704916, 'comment_body': 'Yeah, the function exists in both controllers. So you can just call it all the time. It will be a minimal flash cost. Of course in this case calling it `log_custom_controller` is not correct, it becomes a generic attitude control log function. ', 'comment_created': datetime.datetime(2022, 7, 7, 10, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 918407482, 'comment_body': 'need to use              \r\n```\r\n ac_var_info = AC_AttitudeControl_Multi::var_info;\r\n```\r\nfor both cases, so the load_object_from_eeprom gets the whole subtree', 'comment_created': datetime.datetime(2022, 7, 11, 22, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 918408348, 'comment_body': 'need to default to 0\r\n', 'comment_created': datetime.datetime(2022, 7, 11, 22, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': '7897242651ab57828e1d6d2425d02034708a3b54', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f76fda448298a6dd7100b55c47793d3b4b6768', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f0dd580364135fb2e2fd9c736399436c2400eb', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f61c67b7825bfe430ef812576050a3d84bd10579', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bdcd628b66a7cf8b95a9808f58ee94e99d917d1', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7650768cb24079c3a2abea5e92b2406594eaa9e5', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e665e6b068223acb551e69ee3873e401fcd98c1b', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9446a6f9870f5372c503bb54b5bb5bc35295014', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
988161288,Custom Controller Support,"This PR is part of the GSOC Simulink custom controller implementation project. The aim is to provide a systematic way to run a custom(secondary) controller with very little modification in the original attitude controller and vehicle code.  For this PR only the attitude controller is assumed to be customized. For convenience, original-primary means existing controller and custom-secondary means new controller. 

This PR has the following feature
- flag to compile out the changes in original code.
- In-flight run time transition between original and custom controller with RC switch.
- reset controller to avoid integrator build-up in the offline controller. 
- ground and inflight spool state separation to avoid build-up during arming and takeoff with the custom controller
- bitmask to choose which axis to run the custom controller for
- enable parameter to avoid accidental trigger via RC

I also added an example PID controller where a single PID is used for the attitude control with nonsense initial parameters. In the example, the custom controller gets its already input-shaped target from the AC_AttitudeControl library. I also check which functions in AC_AtttitudeControl or AC_AtttitudeControl_Multi need to be overloaded. Almost all of the functions inside AC_AtttitudeControl library construct target attitude from different reference attitude definitions that are used in various flight modes, ex: input_euler_angle_roll_pitch_yaw, input_rate_bf_roll_pitch_yaw. Since these functions are used to interpret the reference to generate the target attitude, they are not directly part of the controller. reset_yaw_target_and_rate and inertial_frame_reset don't affect the controller because they only change the current attitude/yaw target.

I also find that not running the original controller means that ATC_THR_MIX_MIN, ATC_THR_MIX_MAN, ATC_THR_MIX_MAX have no effect during different stages of flight if we are flying with a custom controller. Because update_throttle_rpy_mix function runs inside rate_controller_run. So, it might be a good idea to run the primary controller regardless or move update_throttle_rpy_mix out of rate_controller_run function.

Pros and cons I find with this approach.

Pros: 
- easily access the attitude controller and all of its functionality
- follows the similar structure as in Attitude Controller
- almost no modification to the AC_AttitudeController code and small modification to the vehicle code

Cons: 
- custom controller param table might reset original controller parameter values(Tridge will better explain)
- Lack of systematic way to store multiple new controllers that might be introduced in the future
- the possibility of making further changes inside the attitude  controller to better support the custom controller

In addition to all that, I could not get the custom controller parameters to appear on the MAVProxy. Which is another problem that I need to look into. For this reason, the default value of CUST_CNT_ENB and CUST_CNT_MSK parameters were changed to enable the custom controller. Setting RC6_OPTION to 6 and simply raising RC6 channel above 1800 will switch to the custom controller. 

How to test:
1. Set CUSTOMCONTROL_ENABLED inside AC_CustomControl.h to 1 
2. Set ATC_CUST_CNT_ENB parameter to 1 
3. Assign RCx_OPTION to 109. Ex: RC6_OPTION 109
4. arm and takeoff
5. Switch RCx to high value 

No difference can be observed as expected while switching . A message will pop on ground control station when switching between controller.",False,21123,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21123,https://github.com/ArduPilot/ardupilot/pull/21123,closed,280,2,10,8,4,16,1,0,[{'name': 'GSoC'}],2022-07-06 04:54:18+00:00,2022-08-09 00:09:08+00:00,2920490.0,"33 days, 19:14:50","[{'comment_id': 915197803, 'comment_body': 'I would be tempted to not bother with the defines here. You have the function in the base class. You could probably just call it `log` or `log_write` ', 'comment_created': datetime.datetime(2022, 7, 6, 19, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915198150, 'comment_body': 'This should live in `AC_CustomControl.h`', 'comment_created': datetime.datetime(2022, 7, 6, 19, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915198979, 'comment_body': '```suggestion\r\n            copter.attitude_control->set_custom_controller(ch_flag == AuxSwitchPos::HIGH);\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 6, 19, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915202204, 'comment_body': 'This is a little odd, the else if will always be true if it is compiled in. Better to do the else with defines.', 'comment_created': datetime.datetime(2022, 7, 6, 19, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915207140, 'comment_body': 'I think you will have to do this the other way round. Add sub group in in the attitude control upper level then load in the custom group. The same way the attitude controller is added to copter. ', 'comment_created': datetime.datetime(2022, 7, 6, 19, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915419564, 'comment_body': 'Do you mean ""#if CUSTOMCONTROL_ENABLED == ENABLED && FRAME_CONFIG != HELI_FRAME\r\n"" can be removed with no effect? ', 'comment_created': datetime.datetime(2022, 7, 7, 3, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 915704916, 'comment_body': 'Yeah, the function exists in both controllers. So you can just call it all the time. It will be a minimal flash cost. Of course in this case calling it `log_custom_controller` is not correct, it becomes a generic attitude control log function. ', 'comment_created': datetime.datetime(2022, 7, 7, 10, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 918407482, 'comment_body': 'need to use              \r\n```\r\n ac_var_info = AC_AttitudeControl_Multi::var_info;\r\n```\r\nfor both cases, so the load_object_from_eeprom gets the whole subtree', 'comment_created': datetime.datetime(2022, 7, 11, 22, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 918408348, 'comment_body': 'need to default to 0\r\n', 'comment_created': datetime.datetime(2022, 7, 11, 22, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': '7897242651ab57828e1d6d2425d02034708a3b54', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f76fda448298a6dd7100b55c47793d3b4b6768', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f0dd580364135fb2e2fd9c736399436c2400eb', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f61c67b7825bfe430ef812576050a3d84bd10579', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bdcd628b66a7cf8b95a9808f58ee94e99d917d1', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7650768cb24079c3a2abea5e92b2406594eaa9e5', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e665e6b068223acb551e69ee3873e401fcd98c1b', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9446a6f9870f5372c503bb54b5bb5bc35295014', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
988161288,Custom Controller Support,"This PR is part of the GSOC Simulink custom controller implementation project. The aim is to provide a systematic way to run a custom(secondary) controller with very little modification in the original attitude controller and vehicle code.  For this PR only the attitude controller is assumed to be customized. For convenience, original-primary means existing controller and custom-secondary means new controller. 

This PR has the following feature
- flag to compile out the changes in original code.
- In-flight run time transition between original and custom controller with RC switch.
- reset controller to avoid integrator build-up in the offline controller. 
- ground and inflight spool state separation to avoid build-up during arming and takeoff with the custom controller
- bitmask to choose which axis to run the custom controller for
- enable parameter to avoid accidental trigger via RC

I also added an example PID controller where a single PID is used for the attitude control with nonsense initial parameters. In the example, the custom controller gets its already input-shaped target from the AC_AttitudeControl library. I also check which functions in AC_AtttitudeControl or AC_AtttitudeControl_Multi need to be overloaded. Almost all of the functions inside AC_AtttitudeControl library construct target attitude from different reference attitude definitions that are used in various flight modes, ex: input_euler_angle_roll_pitch_yaw, input_rate_bf_roll_pitch_yaw. Since these functions are used to interpret the reference to generate the target attitude, they are not directly part of the controller. reset_yaw_target_and_rate and inertial_frame_reset don't affect the controller because they only change the current attitude/yaw target.

I also find that not running the original controller means that ATC_THR_MIX_MIN, ATC_THR_MIX_MAN, ATC_THR_MIX_MAX have no effect during different stages of flight if we are flying with a custom controller. Because update_throttle_rpy_mix function runs inside rate_controller_run. So, it might be a good idea to run the primary controller regardless or move update_throttle_rpy_mix out of rate_controller_run function.

Pros and cons I find with this approach.

Pros: 
- easily access the attitude controller and all of its functionality
- follows the similar structure as in Attitude Controller
- almost no modification to the AC_AttitudeController code and small modification to the vehicle code

Cons: 
- custom controller param table might reset original controller parameter values(Tridge will better explain)
- Lack of systematic way to store multiple new controllers that might be introduced in the future
- the possibility of making further changes inside the attitude  controller to better support the custom controller

In addition to all that, I could not get the custom controller parameters to appear on the MAVProxy. Which is another problem that I need to look into. For this reason, the default value of CUST_CNT_ENB and CUST_CNT_MSK parameters were changed to enable the custom controller. Setting RC6_OPTION to 6 and simply raising RC6 channel above 1800 will switch to the custom controller. 

How to test:
1. Set CUSTOMCONTROL_ENABLED inside AC_CustomControl.h to 1 
2. Set ATC_CUST_CNT_ENB parameter to 1 
3. Assign RCx_OPTION to 109. Ex: RC6_OPTION 109
4. arm and takeoff
5. Switch RCx to high value 

No difference can be observed as expected while switching . A message will pop on ground control station when switching between controller.",False,21123,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21123,https://github.com/ArduPilot/ardupilot/pull/21123,closed,280,2,10,8,4,16,1,0,[{'name': 'GSoC'}],2022-07-06 04:54:18+00:00,2022-08-09 00:09:08+00:00,2920490.0,"33 days, 19:14:50","[{'comment_id': 915197803, 'comment_body': 'I would be tempted to not bother with the defines here. You have the function in the base class. You could probably just call it `log` or `log_write` ', 'comment_created': datetime.datetime(2022, 7, 6, 19, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915198150, 'comment_body': 'This should live in `AC_CustomControl.h`', 'comment_created': datetime.datetime(2022, 7, 6, 19, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915198979, 'comment_body': '```suggestion\r\n            copter.attitude_control->set_custom_controller(ch_flag == AuxSwitchPos::HIGH);\r\n\r\n```', 'comment_created': datetime.datetime(2022, 7, 6, 19, 47, 34, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915202204, 'comment_body': 'This is a little odd, the else if will always be true if it is compiled in. Better to do the else with defines.', 'comment_created': datetime.datetime(2022, 7, 6, 19, 52, 5, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915207140, 'comment_body': 'I think you will have to do this the other way round. Add sub group in in the attitude control upper level then load in the custom group. The same way the attitude controller is added to copter. ', 'comment_created': datetime.datetime(2022, 7, 6, 19, 58, 37, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 915419564, 'comment_body': 'Do you mean ""#if CUSTOMCONTROL_ENABLED == ENABLED && FRAME_CONFIG != HELI_FRAME\r\n"" can be removed with no effect? ', 'comment_created': datetime.datetime(2022, 7, 7, 3, 8, 40, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 915704916, 'comment_body': 'Yeah, the function exists in both controllers. So you can just call it all the time. It will be a minimal flash cost. Of course in this case calling it `log_custom_controller` is not correct, it becomes a generic attitude control log function. ', 'comment_created': datetime.datetime(2022, 7, 7, 10, 13, 42, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 918407482, 'comment_body': 'need to use              \r\n```\r\n ac_var_info = AC_AttitudeControl_Multi::var_info;\r\n```\r\nfor both cases, so the load_object_from_eeprom gets the whole subtree', 'comment_created': datetime.datetime(2022, 7, 11, 22, 47, 25, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 918408348, 'comment_body': 'need to default to 0\r\n', 'comment_created': datetime.datetime(2022, 7, 11, 22, 49, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}]","[{'commit_sha': '7897242651ab57828e1d6d2425d02034708a3b54', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15f76fda448298a6dd7100b55c47793d3b4b6768', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f0dd580364135fb2e2fd9c736399436c2400eb', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f61c67b7825bfe430ef812576050a3d84bd10579', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bdcd628b66a7cf8b95a9808f58ee94e99d917d1', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7650768cb24079c3a2abea5e92b2406594eaa9e5', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e665e6b068223acb551e69ee3873e401fcd98c1b', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b9446a6f9870f5372c503bb54b5bb5bc35295014', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
999644212,Update pid_info with integrator reset for logging purposes ,"This is a non-functional change, that update `_pid_info.I` when the integrator reset is called. The is added to allow better log inspection when the quadplane multi PID is not working or when the custom controller is active. ",True,21214,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21214,https://github.com/ArduPilot/ardupilot/pull/21214,closed,19,3,6,2,0,2,2,0,"[{'name': 'Copter'}, {'name': 'Plane'}]",2022-07-18 16:55:29+00:00,2022-07-19 10:40:04+00:00,63875.0,17:44:35,"[{'comment_id': 923622327, 'comment_body': 'Probably worth moving this in to the cpp. It cost more flash to have anything more than a trivial function in a header.', 'comment_created': datetime.datetime(2022, 7, 18, 17, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 923850290, 'comment_body': ""We actually don't need the `f`, the compiler can tell its supposed to be a float."", 'comment_created': datetime.datetime(2022, 7, 18, 20, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}]","[{'commit_sha': '9dfc3c0333c6d441e29d1b1e902d73832d83e3a8', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7f72479f195dcd6f0fbd9619e498a1539ff3b0b', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
999644212,Update pid_info with integrator reset for logging purposes ,"This is a non-functional change, that update `_pid_info.I` when the integrator reset is called. The is added to allow better log inspection when the quadplane multi PID is not working or when the custom controller is active. ",True,21214,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21214,https://github.com/ArduPilot/ardupilot/pull/21214,closed,19,3,6,2,0,2,2,0,"[{'name': 'Copter'}, {'name': 'Plane'}]",2022-07-18 16:55:29+00:00,2022-07-19 10:40:04+00:00,63875.0,17:44:35,"[{'comment_id': 923622327, 'comment_body': 'Probably worth moving this in to the cpp. It cost more flash to have anything more than a trivial function in a header.', 'comment_created': datetime.datetime(2022, 7, 18, 17, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 923850290, 'comment_body': ""We actually don't need the `f`, the compiler can tell its supposed to be a float."", 'comment_created': datetime.datetime(2022, 7, 18, 20, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}]","[{'commit_sha': '9dfc3c0333c6d441e29d1b1e902d73832d83e3a8', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7f72479f195dcd6f0fbd9619e498a1539ff3b0b', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
999644212,Update pid_info with integrator reset for logging purposes ,"This is a non-functional change, that update `_pid_info.I` when the integrator reset is called. The is added to allow better log inspection when the quadplane multi PID is not working or when the custom controller is active. ",True,21214,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21214,https://github.com/ArduPilot/ardupilot/pull/21214,closed,19,3,6,2,0,2,2,0,"[{'name': 'Copter'}, {'name': 'Plane'}]",2022-07-18 16:55:29+00:00,2022-07-19 10:40:04+00:00,63875.0,17:44:35,"[{'comment_id': 923622327, 'comment_body': 'Probably worth moving this in to the cpp. It cost more flash to have anything more than a trivial function in a header.', 'comment_created': datetime.datetime(2022, 7, 18, 17, 11, 2, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 923850290, 'comment_body': ""We actually don't need the `f`, the compiler can tell its supposed to be a float."", 'comment_created': datetime.datetime(2022, 7, 18, 20, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}]","[{'commit_sha': '9dfc3c0333c6d441e29d1b1e902d73832d83e3a8', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7f72479f195dcd6f0fbd9619e498a1539ff3b0b', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
999862385,Custom Controller Support 2nd Version,"This PR has the same aim with the following PR [Custom Controller Support #21123
](https://github.com/ArduPilot/ardupilot/pull/21123), 

This PR has the following feature flag to compile out the changes in original code.
- In-flight run time transition between original and custom controller with RC switch.
- Proper copter rate controller reset to provide bumpless transition from custom controller
- Ground and inflight spool state separation to avoid build-up during arming and takeoff with the custom controller
- bitmask to choose which axis to run the custom controller for

I also added an example empty and PID controller. PID controller has the same architecture as the copter, but gains are scaled by 90%. In the example, the custom controller gets its already input-shaped target from the AC_AttitudeControl library. 

I also find that not running the original controller means that ATC_THR_MIX_MIN, ATC_THR_MIX_MAN, ATC_THR_MIX_MAX have no effect during different stages of flight if we are flying with a custom controller. Because update_throttle_rpy_mix function runs inside rate_controller_run. So, it might be a good idea to run the primary controller regardless or move update_throttle_rpy_mix out of rate_controller_run function.

Pros and cons I find with this approach.

Pros:
- Easily access the attitude controller and all of its functionality
- No modification to the AC_AttitudeController code and small modification to the vehicle code
- Systematic way to store multiple new controllers that might be introduced in the future
- Complete separation between custom controller and AttitudeControl libraries

Cons:
- Increase flash space with each custom controller, 

How to test:

Set CUSTOMCONTROL_ENABLED inside AC_CustomControl.h to 1
Set CSC_CONT_TYPE parameter to 2(working PID controller)
Assign RCx_OPTION to 109. Ex: RC6_OPTION 109
arm and takeoff
Switch RCx to high value
No difference can be observed as expected while switching. A message will pop on the ground control station when switching between controllers.",True,21216,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21216,https://github.com/ArduPilot/ardupilot/pull/21216,closed,1107,0,19,8,16,69,1,0,[{'name': 'GSoC'}],2022-07-18 19:57:52+00:00,2022-08-30 03:10:10+00:00,3654738.0,"42 days, 7:12:18","[{'comment_id': 923987565, 'comment_body': 'double break', 'comment_created': datetime.datetime(2022, 7, 19, 1, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923987688, 'comment_body': ""don't use index 0 for param tables, start at 1"", 'comment_created': datetime.datetime(2022, 7, 19, 1, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923988716, 'comment_body': 'disable by default. ', 'comment_created': datetime.datetime(2022, 7, 19, 1, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 923989193, 'comment_body': 'needs to default disabled', 'comment_created': datetime.datetime(2022, 7, 19, 1, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993089, 'comment_body': 'double break', 'comment_created': datetime.datetime(2022, 7, 19, 1, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993526, 'comment_body': 'need param docs', 'comment_created': datetime.datetime(2022, 7, 19, 2, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993833, 'comment_body': 'a #error for attempting to build with heli and custom control would be better', 'comment_created': datetime.datetime(2022, 7, 19, 2, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 940683637, 'comment_body': 'Needs a blank line at the end. ', 'comment_created': datetime.datetime(2022, 8, 8, 21, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940683803, 'comment_body': '```suggestion\r\n    if (fabsf(e) < delta) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940683957, 'comment_body': '```suggestion\r\n                if (is_zero(_limit.get())) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940684036, 'comment_body': '```suggestion\r\n                } else {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940684149, 'comment_body': '```suggestion\r\n                } else {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688048, 'comment_body': '```suggestion\r\n                if (is_zero(_limit.get())) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688489, 'comment_body': 'Needs a blank line.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688981, 'comment_body': '```suggestion\r\n    AP_GROUPINFO(""WC"",1,AC_ADRC,_wc,10),\r\n```\r\nShould start at index 1, index 0 can be a bit hit and miss.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940689465, 'comment_body': '```suggestion\r\n        return 0.0;\r\n```\r\nWere trying to move away from adding the `f`.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940689546, 'comment_body': '```suggestion\r\n    if (_flags.reset_filter) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940690266, 'comment_body': '```suggestion\r\n    void reset_filter() {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940690950, 'comment_body': 'probably not worth the `:1` It saves memory (although not when there is only one like this) but it costs CPU.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940696381, 'comment_body': 'You could use a single backend here if you share a param table. Rather than using a single table you would just have to offset the indexes. So we might leave params 1:20 free for a users backend. PID could use 20:30, INDI could use 30:40 and ADRC 40:50.\r\n\r\nThat is how the battery backends work, https://github.com/ArduPilot/ardupilot/blob/d555c4923051f11e84c057e31fbb1ebd8833f22d/libraries/AP_BattMonitor/AP_BattMonitor_Analog.cpp#L53\r\n\r\nhttps://github.com/ArduPilot/ardupilot/blob/d555c4923051f11e84c057e31fbb1ebd8833f22d/libraries/AP_BattMonitor/AP_BattMonitor_SMBus.cpp#L9-L27\r\n\r\nI assume that param conflict is the only reason to have more than one backend? No plans to run two at once?\r\n', 'comment_created': datetime.datetime(2022, 8, 8, 21, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940697362, 'comment_body': 'newline', 'comment_created': datetime.datetime(2022, 8, 8, 21, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940697712, 'comment_body': 'random indenting', 'comment_created': datetime.datetime(2022, 8, 8, 21, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940698115, 'comment_body': 'Starting at index 6?', 'comment_created': datetime.datetime(2022, 8, 8, 21, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940698396, 'comment_body': 'remove', 'comment_created': datetime.datetime(2022, 8, 8, 21, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940728679, 'comment_body': ""I was planning on adding the capability to switch between multiple controller during flight without reboot, but I left it to a later until I have a better understanding of resetting required during switching. \r\n\r\nAlthough it is highly unlikely an attitude controller would need more than 30-40 parameters, I still didn't want to limit users to pre-set parameter range. Also, I am thinking of expanding the current approach to involve a position-velocity controller as well. "", 'comment_created': datetime.datetime(2022, 8, 8, 22, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 940730090, 'comment_body': 'I copied ADRC library implementation from https://github.com/ArduPilot/ardupilot/pull/20243. Maybe it will be better to skip the example backends(only leave PID perhaps?) implementation until this PR goes in. ', 'comment_created': datetime.datetime(2022, 8, 8, 22, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 942489260, 'comment_body': '```suggestion\r\n#define CUSTOMCONTROL_ENABLED (CONFIG_HAL_BOARD == HAL_BOARD_SITL)\r\n```\r\nMaybe enable for SITL, should so at least the code is built.', 'comment_created': datetime.datetime(2022, 8, 10, 14, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942494972, 'comment_body': 'Maybe better to remove the unserscore in copter and add it back where it is needed. That would allow this to be `CSC2_RAT_PIT_I` rather than `CSC_2_RAT_PIT_I` for example.\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 10, 14, 5, 7, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942497681, 'comment_body': 'Were getting truncated param names because the prefix is too long. This comes out as `CSC_2_RAT_YAW_SM` for example.', 'comment_created': datetime.datetime(2022, 8, 10, 14, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942498933, 'comment_body': 'Yeah, were getting truncated params in the PID backend, so we need to save some characters in the prefix somewhere. ', 'comment_created': datetime.datetime(2022, 8, 10, 14, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942518044, 'comment_body': ""I'm not sure this is a good idea, it might end up setting a massive I term that would take ages to decay off. Might be better to just 0?"", 'comment_created': datetime.datetime(2022, 8, 10, 14, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 943051554, 'comment_body': 'How about this? We only allow compilation on a 2 MB flash board or SITL. \r\n`#define CUSTOMCONTROL_ENABLED (!HAL_MINIMIZE_FEATURES && !defined(HAL_BUILD_AP_PERIPH) && BOARD_FLASH_SIZE > 1024 || CONFIG_HAL_BOARD == HAL_BOARD_SITL)\r\n`', 'comment_created': datetime.datetime(2022, 8, 11, 2, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 943052622, 'comment_body': ""I didn't realize we were hitting the 16 char limit on parameter names. Changing CSC to CC."", 'comment_created': datetime.datetime(2022, 8, 11, 2, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 943074471, 'comment_body': ""I agree with your reasoning, I'll do SITL experiment with extreme gains to see its effect. We have multiple examples in POS control library for setting integrator to a non-zero value. But for attitude controller the motors have a much faster response time than the attitude controller itself, so the twitch would probably be very hard to detect with the naked eye. \r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L957\r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L540\r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L768\r\n\r\nMaybe @lthall can help us with this. "", 'comment_created': datetime.datetime(2022, 8, 11, 3, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 945301612, 'comment_body': 'Looks like this warning is catching us out now we have enabled on SITL. Any reason it would not work on heli in SITL? Maybe we just skip this check for SITL?', 'comment_created': datetime.datetime(2022, 8, 14, 14, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 945448149, 'comment_body': 'I had a problem while passing base class type into the custom controller and its backends, so for simplicity, I only focused on multicopter. After looking at it again, we can now compile on Heli, as well.', 'comment_created': datetime.datetime(2022, 8, 15, 6, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 946236418, 'comment_body': 'should be compiled into SITL by default, but not real boards, but should have a ./waf configure --enable-custom-controller option to make it easy to enable on any board (see opendroneid-enable as an example)', 'comment_created': datetime.datetime(2022, 8, 16, 0, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 946237409, 'comment_body': 'In other places we call the AC_AttitudeControl argument ""att_control"" (no extra ""i"")', 'comment_created': datetime.datetime(2022, 8, 16, 0, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 946237836, 'comment_body': 'personally I\'d drop the ""_CONT_"" part of this variablae and just make it ""CC_TYPE"".  ', 'comment_created': datetime.datetime(2022, 8, 16, 0, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 951993134, 'comment_body': 'Change it to att_control', 'comment_created': datetime.datetime(2022, 8, 22, 23, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 952044111, 'comment_body': 'Added --enable-custom-controller option. Also forced CUSTOMCONTROL_ENABLED to 0 for Heli in config.h.', 'comment_created': datetime.datetime(2022, 8, 23, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 953488356, 'comment_body': 'needs to be _TYPE to match string below', 'comment_created': datetime.datetime(2022, 8, 24, 8, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953489297, 'comment_body': 'needs to be _AXIS_MASK', 'comment_created': datetime.datetime(2022, 8, 24, 8, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953494221, 'comment_body': 'this should be AP_CUSTOMCONTROL_ENABLED\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953494637, 'comment_body': 'wait_altitude takes a `minimum_duration`, better than doing a simple once-off poll of the altitude.\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953494714, 'comment_body': 'should be AP_CUSTOMCONTROL_ENABLED', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953495404, 'comment_body': '```suggestion\r\n        if cc_type = self.get_parameter(""CC_TYPE"") != 2 :\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953495657, 'comment_body': 'not needed?', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953495898, 'comment_body': 'AP_CUSTOMCONTROL_ENABLED', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953496330, 'comment_body': 'The usual pattern we use is to create a context and then check the context for the statustext (`check_context=True`)\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953501079, 'comment_body': '```suggestion\r\n        self.context_push()\r\n\r\n        # switch custom controller on\r\n        self.set_rc(6, 2000)\r\n        self.wait_statustext(""Custom controller is ON"")\r\n```\r\nI\'m assuming you *really* don\'t need 30 seconds to turn the controller on :-)\r\n\r\n.... then pop the context off right down the bottom of the test.', 'comment_created': datetime.datetime(2022, 8, 24, 8, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953681430, 'comment_body': 'I pushed the changes. Can you check again?', 'comment_created': datetime.datetime(2022, 8, 24, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 954343590, 'comment_body': '```suggestion\r\n        self.do_RTL()\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 954343887, 'comment_body': '```suggestion\r\n        self.wait_statustext(""Custom controller is ON"", check_context=True)\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 954344018, 'comment_body': '```suggestion\r\n        self.wait_statustext(""Custom controller is OFF"", check_context=True)\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957658101, 'comment_body': 'If you define out the whole block users would get the ""Invalid channel option"" warning. I\'m not really sure if that is better or not. I guess better to give a warning than just not working. \r\n\r\n```suggestion\r\n#if AC_CUSTOMCONTROL_MULTI_ENABLED == ENABLED\r\n        case AUX_FUNC::CUSTOM_CONTROLLER:\r\n            copter.custom_control.set_custom_controller(ch_flag == AuxSwitchPos::HIGH);\r\n            break;\r\n#endif\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957660295, 'comment_body': 'I still think these should reset to zero. This could result in massive windup that takes several seconds to clear.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957661564, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957661894, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957664117, 'comment_body': 'I would be tempted to just hard code these defines in the PID constructions, its not like anyone would need to change these, its only a example. They are exact duplicated of the defines in AC_Attitude control which could lead to confusion. You may even just be able to include those directly?', 'comment_created': datetime.datetime(2022, 8, 29, 18, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957664197, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957665404, 'comment_body': 'These have not made it.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957688596, 'comment_body': ""Although the other channel options don't follow a similar pattern, I agree it is better to give a warning."", 'comment_created': datetime.datetime(2022, 8, 29, 18, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957695459, 'comment_body': 'We were already including AC_AttitudeControl_Multi through frontend, so I removed them. ', 'comment_created': datetime.datetime(2022, 8, 29, 18, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957710216, 'comment_body': 'After further thinking and checking flight logs from my previous flight tests, the main controller could stabilize the aircraft without resetting the integrator at all or relaxing the target attitude. We already relaxed the target attitude and attitude rate. Until further argument is made towards this, I agree it is safe to reset to zero. ', 'comment_created': datetime.datetime(2022, 8, 29, 19, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957872615, 'comment_body': '```suggestion\r\n            raise NotAchievedException(""Custom controller is not switched to PID backend."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 23, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957872687, 'comment_body': '```suggestion\r\n            raise NotAchievedException(""Custom controller is not stable."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 23, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957877884, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 29, 23, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957877958, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 29, 23, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}]","[{'commit_sha': '4b851b7d13e3586821697a28a5e378954c6e740c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9517336a51042998e83b70ec9c06863c1582f48d', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4e574917c0811e6929143e02904cacc4e300f0', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2994865d18be75778d9d3b3006a0e284050f7c20', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c75425a6bc0fea516cb85980e6c2c8ef17410968', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3842b162c2436d3c710208ad24962b63f63772e2', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '665bb83e2afa6d7a1c7915dca2be2c5e1d7c9817', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5189e18e00344aca7df5579d35e6d9e1e9631dcb', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
999862385,Custom Controller Support 2nd Version,"This PR has the same aim with the following PR [Custom Controller Support #21123
](https://github.com/ArduPilot/ardupilot/pull/21123), 

This PR has the following feature flag to compile out the changes in original code.
- In-flight run time transition between original and custom controller with RC switch.
- Proper copter rate controller reset to provide bumpless transition from custom controller
- Ground and inflight spool state separation to avoid build-up during arming and takeoff with the custom controller
- bitmask to choose which axis to run the custom controller for

I also added an example empty and PID controller. PID controller has the same architecture as the copter, but gains are scaled by 90%. In the example, the custom controller gets its already input-shaped target from the AC_AttitudeControl library. 

I also find that not running the original controller means that ATC_THR_MIX_MIN, ATC_THR_MIX_MAN, ATC_THR_MIX_MAX have no effect during different stages of flight if we are flying with a custom controller. Because update_throttle_rpy_mix function runs inside rate_controller_run. So, it might be a good idea to run the primary controller regardless or move update_throttle_rpy_mix out of rate_controller_run function.

Pros and cons I find with this approach.

Pros:
- Easily access the attitude controller and all of its functionality
- No modification to the AC_AttitudeController code and small modification to the vehicle code
- Systematic way to store multiple new controllers that might be introduced in the future
- Complete separation between custom controller and AttitudeControl libraries

Cons:
- Increase flash space with each custom controller, 

How to test:

Set CUSTOMCONTROL_ENABLED inside AC_CustomControl.h to 1
Set CSC_CONT_TYPE parameter to 2(working PID controller)
Assign RCx_OPTION to 109. Ex: RC6_OPTION 109
arm and takeoff
Switch RCx to high value
No difference can be observed as expected while switching. A message will pop on the ground control station when switching between controllers.",True,21216,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21216,https://github.com/ArduPilot/ardupilot/pull/21216,closed,1107,0,19,8,16,69,1,0,[{'name': 'GSoC'}],2022-07-18 19:57:52+00:00,2022-08-30 03:10:10+00:00,3654738.0,"42 days, 7:12:18","[{'comment_id': 923987565, 'comment_body': 'double break', 'comment_created': datetime.datetime(2022, 7, 19, 1, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923987688, 'comment_body': ""don't use index 0 for param tables, start at 1"", 'comment_created': datetime.datetime(2022, 7, 19, 1, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923988716, 'comment_body': 'disable by default. ', 'comment_created': datetime.datetime(2022, 7, 19, 1, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 923989193, 'comment_body': 'needs to default disabled', 'comment_created': datetime.datetime(2022, 7, 19, 1, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993089, 'comment_body': 'double break', 'comment_created': datetime.datetime(2022, 7, 19, 1, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993526, 'comment_body': 'need param docs', 'comment_created': datetime.datetime(2022, 7, 19, 2, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993833, 'comment_body': 'a #error for attempting to build with heli and custom control would be better', 'comment_created': datetime.datetime(2022, 7, 19, 2, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 940683637, 'comment_body': 'Needs a blank line at the end. ', 'comment_created': datetime.datetime(2022, 8, 8, 21, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940683803, 'comment_body': '```suggestion\r\n    if (fabsf(e) < delta) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940683957, 'comment_body': '```suggestion\r\n                if (is_zero(_limit.get())) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940684036, 'comment_body': '```suggestion\r\n                } else {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940684149, 'comment_body': '```suggestion\r\n                } else {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688048, 'comment_body': '```suggestion\r\n                if (is_zero(_limit.get())) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688489, 'comment_body': 'Needs a blank line.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688981, 'comment_body': '```suggestion\r\n    AP_GROUPINFO(""WC"",1,AC_ADRC,_wc,10),\r\n```\r\nShould start at index 1, index 0 can be a bit hit and miss.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940689465, 'comment_body': '```suggestion\r\n        return 0.0;\r\n```\r\nWere trying to move away from adding the `f`.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940689546, 'comment_body': '```suggestion\r\n    if (_flags.reset_filter) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940690266, 'comment_body': '```suggestion\r\n    void reset_filter() {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940690950, 'comment_body': 'probably not worth the `:1` It saves memory (although not when there is only one like this) but it costs CPU.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940696381, 'comment_body': 'You could use a single backend here if you share a param table. Rather than using a single table you would just have to offset the indexes. So we might leave params 1:20 free for a users backend. PID could use 20:30, INDI could use 30:40 and ADRC 40:50.\r\n\r\nThat is how the battery backends work, https://github.com/ArduPilot/ardupilot/blob/d555c4923051f11e84c057e31fbb1ebd8833f22d/libraries/AP_BattMonitor/AP_BattMonitor_Analog.cpp#L53\r\n\r\nhttps://github.com/ArduPilot/ardupilot/blob/d555c4923051f11e84c057e31fbb1ebd8833f22d/libraries/AP_BattMonitor/AP_BattMonitor_SMBus.cpp#L9-L27\r\n\r\nI assume that param conflict is the only reason to have more than one backend? No plans to run two at once?\r\n', 'comment_created': datetime.datetime(2022, 8, 8, 21, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940697362, 'comment_body': 'newline', 'comment_created': datetime.datetime(2022, 8, 8, 21, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940697712, 'comment_body': 'random indenting', 'comment_created': datetime.datetime(2022, 8, 8, 21, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940698115, 'comment_body': 'Starting at index 6?', 'comment_created': datetime.datetime(2022, 8, 8, 21, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940698396, 'comment_body': 'remove', 'comment_created': datetime.datetime(2022, 8, 8, 21, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940728679, 'comment_body': ""I was planning on adding the capability to switch between multiple controller during flight without reboot, but I left it to a later until I have a better understanding of resetting required during switching. \r\n\r\nAlthough it is highly unlikely an attitude controller would need more than 30-40 parameters, I still didn't want to limit users to pre-set parameter range. Also, I am thinking of expanding the current approach to involve a position-velocity controller as well. "", 'comment_created': datetime.datetime(2022, 8, 8, 22, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 940730090, 'comment_body': 'I copied ADRC library implementation from https://github.com/ArduPilot/ardupilot/pull/20243. Maybe it will be better to skip the example backends(only leave PID perhaps?) implementation until this PR goes in. ', 'comment_created': datetime.datetime(2022, 8, 8, 22, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 942489260, 'comment_body': '```suggestion\r\n#define CUSTOMCONTROL_ENABLED (CONFIG_HAL_BOARD == HAL_BOARD_SITL)\r\n```\r\nMaybe enable for SITL, should so at least the code is built.', 'comment_created': datetime.datetime(2022, 8, 10, 14, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942494972, 'comment_body': 'Maybe better to remove the unserscore in copter and add it back where it is needed. That would allow this to be `CSC2_RAT_PIT_I` rather than `CSC_2_RAT_PIT_I` for example.\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 10, 14, 5, 7, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942497681, 'comment_body': 'Were getting truncated param names because the prefix is too long. This comes out as `CSC_2_RAT_YAW_SM` for example.', 'comment_created': datetime.datetime(2022, 8, 10, 14, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942498933, 'comment_body': 'Yeah, were getting truncated params in the PID backend, so we need to save some characters in the prefix somewhere. ', 'comment_created': datetime.datetime(2022, 8, 10, 14, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942518044, 'comment_body': ""I'm not sure this is a good idea, it might end up setting a massive I term that would take ages to decay off. Might be better to just 0?"", 'comment_created': datetime.datetime(2022, 8, 10, 14, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 943051554, 'comment_body': 'How about this? We only allow compilation on a 2 MB flash board or SITL. \r\n`#define CUSTOMCONTROL_ENABLED (!HAL_MINIMIZE_FEATURES && !defined(HAL_BUILD_AP_PERIPH) && BOARD_FLASH_SIZE > 1024 || CONFIG_HAL_BOARD == HAL_BOARD_SITL)\r\n`', 'comment_created': datetime.datetime(2022, 8, 11, 2, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 943052622, 'comment_body': ""I didn't realize we were hitting the 16 char limit on parameter names. Changing CSC to CC."", 'comment_created': datetime.datetime(2022, 8, 11, 2, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 943074471, 'comment_body': ""I agree with your reasoning, I'll do SITL experiment with extreme gains to see its effect. We have multiple examples in POS control library for setting integrator to a non-zero value. But for attitude controller the motors have a much faster response time than the attitude controller itself, so the twitch would probably be very hard to detect with the naked eye. \r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L957\r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L540\r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L768\r\n\r\nMaybe @lthall can help us with this. "", 'comment_created': datetime.datetime(2022, 8, 11, 3, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 945301612, 'comment_body': 'Looks like this warning is catching us out now we have enabled on SITL. Any reason it would not work on heli in SITL? Maybe we just skip this check for SITL?', 'comment_created': datetime.datetime(2022, 8, 14, 14, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 945448149, 'comment_body': 'I had a problem while passing base class type into the custom controller and its backends, so for simplicity, I only focused on multicopter. After looking at it again, we can now compile on Heli, as well.', 'comment_created': datetime.datetime(2022, 8, 15, 6, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 946236418, 'comment_body': 'should be compiled into SITL by default, but not real boards, but should have a ./waf configure --enable-custom-controller option to make it easy to enable on any board (see opendroneid-enable as an example)', 'comment_created': datetime.datetime(2022, 8, 16, 0, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 946237409, 'comment_body': 'In other places we call the AC_AttitudeControl argument ""att_control"" (no extra ""i"")', 'comment_created': datetime.datetime(2022, 8, 16, 0, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 946237836, 'comment_body': 'personally I\'d drop the ""_CONT_"" part of this variablae and just make it ""CC_TYPE"".  ', 'comment_created': datetime.datetime(2022, 8, 16, 0, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 951993134, 'comment_body': 'Change it to att_control', 'comment_created': datetime.datetime(2022, 8, 22, 23, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 952044111, 'comment_body': 'Added --enable-custom-controller option. Also forced CUSTOMCONTROL_ENABLED to 0 for Heli in config.h.', 'comment_created': datetime.datetime(2022, 8, 23, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 953488356, 'comment_body': 'needs to be _TYPE to match string below', 'comment_created': datetime.datetime(2022, 8, 24, 8, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953489297, 'comment_body': 'needs to be _AXIS_MASK', 'comment_created': datetime.datetime(2022, 8, 24, 8, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953494221, 'comment_body': 'this should be AP_CUSTOMCONTROL_ENABLED\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953494637, 'comment_body': 'wait_altitude takes a `minimum_duration`, better than doing a simple once-off poll of the altitude.\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953494714, 'comment_body': 'should be AP_CUSTOMCONTROL_ENABLED', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953495404, 'comment_body': '```suggestion\r\n        if cc_type = self.get_parameter(""CC_TYPE"") != 2 :\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953495657, 'comment_body': 'not needed?', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953495898, 'comment_body': 'AP_CUSTOMCONTROL_ENABLED', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953496330, 'comment_body': 'The usual pattern we use is to create a context and then check the context for the statustext (`check_context=True`)\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953501079, 'comment_body': '```suggestion\r\n        self.context_push()\r\n\r\n        # switch custom controller on\r\n        self.set_rc(6, 2000)\r\n        self.wait_statustext(""Custom controller is ON"")\r\n```\r\nI\'m assuming you *really* don\'t need 30 seconds to turn the controller on :-)\r\n\r\n.... then pop the context off right down the bottom of the test.', 'comment_created': datetime.datetime(2022, 8, 24, 8, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953681430, 'comment_body': 'I pushed the changes. Can you check again?', 'comment_created': datetime.datetime(2022, 8, 24, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 954343590, 'comment_body': '```suggestion\r\n        self.do_RTL()\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 954343887, 'comment_body': '```suggestion\r\n        self.wait_statustext(""Custom controller is ON"", check_context=True)\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 954344018, 'comment_body': '```suggestion\r\n        self.wait_statustext(""Custom controller is OFF"", check_context=True)\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957658101, 'comment_body': 'If you define out the whole block users would get the ""Invalid channel option"" warning. I\'m not really sure if that is better or not. I guess better to give a warning than just not working. \r\n\r\n```suggestion\r\n#if AC_CUSTOMCONTROL_MULTI_ENABLED == ENABLED\r\n        case AUX_FUNC::CUSTOM_CONTROLLER:\r\n            copter.custom_control.set_custom_controller(ch_flag == AuxSwitchPos::HIGH);\r\n            break;\r\n#endif\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957660295, 'comment_body': 'I still think these should reset to zero. This could result in massive windup that takes several seconds to clear.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957661564, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957661894, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957664117, 'comment_body': 'I would be tempted to just hard code these defines in the PID constructions, its not like anyone would need to change these, its only a example. They are exact duplicated of the defines in AC_Attitude control which could lead to confusion. You may even just be able to include those directly?', 'comment_created': datetime.datetime(2022, 8, 29, 18, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957664197, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957665404, 'comment_body': 'These have not made it.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957688596, 'comment_body': ""Although the other channel options don't follow a similar pattern, I agree it is better to give a warning."", 'comment_created': datetime.datetime(2022, 8, 29, 18, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957695459, 'comment_body': 'We were already including AC_AttitudeControl_Multi through frontend, so I removed them. ', 'comment_created': datetime.datetime(2022, 8, 29, 18, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957710216, 'comment_body': 'After further thinking and checking flight logs from my previous flight tests, the main controller could stabilize the aircraft without resetting the integrator at all or relaxing the target attitude. We already relaxed the target attitude and attitude rate. Until further argument is made towards this, I agree it is safe to reset to zero. ', 'comment_created': datetime.datetime(2022, 8, 29, 19, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957872615, 'comment_body': '```suggestion\r\n            raise NotAchievedException(""Custom controller is not switched to PID backend."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 23, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957872687, 'comment_body': '```suggestion\r\n            raise NotAchievedException(""Custom controller is not stable."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 23, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957877884, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 29, 23, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957877958, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 29, 23, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}]","[{'commit_sha': '4b851b7d13e3586821697a28a5e378954c6e740c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9517336a51042998e83b70ec9c06863c1582f48d', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4e574917c0811e6929143e02904cacc4e300f0', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2994865d18be75778d9d3b3006a0e284050f7c20', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c75425a6bc0fea516cb85980e6c2c8ef17410968', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3842b162c2436d3c710208ad24962b63f63772e2', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '665bb83e2afa6d7a1c7915dca2be2c5e1d7c9817', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5189e18e00344aca7df5579d35e6d9e1e9631dcb', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
999862385,Custom Controller Support 2nd Version,"This PR has the same aim with the following PR [Custom Controller Support #21123
](https://github.com/ArduPilot/ardupilot/pull/21123), 

This PR has the following feature flag to compile out the changes in original code.
- In-flight run time transition between original and custom controller with RC switch.
- Proper copter rate controller reset to provide bumpless transition from custom controller
- Ground and inflight spool state separation to avoid build-up during arming and takeoff with the custom controller
- bitmask to choose which axis to run the custom controller for

I also added an example empty and PID controller. PID controller has the same architecture as the copter, but gains are scaled by 90%. In the example, the custom controller gets its already input-shaped target from the AC_AttitudeControl library. 

I also find that not running the original controller means that ATC_THR_MIX_MIN, ATC_THR_MIX_MAN, ATC_THR_MIX_MAX have no effect during different stages of flight if we are flying with a custom controller. Because update_throttle_rpy_mix function runs inside rate_controller_run. So, it might be a good idea to run the primary controller regardless or move update_throttle_rpy_mix out of rate_controller_run function.

Pros and cons I find with this approach.

Pros:
- Easily access the attitude controller and all of its functionality
- No modification to the AC_AttitudeController code and small modification to the vehicle code
- Systematic way to store multiple new controllers that might be introduced in the future
- Complete separation between custom controller and AttitudeControl libraries

Cons:
- Increase flash space with each custom controller, 

How to test:

Set CUSTOMCONTROL_ENABLED inside AC_CustomControl.h to 1
Set CSC_CONT_TYPE parameter to 2(working PID controller)
Assign RCx_OPTION to 109. Ex: RC6_OPTION 109
arm and takeoff
Switch RCx to high value
No difference can be observed as expected while switching. A message will pop on the ground control station when switching between controllers.",True,21216,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21216,https://github.com/ArduPilot/ardupilot/pull/21216,closed,1107,0,19,8,16,69,1,0,[{'name': 'GSoC'}],2022-07-18 19:57:52+00:00,2022-08-30 03:10:10+00:00,3654738.0,"42 days, 7:12:18","[{'comment_id': 923987565, 'comment_body': 'double break', 'comment_created': datetime.datetime(2022, 7, 19, 1, 44, 42, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923987688, 'comment_body': ""don't use index 0 for param tables, start at 1"", 'comment_created': datetime.datetime(2022, 7, 19, 1, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923988716, 'comment_body': 'disable by default. ', 'comment_created': datetime.datetime(2022, 7, 19, 1, 47, 45, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 923989193, 'comment_body': 'needs to default disabled', 'comment_created': datetime.datetime(2022, 7, 19, 1, 48, 51, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993089, 'comment_body': 'double break', 'comment_created': datetime.datetime(2022, 7, 19, 1, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993526, 'comment_body': 'need param docs', 'comment_created': datetime.datetime(2022, 7, 19, 2, 0, 31, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 923993833, 'comment_body': 'a #error for attempting to build with heli and custom control would be better', 'comment_created': datetime.datetime(2022, 7, 19, 2, 1, 13, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 940683637, 'comment_body': 'Needs a blank line at the end. ', 'comment_created': datetime.datetime(2022, 8, 8, 21, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940683803, 'comment_body': '```suggestion\r\n    if (fabsf(e) < delta) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 34, 54, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940683957, 'comment_body': '```suggestion\r\n                if (is_zero(_limit.get())) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940684036, 'comment_body': '```suggestion\r\n                } else {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940684149, 'comment_body': '```suggestion\r\n                } else {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 35, 28, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688048, 'comment_body': '```suggestion\r\n                if (is_zero(_limit.get())) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688489, 'comment_body': 'Needs a blank line.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 42, 3, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940688981, 'comment_body': '```suggestion\r\n    AP_GROUPINFO(""WC"",1,AC_ADRC,_wc,10),\r\n```\r\nShould start at index 1, index 0 can be a bit hit and miss.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940689465, 'comment_body': '```suggestion\r\n        return 0.0;\r\n```\r\nWere trying to move away from adding the `f`.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 43, 37, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940689546, 'comment_body': '```suggestion\r\n    if (_flags.reset_filter) {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 43, 46, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940690266, 'comment_body': '```suggestion\r\n    void reset_filter() {\r\n```', 'comment_created': datetime.datetime(2022, 8, 8, 21, 44, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940690950, 'comment_body': 'probably not worth the `:1` It saves memory (although not when there is only one like this) but it costs CPU.', 'comment_created': datetime.datetime(2022, 8, 8, 21, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940696381, 'comment_body': 'You could use a single backend here if you share a param table. Rather than using a single table you would just have to offset the indexes. So we might leave params 1:20 free for a users backend. PID could use 20:30, INDI could use 30:40 and ADRC 40:50.\r\n\r\nThat is how the battery backends work, https://github.com/ArduPilot/ardupilot/blob/d555c4923051f11e84c057e31fbb1ebd8833f22d/libraries/AP_BattMonitor/AP_BattMonitor_Analog.cpp#L53\r\n\r\nhttps://github.com/ArduPilot/ardupilot/blob/d555c4923051f11e84c057e31fbb1ebd8833f22d/libraries/AP_BattMonitor/AP_BattMonitor_SMBus.cpp#L9-L27\r\n\r\nI assume that param conflict is the only reason to have more than one backend? No plans to run two at once?\r\n', 'comment_created': datetime.datetime(2022, 8, 8, 21, 52, 56, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940697362, 'comment_body': 'newline', 'comment_created': datetime.datetime(2022, 8, 8, 21, 54, 42, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940697712, 'comment_body': 'random indenting', 'comment_created': datetime.datetime(2022, 8, 8, 21, 55, 14, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940698115, 'comment_body': 'Starting at index 6?', 'comment_created': datetime.datetime(2022, 8, 8, 21, 55, 54, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940698396, 'comment_body': 'remove', 'comment_created': datetime.datetime(2022, 8, 8, 21, 56, 22, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 940728679, 'comment_body': ""I was planning on adding the capability to switch between multiple controller during flight without reboot, but I left it to a later until I have a better understanding of resetting required during switching. \r\n\r\nAlthough it is highly unlikely an attitude controller would need more than 30-40 parameters, I still didn't want to limit users to pre-set parameter range. Also, I am thinking of expanding the current approach to involve a position-velocity controller as well. "", 'comment_created': datetime.datetime(2022, 8, 8, 22, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 940730090, 'comment_body': 'I copied ADRC library implementation from https://github.com/ArduPilot/ardupilot/pull/20243. Maybe it will be better to skip the example backends(only leave PID perhaps?) implementation until this PR goes in. ', 'comment_created': datetime.datetime(2022, 8, 8, 22, 53, 5, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 942489260, 'comment_body': '```suggestion\r\n#define CUSTOMCONTROL_ENABLED (CONFIG_HAL_BOARD == HAL_BOARD_SITL)\r\n```\r\nMaybe enable for SITL, should so at least the code is built.', 'comment_created': datetime.datetime(2022, 8, 10, 14, 0, 12, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942494972, 'comment_body': 'Maybe better to remove the unserscore in copter and add it back where it is needed. That would allow this to be `CSC2_RAT_PIT_I` rather than `CSC_2_RAT_PIT_I` for example.\r\n\r\n\r\n\r\n', 'comment_created': datetime.datetime(2022, 8, 10, 14, 5, 7, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942497681, 'comment_body': 'Were getting truncated param names because the prefix is too long. This comes out as `CSC_2_RAT_YAW_SM` for example.', 'comment_created': datetime.datetime(2022, 8, 10, 14, 7, 19, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942498933, 'comment_body': 'Yeah, were getting truncated params in the PID backend, so we need to save some characters in the prefix somewhere. ', 'comment_created': datetime.datetime(2022, 8, 10, 14, 8, 24, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 942518044, 'comment_body': ""I'm not sure this is a good idea, it might end up setting a massive I term that would take ages to decay off. Might be better to just 0?"", 'comment_created': datetime.datetime(2022, 8, 10, 14, 23, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 943051554, 'comment_body': 'How about this? We only allow compilation on a 2 MB flash board or SITL. \r\n`#define CUSTOMCONTROL_ENABLED (!HAL_MINIMIZE_FEATURES && !defined(HAL_BUILD_AP_PERIPH) && BOARD_FLASH_SIZE > 1024 || CONFIG_HAL_BOARD == HAL_BOARD_SITL)\r\n`', 'comment_created': datetime.datetime(2022, 8, 11, 2, 25, 29, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 943052622, 'comment_body': ""I didn't realize we were hitting the 16 char limit on parameter names. Changing CSC to CC."", 'comment_created': datetime.datetime(2022, 8, 11, 2, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 943074471, 'comment_body': ""I agree with your reasoning, I'll do SITL experiment with extreme gains to see its effect. We have multiple examples in POS control library for setting integrator to a non-zero value. But for attitude controller the motors have a much faster response time than the attitude controller itself, so the twitch would probably be very hard to detect with the naked eye. \r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L957\r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L540\r\nhttps://github.com/ArduPilot/ardupilot/blob/master/libraries/AC_AttitudeControl/AC_PosControl.cpp#L768\r\n\r\nMaybe @lthall can help us with this. "", 'comment_created': datetime.datetime(2022, 8, 11, 3, 45, 46, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 945301612, 'comment_body': 'Looks like this warning is catching us out now we have enabled on SITL. Any reason it would not work on heli in SITL? Maybe we just skip this check for SITL?', 'comment_created': datetime.datetime(2022, 8, 14, 14, 50, 19, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 945448149, 'comment_body': 'I had a problem while passing base class type into the custom controller and its backends, so for simplicity, I only focused on multicopter. After looking at it again, we can now compile on Heli, as well.', 'comment_created': datetime.datetime(2022, 8, 15, 6, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 946236418, 'comment_body': 'should be compiled into SITL by default, but not real boards, but should have a ./waf configure --enable-custom-controller option to make it easy to enable on any board (see opendroneid-enable as an example)', 'comment_created': datetime.datetime(2022, 8, 16, 0, 15, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 946237409, 'comment_body': 'In other places we call the AC_AttitudeControl argument ""att_control"" (no extra ""i"")', 'comment_created': datetime.datetime(2022, 8, 16, 0, 18, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 946237836, 'comment_body': 'personally I\'d drop the ""_CONT_"" part of this variablae and just make it ""CC_TYPE"".  ', 'comment_created': datetime.datetime(2022, 8, 16, 0, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rmackay9', 'type': 'User'}, {'comment_id': 951993134, 'comment_body': 'Change it to att_control', 'comment_created': datetime.datetime(2022, 8, 22, 23, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 952044111, 'comment_body': 'Added --enable-custom-controller option. Also forced CUSTOMCONTROL_ENABLED to 0 for Heli in config.h.', 'comment_created': datetime.datetime(2022, 8, 23, 0, 54, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 953488356, 'comment_body': 'needs to be _TYPE to match string below', 'comment_created': datetime.datetime(2022, 8, 24, 8, 11, 24, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953489297, 'comment_body': 'needs to be _AXIS_MASK', 'comment_created': datetime.datetime(2022, 8, 24, 8, 12, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953494221, 'comment_body': 'this should be AP_CUSTOMCONTROL_ENABLED\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 18, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953494637, 'comment_body': 'wait_altitude takes a `minimum_duration`, better than doing a simple once-off poll of the altitude.\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 43, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953494714, 'comment_body': 'should be AP_CUSTOMCONTROL_ENABLED', 'comment_created': datetime.datetime(2022, 8, 24, 8, 17, 47, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953495404, 'comment_body': '```suggestion\r\n        if cc_type = self.get_parameter(""CC_TYPE"") != 2 :\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953495657, 'comment_body': 'not needed?', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 41, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953495898, 'comment_body': 'AP_CUSTOMCONTROL_ENABLED', 'comment_created': datetime.datetime(2022, 8, 24, 8, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'tridge', 'type': 'User'}, {'comment_id': 953496330, 'comment_body': 'The usual pattern we use is to create a context and then check the context for the statustext (`check_context=True`)\r\n', 'comment_created': datetime.datetime(2022, 8, 24, 8, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953501079, 'comment_body': '```suggestion\r\n        self.context_push()\r\n\r\n        # switch custom controller on\r\n        self.set_rc(6, 2000)\r\n        self.wait_statustext(""Custom controller is ON"")\r\n```\r\nI\'m assuming you *really* don\'t need 30 seconds to turn the controller on :-)\r\n\r\n.... then pop the context off right down the bottom of the test.', 'comment_created': datetime.datetime(2022, 8, 24, 8, 23, 53, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 953681430, 'comment_body': 'I pushed the changes. Can you check again?', 'comment_created': datetime.datetime(2022, 8, 24, 11, 35, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 954343590, 'comment_body': '```suggestion\r\n        self.do_RTL()\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 15, 29, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 954343887, 'comment_body': '```suggestion\r\n        self.wait_statustext(""Custom controller is ON"", check_context=True)\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 954344018, 'comment_body': '```suggestion\r\n        self.wait_statustext(""Custom controller is OFF"", check_context=True)\r\n```', 'comment_created': datetime.datetime(2022, 8, 24, 22, 16, 25, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957658101, 'comment_body': 'If you define out the whole block users would get the ""Invalid channel option"" warning. I\'m not really sure if that is better or not. I guess better to give a warning than just not working. \r\n\r\n```suggestion\r\n#if AC_CUSTOMCONTROL_MULTI_ENABLED == ENABLED\r\n        case AUX_FUNC::CUSTOM_CONTROLLER:\r\n            copter.custom_control.set_custom_controller(ch_flag == AuxSwitchPos::HIGH);\r\n            break;\r\n#endif\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 13, 32, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957660295, 'comment_body': 'I still think these should reset to zero. This could result in massive windup that takes several seconds to clear.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 16, 9, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957661564, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957661894, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 18, 8, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957664117, 'comment_body': 'I would be tempted to just hard code these defines in the PID constructions, its not like anyone would need to change these, its only a example. They are exact duplicated of the defines in AC_Attitude control which could lead to confusion. You may even just be able to include those directly?', 'comment_created': datetime.datetime(2022, 8, 29, 18, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957664197, 'comment_body': '```suggestion\r\n#endif\r\n\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 18, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957665404, 'comment_body': 'These have not made it.', 'comment_created': datetime.datetime(2022, 8, 29, 18, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'IamPete1', 'type': 'User'}, {'comment_id': 957688596, 'comment_body': ""Although the other channel options don't follow a similar pattern, I agree it is better to give a warning."", 'comment_created': datetime.datetime(2022, 8, 29, 18, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957695459, 'comment_body': 'We were already including AC_AttitudeControl_Multi through frontend, so I removed them. ', 'comment_created': datetime.datetime(2022, 8, 29, 18, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957710216, 'comment_body': 'After further thinking and checking flight logs from my previous flight tests, the main controller could stabilize the aircraft without resetting the integrator at all or relaxing the target attitude. We already relaxed the target attitude and attitude rate. Until further argument is made towards this, I agree it is safe to reset to zero. ', 'comment_created': datetime.datetime(2022, 8, 29, 19, 17, 51, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957872615, 'comment_body': '```suggestion\r\n            raise NotAchievedException(""Custom controller is not switched to PID backend."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 23, 28, 35, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957872687, 'comment_body': '```suggestion\r\n            raise NotAchievedException(""Custom controller is not stable."")\r\n```', 'comment_created': datetime.datetime(2022, 8, 29, 23, 28, 45, tzinfo=datetime.timezone.utc), 'commenter': 'peterbarker', 'type': 'User'}, {'comment_id': 957877884, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 29, 23, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}, {'comment_id': 957877958, 'comment_body': 'fixed', 'comment_created': datetime.datetime(2022, 8, 29, 23, 41, 24, tzinfo=datetime.timezone.utc), 'commenter': 'esaldiran', 'type': 'User'}]","[{'commit_sha': '4b851b7d13e3586821697a28a5e378954c6e740c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9517336a51042998e83b70ec9c06863c1582f48d', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c4e574917c0811e6929143e02904cacc4e300f0', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2994865d18be75778d9d3b3006a0e284050f7c20', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c75425a6bc0fea516cb85980e6c2c8ef17410968', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3842b162c2436d3c710208ad24962b63f63772e2', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '665bb83e2afa6d7a1c7915dca2be2c5e1d7c9817', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5189e18e00344aca7df5579d35e6d9e1e9631dcb', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
1052551649,Custom Controller Backend Example: INDI and ADRC,"This is PR adds new INDI and ADRC controller to the as a custom controller backend. This is a continuation of work done in https://github.com/ArduPilot/ardupilot/pull/21216. 

These controllers were flight tested in their original implementation, but they have not been flight tested using the custom controller framework. 

The readme file is also updated to reflect these new backend additions. I also a fixed a section related to the controller reset. ",False,21699,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21699,https://github.com/ArduPilot/ardupilot/pull/21699,open,897,9,10,5,9,0,0,0,[],2022-09-11 17:06:35+00:00,,0.0,,[],"[{'commit_sha': 'f3fa57859731b2b506c684eb92758a1cf9ca450c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bddbf368a6204b2f66c9de99f56034659934bd27', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f43ee73d02688c4bc6cb28aa31ffbfbb7473f81c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a71542e690719987512a1268ea39a2f40997c0e4', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227b9f3edad06ca134eb61aa6fe6845a438f734e', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
1052551649,Custom Controller Backend Example: INDI and ADRC,"This is PR adds new INDI and ADRC controller to the as a custom controller backend. This is a continuation of work done in https://github.com/ArduPilot/ardupilot/pull/21216. 

These controllers were flight tested in their original implementation, but they have not been flight tested using the custom controller framework. 

The readme file is also updated to reflect these new backend additions. I also a fixed a section related to the controller reset. ",False,21699,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21699,https://github.com/ArduPilot/ardupilot/pull/21699,open,897,9,10,5,9,0,0,0,[],2022-09-11 17:06:35+00:00,,0.0,,[],"[{'commit_sha': 'f3fa57859731b2b506c684eb92758a1cf9ca450c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bddbf368a6204b2f66c9de99f56034659934bd27', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f43ee73d02688c4bc6cb28aa31ffbfbb7473f81c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a71542e690719987512a1268ea39a2f40997c0e4', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227b9f3edad06ca134eb61aa6fe6845a438f734e', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
1052551649,Custom Controller Backend Example: INDI and ADRC,"This is PR adds new INDI and ADRC controller to the as a custom controller backend. This is a continuation of work done in https://github.com/ArduPilot/ardupilot/pull/21216. 

These controllers were flight tested in their original implementation, but they have not been flight tested using the custom controller framework. 

The readme file is also updated to reflect these new backend additions. I also a fixed a section related to the controller reset. ",False,21699,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21699,https://github.com/ArduPilot/ardupilot/pull/21699,open,897,9,10,5,9,0,0,0,[],2022-09-11 17:06:35+00:00,,0.0,,[],"[{'commit_sha': 'f3fa57859731b2b506c684eb92758a1cf9ca450c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bddbf368a6204b2f66c9de99f56034659934bd27', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f43ee73d02688c4bc6cb28aa31ffbfbb7473f81c', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a71542e690719987512a1268ea39a2f40997c0e4', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '227b9f3edad06ca134eb61aa6fe6845a438f734e', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
1052570864,Custom Controller Backend Example: Code Generation from Simulink ,"This PR adds new custom controller backend that uses Simulink code generation. A strip-down version of ArduCopter main attitude controller for all 3 axes is created in Simulink and configured for code generation. The generated code is integrated into the newly created custom controller backend. 

This is tested on SITL in CIRCLE mode and it can track attitude commands just like hand-coded PID backend example. 

",False,21700,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21700,https://github.com/ArduPilot/ardupilot/pull/21700,open,1240,2,16,4,0,0,0,0,[],2022-09-11 18:43:56+00:00,,0.0,,[],"[{'commit_sha': 'd1868d2a4dcc9ad984a3ec9892103675a3a2b6b7', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '098400573b73d3ff7b9e412c70fc8f5d9e1e0d87', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e4b53f1258bf9c2fecb1e155a35fda30825d8c7', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b37d4e2cee3a9f179e93e589d220be66f8598dd', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
1052570864,Custom Controller Backend Example: Code Generation from Simulink ,"This PR adds new custom controller backend that uses Simulink code generation. A strip-down version of ArduCopter main attitude controller for all 3 axes is created in Simulink and configured for code generation. The generated code is integrated into the newly created custom controller backend. 

This is tested on SITL in CIRCLE mode and it can track attitude commands just like hand-coded PID backend example. 

",False,21700,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21700,https://github.com/ArduPilot/ardupilot/pull/21700,open,1240,2,16,4,0,0,0,0,[],2022-09-11 18:43:56+00:00,,0.0,,[],"[{'commit_sha': 'd1868d2a4dcc9ad984a3ec9892103675a3a2b6b7', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '098400573b73d3ff7b9e412c70fc8f5d9e1e0d87', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e4b53f1258bf9c2fecb1e155a35fda30825d8c7', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b37d4e2cee3a9f179e93e589d220be66f8598dd', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8
1052570864,Custom Controller Backend Example: Code Generation from Simulink ,"This PR adds new custom controller backend that uses Simulink code generation. A strip-down version of ArduCopter main attitude controller for all 3 axes is created in Simulink and configured for code generation. The generated code is integrated into the newly created custom controller backend. 

This is tested on SITL in CIRCLE mode and it can track attitude commands just like hand-coded PID backend example. 

",False,21700,https://api.github.com/repos/ArduPilot/ardupilot/pulls/21700,https://github.com/ArduPilot/ardupilot/pull/21700,open,1240,2,16,4,0,0,0,0,[],2022-09-11 18:43:56+00:00,,0.0,,[],"[{'commit_sha': 'd1868d2a4dcc9ad984a3ec9892103675a3a2b6b7', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '098400573b73d3ff7b9e412c70fc8f5d9e1e0d87', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e4b53f1258bf9c2fecb1e155a35fda30825d8c7', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b37d4e2cee3a9f179e93e589d220be66f8598dd', 'committer_username': 'esaldiran', 'committer_name': 'Emre Saldıran', 'committer_email': None, 'commit_date': datetime.datetime(2015, 4, 13, 19, 6, 54, tzinfo=datetime.timezone.utc)}]",Emre Saldıran,11930560,,User,,14,,19,8

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
28945232,ardupilot_wiki,ArduPilot/ardupilot_wiki,Python,1228,485,74,491,8071,260,6,92,"[{'id': 1049850835, 'number': 4580, 'closed': datetime.datetime(2022, 9, 14, 23, 32, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 9, 8, 9, 34, 9, tzinfo=datetime.timezone.utc), 'time_taken': 568692.0, 'time_delta': '6 days, 13:58:12', 'additions': 372, 'deletions': 0, 'state': 'closed'}]"
7512484,ardupilot,ArduPilot/ardupilot,C++,17021,10391,658,1076,64533,2433,71,1006,"[{'id': 1052570864, 'number': 21700, 'closed': None, 'created': datetime.datetime(2022, 9, 11, 18, 43, 56, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1240, 'deletions': 2, 'state': 'open'}, {'id': 1052551649, 'number': 21699, 'closed': None, 'created': datetime.datetime(2022, 9, 11, 17, 6, 35, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 897, 'deletions': 9, 'state': 'open'}, {'id': 999862385, 'number': 21216, 'closed': datetime.datetime(2022, 8, 30, 3, 10, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 19, 57, 52, tzinfo=datetime.timezone.utc), 'time_taken': 3654738.0, 'time_delta': '42 days, 7:12:18', 'additions': 1107, 'deletions': 0, 'state': 'closed'}, {'id': 999644212, 'number': 21214, 'closed': datetime.datetime(2022, 7, 19, 10, 40, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 18, 16, 55, 29, tzinfo=datetime.timezone.utc), 'time_taken': 63875.0, 'time_delta': '17:44:35', 'additions': 19, 'deletions': 3, 'state': 'closed'}, {'id': 988161288, 'number': 21123, 'closed': datetime.datetime(2022, 8, 9, 0, 9, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 6, 4, 54, 18, tzinfo=datetime.timezone.utc), 'time_taken': 2920490.0, 'time_delta': '33 days, 19:14:50', 'additions': 280, 'deletions': 2, 'state': 'closed'}, {'id': 911175955, 'number': 20545, 'closed': datetime.datetime(2022, 9, 12, 23, 14, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 4, 16, 1, 37, 36, tzinfo=datetime.timezone.utc), 'time_taken': 12951431.0, 'time_delta': '149 days, 21:37:11', 'additions': 23, 'deletions': 0, 'state': 'closed'}, {'id': 911166678, 'number': 20543, 'closed': None, 'created': datetime.datetime(2022, 4, 16, 0, 36, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 111, 'deletions': 3, 'state': 'open'}, {'id': 906714897, 'number': 20511, 'closed': None, 'created': datetime.datetime(2022, 4, 12, 1, 45, 53, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1376, 'deletions': 13, 'state': 'open'}, {'id': 606316470, 'number': 17071, 'closed': datetime.datetime(2022, 4, 17, 16, 8, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 31, 20, 35, 40, tzinfo=datetime.timezone.utc), 'time_taken': 32988772.0, 'time_delta': '381 days, 19:32:52', 'additions': 268, 'deletions': 11, 'state': 'closed'}, {'id': 600586655, 'number': 17010, 'closed': datetime.datetime(2021, 3, 25, 12, 1, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 9, 43, 45, tzinfo=datetime.timezone.utc), 'time_taken': 8276.0, 'time_delta': '2:17:56', 'additions': 9, 'deletions': 5, 'state': 'closed'}, {'id': 597548562, 'number': 16955, 'closed': datetime.datetime(2021, 3, 23, 23, 55, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 21, 19, 36, 27, tzinfo=datetime.timezone.utc), 'time_taken': 188362.0, 'time_delta': '2 days, 4:19:22', 'additions': 103, 'deletions': 0, 'state': 'closed'}, {'id': 595081754, 'number': 16937, 'closed': datetime.datetime(2021, 3, 23, 11, 9, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 17, 22, 10, 55, tzinfo=datetime.timezone.utc), 'time_taken': 478724.0, 'time_delta': '5 days, 12:58:44', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
