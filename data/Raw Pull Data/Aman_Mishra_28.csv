pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
426153534,"TRUNK-5751, Set Up InitializationFilter.java for PostgreSQL","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
Set Up InitializationFilter.java for PostgreSQL
<!---  -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5751

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3220,https://api.github.com/repos/openmrs/openmrs-core/pulls/3220,https://github.com/openmrs/openmrs-core/pull/3220,closed,55,16,3,5,20,52,0,0,[],2020-06-01 18:51:18+00:00,2020-06-10 21:43:07+00:00,787909.0,"9 days, 2:51:49","[{'comment_id': 433468793, 'comment_body': 'Could you remind me as to why we are using PostgreSQL82Dialect instead of PostgreSQL92Dialect or PostgreSQL102Dialect, etc?', 'comment_created': datetime.datetime(2020, 6, 1, 20, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 433626588, 'comment_body': ""PostgreSQL82Dialect supports PostgreSQL 8.2 and later ( see here : https://docs.jboss.org/hibernate/orm/5.1/javadocs/org/hibernate/dialect/PostgreSQL82Dialect.html ) where as others like PostgreSQL10 Dialect provide support for PostgreSQL10 and later ( see here: https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/dialect/PostgreSQL10Dialect.html ). I used PostgreSQL82Dialect so that if some implementation is still relying on older versions of PostgreSQL then there won't be a problem."", 'comment_created': datetime.datetime(2020, 6, 2, 5, 23, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 433926613, 'comment_body': 'Does this therefore mean that we do not support the latest release of PostgreSQL?', 'comment_created': datetime.datetime(2020, 6, 2, 14, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 433942656, 'comment_body': 'I would actually questions whether we need to select a Hibernate dialect at all, but that might be bigger than this ticket (Hibernate should automatically [do the right thing](https://docs.jboss.org/hibernate/stable/orm/userguide/html_single/Hibernate_User_Guide.html#portability-dialectresolver)).', 'comment_created': datetime.datetime(2020, 6, 2, 14, 58, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 434073936, 'comment_body': '> Does this therefore mean that we do not support the latest release of PostgreSQL?\r\n\r\nHere as mentioned in the docs, support is for PostgreSQL 8.2 and later.\r\nhttps://docs.jboss.org/hibernate/orm/5.1/javadocs/org/hibernate/dialect/PostgreSQL82Dialect.html', 'comment_created': datetime.datetime(2020, 6, 2, 18, 6, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434091150, 'comment_body': ""What do you think about @ibacher's point?"", 'comment_created': datetime.datetime(2020, 6, 2, 18, 25, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 434097477, 'comment_body': ""> I would actually questions whether we need to select a Hibernate dialect at all, but that might be bigger than this ticket (Hibernate should automatically [do the right thing](https://docs.jboss.org/hibernate/stable/orm/userguide/html_single/Hibernate_User_Guide.html#portability-dialectresolver)).\r\n\r\n@ibacher your take on this appears to me, right. I'll try on mysql and postgresql without specifying the dialect and see what happens. Though, I fear if there is a problem then it might require a separate ticket in itself and also a lot of look into how hibernate uses database metadata( like using drivers ) to select dialect  and won't be of immediate concern. "", 'comment_created': datetime.datetime(2020, 6, 2, 18, 37, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434099948, 'comment_body': 'Can you try it out and tell us what happens?', 'comment_created': datetime.datetime(2020, 6, 2, 18, 42, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 434113582, 'comment_body': 'Sure @dkayiwa , I am working on it.', 'comment_created': datetime.datetime(2020, 6, 2, 19, 6, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434126967, 'comment_body': '@ibacher  @dkayiwa  , I initialized OpenMRS-core on PostgreSQL. I added legacyUI module and Now when I am trying to create a Patient, \r\n\r\n1. Without using any PostgreSQL dialect : This is the error log https://pastebin.com/JaCZdja6  \r\n\r\n2. Using PostgreSQL dialect: Everything works fine and I am redirected to page where I need to fill patient details.', 'comment_created': datetime.datetime(2020, 6, 2, 19, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434138441, 'comment_body': 'Did you test to confirm that `PostgreSQL82Dialect` works for the latest release of PostgreSQL?', 'comment_created': datetime.datetime(2020, 6, 2, 19, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 434146470, 'comment_body': ""> @ibacher @dkayiwa , I initialized OpenMRS-core on PostgreSQL. I added legacyUI module and Now when I am trying to create a Patient,\r\n> \r\n>     1. Without using any PostgreSQL dialect : This is the error log [pastebin.com/JaCZdja6](https://pastebin.com/JaCZdja6)\r\n> \r\n>     2. Using PostgreSQL dialect: Everything works fine and I am redirected to page where I need to fill patient details.\r\n\r\n@Am-Coder I think there may be a small trick to this. There's a file in `src/main/resources` called `hibernate.default.properties` which has the line:\r\n\r\n```\r\nhibernate.dialect=org.hibernate.dialect.MySQLDialect\r\n```\r\n\r\nCould you edit that file to comment out that line and try again?"", 'comment_created': datetime.datetime(2020, 6, 2, 20, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 434347309, 'comment_body': ""> > @ibacher @dkayiwa , I initialized OpenMRS-core on PostgreSQL. I added legacyUI module and Now when I am trying to create a Patient,\r\n> > ```\r\n> > 1. Without using any PostgreSQL dialect : This is the error log [pastebin.com/JaCZdja6](https://pastebin.com/JaCZdja6)\r\n> > \r\n> > 2. Using PostgreSQL dialect: Everything works fine and I am redirected to page where I need to fill patient details.\r\n> > ```\r\n> \r\n> @Am-Coder I think there may be a small trick to this. There's a file in `src/main/resources` called `hibernate.default.properties` which has the line:\r\n> \r\n> ```\r\n> hibernate.dialect=org.hibernate.dialect.MySQLDialect\r\n> ```\r\n> \r\n> Could you edit that file to comment out that line and try again?\r\n\r\nSorry, I missed the default dialect. So, I tried and the results are:\r\n\r\n1. In both mysql and postgresql we are able enter Patient details page successfully. In mysql we are able to add patient successfully as well.\r\n2. In mysql, I entered patient management section and tried to use delete the patient forever option. The error log I got is : https://pastebin.com/cj0tb7ue . I think this might be related to this that https://talk.openmrs.org/t/patient-management-in-postgresql/28228/5 .\r\n"", 'comment_created': datetime.datetime(2020, 6, 3, 6, 57, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434347810, 'comment_body': ""> Did you test to confirm that `PostgreSQL82Dialect` works for the latest release of PostgreSQL?\r\n\r\nI'll try with postgresql 12 and report the results."", 'comment_created': datetime.datetime(2020, 6, 3, 6, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434523896, 'comment_body': '@Am-Coder Does 1 imply that you weren\'t able to add a patient successfully on PostgreSQL? 2 is a very good point; I forgot we were being ""saved"" by using the ""wrong"" dialect. I\'m actually in favour of just adding in the appropriate `ondelete = cascade` properties to the affected tables.', 'comment_created': datetime.datetime(2020, 6, 3, 12, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 434686653, 'comment_body': '@ibacher  \r\nFor 1 there is another problem that is not related to dialect but related to sequence and holds a different solution.\r\n\r\nFor 2, I will be adding the necessary ondelete = cascade in another ticket as this is necessary for PostgreSQL.', 'comment_created': datetime.datetime(2020, 6, 3, 16, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434687819, 'comment_body': ""@Am-Coder didn't i solve the sequence problem in my previous commits?"", 'comment_created': datetime.datetime(2020, 6, 3, 16, 11, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 434706001, 'comment_body': '> Did you test to confirm that `PostgreSQL82Dialect` works for the latest release of PostgreSQL?\r\n\r\n@dkayiwa \r\nPostgreSQL 12 gives the following error with both `PostgreSQL82` and `PostgreSQL10` dialect:  https://pastebin.com/Q62dG05P \r\n\r\nSo I thought of upgrading PostgreSQL dependency to : \r\n```\r\n<dependency>\r\n    <groupId>org.postgresql</groupId>\r\n    <artifactId>postgresql</artifactId>\r\n    <version>42.2.5</version>\r\n</dependency>\r\n```\r\nAnd now the problem is resolved with PostgreSQL 12 and `PostgreSQL82` as dialect. Upgrading this dependency is linked to the ticket - https://issues.openmrs.org/browse/TRUNK-5553 . So I think this now depends on this ticket.', 'comment_created': datetime.datetime(2020, 6, 3, 16, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 434745046, 'comment_body': ""> @Am-Coder didn't i solve the sequence problem in my previous commits?\r\n\r\nStill the problem exists, the error log : https://pastebin.com/VJrSf98T "", 'comment_created': datetime.datetime(2020, 6, 3, 17, 44, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 435945869, 'comment_body': 'Is the replacedSql.replaceAll needed for postgresql?', 'comment_created': datetime.datetime(2020, 6, 5, 14, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 435946594, 'comment_body': ""Shouldn't we be using a constant for mysql or posgresql?"", 'comment_created': datetime.datetime(2020, 6, 5, 14, 7, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 435947288, 'comment_body': 'Or even better, wrap `wizardModel.databaseConnection.contains` in a method?', 'comment_created': datetime.datetime(2020, 6, 5, 14, 8, 46, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 436089692, 'comment_body': ""Currently, if you remove this you'll get the error :\r\n![Screenshot from 2020-06-05 23-41-59](https://user-images.githubusercontent.com/39997970/83909786-0b495400-a787-11ea-97c1-316cc94bf4cd.png)\r\n"", 'comment_created': datetime.datetime(2020, 6, 5, 18, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436102622, 'comment_body': ""I'll make use of constants for db's within this same class as private members and wrap wizardModel in a method like :\r\n```\r\n\tprivate boolean checkDatabase(String database) {\r\n\t\tif (wizardModel.databaseConnection.contains(database))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n```\r\n\r\nAlso should I add constants for other db like 'sqlserver' as well ?"", 'comment_created': datetime.datetime(2020, 6, 5, 18, 45, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436258236, 'comment_body': '@dkayiwa , I have made some changes according to your suggestion. Also I have checked the runtime properties file and tried login with these changes in place and there was no problem. \r\nMySQL: \r\n![Screenshot from 2020-06-06 16-20-40](https://user-images.githubusercontent.com/39997970/83942548-0c739300-a812-11ea-9ad9-24fbfb7b4260.png)\r\n\r\nPostgresql:\r\n![Screenshot from 2020-06-06 14-49-06](https://user-images.githubusercontent.com/39997970/83942560-1f866300-a812-11ea-971e-bc99bb2e92bd.png)\r\n', 'comment_created': datetime.datetime(2020, 6, 6, 10, 40, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436802122, 'comment_body': 'Is there any reason why you did not use the latest version?', 'comment_created': datetime.datetime(2020, 6, 8, 15, 37, 39, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 436802524, 'comment_body': 'What is the value added by this comment?', 'comment_created': datetime.datetime(2020, 6, 8, 15, 38, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 436803854, 'comment_body': 'What does checkDatabase mean?', 'comment_created': datetime.datetime(2020, 6, 8, 15, 40, 20, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 436804487, 'comment_body': 'https://wiki.openmrs.org/display/docs/Java+Conventions#JavaConventions-CodeStyle', 'comment_created': datetime.datetime(2020, 6, 8, 15, 41, 17, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 436829644, 'comment_body': 'I went through the list of [versions](https://mvnrepository.com/artifact/org.postgresql/postgresql) of type 42.x.x and the one which was used by most people, I used here. If required I can try with the latest version and report the results.', 'comment_created': datetime.datetime(2020, 6, 8, 16, 16, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436831995, 'comment_body': ""My motive behind adding this string was to tell the one who see's the code to show the database that openmrs supports currently. I think I'll remove this string over H2 and sqlserver. What do you think should I add this string or remove it from everywhere ?"", 'comment_created': datetime.datetime(2020, 6, 8, 16, 20, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436834193, 'comment_body': 'Given a string as input , checkDatabase checks whteher the database is required or supported by OpenMRS platform. ', 'comment_created': datetime.datetime(2020, 6, 8, 16, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436834588, 'comment_body': ""This is a mistake on my part. I'll correct it."", 'comment_created': datetime.datetime(2020, 6, 8, 16, 24, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 436836071, 'comment_body': 'If it is the same comment used for four different things, then i do not see the value added.', 'comment_created': datetime.datetime(2020, 6, 8, 16, 26, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 436836897, 'comment_body': ""Shouldn't the method name contain that information such that one does not need this comment to understand what the method does?"", 'comment_created': datetime.datetime(2020, 6, 8, 16, 28, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 437704816, 'comment_body': 'What were the results?', 'comment_created': datetime.datetime(2020, 6, 9, 20, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 437708293, 'comment_body': 'This method name creates an impression that we support only one database. But from the code base, we support four databases. Do you get my point?', 'comment_created': datetime.datetime(2020, 6, 9, 20, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438032682, 'comment_body': 'Does **checkInSupportedDatabases** looks right ?', 'comment_created': datetime.datetime(2020, 6, 10, 10, 48, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438053629, 'comment_body': 'What do you think of `isCurrentDatabase`?', 'comment_created': datetime.datetime(2020, 6, 10, 11, 31, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438058137, 'comment_body': 'Initialization is successful. All is working fine. I used the latest 42.2.13 . Which driver I should keep 42.2.13 or 42.2.5 ?', 'comment_created': datetime.datetime(2020, 6, 10, 11, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438060327, 'comment_body': ""Seems fine to me. I'll make the changes."", 'comment_created': datetime.datetime(2020, 6, 10, 11, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438071013, 'comment_body': 'I thought the answer is obvious! 😊 ', 'comment_created': datetime.datetime(2020, 6, 10, 12, 7, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438076731, 'comment_body': ""Ok, then I'll change to the latest one ( i.e. 42.2.13 ) ."", 'comment_created': datetime.datetime(2020, 6, 10, 12, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438264077, 'comment_body': 'Why run `executeStatement` twice?', 'comment_created': datetime.datetime(2020, 6, 10, 16, 40, 59, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438269929, 'comment_body': 'Why do we have the exact same `replacedSql.replaceAll` in more than one place?', 'comment_created': datetime.datetime(2020, 6, 10, 16, 50, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438289827, 'comment_body': 'The number of parameters in sql query for mysql and postgresql are different, so need to have a separate statement.', 'comment_created': datetime.datetime(2020, 6, 10, 17, 24, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438290515, 'comment_body': 'You can still do that but run executeStatement once.', 'comment_created': datetime.datetime(2020, 6, 10, 17, 25, 43, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438295910, 'comment_body': 'So, in the existing implementation for other db\'s other then MySQL we had \r\n` \t\t\t\treplacedSql = replacedSql.replaceAll(""`"", ""\\""""); `\r\nin else condition. Now for PostgreSQL we also require this. What can be done to add a single statement is we set drivers separately in if conditions and do : \r\n```\r\nif ( !isCurrentDatabase(DATABASE_MYSQL)){\r\n         replacedSql = replacedSql.replaceAll(""`"", ""\\"""");\r\n}\r\n```', 'comment_created': datetime.datetime(2020, 6, 10, 17, 34, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438323008, 'comment_body': 'Let me try if there is a way. But if you are suggesting that I make use of a similar GRANT statement for PostgreSQL. Then there is a problem since that way user does [not get permission to create extension](https://www.postgresql.org/docs/9.4/sql-createextension.html) fuzzystrmatch required for soundex.', 'comment_created': datetime.datetime(2020, 6, 10, 18, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438332386, 'comment_body': 'What i simply mean is that assign the sql in the if statements and then execute the result once. Does this make sense?', 'comment_created': datetime.datetime(2020, 6, 10, 18, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 438340872, 'comment_body': 'For MySQL the execute statement is : \r\n```\r\nresult = executeStatement(false, wizardModel.createUserUsername,\r\nwizardModel.createUserPassword, sql, wizardModel.databaseName, connectionUsername);\r\n```\r\nFor PostgreSQL, the execute statement is : \r\n```\r\nresult = executeStatement(false, wizardModel.createUserUsername,\r\nwizardModel.createUserPassword, sql, connectionUsername);\r\n```\r\nSo, if I make use of MySQL\'s execute statement in \r\n`sql = ""ALTER USER `?` WITH SUPERUSER"";` for postgreSQL then it will replace \'?\' with wizardModel.databaseName which will be wrong. Am I missing something ?\r\n', 'comment_created': datetime.datetime(2020, 6, 10, 18, 53, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 438345530, 'comment_body': 'Oh i see! If the parameters are different, then you can leave it. 😊 ', 'comment_created': datetime.datetime(2020, 6, 10, 19, 2, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}]","[{'commit_sha': '462faa979eef89ca14dc0d72180893a11266a556', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0cc23fe9f41a221f4084484f45de0dd431f31540', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '506635506a623a275e6506701dbbb986642bfe74', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f509e7235d2fae0c8d9f737cc380f161516b3de5', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8771d54e83d810ec2ea4f84dbbe7abafb500a6e', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
427957934,"TRUNK-5752, Soundex Support for PostgreSQL","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
Added liquibase changeset to add fuzzystrmatch extension for postgresql
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5752

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3224,https://api.github.com/repos/openmrs/openmrs-core/pulls/3224,https://github.com/openmrs/openmrs-core/pull/3224,closed,4,1,1,1,1,0,0,0,[],2020-06-04 16:36:07+00:00,2020-06-08 15:30:14+00:00,341647.0,"3 days, 22:54:07",[],"[{'commit_sha': '606842925f25bbfd29e2b0aa7ea10cc627856b52', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
431244625,"TRUNK-5758, Adding support to use old native hibernate generators","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Adding support to use old native hibernate generators
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5758

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3235,https://api.github.com/repos/openmrs/openmrs-core/pulls/3235,https://github.com/openmrs/openmrs-core/pull/3235,closed,3,0,1,1,1,0,0,0,[],2020-06-08 16:04:56+00:00,2020-06-10 21:38:28+00:00,192812.0,"2 days, 5:33:32",[],"[{'commit_sha': '3402a07288f64a63f27014d5fe1df85076ccf6a4', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
434663285,"TRUNK-5794, Fail to create patient in PostgreSQL, due to inconsistent…","… sequence value.

<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Added a liquibase changeset to update the sequence values. Now patient gets saved correctly.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5794

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3252,https://api.github.com/repos/openmrs/openmrs-core/pulls/3252,https://github.com/openmrs/openmrs-core/pull/3252,closed,23,1,1,1,3,0,0,0,[],2020-06-15 17:01:48+00:00,2020-06-16 20:46:09+00:00,99861.0,"1 day, 3:44:21",[],"[{'commit_sha': '1002d7900c21483c05496b31e10740fb21d7e08e', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
435967520,"TRUNK-5800, Map concept_reference_map sequence correctly","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
Corrected the sequence name.
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5800

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3260,https://api.github.com/repos/openmrs/openmrs-core/pulls/3260,https://github.com/openmrs/openmrs-core/pull/3260,closed,1,1,1,1,1,5,0,0,[],2020-06-17 16:35:31+00:00,2020-06-25 13:11:34+00:00,678963.0,"7 days, 20:36:03","[{'comment_id': 445529943, 'comment_body': 'According to the convention, `concept_map_concept_map_id_seq` looks like the correct one. Why do you think `concept_reference_map_concept_map_id_seq` is the correct one?', 'comment_created': datetime.datetime(2020, 6, 25, 12, 46, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 445535584, 'comment_body': 'If you look at the table name [here](https://github.com/openmrs/openmrs-core/blob/e8c7cb456f34561c5714f40ee20342230e6357a3/api/src/main/resources/org/openmrs/api/db/hibernate/ConceptMap.hbm.xml#L18) it is concept_reference_map and id is concept_map_id. Hence the created sequence is **concept_reference_map_concept_map_id_seq** . I have cross checked this in PostgreSQL created sequences.', 'comment_created': datetime.datetime(2020, 6, 25, 12, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 445536037, 'comment_body': 'I have attached the screenshot in ticket here https://issues.openmrs.org/browse/TRUNK-5800 ', 'comment_created': datetime.datetime(2020, 6, 25, 12, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 445537006, 'comment_body': 'Does this have any effect to existing installations which may already be using `concept_map_concept_map_id_seq`?', 'comment_created': datetime.datetime(2020, 6, 25, 12, 57, 44, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 445543558, 'comment_body': ""For MySQL there should not be any effect since it uses auto increment for id. For DB's that make use of table for a sequence as in case of PostgreSQL, this sequence does not get detected as it does not exists. For DB's making use of Sequence as a table we need to properly map them via hibernate."", 'comment_created': datetime.datetime(2020, 6, 25, 13, 7, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '6c8ce60d48fa0bf55f22d222c0b302f3bc10ace5', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
446843472,"TRUNK-5807, Exception thrown in console on saving Patient in PostgreSQL","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Problem is presence of orderby does not affect aggregate function in mysql but in postgresql it does. So whereever you are counting you need to remove order clause in criteria. The SQL query that gets executed is :

select count(*) as y0_ from visit this_ where this_.patient_id=? and not exists (select 1 from encounter where this_.visit_id=visit_id) and this_.voided=? order by this_.date_started desc, this_.visit_id desc

So had to remove order by clause and there is no direct way to get rid of it. I referred https://stackoverflow.com/questions/2370221/remove-dynamically-an-ordering-to-the-result-set-in-org-hibernate-criteria  
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5807

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3318,https://api.github.com/repos/openmrs/openmrs-core/pulls/3318,https://github.com/openmrs/openmrs-core/pull/3318,closed,6,6,1,3,13,4,0,0,[],2020-07-09 12:57:29+00:00,2020-08-23 20:00:18+00:00,3913369.0,"45 days, 7:02:49","[{'comment_id': 458381306, 'comment_body': 'Why use a hack?', 'comment_created': datetime.datetime(2020, 7, 21, 20, 54, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 458734032, 'comment_body': 'There is no direct way to remove the order clause from criteria once it gets added( [docs](https://docs.jboss.org/hibernate/orm/3.3/reference/en/html/querycriteria.html) ).  I found this solution [here](https://stackoverflow.com/questions/2370221/remove-dynamically-an-ordering-to-the-result-set-in-org-hibernate-criteria).', 'comment_created': datetime.datetime(2020, 7, 22, 11, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 474581273, 'comment_body': '@dkayiwa , your view on this ? Apparently, This is not an issue on Reference Application but comes up when visiting Patient Dashboard on LegacyUI.', 'comment_created': datetime.datetime(2020, 8, 21, 9, 35, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 474665049, 'comment_body': ""@Am-Coder I think the question is: why not just remove the order by stuff from the place where its being added instead of adding this hack? The order by stuff can then be added in where it's actually needed, e.g., `getEncountersByVisitsAndPatient()`"", 'comment_created': datetime.datetime(2020, 8, 21, 12, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}]","[{'commit_sha': '10049323ef3ab59e49eebf1c05973d562381febe', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4bb6f82d58227d8dda97f432f4bebc7f1a610df2', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4cce25a3579414e528d1ad3a28702fb52f729c3', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
441867828,"TRUNK-5823, Demo Data Setup in PostgreSQL","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
I have added a liquibase change set in the demo data xml file present in liquibase-demo-data.zip . This changeset updates **scheduler_task_config_task_config_id_seq** that holds incorrect value due to some insertions done from core data xml files 
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5823

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3282,https://api.github.com/repos/openmrs/openmrs-core/pulls/3282,https://github.com/openmrs/openmrs-core/pull/3282,closed,0,0,1,2,3,0,0,0,[],2020-06-30 08:28:17+00:00,2020-06-30 13:04:38+00:00,16581.0,4:36:21,[],"[{'commit_sha': '2e73b1c07a3086e739091c80ebee298434caef0d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '13402999b71635dacae71dd14a0dfd01a46b0c8d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
443373889,TRUNK-5826: Fix error when creating user on Postgres,"…reSQL

<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
In case of PostgreSQL, on use of session.saveOrUpdate(..) , only the sequence gets increased and no insert statement are issued by hibernate. So, I had to flush the session in order to avoid the null pointer exception being throw for LoginCredential.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5826

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3288,https://api.github.com/repos/openmrs/openmrs-core/pulls/3288,https://github.com/openmrs/openmrs-core/pull/3288,closed,8,0,1,2,1,12,0,0,[],2020-07-02 08:52:59+00:00,2020-07-20 19:16:37+00:00,1592618.0,"18 days, 10:23:38","[{'comment_id': 449435125, 'comment_body': '@Am-Coder   Did you try running these changes under a running openmrs instance with a  PostgreSQL Db?', 'comment_created': datetime.datetime(2020, 7, 3, 7, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 449439088, 'comment_body': 'Yes, I have verified the changes on PostgreSQL.', 'comment_created': datetime.datetime(2020, 7, 3, 8, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 451168420, 'comment_body': '@Am-Coder did you investigate why PostgreSQL behaves differently from MySQL in this scenario?', 'comment_created': datetime.datetime(2020, 7, 7, 22, 0, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 451347381, 'comment_body': 'Let me look into it and see if I can find something.', 'comment_created': datetime.datetime(2020, 7, 8, 7, 45, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 452447238, 'comment_body': '@dkayiwa , I went through [docs](https://docs.jboss.org/hibernate/orm/3.5/javadocs/org/hibernate/Session.html) and a lot of articles but there is no specific piece of documentation that could point to this. I found this [article](https://dzone.com/articles/hibernate-identity-sequence) very useful. Based on this article, to me it appears that:\r\n  \r\nIn OpenMRS, we are using generation strategy as native which will convert to IDENTITY for MySQL and SEQUENCE for PostgreSQL. When using IDENTITY strategy, hibernate directly issues insert statements( cannot make use of batching ) where as with SEQUENCE strategy hibernate only increments sequences and issues insert on session flush ( batching is possible) . PostgreSQL behaves differently than MySQL because it makes use of SEQUENCE strategy.\r\n\r\nHere is the link to the SQL queries I logged that get executed with MySQL and PostgreSQL( with session flush and without session flush ) - https://pastebin.com/yTsKUgYP . This is in accordance with the article I mentioned above.', 'comment_created': datetime.datetime(2020, 7, 9, 19, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 452729436, 'comment_body': 'Can you add this explanation to the code?', 'comment_created': datetime.datetime(2020, 7, 10, 9, 23, 23, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 452814801, 'comment_body': ""Do we need this call to `flush()` to prevent an error of some kind? I'm not sure that flushing the session just so we get insert statements generated at the same time should be a requirement (and there can be some modest benefits to allowing Hibernate to defer issuing a query until the session is closed)."", 'comment_created': datetime.datetime(2020, 7, 10, 12, 34, 49, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 452824331, 'comment_body': '@ibacher , The current logical implementation is according to MySQL which makes use of IDENTITY strategy where there is no defering. Let me see if I can do something without making use of flush. As of now I think it might require a different hibernate session for each saveOrUpdate and get calls. The problem here is that in the same session we persisting as well as then calling the peristed entity.', 'comment_created': datetime.datetime(2020, 7, 10, 12, 54, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 452824489, 'comment_body': '> Can you add this explanation to the code?\r\n\r\nAdded the explanation', 'comment_created': datetime.datetime(2020, 7, 10, 12, 54, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 453007302, 'comment_body': ""@Am-Coder So, to be clear, I don't think we should be calling `flush()` if the only reason we're doing so is to generate an `INSERT` statement at the same point that Hibernate would generate an `INSERT` statement when being run on MySQL. We're using a different identifier generation strategy and that has different behaviour. We'd only want to call `flush()` here if *not* calling `flush()` results in some kind of error."", 'comment_created': datetime.datetime(2020, 7, 10, 18, 32, 33, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 453009872, 'comment_body': '@ibacher , if you do not call flush here then an error is raised . Link to logs https://pastebin.com/FmP9ekBp . Also I have attached the screenshot in the ticket description https://issues.openmrs.org/browse/TRUNK-5826 . So, I think calling flush here will be correct.', 'comment_created': datetime.datetime(2020, 7, 10, 18, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 456368274, 'comment_body': '@dkayiwa @ibacher , are the changes fine or something more needs to be done ?', 'comment_created': datetime.datetime(2020, 7, 17, 10, 48, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '122053d154a376cd028b46340289736ebb72dee5', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97188bf5d61beb1c2bcd94ebc4b123016136b0cd', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
445154768,"TRUNK-5831, Unable to merge Patients in PostgreSQL","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Mapped the sequence correctly.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5831

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3299,https://api.github.com/repos/openmrs/openmrs-core/pulls/3299,https://github.com/openmrs/openmrs-core/pull/3299,closed,3,1,1,1,1,0,0,0,[],2020-07-07 05:08:20+00:00,2020-07-07 08:12:45+00:00,11065.0,3:04:25,[],"[{'commit_sha': '7d32a335646babd500f3a51da5f8ad7cfecd5c4c', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
444704284,"TRUNK-5832, Unable to create new Patient Identifier Type in PostgreSQL","<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Updated the sequence value to hold the correct value. Also, verified the change on running OpenMRS core instance on PostgreSQL.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5832

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3296,https://api.github.com/repos/openmrs/openmrs-core/pulls/3296,https://github.com/openmrs/openmrs-core/pull/3296,closed,1,0,1,1,2,0,0,0,[],2020-07-06 11:07:32+00:00,2020-07-06 13:04:47+00:00,7035.0,1:57:15,[],"[{'commit_sha': '66fc2251f9b905f92a59f90e4aac2ae5211acc77', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
447581120,TRUNK-5843 Properly Map sequences via hibernate,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Properly Mapped the sequences.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5843

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3327,https://api.github.com/repos/openmrs/openmrs-core/pulls/3327,https://github.com/openmrs/openmrs-core/pull/3327,closed,27,9,9,2,1,0,0,0,[],2020-07-10 18:23:47+00:00,2020-07-11 20:22:02+00:00,93495.0,"1 day, 1:58:15",[],"[{'commit_sha': 'e760bd5886d7569623e06c0f222313dd394129b7', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8b06c2d293ce418d83ec75443e0c9608332facf', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
450363905,TRUNK-5870 Create Wrapper UUID function for PostgreSQL similar to MySQL,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Created an alias function for UUID generation similar to MySQL
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5870

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3372,https://api.github.com/repos/openmrs/openmrs-core/pulls/3372,https://github.com/openmrs/openmrs-core/pull/3372,closed,5,2,1,1,2,0,0,0,[],2020-07-16 17:20:30+00:00,2020-07-16 19:44:11+00:00,8621.0,2:23:41,[],"[{'commit_sha': '321124255b0f5e6c85a2206f8963630010e2cb54', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
456729304,TRUNK-5887 Validation error when starting Reference Metadata module on PostgreSQL,"TRUNK-5887 Validation error when starting Reference Metadata

<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
1. Mapped the sequence correctly
2. Trimmed the extra 2 spaces that are returned in case of PostgreSQL while doing the comparison. So that no validation error occurs.
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5887

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3398,https://api.github.com/repos/openmrs/openmrs-core/pulls/3398,https://github.com/openmrs/openmrs-core/pull/3398,closed,51,1,2,5,2,22,0,0,[],2020-07-26 10:07:00+00:00,2020-07-28 14:55:10+00:00,190090.0,"2 days, 4:48:10","[{'comment_id': 460557593, 'comment_body': ""Aren't we going to have to do this in many places? Did you evaluate other options? Like switching the file size to 36?"", 'comment_created': datetime.datetime(2020, 7, 26, 18, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460560161, 'comment_body': ""@dkayiwa , yes and as I am testing and getting validation errors, I am making the changes. One another ticket I raised today holds a similar problem. \r\n\r\nMaking uuid columns char(36) or varchar(38) did come in my mind, but isn't there any reason that why in OpenMRS we have set UUID columns as char(38) everywhere?"", 'comment_created': datetime.datetime(2020, 7, 26, 18, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460560971, 'comment_body': 'https://issues.openmrs.org/browse/TRUNK-1283', 'comment_created': datetime.datetime(2020, 7, 26, 18, 53, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460564381, 'comment_body': 'Oh now I see the reason. So dropping to char(36) is never an option. One solution I found of creating custom char type like this [here](https://access.redhat.com/solutions/32313) but then if our main concern is the amount of code changes that will be needed then we will have to map uuid types to this custom type that we create everywhere. So, I went with the trim option.', 'comment_created': datetime.datetime(2020, 7, 26, 19, 30, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460565278, 'comment_body': 'Can we write the custom liquibase class that automatically maps to char(36) for PostgreSQL?', 'comment_created': datetime.datetime(2020, 7, 26, 19, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460565601, 'comment_body': 'Let me look into it. I know something similar has been done for boolean conversion to tinyint(1) for MySQL. ', 'comment_created': datetime.datetime(2020, 7, 26, 19, 43, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460897856, 'comment_body': ""I'd actually think that we'd want to just change all UUID columns to 36 characters. The likelihood that we need to contend with Microsoft-generated UUIDs seems to me exceedingly small (and in those cases, we should just be removing the curly-braces anyways)."", 'comment_created': datetime.datetime(2020, 7, 27, 13, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 460908830, 'comment_body': ""@ibacher , setting UUID to 36 chars gives an error : \r\n\r\n`\r\nCaused by: java.sql.BatchUpdateException: Batch entry 0 insert into appointmentscheduling_appointment_type (name, description, duration, confidential, visit_type_id, uuid, date_created, date_changed, date_retired, retired, retire_reason, creator, changed_by, retired_by, appointment_type_id) values ('Urology (New Patient)', NULL, 20, 'FALSE', NULL, '4d85dda4-c437-11e4-a470-82b0ea87e2d8e', '2020-07-27 15:33:49+05:30', NULL, NULL, 'FALSE', NULL, 2, NULL, NULL, 22) was aborted: ERROR: value too long for type character(36)  Call getNextException to see other errors in the batch.\r\n`\r\n\r\nIf you see length of '4d85dda4-c437-11e4-a470-82b0ea87e2d8e' is 37, even though there are no curly braces. Thus I shifted to using VARCHAR(38) instead. Link to logs: https://pastebin.com/3i3L2N7a"", 'comment_created': datetime.datetime(2020, 7, 27, 13, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460954833, 'comment_body': ""@Am-Coder Do examples like that exist outside of the referencedemodata module? If not, shouldn't we just fix that module? "", 'comment_created': datetime.datetime(2020, 7, 27, 14, 59, 22, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 461011369, 'comment_body': '@ibacher , Let me check after correcting this uuid if I get error refering to uuid in other modules while initializing Reference Application.', 'comment_created': datetime.datetime(2020, 7, 27, 16, 22, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461037260, 'comment_body': '@ibacher , I just corrected it [here](https://github.com/openmrs/openmrs-module-referencedemodata/blob/abbce3805f7c76c57a210cb8595352cca7812f34/api/src/main/java/org/openmrs/module/referencedemodata/bundle/AppointmentMetadata.java#L46) and there is no other error in any other module or reference demo data module related to uuid being more then 36 characters. But for correction I just removed the last extra character. So, we are good to go with char(36) for PostgreSQL after this correction.\r\n\r\n@dkayiwa , what is your say on this to keep uuid to char(36) or varchar(38) and whether this be done for MySQL as well ?', 'comment_created': datetime.datetime(2020, 7, 27, 17, 3, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461084089, 'comment_body': 'Doing a uuid of 36 characters makes more sense.', 'comment_created': datetime.datetime(2020, 7, 27, 18, 24, 47, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461154728, 'comment_body': '@dkayiwa  @ibacher , Made the changes to convert char(38) to char(36) for PostgreSQL. Once this issue gets resolved we are good to go to initialize Reference Application on PostgreSQL. Currently, with these changes, I am able to run Reference Application on PostgreSQL :slightly_smiling_face: \r\n', 'comment_created': datetime.datetime(2020, 7, 27, 20, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461167948, 'comment_body': 'What if it is another char(38) field which is not a uuid?', 'comment_created': datetime.datetime(2020, 7, 27, 21, 2, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461506619, 'comment_body': ""@dkayiwa  @ibacher , I couldn't find a way to get access to column name within the scope of this method. Apparently, what I have understood is we will have to make the changes in diferent change classes [here](https://github.com/liquibase/liquibase/tree/bce767333bd4867708a03ca5fb90df868433fb44/liquibase-core/src/main/java/liquibase/change/core) and this does not seem right.\r\n\r\nIf we hold a possibility of having any other fields with char(38), what if we apparently make change to using varchar(38) and if we finally are ready to revert https://issues.openmrs.org/browse/TRUNK-1283 , then we make char(36) directly into liquibase changesets for both MySQL and PostgreSQL rather then going this way ?"", 'comment_created': datetime.datetime(2020, 7, 28, 11, 21, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461527975, 'comment_body': 'Would the revert require touching all existing changesets?', 'comment_created': datetime.datetime(2020, 7, 28, 12, 5, 48, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461529964, 'comment_body': 'Yes, that is what I have in mind.', 'comment_created': datetime.datetime(2020, 7, 28, 12, 9, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461530868, 'comment_body': 'Would that require a validation checksum for the so many changesets?', 'comment_created': datetime.datetime(2020, 7, 28, 12, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461532756, 'comment_body': 'Apparently, Yes.', 'comment_created': datetime.datetime(2020, 7, 28, 12, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461535961, 'comment_body': 'That would be too many changes.', 'comment_created': datetime.datetime(2020, 7, 28, 12, 20, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461538139, 'comment_body': ""Rather than reverting (which isn't really the way to go) would it make sense to just add a new changeset downsizing the UUID fields?"", 'comment_created': datetime.datetime(2020, 7, 28, 12, 24, 48, tzinfo=datetime.timezone.utc), 'commenter': 'ibacher', 'type': 'User'}, {'comment_id': 461544603, 'comment_body': 'A changeset like this ( I took it from the docs ) : \r\n\r\n```\r\n<changeSet  author=""liquibase-docs""  id=""modifyDataType-example"">  \r\n    <modifyDataType  catalogName=""cat""  \r\n            columnName=""id""  \r\n            newDataType=""int""  \r\n            schemaName=""public""  \r\n            tableName=""person""/>  \r\n</changeSet>\r\n```\r\nwould then need to be added for each table present in core as well as all the ref. application modules. Wouldn\'t it be adding some overhead ?\r\n', 'comment_created': datetime.datetime(2020, 7, 28, 12, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '40d9fad8c0be583d63ad314ee10d709be0913b63', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28122f0d51d30a4f3c1468528937f31c8b8e2ebe', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a068908c327cf38279e4b11addb57aee3857c1a3', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3ec009ada74645529f8b8f2cb5e2741d6d443d9', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1224b8ab5bbfbbdaaa968d0b029a1bd5435966d3', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
462636222,TRUNK-5901 Error scheduling task via SysAdmin OWA on PostgreSQL,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Updated the sequence values to correct ones.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5901

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3426,https://api.github.com/repos/openmrs/openmrs-core/pulls/3426,https://github.com/openmrs/openmrs-core/pull/3426,closed,2,0,1,1,2,0,0,0,[],2020-08-04 09:11:19+00:00,2020-08-04 17:28:44+00:00,29845.0,8:17:25,[],"[{'commit_sha': '24f3c31ca2cdd00a28d36a086ee9229d0eff7ca5', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
465401059,TRUNK-5917 Boolean Like comparison not allowed in PostgreSQL,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Changed like to eq.
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5917

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3490,https://api.github.com/repos/openmrs/openmrs-core/pulls/3490,https://github.com/openmrs/openmrs-core/pull/3490,closed,1,1,1,1,1,0,0,0,[],2020-08-10 10:00:32+00:00,2020-08-10 12:58:30+00:00,10678.0,2:57:58,[],"[{'commit_sha': 'b64902d97acbc76038e1bad4be4d572cc8dfde1d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
465984762,TRUNK-5921 Custom longblob type for PostgreSQL,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
PostgreSQL provides two types to handle binary large data which are oid and bytea. Liquibase maps columns of type longblob to type bytea in PostgreSQL but Hibernate maps java.sql.Blob type to oid in PostgreSQL. For consistency with Hibernate ORM we need to map longblob to oid type. If we don't do this then an error is raised when exporting metadata with logs: https://pastebin.com/3uWyi7eV . 
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5921

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3498,https://api.github.com/repos/openmrs/openmrs-core/pulls/3498,https://github.com/openmrs/openmrs-core/pull/3498,closed,50,0,1,1,4,0,0,0,[],2020-08-11 09:28:56+00:00,2020-08-14 14:48:10+00:00,278354.0,"3 days, 5:19:14",[],"[{'commit_sha': '5952780da7c58b8b17aaeb7c02feb4c2aae9ef9f', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
467277874,Trunk 5927 Removed liquibase dependency for sequence update,"<!--- Add a pull request title above in this format -->
<!--- real example: 'TRUNK-5111: Replace use of deprecated isVoided' -->
<!--- 'TRUNK-JiraIssueNumber: JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Removed liquibase dependency for sequence update
## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first! -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it! -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/TRUNK-5927

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,3506,https://api.github.com/repos/openmrs/openmrs-core/pulls/3506,https://github.com/openmrs/openmrs-core/pull/3506,closed,100,28,9,4,8,26,0,0,[],2020-08-13 09:53:09+00:00,2020-08-17 10:58:05+00:00,349496.0,"4 days, 1:04:56","[{'comment_id': 469872813, 'comment_body': 'If these are the only lines that have led to all these changes, then we should just put it in a database utility class and that should be all.', 'comment_created': datetime.datetime(2020, 8, 13, 11, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 469875942, 'comment_body': 'Oh I see. I was unaware of utility class. Let me look into that. ', 'comment_created': datetime.datetime(2020, 8, 13, 11, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470155102, 'comment_body': ""@dkayiwa , as you can see here I am making use session to check for current database that is being used by OpenMRS via the set dialect, so **the current change will never cause an issue on MySQL. I have checked it on both MySQL and PostgreSQL and everything is working fine.**\r\n\r\nNow, to make use of database utility approach I am not able to figure out how to get access to this hibernate session in module's activator class. This session will be required so as to pass to this utility method. "", 'comment_created': datetime.datetime(2020, 8, 13, 18, 17, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470160172, 'comment_body': ""Why I need the current change ?\r\n\r\nI need to update postgresql sequences [here](https://github.com/openmrs/openmrs-module-referencemetadata/blob/8dc640fb4e29e7b5200e9c79027e7c23050c5095/api/src/main/java/org/openmrs/module/referencemetadata/ReferenceMetadataActivator.java#L110) , after the insertion of all the concepts in Reference Metadata Activator. If I don't update the sequence here then an error with logs : https://pastebin.com/23mQFUk1 this is raised when inserting concept source via reference application on PostgreSQL. So, I need to make a call to the service I have created in this PR here."", 'comment_created': datetime.datetime(2020, 8, 13, 18, 27, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470187266, 'comment_body': 'How about Context.getAdministrationService().executeSQL?', 'comment_created': datetime.datetime(2020, 8, 13, 19, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 470195049, 'comment_body': ""Thanks for pointing to the AdministrativeService. I don't think we can use the executeSQL directly without doing some major changes. But what I think can be done is shift this updateSequence method to AdministrativeService . Then there won't be any requirement of a separate service as I have done here. Just a call like **Context.getAdministrationService().updatePostgreSQLsequence** sequence will do the work. I think this will be right. @dkayiwa What do you think ?"", 'comment_created': datetime.datetime(2020, 8, 13, 19, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470199229, 'comment_body': ""Why can't we use executeSQL?"", 'comment_created': datetime.datetime(2020, 8, 13, 19, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 470209197, 'comment_body': 'If we pass the update sequence queries directly to this method then error will arise for MySQL since it does not support sequences. Now if we are to make use of this method then we will have to pass an extra argument to decide whether the sent query is of update sequence or not and then handle accordingly. If it is of update sequence type then execute it only on PostgreSQL.', 'comment_created': datetime.datetime(2020, 8, 13, 19, 52, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470210585, 'comment_body': 'What error do you get on MySQL?', 'comment_created': datetime.datetime(2020, 8, 13, 19, 55, 25, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 470212394, 'comment_body': 'If you execute the query ""SELECT setval(\'person_person_id_seq\', (SELECT MAX(person_id) FROM person)+1);"" on MySQL then you get an error : \r\n\r\n**5000\tError Code: 1305. FUNCTION openmrs164.setval does not exist\t0.611 sec**\r\n', 'comment_created': datetime.datetime(2020, 8, 13, 19, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470672767, 'comment_body': ""Shouldn't we make this call only if we are running PostgreSQL?"", 'comment_created': datetime.datetime(2020, 8, 14, 14, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 470672870, 'comment_body': 'How about the UpdateFIlter.java?', 'comment_created': datetime.datetime(2020, 8, 14, 14, 50, 7, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 470673147, 'comment_body': 'Will this need to be called every time data is inserted?', 'comment_created': datetime.datetime(2020, 8, 14, 14, 50, 34, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 470743367, 'comment_body': ""> Shouldn't we make this call only if we are running PostgreSQL?\r\n\r\nYes We are supposed to make the call only when DB is PostgreSQL but since we do not have access to session at this level we cannot determine the DB. Two things come to my mind for this:\r\n1. If it is regarding code readability then we can rename the method to UpdateSequenceIfDbIsPostgreSQL\r\nor\r\n2. We can split this single call into two different calls to AdminService, one two determine if db is PostgreSQL and other to update the sequence if previous call returns true. To me two calls appeared overhead so I went with a single call approach.\r\n\r\n@dkayiwa , What do you think should be right ?"", 'comment_created': datetime.datetime(2020, 8, 14, 16, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470747440, 'comment_body': ""> Will this need to be called every time data is inserted?\r\n\r\nIf the data that we are inserting does not holds id values for different entities then this call won't be required. PostgreSQL automatically updates the sequence in this case. But if in the data that is getting inserted we specify the id values for different entities then PostgreSQL does not increment the sequences and then we need to make a call to this service. This is the case [here](https://github.com/openmrs/openmrs-module-referencemetadata/blob/0cbf10b8103b97b9e1e0cd018706c47651ea20ea/api/src/main/java/org/openmrs/module/referencemetadata/ReferenceMetadataActivator.java#L109) "", 'comment_created': datetime.datetime(2020, 8, 14, 17, 6, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470748377, 'comment_body': ""> How about the UpdateFIlter.java?\r\n\r\nI'll look into it and see if there's a way."", 'comment_created': datetime.datetime(2020, 8, 14, 17, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 470766638, 'comment_body': ""> How about the UpdateFIlter.java?\r\n\r\nThe UpdateFilter is only called when there are insertions via liquibase . But consider [here](https://github.com/openmrs/openmrs-module-referencemetadata/blob/0cbf10b8103b97b9e1e0cd018706c47651ea20ea/api/src/main/java/org/openmrs/module/referencemetadata/ReferenceMetadataActivator.java#L101) where insertions are not via liquibase of Covid-19 Numric Concepts, then we cannot do anything and will get issues. So, I don't think it will work."", 'comment_created': datetime.datetime(2020, 8, 14, 17, 45, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 471022817, 'comment_body': 'Could we automate this by making the call from `OpenmrsObjectSaveHandler`?', 'comment_created': datetime.datetime(2020, 8, 15, 18, 44, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 471321383, 'comment_body': '@dkayiwa , OpenMRSObjectSaveHandler is called before the ""save__"" or ""void__"", ""unvoid_"", ""retire__"", or ""unretire___"" methods in all the service classes but not around the method [importData](https://github.com/openmrs/openmrs-module-dataexchange/blob/caf00edb7529136581f694640709a3bafb6af3e9/api/src/main/java/org/openmrs/module/dataexchange/DataImporter.java#L56) in dataexhchange module. This method is called to save concepts from the xml dataset files using dbunit (see [here](https://github.com/openmrs/openmrs-module-referencemetadata/blob/0cbf10b8103b97b9e1e0cd018706c47651ea20ea/api/src/main/java/org/openmrs/module/referencemetadata/ReferenceMetadataActivator.java#L97)). \r\n\r\nAlso, will it be alright to have the sequences updated even when PostgreSQL updates them automatically ?. There are only two cases where we will want to update the sequences via this service - First, when data is inserted via liquibase and second when a dataset is imported from an xml file ( in these two cases only id of object is specified).', 'comment_created': datetime.datetime(2020, 8, 17, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 471353887, 'comment_body': 'instead of looping one by one, cant we submit them as a batch?', 'comment_created': datetime.datetime(2020, 8, 17, 9, 26, 11, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 471354042, 'comment_body': 'Why .list()?', 'comment_created': datetime.datetime(2020, 8, 17, 9, 26, 29, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 471379409, 'comment_body': 'Because each of the query is a ""SELECT"" query I used .list() . We can also use .uniqueResult() since each of these queries return single value. I have not mad use of ALTER sequence statement here since it was not allowing the subqueries in it as it is a DDL statement.', 'comment_created': datetime.datetime(2020, 8, 17, 10, 13, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 471381508, 'comment_body': 'Did you explore `createSQLQuery().executeUpdate()`?', 'comment_created': datetime.datetime(2020, 8, 17, 10, 18, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 471393131, 'comment_body': 'Since the statements are of ""SELECT"" type , executeUpdate() raises exception. Link to logs: https://pastebin.com/WAYJznU2 ', 'comment_created': datetime.datetime(2020, 8, 17, 10, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 471395723, 'comment_body': 'How about using it with `ALTER SEQUENCE`?', 'comment_created': datetime.datetime(2020, 8, 17, 10, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 471398831, 'comment_body': ' We cannot make use of ALTER sequence statement here since it was not allowing the subqueries in it as it is a DDL statement. We require a subquery to get max id from table.', 'comment_created': datetime.datetime(2020, 8, 17, 10, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': 'e2239e54115052dd49870aed432352e5b9fe11ac', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73485062772184f63eac6b474316129d3f33c314', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e4561b0f285649271a15785169cc4f7e91fd5139', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38d306910c2a0fdc840c9205f3271656f32b5377', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
449383803,"HTML-740 In the HTML form entry module, map hibernate sequences corre…","…ctly

<!--- Add a pull request title above in this format -->
<!--- real example: 'HTML-671 Current Status in the Module Information page shows the binary values' -->
<!--- 'HTML-JiraIssueNumber JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Mapped the sequences correctly

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/HTML-740

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My pull request only contains **ONE single commit**
(the number above, next to the 'Commits' tab is 1).

  No? -> [read here](https://wiki.openmrs.org/display/docs/Pull+Request+Tips) on how to squash multiple commits into one

- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,190,https://api.github.com/repos/openmrs/openmrs-module-htmlformentry/pulls/190,https://github.com/openmrs/openmrs-module-htmlformentry/pull/190,closed,12,4,4,1,0,0,0,0,[],2020-07-15 10:12:47+00:00,2020-07-15 10:52:30+00:00,2383.0,0:39:43,[],"[{'commit_sha': 'c87d14f99e8ce076f68c08fc3d81cc10114f168d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
456789958,HTML-743 Name Column not made nullable in PostgreSQL for table htmlfo…,"HTML-743 Name Column not made nullable in PostgreSQL
<!--- Add a pull request title above in this format -->
<!--- real example: 'HTML-671 Current Status in the Module Information page shows the binary values' -->
<!--- 'HTML-JiraIssueNumber JiraIssueTitle' -->
## Description of what I changed
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->
Added standard liquibase way to remove null constraints as given here : https://docs.liquibase.com/change-types/community/drop-not-null-constraint.html 

## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/HTML-743

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My pull request only contains **ONE single commit**
(the number above, next to the 'Commits' tab is 1).

  No? -> [read here](https://wiki.openmrs.org/display/docs/Pull+Request+Tips) on how to squash multiple commits into one

- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,193,https://api.github.com/repos/openmrs/openmrs-module-htmlformentry/pulls/193,https://github.com/openmrs/openmrs-module-htmlformentry/pull/193,closed,4,4,1,1,2,0,0,0,[],2020-07-26 18:49:15+00:00,2020-07-26 19:47:20+00:00,3485.0,0:58:05,[],"[{'commit_sha': '08f6bc70ef90e890a981067ef13e9140eca5a61f', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
459003657,HTML-744 Correct The liquibase checksums for OpenMRS HTML Form Entry …,"…module

<!--- Add a pull request title above in this format -->
<!--- real example: 'HTML-671 Current Status in the Module Information page shows the binary values' -->
<!--- 'HTML-JiraIssueNumber JiraIssueTitle' -->
## Description of what I changed
Corrected the checksums based on OpenMRS-core 2.3.x
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->


## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/HTML-744

## Checklist: I completed these to help reviewers :)
<!--- Put an `x` in the box if you did the task -->
<!--- If you forgot a task please follow the instructions below -->
- [x] My pull request only contains **ONE single commit**
(the number above, next to the 'Commits' tab is 1).

  No? -> [read here](https://wiki.openmrs.org/display/docs/Pull+Request+Tips) on how to squash multiple commits into one

- [x] My IDE is configured to follow the [**code style**](https://wiki.openmrs.org/display/docs/Java+Conventions) of this project.

  No? Unsure? -> [configure your IDE](https://wiki.openmrs.org/display/docs/How-To+Setup+And+Use+Your+IDE), format the code and add the changes with `git add . && git commit --amend`

- [x] I have **added tests** to cover my changes. (If you refactored
  existing code that was well tested you do not have to add tests)

  No? -> write tests and add them to this commit `git add . && git commit --amend`

- [x] I ran `mvn clean package` right before creating this pull request and
  added all formatting changes to my commit.

  No? -> execute above command

- [x] All new and existing **tests passed**.

  No? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.

- [x] My pull request is **based on the latest changes** of the master branch.

  No? Unsure? -> execute command `git pull --rebase upstream master`

",True,194,https://api.github.com/repos/openmrs/openmrs-module-htmlformentry/pulls/194,https://github.com/openmrs/openmrs-module-htmlformentry/pull/194,closed,2,2,1,1,0,0,0,0,[],2020-07-30 09:15:37+00:00,2020-07-30 11:38:58+00:00,8601.0,2:23:21,[],"[{'commit_sha': 'dfcbc3032b7d04643cf7762ba90bd6afb87a749a', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
465432264,CALC-56 Change 0 to false for voided field in CalculationRegistration…,"**Changes I made**
Changed 0 to false for boolean field voided.

**Link to ticket**
https://issues.openmrs.org/browse/CALC-56",True,8,https://api.github.com/repos/openmrs/openmrs-module-calculation/pulls/8,https://github.com/openmrs/openmrs-module-calculation/pull/8,closed,1,1,1,1,0,0,0,0,[],2020-08-10 11:08:51+00:00,2020-08-10 12:47:03+00:00,5892.0,1:38:12,[],"[{'commit_sha': 'a98094e318579ea5070161ce1ccc6fac538093b1', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
450068881,CALC-55 Incorrect Sequence Mapping for Hibernate,"Changes I did:
Corrected the sequence name. Now module initializes on PostgreSQL successfully.

Issue I worked On - 
https://issues.openmrs.org/browse/CALC-55 ",True,7,https://api.github.com/repos/openmrs/openmrs-module-calculation/pulls/7,https://github.com/openmrs/openmrs-module-calculation/pull/7,closed,1,1,1,1,0,0,0,0,[],2020-07-16 10:06:28+00:00,2020-07-16 10:35:55+00:00,1767.0,0:29:27,[],"[{'commit_sha': '601b4d1e8b0a2328c6fa3eaf67c27f3767faac08', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
451751158,IDGEN-115 Map Sequence Correctly,"**Description of Changes I Made :**
Mapped the sequences correctly.

**Link to Ticket :** https://issues.openmrs.org/browse/IDGEN-115 ",True,82,https://api.github.com/repos/openmrs/openmrs-module-idgen/pulls/82,https://github.com/openmrs/openmrs-module-idgen/pull/82,closed,20,4,1,1,0,0,0,0,[],2020-07-18 06:41:12+00:00,2020-07-18 18:22:58+00:00,42106.0,11:41:46,[],"[{'commit_sha': 'ac0fb79fecfeb7dedf19aeae41f3f2d907b9a472', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
451756382,IDGEN-116 Liquibase error on initializing IDGEN module on PostgreSQL,"**Description of Changes I Made :**
In the logs here https://pastebin.com/g6Em5xiT it is seen that error is due to the use of this quote  in query. I have tested the change on both MySQL and PostgreSQL and the change set gets executed without any errors after removing ""`"" .

**Link to Ticket :** https://issues.openmrs.org/browse/IDGEN-116",True,83,https://api.github.com/repos/openmrs/openmrs-module-idgen/pulls/83,https://github.com/openmrs/openmrs-module-idgen/pull/83,closed,3,1,1,2,3,2,0,0,[],2020-07-18 06:53:06+00:00,2020-07-20 12:47:22+00:00,194056.0,"2 days, 5:54:16","[{'comment_id': 456882249, 'comment_body': 'what happens on this if you try using    """"  .Does the IDGEN get updated?', 'comment_created': datetime.datetime(2020, 7, 19, 8, 59, 47, tzinfo=datetime.timezone.utc), 'commenter': 'HerbertYiga', 'type': 'User'}, {'comment_id': 457282779, 'comment_body': 'using "" "" , you get a syntax error on MySQL.', 'comment_created': datetime.datetime(2020, 7, 20, 11, 3, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '18abfb8ab30c7af81d9298506571194df459313e', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc3165c7464463de97afde0da59fba2649ddc745', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
454427951,IDGEN-117 Idgen module initializing error after jetty server starts ,"**Changes I have made :**
1.  Added uuid support for PostgreSQL
2.  Liquibase converts tinyint to smallint in case of PostgreSQL which does not behaves as boolean. For MySQL, tinyint(1) is equivalent to boolean but not for PostgreSQL. So I made the changes so that for PostgreSQL the column type is set to boolean and for other db's it is tinyint(1) . Also, **like** comparisons for boolean types gives error on PostgreSQL so made it an **equal** comparison in hibernate expression.

** Link to ticket **
https://issues.openmrs.org/browse/IDGEN-117 ",True,84,https://api.github.com/repos/openmrs/openmrs-module-idgen/pulls/84,https://github.com/openmrs/openmrs-module-idgen/pull/84,closed,8,2,2,2,0,9,0,0,[],2020-07-21 11:49:58+00:00,2020-07-21 17:03:11+00:00,18793.0,5:13:13,"[{'comment_id': 458055344, 'comment_body': 'Is this related?', 'comment_created': datetime.datetime(2020, 7, 21, 12, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 458058330, 'comment_body': 'Why not BOOLEAN?', 'comment_created': datetime.datetime(2020, 7, 21, 12, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 458062339, 'comment_body': 'Yes with expression.like you get an error raised. ', 'comment_created': datetime.datetime(2020, 7, 21, 12, 37, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 458063957, 'comment_body': 'liquibase converts boolean to BIT(1) in MySQL ( as found [here](https://stackoverflow.com/questions/16890723/list-all-liquibase-sql-types) ) but according to MySQL standards Boolean is equivalent to Tinyint(1) ( as found [here](https://dev.mysql.com/doc/refman/8.0/en/integer-types.html) )', 'comment_created': datetime.datetime(2020, 7, 21, 12, 40, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 458068164, 'comment_body': ""Doesn't openmrs-core already have `retired` fields as BOOLEAN?"", 'comment_created': datetime.datetime(2020, 7, 21, 12, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 458073125, 'comment_body': ""@dkayiwa  you are right. Just found [this](https://github.com/openmrs/openmrs-core/blob/47463eb05661ec9f8323c96874fc8d6161551389/api/src/main/java/liquibase/ext/datatype/core/MySQLBooleanType.java) where we are explicitly converting Boolean to tinyint(1) in OpenMRS for MySQL. I'll try with boolean now."", 'comment_created': datetime.datetime(2020, 7, 21, 12, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 458125298, 'comment_body': '@dkayiwa , I have made the changes . ', 'comment_created': datetime.datetime(2020, 7, 21, 14, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 458128121, 'comment_body': ""Don't we already have the UUID() function already taken care of in openmrs-core?"", 'comment_created': datetime.datetime(2020, 7, 21, 14, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 458138993, 'comment_body': 'Yes, that is why we are using UUID() here and not uuid_generate_v1(). In openmrs-core we have created the wrapper function similar to MySQL for PostgreSQL which is UUID() that wraps around uuid_generate_v1().', 'comment_created': datetime.datetime(2020, 7, 21, 14, 26, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '186771569e5480f2827721ad04164c3b6cda219d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '973dca6ab7846efdb42594ce34ea020c8950ee45', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
455795071,IDGEN-118 Convert tinyint(1) to boolean in liquibase file of IdGen Module,"**Changes I made**
Changes type to boolean where error was coming.

**Link to ticket**
https://issues.openmrs.org/browse/IDGEN-118",True,85,https://api.github.com/repos/openmrs/openmrs-module-idgen/pulls/85,https://github.com/openmrs/openmrs-module-idgen/pull/85,closed,4,2,1,1,0,0,0,0,[],2020-07-23 15:31:47+00:00,2020-07-23 15:43:46+00:00,719.0,0:11:59,[],"[{'commit_sha': 'c05109b1eb40e355587a1a8c1dd6c08cfb1574fe', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
456320613,IDGEN-119 UUID error on PostgreSQL with reference meta data module,"**Changes I made**
Correct the uuid type.

**Link to ticket**
https://issues.openmrs.org/browse/IDGEN-119",True,86,https://api.github.com/repos/openmrs/openmrs-module-idgen/pulls/86,https://github.com/openmrs/openmrs-module-idgen/pull/86,closed,3,1,1,1,1,0,0,0,[],2020-07-24 14:32:03+00:00,2020-07-24 14:34:38+00:00,155.0,0:02:35,[],"[{'commit_sha': '9d372d24f2388afe362740c57f40deacfea9f827', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
458588616,IDGEN-120 Correct The liquibase checksums for OpenMRS IDGEN module,"**Changes I made**
Corrected the older checksums to values before the liquibase update

**Link to ticket**
https://issues.openmrs.org/browse/IDGEN-120",True,87,https://api.github.com/repos/openmrs/openmrs-module-idgen/pulls/87,https://github.com/openmrs/openmrs-module-idgen/pull/87,closed,6,8,1,3,0,3,0,0,[],2020-07-29 17:47:24+00:00,2020-07-29 21:27:33+00:00,13209.0,3:40:09,"[{'comment_id': 462479121, 'comment_body': 'I thought every checksum that starts with `8:` would be removed.', 'comment_created': datetime.datetime(2020, 7, 29, 17, 49, 27, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 462481497, 'comment_body': ""Ok I'll add the checksums after changes, generated with older version of liquibase as well."", 'comment_created': datetime.datetime(2020, 7, 29, 17, 53, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 462592842, 'comment_body': 'Checksum removed since this will be introduced from version 4.6.x', 'comment_created': datetime.datetime(2020, 7, 29, 21, 13, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '4fc9864084a78a952c2aa65707471322e40b6845', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0eb3662afe31f1811fc6e40f1ad69c53aab03924', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809ddeef43011ba42869427e36d551deb7c7ca88', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
453434699,AF-65 Incorrect Sequence Mapping for Hibernate,"**Changes I made**
Corrected the sequence name

**Link to issue**
https://issues.openmrs.org/browse/AF-65",True,53,https://api.github.com/repos/openmrs/openmrs-module-appframework/pulls/53,https://github.com/openmrs/openmrs-module-appframework/pull/53,closed,1,1,1,1,0,0,0,0,[],2020-07-20 13:11:05+00:00,2020-07-20 14:01:57+00:00,3052.0,0:50:52,[],"[{'commit_sha': '249612f40aeeee2a00956b5b040f693523f3ec14', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
464565694,PROV-104 Properly map the sequences via hibernate,"**Changes I made**
Corrected sequence name 

**Link to ticket**
https://issues.openmrs.org/browse/PROV-104",True,41,https://api.github.com/repos/openmrs/openmrs-module-providermanagement/pulls/41,https://github.com/openmrs/openmrs-module-providermanagement/pull/41,closed,8,2,2,1,0,0,0,0,[],2020-08-07 12:01:01+00:00,2020-08-07 12:08:08+00:00,427.0,0:07:07,[],"[{'commit_sha': 'c6342e3142066fe0922529824edc50ef931db5d8', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
455229727,PROV-105 Liquibase Error on Initializing Provider Management Module,"**Changes I made**
If you changes valueNumeric to value then rather then passing 0 as a numeric 0 in SQL query (which causes error on PostgreSQL) it is passed as a string ""0"" and this postgresql recognizes as false. Also I tested this on MySQL and stored value is 0 for tinyint(1).

**Link to ticket**
https://issues.openmrs.org/browse/PROV-105",True,39,https://api.github.com/repos/openmrs/openmrs-module-providermanagement/pulls/39,https://github.com/openmrs/openmrs-module-providermanagement/pull/39,closed,3,1,1,1,0,0,0,0,[],2020-07-22 16:35:27+00:00,2020-07-22 16:55:08+00:00,1181.0,0:19:41,[],"[{'commit_sha': '0ad921866a0b38ba0705dab6eb8b0384709167f8', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
458692551,PROV-106 Correct the liquibase checksums for OpenMRS Provider Managem…,"**Changes I made**
Corrected check sums based on openmrs-core 2.3.x

**Link to ticket**
https://issues.openmrs.org/browse/PROV-106",True,40,https://api.github.com/repos/openmrs/openmrs-module-providermanagement/pulls/40,https://github.com/openmrs/openmrs-module-providermanagement/pull/40,closed,2,2,1,1,0,0,0,0,[],2020-07-29 20:58:15+00:00,2020-07-29 21:05:18+00:00,423.0,0:07:03,[],"[{'commit_sha': '5ca0b295fb2f2f10f2cecdb54ec741637c2ec9ec', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
455047264,MAP-40 Properly Map the sequence via hibernate,"**Changes I did**
Mapped the correct sequences

**Link to Ticket**
https://issues.openmrs.org/browse/MAP-40",True,53,https://api.github.com/repos/openmrs/openmrs-module-metadatamapping/pulls/53,https://github.com/openmrs/openmrs-module-metadatamapping/pull/53,closed,12,4,4,1,0,0,0,0,[],2020-07-22 11:06:09+00:00,2020-07-22 14:58:24+00:00,13935.0,3:52:15,[],"[{'commit_sha': '2c3eef4d195d3160274a3ba743f195aecf23adbb', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
455673828,MAP-41 Correct the sequence name to as created in PostgreSQL db,"**Changes I made**
Corrected sequence name

**Link to ticket** 
https://issues.openmrs.org/browse/MAP-41",True,55,https://api.github.com/repos/openmrs/openmrs-module-metadatamapping/pulls/55,https://github.com/openmrs/openmrs-module-metadatamapping/pull/55,closed,1,1,1,1,0,8,0,0,[],2020-07-23 12:29:59+00:00,2020-07-24 14:38:54+00:00,94135.0,"1 day, 2:08:55","[{'comment_id': 459447123, 'comment_body': ""Isn't the original the correct one?"", 'comment_created': datetime.datetime(2020, 7, 23, 13, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 459458261, 'comment_body': ""That's what I thought when I added the sequence name in the beginning but after cross checking with the name of sequence created in db I found it to be **metadatamapping_metadata_term_mapp_metadata_term_mapping_id_seq** . Here is the link to image : https://pasteboard.co/JiZfhuB.png "", 'comment_created': datetime.datetime(2020, 7, 23, 13, 42, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 459460718, 'comment_body': ""Shouldn't we just fix the wrong name that you found?"", 'comment_created': datetime.datetime(2020, 7, 23, 13, 46, 10, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 459466921, 'comment_body': 'A change set to rename the sequence in db for postgresql can be added rather then changing in hibernate mapping. Will this be right ?', 'comment_created': datetime.datetime(2020, 7, 23, 13, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 459468144, 'comment_body': 'Anything that does not mean using the wrong name.', 'comment_created': datetime.datetime(2020, 7, 23, 13, 55, 49, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 459477641, 'comment_body': '@dkayiwa , there is a limit to maximum length of the name of sequence. I tried to rename the sequence with query : \r\n\r\n`ALTER SEQUENCE metadatamapping_metadata_term_mapp_metadata_term_mapping_id_seq RENAME TO metadatamapping_metadata_term_mapping_metadata_term_mapping_id_seq;`\r\n\r\nBut then we get output as :\r\n```\r\nNOTICE:  identifier ""metadatamapping_metadata_term_mapping_metadata_term_mapping_id_seq"" will be truncated to ""metadatamapping_metadata_term_mapping_metadata_term_mapping_id_""\r\nALTER SEQUENCE\r\n\r\nQuery returned successfully in 94 msec.\r\n```\r\n\r\nSo postgresql can never store the original sequence name we need. ', 'comment_created': datetime.datetime(2020, 7, 23, 14, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 459478668, 'comment_body': 'oh i see! can you include this on the ticket?', 'comment_created': datetime.datetime(2020, 7, 23, 14, 10, 4, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 459480721, 'comment_body': 'I will add this in ticket description.', 'comment_created': datetime.datetime(2020, 7, 23, 14, 12, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '53d26acb53cce8bf95bcf59c0c68a232464f319a', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
455048408,META-374 Properly map the sequences via hibernate,"**Changes I did**
Mapped the sequences correctly

**Link to ticket**
https://issues.openmrs.org/browse/META-374",True,57,https://api.github.com/repos/openmrs/openmrs-module-metadatasharing/pulls/57,https://github.com/openmrs/openmrs-module-metadatasharing/pull/57,closed,9,3,3,1,0,0,0,0,[],2020-07-22 11:08:31+00:00,2020-07-22 14:53:21+00:00,13490.0,3:44:50,[],"[{'commit_sha': '41d40107ce6f62012a729a306c3cc01db0d1f166', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
455337727,REPORT-867 Liquibase error on starting Reporting Module,"**Description of Changes I made**

1. There were errors with sql queries that are specific to mysql. So, I created sql queries with similar behavior on PostgreSQL in the form of liquibase changesets.

2. Removed ` from an sql query since it gives error on PostgreSQL.

**Link to ticket**
https://issues.openmrs.org/browse/REPORT-867",True,201,https://api.github.com/repos/openmrs/openmrs-module-reporting/pulls/201,https://github.com/openmrs/openmrs-module-reporting/pull/201,closed,28,3,1,1,0,2,0,0,[],2020-07-22 20:27:41+00:00,2020-07-23 11:25:08+00:00,53847.0,14:57:27,"[{'comment_id': 459359735, 'comment_body': 'Did you confirm that this does not affect the checksum?', 'comment_created': datetime.datetime(2020, 7, 23, 10, 39, 1, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 459364092, 'comment_body': '@dkayiwa , yes and also checked with the docs [here](https://www.liquibase.org/blog/what-affects-changeset-checksums) .', 'comment_created': datetime.datetime(2020, 7, 23, 10, 48, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '0f417c917008f592dcd08d93932c7b68c2fdeb1a', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
463294248,Report 869  Change tinyint(1) to boolean for boolean columns in Reporting Module,"**Changes I did**
Changed tinyint(1) to boolean

**Link to ticket**
https://issues.openmrs.org/browse/REPORT-869",True,203,https://api.github.com/repos/openmrs/openmrs-module-reporting/pulls/203,https://github.com/openmrs/openmrs-module-reporting/pull/203,closed,8,3,1,2,0,0,0,0,[],2020-08-05 10:29:24+00:00,2020-08-05 13:55:07+00:00,12343.0,3:25:43,[],"[{'commit_sha': 'b9a8d983f40600e7dedd026a274245e6a2344891', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08e131959b4d8ea3e061b0b4a72abdd6b2399713', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
464070361,RA-1799 Error in Built In Reports OWA functionalities on PostgreSQL,"**Changes I made**
Changed voided = 0 to voided = false and changed Like to = for id setting. These two are sources of error on PostgreSQL for Built In reports OWA.

**Link to ticket**
https://issues.openmrs.org/browse/RA-1799",True,53,https://api.github.com/repos/openmrs/openmrs-module-referencemetadata/pulls/53,https://github.com/openmrs/openmrs-module-referencemetadata/pull/53,closed,8,8,8,1,0,0,0,0,[],2020-08-06 14:38:48+00:00,2020-08-06 15:27:13+00:00,2905.0,0:48:25,[],"[{'commit_sha': 'bb7fe677efd59f4bfa8bf3a94d41584fc7356e1d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
457346999,RA-1797 Correct UUID value in Reference Demo Data Module,"**Changes I made**
Corrected UUID value by trimming extra e.

**Link to ticket**
https://issues.openmrs.org/browse/RA-1797",True,7,https://api.github.com/repos/openmrs/openmrs-module-referencedemodata/pulls/7,https://github.com/openmrs/openmrs-module-referencedemodata/pull/7,closed,2,2,2,2,5,0,0,0,[],2020-07-27 19:06:47+00:00,2020-07-27 19:57:01+00:00,3014.0,0:50:14,[],"[{'commit_sha': '6c61452407483576528471c2daf867850f5ac8eb', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d473eeaa1fcf939f2878fb8da9bd2ae9dcc27ae', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
456582141,AM-216 Properly map the sequences via hibernate,"**Changes I made**
Mapped the sequences as generated in PostgreSQL db. 

**NOTE** - Due to a limit on the length of sequence name in PostgreSQL, at many places the table name gets sliced while generating sequence name. So, I have added the sequence names as generated in PostgreSQL db. 


**Link to ticket**
https://issues.openmrs.org/browse/AM-216",True,33,https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/33,https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/33,closed,29,7,7,2,0,5,0,0,[],2020-07-25 07:40:12+00:00,2020-07-25 19:47:34+00:00,43642.0,12:07:22,"[{'comment_id': 460429102, 'comment_body': 'Can you include comments for those names you are shortening? Stating what the correct name should have been and why you are making it shortened.', 'comment_created': datetime.datetime(2020, 7, 25, 18, 3, 13, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460433739, 'comment_body': 'There is a problem in actual length of sequence that can be stored in PostgreSQL. When length excedes the limit then table name gets stripped from end.\r\n\r\nHere there is stripping in below sequences :\r\n\r\n1. Original Sequence Name- appointmentscheduling_appointment_block_appointment_block_id_seq\r\n\r\nCurrent name as set in AppointmentBlock.hbm file - appointmentscheduling_appointment_bloc_appointment_block_id_seq\r\n\r\n \r\n\r\n2. Original Sequence Name- appointmentscheduling_appointment_request_appointment_request_id_seq\r\n\r\nCurrent name as set in AppointmentRequest.hbm file - appointmentscheduling_appointment_re_appointment_request_id_seq\r\n\r\n \r\n\r\n3. Original Sequence Name-appointmentscheduling_appointment_status_history_appointment_status_history_id_seq\r\n\r\nCurrent name as set in AppointmentStatusHistory.hbm file - appointmentscheduling_appoint_appointment_status_history_id_seq\r\n\r\n \r\n\r\n4. Original Sequence Name-appointmentscheduling_provider_schedule_provider_schedule_id_seq\r\n\r\nCurrent name as set in ProviderSchedule.hbm file - appointmentscheduling_provider_schedul_provider_schedule_id_seq', 'comment_created': datetime.datetime(2020, 7, 25, 18, 58, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460435969, 'comment_body': 'I mean that we should include the comment in the code itself. So when one wants to correct it, they see the comment explaining that we did not make it so by mistake.', 'comment_created': datetime.datetime(2020, 7, 25, 19, 23, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460436352, 'comment_body': 'Oh, understood.', 'comment_created': datetime.datetime(2020, 7, 25, 19, 27, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460437921, 'comment_body': '@dkayiwa , I have added the comments in code.', 'comment_created': datetime.datetime(2020, 7, 25, 19, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '1f6844975fb78952683ec7384836cdcf3be34d0b', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1306bbac87047a59dd89f02550a5e4ad739495ed', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
456798889,AM-217 Convert tinyint to boolean in liquibase file for retired field,"**Changes I made**
Converted tinyint to Boolean

**Link to ticket** 
https://issues.openmrs.org/browse/AM-217",True,34,https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/34,https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/34,closed,7,7,1,1,0,0,0,0,[],2020-07-26 20:07:33+00:00,2020-07-26 20:17:32+00:00,599.0,0:09:59,[],"[{'commit_sha': '0872b9580988a85e8b65301f4ca8757657f064ce', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
457952502,AM-218 Error creating patient on Reference Application PostgreSQL,"**Changes I made**
0 is recognized as numeric in PostgreSQL and voided is a boolean column, hence change 0 to '0' as PostgreSQL recognizes '0' as False.

**Link to ticket**
https://issues.openmrs.org/browse/AM-218",True,35,https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/35,https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/35,closed,1,1,1,2,0,5,0,0,[],2020-07-28 17:34:47+00:00,2020-07-28 18:51:45+00:00,4618.0,1:16:58,"[{'comment_id': 461762118, 'comment_body': 'Would `false` work?', 'comment_created': datetime.datetime(2020, 7, 28, 17, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461785010, 'comment_body': ""Yes false will work. I just tested it on both MySQL and PostgreSQL. I have now changed '0' to false."", 'comment_created': datetime.datetime(2020, 7, 28, 18, 26, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461788984, 'comment_body': 'Am still wondering why `0` failed but `false` worked.', 'comment_created': datetime.datetime(2020, 7, 28, 18, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 461797229, 'comment_body': ""On PostgreSQL, 0 is numeric and does not converts to boolean false. But when it is '0' then it gets automatically converts to boolean false ( see [here](https://www.postgresql.org/docs/9.1/datatype-boolean.html)).\r\n\r\nFor MySQL, tinyint(1) is synonymous to boolean. So either you send 0/1 or true/false it will work."", 'comment_created': datetime.datetime(2020, 7, 28, 18, 48, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 461798998, 'comment_body': 'Oh i see! 😊 ', 'comment_created': datetime.datetime(2020, 7, 28, 18, 51, 22, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}]","[{'commit_sha': '2527ceb79f769fcdb0c00de159f72b9a88705d30', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '620e7c5cabc356f1d8e6b31bf8cd8d564a0cfaf3', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
459004728,AM-219 Correct The liquibase checksums for OpenMRS Appointment Schedu…,"…ling module
## Description of what I changed
Corrected the checksums based on OpenMRS-core 2.3.x
<!--- Describe your changes in detail -->
<!--- It can simply be your commit message, which you must have -->


## Issue I worked on
<!--- This project only accepts pull requests related to open issues -->
<!--- Want a new feature or change? Discuss it in an issue first -->
<!--- Found a bug? Point us to the issue/or create one so we can reproduce it -->
<!--- Just add the issue number at the end: -->
see https://issues.openmrs.org/browse/AM-219",True,36,https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/36,https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/36,closed,14,0,1,1,0,0,0,0,[],2020-07-30 09:16:55+00:00,2020-07-30 11:41:38+00:00,8683.0,2:24:43,[],"[{'commit_sha': 'e940768c79b410a6caa0d256ef3c9dde73af6e4c', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
462171167,AM-220 Change 0 to false for voided field in getTimeSlotByConstraints…,"**Changes I Made**
Changed 0 to false for voided since it is a boolean field.

**Link to ticket**
https://issues.openmrs.org/browse/AM-220 ",True,37,https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/37,https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/37,closed,1,1,1,1,0,0,0,0,[],2020-08-03 13:16:12+00:00,2020-08-03 13:42:03+00:00,1551.0,0:25:51,[],"[{'commit_sha': '802f30840f5480203ba0f013e38393518d8bf3b6', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
464567959,AM-221 Change 0 to false for voided field in Appointment Module DAO c…,"**Change I made**
Change voided =0 to voided=false

**Link to ticket**
https://issues.openmrs.org/browse/AM-221",True,38,https://api.github.com/repos/openmrs/openmrs-module-appointmentscheduling/pulls/38,https://github.com/openmrs/openmrs-module-appointmentscheduling/pull/38,closed,6,5,3,1,0,0,0,0,[],2020-08-07 12:06:26+00:00,2020-08-07 12:14:27+00:00,481.0,0:08:01,[],"[{'commit_sha': '039e072e367b549e23997c91ece930cf13c534b6', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
456649685,ADDR-119 Properly map the sequences via hibernate,"**Changes I made**
Mapped the sequences correctly

**Link to Ticket**
https://issues.openmrs.org/browse/ADDR-119
",True,30,https://api.github.com/repos/openmrs/openmrs-module-addresshierarchy/pulls/30,https://github.com/openmrs/openmrs-module-addresshierarchy/pull/30,closed,12,3,3,2,0,14,0,0,[],2020-07-25 18:35:54+00:00,2020-07-25 20:23:44+00:00,6470.0,1:47:50,"[{'comment_id': 460432172, 'comment_body': 'Is this name correct?', 'comment_created': datetime.datetime(2020, 7, 25, 18, 40, 9, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460432840, 'comment_body': 'Yes this will be the name since the table name strips by characters( max length is 63 characters) and ""map"" gets removed.', 'comment_created': datetime.datetime(2020, 7, 25, 18, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460432942, 'comment_body': 'Whenever you do that, can you always include a comment stating what the correct name should be and why you are changing it to this?', 'comment_created': datetime.datetime(2020, 7, 25, 18, 48, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460433675, 'comment_body': 'Sure from now on I am adding all the changes in ticket description as well as in comments here.', 'comment_created': datetime.datetime(2020, 7, 25, 18, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460436276, 'comment_body': 'There is a problem in actual length of sequence that can be stored in PostgreSQL. When length excedes the limit then table name gets stripped from end.\r\n\r\nHere there is stripping in one sequence only :\r\n\r\nOriginal Sequence Name- address_hierarchy_address_to_entry_map_address_to_entry_map_id_seq\r\n\r\nCurrent name as set in AddressToEntryMap.hbm file - address_hierarchy_address_to_entry__address_to_entry_map_id_seq', 'comment_created': datetime.datetime(2020, 7, 25, 19, 26, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460436369, 'comment_body': 'In the code itself. Better to have comments as close to the code as possible.', 'comment_created': datetime.datetime(2020, 7, 25, 19, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460437931, 'comment_body': '@dkayiwa , I have added the comments in code.', 'comment_created': datetime.datetime(2020, 7, 25, 19, 46, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460438208, 'comment_body': 'Did you intentionally use `__` instead of `_`?', 'comment_created': datetime.datetime(2020, 7, 25, 19, 49, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460440587, 'comment_body': 'The table name is ""address_hierarchy_address_to_entry_map"" , Now map gets sliced and then it becomes ""address_hierarchy_address_to_entry_"". Now according to the rules it will be concatenated with ""_"" and table id which is ""address_to_entry_map_id"" and then with ""seq"" . The format is tablename_tableidcolumn_seq. Hence there are two underscores.', 'comment_created': datetime.datetime(2020, 7, 25, 19, 55, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460440908, 'comment_body': 'What happens when we just use one?', 'comment_created': datetime.datetime(2020, 7, 25, 19, 56, 58, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460441517, 'comment_body': 'Apparently the sequence that is being created in db is **address_hierarchy_address_to_entry__address_to_entry_map_id_seq** . Here is the link to screenshot on PostgreSQL db https://pasteboard.co/JjkBaM1.png . I executed the create table query on PostgreSQL for this.', 'comment_created': datetime.datetime(2020, 7, 25, 20, 4, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460441802, 'comment_body': 'So we create a sequence name with one underscore and it creates another with two?', 'comment_created': datetime.datetime(2020, 7, 25, 20, 7, 26, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 460442204, 'comment_body': 'We are never specifying the name of the sequence to be created anywhere. It is the sequence that creates by default when we set the id column type to serial in PostgreSQL. Liquibase does that internally for us. We are then mapping the created sequences with hibernate entities.', 'comment_created': datetime.datetime(2020, 7, 25, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 460443183, 'comment_body': 'Got you. 👍 ', 'comment_created': datetime.datetime(2020, 7, 25, 20, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}]","[{'commit_sha': 'c51e92744a99e76a6850f4145dee80a6538672cb', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1130d80f1919257ea712c6afd00f6129c65a15d', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
457015916,ADDR-120 Create liquibase.xml file for Address Hierarchy Module,"**Changes I made**
Created the liquibase file for the module and removed sqldiff.xml. I have tested this on both MySQL and PostgreSQL along side legacyUI module and everything is working fine. Now module gets initialized on both MySQL and PostgreSQL successfuly.

**Link to Ticket**
https://issues.openmrs.org/browse/ADDR-120",True,31,https://api.github.com/repos/openmrs/openmrs-module-addresshierarchy/pulls/31,https://github.com/openmrs/openmrs-module-addresshierarchy/pull/31,closed,103,399,2,1,2,0,0,0,[],2020-07-27 09:03:49+00:00,2020-07-27 09:58:50+00:00,3301.0,0:55:01,[],"[{'commit_sha': 'cd1df58462e00dd0ec276dc75b04191e057ecf25', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
459154262,EA-159 Correct EMR Api Constants to make them consistent with db,"**Changes I did** 
Corrected the EMR Api Constants to make them consistent with db.

Reason : For MySQL, the collation is utf8_general_ci that is case insensitive so case does not matter but in other dbs like PostgreSQL we need to match the case correctly while searching for concept by concept name.

**Link to ticket** 
https://issues.openmrs.org/browse/EA-159",True,187,https://api.github.com/repos/openmrs/openmrs-module-emrapi/pulls/187,https://github.com/openmrs/openmrs-module-emrapi/pull/187,closed,11,5,2,2,3,0,0,0,[],2020-07-30 13:03:07+00:00,2020-07-30 15:12:04+00:00,7737.0,2:08:57,[],"[{'commit_sha': '344109e65b61a8a2e3175d6bcb62bf9d56688645', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '350103ff16483a54cfb5a12e3c5880b3d9a81717', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
461813979,EA-160 Error when entering recent visits in Reference Application on PostgreSQL,"**Changes I made**
Currently the query that gets executed is : https://pastebin.com/rhPBFYmW . This gives an error in PostgreSQL:  https://pastebin.com/D9ZYPiXA . In order to get control of join I added the join part myself and not allowed hibernate to do it. 
After the change, the query that gets executed is : https://pastebin.com/t6gKAxuC 

Why change group by ? 
Because these fields were required in group by for PostgreSQL else you get an error. 
 
Will it effect the query ? 
o1.obsId will not as it is same as o.obsGroup 

o.encounter.encounterDatetime will not effect as it is unique of each obsId and encounterId.

I have tested the change on both MySQL and PostgreSQL and it is working fine.

**Link to ticket**
https://issues.openmrs.org/browse/EA-160 ",True,189,https://api.github.com/repos/openmrs/openmrs-module-emrapi/pulls/189,https://github.com/openmrs/openmrs-module-emrapi/pull/189,closed,5,7,1,1,4,4,0,0,[],2020-08-02 14:28:43+00:00,2020-08-04 17:24:07+00:00,183324.0,"2 days, 2:55:24","[{'comment_id': 464110872, 'comment_body': 'This looks like changing the original behaviour which was grouping by two fields and now you are using three.', 'comment_created': datetime.datetime(2020, 8, 2, 18, 50, 24, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 464112517, 'comment_body': '@dkayiwa  ,This was my concern too. But if you see the query getting executed is https://pastebin.com/rhPBFYmW , in the where clause we are already setting encounter id constraints. After this the group by clause gets executed, and since for each obs we have exactly one encounter , these groups would evaluate to single member groups with encounter date time unique for each. So, adding encounterDatetime should not affect the result.', 'comment_created': datetime.datetime(2020, 8, 2, 19, 9, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}, {'comment_id': 464117085, 'comment_body': 'What happens when you leave out `o.encounter.encounterDatetime` in the group by clause?', 'comment_created': datetime.datetime(2020, 8, 2, 19, 54, 35, tzinfo=datetime.timezone.utc), 'commenter': 'dkayiwa', 'type': 'User'}, {'comment_id': 464240027, 'comment_body': 'Then you get an error with logs : https://pastebin.com/C5D0M4Z0 ', 'comment_created': datetime.datetime(2020, 8, 3, 7, 30, 21, tzinfo=datetime.timezone.utc), 'commenter': 'Am-Coder', 'type': 'User'}]","[{'commit_sha': '6fb7d2477e8239dc4de41dd3b1770932d55d9104', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19
464600209,EA-161 Set voided = false in EMR Api hql files,"**Changes I made**
Set voided = 0 to voided = false.

**Link to ticket**
https://issues.openmrs.org/browse/EA-161",True,190,https://api.github.com/repos/openmrs/openmrs-module-emrapi/pulls/190,https://github.com/openmrs/openmrs-module-emrapi/pull/190,closed,1,1,1,1,0,0,0,0,[],2020-08-07 13:17:40+00:00,2020-08-07 13:39:14+00:00,1294.0,0:21:34,[],"[{'commit_sha': 'e94bf265798c76a6ddde83d0feae7bd0ca83045a', 'committer_username': 'Am-Coder', 'committer_name': 'Aman Mishra', 'committer_email': None, 'commit_date': datetime.datetime(2018, 6, 6, 14, 51, 38, tzinfo=datetime.timezone.utc)}]",Aman Mishra,39997970,,User,,39,,2,19

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
5187976,openmrs-core,openmrs/openmrs-core,Java,3618,1391,148,465,12255,35,41,35,"[{'id': 468780641, 'number': 3514, 'closed': datetime.datetime(2020, 8, 24, 10, 35, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 11, 48, 32, tzinfo=datetime.timezone.utc), 'time_taken': 600401.0, 'time_delta': '6 days, 22:46:41', 'additions': 14, 'deletions': 2, 'state': 'closed'}, {'id': 467277874, 'number': 3506, 'closed': datetime.datetime(2020, 8, 17, 10, 58, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 9, 53, 9, tzinfo=datetime.timezone.utc), 'time_taken': 349496.0, 'time_delta': '4 days, 1:04:56', 'additions': 100, 'deletions': 28, 'state': 'closed'}, {'id': 465984762, 'number': 3498, 'closed': datetime.datetime(2020, 8, 14, 14, 48, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 11, 9, 28, 56, tzinfo=datetime.timezone.utc), 'time_taken': 278354.0, 'time_delta': '3 days, 5:19:14', 'additions': 50, 'deletions': 0, 'state': 'closed'}, {'id': 465401059, 'number': 3490, 'closed': datetime.datetime(2020, 8, 10, 12, 58, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 10, 0, 32, tzinfo=datetime.timezone.utc), 'time_taken': 10678.0, 'time_delta': '2:57:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 462636222, 'number': 3426, 'closed': datetime.datetime(2020, 8, 4, 17, 28, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 9, 11, 19, tzinfo=datetime.timezone.utc), 'time_taken': 29845.0, 'time_delta': '8:17:25', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 458301751, 'number': 3405, 'closed': datetime.datetime(2020, 8, 2, 8, 46, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 9, 9, 27, tzinfo=datetime.timezone.utc), 'time_taken': 344238.0, 'time_delta': '3 days, 23:37:18', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 456729304, 'number': 3398, 'closed': datetime.datetime(2020, 7, 28, 14, 55, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 10, 7, tzinfo=datetime.timezone.utc), 'time_taken': 190090.0, 'time_delta': '2 days, 4:48:10', 'additions': 51, 'deletions': 1, 'state': 'closed'}, {'id': 450363905, 'number': 3372, 'closed': datetime.datetime(2020, 7, 16, 19, 44, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 17, 20, 30, tzinfo=datetime.timezone.utc), 'time_taken': 8621.0, 'time_delta': '2:23:41', 'additions': 5, 'deletions': 2, 'state': 'closed'}, {'id': 449458838, 'number': 3363, 'closed': datetime.datetime(2020, 7, 15, 13, 23, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 12, 47, 51, tzinfo=datetime.timezone.utc), 'time_taken': 2139.0, 'time_delta': '0:35:39', 'additions': 5, 'deletions': 0, 'state': 'closed'}, {'id': 447581120, 'number': 3327, 'closed': datetime.datetime(2020, 7, 11, 20, 22, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 10, 18, 23, 47, tzinfo=datetime.timezone.utc), 'time_taken': 93495.0, 'time_delta': '1 day, 1:58:15', 'additions': 27, 'deletions': 9, 'state': 'closed'}, {'id': 446843472, 'number': 3318, 'closed': datetime.datetime(2020, 8, 23, 20, 0, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 12, 57, 29, tzinfo=datetime.timezone.utc), 'time_taken': 3913369.0, 'time_delta': '45 days, 7:02:49', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 445154768, 'number': 3299, 'closed': datetime.datetime(2020, 7, 7, 8, 12, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 5, 8, 20, tzinfo=datetime.timezone.utc), 'time_taken': 11065.0, 'time_delta': '3:04:25', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 444704284, 'number': 3296, 'closed': datetime.datetime(2020, 7, 6, 13, 4, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 11, 7, 32, tzinfo=datetime.timezone.utc), 'time_taken': 7035.0, 'time_delta': '1:57:15', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 443373889, 'number': 3288, 'closed': datetime.datetime(2020, 7, 20, 19, 16, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 8, 52, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1592618.0, 'time_delta': '18 days, 10:23:38', 'additions': 8, 'deletions': 0, 'state': 'closed'}, {'id': 441867828, 'number': 3282, 'closed': datetime.datetime(2020, 6, 30, 13, 4, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 8, 28, 17, tzinfo=datetime.timezone.utc), 'time_taken': 16581.0, 'time_delta': '4:36:21', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 438708919, 'number': 3276, 'closed': datetime.datetime(2020, 6, 24, 17, 20, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 23, 17, 18, 3, tzinfo=datetime.timezone.utc), 'time_taken': 86553.0, 'time_delta': '1 day, 0:02:33', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 437725988, 'number': 3272, 'closed': datetime.datetime(2020, 6, 25, 11, 7, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 22, 6, 54, 29, tzinfo=datetime.timezone.utc), 'time_taken': 274367.0, 'time_delta': '3 days, 4:12:47', 'additions': 33, 'deletions': 0, 'state': 'closed'}, {'id': 435967520, 'number': 3260, 'closed': datetime.datetime(2020, 6, 25, 13, 11, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 16, 35, 31, tzinfo=datetime.timezone.utc), 'time_taken': 678963.0, 'time_delta': '7 days, 20:36:03', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 434663285, 'number': 3252, 'closed': datetime.datetime(2020, 6, 16, 20, 46, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 15, 17, 1, 48, tzinfo=datetime.timezone.utc), 'time_taken': 99861.0, 'time_delta': '1 day, 3:44:21', 'additions': 23, 'deletions': 1, 'state': 'closed'}, {'id': 431244625, 'number': 3235, 'closed': datetime.datetime(2020, 6, 10, 21, 38, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 8, 16, 4, 56, tzinfo=datetime.timezone.utc), 'time_taken': 192812.0, 'time_delta': '2 days, 5:33:32', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 427957934, 'number': 3224, 'closed': datetime.datetime(2020, 6, 8, 15, 30, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 4, 16, 36, 7, tzinfo=datetime.timezone.utc), 'time_taken': 341647.0, 'time_delta': '3 days, 22:54:07', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 426153534, 'number': 3220, 'closed': datetime.datetime(2020, 6, 10, 21, 43, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 1, 18, 51, 18, tzinfo=datetime.timezone.utc), 'time_taken': 787909.0, 'time_delta': '9 days, 2:51:49', 'additions': 55, 'deletions': 16, 'state': 'closed'}, {'id': 401619301, 'number': 3179, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 9, 20, 6, 19, tzinfo=datetime.timezone.utc), 'time_taken': 41400424.0, 'time_delta': '479 days, 4:07:04', 'additions': 30, 'deletions': 3, 'state': 'closed'}, {'id': 395288806, 'number': 3158, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 29, 17, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 42359978.0, 'time_delta': '490 days, 6:39:38', 'additions': 3, 'deletions': 2, 'state': 'closed'}, {'id': 392949689, 'number': 3155, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 24, 12, 2, 57, tzinfo=datetime.timezone.utc), 'time_taken': 42811836.0, 'time_delta': '495 days, 12:10:36', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 388425760, 'number': 3147, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 14, 20, 19, 8, tzinfo=datetime.timezone.utc), 'time_taken': 43646069.0, 'time_delta': '505 days, 3:54:29', 'additions': 178, 'deletions': 19, 'state': 'closed'}, {'id': 377135761, 'number': 3125, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 19, 12, 14, 15, tzinfo=datetime.timezone.utc), 'time_taken': 45748767.0, 'time_delta': '529 days, 11:59:27', 'additions': 47, 'deletions': 22, 'state': 'closed'}, {'id': 371860311, 'number': 3120, 'closed': datetime.datetime(2021, 8, 2, 0, 13, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 6, 11, 57, 21, tzinfo=datetime.timezone.utc), 'time_taken': 46872982.0, 'time_delta': '542 days, 12:16:22', 'additions': 1, 'deletions': 0, 'state': 'closed'}]"
2680621,openmrs-module-htmlformentry,openmrs/openmrs-module-htmlformentry,Java,224,41,75,97,1526,9,47,9,"[{'id': 459003657, 'number': 194, 'closed': datetime.datetime(2020, 7, 30, 11, 38, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 9, 15, 37, tzinfo=datetime.timezone.utc), 'time_taken': 8601.0, 'time_delta': '2:23:21', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 456789958, 'number': 193, 'closed': datetime.datetime(2020, 7, 26, 19, 47, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 18, 49, 15, tzinfo=datetime.timezone.utc), 'time_taken': 3485.0, 'time_delta': '0:58:05', 'additions': 4, 'deletions': 4, 'state': 'closed'}, {'id': 449984070, 'number': 191, 'closed': datetime.datetime(2020, 7, 17, 9, 54, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 7, 55, 3, tzinfo=datetime.timezone.utc), 'time_taken': 93564.0, 'time_delta': '1 day, 1:59:24', 'additions': 21, 'deletions': 1, 'state': 'closed'}, {'id': 449383803, 'number': 190, 'closed': datetime.datetime(2020, 7, 15, 10, 52, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 10, 12, 47, tzinfo=datetime.timezone.utc), 'time_taken': 2383.0, 'time_delta': '0:39:43', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 371866452, 'number': 161, 'closed': None, 'created': datetime.datetime(2020, 2, 6, 12, 12, 17, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 106, 'deletions': 0, 'state': 'open'}]"
6943846,openmrs-module-calculation,openmrs/openmrs-module-calculation,Java,44,2,83,17,204,0,2,0,"[{'id': 465432264, 'number': 8, 'closed': datetime.datetime(2020, 8, 10, 12, 47, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 11, 8, 51, tzinfo=datetime.timezone.utc), 'time_taken': 5892.0, 'time_delta': '1:38:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 450068881, 'number': 7, 'closed': datetime.datetime(2020, 7, 16, 10, 35, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 16, 10, 6, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1767.0, 'time_delta': '0:29:27', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
6946743,openmrs-module-idgen,openmrs/openmrs-module-idgen,Java,69,6,74,39,274,13,21,13,"[{'id': 464566909, 'number': 88, 'closed': datetime.datetime(2020, 8, 7, 12, 11, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 12, 3, 53, tzinfo=datetime.timezone.utc), 'time_taken': 467.0, 'time_delta': '0:07:47', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 458588616, 'number': 87, 'closed': datetime.datetime(2020, 7, 29, 21, 27, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 17, 47, 24, tzinfo=datetime.timezone.utc), 'time_taken': 13209.0, 'time_delta': '3:40:09', 'additions': 6, 'deletions': 8, 'state': 'closed'}, {'id': 456320613, 'number': 86, 'closed': datetime.datetime(2020, 7, 24, 14, 34, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 14, 32, 3, tzinfo=datetime.timezone.utc), 'time_taken': 155.0, 'time_delta': '0:02:35', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 455795071, 'number': 85, 'closed': datetime.datetime(2020, 7, 23, 15, 43, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 15, 31, 47, tzinfo=datetime.timezone.utc), 'time_taken': 719.0, 'time_delta': '0:11:59', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 454427951, 'number': 84, 'closed': datetime.datetime(2020, 7, 21, 17, 3, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 21, 11, 49, 58, tzinfo=datetime.timezone.utc), 'time_taken': 18793.0, 'time_delta': '5:13:13', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 451756382, 'number': 83, 'closed': datetime.datetime(2020, 7, 20, 12, 47, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 6, 53, 6, tzinfo=datetime.timezone.utc), 'time_taken': 194056.0, 'time_delta': '2 days, 5:54:16', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 451751158, 'number': 82, 'closed': datetime.datetime(2020, 7, 18, 18, 22, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 6, 41, 12, tzinfo=datetime.timezone.utc), 'time_taken': 42106.0, 'time_delta': '11:41:46', 'additions': 20, 'deletions': 4, 'state': 'closed'}]"
3691193,openmrs-module-appframework,openmrs/openmrs-module-appframework,Java,58,7,78,28,274,1,6,1,"[{'id': 453434699, 'number': 53, 'closed': datetime.datetime(2020, 7, 20, 14, 1, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 13, 11, 5, tzinfo=datetime.timezone.utc), 'time_taken': 3052.0, 'time_delta': '0:50:52', 'additions': 1, 'deletions': 1, 'state': 'closed'}]"
3767600,openmrs-module-providermanagement,openmrs/openmrs-module-providermanagement,Java,35,3,78,21,361,1,9,1,"[{'id': 464565694, 'number': 41, 'closed': datetime.datetime(2020, 8, 7, 12, 8, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 12, 1, 1, tzinfo=datetime.timezone.utc), 'time_taken': 427.0, 'time_delta': '0:07:07', 'additions': 8, 'deletions': 2, 'state': 'closed'}, {'id': 458692551, 'number': 40, 'closed': datetime.datetime(2020, 7, 29, 21, 5, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 29, 20, 58, 15, tzinfo=datetime.timezone.utc), 'time_taken': 423.0, 'time_delta': '0:07:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 455229727, 'number': 39, 'closed': datetime.datetime(2020, 7, 22, 16, 55, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 16, 35, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1181.0, 'time_delta': '0:19:41', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 455082530, 'number': 38, 'closed': datetime.datetime(2020, 7, 22, 14, 47, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 12, 18, 59, tzinfo=datetime.timezone.utc), 'time_taken': 8891.0, 'time_delta': '2:28:11', 'additions': 9, 'deletions': 3, 'state': 'closed'}]"
5658583,openmrs-module-metadatamapping,openmrs/openmrs-module-metadatamapping,Java,27,2,78,18,181,1,2,1,"[{'id': 455673828, 'number': 55, 'closed': datetime.datetime(2020, 7, 24, 14, 38, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 12, 29, 59, tzinfo=datetime.timezone.utc), 'time_taken': 94135.0, 'time_delta': '1 day, 2:08:55', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 455668176, 'number': 54, 'closed': datetime.datetime(2020, 7, 23, 12, 22, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 12, 18, 1, tzinfo=datetime.timezone.utc), 'time_taken': 258.0, 'time_delta': '0:04:18', 'additions': 12, 'deletions': 4, 'state': 'closed'}, {'id': 455047264, 'number': 53, 'closed': datetime.datetime(2020, 7, 22, 14, 58, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 11, 6, 9, tzinfo=datetime.timezone.utc), 'time_taken': 13935.0, 'time_delta': '3:52:15', 'additions': 12, 'deletions': 4, 'state': 'closed'}]"
3514413,openmrs-module-metadatasharing,openmrs/openmrs-module-metadatasharing,Java,56,9,78,32,328,7,7,7,"[{'id': 455048408, 'number': 57, 'closed': datetime.datetime(2020, 7, 22, 14, 53, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 11, 8, 31, tzinfo=datetime.timezone.utc), 'time_taken': 13490.0, 'time_delta': '3:44:50', 'additions': 9, 'deletions': 3, 'state': 'closed'}]"
4713588,openmrs-module-reporting,openmrs/openmrs-module-reporting,Java,234,20,77,81,1911,25,14,25,"[{'id': 463294248, 'number': 203, 'closed': datetime.datetime(2020, 8, 5, 13, 55, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 5, 10, 29, 24, tzinfo=datetime.timezone.utc), 'time_taken': 12343.0, 'time_delta': '3:25:43', 'additions': 8, 'deletions': 3, 'state': 'closed'}, {'id': 455337727, 'number': 201, 'closed': datetime.datetime(2020, 7, 23, 11, 25, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 20, 27, 41, tzinfo=datetime.timezone.utc), 'time_taken': 53847.0, 'time_delta': '14:57:27', 'additions': 28, 'deletions': 3, 'state': 'closed'}, {'id': 455253351, 'number': 200, 'closed': datetime.datetime(2020, 7, 22, 17, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 17, 23, 27, tzinfo=datetime.timezone.utc), 'time_taken': 333.0, 'time_delta': '0:05:33', 'additions': 20, 'deletions': 4, 'state': 'closed'}]"
10168225,openmrs-module-referencemetadata,openmrs/openmrs-module-referencemetadata,Java,47,1,78,35,287,0,3,0,"[{'id': 464070361, 'number': 53, 'closed': datetime.datetime(2020, 8, 6, 15, 27, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 14, 38, 48, tzinfo=datetime.timezone.utc), 'time_taken': 2905.0, 'time_delta': '0:48:25', 'additions': 8, 'deletions': 8, 'state': 'closed'}]"
11827410,openmrs-module-referencedemodata,openmrs/openmrs-module-referencedemodata,Java,23,2,77,11,115,3,3,3,"[{'id': 460234699, 'number': 9, 'closed': datetime.datetime(2020, 8, 1, 17, 12, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 31, 15, 11, 45, tzinfo=datetime.timezone.utc), 'time_taken': 93640.0, 'time_delta': '1 day, 2:00:40', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 459093792, 'number': 8, 'closed': datetime.datetime(2020, 7, 30, 15, 15, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 11, 30, 39, tzinfo=datetime.timezone.utc), 'time_taken': 13474.0, 'time_delta': '3:44:34', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 457346999, 'number': 7, 'closed': datetime.datetime(2020, 7, 27, 19, 57, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 19, 6, 47, tzinfo=datetime.timezone.utc), 'time_taken': 3014.0, 'time_delta': '0:50:14', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
6810283,openmrs-module-appointmentscheduling,openmrs/openmrs-module-appointmentscheduling,Java,72,14,80,36,620,0,6,0,"[{'id': 464567959, 'number': 38, 'closed': datetime.datetime(2020, 8, 7, 12, 14, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 12, 6, 26, tzinfo=datetime.timezone.utc), 'time_taken': 481.0, 'time_delta': '0:08:01', 'additions': 6, 'deletions': 5, 'state': 'closed'}, {'id': 462171167, 'number': 37, 'closed': datetime.datetime(2020, 8, 3, 13, 42, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 3, 13, 16, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1551.0, 'time_delta': '0:25:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 459004728, 'number': 36, 'closed': datetime.datetime(2020, 7, 30, 11, 41, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 9, 16, 55, tzinfo=datetime.timezone.utc), 'time_taken': 8683.0, 'time_delta': '2:24:43', 'additions': 14, 'deletions': 0, 'state': 'closed'}, {'id': 457952502, 'number': 35, 'closed': datetime.datetime(2020, 7, 28, 18, 51, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 17, 34, 47, tzinfo=datetime.timezone.utc), 'time_taken': 4618.0, 'time_delta': '1:16:58', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 456798889, 'number': 34, 'closed': datetime.datetime(2020, 7, 26, 20, 17, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 20, 7, 33, tzinfo=datetime.timezone.utc), 'time_taken': 599.0, 'time_delta': '0:09:59', 'additions': 7, 'deletions': 7, 'state': 'closed'}, {'id': 456582141, 'number': 33, 'closed': datetime.datetime(2020, 7, 25, 19, 47, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 7, 40, 12, tzinfo=datetime.timezone.utc), 'time_taken': 43642.0, 'time_delta': '12:07:22', 'additions': 29, 'deletions': 7, 'state': 'closed'}]"
6984541,openmrs-module-addresshierarchy,openmrs/openmrs-module-addresshierarchy,Java,48,5,77,23,276,2,6,2,"[{'id': 482929270, 'number': 32, 'closed': datetime.datetime(2020, 9, 9, 15, 35, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 9, 15, 32, 11, tzinfo=datetime.timezone.utc), 'time_taken': 226.0, 'time_delta': '0:03:46', 'additions': 179, 'deletions': 399, 'state': 'closed'}, {'id': 457015916, 'number': 31, 'closed': datetime.datetime(2020, 7, 27, 9, 58, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 9, 3, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3301.0, 'time_delta': '0:55:01', 'additions': 103, 'deletions': 399, 'state': 'closed'}, {'id': 456649685, 'number': 30, 'closed': datetime.datetime(2020, 7, 25, 20, 23, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 18, 35, 54, tzinfo=datetime.timezone.utc), 'time_taken': 6470.0, 'time_delta': '1:47:50', 'additions': 12, 'deletions': 3, 'state': 'closed'}]"
9158616,openmrs-module-emrapi,openmrs/openmrs-module-emrapi,Java,140,16,82,104,985,4,37,4,"[{'id': 464600209, 'number': 190, 'closed': datetime.datetime(2020, 8, 7, 13, 39, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 7, 13, 17, 40, tzinfo=datetime.timezone.utc), 'time_taken': 1294.0, 'time_delta': '0:21:34', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 461813979, 'number': 189, 'closed': datetime.datetime(2020, 8, 4, 17, 24, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 14, 28, 43, tzinfo=datetime.timezone.utc), 'time_taken': 183324.0, 'time_delta': '2 days, 2:55:24', 'additions': 5, 'deletions': 7, 'state': 'closed'}, {'id': 459154262, 'number': 187, 'closed': datetime.datetime(2020, 7, 30, 15, 12, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 13, 3, 7, tzinfo=datetime.timezone.utc), 'time_taken': 7737.0, 'time_delta': '2:08:57', 'additions': 11, 'deletions': 5, 'state': 'closed'}]"
