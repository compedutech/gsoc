pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1416535702,Extend import/export unmanaged instances to KVM,"This PR adds supports to cloudstack for managing and unmanaging VM's in KVM Hypervisor. 

This PR addresses  #7127

### Description

The support is extended through API's and also the UI. The Apache Cloudstack  KVM plugin has been extended with new command wrappers for fetching unmanaged VM's xml attribute. The code paths in management server have been cleaned up and refined for managing KVM specific importing commands.
API's involved are :

- unmanageVirtualmachine
- listunmanageInstances
- importVirtualMachine

### Testing steps:

- Build pull request and deploy a new apache cloudstack environment with KVM hosts(used monkeybox for local development and testing).
- From the cloudstack UI, create a new virtual machine.
- Go to tools option and choose import-export instances.
- In the managed instance section, see if the newly created virtual machine exist.
- From the managed instance section, choose the virtual machine and unmanaged it.
- Once the VM is unmanaged you can see it disappear from manage instance section and it will appear in unmanage instance section.
- To manage an unmanage instance, choose an instance from unmanage instance section.
- On click of unmanage  instance a popup will appear, where you need to enter vm name and choose vm template, service offering, network and then click import instance button.
- You can see the unmanage instance is managed now and you can see it populate in the mananged instance section under import-export instances section.



<!--- Describe your changes in DETAIL - And how has behaviour functionally changed. -->

<!-- For new features, provide link to FS, dev ML discussion etc. -->
<!-- In case of bug fix, the expected and actual behaviours, steps to reproduce. -->

<!-- When ""Fixes: #<id>"" is specified, the issue/PR will automatically be closed when this PR gets merged -->
<!-- For addressing multiple issues/PRs, use multiple ""Fixes: #<id>"" -->
<!-- Fixes: # -->

<!--- ********************************************************************************* -->
<!--- NOTE: AUTOMATATION USES THE DESCRIPTIONS TO SET LABELS AND PRODUCE DOCUMENTATION. -->
<!--- PLEASE PUT AN 'X' in only **ONE** box -->
<!--- ********************************************************************************* -->

### Types of changes

- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Enhancement (improves an existing feature and functionality)
- [ ] Cleanup (Code refactoring and cleanup, that may add test cases)

### Feature/Enhancement Scale or Bug Severity

#### Feature/Enhancement Scale

- [ ] Major
- [ ] Minor

#### Bug Severity

- [ ] BLOCKER
- [ ] Critical
- [ ] Major
- [ ] Minor
- [ ] Trivial


### Screenshots (if appropriate):


### How Has This Been Tested?
<!-- Please describe in detail how you tested your changes. -->
<!-- Include details of your testing environment, and the tests you ran to -->
<!-- see how your change affects other areas of the code, etc. -->


<!-- Please read the [CONTRIBUTING](https://github.com/apache/cloudstack/blob/main/CONTRIBUTING.md) document -->
",False,7712,https://api.github.com/repos/apache/cloudstack/pulls/7712,https://github.com/apache/cloudstack/pull/7712,closed,671,89,17,20,127,64,8,1,"[{'name': 'component:kvm'}, {'name': 'component:vmware'}, {'name': 'component:api'}, {'name': 'component:UI'}, {'name': 'status:has-conflicts'}, {'name': 'status:needs-testing'}, {'name': 'gsoc2023'}, {'name': 'status:needs-review'}]",2023-07-02 02:47:26+00:00,2023-11-08 13:53:41+00:00,11185575.0,"129 days, 11:06:15","[{'comment_id': 1249131265, 'comment_body': '@nvazquez - raised this WIP PR for calling out details I am still building for KVM produced UnmanagedInstanceTO.', 'comment_created': datetime.datetime(2023, 7, 2, 2, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1250766105, 'comment_body': '@itsayushpandey can you extract these blocks to new methods to reduce complexity of this method and make the code more readible, please?', 'comment_created': datetime.datetime(2023, 7, 3, 11, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1250766518, 'comment_body': ""I think you'll need to add a license header here"", 'comment_created': datetime.datetime(2023, 7, 3, 11, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1254990154, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 6, 22, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1254990256, 'comment_body': 'Pulled the change in separate methods', 'comment_created': datetime.datetime(2023, 7, 6, 22, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1258586459, 'comment_body': 'Do we still need to these filters or is the vm name always sent as blank?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1260172315, 'comment_body': 'I think, the vm name is not send as blank when this wrapper is excuted as part of importvirtualmachine api.', 'comment_created': datetime.datetime(2023, 7, 11, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306488770, 'comment_body': 'Lets remove commented code', 'comment_created': datetime.datetime(2023, 8, 26, 16, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306488805, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 8, 26, 16, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306489563, 'comment_body': 'Why is this being removed?', 'comment_created': datetime.datetime(2023, 8, 26, 17, 3, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306489645, 'comment_body': 'Outdated comment :)', 'comment_created': datetime.datetime(2023, 8, 26, 17, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306490149, 'comment_body': 'Commented code', 'comment_created': datetime.datetime(2023, 8, 26, 17, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306490619, 'comment_body': 'This seems correct however it may impact on usage, opinions? @DaanHoogland @rohityadavcloud @harikrishna-patnala @weizhouapache ', 'comment_created': datetime.datetime(2023, 8, 26, 17, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306490674, 'comment_body': 'Same here :)', 'comment_created': datetime.datetime(2023, 8, 26, 17, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306492776, 'comment_body': 'Can we keep `VirtualMachineTemplate` here? `VMTemplateVO` is an implementation of that interface, if the explicit cast is needed it can be done previously checking with a check such as: `if (template instanceof VMTemplateVO) ....`', 'comment_created': datetime.datetime(2023, 8, 26, 17, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306492932, 'comment_body': 'Perhaps would be safer to assume it as false here', 'comment_created': datetime.datetime(2023, 8, 26, 17, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306493257, 'comment_body': 'This would create regressions on Vmware imports as they support the default template, can you add a check for the hypervisor type on this logic?', 'comment_created': datetime.datetime(2023, 8, 26, 17, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306581117, 'comment_body': 'I think it was not used / set anywhere. I will add it back however.', 'comment_created': datetime.datetime(2023, 8, 27, 0, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306728952, 'comment_body': 'Ah, thats true. Fixed the check for KVM only.', 'comment_created': datetime.datetime(2023, 8, 27, 22, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306729587, 'comment_body': 'I can revert if its breaking something but I saw this and made change.', 'comment_created': datetime.datetime(2023, 8, 27, 22, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306999018, 'comment_body': 'why add it back if it is not used?', 'comment_created': datetime.datetime(2023, 8, 28, 7, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1308678359, 'comment_body': '```suggestion\r\n    private String vncPassword;\r\n```', 'comment_created': datetime.datetime(2023, 8, 29, 11, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 1308679389, 'comment_body': '```suggestion\r\n    public String getVncPassword() { \r\n        return vncPassword;\r\n    }\r\n    \r\n    public void setVncPassword (String vncPasswd) { \r\n        this.vncPasswd = vncPasswd; \r\n    }\r\n```\r\n\r\nSuggestion to comply with our [coding convention](https://cwiki.apache.org/confluence/display/CLOUDSTACK/Coding+conventions).', 'comment_created': datetime.datetime(2023, 8, 29, 11, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 1309657442, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 30, 4, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1309657580, 'comment_body': 'Ah, makes sense. Done.', 'comment_created': datetime.datetime(2023, 8, 30, 4, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1309661843, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 8, 30, 5, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1309662027, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 8, 30, 5, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1312678832, 'comment_body': ""Action Events don't impact usage. It'll impact listEvents only "", 'comment_created': datetime.datetime(2023, 9, 1, 7, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kishankavala', 'type': 'User'}, {'comment_id': 1329659882, 'comment_body': '```suggestion\r\n            description = ""the name of the instance as it is known to the hypervisor"")\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 7, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1329681957, 'comment_body': ""I'd probably prefer these methods returning their respective results and thos being assigned here, but this is way better than the inline parsing happening above :+1: "", 'comment_created': datetime.datetime(2023, 9, 19, 7, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330219101, 'comment_body': 'not just with your PR, but I think we should format these `Annotation`s consistently\r\n```suggestion\r\n@ResourceWrapper(handles=GetUnmanagedInstancesCommand.class)\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 14, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330279277, 'comment_body': 'please see #7131 for the standard for loggers we are trying to grow into.', 'comment_created': datetime.datetime(2023, 9, 19, 15, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330286506, 'comment_body': '```suggestion\r\n@ResourceWrapper(handles=PrepareUnmanageVMInstanceCommand.class)\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 15, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330286845, 'comment_body': 'logger name', 'comment_created': datetime.datetime(2023, 9, 19, 15, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330290468, 'comment_body': 'can this be extracted to a separate method.\r\nIs this relevant to the enhancement or a generic fix found on the way?', 'comment_created': datetime.datetime(2023, 9, 19, 15, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330293473, 'comment_body': '```suggestion\r\n""label.desc.importexportinstancewizard"": ""Import and export instances to/from an existing VMware or KVM cluster."",\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 15, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330303308, 'comment_body': '```\r\n            checksNotNeededForKvm()\r\n```\r\n is a very valid method name, how about implementing that and removing the comment?\r\naltenative:\r\n```\r\n            checksOnlyNeededForVmware()\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 15, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1340884988, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885303, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885435, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885578, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885778, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885874, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 37, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340887950, 'comment_body': ""This is relevant to the enhancement as it is used for displaying vnc console for kvm. I've made changes as per your suggestion."", 'comment_created': datetime.datetime(2023, 9, 29, 4, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340933911, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 6, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340934141, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 6, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1343621333, 'comment_body': 'this comment and block is suitable as a separate method', 'comment_created': datetime.datetime(2023, 10, 3, 7, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1343621531, 'comment_body': 'this comment and block is suitable as a separate method', 'comment_created': datetime.datetime(2023, 10, 3, 7, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1346346820, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 4, 19, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1346346958, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 4, 19, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1373046987, 'comment_body': 'Is this refactoring needed?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373056382, 'comment_body': 'In which case rootDisk is null at this point when we have already checked `callerDiskIds.size() != disks.size() - 1`?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373057586, 'comment_body': 'Why are we not getting capacity from the hypervisor?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373060986, 'comment_body': 'Why not return early if it is not VMware\r\nif (!Hypervisor.HypervisorType.VMware.equals(hypervisorType)) {\r\nreturn;\r\n//continue with rest\r\n\r\nQuestion - why VLAN checks are not needed for KVM?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373077214, 'comment_body': 'should there be a hypervisor check?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373080056, 'comment_body': 'Question - why import with default template is not allowed for KVM?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373081443, 'comment_body': 'is this needed?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373083137, 'comment_body': 'why? Not used anymore/', 'comment_created': datetime.datetime(2023, 10, 26, 12, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373085269, 'comment_body': 'no idea about these constants. Would be better to make a new method with some doc', 'comment_created': datetime.datetime(2023, 10, 26, 12, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1375573409, 'comment_body': ""I thought it was a harmless refactoring as it moves all required params together. I can change back if you think it doesn't add value?"", 'comment_created': datetime.datetime(2023, 10, 30, 1, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375574768, 'comment_body': ""I don't think its needed as for missing VNC password, we don't execute it at all and code remains simple?\r\n\r\n(My thinking was that hypervisors plugins that need to pass back VNC password will set it in UnmanagedInstanceTO, and if it is passed we process it here without worrying about hypervisor type.)"", 'comment_created': datetime.datetime(2023, 10, 30, 1, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375575295, 'comment_body': 'I think this might be from IntelliJ auto formatting from some rules I had setup. If this is against formatting conventions, I can revert it? ', 'comment_created': datetime.datetime(2023, 10, 30, 1, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375576076, 'comment_body': 'This mocking was not needed (tests pass after removal) after refactoring in other PRs (not this PR). So after rebasing, I was getting Mockito failures and so is not needed anymore.', 'comment_created': datetime.datetime(2023, 10, 30, 1, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375576970, 'comment_body': 'Sure, I can create a separate method for generating this string?\r\n\r\nContext: This is the label for network name in selection dropdown. Since displaytext can be non-unique, I added 8 characters of the UUID for differentiating in case of KVM. For VMWare we had broadcast URI from Vlan.', 'comment_created': datetime.datetime(2023, 10, 30, 1, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}]","[{'commit_sha': 'd8790133d813b3ec17455015c0b4eee331e02001', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02ea0841071820cb8c2650a75de489b61eadd8b', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7232e204472b3caf4489b1f91cfb322f5cfed16', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20c602f0958a40f8b51fed5a26869dffb22dd1d4', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77e7c135c4049bcd945a8c97c9ff959d5afee6ba', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a36d86827c3537dc5b4b318d3ac3f9381b11749', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cabc7898f1ccb9e083ef31d0ad831d673b0d8f9c', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96563366026cc7a12877e964e0fd715c82691385', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df29386c4016e935af18d7b638da962260244563', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56623e35737b779a103b912e6567a0b311888cec', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eec5d4d1bf3acc486b54bca4559e3ca9c9cc100a', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf0b00ae8915092e8c9bc0502aa1ede9a5fab9ea', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '300ebd845112f4c6a77204010fa54ff798bdea8b', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087522caa1e0713e2c0c607a07f2a80518d15757', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a1684305845fbeb7a5179036b87793e888b215', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b424d16f7c42e5cb124c63dfa1e6015f17f14223', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aeb08fbb03cb3358d813c71cf8bd4fbf9c51b66', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba7c8b55ebf5e7556c88704031f09059a1053359', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a13471eebf42f0b3e0564af3bc923a11603586e', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62f305c25875a532812fbcefc6743cdc922aa5c8', 'committer_username': 'nvazquez', 'committer_name': 'Nicolas Vazquez', 'committer_email': 'nicovazquez90@gmail.com', 'commit_date': datetime.datetime(2013, 8, 23, 13, 36, 39, tzinfo=datetime.timezone.utc)}]",Ayush Pandey,32012449,,User,,22,,0,1
1416535702,Extend import/export unmanaged instances to KVM,"This PR adds supports to cloudstack for managing and unmanaging VM's in KVM Hypervisor. 

This PR addresses  #7127

### Description

The support is extended through API's and also the UI. The Apache Cloudstack  KVM plugin has been extended with new command wrappers for fetching unmanaged VM's xml attribute. The code paths in management server have been cleaned up and refined for managing KVM specific importing commands.
API's involved are :

- unmanageVirtualmachine
- listunmanageInstances
- importVirtualMachine

### Testing steps:

- Build pull request and deploy a new apache cloudstack environment with KVM hosts(used monkeybox for local development and testing).
- From the cloudstack UI, create a new virtual machine.
- Go to tools option and choose import-export instances.
- In the managed instance section, see if the newly created virtual machine exist.
- From the managed instance section, choose the virtual machine and unmanaged it.
- Once the VM is unmanaged you can see it disappear from manage instance section and it will appear in unmanage instance section.
- To manage an unmanage instance, choose an instance from unmanage instance section.
- On click of unmanage  instance a popup will appear, where you need to enter vm name and choose vm template, service offering, network and then click import instance button.
- You can see the unmanage instance is managed now and you can see it populate in the mananged instance section under import-export instances section.



<!--- Describe your changes in DETAIL - And how has behaviour functionally changed. -->

<!-- For new features, provide link to FS, dev ML discussion etc. -->
<!-- In case of bug fix, the expected and actual behaviours, steps to reproduce. -->

<!-- When ""Fixes: #<id>"" is specified, the issue/PR will automatically be closed when this PR gets merged -->
<!-- For addressing multiple issues/PRs, use multiple ""Fixes: #<id>"" -->
<!-- Fixes: # -->

<!--- ********************************************************************************* -->
<!--- NOTE: AUTOMATATION USES THE DESCRIPTIONS TO SET LABELS AND PRODUCE DOCUMENTATION. -->
<!--- PLEASE PUT AN 'X' in only **ONE** box -->
<!--- ********************************************************************************* -->

### Types of changes

- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] Enhancement (improves an existing feature and functionality)
- [ ] Cleanup (Code refactoring and cleanup, that may add test cases)

### Feature/Enhancement Scale or Bug Severity

#### Feature/Enhancement Scale

- [ ] Major
- [ ] Minor

#### Bug Severity

- [ ] BLOCKER
- [ ] Critical
- [ ] Major
- [ ] Minor
- [ ] Trivial


### Screenshots (if appropriate):


### How Has This Been Tested?
<!-- Please describe in detail how you tested your changes. -->
<!-- Include details of your testing environment, and the tests you ran to -->
<!-- see how your change affects other areas of the code, etc. -->


<!-- Please read the [CONTRIBUTING](https://github.com/apache/cloudstack/blob/main/CONTRIBUTING.md) document -->
",False,7712,https://api.github.com/repos/apache/cloudstack/pulls/7712,https://github.com/apache/cloudstack/pull/7712,closed,671,89,17,20,127,64,8,1,"[{'name': 'component:kvm'}, {'name': 'component:vmware'}, {'name': 'component:api'}, {'name': 'component:UI'}, {'name': 'status:has-conflicts'}, {'name': 'status:needs-testing'}, {'name': 'gsoc2023'}, {'name': 'status:needs-review'}]",2023-07-02 02:47:26+00:00,2023-11-08 13:53:41+00:00,11185575.0,"129 days, 11:06:15","[{'comment_id': 1249131265, 'comment_body': '@nvazquez - raised this WIP PR for calling out details I am still building for KVM produced UnmanagedInstanceTO.', 'comment_created': datetime.datetime(2023, 7, 2, 2, 48, 50, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1250766105, 'comment_body': '@itsayushpandey can you extract these blocks to new methods to reduce complexity of this method and make the code more readible, please?', 'comment_created': datetime.datetime(2023, 7, 3, 11, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1250766518, 'comment_body': ""I think you'll need to add a license header here"", 'comment_created': datetime.datetime(2023, 7, 3, 11, 50, 57, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1254990154, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 7, 6, 22, 35, 46, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1254990256, 'comment_body': 'Pulled the change in separate methods', 'comment_created': datetime.datetime(2023, 7, 6, 22, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1258586459, 'comment_body': 'Do we still need to these filters or is the vm name always sent as blank?', 'comment_created': datetime.datetime(2023, 7, 10, 16, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1260172315, 'comment_body': 'I think, the vm name is not send as blank when this wrapper is excuted as part of importvirtualmachine api.', 'comment_created': datetime.datetime(2023, 7, 11, 19, 16, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306488770, 'comment_body': 'Lets remove commented code', 'comment_created': datetime.datetime(2023, 8, 26, 16, 59, 34, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306488805, 'comment_body': 'Same here', 'comment_created': datetime.datetime(2023, 8, 26, 16, 59, 46, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306489563, 'comment_body': 'Why is this being removed?', 'comment_created': datetime.datetime(2023, 8, 26, 17, 3, 26, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306489645, 'comment_body': 'Outdated comment :)', 'comment_created': datetime.datetime(2023, 8, 26, 17, 3, 59, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306490149, 'comment_body': 'Commented code', 'comment_created': datetime.datetime(2023, 8, 26, 17, 7, 37, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306490619, 'comment_body': 'This seems correct however it may impact on usage, opinions? @DaanHoogland @rohityadavcloud @harikrishna-patnala @weizhouapache ', 'comment_created': datetime.datetime(2023, 8, 26, 17, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306490674, 'comment_body': 'Same here :)', 'comment_created': datetime.datetime(2023, 8, 26, 17, 12, 35, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306492776, 'comment_body': 'Can we keep `VirtualMachineTemplate` here? `VMTemplateVO` is an implementation of that interface, if the explicit cast is needed it can be done previously checking with a check such as: `if (template instanceof VMTemplateVO) ....`', 'comment_created': datetime.datetime(2023, 8, 26, 17, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306492932, 'comment_body': 'Perhaps would be safer to assume it as false here', 'comment_created': datetime.datetime(2023, 8, 26, 17, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306493257, 'comment_body': 'This would create regressions on Vmware imports as they support the default template, can you add a check for the hypervisor type on this logic?', 'comment_created': datetime.datetime(2023, 8, 26, 17, 20, 22, tzinfo=datetime.timezone.utc), 'commenter': 'nvazquez', 'type': 'User'}, {'comment_id': 1306581117, 'comment_body': 'I think it was not used / set anywhere. I will add it back however.', 'comment_created': datetime.datetime(2023, 8, 27, 0, 37, 57, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306728952, 'comment_body': 'Ah, thats true. Fixed the check for KVM only.', 'comment_created': datetime.datetime(2023, 8, 27, 22, 0, 7, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306729587, 'comment_body': 'I can revert if its breaking something but I saw this and made change.', 'comment_created': datetime.datetime(2023, 8, 27, 22, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1306999018, 'comment_body': 'why add it back if it is not used?', 'comment_created': datetime.datetime(2023, 8, 28, 7, 8, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1308678359, 'comment_body': '```suggestion\r\n    private String vncPassword;\r\n```', 'comment_created': datetime.datetime(2023, 8, 29, 11, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 1308679389, 'comment_body': '```suggestion\r\n    public String getVncPassword() { \r\n        return vncPassword;\r\n    }\r\n    \r\n    public void setVncPassword (String vncPasswd) { \r\n        this.vncPasswd = vncPasswd; \r\n    }\r\n```\r\n\r\nSuggestion to comply with our [coding convention](https://cwiki.apache.org/confluence/display/CLOUDSTACK/Coding+conventions).', 'comment_created': datetime.datetime(2023, 8, 29, 11, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'GutoVeronezi', 'type': 'User'}, {'comment_id': 1309657442, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 30, 4, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1309657580, 'comment_body': 'Ah, makes sense. Done.', 'comment_created': datetime.datetime(2023, 8, 30, 4, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1309661843, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 8, 30, 5, 3, 6, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1309662027, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 8, 30, 5, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1312678832, 'comment_body': ""Action Events don't impact usage. It'll impact listEvents only "", 'comment_created': datetime.datetime(2023, 9, 1, 7, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kishankavala', 'type': 'User'}, {'comment_id': 1329659882, 'comment_body': '```suggestion\r\n            description = ""the name of the instance as it is known to the hypervisor"")\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 7, 0, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1329681957, 'comment_body': ""I'd probably prefer these methods returning their respective results and thos being assigned here, but this is way better than the inline parsing happening above :+1: "", 'comment_created': datetime.datetime(2023, 9, 19, 7, 22, 5, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330219101, 'comment_body': 'not just with your PR, but I think we should format these `Annotation`s consistently\r\n```suggestion\r\n@ResourceWrapper(handles=GetUnmanagedInstancesCommand.class)\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 14, 22, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330279277, 'comment_body': 'please see #7131 for the standard for loggers we are trying to grow into.', 'comment_created': datetime.datetime(2023, 9, 19, 15, 0, 44, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330286506, 'comment_body': '```suggestion\r\n@ResourceWrapper(handles=PrepareUnmanageVMInstanceCommand.class)\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 15, 4, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330286845, 'comment_body': 'logger name', 'comment_created': datetime.datetime(2023, 9, 19, 15, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330290468, 'comment_body': 'can this be extracted to a separate method.\r\nIs this relevant to the enhancement or a generic fix found on the way?', 'comment_created': datetime.datetime(2023, 9, 19, 15, 7, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330293473, 'comment_body': '```suggestion\r\n""label.desc.importexportinstancewizard"": ""Import and export instances to/from an existing VMware or KVM cluster."",\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 15, 9, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1330303308, 'comment_body': '```\r\n            checksNotNeededForKvm()\r\n```\r\n is a very valid method name, how about implementing that and removing the comment?\r\naltenative:\r\n```\r\n            checksOnlyNeededForVmware()\r\n```', 'comment_created': datetime.datetime(2023, 9, 19, 15, 15, 9, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1340884988, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 44, 38, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885303, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885435, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 6, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885578, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885778, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 30, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340885874, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 4, 45, 37, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340887950, 'comment_body': ""This is relevant to the enhancement as it is used for displaying vnc console for kvm. I've made changes as per your suggestion."", 'comment_created': datetime.datetime(2023, 9, 29, 4, 48, 4, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340933911, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 6, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1340934141, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 9, 29, 6, 8, 51, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1343621333, 'comment_body': 'this comment and block is suitable as a separate method', 'comment_created': datetime.datetime(2023, 10, 3, 7, 24, 15, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1343621531, 'comment_body': 'this comment and block is suitable as a separate method', 'comment_created': datetime.datetime(2023, 10, 3, 7, 24, 25, tzinfo=datetime.timezone.utc), 'commenter': 'DaanHoogland', 'type': 'User'}, {'comment_id': 1346346820, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 4, 19, 14, 48, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1346346958, 'comment_body': 'done', 'comment_created': datetime.datetime(2023, 10, 4, 19, 14, 56, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1373046987, 'comment_body': 'Is this refactoring needed?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 3, 42, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373056382, 'comment_body': 'In which case rootDisk is null at this point when we have already checked `callerDiskIds.size() != disks.size() - 1`?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 11, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373057586, 'comment_body': 'Why are we not getting capacity from the hypervisor?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 12, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373060986, 'comment_body': 'Why not return early if it is not VMware\r\nif (!Hypervisor.HypervisorType.VMware.equals(hypervisorType)) {\r\nreturn;\r\n//continue with rest\r\n\r\nQuestion - why VLAN checks are not needed for KVM?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373077214, 'comment_body': 'should there be a hypervisor check?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 19, 48, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373080056, 'comment_body': 'Question - why import with default template is not allowed for KVM?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373081443, 'comment_body': 'is this needed?', 'comment_created': datetime.datetime(2023, 10, 26, 12, 22, 22, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373083137, 'comment_body': 'why? Not used anymore/', 'comment_created': datetime.datetime(2023, 10, 26, 12, 23, 47, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1373085269, 'comment_body': 'no idea about these constants. Would be better to make a new method with some doc', 'comment_created': datetime.datetime(2023, 10, 26, 12, 25, 30, tzinfo=datetime.timezone.utc), 'commenter': 'shwstppr', 'type': 'User'}, {'comment_id': 1375573409, 'comment_body': ""I thought it was a harmless refactoring as it moves all required params together. I can change back if you think it doesn't add value?"", 'comment_created': datetime.datetime(2023, 10, 30, 1, 7, 1, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375574768, 'comment_body': ""I don't think its needed as for missing VNC password, we don't execute it at all and code remains simple?\r\n\r\n(My thinking was that hypervisors plugins that need to pass back VNC password will set it in UnmanagedInstanceTO, and if it is passed we process it here without worrying about hypervisor type.)"", 'comment_created': datetime.datetime(2023, 10, 30, 1, 10, 24, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375575295, 'comment_body': 'I think this might be from IntelliJ auto formatting from some rules I had setup. If this is against formatting conventions, I can revert it? ', 'comment_created': datetime.datetime(2023, 10, 30, 1, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375576076, 'comment_body': 'This mocking was not needed (tests pass after removal) after refactoring in other PRs (not this PR). So after rebasing, I was getting Mockito failures and so is not needed anymore.', 'comment_created': datetime.datetime(2023, 10, 30, 1, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}, {'comment_id': 1375576970, 'comment_body': 'Sure, I can create a separate method for generating this string?\r\n\r\nContext: This is the label for network name in selection dropdown. Since displaytext can be non-unique, I added 8 characters of the UUID for differentiating in case of KVM. For VMWare we had broadcast URI from Vlan.', 'comment_created': datetime.datetime(2023, 10, 30, 1, 18, 13, tzinfo=datetime.timezone.utc), 'commenter': 'itsayushpandey', 'type': 'User'}]","[{'commit_sha': 'd8790133d813b3ec17455015c0b4eee331e02001', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f02ea0841071820cb8c2650a75de489b61eadd8b', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7232e204472b3caf4489b1f91cfb322f5cfed16', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20c602f0958a40f8b51fed5a26869dffb22dd1d4', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '77e7c135c4049bcd945a8c97c9ff959d5afee6ba', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a36d86827c3537dc5b4b318d3ac3f9381b11749', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cabc7898f1ccb9e083ef31d0ad831d673b0d8f9c', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '96563366026cc7a12877e964e0fd715c82691385', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df29386c4016e935af18d7b638da962260244563', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56623e35737b779a103b912e6567a0b311888cec', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eec5d4d1bf3acc486b54bca4559e3ca9c9cc100a', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf0b00ae8915092e8c9bc0502aa1ede9a5fab9ea', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '300ebd845112f4c6a77204010fa54ff798bdea8b', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '087522caa1e0713e2c0c607a07f2a80518d15757', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86a1684305845fbeb7a5179036b87793e888b215', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b424d16f7c42e5cb124c63dfa1e6015f17f14223', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6aeb08fbb03cb3358d813c71cf8bd4fbf9c51b66', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba7c8b55ebf5e7556c88704031f09059a1053359', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a13471eebf42f0b3e0564af3bc923a11603586e', 'committer_username': 'itsayushpandey', 'committer_name': 'Ayush Pandey', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 16, 9, 39, 24, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62f305c25875a532812fbcefc6743cdc922aa5c8', 'committer_username': 'nvazquez', 'committer_name': 'Nicolas Vazquez', 'committer_email': 'nicovazquez90@gmail.com', 'commit_date': datetime.datetime(2013, 8, 23, 13, 36, 39, tzinfo=datetime.timezone.utc)}]",Ayush Pandey,32012449,,User,,22,,0,1

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
9759448,cloudstack,apache/cloudstack,Java,1085,1949,142,775,37066,528,274,159,"[{'id': 1416535702, 'number': 7712, 'closed': datetime.datetime(2023, 11, 8, 13, 53, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 2, 47, 26, tzinfo=datetime.timezone.utc), 'time_taken': 11185575.0, 'time_delta': '129 days, 11:06:15', 'additions': 671, 'deletions': 89, 'state': 'closed'}]"
