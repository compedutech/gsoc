pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1034920472,[GSoC22] Data Augmentation Module in OpenCV (imgaug),"PR for GSoC'22 project on Efficient Data Augmentation Module in OpenCV for DL Training

I implemented data augmentation methods based on basic image processing and have tested the performance of these already implemented methods in python enviroment. The following table demonstrates the running time (in seconds) comparison between OpenCV-Aug module and torchvision transforms on a subset of ImageNet:

**single method:**

method | config | dataset | opencv | torchvision
-- | -- | -- | -- | --
resize | size: (200, 200) | imagenet-320 | 0.388 | 1.745
center crop | size: (200, 200) | imagenet-320 | 0.001 | 0.017
pad | padding: (100, 100, 100, 100) | imagenet-320 | 0.141 | 0.553
random crop | size: (200, 200) | imagenet-320 | 0.001 | 0.028
random resized crop | size: (500, 500) | imagenet-320 | 0.368 | 3.806
random flip | default | imagenet-320 | 0.046 | 0.519

**compose multiple methods:**

method | config | num_augs | opencv | pytorch
-- | -- | -- | -- | --
RandomCrop + RandomFlip + Pad | RandomCrop: size(300, 300) Pad: padding(100, 100, 100, 100) | 3 | 0.481 | 1.240
Resize + Pad + RandomFlip + CenterCrop | Resize: size(400, 400) Pad:  padding(100, 100, 100, 100) CenterCrop: size(200, 200) | 5 | 0.636 | 5.486

Besides augmentation methods for pure images, augmentation methods for detection task and segmentation task is also added, which requires processing the target labels of corresponding tasks.

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [x] I agree to contribute to the project under Apache 2 License.
- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV
- [x] The PR is proposed to the proper branch
- [ ] There is a reference to the original bug report and related work
- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [x] The feature is well documented and sample code can be built with the project CMake
",False,3335,https://api.github.com/repos/opencv/opencv_contrib/pulls/3335,https://github.com/opencv/opencv_contrib/pull/3335,open,3575,0,32,23,7,11,1,0,[{'name': 'GSoC'}],2022-08-24 03:29:44+00:00,,0.0,,"[{'comment_id': 955764273, 'comment_body': 'Can you call cv2.imshow() here to show the result?', 'comment_created': datetime.datetime(2022, 8, 26, 7, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kaingwade', 'type': 'User'}, {'comment_id': 955782024, 'comment_body': 'Please remove code which are not finished, experimental, for debug and the like.', 'comment_created': datetime.datetime(2022, 8, 26, 8, 14, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kaingwade', 'type': 'User'}, {'comment_id': 957261223, 'comment_body': 'OK, I will change the python sample in next commit.', 'comment_created': datetime.datetime(2022, 8, 29, 12, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'ZhaoChuyang', 'type': 'User'}, {'comment_id': 997782333, 'comment_body': ""Global variables with direct access is very bad idea:\r\n- C++ does not define initialization order. `rng` and `state` may be initialized in any order as soon as global variables in user's code. It becomes even worse, if library is linked statically.\r\n- It's not clear how to use this in multi-threaded environment. \r\n\r\nI propose 2 options:\r\n- Use standard OpenCV [theRNG](https://docs.opencv.org/4.x/d2/de8/group__core__array.html#ga75843061d150ad6564b5447e38e57722). It uses thread local seed.\r\n- Provide own theRNG-like function. It returns reference to RNG object that could be re-initialized."", 'comment_created': datetime.datetime(2022, 10, 18, 6, 48, 43, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 997785911, 'comment_body': 'Please specify the method.', 'comment_created': datetime.datetime(2022, 10, 18, 6, 53, 10, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 997786388, 'comment_body': 'I propose to rename to `ColorConvert`. `Convert` is too generic.', 'comment_created': datetime.datetime(2022, 10, 18, 6, 53, 45, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 997788634, 'comment_body': 'Why do you need custom bindings for it?', 'comment_created': datetime.datetime(2022, 10, 18, 6, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 997800213, 'comment_body': 'It makes sense to use `InputArray` and `OutputArray` for all functions in this header. Rationale:\r\n- Generic OpenCV interface.\r\n- UMat support, if `InputArray` is promoted from `Transform` classes directly without getMat() call.', 'comment_created': datetime.datetime(2022, 10, 18, 7, 6, 37, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 997801871, 'comment_body': 'I have not found `long log` or `unsigned long long` usage in interface. Most probably the manual binding is not required.', 'comment_created': datetime.datetime(2022, 10, 18, 7, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 997809815, 'comment_body': 'it chould be cvtColor with COLOR_GRAY2BGR.', 'comment_created': datetime.datetime(2022, 10, 18, 7, 15, 51, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}, {'comment_id': 998027085, 'comment_body': 'The function [cv::mean](https://docs.opencv.org/4.x/d2/de8/group__core__array.html#ga191389f8a0e58180bb13a727782cd461) calculates the mean value M of array elements, independently for each channel, and return it. No need to allocate array and iterate over channels the next arithmetic steps could be dome for all channels together without loop.', 'comment_created': datetime.datetime(2022, 10, 18, 10, 33, 12, tzinfo=datetime.timezone.utc), 'commenter': 'asmorkalov', 'type': 'User'}]","[{'commit_sha': '030f4279b5d0392e04aeb324488e9c7547969bd2', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59ecd1aeba15a20402a1967693a147e0080be482', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06a7d4574eec224d592abb33912c7cc963994390', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35830e977a31b3399dcf027021bf356a979f06a3', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6733574b75d9ef193a2ef1bcdec99b1f252ca834', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8300ece57ecccb7605fcd2d48c79e215f0734a4e', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3d1ad6e06b6c72aac720d02c20d34f39615e732', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '437a20616d14aa6ca740340cb1c6c163cf55d4bf', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc441480d6c41f74933ee53cbac86852cf37f0f8', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbedb1b1e17ae691aac39df488e5a78f7b4e5c7c', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '671020f806d3c5add169070e6cf53847e97a8e34', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08bf6fc63ce2612fe9bd9544a4f52a699b4506c1', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8c89401990c1f870628f8f0cdc408797309737b', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ed2063f2ba2a375d2eda435ccc489ff06d060d8', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8d7807a12507b375a61e714bf0468ebdd537e5f2', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c93037d94e9689fab355905b1dc0d9f32fd20ea0', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fdfc49166a40d5de77fd2f30230150459020ccc0', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be06b2284d6256f9549f5cf05dd3b223fe46d8ed', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '938005043a5b37cea77c80c7922d25e587cb0944', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfee089d72e8fb97dd9a3ec0cb21a0a31a9c46ea', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb354635b033a3e5116d575ed642785ebb371370', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fb9a5d7ff46e98d4f208a3deb4909c49b404d9fb', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b44ba61be456519f64640380676e55471e81d073', 'committer_username': 'ZhaoChuyang', 'committer_name': 'Chuyang ', 'committer_email': 'cyzhao@buaa.edu.cn', 'commit_date': datetime.datetime(2015, 9, 2, 10, 47, 41, tzinfo=datetime.timezone.utc)}]",Chuyang ,14090924,cyzhao@buaa.edu.cn,User,,28,,12,15

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
12756992,opencv_contrib,opencv/opencv_contrib,C++,5738,9279,384,488,4451,589,5,77,"[{'id': 1034920472, 'number': 3335, 'closed': None, 'created': datetime.datetime(2022, 8, 24, 3, 29, 44, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 3575, 'deletions': 0, 'state': 'open'}]"
