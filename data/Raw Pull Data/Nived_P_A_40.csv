pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
715378288,Added ESRGAN Example,Added python script files for training and evaluating the ESRGAN model. ,True,47,https://api.github.com/repos/tensorflow/gan/pulls/47,https://github.com/tensorflow/gan/pull/47,closed,1460,0,17,21,1,25,1,0,[{'name': 'cla: yes'}],2021-08-18 20:01:19+00:00,2021-09-07 17:51:38+00:00,1720219.0,"19 days, 21:50:19","[{'comment_id': 695941804, 'comment_body': 'will this link work? I think not', 'comment_created': datetime.datetime(2021, 8, 25, 16, 59, 16, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695942391, 'comment_body': 'What type of Python object should this be?', 'comment_created': datetime.datetime(2021, 8, 25, 16, 59, 59, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695942634, 'comment_body': 'Also, please change the name to fit conventions (lower case)', 'comment_created': datetime.datetime(2021, 8, 25, 17, 0, 19, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695942883, 'comment_body': 'can you make this a function argument or a file-level constant?', 'comment_created': datetime.datetime(2021, 8, 25, 17, 0, 41, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695943098, 'comment_body': 'Why 4 and not autotune?', 'comment_created': datetime.datetime(2021, 8, 25, 17, 1, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695943564, 'comment_body': ""Can you make the class name the same as the actual name ie 'Params' != 'HParams'"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 1, 36, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695943724, 'comment_body': 'please fix varaible naming convention', 'comment_created': datetime.datetime(2021, 8, 25, 17, 1, 53, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695944211, 'comment_body': 'nit: this assert can be outside the session, so it would be better if it were moved outside', 'comment_created': datetime.datetime(2021, 8, 25, 17, 2, 32, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695944553, 'comment_body': 'really nice flow! nothing to change here', 'comment_created': datetime.datetime(2021, 8, 25, 17, 3, 2, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695944823, 'comment_body': 'nit: please fix spacing', 'comment_created': datetime.datetime(2021, 8, 25, 17, 3, 25, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695945105, 'comment_body': ""nit: I think this should run in Python 3, so this isn't necessary anymore"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 3, 50, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695945684, 'comment_body': ""this will all be replaced once your previous PR goes in, correct? if so, please add a note to remove this code before submitting so we dont' forget!"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 4, 43, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695945898, 'comment_body': 'nit: not needed in Python 3. Please remove', 'comment_created': datetime.datetime(2021, 8, 25, 17, 5, 4, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695946293, 'comment_body': 'can you just access these items as `tf.keras.XXX` and skip all the extra imports?', 'comment_created': datetime.datetime(2021, 8, 25, 17, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695946627, 'comment_body': 'If you really want shortcuts, you can import tf once and just use `Input = tf.keras.Input` etc', 'comment_created': datetime.datetime(2021, 8, 25, 17, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695946781, 'comment_body': 'nit: please remove', 'comment_created': datetime.datetime(2021, 8, 25, 17, 6, 23, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695947097, 'comment_body': ""nit: please don't do multiple imports with one line. also, please only import modules, not individual functions"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 6, 54, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695948124, 'comment_body': 'please fix variable names. they should begin with lower case. https://google.github.io/styleguide/pyguide.html#3162-naming-conventions', 'comment_created': datetime.datetime(2021, 8, 25, 17, 8, 16, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695948242, 'comment_body': 'is this meant to be commented out?', 'comment_created': datetime.datetime(2021, 8, 25, 17, 8, 28, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695948846, 'comment_body': 'instead of modifying this list, can you just iterate through it please? popping and taking element 0 is less clear and subject to weird modifications, and might be harder to debug if something goes wrong', 'comment_created': datetime.datetime(2021, 8, 25, 17, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695949028, 'comment_body': 'please make these function arguments with default', 'comment_created': datetime.datetime(2021, 8, 25, 17, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695949134, 'comment_body': 'nit: please remove', 'comment_created': datetime.datetime(2021, 8, 25, 17, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695949455, 'comment_body': 'errrr...where did these values come from? Please add a long comment explaining it', 'comment_created': datetime.datetime(2021, 8, 25, 17, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695949640, 'comment_body': 'please add this as an argument with default', 'comment_created': datetime.datetime(2021, 8, 25, 17, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695950053, 'comment_body': 'please remove', 'comment_created': datetime.datetime(2021, 8, 25, 17, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}]","[{'commit_sha': 'f349edd5f587e6fd5a2e4195dc5f9bf7d09827fc', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8433328d812a7cef946c2120d84c5b88c596013', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e6af4876ff012bb75b25fd8495ec94a11597fa', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ba84873c519f7393ca0de165ad205db52344313', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '042af794598a12815986cb09a8a7b874331d4c35', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '99affbe14c73f8660df47714abaff765c965b3b3', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbfbc2dbeeb8a03cd96ef2756185099a9be9b714', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '339896fe209a243f2aec64b4c77957a875372b46', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'efb0250282435cd4f5bf56ea8f0914b8f0b6f84a', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a5425f4c939b8a90b438ad2c61e125c78288816a', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71f58ff83f8ee5f3e3769cc304310e2b7e0651b3', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f96701eac51ba03cf8dc4009b2de2b063f423979', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6f33f600ef8eb9ca7494697090d726e17e7c7f99', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd2b712d32cfc888cb193d67c8b85c0f7ddfd518', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f803538a1debfe7264a70a7ea0f783f990926543', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '391920db103bec7d579fd00c129d1920e69c1a09', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdd33c69c4c6a53bc9b644785d1c45df130d35c7', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3233708ef84dfce0fcfefc366a90ff55b77b3367', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e00963c1bf16733799e2ecd4e52a8dfefc701fcc', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '425d36270f3902f54244ad245153c8125dfdf4ca', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '097cc2449f9963e7b2986cae126d0a7543be8b00', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}]",Nived P A,62166124,,User,,28,,12,17
715409541,Added Colab Notebooks for ESRGAN  ,Added two notebook files for training the ESRGAN model on Google Colaboratory GPUs and TPUs.  ,True,48,https://api.github.com/repos/tensorflow/gan/pulls/48,https://github.com/tensorflow/gan/pull/48,closed,2109,0,2,3,1,7,1,0,[{'name': 'cla: yes'}],2021-08-18 20:54:38+00:00,2021-08-26 23:55:55+00:00,702077.0,"8 days, 3:01:17","[{'comment_id': 695953501, 'comment_body': ""<p>Do you want to add 'ESRGAN with TF-GAN on GPU', and also let the reader know that there's a TPU version? Also, did you need to add any caveats to this (like, will it actually work)? Also, please let the user know how long things should take to run (on GPU).</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/tensorflow/gan/pull/48/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='0'/>"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695953504, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #1.    from keras.models import Model\n</pre><p>Can you just reference these as <code>tf.keras.models.XXXX</code>  or reference them as <code>Model = tf.keras.models.Model</code>,  instead of reimporting?</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/tensorflow/gan/pull/48/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'OPEN\' data-cellIndex=\'12\'/>', 'comment_created': datetime.datetime(2021, 8, 25, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695953511, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #3.    from keras.layers import LeakyReLU, Conv2D, BatchNormalization, Conv2DTranspose\n</pre><p>Please only import one thing at a time</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/tensorflow/gan/pull/48/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'OPEN\' data-cellIndex=\'12\'/>', 'comment_created': datetime.datetime(2021, 8, 25, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695953516, 'comment_body': ""<p>These loss functions will be replaced by your PR submit once it goes in, right?</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/tensorflow/gan/pull/48/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='18'/>"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695953520, 'comment_body': '<pre class=""ql-syntax"" spellcheck=""false"">Line #10.    G_optimizer = optimizer\n</pre><p>nit: please use variable names that conform to the style guide</p>\n<br/>\n\n _Reply via <a href=\'https://app.reviewnb.com/tensorflow/gan/pull/48/discussion/\'>ReviewNB</a>_ <div id=\'ReviewNBCommentContext-DoNotDelete\' style=\'display:none\' data-state=\'OPEN\' data-cellIndex=\'28\'/>', 'comment_created': datetime.datetime(2021, 8, 25, 17, 16, 1, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695954192, 'comment_body': ""<p>Probably add <code>with TPUs</code> onto the title</p><p> </p><p>also, nit: Tf-GAN -&gt; TF-GAN</p>\n<br/>\n\n _Reply via <a href='https://app.reviewnb.com/tensorflow/gan/pull/48/discussion/'>ReviewNB</a>_ <div id='ReviewNBCommentContext-DoNotDelete' style='display:none' data-state='OPEN' data-cellIndex='0'/>"", 'comment_created': datetime.datetime(2021, 8, 25, 17, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 696374034, 'comment_body': 'Yes these functions will be replaced.  ', 'comment_created': datetime.datetime(2021, 8, 26, 7, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'nivedwho', 'type': 'User'}]","[{'commit_sha': 'd7a3e80f1461c3c89aa8748271a27ced45762b88', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98f8fe2f33be4cb66ab99c802dc83ace4cf6ba79', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23c731ec29caa15f60264a7d4881e2530d7b2bf8', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}]",Nived P A,62166124,,User,,28,,12,17
714011266,Added Relativisitc Average GAN Loss ,"Added two functions 
- ragan_generator() for calculating generator loss. 
- ragan_discriminator() for calculating discriminator loss

and a class RelativisticAverageLoss for testing the two functions. ",True,46,https://api.github.com/repos/tensorflow/gan/pulls/46,https://github.com/tensorflow/gan/pull/46,closed,153,2,4,9,1,8,1,0,[{'name': 'cla: yes'}],2021-08-17 08:06:16+00:00,2021-09-07 19:37:30+00:00,1855874.0,"21 days, 11:31:14","[{'comment_id': 695934722, 'comment_body': 'what do you think about the names ""relativistic_generator_loss"" instead? I think it\'s more descriptive.', 'comment_created': datetime.datetime(2021, 8, 25, 16, 49, 40, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695935470, 'comment_body': 'Can you please use the same naming conventions as the other losses in this file? See any of the other discriminator loss functions for what to call these', 'comment_created': datetime.datetime(2021, 8, 25, 16, 50, 41, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 695935897, 'comment_body': 'same as above', 'comment_created': datetime.datetime(2021, 8, 25, 16, 51, 14, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 696329224, 'comment_body': ""Yes, I have changed the names to 'relativistic_generator_loss' and 'relativistic_discriminator_loss'."", 'comment_created': datetime.datetime(2021, 8, 26, 6, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'nivedwho', 'type': 'User'}, {'comment_id': 696777382, 'comment_body': 'These are not the standard argument names. Cna you please make them the standard argument names?', 'comment_created': datetime.datetime(2021, 8, 26, 16, 8, 25, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 697609902, 'comment_body': 'Is `discriminator_real_classification_logits` the standard argument? I was confused because `discriminator_real_outputs` is also used for loss functions such as `wasserstein_hinge_discriminator_loss()` and `minimax_discriminator_loss()`. ', 'comment_created': datetime.datetime(2021, 8, 27, 17, 33, 54, tzinfo=datetime.timezone.utc), 'commenter': 'nivedwho', 'type': 'User'}, {'comment_id': 697626024, 'comment_body': ""I think with few execptions, standard arguments here are `discriminator_real_outputs`,`discriminator_gen_outputs`. Generator losses usually only take 1 argument, but the relativistic loss takes 2, so you'll need to make an except for your loss, since it wont' work with `google3/third_party/py/tensorflow_gan/python/losses/losses_impl_test.py` by default. \r\n\r\nAlso, can you please add your losses to `tuple_losses.py`. and the test?"", 'comment_created': datetime.datetime(2021, 8, 27, 18, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'joel-shor', 'type': 'User'}, {'comment_id': 697661491, 'comment_body': 'I will make these changes but I did not quite understand how I can handle such an exeption inside the generator loss function.', 'comment_created': datetime.datetime(2021, 8, 27, 19, 5, 45, tzinfo=datetime.timezone.utc), 'commenter': 'nivedwho', 'type': 'User'}]","[{'commit_sha': '8d9bab792d9573f45bc53b3fe84bee26cce95b98', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b03a74489f9a6f398c78317d7db6742f19c1d1fa', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b98cb7276beefd27ac6d910f5ce9d7d82362b07', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a509e62cf38910b7bea3462fca7443f7ec57cee', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7ccbfb3aa77a9f51c1d915b5b740155cc2371af', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7ecbaf01726f2741c2e5531f1e8595f94f2190e1', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab911d3cfa8169b50144e64a6a48bec7271a1c56', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49f319bc1fe31fc880bce162a097feca98bd1c09', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c52b9c1f7803021cf89a538c580e9ecfa750e615', 'committer_username': 'nivedwho', 'committer_name': 'Nived P A', 'committer_email': None, 'commit_date': datetime.datetime(2020, 3, 14, 4, 45, 41, tzinfo=datetime.timezone.utc)}]",Nived P A,62166124,,User,,28,,12,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
184105548,gan,tensorflow/gan,Jupyter Notebook,246,928,48,18,398,18,2,5,"[{'id': 735214957, 'number': 51, 'closed': datetime.datetime(2021, 9, 27, 2, 47, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 16, 7, 41, 20, tzinfo=datetime.timezone.utc), 'time_taken': 932782.0, 'time_delta': '10 days, 19:06:22', 'additions': 18, 'deletions': 72, 'state': 'closed'}, {'id': 734577781, 'number': 50, 'closed': datetime.datetime(2021, 9, 27, 2, 48, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 15, 13, 37, 41, tzinfo=datetime.timezone.utc), 'time_taken': 997861.0, 'time_delta': '11 days, 13:11:01', 'additions': 52, 'deletions': 99, 'state': 'closed'}, {'id': 715409541, 'number': 48, 'closed': datetime.datetime(2021, 8, 26, 23, 55, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 20, 54, 38, tzinfo=datetime.timezone.utc), 'time_taken': 702077.0, 'time_delta': '8 days, 3:01:17', 'additions': 2109, 'deletions': 0, 'state': 'closed'}, {'id': 715378288, 'number': 47, 'closed': datetime.datetime(2021, 9, 7, 17, 51, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 18, 20, 1, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1720219.0, 'time_delta': '19 days, 21:50:19', 'additions': 1460, 'deletions': 0, 'state': 'closed'}, {'id': 714011266, 'number': 46, 'closed': datetime.datetime(2021, 9, 7, 19, 37, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 8, 6, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1855874.0, 'time_delta': '21 days, 11:31:14', 'additions': 153, 'deletions': 2, 'state': 'closed'}, {'id': 713273947, 'number': 45, 'closed': datetime.datetime(2021, 8, 17, 4, 29, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 16, 9, 37, 21, tzinfo=datetime.timezone.utc), 'time_taken': 67908.0, 'time_delta': '18:51:48', 'additions': 3181, 'deletions': 0, 'state': 'closed'}]"
