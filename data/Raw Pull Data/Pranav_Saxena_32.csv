pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
674916584,automation: Add new requestor Job,"Add a new requestor job to the automation framework, allowing users to
make specifically crafted requests to targets.",True,2998,https://api.github.com/repos/zaproxy/zap-extensions/pulls/2998,https://github.com/zaproxy/zap-extensions/pull/2998,closed,633,2,13,1,4,24,0,0,[],2021-06-21 21:50:57+00:00,2021-06-30 10:21:47+00:00,736250.0,"8 days, 12:30:50","[{'comment_id': 656247471, 'comment_body': ""Is this something we want to error on? I'm just wondering about the case where someone comments out all of the requests, eg while testing things.\r\nWe definitely shouldnt do anything if there are no requests but I'm not sure we should error or even warn?"", 'comment_created': datetime.datetime(2021, 6, 22, 13, 56, 14, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 656248456, 'comment_body': 'We could default to GET? Also we could check that its a valid method.', 'comment_created': datetime.datetime(2021, 6, 22, 13, 57, 22, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 656258846, 'comment_body': 'Need to make sure that the requests are shown in the Sites tree and History.', 'comment_created': datetime.datetime(2021, 6, 22, 14, 8, 34, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 656259778, 'comment_body': 'Could store it in an int so you dont have to get it again, or just check that the map contains the key', 'comment_created': datetime.datetime(2021, 6, 22, 14, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 656260595, 'comment_body': 'Oh and dont forget that the user can ignore warnings, in which case the responseCode might not be an int ;)', 'comment_created': datetime.datetime(2021, 6, 22, 14, 10, 22, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 656267233, 'comment_body': ""@thc202 suggested that there are other methods as well, and the user could make use of custom ones as well so we shouldn't restrict the method because of that.  https://wiki.owasp.org/index.php/Testing_for_HTTP_Methods_and_XST_(OWASP-CM-008)#Arbitrary_HTTP_Methods"", 'comment_created': datetime.datetime(2021, 6, 22, 14, 17, 27, tzinfo=datetime.timezone.utc), 'commenter': 'pranavsaxena17', 'type': 'User'}, {'comment_id': 657707549, 'comment_body': 'It could still default to GET, one less line for the common case.', 'comment_created': datetime.datetime(2021, 6, 24, 7, 47, 4, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660561096, 'comment_body': "" - It would be better to negate the expression, reduces nesting and it's not necessary to scroll all way down to know what the condition is doing.\r\n - The `runJob` is casting anyway."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660561148, 'comment_body': 'These casts should be checked, if the user added a list or map by mistake it would lead to class cast exception.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660561204, 'comment_body': ""Should also check if it's empty."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660562440, 'comment_body': 'The names should be extracted to constants.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 22, 40, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660562593, 'comment_body': 'Could just get it.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 22, 56, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660563699, 'comment_body': 'This code will not be correct if the response was not received, should probably skip this check altogether.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 24, 28, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660564630, 'comment_body': ""Should check it's not null."", 'comment_created': datetime.datetime(2021, 6, 29, 12, 25, 42, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660564817, 'comment_body': 'The finals can be removed.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 25, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660566005, 'comment_body': 'Better to specify what is required.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 27, 38, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660566926, 'comment_body': 'Given the method is optional it could just have URL as the minimum (IMO).', 'comment_created': datetime.datetime(2021, 6, 29, 12, 28, 49, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660568379, 'comment_body': 'Since the method is optional it could be removed.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660568587, 'comment_body': 'Should also test with empty string.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 30, 58, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660568939, 'comment_body': '`Bad` â†’ `Invalid`', 'comment_created': datetime.datetime(2021, 6, 29, 12, 31, 24, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660569356, 'comment_body': '`// Given / When`', 'comment_created': datetime.datetime(2021, 6, 29, 12, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660569474, 'comment_body': 'Remove public modifier.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 660589259, 'comment_body': 'Regarding the last comment, does not worth doing anything in this PR.', 'comment_created': datetime.datetime(2021, 6, 29, 12, 56, 53, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 661295229, 'comment_body': 'Sorry, just realised that this should be FIRST_EXPLORE so that it will appear before the spiders, otherwise it could appear after them which is almost certainly not what most people would want.', 'comment_created': datetime.datetime(2021, 6, 30, 9, 36, 4, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}]","[{'commit_sha': 'e191560ec02eff51370f2ed287249310cf31734e', 'committer_username': 'pranavsaxena17', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 28, 6, 39, 49, tzinfo=datetime.timezone.utc)}]",,58285865,,User,,11,,2,2
681298348,automation: Add alert tests,"Added new alert tests to validate the presence/absence of specific alerts in the active/passive scan.
Modified the PassiveScanJobResultData and ActiveScanJobResultData classes to store the alerts raised during the passive/active scan. Added tests to verify the logic added and updated the Changelog.",True,3020,https://api.github.com/repos/zaproxy/zap-extensions/pulls/3020,https://github.com/zaproxy/zap-extensions/pull/3020,closed,1425,30,22,1,4,19,0,0,[],2021-06-30 23:24:42+00:00,2021-07-08 16:37:09+00:00,666747.0,"7 days, 17:12:27","[{'comment_id': 662296613, 'comment_body': 'I dont think AutomationJob should know anything about the test classes other the absolute minimum.\r\nThe parsing should be in the relevant test classes, and ideally the classes should be registered with a key that the job / infra can use to link to the relevant class. This will then allow add-ons to add test types without having to change the authentication classes.', 'comment_created': datetime.datetime(2021, 7, 1, 13, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 662299563, 'comment_body': 'The exclamation marks should not be used here - they are just used in unit tests where we know the message files dont get loaded correctly :)', 'comment_created': datetime.datetime(2021, 7, 1, 13, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 665991306, 'comment_body': 'Needs to be moved to the `Unreleased` section.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665993235, 'comment_body': 'Could call `isNullOrEmpty`.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 43, 29, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665994841, 'comment_body': ""I'd suggest `this.alertName = compilePattern(alert)` and have `compilePattern` do the null/empty check and compile. (It should also handle `PatternSyntaxException`.)"", 'comment_created': datetime.datetime(2021, 7, 8, 8, 45, 37, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665995664, 'comment_body': 'Extract constants.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665996886, 'comment_body': 'Preferable to use constants.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 48, 22, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665998077, 'comment_body': '`static`', 'comment_created': datetime.datetime(2021, 7, 8, 8, 50, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665998117, 'comment_body': ' - `regex` â†’ `pattern`\r\n - The parentheses are not necessary (same for following method).', 'comment_created': datetime.datetime(2021, 7, 8, 8, 50, 3, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665998372, 'comment_body': '`static`', 'comment_created': datetime.datetime(2021, 7, 8, 8, 50, 25, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 665998667, 'comment_body': ""Should be i18n'ed."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666002106, 'comment_body': ""Does not seem to be the right place (if they are kept here, they shouldn't be abstract)."", 'comment_created': datetime.datetime(2021, 7, 8, 8, 55, 12, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666005007, 'comment_body': 'yaml â†’ plan.', 'comment_created': datetime.datetime(2021, 7, 8, 8, 58, 42, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666005632, 'comment_body': 'Add space after the comma (same for following comments).', 'comment_created': datetime.datetime(2021, 7, 8, 8, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666007982, 'comment_body': 'This should be moved just before ` test.logToProgress(progress);`.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666008562, 'comment_body': 'Missing then.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666010563, 'comment_body': 'This one does not seem to be used.', 'comment_created': datetime.datetime(2021, 7, 8, 9, 6, 13, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 666062959, 'comment_body': ""Might be better to put this test in the AutomationAlertTest constructor?\r\nI'd prefer AutomationJob to know as little as possible about the job and test internals."", 'comment_created': datetime.datetime(2021, 7, 8, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 666066486, 'comment_body': 'This check is returning (in which case the tests are not added at all). IMO better to refactor how the tests are managed in a follow up PR.', 'comment_created': datetime.datetime(2021, 7, 8, 10, 23, 14, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}]","[{'commit_sha': '16e977f83921a9830dc1739c2984e332166aadbb', 'committer_username': 'pranavsaxena17', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 28, 6, 39, 49, tzinfo=datetime.timezone.utc)}]",,58285865,,User,,11,,2,2
703277470,retest: First Version,The first version of the retest addon.,True,3050,https://api.github.com/repos/zaproxy/zap-extensions/pulls/3050,https://github.com/zaproxy/zap-extensions/pull/3050,closed,2512,51,39,1,3,55,0,0,[],2021-08-04 10:45:06+00:00,2021-08-20 17:29:27+00:00,1406661.0,"16 days, 6:44:21","[{'comment_id': 682511015, 'comment_body': '`editAlertPanel`?', 'comment_created': datetime.datetime(2021, 8, 4, 10, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682511333, 'comment_body': ""If you're going to include JavaDoc it should really be useful not just default/boilerplate."", 'comment_created': datetime.datetime(2021, 8, 4, 10, 59, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682523846, 'comment_body': ""These declarations shouldn't need to be fully qualified, also the blank lines can be removed."", 'comment_created': datetime.datetime(2021, 8, 4, 11, 21, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682525433, 'comment_body': '`e.getMessage()` ?', 'comment_created': datetime.datetime(2021, 8, 4, 11, 23, 30, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682528875, 'comment_body': 'Is there not an Alert.equals method? Or Alert.getFingerPrint (which could then be compared)?', 'comment_created': datetime.datetime(2021, 8, 4, 11, 28, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682529401, 'comment_body': 'Remove the retestMenu itself?', 'comment_created': datetime.datetime(2021, 8, 4, 11, 29, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682532078, 'comment_body': ""This should be documented in the help, that the current assumption is Medium/Medium.\r\n\r\nIdeally this should be user selectable (unless it actually is recorded on the original alert [I don't think it is])."", 'comment_created': datetime.datetime(2021, 8, 4, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682534321, 'comment_body': '```suggestion\r\n<html>\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 11, 37, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682534760, 'comment_body': 'Should be updated.', 'comment_created': datetime.datetime(2021, 8, 4, 11, 37, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682535124, 'comment_body': 'Is this really the right icon?', 'comment_created': datetime.datetime(2021, 8, 4, 11, 38, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682535441, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 8, 4, 11, 39, 11, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 682536397, 'comment_body': ""Shouldn't this do an enabled/disabled check for the source of the alert.\r\n\r\nIf it isn't Active or Passive then how can it be re-tested (ex: Manually added alerts, HttpSender or Targeted scripts, etc)."", 'comment_created': datetime.datetime(2021, 8, 4, 11, 40, 52, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 683221767, 'comment_body': 'Note that these are not internationalized - I havnt checked how they are being used ;)\r\n', 'comment_created': datetime.datetime(2021, 8, 5, 8, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 683223770, 'comment_body': 'FYI we have this class https://github.com/zaproxy/zaproxy/blob/main/zap/src/main/java/org/zaproxy/zap/view/LayoutHelper.java which I find easier to use/read when handling GridBagConstraints :)', 'comment_created': datetime.datetime(2021, 8, 5, 8, 3, 29, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 683224936, 'comment_body': 'Labels dont typically need to be class level unless you need to change them at some point', 'comment_created': datetime.datetime(2021, 8, 5, 8, 5, 12, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 683228591, 'comment_body': 'Labels should be associated with the input component that they are associated with - this is for accessibility. To do this use the ""jlabel.setLabelFor(..)"" method - the StandardField dialogs do this for you :)', 'comment_created': datetime.datetime(2021, 8, 5, 8, 10, 25, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 683229336, 'comment_body': 'Re previous comment, I dont think these will be i18ned :)', 'comment_created': datetime.datetime(2021, 8, 5, 8, 11, 33, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 684036019, 'comment_body': 'This could be done later, closer to the respective condition/code.', 'comment_created': datetime.datetime(2021, 8, 6, 8, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684037297, 'comment_body': '`loadPlan`', 'comment_created': datetime.datetime(2021, 8, 6, 8, 10, 15, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684038228, 'comment_body': 'Are these changes correct?', 'comment_created': datetime.datetime(2021, 8, 6, 8, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684039242, 'comment_body': '`extension` â†’ `add-on`', 'comment_created': datetime.datetime(2021, 8, 6, 8, 13, 20, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684040696, 'comment_body': 'The whole add-on can depend directly on the add-on (rather than just the extension).', 'comment_created': datetime.datetime(2021, 8, 6, 8, 15, 36, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684040903, 'comment_body': ""This shouldn't be needed anymore."", 'comment_created': datetime.datetime(2021, 8, 6, 8, 15, 56, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684040931, 'comment_body': 'This should be done outside the `zapAddOn` block.', 'comment_created': datetime.datetime(2021, 8, 6, 8, 15, 58, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684044779, 'comment_body': 'It would be better if the add-on used its own messages, this makes core changes harder (like the reports case where messages needed to be added back because an add-on is using them).', 'comment_created': datetime.datetime(2021, 8, 6, 8, 21, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684045273, 'comment_body': '`hasView()`', 'comment_created': datetime.datetime(2021, 8, 6, 8, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684047648, 'comment_body': 'Better remove this, the API should have no state.', 'comment_created': datetime.datetime(2021, 8, 6, 8, 26, 17, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684047951, 'comment_body': 'Merge.', 'comment_created': datetime.datetime(2021, 8, 6, 8, 26, 47, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684048519, 'comment_body': 'This should only do anything id `hasView()` returns true.', 'comment_created': datetime.datetime(2021, 8, 6, 8, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 684049258, 'comment_body': 'This could fail if there is no GUI. It should either check `hasView()` or use another mechanism', 'comment_created': datetime.datetime(2021, 8, 6, 8, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 684050316, 'comment_body': 'Again, check `hasView()` - basically this should be done anywhere in the code where we might not have the GUI. It was fine inside the display panel as that only ran in the GUI. Now its been moved it could be called when running in cmd or daemon modes.', 'comment_created': datetime.datetime(2021, 8, 6, 8, 30, 25, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 684051644, 'comment_body': 'The menu will be removed automatically by core (was added with the hook). Is this really needed? (In any case it would need a view check.)', 'comment_created': datetime.datetime(2021, 8, 6, 8, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 684292673, 'comment_body': ""This was discussed during a call, since it's individual elements it doesn't really make sense to instantiate a new Alert for the comparison."", 'comment_created': datetime.datetime(2021, 8, 6, 14, 46, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 686025629, 'comment_body': 'Why change the default value? Its mandatory, so will fail if people dont add it, thats why the default value was there :)', 'comment_created': datetime.datetime(2021, 8, 10, 13, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 686026178, 'comment_body': ""As above, but I think they should al be 'info'"", 'comment_created': datetime.datetime(2021, 8, 10, 13, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}, {'comment_id': 688670101, 'comment_body': 'The `public` modifier can be removed.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 24, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688670443, 'comment_body': 'The `public` modifier can be removed.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688671733, 'comment_body': ""The NPE caused by getPlan() can be addressed by adding `Constant.messages = new I18N(Locale.ENGLISH);` in the `//Given` block. Subsequently there are problems with the i18n of enums, I think that can likely be addressed with further mocking and when/thenReturn handling. I'd suggest looking at the automation UnitTests there's extensive using of mock/when/thenReturn in those tests which likely apply here as well."", 'comment_created': datetime.datetime(2021, 8, 13, 17, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688674198, 'comment_body': '2021', 'comment_created': datetime.datetime(2021, 8, 13, 17, 31, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688674384, 'comment_body': 'This seems to be unused.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688674706, 'comment_body': ""This can just be local to the hook method, I believe that's the only place it's used."", 'comment_created': datetime.datetime(2021, 8, 13, 17, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688675163, 'comment_body': 'Should probably return an empty string `""""`', 'comment_created': datetime.datetime(2021, 8, 13, 17, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688675857, 'comment_body': 'That would also prevent a potential NPE at 63 is `s` is null.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 34, 40, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688676295, 'comment_body': 'Seems unused.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 35, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688676918, 'comment_body': 'Seems unused.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 36, 32, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688677335, 'comment_body': 'Seems unused.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 37, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688678093, 'comment_body': 'Can methodListModel and paramListModel just be declared where needed, unlike nameListModel they only seem to be used in a single method.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688678937, 'comment_body': '```suggestion\r\n        ZapTextArea zapTextArea = new ZapTextArea(3, 30);\r\n```\r\n\r\nShould be named with proper camelCase.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 40, 14, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688679736, 'comment_body': ""Can be removed, it isn't used again."", 'comment_created': datetime.datetime(2021, 8, 13, 17, 41, 28, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688681143, 'comment_body': 'Could this return empty list instead?', 'comment_created': datetime.datetime(2021, 8, 13, 17, 43, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 688685044, 'comment_body': '@thc202 suggested handling the i18n problems with the enums by also calling the `setUpZap` method in addition to `mockMessages`, and that worked. As for the `Constant.messages` line, I added it, but that doesnt seem to work.\r\n\r\nIt seems to me that you can only load messages from one extension for a test.', 'comment_created': datetime.datetime(2021, 8, 13, 17, 50, 50, tzinfo=datetime.timezone.utc), 'commenter': 'pranavsaxena17', 'type': 'User'}, {'comment_id': 688691492, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2021, 8, 13, 18, 2, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 690552252, 'comment_body': '2021', 'comment_created': datetime.datetime(2021, 8, 17, 16, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 690552473, 'comment_body': '2021', 'comment_created': datetime.datetime(2021, 8, 17, 16, 53, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 693023408, 'comment_body': 'Unresolving the conversation as I cant see why the default was removed :)', 'comment_created': datetime.datetime(2021, 8, 20, 15, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'psiinon', 'type': 'User'}]","[{'commit_sha': '53d7cfd82d0add70db41ff1bb0d230a3dcfc31a2', 'committer_username': 'pranavsaxena17', 'committer_name': None, 'committer_email': None, 'commit_date': datetime.datetime(2019, 11, 28, 6, 39, 49, tzinfo=datetime.timezone.utc)}]",,58285865,,User,,11,,2,2

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
35210580,zap-extensions,zaproxy/zap-extensions,Java,680,823,55,239,12847,42,1,42,"[{'id': 717186151, 'number': 3090, 'closed': datetime.datetime(2021, 8, 23, 7, 40, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 21, 17, 49, 49, tzinfo=datetime.timezone.utc), 'time_taken': 136213.0, 'time_delta': '1 day, 13:50:13', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 703277470, 'number': 3050, 'closed': datetime.datetime(2021, 8, 20, 17, 29, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 4, 10, 45, 6, tzinfo=datetime.timezone.utc), 'time_taken': 1406661.0, 'time_delta': '16 days, 6:44:21', 'additions': 2512, 'deletions': 51, 'state': 'closed'}, {'id': 681298348, 'number': 3020, 'closed': datetime.datetime(2021, 7, 8, 16, 37, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 23, 24, 42, tzinfo=datetime.timezone.utc), 'time_taken': 666747.0, 'time_delta': '7 days, 17:12:27', 'additions': 1425, 'deletions': 30, 'state': 'closed'}, {'id': 674916584, 'number': 2998, 'closed': datetime.datetime(2021, 6, 30, 10, 21, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 21, 50, 57, tzinfo=datetime.timezone.utc), 'time_taken': 736250.0, 'time_delta': '8 days, 12:30:50', 'additions': 633, 'deletions': 2, 'state': 'closed'}, {'id': 667493243, 'number': 2979, 'closed': datetime.datetime(2021, 6, 11, 7, 44, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 22, 43, 37, tzinfo=datetime.timezone.utc), 'time_taken': 32481.0, 'time_delta': '9:01:21', 'additions': 73, 'deletions': 2, 'state': 'closed'}, {'id': 666928955, 'number': 2978, 'closed': datetime.datetime(2021, 6, 11, 7, 42, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 14, 7, 42, tzinfo=datetime.timezone.utc), 'time_taken': 63312.0, 'time_delta': '17:35:12', 'additions': 108, 'deletions': 30, 'state': 'closed'}, {'id': 666128408, 'number': 2977, 'closed': datetime.datetime(2021, 6, 10, 8, 40, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 17, 48, 50, tzinfo=datetime.timezone.utc), 'time_taken': 53490.0, 'time_delta': '14:51:30', 'additions': 108, 'deletions': 1, 'state': 'closed'}, {'id': 650479432, 'number': 2948, 'closed': datetime.datetime(2021, 6, 11, 11, 3, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 21, 22, 27, 51, tzinfo=datetime.timezone.utc), 'time_taken': 1773363.0, 'time_delta': '20 days, 12:36:03', 'additions': 275, 'deletions': 15, 'state': 'closed'}, {'id': 647921217, 'number': 2942, 'closed': datetime.datetime(2021, 9, 1, 16, 5, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 19, 18, 9, 48, tzinfo=datetime.timezone.utc), 'time_taken': 9064521.0, 'time_delta': '104 days, 21:55:21', 'additions': 397, 'deletions': 2, 'state': 'closed'}, {'id': 633175197, 'number': 2916, 'closed': datetime.datetime(2021, 5, 11, 8, 36, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 7, 18, 3, 24, tzinfo=datetime.timezone.utc), 'time_taken': 311602.0, 'time_delta': '3 days, 14:33:22', 'additions': 56, 'deletions': 4, 'state': 'closed'}, {'id': 627308036, 'number': 2892, 'closed': datetime.datetime(2021, 5, 3, 20, 27, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 30, 11, 55, 24, tzinfo=datetime.timezone.utc), 'time_taken': 289949.0, 'time_delta': '3 days, 8:32:29', 'additions': 245, 'deletions': 58, 'state': 'closed'}, {'id': 626160928, 'number': 2888, 'closed': datetime.datetime(2021, 6, 3, 9, 59, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 29, 14, 35, 3, tzinfo=datetime.timezone.utc), 'time_taken': 3007483.0, 'time_delta': '34 days, 19:24:43', 'additions': 411, 'deletions': 160, 'state': 'closed'}, {'id': 624196091, 'number': 2883, 'closed': datetime.datetime(2021, 5, 7, 19, 34, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 10, 43, 54, tzinfo=datetime.timezone.utc), 'time_taken': 895822.0, 'time_delta': '10 days, 8:50:22', 'additions': 186, 'deletions': 12, 'state': 'closed'}, {'id': 619427139, 'number': 2864, 'closed': None, 'created': datetime.datetime(2021, 4, 20, 15, 28, 9, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 216, 'deletions': 112, 'state': 'open'}, {'id': 598002849, 'number': 2777, 'closed': datetime.datetime(2021, 3, 22, 14, 1, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 22, 13, 17, 19, tzinfo=datetime.timezone.utc), 'time_taken': 2644.0, 'time_delta': '0:44:04', 'additions': 8, 'deletions': 6, 'state': 'closed'}, {'id': 597300855, 'number': 2774, 'closed': datetime.datetime(2021, 3, 25, 18, 33, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 15, 18, 37, tzinfo=datetime.timezone.utc), 'time_taken': 443668.0, 'time_delta': '5 days, 3:14:28', 'additions': 201, 'deletions': 293, 'state': 'closed'}, {'id': 597292317, 'number': 2773, 'closed': datetime.datetime(2021, 3, 20, 14, 32, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 20, 14, 31, 38, tzinfo=datetime.timezone.utc), 'time_taken': 25.0, 'time_delta': '0:00:25', 'additions': 1310, 'deletions': 328, 'state': 'closed'}, {'id': 596024589, 'number': 2768, 'closed': datetime.datetime(2021, 6, 15, 7, 46, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 18, 23, 15, 11, tzinfo=datetime.timezone.utc), 'time_taken': 7633864.0, 'time_delta': '88 days, 8:31:04', 'additions': 683, 'deletions': 521, 'state': 'closed'}, {'id': 583384732, 'number': 2737, 'closed': datetime.datetime(2021, 3, 18, 16, 46, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 22, 25, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1362062.0, 'time_delta': '15 days, 18:21:02', 'additions': 3, 'deletions': 1, 'state': 'closed'}, {'id': 583362416, 'number': 2736, 'closed': datetime.datetime(2021, 3, 2, 22, 23, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 2, 21, 42, 16, tzinfo=datetime.timezone.utc), 'time_taken': 2447.0, 'time_delta': '0:40:47', 'additions': 249, 'deletions': 2, 'state': 'closed'}, {'id': 569925038, 'number': 2713, 'closed': datetime.datetime(2021, 4, 16, 23, 1, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 9, 1, 2, 55, tzinfo=datetime.timezone.utc), 'time_taken': 5781490.0, 'time_delta': '66 days, 21:58:10', 'additions': 238, 'deletions': 36, 'state': 'closed'}]"
