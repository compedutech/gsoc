pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1347812786,DIRECTOR: Improve popupxmenulib,"Base work #4214 , Some more work done:
1. More functions in macpopup class for better abstraction.
2. Finding last selected, active item in macmenu.
3. Implement mPopText and mPopNum in xlib object.",True,5005,https://api.github.com/repos/scummvm/scummvm/pulls/5005,https://github.com/scummvm/scummvm/pull/5005,closed,340,64,9,6,4,28,1,0,[{'name': 'GSoC'}],2023-05-11 22:05:21+00:00,2023-05-28 11:50:18+00:00,1431897.0,"16 days, 13:44:57","[{'comment_id': 1191740550, 'comment_body': 'This must conform to our naming conventions: `_menu`', 'comment_created': datetime.datetime(2023, 5, 11, 22, 13, 5, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191741040, 'comment_body': 'I would advise against keeping this pointer and rather have `menuId` persisted. Then query WM on the menu.', 'comment_created': datetime.datetime(2023, 5, 11, 22, 14, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191741219, 'comment_body': 'And why is this reverted?', 'comment_created': datetime.datetime(2023, 5, 11, 22, 14, 32, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191742749, 'comment_body': 'Since you forward-declare the `MacPopUp` class below, I recommend not including this file here to reduce header dependency.', 'comment_created': datetime.datetime(2023, 5, 11, 22, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191743465, 'comment_body': 'No, please overload `draw()` method instead of this ugly `drawCustom()`\r\n\r\nAlso, this line does not conform to our code formatting conventions', 'comment_created': datetime.datetime(2023, 5, 11, 22, 18, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191744504, 'comment_body': 'What is the purpose of this `forceClick` flag?', 'comment_created': datetime.datetime(2023, 5, 11, 22, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191745435, 'comment_body': 'I do not understand this `forceClick` thing. Looks like a hack to me.', 'comment_created': datetime.datetime(2023, 5, 11, 22, 22, 56, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191746061, 'comment_body': 'I do not see where you initialize these variables on instantiation.', 'comment_created': datetime.datetime(2023, 5, 11, 22, 24, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191746771, 'comment_body': 'please add `// end of namespace Graphics`', 'comment_created': datetime.datetime(2023, 5, 11, 22, 25, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191750145, 'comment_body': ""Please, make sure you're following our code formatting conventions."", 'comment_created': datetime.datetime(2023, 5, 11, 22, 32, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191750242, 'comment_body': 'formatting', 'comment_created': datetime.datetime(2023, 5, 11, 22, 32, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1191750539, 'comment_body': 'Please sort the files alphabetically here', 'comment_created': datetime.datetime(2023, 5, 11, 22, 33, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1192084827, 'comment_body': ""bypassing the bbox.contains method, think looks like hack but couldn't find good workround"", 'comment_created': datetime.datetime(2023, 5, 12, 8, 40, 22, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1193199814, 'comment_body': 'For safety, I would instead write here `menuId.asInt()`', 'comment_created': datetime.datetime(2023, 5, 14, 19, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200007, 'comment_body': ""Same thing, instead of reading directly from the union, I'd write: `int itemNum = g_lingo->pop().asInt()`, etc"", 'comment_created': datetime.datetime(2023, 5, 14, 19, 48, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200205, 'comment_body': 'Why are these commented out?', 'comment_created': datetime.datetime(2023, 5, 14, 19, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200268, 'comment_body': 'You probably do not need this second `public:` declaration', 'comment_created': datetime.datetime(2023, 5, 14, 19, 51, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200326, 'comment_body': 'I do not see it used in this header anywhere. Why is this needed here?', 'comment_created': datetime.datetime(2023, 5, 14, 19, 51, 48, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200507, 'comment_body': 'Why are you eating `\\r` here? could you please explain?', 'comment_created': datetime.datetime(2023, 5, 14, 19, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200625, 'comment_body': 'What is the reasoning for this `bypass` flag? U am asking because later in the code you have again `contains()`, so if the coordinates are not within the menu, that will not detect the click', 'comment_created': datetime.datetime(2023, 5, 14, 19, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193200940, 'comment_body': 'What are these magic numbers?', 'comment_created': datetime.datetime(2023, 5, 14, 19, 56, 42, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193201031, 'comment_body': 'Do you really need this include? I do not see new code using MacWindow references', 'comment_created': datetime.datetime(2023, 5, 14, 19, 57, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193201581, 'comment_body': 'I do  not see any of these classes referenced.', 'comment_created': datetime.datetime(2023, 5, 14, 20, 1, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193201650, 'comment_body': 'I do not see WM referenced besides the pointer. So, just forward declare it here.', 'comment_created': datetime.datetime(2023, 5, 14, 20, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1193681055, 'comment_body': 'umm yea, in this file there is class MacPopUp that is child of `BaseMacWindow`', 'comment_created': datetime.datetime(2023, 5, 15, 11, 5, 54, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1208471550, 'comment_body': '`menuList.u.s->c_str()` is a direct access to the union. If, for whatever reason, you do not get a string in there, you will have bad pointer and a SIGSEGV crash. Please use `asString()` method and in general, use `as*()` methods because those perform the needed conversions.\r\n\r\nFor readability, as it was mentioned several reviews back, use the explicit data types, e.g. instead of the current code, write:\r\n\r\n```C++\r\nint menuId = g_lingo->pop().asInt();\r\nCommon::String menuList = g_lingo->pop().asString();\r\n```\r\n\r\nAnd then use these directly.', 'comment_created': datetime.datetime(2023, 5, 28, 9, 44, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1208474965, 'comment_body': 'This is an incorrect comparison. The correct one is `isSmart.asInt() != 0`, but please test and make sure with the original. But once again, it is more readable to write:\r\n\r\n```C++\r\nbool isSmart = g_lingo->pop().asInt() != 0;`\r\n```', 'comment_created': datetime.datetime(2023, 5, 28, 9, 48, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1208475598, 'comment_body': 'Please, please, please, follow our code formatting conventions. It is not productive to waste time on this topic.', 'comment_created': datetime.datetime(2023, 5, 28, 9, 49, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}]","[{'commit_sha': '6b7e85f59b8df6bf7dc925e6254eb76eb1ff5f72', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7476a100799759ca6464e054bcbe82b856785742', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0f280236e901e5f783cc1761a98101c159e73a1d', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bb6749e266ffbb4b9a47df9fe753a0bf9d71fb55', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '562edfec4c8038a2f03944a2126f9b74e734b49d', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '751f730d282e020cb5caf5effb9adef7aebaa74b', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1369110734,DIRECTOR: Add multiple resources in exe using ProjectorArchive,"1. Moved ProjectorArchive declaration to archive.h
2. getRawExeName to get executable file name without overriding from --start-movie parameter
3. Used multiarchive to detect and add resource files to searchman",True,5056,https://api.github.com/repos/scummvm/scummvm/pulls/5056,https://github.com/scummvm/scummvm/pull/5056,closed,56,34,4,3,1,0,1,0,[{'name': 'GSoC'}],2023-05-29 13:05:51+00:00,2023-05-29 17:36:15+00:00,16224.0,4:30:24,[],"[{'commit_sha': '1e9ba084b45fadfd8dbf767b27b31de702b05404', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b12baf9b4a6da22888e363b45263d0e523898efc', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6fa0a9717f4e8d3abfebda1ab44a1d471c8666b', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1369490563,"DIRECTOR: Set `rect` property of window, allow dynamic resize/move.",Self explanatory.,True,5059,https://api.github.com/repos/scummvm/scummvm/pulls/5059,https://github.com/scummvm/scummvm/pull/5059,closed,91,23,9,4,1,0,1,0,[{'name': 'GSoC'}],2023-05-29 19:27:57+00:00,2023-05-31 11:29:34+00:00,144097.0,"1 day, 16:01:37",[],"[{'commit_sha': 'd1fb23a91f89fa08b02c3efa2f1009c2802042ed', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9d5af8aac59d01a6ab017ca91922b3d2e6ad6e4f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e895600220dbc30c04f47ba0dd33cb3b1fb592f8', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f40188f19c01f935637b3a299e77f50a1f91e289', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1377094956,DIRECTOR: Fix sprite position setting,"Self explanatory, do not merge, WIP.",True,5074,https://api.github.com/repos/scummvm/scummvm/pulls/5074,https://github.com/scummvm/scummvm/pull/5074,closed,39,17,3,2,1,3,1,0,[{'name': 'GSoC'}],2023-06-03 16:12:17+00:00,2023-06-10 14:18:34+00:00,597977.0,"6 days, 22:06:17","[{'comment_id': 1224850469, 'comment_body': 'This is incorrect. You already setting this flag in the individual places where we change properties.\r\n\r\nWith this code, you blindly assign autopuppet to any non-puppet sprite.', 'comment_created': datetime.datetime(2023, 6, 9, 22, 32, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1224853532, 'comment_body': 'Please explain why are you doing this? I thought, that this reset is happening in Channel::setClean()\r\n\r\n```C++\r\n\t\tif (_sprite->_puppet || (!nextSprite->isQDShape() && partial)) {\r\n\t\t\t// Updating scripts, etc. does not require a full re-render\r\n\t\t\t_sprite->_scriptId = nextSprite->_scriptId;\r\n\t\t} else {\r\n\t\t\tpreviousCastId = _sprite->_castId;\r\n\t\t\treplaceSprite(nextSprite);\r\n\t\t}\r\n```\r\n\r\ne.g. we are not touching puppetized sprites', 'comment_created': datetime.datetime(2023, 6, 9, 22, 35, 2, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1224855493, 'comment_body': 'What is the prurpose of it? Looks like a dirty hack or no reason. You should not check the positions like this.', 'comment_created': datetime.datetime(2023, 6, 9, 22, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}]","[{'commit_sha': '6e78f583b4865688cc89ba3f9feeffafab8ee341', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdc7ab9390068e2899cb153f171972bcea1e976e', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1387696133,DIRECTOR: On demand frame loading!,A big change! Changes frames loading from precomputation to on-demand loading.,False,5089,https://api.github.com/repos/scummvm/scummvm/pulls/5089,https://github.com/scummvm/scummvm/pull/5089,closed,389,225,12,16,1,37,1,0,[{'name': 'GSoC'}],2023-06-11 21:47:17+00:00,2023-06-25 22:07:23+00:00,1210806.0,"14 days, 0:20:06","[{'comment_id': 1225943261, 'comment_body': 'You now can implement it now with your `previewOneFrame()`.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 21, 10, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225943734, 'comment_body': 'name it `getFramesNum()`', 'comment_created': datetime.datetime(2023, 6, 11, 22, 22, 41, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225944170, 'comment_body': 'write `warning(""STUB: Fix logic here for next sprite"")`. It should be prominent.\r\n\r\nAnd in general, this b_immedateSprite() should be reviewed. I am not sure it is implemented correctly.\r\n\r\nIf it matched with `the immediate of sprite`, then it could go down to setting the `immediate` flag. More investigation is required. This Lingo is used in The Apartment in two movies.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225945763, 'comment_body': 'Maybe it is just setting the `_puppet` flag? Need more investigation, similar to `immdiateSpite`. These were implemented pretty early and could be all kind of obsolete.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225945853, 'comment_body': 'Code formatting', 'comment_created': datetime.datetime(2023, 6, 11, 22, 39, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225946121, 'comment_body': 'Code formatting', 'comment_created': datetime.datetime(2023, 6, 11, 22, 41, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225946480, 'comment_body': 'Better name is `getFrameData(int frameNum)`', 'comment_created': datetime.datetime(2023, 6, 11, 22, 43, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225947290, 'comment_body': 'Need to check if it is truly `- 1`. Because the frames originally start numbered from 1.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 48, 24, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225947544, 'comment_body': 'You need to call this thing after every frame loading now—just the inner loop of this method.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 50, 4, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225947585, 'comment_body': 'Code formatting.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 50, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1225947670, 'comment_body': 'just similar to the lines above, drop the curly brackets, e.g.\r\n\r\n```C++\r\nif (_framesStream)\r\n   delete _framesStream;\r\n```\r\n\r\nDo the same below.', 'comment_created': datetime.datetime(2023, 6, 11, 22, 51, 43, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229261992, 'comment_body': 'The prefix for the commit log message should be ""COMMON:"", not ""DIRECTOR:"". See the affected files\r\n', 'comment_created': datetime.datetime(2023, 6, 14, 8, 59, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229297225, 'comment_body': 'Why and how prevFrame could be NULL here? I mean, you check that `curFrame - 1 > 0`. Same question regarding `nextFrame` above', 'comment_created': datetime.datetime(2023, 6, 14, 9, 23, 28, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229300302, 'comment_body': 'Please, tone down the excitement a bit, remove the exclamation marks in the comments :)', 'comment_created': datetime.datetime(2023, 6, 14, 9, 25, 47, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229307859, 'comment_body': 'This is wrong. First, you could potentially introduce out-of-bounds access if some code refers to this variable earlier. E.g. we never had it -1. It was initialized to 0.\r\n\r\nBut most importantly, which makes it outright wrong, is that you declared _curFrameNumber as unsigned.', 'comment_created': datetime.datetime(2023, 6, 14, 9, 31, 54, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229313709, 'comment_body': 'Did you do the experiment in the original, as I described couple of days ago? We need to rule it out now instead of postponing.\r\n\r\nI see in this code that you just picked up the first approach: replaying the whole score, while we need to learn how the original truly worked.\r\n\r\nThis whole PR should NOT bring any single regression in functionality.\r\n\r\nMoreover, it seems to me incorrect and VOIDING all of this effort. Look, you are replaying all of the frames from the very beginning always, ignoring the puppet flag and if, say, the parameter was touched 3 frames ago, you will kill whatever changes Lingo did.', 'comment_created': datetime.datetime(2023, 6, 14, 9, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229319208, 'comment_body': '`saveOffset` flag is redundant. You could just compare the _currentFrameNum with the array size here.', 'comment_created': datetime.datetime(2023, 6, 14, 9, 40, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229327619, 'comment_body': 'I do not understand this (besides rebuildChannelData() having incorrect implementation). You are reading frames here. Then, you read it once again at line 515 with `loadFrame(_curFrameNumber);`. Why do you need to read it (a) twice (b) so early?', 'comment_created': datetime.datetime(2023, 6, 14, 9, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229332936, 'comment_body': 'With presence of `_currentFrame`, I would just drop local variable `frame`, same for the method below.', 'comment_created': datetime.datetime(2023, 6, 14, 9, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229333501, 'comment_body': 'Remove the exclamation mark', 'comment_created': datetime.datetime(2023, 6, 14, 9, 51, 45, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229333775, 'comment_body': '.size() is unsigned, write `uint dataSize`', 'comment_created': datetime.datetime(2023, 6, 14, 9, 52, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229335694, 'comment_body': 'You mentioned that this value could be incorrect in the header. Hence, you do not need to store it.', 'comment_created': datetime.datetime(2023, 6, 14, 9, 53, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229341656, 'comment_body': 'Are you sure that it is 0? Because there is a header present which you just read (_numFrames, etc).', 'comment_created': datetime.datetime(2023, 6, 14, 9, 58, 22, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229343958, 'comment_body': 'I thought you needed to precompute it always because the header could be incorrect.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 0, 17, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229345920, 'comment_body': 'I do not see a value in having this log message. You will get the total number of frames logged at line 1423.\r\n\r\nWith this, you could write this loop as:\r\n\r\n```C++\r\nfor (frameCount = 1; loadFrame(frameCount); frameCount++) { }\r\n```\r\ne.g. with an empty body and more compact.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 1, 40, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229351539, 'comment_body': 'Yes, we need to figure it out now, not later.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 4, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229353298, 'comment_body': 'If you see any potential value in printing these offsets, it is fine, but definitely put it to debug level 7+. E.g. it will produce tons of noise.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 6, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229358146, 'comment_body': ""A lot of code duplication. Look, there is no difference in frame processing besides seeking.\r\n\r\nSo, write something like\r\n\r\n```C++\r\nif (frameNum < (int)_frameOffsets.size() - 1) {\r\n  _framesStream->seek(_frameOffsets[frameNum]);\r\n}\r\n\r\nwhile (_frameOffsets.size() <= (uint)frameNum) {\r\n  ....\r\n ```\r\n\r\nbecause your first seeking will work exactly the same as you're coming from a previous frame.\r\n\r\nHowever, as we discussed, you need to investigate what is happening with partial channel updates in this case. I suspect, that nothing, we just seek to this frame and read it. But testing is REQUIRED, we cannot do this blindly."", 'comment_created': datetime.datetime(2023, 6, 14, 10, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229360029, 'comment_body': 'Instead of wrapping this whole logic into this gigantic `if()`, just inver the condition, e.g.\r\n\r\n```C++\r\nif (_framesStream->pos() >= _framesStreamSize || !_framesStream->eos())\r\n  return false;\r\n  \r\nuint16 frameSize = _framesStream->readUint16();\r\nassert(frameSize < _framesStreamSize);\r\n...\r\n```', 'comment_created': datetime.datetime(2023, 6, 14, 10, 12, 33, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229366103, 'comment_body': 'This will not work if we seek back, right? This is another thing to test with the original, e.g. imagine the following movie:\r\n\r\n```\r\nframe 1: tempo 30\r\n...\r\nframe 10: tempo 40\r\nframe 15: go to frame 5\r\n```\r\nThe question is, will it keep tempo 40 after jumping or reset to 30? It is easy to test, just print out Tempo and frame number at every frame and see what sticks.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 17, 9, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229370482, 'comment_body': 'You now have more state, like `_currentTempo` etc. This also must be persisted.', 'comment_created': datetime.datetime(2023, 6, 14, 10, 19, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1229373637, 'comment_body': 'I wonder, does it mean that we will not dump whole movie scripts, only the played frames there? Or, perhaps, with the `_numFrames` precalculation, we could still dump all of them?', 'comment_created': datetime.datetime(2023, 6, 14, 10, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1230060453, 'comment_body': 'Indeed, this was redundant, fixing it', 'comment_created': datetime.datetime(2023, 6, 14, 19, 13, 29, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1230065655, 'comment_body': ""The logic here is, that _loadFrame()_ is supposed to load any frame without modifications to channelData, (e we are not modifiying/recalculating channel data for each frames, so when movie is in normal execution, it will go from frame X to frame X+1, in this case rebuilding channel data is not needed and thus use normal loadFrame, however the moment there is jump, now according to these delta updates there could be big issues, like for example our channel data has been updated with regards to frame 10, and there is jump to frame 5, then this backward jump with unchanged _channelData_ will be a cause for misbehaviour (I verified this, it happened).\r\n\r\nThe fix to this, as in here, is that in normal linear frames loading, we are not rebuilding channelData, however if there is any kind of jump (which is not to itself), then this will recreate all of the channelData and thus prepare for next frame loading.\r\n\r\nIt can be bit confusing that we are _reading it again_, however in essence we are not wanting to read this frame, we are just reading from frames 1....n and creating proper channelData, so once we read the requested frame using loadFrame, there isn't any redundant data that has been carried forward by jump."", 'comment_created': datetime.datetime(2023, 6, 14, 19, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1230072890, 'comment_body': 'umm that is just any dummy value to be inserted in frameOffsets, to make indexing simpler. Will it matter if we insert 0 or anything else?', 'comment_created': datetime.datetime(2023, 6, 14, 19, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1230073360, 'comment_body': 'Comment unchanged, my bad.', 'comment_created': datetime.datetime(2023, 6, 14, 19, 27, 35, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1232589533, 'comment_body': 'This is now incorrect. Please, store it in the local variable and print below, on line 1392.', 'comment_created': datetime.datetime(2023, 6, 16, 18, 20, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}]","[{'commit_sha': '4050c033040ec361222f82444e84cceaa048c099', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '59652043a07826743b3a9b7a1633aec747545e96', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cd2d82e99a2008cac2b459538386effb62d8c22', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '38015b146897e58d1f9b9304a296f02e1cbf05e1', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0585fe1540088bb9ce2611724d78b480bf2ace6a', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c3558ea720fc545bd63ceb6c54b7945ef9346cc', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd71e22052c8da48c54c3b9081f53e6ef22c31d96', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9c97582b1ba25d7c9a83df2f969ed3ad0e6533d', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc1c46f23919d3eb8fb907505aaba6ff8735e7ed', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cee70c69f2d44c923df2c09699b915fe7ce9d97', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '232cd9705629ca9a45c58bb3c03de8a3c628b748', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ca8a7e7b40e03c78e1544c8d75cfff7531f921f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b17ad0e69d7d5d6b68cef94e21b22d0deeac0129', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '607a38b97c30be1a4005ee2f8a325ed2b8d2c9da', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65e4d77fdcdfb9d45d31a8e1eee6bd5bab74842f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b1ec9f3bfb95d74dc36c7859e72d51753a9cc20', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1396037649,GRAPHICS: MACGUI: Fix alignment issues for multiline text,Self-explanatory.,True,5100,https://api.github.com/repos/scummvm/scummvm/pulls/5100,https://github.com/scummvm/scummvm/pull/5100,closed,5,11,4,5,1,0,1,0,[{'name': 'GSoC'}],2023-06-16 16:50:21+00:00,2023-06-21 17:18:39+00:00,433698.0,"5 days, 0:28:18",[],"[{'commit_sha': '68500df9741e51948c960f86c375d5dcc5a866ab', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '31b4596649d454fb9c0f7ee3bac5438bd47a7255', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6823b35811330e96fd95bf7141dfb92bf2ba59f1', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '436c9bea448fb64ce645f3d5cf55c47f27b94f3f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '60ae3036d04d3bc98e947f1076d70acc3dc21afd', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1398935682,DIRECTOR: Fix comparison between symbol and string,Fixes a lot of bugs in total distortion!,True,5107,https://api.github.com/repos/scummvm/scummvm/pulls/5107,https://github.com/scummvm/scummvm/pull/5107,closed,2,0,1,1,1,0,1,0,[{'name': 'GSoC'}],2023-06-19 22:58:48+00:00,2023-06-20 07:02:27+00:00,29019.0,8:03:39,[],"[{'commit_sha': '7240e243f4834bc884c65bcd1e6a532d28d1e060', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1405857438,DIRECTOR & VIDEO: Fully working undome!,"UnDo me of meet-mediaband (win), is working with all playback controls, rate, etc! Additionally some bugs are also fixed.",True,5118,https://api.github.com/repos/scummvm/scummvm/pulls/5118,https://github.com/scummvm/scummvm/pull/5118,closed,61,7,3,2,1,2,1,0,[{'name': 'GSoC'}],2023-06-24 00:37:59+00:00,2023-06-24 21:23:46+00:00,74747.0,20:45:47,"[{'comment_id': 1240642678, 'comment_body': 'Please revert this unnecessary indentation change', 'comment_created': datetime.datetime(2023, 6, 24, 8, 42, 20, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1240680642, 'comment_body': 'done.', 'comment_created': datetime.datetime(2023, 6, 24, 10, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}]","[{'commit_sha': 'c1805b621a03b8fbf30f367216ed34e499cf7b2d', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c66adb4ec15a3911a6a7cb26e664d83490ff6bd5', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1407787076,Font scaling add,Improves bdfscaler,True,5125,https://api.github.com/repos/scummvm/scummvm/pulls/5125,https://github.com/scummvm/scummvm/pull/5125,closed,10,14,2,6,0,0,1,0,[{'name': 'GSoC'}],2023-06-26 11:49:28+00:00,2023-06-26 13:01:16+00:00,4308.0,1:11:48,[],"[{'commit_sha': '0c6d3266eeedb9c2488a0f2ede7f32d6303d80ef', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ef4340a3850e8f6481594177e88846349fe7716', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98cdb119be31c17f3aab5db0ff5d2ccb61794170', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5f4dcb97e1cd95555cdb0348d4f861c2769de66c', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cec842df1cca6b934f8269b12092e8db728f201', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9972ea92d23032af1d2c212f6fd0de24582bf03d', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1409502777,GRAPHICS: Add scaling for winfont,"Allow scaling of window font, ie FON, FNT. Internally this uses same implementation as BDFScaling and MacFontScaling. Uses function scaleSingleGlyph to scale each glyph.

Fonts in `mcluhan-win` used some of these fonts where the sizes
were different than parsed.",True,5126,https://api.github.com/repos/scummvm/scummvm/pulls/5126,https://github.com/scummvm/scummvm/pull/5126,closed,77,1,3,1,0,0,1,0,[{'name': 'GSoC'}],2023-06-27 09:58:06+00:00,2023-06-27 10:00:29+00:00,143.0,0:02:23,[],"[{'commit_sha': '0285f3ddd5d190a5275953068874179495309e1e', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1432746521,"DIRECTOR: Fix regression, string and symbol comparison working again.","This was a regression, where the comparison between string and symbol
was broken in commit https://github.com/scummvm/scummvm/commit/343e3af14fd135244d2d9b4abed9e54275c1469d, This
was originally implemented in https://github.com/scummvm/scummvm/commit/236dd400381874f80eb94029741c5c6d984cc961.",True,5158,https://api.github.com/repos/scummvm/scummvm/pulls/5158,https://github.com/scummvm/scummvm/pull/5158,closed,27,1,2,1,1,0,1,0,[{'name': 'GSoC'}],2023-07-13 09:27:16+00:00,2023-07-14 12:51:20+00:00,98644.0,"1 day, 3:24:04",[],"[{'commit_sha': '4e9e28ac60d36b163620eed3a19f062ef61b35fb', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1421473548,DIRECTOR: Fix WinFont scaling memory leak when scaling fonts.,"Memory leak happened because the scaled generated fonts were not being cached or saved anywhere, thus they were not being destructed and freed. Added logic to cache generated font in _winFontRegistry itself.

Leaks observed in `trektech-win` in first few frames itself.",True,5136,https://api.github.com/repos/scummvm/scummvm/pulls/5136,https://github.com/scummvm/scummvm/pull/5136,closed,20,3,3,1,1,0,1,0,[{'name': 'GSoC'}],2023-07-05 17:14:37+00:00,2023-07-08 19:13:29+00:00,266332.0,"3 days, 1:58:52",[],"[{'commit_sha': '64d935d6b8eb139b051aaeff362e1890ded21d4f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1427268129,DIRECTOR: Allow using of 'me' in setting `the` expressions,"Statements like `set the perFrameHook to me` where `me` was used to refer own object and setting `the` property of it were not allowed. This patch fixes this by returning current object from `me`.

'totaldistortion-win' uses this feature to set `the perFrameHook` to current factory mAtFrame method.

Additionally game",True,5152,https://api.github.com/repos/scummvm/scummvm/pulls/5152,https://github.com/scummvm/scummvm/pull/5152,closed,8,1,1,1,1,0,1,0,[{'name': 'GSoC'}],2023-07-10 10:47:37+00:00,2023-07-10 13:38:36+00:00,10259.0,2:50:59,[],"[{'commit_sha': '2422527db82af5187f039b71697fc02b2b4e4eef', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1429532679,DIRECTOR: Workaround m_perform to send allowRetVal to handler,"There are some builtins and methods that require this boolean allowRetVal to decide if they need to return anything, or pass them on, one such example is `m_perform` which can be called with or without a return.

Fixes problem where multiple `m_perform` inside `mAtFrame` were giving error of returning too many values.",True,5153,https://api.github.com/repos/scummvm/scummvm/pulls/5153,https://github.com/scummvm/scummvm/pull/5153,closed,38,1,3,2,1,3,1,0,[{'name': 'GSoC'}],2023-07-11 14:00:56+00:00,2023-07-12 20:49:36+00:00,110920.0,"1 day, 6:48:40","[{'comment_id': 1261212791, 'comment_body': 'Please, change it to ""WORKAROUND:""', 'comment_created': datetime.datetime(2023, 7, 12, 13, 50, 14, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1261213174, 'comment_body': 'I do not like this change. Can we avoid it?', 'comment_created': datetime.datetime(2023, 7, 12, 13, 50, 29, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1261496720, 'comment_body': 'Well, I don\'t think so because what that check need to be avoided to prevent throwing of errors in case where m_perform is supposed to return value, ie something like `set myvar = me(mPerform, ""ABC"")`,\r\n\r\nThrough, one solution could be to push a dummy value if allowRetVal is true (this change is to be made inside m_perform itself), however as a consequence of this an extra <Void> variable will be left in stack after finishing execution.', 'comment_created': datetime.datetime(2023, 7, 12, 17, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}]","[{'commit_sha': 'ff95a37ee53ca6c4196098d969e882159a017344', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fbd6713d409b66105014ec7f3ff2add312d303e', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1431320797,DIRECTOR: Fix immediate execution of lingo scripts after frame jumping or opening movie,"1. totaldistortion dream games, `Ok` button sticking is fixed.
2. `rect of window` takes window rect than default [0, 0, 1, 1]

Fix: https://trello.com/c/J3frDAgc/616-d4-openwindow-should-load-the-movie-right-away",True,5156,https://api.github.com/repos/scummvm/scummvm/pulls/5156,https://github.com/scummvm/scummvm/pull/5156,closed,7,2,1,2,1,0,1,0,[{'name': 'GSoC'}],2023-07-12 13:43:53+00:00,2023-07-12 20:49:17+00:00,25524.0,7:05:24,[],"[{'commit_sha': 'c56a2039b7a59eeed82f1a041508747b6143ea21', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66dc27fab2e9ada09964d61fe751af78e0d00447', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1436367696,"DIRECTOR: Improve frame loading, add support to lingo override score, refactor frame channels, autopuppet improve","1. Copy channel sprites to frame before loading (ie lingo override score changes)
2. Refactor main channels to struct
3. Refactor cache property logic for tempo and palette
4. Improve auto-puppets, support individual property

Total distortion's bed dream game fully working now.",True,5163,https://api.github.com/repos/scummvm/scummvm/pulls/5163,https://github.com/scummvm/scummvm/pull/5163,closed,419,301,10,9,1,12,1,0,[{'name': 'GSoC'}],2023-07-16 20:05:54+00:00,2023-07-19 12:58:00+00:00,233526.0,"2 days, 16:52:06","[{'comment_id': 1264754283, 'comment_body': 'I do not see it used', 'comment_created': datetime.datetime(2023, 7, 16, 22, 8, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264754308, 'comment_body': 'This is also unused', 'comment_created': datetime.datetime(2023, 7, 16, 22, 8, 15, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264754443, 'comment_body': 'You need to add setting this flag to `set ink of sprite`, do it for other flags', 'comment_created': datetime.datetime(2023, 7, 16, 22, 9, 12, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264754731, 'comment_body': 'I see you use it only with `uint32`. Maybe remove these templates and just use plain functions?', 'comment_created': datetime.datetime(2023, 7, 16, 22, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264754832, 'comment_body': 'If you remove those templates, you do not need this include', 'comment_created': datetime.datetime(2023, 7, 16, 22, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264755040, 'comment_body': 'For easiness and per recommendation in our code naming conventions, drop `_` in this struct members.\r\n\r\nIn short, replace `_mainChannels._` -> `_mainChannels.`, so `_mainChannels._tempo` becomes `_mainChannels.tempo`', 'comment_created': datetime.datetime(2023, 7, 16, 22, 14, 58, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264755123, 'comment_body': 'do you need this copy constructor? I believe the default one will work well too.', 'comment_created': datetime.datetime(2023, 7, 16, 22, 15, 35, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264755194, 'comment_body': 'Code formatting', 'comment_created': datetime.datetime(2023, 7, 16, 22, 16, 6, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264755360, 'comment_body': ""In my opinion, it is way too verbose. I'd name it `kAPCast` or `kAutoPuppetCast`"", 'comment_created': datetime.datetime(2023, 7, 16, 22, 17, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264755712, 'comment_body': ""I'd add a special enum member here with value zero. like `kAPNone`"", 'comment_created': datetime.datetime(2023, 7, 16, 22, 21, 7, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1264755812, 'comment_body': 'Where do you use this? The current code has checks against `_autoPuppet`  in frame.cpp', 'comment_created': datetime.datetime(2023, 7, 16, 22, 22, 1, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1265259917, 'comment_body': 'Well, they need to be rewritten, because now there is not a single _autoPuppet that can be used to check if sprite is autoPuppeted, each property of sprite is autoPuppet so depending upon if that specific property is auto-puppeted (for example this `Sprite::getAutoPuppet` return true, then we skip that change).\r\n\r\nI will do one thing, make the required changes in frame loading as well to implement individual autoPuppets.', 'comment_created': datetime.datetime(2023, 7, 17, 12, 12, 28, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}]","[{'commit_sha': '406af7593252a8fe03e9d4d5526f644a99ebf720', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f8ffd7faee56fc285f541e9be3c86c4abd791048', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '22763a9d89933fc71c2a5db220e18813e3b292b8', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2870988ce4871a4e168716e93f0e0a0b218b8fb1', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6951edabc45b5ff26b3a797937f52a067a862f5c', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '23fec7b862c450be4137fc7e2eae2e344bf889b3', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fbb7d3d4ee68064c926286e15d707a82ce8fc135', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1a012c7920f2f1ce09a93e1213b8268a25f4c8bb', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c458705681d61a16c380ee54a241aa4049f18f9e', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1438856896,DIRECTOR: Fix lingotests `builtin.lingo` and `sort.lingo` for greener builds.,"1. `sort.lingo` was using `scummvmassertequal` for comparing two arrays, now the code for array equality was absent so added it.
2. `builtin.lingo` throwing errors due to memory leak in when using `b_move`, fixed it.",True,5164,https://api.github.com/repos/scummvm/scummvm/pulls/5164,https://github.com/scummvm/scummvm/pull/5164,closed,11,1,2,2,1,0,1,0,[{'name': 'GSoC'}],2023-07-18 09:01:44+00:00,2023-07-18 11:09:04+00:00,7640.0,2:07:20,[],"[{'commit_sha': 'dea7024019fde09b6b876fac9d2a864b1cbd315d', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dd4397c9455963f0cd3bb32073f3885cc9dd75b', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1448704809,DIRECTOR: Anonymous function access object,"  Anonymous functions are allowed to access the instance variables that are in scope, just like localVariables. This patch restores the  original behavior by not resetting `_state->_me` when a context is pushed that belongs to anonymous function while it is being called from object, ie `kFactoryObj | kScriptObj`. Commands like `do(""set instanceVar = 1"")` and `do(""set abc = instanceVar"")` will now work.

Fixes food maker in food bar where up/down buttons were not working.

--start-movie=""ATD\HD\cfTWR4FO.DXR"" totaldistortion-win",True,5191,https://api.github.com/repos/scummvm/scummvm/pulls/5191,https://github.com/scummvm/scummvm/pull/5191,closed,26,1,3,3,1,0,1,0,[{'name': 'GSoC'}],2023-07-25 15:48:55+00:00,2023-07-26 00:45:49+00:00,32214.0,8:56:54,[],"[{'commit_sha': '562593f3a34ea64f5782916676cecc60dfe2e31a', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b5ff719c0ca0766954239df32959e9b9fe6dbd4', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ca25316bd950be8cd65ade0873b61bcd9baa29b0', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1447418180,DIRECTOR: Fix memory leaks when changing sharedCast,"When changing from shared casts in `Window::loadNewSharedCast`, and in instance where previousCast need to be deleted, we just deleted the cast itself but not the underlying `Archive`, this resulted in memory leaks. `~Director()` was not deleting this archive because it was being removed from `_allSeenResFiles` in favour of loading new archive.

Fixed by deleting `Archive *_castArchive` of previousCast after erasing its entry from `_allSeenResFiles`.",True,5190,https://api.github.com/repos/scummvm/scummvm/pulls/5190,https://github.com/scummvm/scummvm/pull/5190,closed,1,0,1,1,1,0,1,0,[{'name': 'GSoC'}],2023-07-24 21:45:45+00:00,2023-07-25 04:59:54+00:00,26049.0,7:14:09,[],"[{'commit_sha': '98639e7f3581fe56c9174037e58ce3e16263de86', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1444906991,DIRECTOR: Rebuild frames when there is jump to current frame,"Initially, the frames data were only being reset and rebuild when jumps were made to frame that is different than current one, ie this in case when `_nextFrame != _curFrameNumber`, this however had problems with `majestic-mac` not opening and stuck on loading screen.

Fixed problem where `majestic-mac` would constantly jump to main-menu screen (ie same frame) and would not load the game.",True,5176,https://api.github.com/repos/scummvm/scummvm/pulls/5176,https://github.com/scummvm/scummvm/pull/5176,closed,1,2,1,1,1,0,1,0,[{'name': 'GSoC'}],2023-07-21 19:12:10+00:00,2023-07-21 23:06:45+00:00,14075.0,3:54:35,[],"[{'commit_sha': 'b4fd65ebe8bdf003c68242eb3e1c35d05789f4b6', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1445356609,DIRECTOR: Fix black patches in meet-media band,"It has been observed that for `Shape` cast members, the default color is white, as there were no foreColor in frames data for white fore-color casts. This indicates  how director saves more memory by omitting this foreColor(255).

`mediaband-win` used several of transparent white rectangle shape cast to identify hover and click events. Using lingo `rollOver` command However these shapes were set foreColor white which was not being embedded in frames data. This caused the shapes to be rendered black which is default foreColor.",True,5178,https://api.github.com/repos/scummvm/scummvm/pulls/5178,https://github.com/scummvm/scummvm/pull/5178,closed,1,1,1,1,2,1,1,0,[{'name': 'GSoC'}],2023-07-22 16:05:56+00:00,2023-07-26 21:37:13+00:00,365477.0,"4 days, 5:31:17","[{'comment_id': 1272803915, 'comment_body': 'I think that `_backColor` should be changed here too. Though, IIRC, that one is used to fill out the Score.\r\n\r\nAlso, please test this change with Lingo Workshop movies', 'comment_created': datetime.datetime(2023, 7, 24, 22, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}]","[{'commit_sha': 'a29790778ac39bb1eed40bc0061db83ea4dd3be9', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1450918983,DIRECTOR: Improve screenshot comparison of previous builds,This patch adds simple pixel-by-pixel comparison of screenshots between builds. It is helpful to detect regressions in graphics rendering.,True,5196,https://api.github.com/repos/scummvm/scummvm/pulls/5196,https://github.com/scummvm/scummvm/pull/5196,closed,52,8,3,1,1,0,1,0,[{'name': 'GSoC'}],2023-07-26 20:55:22+00:00,2023-07-26 21:37:38+00:00,2536.0,0:42:16,[],"[{'commit_sha': '5604776fa77c114f407878d52fa1f03f9ad2eae0', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1459829934,"DIRECTOR, GRAPHICS: MACGUI: Background director window!","This patch sets the flag background for score (or main director engine window, It is useful because it prevents the window from jumping to front of other windows (ie from `open` command) and thus shadowing it.

Fixes `title of window` from workshop, where clicking outside opened window used to disappear it beneath the main window.

Also fixes 'totaldistortion-win' sequencer TV, when clicking anywhere except the TV screen, the window used to disappear.",True,5221,https://api.github.com/repos/scummvm/scummvm/pulls/5221,https://github.com/scummvm/scummvm/pull/5221,closed,17,1,3,2,1,0,1,0,[{'name': 'GSoC'}],2023-08-02 13:49:40+00:00,2023-08-02 16:42:24+00:00,10364.0,2:52:44,[],"[{'commit_sha': '0fbe350e29b04da5986270b7e0f7b5d8a4b29c57', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a9aba7facdfb9cbede65cf736658560886107fa', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1456323574,DIRECTOR: LINGO: Scoped and scopeless lingo score,"This patch fixes the behaviour of having both scoped and scopeless lingo in the same score script. It has been observed that movies created with D3.1 that uses scopeless lingo can be ported to D4, in which case the scopeless lingo is executed first, before the scoped lingo. (for example in `put ""abc"" enterFrame put ""enter"" end`, abc will be printed first, then enter)

Fix the problem where frames in certain `totaldistortion-win` movies are played spontaneously because enterFrame handlers are not called due to scopeless statements contained in the movie.

--start-movie=""ATD/HD/FISMH2H6.DXR""@50 totaldistortion-win",True,5216,https://api.github.com/repos/scummvm/scummvm/pulls/5216,https://github.com/scummvm/scummvm/pull/5216,closed,6,2,1,1,1,0,0,0,[],2023-07-31 14:05:43+00:00,2023-07-31 22:23:27+00:00,29864.0,8:17:44,[],"[{'commit_sha': '85d7e47408cab588726101c7ca5ae92553cbb19f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1463616078,DIRECTOR: Improve checking for recursive enterFrame,"In the original engine, the enterFrame handler can only be called recursively upto second depth, and the third call will be ignored. This was formerly implemented by counting number of frozen lingo states, however there are cases where the lingo state is frozen, while enterFrame handler not called, so the count is not accurate.

This patch improves the logic by counting the number of enterFrame in frozen lingo states as well, so it can be identified that these previous frames are indeed of `enterFrame` handler.

Fixes bug where the elevator when jumping to next floor (yellow one) broke dimensional movement in `totaldistortion-win`.
",True,5233,https://api.github.com/repos/scummvm/scummvm/pulls/5233,https://github.com/scummvm/scummvm/pull/5233,closed,26,2,3,1,1,3,0,0,[],2023-08-05 01:54:28+00:00,2023-08-05 19:51:59+00:00,64651.0,17:57:31,"[{'comment_id': 1285070161, 'comment_body': 'this is wrong. The proper one is: `frame->sp.name->equalsIgnoreCase(""enterFrame"")`', 'comment_created': datetime.datetime(2023, 8, 5, 14, 52, 21, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}, {'comment_id': 1285101219, 'comment_body': 'Fixed', 'comment_created': datetime.datetime(2023, 8, 5, 18, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'hari01584', 'type': 'User'}, {'comment_id': 1285115008, 'comment_body': 'nice speed optimization', 'comment_created': datetime.datetime(2023, 8, 5, 19, 51, 31, tzinfo=datetime.timezone.utc), 'commenter': 'sev-', 'type': 'User'}]","[{'commit_sha': '983bfba0c4a34c2d5cec8232d8a1f5ebfa5683d7', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1445599863,DIRECTOR: Implement scroll-able type textcast member,"Implements textType kScrollableText, which is used in books placed in the library of 'totaldistortion'. It uses MacTextWindow to render the text, which includes a scrollbar.

--start-movie=""ATD\HD\bbTWRFL2.DXR@392"" totaldistortion-win",True,5182,https://api.github.com/repos/scummvm/scummvm/pulls/5182,https://github.com/scummvm/scummvm/pull/5182,closed,113,49,16,8,1,0,1,0,[{'name': 'GSoC'}],2023-07-23 13:03:59+00:00,2023-08-03 07:49:20+00:00,931521.0,"10 days, 18:45:21",[],"[{'commit_sha': '1d724dae74005736612c0bd6b0d8eee752c1c0aa', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1518e62c389d96ae99a522333a5d9bf5f68b8740', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42f2c77f3b12b58886028411e9037ebb9328fc84', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aedb0607275775c4ecabe5d0ae5e2b7d643a4b18', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '131b8de6ac5eb37fb722221d56de4fb48275f16c', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a2acd979817f01b59405b956efc91e6bbe02187', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7a8c07911081c984bd26d3be97c3edc7ed722378', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7dc6912b8d17d82277e6013047fb2766a8a17a12', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47
1467257628,DIRECTOR: Fix visibility issue when setting window properties,"This patch fixes the behaviour of windows when setting their properties (e.g. titleVisibility, Modal, etc) from the lingo.

Initially the window was set to be visible when the property was set, but this is not the expected behaviour. The window should only be visible when the `open` command is called. Removed `setVisible(true)` from various window properties assignment functions.

Fixes popupmenu overlay in `meet-mediaband` and white rectangle when opening `mcluhan-win`.

--start-movie=""main\stvimenu.dxr"" mediaband-win",True,5245,https://api.github.com/repos/scummvm/scummvm/pulls/5245,https://github.com/scummvm/scummvm/pull/5245,closed,0,6,1,1,1,0,1,0,[{'name': 'GSoC'}],2023-08-08 17:28:15+00:00,2023-08-09 16:49:16+00:00,84061.0,23:21:01,[],"[{'commit_sha': '22f901494982df704a92655a26be9e166926665f', 'committer_username': 'hari01584', 'committer_name': 'Harishankar Kumar', 'committer_email': None, 'commit_date': datetime.datetime(2017, 9, 8, 13, 58, 16, tzinfo=datetime.timezone.utc)}]",Harishankar Kumar,31770598,,User,,95,,35,47

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
1358940,scummvm,scummvm/scummvm,C++,1017,2261,136,787,154033,45,39,45,"[{'id': 1472941125, 'number': 5255, 'closed': datetime.datetime(2023, 8, 13, 8, 57, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 12, 15, 54, 22, tzinfo=datetime.timezone.utc), 'time_taken': 61381.0, 'time_delta': '17:03:01', 'additions': 38, 'deletions': 69, 'state': 'closed'}, {'id': 1467257628, 'number': 5245, 'closed': datetime.datetime(2023, 8, 9, 16, 49, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 8, 17, 28, 15, tzinfo=datetime.timezone.utc), 'time_taken': 84061.0, 'time_delta': '23:21:01', 'additions': 0, 'deletions': 6, 'state': 'closed'}, {'id': 1463616078, 'number': 5233, 'closed': datetime.datetime(2023, 8, 5, 19, 51, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 5, 1, 54, 28, tzinfo=datetime.timezone.utc), 'time_taken': 64651.0, 'time_delta': '17:57:31', 'additions': 26, 'deletions': 2, 'state': 'closed'}, {'id': 1459829934, 'number': 5221, 'closed': datetime.datetime(2023, 8, 2, 16, 42, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 2, 13, 49, 40, tzinfo=datetime.timezone.utc), 'time_taken': 10364.0, 'time_delta': '2:52:44', 'additions': 17, 'deletions': 1, 'state': 'closed'}, {'id': 1456323574, 'number': 5216, 'closed': datetime.datetime(2023, 7, 31, 22, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 31, 14, 5, 43, tzinfo=datetime.timezone.utc), 'time_taken': 29864.0, 'time_delta': '8:17:44', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 1450918983, 'number': 5196, 'closed': datetime.datetime(2023, 7, 26, 21, 37, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 26, 20, 55, 22, tzinfo=datetime.timezone.utc), 'time_taken': 2536.0, 'time_delta': '0:42:16', 'additions': 52, 'deletions': 8, 'state': 'closed'}, {'id': 1448704809, 'number': 5191, 'closed': datetime.datetime(2023, 7, 26, 0, 45, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 25, 15, 48, 55, tzinfo=datetime.timezone.utc), 'time_taken': 32214.0, 'time_delta': '8:56:54', 'additions': 26, 'deletions': 1, 'state': 'closed'}, {'id': 1447418180, 'number': 5190, 'closed': datetime.datetime(2023, 7, 25, 4, 59, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 24, 21, 45, 45, tzinfo=datetime.timezone.utc), 'time_taken': 26049.0, 'time_delta': '7:14:09', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1445599863, 'number': 5182, 'closed': datetime.datetime(2023, 8, 3, 7, 49, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 23, 13, 3, 59, tzinfo=datetime.timezone.utc), 'time_taken': 931521.0, 'time_delta': '10 days, 18:45:21', 'additions': 113, 'deletions': 49, 'state': 'closed'}, {'id': 1445356609, 'number': 5178, 'closed': datetime.datetime(2023, 7, 26, 21, 37, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 22, 16, 5, 56, tzinfo=datetime.timezone.utc), 'time_taken': 365477.0, 'time_delta': '4 days, 5:31:17', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 1444906991, 'number': 5176, 'closed': datetime.datetime(2023, 7, 21, 23, 6, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 21, 19, 12, 10, tzinfo=datetime.timezone.utc), 'time_taken': 14075.0, 'time_delta': '3:54:35', 'additions': 1, 'deletions': 2, 'state': 'closed'}, {'id': 1438856896, 'number': 5164, 'closed': datetime.datetime(2023, 7, 18, 11, 9, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 18, 9, 1, 44, tzinfo=datetime.timezone.utc), 'time_taken': 7640.0, 'time_delta': '2:07:20', 'additions': 11, 'deletions': 1, 'state': 'closed'}, {'id': 1436367696, 'number': 5163, 'closed': datetime.datetime(2023, 7, 19, 12, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 16, 20, 5, 54, tzinfo=datetime.timezone.utc), 'time_taken': 233526.0, 'time_delta': '2 days, 16:52:06', 'additions': 419, 'deletions': 301, 'state': 'closed'}, {'id': 1432746521, 'number': 5158, 'closed': datetime.datetime(2023, 7, 14, 12, 51, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 13, 9, 27, 16, tzinfo=datetime.timezone.utc), 'time_taken': 98644.0, 'time_delta': '1 day, 3:24:04', 'additions': 27, 'deletions': 1, 'state': 'closed'}, {'id': 1431320797, 'number': 5156, 'closed': datetime.datetime(2023, 7, 12, 20, 49, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 12, 13, 43, 53, tzinfo=datetime.timezone.utc), 'time_taken': 25524.0, 'time_delta': '7:05:24', 'additions': 7, 'deletions': 2, 'state': 'closed'}, {'id': 1429532679, 'number': 5153, 'closed': datetime.datetime(2023, 7, 12, 20, 49, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 11, 14, 0, 56, tzinfo=datetime.timezone.utc), 'time_taken': 110920.0, 'time_delta': '1 day, 6:48:40', 'additions': 38, 'deletions': 1, 'state': 'closed'}, {'id': 1427268129, 'number': 5152, 'closed': datetime.datetime(2023, 7, 10, 13, 38, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 10, 10, 47, 37, tzinfo=datetime.timezone.utc), 'time_taken': 10259.0, 'time_delta': '2:50:59', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 1421473548, 'number': 5136, 'closed': datetime.datetime(2023, 7, 8, 19, 13, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 5, 17, 14, 37, tzinfo=datetime.timezone.utc), 'time_taken': 266332.0, 'time_delta': '3 days, 1:58:52', 'additions': 20, 'deletions': 3, 'state': 'closed'}, {'id': 1409502777, 'number': 5126, 'closed': datetime.datetime(2023, 6, 27, 10, 0, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 27, 9, 58, 6, tzinfo=datetime.timezone.utc), 'time_taken': 143.0, 'time_delta': '0:02:23', 'additions': 77, 'deletions': 1, 'state': 'closed'}, {'id': 1407787076, 'number': 5125, 'closed': datetime.datetime(2023, 6, 26, 13, 1, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 26, 11, 49, 28, tzinfo=datetime.timezone.utc), 'time_taken': 4308.0, 'time_delta': '1:11:48', 'additions': 10, 'deletions': 14, 'state': 'closed'}, {'id': 1406327763, 'number': 5120, 'closed': datetime.datetime(2023, 7, 8, 19, 15, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 19, 33, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1208540.0, 'time_delta': '13 days, 23:42:20', 'additions': 13, 'deletions': 0, 'state': 'closed'}, {'id': 1405857438, 'number': 5118, 'closed': datetime.datetime(2023, 6, 24, 21, 23, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 24, 0, 37, 59, tzinfo=datetime.timezone.utc), 'time_taken': 74747.0, 'time_delta': '20:45:47', 'additions': 61, 'deletions': 7, 'state': 'closed'}, {'id': 1400619711, 'number': 5111, 'closed': datetime.datetime(2023, 6, 20, 22, 47, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 20, 22, 39, 41, tzinfo=datetime.timezone.utc), 'time_taken': 440.0, 'time_delta': '0:07:20', 'additions': 161, 'deletions': 0, 'state': 'closed'}, {'id': 1398935682, 'number': 5107, 'closed': datetime.datetime(2023, 6, 20, 7, 2, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 19, 22, 58, 48, tzinfo=datetime.timezone.utc), 'time_taken': 29019.0, 'time_delta': '8:03:39', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 1396037649, 'number': 5100, 'closed': datetime.datetime(2023, 6, 21, 17, 18, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 16, 50, 21, tzinfo=datetime.timezone.utc), 'time_taken': 433698.0, 'time_delta': '5 days, 0:28:18', 'additions': 5, 'deletions': 11, 'state': 'closed'}, {'id': 1387696133, 'number': 5089, 'closed': datetime.datetime(2023, 6, 25, 22, 7, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 11, 21, 47, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1210806.0, 'time_delta': '14 days, 0:20:06', 'additions': 389, 'deletions': 225, 'state': 'closed'}, {'id': 1387531740, 'number': 5087, 'closed': datetime.datetime(2023, 6, 11, 13, 33, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 11, 13, 10, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1353.0, 'time_delta': '0:22:33', 'additions': 246, 'deletions': 140, 'state': 'closed'}, {'id': 1377094956, 'number': 5074, 'closed': datetime.datetime(2023, 6, 10, 14, 18, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 3, 16, 12, 17, tzinfo=datetime.timezone.utc), 'time_taken': 597977.0, 'time_delta': '6 days, 22:06:17', 'additions': 39, 'deletions': 17, 'state': 'closed'}, {'id': 1376967417, 'number': 5073, 'closed': datetime.datetime(2023, 6, 7, 23, 21, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 3, 12, 42, 59, tzinfo=datetime.timezone.utc), 'time_taken': 383891.0, 'time_delta': '4 days, 10:38:11', 'additions': 23, 'deletions': 18, 'state': 'closed'}, {'id': 1374292505, 'number': 5067, 'closed': datetime.datetime(2023, 6, 1, 18, 17, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 1, 15, 14, 22, tzinfo=datetime.timezone.utc), 'time_taken': 10981.0, 'time_delta': '3:03:01', 'additions': 89, 'deletions': 7, 'state': 'closed'}, {'id': 1369490563, 'number': 5059, 'closed': datetime.datetime(2023, 5, 31, 11, 29, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 29, 19, 27, 57, tzinfo=datetime.timezone.utc), 'time_taken': 144097.0, 'time_delta': '1 day, 16:01:37', 'additions': 91, 'deletions': 23, 'state': 'closed'}, {'id': 1369110734, 'number': 5056, 'closed': datetime.datetime(2023, 5, 29, 17, 36, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 29, 13, 5, 51, tzinfo=datetime.timezone.utc), 'time_taken': 16224.0, 'time_delta': '4:30:24', 'additions': 56, 'deletions': 34, 'state': 'closed'}, {'id': 1347812786, 'number': 5005, 'closed': datetime.datetime(2023, 5, 28, 11, 50, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 11, 22, 5, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1431897.0, 'time_delta': '16 days, 13:44:57', 'additions': 340, 'deletions': 64, 'state': 'closed'}, {'id': 1307003278, 'number': 4896, 'closed': datetime.datetime(2023, 4, 14, 14, 46, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 4, 10, 3, 57, 27, tzinfo=datetime.timezone.utc), 'time_taken': 384563.0, 'time_delta': '4 days, 10:49:23', 'additions': 31, 'deletions': 0, 'state': 'closed'}, {'id': 1294546440, 'number': 4851, 'closed': datetime.datetime(2023, 3, 29, 21, 50, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 29, 12, 23, 27, tzinfo=datetime.timezone.utc), 'time_taken': 34044.0, 'time_delta': '9:27:24', 'additions': 215, 'deletions': 3, 'state': 'closed'}, {'id': 1286802798, 'number': 4836, 'closed': datetime.datetime(2023, 3, 24, 22, 59, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 3, 23, 4, 54, 7, tzinfo=datetime.timezone.utc), 'time_taken': 151546.0, 'time_delta': '1 day, 18:05:46', 'additions': 392, 'deletions': 1, 'state': 'closed'}, {'id': 1257124478, 'number': 4751, 'closed': datetime.datetime(2023, 3, 1, 18, 3, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 28, 13, 17, 20, tzinfo=datetime.timezone.utc), 'time_taken': 103554.0, 'time_delta': '1 day, 4:45:54', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 1254826290, 'number': 4745, 'closed': datetime.datetime(2023, 3, 2, 0, 28, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 27, 4, 30, 44, tzinfo=datetime.timezone.utc), 'time_taken': 244667.0, 'time_delta': '2 days, 19:57:47', 'additions': 2, 'deletions': 1, 'state': 'closed'}]"
