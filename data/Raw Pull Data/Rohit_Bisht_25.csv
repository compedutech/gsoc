pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1387329555,Qt GUI: Added new Matrix Sink,"<!--- The title of the PR should summarize the change implemented. -->
<!--- Example commit message format: -->
<!--- `module: summary of change` -->
<!--- (leave blank) -->
<!--- `details of what/why/how an issue was addressed` -->
<!--- Keep subject lines to 50 characters (but 72 is a hard limit!) -->
<!--- characters. Refer to the [Revision Control Guidelines](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md#revision-control-guidelines) section of the coding guidelines -->

## Description
<!--- Provide a general summary of your changes in the title above -->
<!--- Why is this change required? What problem does it solve? -->
This widget will allow for the visualization of radar Doppler/range plane or 2D equalizer taps, making it useful for radar imaging and equalizer analysis.

## Related Issue
<!--- Refer to any related issues here -->
<!--- If this PR fully addresses an issue, please say ""Fixes #1234"", -->
<!--- as this will allow Github to automatically close the related Issue -->

## Which blocks/areas does this affect?
<!--- Include blocks that are affected and some details on what -->
<!--- areas these changes affect, such as performance. -->
QT GUI Matrix Sink

## Testing Done
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you -->
<!--- ran to see how your change affects other areas of the code, -->
<!--- etc. Then, include justifications for how your tests -->
<!--- demonstrate those affects. -->
Yes

## Checklist
<!--- Go over all the following points, and put an `x` in all the
<!--- boxes that apply. Note that some of these may not be valid -->
<!--- for all PRs. -->

- [x] I have read the [CONTRIBUTING document](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md).
- [x] I have squashed my commits to have one significant change per commit. 
- [x] I [have signed my commits before making this PR](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md#dco-signed)
- [x] My code follows the code style of this project. See [GREP1.md](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md).
- [x] I have updated [the documentation](https://wiki.gnuradio.org/index.php/Main_Page#Documentation) where necessary.
- [x] I have added tests to cover my changes, and all previous tests pass.
",True,6718,https://api.github.com/repos/gnuradio/gnuradio/pulls/6718,https://github.com/gnuradio/gnuradio/pull/6718,closed,1244,43,16,1,17,25,5,1,"[{'name': 'New Feature'}, {'name': 'QTGUI'}, {'name': 'Needs Action'}, {'name': 'Backport-3.10'}, {'name': 'Hold Backport'}]",2023-06-11 01:23:49+00:00,2023-09-05 17:01:28+00:00,7486659.0,"86 days, 15:37:39","[{'comment_id': 1225767286, 'comment_body': 'add `override` before `;`', 'comment_created': datetime.datetime(2023, 6, 11, 10, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1225767424, 'comment_body': 'add `override` before `;`', 'comment_created': datetime.datetime(2023, 6, 11, 10, 14, 51, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1225768261, 'comment_body': 'Doppler is written with two ""p"", because the guy who discovered / described the Doppler effect was called Doppler.  :grin: ', 'comment_created': datetime.datetime(2023, 6, 11, 10, 17, 36, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1225769126, 'comment_body': ""Would it be possible to have PNG be the first choice here? JPEG is lossy and makes ugly artifacts at sharp edges, and isn't true to colors – all properties of an image format that we don't want for the pictures that come out of your code!"", 'comment_created': datetime.datetime(2023, 6, 11, 10, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1225769215, 'comment_body': 'Does that mean that if I entered ""mypicture.png"" as file name, I get ""mypicture.png.png"" as saved file?', 'comment_created': datetime.datetime(2023, 6, 11, 10, 23, 41, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1225863824, 'comment_body': ""oops , I'll correct that"", 'comment_created': datetime.datetime(2023, 6, 11, 16, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1225863838, 'comment_body': 'Okay', 'comment_created': datetime.datetime(2023, 6, 11, 16, 43, 4, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1225863902, 'comment_body': 'Sure', 'comment_created': datetime.datetime(2023, 6, 11, 16, 43, 30, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1225864815, 'comment_body': 'I also addressed the same in this issue #6474\r\n\r\nSaving it without adding .jpg or other extension made it invisible to the filter and did not showed the earlier saved files,i.e. if a saved one as ""abc"" (actually a jpeg) and then took another shot the file save dialog did not display any previous saved jpeg files on selecting the filter to jpeg files (which could be inconvenient if I accidentally replaced any previous screenshot with same name )\r\nI checked the saved file in terminal it showed name as abc.jpg not abc.jpg.jpg , I think JPEG is only set as property without extension. Although I checked it in linux only don\'t know if it shows .jpg.jpg in any other system', 'comment_created': datetime.datetime(2023, 6, 11, 16, 47, 11, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1225865283, 'comment_body': 'I\'m not sure what you mean with ""showed""; what is shown in a graphical file list might or might not include file extensions, I guess?\r\n\r\nI think the point here is that I expect you would need to check whether .jpg or .jpeg is present in the file name as entered, and if so, not attach it, and if not, do attach .jpg, right?\r\n\r\nBut this has low priority, honestly. Leave it as you like, I\'d say.', 'comment_created': datetime.datetime(2023, 6, 11, 16, 49, 56, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1225865930, 'comment_body': 'ok', 'comment_created': datetime.datetime(2023, 6, 11, 16, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1226484291, 'comment_body': ""Other widgets also hava a lot of contstructor params, but this is way too many. Let's have defaults for everything that has a setter, then call the setter for each param or set of params."", 'comment_created': datetime.datetime(2023, 6, 12, 11, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'willcode', 'type': 'User'}, {'comment_id': 1228887767, 'comment_body': 'got it', 'comment_created': datetime.datetime(2023, 6, 14, 2, 6, 44, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1246424841, 'comment_body': 'would put these constant initializations into the class declaration, i.e. in the .h file', 'comment_created': datetime.datetime(2023, 6, 29, 10, 10, 45, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246425344, 'comment_body': 'why not put these into the initializer list above.', 'comment_created': datetime.datetime(2023, 6, 29, 10, 11, 14, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246426844, 'comment_body': 'at the end of a header file, please always have a line break', 'comment_created': datetime.datetime(2023, 6, 29, 10, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246427087, 'comment_body': '-> initializer list', 'comment_created': datetime.datetime(2023, 6, 29, 10, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246428432, 'comment_body': 'constant initializations -> …_impl.h', 'comment_created': datetime.datetime(2023, 6, 29, 10, 14, 40, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246439733, 'comment_body': 'if `qApp == nullptr` then `d_qApplication = qApp (== nullptr)`;\r\nelse, `d_qApplication = qApp`. So, `d_qApplication` is *always* `qApp`.  So, this conditional is a bit redundant. \r\nAlso, valgrind will shout at us, because we\'re leaking `d_argv` here! \r\n\r\nI\'d write the whole sections as follows:\r\n\r\n1. put `const char* d_argv = """";` in the class declaration\r\n2. in the initializer list, have `d_qApplication(qApp ? qApp : new QApplication(1, &d_argv))`', 'comment_created': datetime.datetime(2023, 6, 29, 10, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246440055, 'comment_body': 'replace by entry in initializer list as described [here](https://github.com/gnuradio/gnuradio/pull/6718#discussion_r1246439733)', 'comment_created': datetime.datetime(2023, 6, 29, 10, 27, 15, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246441186, 'comment_body': '-> initializer list', 'comment_created': datetime.datetime(2023, 6, 29, 10, 28, 33, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246441911, 'comment_body': 'spurious empty line', 'comment_created': datetime.datetime(2023, 6, 29, 10, 29, 27, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246444997, 'comment_body': "":warning: this might be intentional, it might not, just need confirmation\r\n\r\nyou're telling the GNU Radio runtime you consumed *all* the items (an item here is the size of a full vector!) you got, but in your loop above, you only consume a single vector, right?  That means if you get 100 vectors, you just use the **oldest** one, and ignore the 99 newer ones, and throw them away.\r\n\r\nIs that intentional?"", 'comment_created': datetime.datetime(2023, 6, 29, 10, 32, 53, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1246448835, 'comment_body': 'Very inefficient. Instead,\r\n\r\n```c++\r\nQVector<double> qvec(in, in + d_vlen);\r\n```\r\n\r\nwould do the same, and because the distance between pointers `in` and `in + d_vlen` is fixed and known, will work without resizing the `QVector` (which is expensive, because it means repeated memory re-allocation).', 'comment_created': datetime.datetime(2023, 6, 29, 10, 37, 24, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1296375237, 'comment_body': 'i tried that but since the incoming data is float so it wouldn\'t take that , also when casting the ""in"" from float to double the plot wasn\'t accurate so had to stick to that.', 'comment_created': datetime.datetime(2023, 8, 16, 20, 7, 35, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}]","[{'commit_sha': 'ce77f784f7f92163da033008abddcb775b590bb4', 'committer_username': 'R-ohit-B-isht', 'committer_name': 'Rohit Bisht', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 15, 14, 15, 18, tzinfo=datetime.timezone.utc)}]",Rohit Bisht,74498290,,User,,121,,27,7
1429290775,QT GUI : Added new Video Display Sink,"<!--- The title of the PR should summarize the change implemented. -->
<!--- Example commit message format: -->
<!--- `module: summary of change` -->
<!--- (leave blank) -->
<!--- `details of what/why/how an issue was addressed` -->
<!--- Keep subject lines to 50 characters (but 72 is a hard limit!) -->
<!--- characters. Refer to the [Revision Control Guidelines](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md#revision-control-guidelines) section of the coding guidelines -->

## Description
This widget will enable the visualization of video demodulation output, making it useful for video transmission applications.
<!--- Provide a general summary of your changes in the title above -->
<!--- Why is this change required? What problem does it solve? -->

## Related Issue
<!--- Refer to any related issues here -->
<!--- If this PR fully addresses an issue, please say ""Fixes #1234"", -->
<!--- as this will allow Github to automatically close the related Issue -->

## Which blocks/areas does this affect?
gr-qtgui/CMakeLists.txt
gr-qtgui/lib/playercontrols.h
gr-qtgui/lib/playercontrols.cc
gr-qtgui/lib/video_display_impl.cc
gr-qtgui/lib/video_display_impl.h
gr-qtgui/lib/video_player.h
gr-qtgui/lib/video_player.cc
gr-qtgui/lib/CMakeLists.txt
gr-qtgui/include/gnuradio/qtgui/video_display.h
gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt
gr-qtgui/grc/qtgui_video_display_sink.block.yml
gr-qtgui/grc/qtgui.tree.yml
gr-qtgui/examples/qtgui_video_display_example.grc
gr-qtgui/python/qtgui/bindings/CMakeLists.txt
gr-qtgui/python/qtgui/bindings/docstrings/video_display_pydoc_template.h
gr-qtgui/python/qtgui/bindings/python_bindings.cc
gr-qtgui/python/qtgui/bindings/video_display_python.cc
gr-qtgui/python/qtgui/qa_qtgui.py
<!--- Include blocks that are affected and some details on what -->
<!--- areas these changes affect, such as performance. -->

## Testing Done
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you -->
<!--- ran to see how your change affects other areas of the code, -->
<!--- etc. Then, include justifications for how your tests -->
<!--- demonstrate those affects. -->

## Checklist
<!--- Go over all the following points, and put an `x` in all the
<!--- boxes that apply. Note that some of these may not be valid -->
<!--- for all PRs. -->

- [x] I have read the [CONTRIBUTING document](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md).
- [x] I have squashed my commits to have one significant change per commit. 
- [x] I [have signed my commits before making this PR](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md#dco-signed)
- [x] My code follows the code style of this project. See [GREP1.md](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md).
- [x] I have updated [the documentation](https://wiki.gnuradio.org/index.php/Main_Page#Documentation) where necessary.
- [x] I have added tests to cover my changes, and all previous tests pass.
",False,6746,https://api.github.com/repos/gnuradio/gnuradio/pulls/6746,https://github.com/gnuradio/gnuradio/pull/6746,open,1288,45,20,1,15,3,5,0,"[{'name': 'New Feature'}, {'name': 'QTGUI'}, {'name': 'Needs Action'}, {'name': 'Backport-3.10'}, {'name': 'Hold Backport'}]",2023-07-11 11:42:21+00:00,,0.0,,"[{'comment_id': 1263657608, 'comment_body': 'Just a nit pick, but please fix whitespace here :wink: ', 'comment_created': datetime.datetime(2023, 7, 14, 12, 4, 1, tzinfo=datetime.timezone.utc), 'commenter': 'luzpaz', 'type': 'User'}, {'comment_id': 1263770124, 'comment_body': 'got it', 'comment_created': datetime.datetime(2023, 7, 14, 13, 57, 58, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1263807174, 'comment_body': '@luzpaz A few spelling/whitespace fixes can be useful, but improvements in the content of documentation would be even more appreciated. And, of course, features, technical improvments, etc.', 'comment_created': datetime.datetime(2023, 7, 14, 14, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'willcode', 'type': 'User'}]","[{'commit_sha': '53b97f0e093806127370bb5404b1bc8259535348', 'committer_username': 'R-ohit-B-isht', 'committer_name': 'Rohit Bisht', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 15, 14, 15, 18, tzinfo=datetime.timezone.utc)}]",Rohit Bisht,74498290,,User,,121,,27,7
1477502156,gr-qtgui: refactoring old sinks,"<!--- The title of the PR should summarize the change implemented. -->
<!--- Example commit message format: -->
<!--- `module: summary of change` -->
<!--- (leave blank) -->
<!--- `details of what/why/how an issue was addressed` -->
<!--- Keep subject lines to 50 characters (but 72 is a hard limit!) -->
<!--- characters. Refer to the [Revision Control Guidelines](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md#revision-control-guidelines) section of the coding guidelines -->

## Description
<!--- Provide a general summary of your changes in the title above -->
<!--- Why is this change required? What problem does it solve? -->
Refactoring the float and complex implementations of qtgui sink block into a single block using generics and templates.
## Related Issue
<!--- Refer to any related issues here -->
<!--- If this PR fully addresses an issue, please say ""Fixes #1234"", -->
<!--- as this will allow Github to automatically close the related Issue -->

## Which blocks/areas does this affect?
<!--- Include blocks that are affected and some details on what -->
<!--- areas these changes affect, such as performance. -->
Frequency Sink
Waterfall Sink
Sink
Time Raster Sink
Time Sink
Eye Sink

## Testing Done
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you -->
<!--- ran to see how your change affects other areas of the code, -->
<!--- etc. Then, include justifications for how your tests -->
<!--- demonstrate those affects. -->
yes

## Checklist
<!--- Go over all the following points, and put an `x` in all the
<!--- boxes that apply. Note that some of these may not be valid -->
<!--- for all PRs. -->

- [ ] I have read the [CONTRIBUTING document](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md).
- [ ] I have squashed my commits to have one significant change per commit. 
- [ ] I [have signed my commits before making this PR](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md#dco-signed)
- [ ] My code follows the code style of this project. See [GREP1.md](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md).
- [ ] I have updated [the documentation](https://wiki.gnuradio.org/index.php/Main_Page#Documentation) where necessary.
- [ ] I have added tests to cover my changes, and all previous tests pass.
",False,6790,https://api.github.com/repos/gnuradio/gnuradio/pulls/6790,https://github.com/gnuradio/gnuradio/pull/6790,open,6839,12202,89,4,6,7,5,1,"[{'name': 'QTGUI'}, {'name': 'Cleanup'}, {'name': 'Needs Action'}, {'name': 'Backport-3.10'}, {'name': 'Hold Backport'}]",2023-08-16 13:35:58+00:00,,0.0,,"[{'comment_id': 1316146380, 'comment_body': 'These files were added back as wrappers, but are not in the CMakeFile.txt.', 'comment_created': datetime.datetime(2023, 9, 5, 16, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'willcode', 'type': 'User'}, {'comment_id': 1319252925, 'comment_body': ""Oh, sry I'll check that"", 'comment_created': datetime.datetime(2023, 9, 8, 1, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1340628025, 'comment_body': ""The second `#include` isn't needed here. Same in the other yml files."", 'comment_created': datetime.datetime(2023, 9, 28, 20, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'willcode', 'type': 'User'}, {'comment_id': 1340629203, 'comment_body': 'good time to also get rid of these', 'comment_created': datetime.datetime(2023, 9, 28, 20, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1340634165, 'comment_body': ""I don't think we'll ever expose these to python. Might be a good time to remove."", 'comment_created': datetime.datetime(2023, 9, 28, 20, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1340634362, 'comment_body': './.', 'comment_created': datetime.datetime(2023, 9, 28, 20, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1340635967, 'comment_body': 'clean out', 'comment_created': datetime.datetime(2023, 9, 28, 20, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}]","[{'commit_sha': 'b4244726bd95636e5747402bafe456668b8e7924', 'committer_username': 'R-ohit-B-isht', 'committer_name': 'Rohit Bisht', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 15, 14, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a5ab5c844f65fb9281dc67833c24ac0854883e4', 'committer_username': 'willcode', 'committer_name': 'Jeff Long', 'committer_email': 'willcode4@gmail.com', 'commit_date': datetime.datetime(2011, 12, 12, 18, 53, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50b0b25bf0df0eada09887de61aa3a157edfe255', 'committer_username': 'willcode', 'committer_name': 'Jeff Long', 'committer_email': 'willcode4@gmail.com', 'commit_date': datetime.datetime(2011, 12, 12, 18, 53, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37e5ec46dd53fd4cfe80abc04fbadc961af00164', 'committer_username': 'willcode', 'committer_name': 'Jeff Long', 'committer_email': 'willcode4@gmail.com', 'commit_date': datetime.datetime(2011, 12, 12, 18, 53, 39, tzinfo=datetime.timezone.utc)}]",Rohit Bisht,74498290,,User,,121,,27,7
1477502156,gr-qtgui: refactoring old sinks,"<!--- The title of the PR should summarize the change implemented. -->
<!--- Example commit message format: -->
<!--- `module: summary of change` -->
<!--- (leave blank) -->
<!--- `details of what/why/how an issue was addressed` -->
<!--- Keep subject lines to 50 characters (but 72 is a hard limit!) -->
<!--- characters. Refer to the [Revision Control Guidelines](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md#revision-control-guidelines) section of the coding guidelines -->

## Description
<!--- Provide a general summary of your changes in the title above -->
<!--- Why is this change required? What problem does it solve? -->
Refactoring the float and complex implementations of qtgui sink block into a single block using generics and templates.
## Related Issue
<!--- Refer to any related issues here -->
<!--- If this PR fully addresses an issue, please say ""Fixes #1234"", -->
<!--- as this will allow Github to automatically close the related Issue -->

## Which blocks/areas does this affect?
<!--- Include blocks that are affected and some details on what -->
<!--- areas these changes affect, such as performance. -->
Frequency Sink
Waterfall Sink
Sink
Time Raster Sink
Time Sink
Eye Sink

## Testing Done
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you -->
<!--- ran to see how your change affects other areas of the code, -->
<!--- etc. Then, include justifications for how your tests -->
<!--- demonstrate those affects. -->
yes

## Checklist
<!--- Go over all the following points, and put an `x` in all the
<!--- boxes that apply. Note that some of these may not be valid -->
<!--- for all PRs. -->

- [ ] I have read the [CONTRIBUTING document](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md).
- [ ] I have squashed my commits to have one significant change per commit. 
- [ ] I [have signed my commits before making this PR](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md#dco-signed)
- [ ] My code follows the code style of this project. See [GREP1.md](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md).
- [ ] I have updated [the documentation](https://wiki.gnuradio.org/index.php/Main_Page#Documentation) where necessary.
- [ ] I have added tests to cover my changes, and all previous tests pass.
",False,6790,https://api.github.com/repos/gnuradio/gnuradio/pulls/6790,https://github.com/gnuradio/gnuradio/pull/6790,open,6839,12202,89,4,6,7,5,1,"[{'name': 'QTGUI'}, {'name': 'Cleanup'}, {'name': 'Needs Action'}, {'name': 'Backport-3.10'}, {'name': 'Hold Backport'}]",2023-08-16 13:35:58+00:00,,0.0,,"[{'comment_id': 1316146380, 'comment_body': 'These files were added back as wrappers, but are not in the CMakeFile.txt.', 'comment_created': datetime.datetime(2023, 9, 5, 16, 47, 46, tzinfo=datetime.timezone.utc), 'commenter': 'willcode', 'type': 'User'}, {'comment_id': 1319252925, 'comment_body': ""Oh, sry I'll check that"", 'comment_created': datetime.datetime(2023, 9, 8, 1, 22, 25, tzinfo=datetime.timezone.utc), 'commenter': 'R-ohit-B-isht', 'type': 'User'}, {'comment_id': 1340628025, 'comment_body': ""The second `#include` isn't needed here. Same in the other yml files."", 'comment_created': datetime.datetime(2023, 9, 28, 20, 18, 49, tzinfo=datetime.timezone.utc), 'commenter': 'willcode', 'type': 'User'}, {'comment_id': 1340629203, 'comment_body': 'good time to also get rid of these', 'comment_created': datetime.datetime(2023, 9, 28, 20, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1340634165, 'comment_body': ""I don't think we'll ever expose these to python. Might be a good time to remove."", 'comment_created': datetime.datetime(2023, 9, 28, 20, 26, 31, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1340634362, 'comment_body': './.', 'comment_created': datetime.datetime(2023, 9, 28, 20, 26, 41, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1340635967, 'comment_body': 'clean out', 'comment_created': datetime.datetime(2023, 9, 28, 20, 28, 44, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}]","[{'commit_sha': 'b4244726bd95636e5747402bafe456668b8e7924', 'committer_username': 'R-ohit-B-isht', 'committer_name': 'Rohit Bisht', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 15, 14, 15, 18, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a5ab5c844f65fb9281dc67833c24ac0854883e4', 'committer_username': 'willcode', 'committer_name': 'Jeff Long', 'committer_email': 'willcode4@gmail.com', 'commit_date': datetime.datetime(2011, 12, 12, 18, 53, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '50b0b25bf0df0eada09887de61aa3a157edfe255', 'committer_username': 'willcode', 'committer_name': 'Jeff Long', 'committer_email': 'willcode4@gmail.com', 'commit_date': datetime.datetime(2011, 12, 12, 18, 53, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37e5ec46dd53fd4cfe80abc04fbadc961af00164', 'committer_username': 'willcode', 'committer_name': 'Jeff Long', 'committer_email': 'willcode4@gmail.com', 'commit_date': datetime.datetime(2011, 12, 12, 18, 53, 39, tzinfo=datetime.timezone.utc)}]",Rohit Bisht,74498290,,User,,121,,27,7
1477980684,QT GUI : Qt Designer integration,"<!--- The title of the PR should summarize the change implemented. -->
<!--- Example commit message format: -->
<!--- `module: summary of change` -->
<!--- (leave blank) -->
<!--- `details of what/why/how an issue was addressed` -->
<!--- Keep subject lines to 50 characters (but 72 is a hard limit!) -->
<!--- characters. Refer to the [Revision Control Guidelines](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md#revision-control-guidelines) section of the coding guidelines -->

## Description
<!--- Provide a general summary of your changes in the title above -->
<!--- Why is this change required? What problem does it solve? -->
Integrates the gr-qtgui flowgraph’s Qt GUI widget component Qt Designer to design the UI components.
wiki page : https://wiki.gnuradio.org/index.php?title=QT_Designer_Integration

## Related Issue
<!--- Refer to any related issues here -->
<!--- If this PR fully addresses an issue, please say ""Fixes #1234"", -->
<!--- as this will allow Github to automatically close the related Issue -->

## Which blocks/areas does this affect?
<!--- Include blocks that are affected and some details on what -->
<!--- areas these changes affect, such as performance. -->
flow_graph.py.mako
top_block.py
param.py
Actions.py
Application.py
Bars.py
## Testing Done
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you -->
<!--- ran to see how your change affects other areas of the code, -->
<!--- etc. Then, include justifications for how your tests -->
<!--- demonstrate those affects. -->
yes
## Checklist
<!--- Go over all the following points, and put an `x` in all the
<!--- boxes that apply. Note that some of these may not be valid -->
<!--- for all PRs. -->

- [ ] I have read the [CONTRIBUTING document](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md).
- [ ] I have squashed my commits to have one significant change per commit. 
- [ ] I [have signed my commits before making this PR](https://github.com/gnuradio/gnuradio/blob/main/CONTRIBUTING.md#dco-signed)
- [ ] My code follows the code style of this project. See [GREP1.md](https://github.com/gnuradio/greps/blob/main/grep-0001-coding-guidelines.md).
- [ ] I have updated [the documentation](https://wiki.gnuradio.org/index.php/Main_Page#Documentation) where necessary.
- [ ] I have added tests to cover my changes, and all previous tests pass.
",False,6791,https://api.github.com/repos/gnuradio/gnuradio/pulls/6791,https://github.com/gnuradio/gnuradio/pull/6791,open,170,27,6,1,1,5,2,0,"[{'name': 'New Feature'}, {'name': 'QTGUI'}]",2023-08-16 19:35:31+00:00,,0.0,,"[{'comment_id': 1327450772, 'comment_body': 'I think you can just stick with using `Path` everywhere. This could be\r\n\r\n```python\r\nfile_path = (Path(__file__).resolve().parent / ""${class_name}.ui"").absolute()\r\n```\r\n\r\nThen later just use `Path` methods like `if file_path.exists()`', 'comment_created': datetime.datetime(2023, 9, 15, 15, 20, 21, tzinfo=datetime.timezone.utc), 'commenter': 'cafeclimber', 'type': 'User'}, {'comment_id': 1327454192, 'comment_body': ""It's more modern to use f-strings instead of `.format()` (I know much of the rest of the codebase uses `.format()`, but I think we should work to use modern Python techniques where possible!)"", 'comment_created': datetime.datetime(2023, 9, 15, 15, 23, 18, tzinfo=datetime.timezone.utc), 'commenter': 'cafeclimber', 'type': 'User'}, {'comment_id': 1327462611, 'comment_body': ""I've seen this in some other places, but think it's caused some issues at least for me. I believe it's more idiomatic to import e.g. widgets from `QtWidgets`. I was always under the impression the `Qt` namespace was more for constants and enums like `Qt.AlignLeft` etc. When I run the test_examples test, I get loads of AttributeErrors about `QPushButton` not being a part of `PyQt5.Qt`"", 'comment_created': datetime.datetime(2023, 9, 15, 15, 29, 45, tzinfo=datetime.timezone.utc), 'commenter': 'cafeclimber', 'type': 'User'}, {'comment_id': 1327508714, 'comment_body': 'seconding that; a lot of the Python you find in-tree is from a Python 2.7-heritage (as that was all we had in GNU Radio 3.7), and we instantly bumped the requirement to Python 3.6 when we released GNU Radio 3.8, exactly because we wanted f-strings!', 'comment_created': datetime.datetime(2023, 9, 15, 16, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'marcusmueller', 'type': 'User'}, {'comment_id': 1327709197, 'comment_body': ""Yeah I've been trying to work through linter errors/warnings from rough and have found a lot of 2.7-migrated-to-3.1+ style code :P "", 'comment_created': datetime.datetime(2023, 9, 15, 19, 36, 17, tzinfo=datetime.timezone.utc), 'commenter': 'cafeclimber', 'type': 'User'}]","[{'commit_sha': 'a581ac7b9a715a306a4a001e6d5708ff33de2b1c', 'committer_username': 'R-ohit-B-isht', 'committer_name': 'Rohit Bisht', 'committer_email': None, 'commit_date': datetime.datetime(2020, 11, 15, 14, 15, 18, tzinfo=datetime.timezone.utc)}]",Rohit Bisht,74498290,,User,,121,,27,7

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
3030065,gnuradio,gnuradio/gnuradio,C++,1886,4985,234,480,15665,460,14,37,"[{'id': 1477980684, 'number': 6791, 'closed': None, 'created': datetime.datetime(2023, 8, 16, 19, 35, 31, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 170, 'deletions': 27, 'state': 'open'}, {'id': 1477502156, 'number': 6790, 'closed': None, 'created': datetime.datetime(2023, 8, 16, 13, 35, 58, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 6839, 'deletions': 12202, 'state': 'open'}, {'id': 1429290775, 'number': 6746, 'closed': None, 'created': datetime.datetime(2023, 7, 11, 11, 42, 21, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 1288, 'deletions': 45, 'state': 'open'}, {'id': 1387329555, 'number': 6718, 'closed': datetime.datetime(2023, 9, 5, 17, 1, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 11, 1, 23, 49, tzinfo=datetime.timezone.utc), 'time_taken': 7486659.0, 'time_delta': '86 days, 15:37:39', 'additions': 1244, 'deletions': 43, 'state': 'closed'}, {'id': 1387319521, 'number': 6717, 'closed': datetime.datetime(2023, 6, 11, 1, 22, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 11, 0, 57, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1485.0, 'time_delta': '0:24:45', 'additions': 1223, 'deletions': 43, 'state': 'closed'}, {'id': 1387318444, 'number': 6716, 'closed': datetime.datetime(2023, 6, 11, 0, 52, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 11, 0, 50, 48, tzinfo=datetime.timezone.utc), 'time_taken': 113.0, 'time_delta': '0:01:53', 'additions': 1080, 'deletions': 43, 'state': 'closed'}, {'id': 1247827355, 'number': 6536, 'closed': datetime.datetime(2023, 2, 28, 11, 39, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 20, 21, 14, 56, tzinfo=datetime.timezone.utc), 'time_taken': 656647.0, 'time_delta': '7 days, 14:24:07', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 1216602329, 'number': 6491, 'closed': datetime.datetime(2023, 1, 31, 13, 44, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 25, 13, 45, 11, tzinfo=datetime.timezone.utc), 'time_taken': 518378.0, 'time_delta': '5 days, 23:59:38', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 1211761832, 'number': 6479, 'closed': datetime.datetime(2023, 2, 1, 17, 4, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 20, 16, 4, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1040415.0, 'time_delta': '12 days, 1:00:15', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 1200094463, 'number': 6474, 'closed': datetime.datetime(2023, 2, 1, 17, 6, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 1, 17, 10, 53, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1318368.0, 'time_delta': '15 days, 6:12:48', 'additions': 21, 'deletions': 15, 'state': 'closed'}]"
