pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
608451961,src: mk: add build information option,"This pull request adds the '--info' option to the 'kw build' command.

Closes #183",False,222,https://api.github.com/repos/kworkflow/kworkflow/pulls/222,https://github.com/kworkflow/kworkflow/pull/222,closed,103,3,4,1,2,20,0,0,[],2021-04-03 22:17:27+00:00,2021-04-17 12:23:05+00:00,1173938.0,"13 days, 14:05:38","[{'comment_id': 606831667, 'comment_body': ""Let's capture the kernel version:\r\nmake kernelversion"", 'comment_created': datetime.datetime(2021, 4, 4, 17, 37, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 606832144, 'comment_body': 'You are assuming that `modules.order` always exists, which is not true. This file is generated after users compile their kernel; in other words, do not `cat` directly to `modules.order`. You need to check if this file exists first, also, add a test to capture this case.', 'comment_created': datetime.datetime(2021, 4, 4, 17, 40, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 606832165, 'comment_body': 'Why not use the function `say`?', 'comment_created': datetime.datetime(2021, 4, 4, 17, 41, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 606832393, 'comment_body': 'I prefer to isolate the information code in a single function instead of adding it in the parser option. This can be useful for the following reasons:\r\n1. It is easier to expand the build information feature;\r\n2. We can have a dedicated test for this function.', 'comment_created': datetime.datetime(2021, 4, 4, 17, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 606832486, 'comment_body': 'As I suggested in the previous comment, isolate the information in a single function and add proper test coverage. ', 'comment_created': datetime.datetime(2021, 4, 4, 17, 45, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 606863784, 'comment_body': 'Should the kernel version be a new information provided alongside the kernel release and the total number of compiled modules or should it replace the kernel release?', 'comment_created': datetime.datetime(2021, 4, 4, 22, 52, 33, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 606864037, 'comment_body': ""I didn't really think this through, I guess it does make sense to use `say`. Thanks!"", 'comment_created': datetime.datetime(2021, 4, 4, 22, 56, 2, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 608243811, 'comment_body': 'Yes', 'comment_created': datetime.datetime(2021, 4, 6, 23, 33, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 608244476, 'comment_body': 'Hmmmm... I was wondering, instead of relying on `cat modules.order | wc -l` (it require compilation), can we derive the total of drivers from being compiled from the `.config` file?', 'comment_created': datetime.datetime(2021, 4, 6, 23, 35, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 608269598, 'comment_body': ""If that's the case, what about doing  `grep -c =m .config`? to get the number of modules that will be compiled?"", 'comment_created': datetime.datetime(2021, 4, 7, 0, 55, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 608548346, 'comment_body': 'Yes, I think this grep command probably works fine. Maybe compare `cat modules.order | wc -l` and `cat modules.order | wc -l` output.', 'comment_created': datetime.datetime(2021, 4, 7, 10, 55, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094218, 'comment_body': 'How about:\r\n\r\n> This function retrieves and prints information related to the kernel that will be compiled.\r\n\r\nIn some way, ""building process"" sounds weird because the sort of information we show is not related to the building process.', 'comment_created': datetime.datetime(2021, 4, 10, 21, 16, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094327, 'comment_body': '/"".config""/\'.config\'/', 'comment_created': datetime.datetime(2021, 4, 10, 21, 17, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094433, 'comment_body': 'You forgot to declare ""$flag"".', 'comment_created': datetime.datetime(2021, 4, 10, 21, 17, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094496, 'comment_body': '/""=m""/\'=m\'/', 'comment_created': datetime.datetime(2021, 4, 10, 21, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094612, 'comment_body': ""We don't need to complain about anything if the user does not have a local `.config` file; we just don't want to try the grep command."", 'comment_created': datetime.datetime(2021, 4, 10, 21, 19, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094870, 'comment_body': 'This should be outside of this condition. The same is true for `local kernel_version=$(get_kernel_version ""$flag"")` and `local kernel_name=$(get_kernel_release ""$flag"")`. The only thing that needs to be inside this function is the operations that deal with `.config`.', 'comment_created': datetime.datetime(2021, 4, 10, 21, 23, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094945, 'comment_body': ""Let's remove ID and use $LINENO."", 'comment_created': datetime.datetime(2021, 4, 10, 21, 24, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611094955, 'comment_body': 'e.g.,\r\n```\r\nassertEquals ""($LINENO)"" ""$expected_result"" ""${output}""\r\n```', 'comment_created': datetime.datetime(2021, 4, 10, 21, 24, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 611095418, 'comment_body': 'Now we have a specific help function inside mk.sh, please add this information in that part of the code (latest unstable).', 'comment_created': datetime.datetime(2021, 4, 10, 21, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': '3b1d87d1adfdbaa6e94a3d18a550f6ed325c94ff', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
612813745,src: mk: Remove unnecessary sound notification,"I noticed that when we run 'kw deploy --unknown-option' (and 'unknown-option' can be any invalid option name), we still get a notification when this command finished running. I believe this is an unexpected behaviour, as it doesn't happen with other commands that make use of the 'alert_completion' function.
To reproduce this, you have to be inside a kernel repository and run the command as described above.",False,230,https://api.github.com/repos/kworkflow/kworkflow/pulls/230,https://github.com/kworkflow/kworkflow/pull/230,closed,1,1,1,1,1,0,0,0,[],2021-04-10 01:43:20+00:00,2021-04-10 21:34:39+00:00,71479.0,19:51:19,[],"[{'commit_sha': 'd5116508ecb5c1e8b52463c018c31c444d9d9ed5', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
612814536,Describe commands more accurately in the documentation,This PR intends to make the commands described in both _documentation/content/installanduninstall.rst_ and  _documentation/content/tests.rst_ to be exactly how they're supposed to be run in the terminal.,False,231,https://api.github.com/repos/kworkflow/kworkflow/pulls/231,https://github.com/kworkflow/kworkflow/pull/231,closed,6,6,2,1,1,0,0,0,[],2021-04-10 01:50:19+00:00,2021-04-10 21:39:29+00:00,71350.0,19:49:10,[],"[{'commit_sha': '6a7ed0106ee7301ef236750c10a5508989bc7dd3', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
616739509,Remove 'kw boot' option,"This command isn't maintained, and it doesn't work. This PR removes it.",False,237,https://api.github.com/repos/kworkflow/kworkflow/pulls/237,https://github.com/kworkflow/kworkflow/pull/237,closed,1,19,2,1,1,0,0,0,[],2021-04-16 10:54:42+00:00,2021-04-16 23:12:51+00:00,44289.0,12:18:09,[],"[{'commit_sha': '9f633648bf397753e972203be4c890d717fa0b1e', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
623855443,Add error message for wrong commands set in the alert variables,"This PR adds a message in case the commands assigned to the alert variables 'sound_alert_command' and 'visual_alert_command' in the kworkflow.config file don't work.

I changed the testing command from ""echo"" to ""/bin/echo"", since the latter isn't a built-in, but a file in fact. This was done, so that the command_exists function returns 0 to the testing command. I don't know if this is the best approach, though.



Closes #219",False,247,https://api.github.com/repos/kworkflow/kworkflow/pulls/247,https://github.com/kworkflow/kworkflow/pull/247,closed,62,6,4,1,2,11,0,0,[],2021-04-27 00:27:39+00:00,2021-05-02 21:48:55+00:00,508876.0,"5 days, 21:21:16","[{'comment_id': 621667165, 'comment_body': 'Use this code style here:\r\n```\r\n[[ -x ""$(command -v $package)"" ]]\r\n```', 'comment_created': datetime.datetime(2021, 4, 27, 22, 44, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621667524, 'comment_body': 'Just for curiosity, why do we need `( $command )` why not just `""$command""`?', 'comment_created': datetime.datetime(2021, 4, 27, 22, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621668313, 'comment_body': 'Use `warning` instead of `complain`.\r\n\r\nI think it would be nice to show the value inside `${configurations[visual_alert_command]}` for the user. Same for the sound alert.', 'comment_created': datetime.datetime(2021, 4, 27, 22, 47, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621668880, 'comment_body': 'Maybe `22` (EINVAL).', 'comment_created': datetime.datetime(2021, 4, 27, 22, 48, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621669758, 'comment_body': '`$s`? Is that correct?', 'comment_created': datetime.datetime(2021, 4, 27, 22, 50, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621670113, 'comment_body': 'Maybe `output` instead of `ret`. Also, declare it as a `local` variable and all other variables that belong to this specific test.', 'comment_created': datetime.datetime(2021, 4, 27, 22, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621670280, 'comment_body': 'Do we need this?', 'comment_created': datetime.datetime(2021, 4, 27, 22, 51, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 621671496, 'comment_body': 'We want to avoid the ID variable now. You can drop it from this test and replace all occurrences of `$ID` with `$LINENO`.', 'comment_created': datetime.datetime(2021, 4, 27, 22, 54, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 622634343, 'comment_body': '`( $ command )` retrieves the first word of the whole command. So, for instance, suppose we have a command like\r\n`notify-send -i checkbox -t 10000 ""kw"" ""Command: \\""$COMMAND\\"" completed!"" &`\r\nIf I do `package=""$command""`, I\'ll have the command entirely, and I believe we only need the first word of it. And to get the first word, I did ( $command ). \r\nDoes that make sense?', 'comment_created': datetime.datetime(2021, 4, 28, 23, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 622643063, 'comment_body': 'What\'s ""this"" exactly? hehe :-)', 'comment_created': datetime.datetime(2021, 4, 28, 23, 52, 8, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 622644337, 'comment_body': ""I tried to follow the test done by the `alert_completion_visual_alert_Test` function right above this one. But looking at it now, I can't seem to find any variable named `s`. My bad!\r\nThat also makes me wonder why the `alert_completion_visual_alert_Test` function mentions a `v` variable and where it comes from."", 'comment_created': datetime.datetime(2021, 4, 28, 23, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}]","[{'commit_sha': '78ef408969778bb99712647be74627f51e7cc973', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
623880707,run_tests: remove warning when running ./run_tests.sh list,"When `./run_tests.sh list` is run, the following warning appears:
`./run_tests.sh: line 179: local: can only be used in a function`
This PR fixes the warning by declaring the 'index' variable globally.",True,248,https://api.github.com/repos/kworkflow/kworkflow/pulls/248,https://github.com/kworkflow/kworkflow/pull/248,closed,1,1,1,1,1,0,0,0,[],2021-04-27 00:56:13+00:00,2021-04-27 22:58:51+00:00,79358.0,22:02:38,[],"[{'commit_sha': 'a4afaa00d9de06234f03b9e7d6121156147ec58e', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
635952139,Fix 'kw statistics --year' option,"The [%m](url) bit shouldn't be included, as we only need the `%Y` part to deal with the years in the command.",False,256,https://api.github.com/repos/kworkflow/kworkflow/pulls/256,https://github.com/kworkflow/kworkflow/pull/256,closed,58,27,4,1,9,4,0,0,[],2021-05-09 14:57:19+00:00,2021-05-23 20:46:31+00:00,1230552.0,"14 days, 5:49:12","[{'comment_id': 637552037, 'comment_body': ""The setUp function is automatically invoked before each test; for this reason, you don't need to call it explicitly (in general)."", 'comment_created': datetime.datetime(2021, 5, 23, 14, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 637552279, 'comment_body': 'I think this will be a problem soon because this output layout will change soon, as you pointed here https://github.com/kworkflow/kworkflow/issues/267.\r\n\r\nMaybe you can write this test in a way that we ignore these two first lines?', 'comment_created': datetime.datetime(2021, 5, 23, 14, 7, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 637552625, 'comment_body': ""You don't need to reuse this variable here; put 2021 directly in the `year_statistics`."", 'comment_created': datetime.datetime(2021, 5, 23, 14, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 637553671, 'comment_body': 'Use `\'` instead of `""` around strings that don\'t have a bash variable inside quotes. I know that many parts of the code don\'t follow it for legacy reasons, but let\'s trying to change it. Replate these quotes in your patch.', 'comment_created': datetime.datetime(2021, 5, 23, 14, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': '84645d5aef23a6733d3d60154ecf8b5a262edecf', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
655738019,Fix 'kw statistics' output,"The output of kw statistics was presented differently depending on the versions of Bash and the column command.
Instead of using the column utility, which can have different formatting options depending on where it comes from (util-linux, or bsdmanutils, or bsdextrautils), I chose to use `printf`, instead.
Another change was the type of variable of `statistics_opt`: it was an associative array, and I chose to let it be a normal array, since this type keeps the ordering.

This PR closes issues #267 and #280, which are pretty much relatable, and also addresses issue #276.",False,283,https://api.github.com/repos/kworkflow/kworkflow/pulls/283,https://github.com/kworkflow/kworkflow/pull/283,closed,56,66,2,2,2,3,0,0,[],2021-05-28 02:58:44+00:00,2021-05-30 14:57:49+00:00,215945.0,"2 days, 11:59:05","[{'comment_id': 641958005, 'comment_body': 'Any particular reason for not add double-quotes around `${option^}` and `${shared_data[$option]}`?', 'comment_created': datetime.datetime(2021, 5, 29, 16, 34, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 641963709, 'comment_body': ""I could add it to `${option^}`, it slipped my mind. Thanks for pointing that out.\r\nAs for `${shared_data[$option]}`, if I do double-quote it, then it won't work. `printf` is expecting a string, a number, and then three other strings (that is the row format I specified above). From my understanding, if I double-quote `${shared_data[$option]}`, then it will be passed as one whole thing. If I don't, then it will pass an element of the array at a time. Does it make sense?"", 'comment_created': datetime.datetime(2021, 5, 29, 17, 30, 9, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 642087402, 'comment_body': 'Yes, make sense. Thanks', 'comment_created': datetime.datetime(2021, 5, 30, 14, 50, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': '304fd159d23bd87316fb44426a50580347d73818', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '19cc4f78e3c9e08929f8705eee5b70c85e5eeed7', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
658577533,Remove unnecessary variables from kw file,"This PR removes the config_files_path and statistics_path variables set in the kw file, as well as makes the necessary adjustments for it.

Closes #287",False,293,https://api.github.com/repos/kworkflow/kworkflow/pulls/293,https://github.com/kworkflow/kworkflow/pull/293,closed,25,37,7,1,3,0,0,0,[],2021-06-01 01:20:15+00:00,2021-06-02 22:36:32+00:00,162977.0,"1 day, 21:16:17",[],"[{'commit_sha': '878987f7523058673c1275a864a7d55f47b12c05', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
660208930,Add how to build Linux tutorial,This PR adds a new tutorial on how to build the Linux kernel to the documentation. This has to do with issue #244.,False,297,https://api.github.com/repos/kworkflow/kworkflow/pulls/297,https://github.com/kworkflow/kworkflow/pull/297,closed,103,0,4,2,4,18,0,0,[],2021-06-02 16:18:06+00:00,2021-06-06 14:18:23+00:00,338417.0,"3 days, 22:00:17","[{'comment_id': 644371571, 'comment_body': 'Add a hyperlink in the string `installing kw` that points to `installanduninstall.rst`.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644371978, 'comment_body': 'Maybe add a note that says something like ""From now on, all commands will assume the kernel folder""', 'comment_created': datetime.datetime(2021, 6, 2, 22, 57, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644372541, 'comment_body': 'You can drop `own`, because you already use `your`.', 'comment_created': datetime.datetime(2021, 6, 2, 22, 59, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644373271, 'comment_body': 'Technically, all distros can support both strategies to get a config file. In this sense, I recommend not mentioning a specific distro here.', 'comment_created': datetime.datetime(2021, 6, 2, 23, 1, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644374277, 'comment_body': 'Maybe something like this:\r\n\r\n> How to build Linux Kernel for an x86_64 architecture.\r\n\r\nThe steps you described here are related to x86_64, and since we support cross-compile, I think it is a good idea to clarify that we are talking about x86.', 'comment_created': datetime.datetime(2021, 6, 2, 23, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644374525, 'comment_body': 'Add the reduced for as well, i.e., `kw b -n`', 'comment_created': datetime.datetime(2021, 6, 2, 23, 4, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644376012, 'comment_body': '![section](https://user-images.githubusercontent.com/3153524/120563109-cfff5680-c3d5-11eb-81ec-44e297411dba.png)\r\n\r\nIdk what happened here, but it looks like that `kw man` section disappeared. Can we make sure that we have a clear separation for kw man? Feel free to propose anything different.', 'comment_created': datetime.datetime(2021, 6, 2, 23, 8, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644376917, 'comment_body': 'Show a practical example here.', 'comment_created': datetime.datetime(2021, 6, 2, 23, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644377173, 'comment_body': 'Also comment about the short version: `kw b`', 'comment_created': datetime.datetime(2021, 6, 2, 23, 12, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644377557, 'comment_body': 'Add a tiny explanation about the `-jNUMBER` flag. I think it is important to highlight that this command will handle this for users.', 'comment_created': datetime.datetime(2021, 6, 2, 23, 13, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 644410422, 'comment_body': '@rodrigosiqueira I added a new commit for creating a section for the manual.', 'comment_created': datetime.datetime(2021, 6, 3, 0, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 644895441, 'comment_body': 'I think it would be nice to expand this a little bit, when I first tried to do this I got confused when my arch config didnt work in a ubuntu machine. Maybe a disclaimer that you need to use a .config file from the same distribution on which you want to use the kernel on?', 'comment_created': datetime.datetime(2021, 6, 3, 15, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 644896624, 'comment_body': 'how about: ""To change this option, go into your kworkflow.config and look for""', 'comment_created': datetime.datetime(2021, 6, 3, 15, 32, 25, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 644897223, 'comment_body': 'I don´t know if we need this last ,', 'comment_created': datetime.datetime(2021, 6, 3, 15, 33, 9, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 644899589, 'comment_body': 'Maybe we should clarify how exactly kw infers the `NUMBER` number (I realized I also don´t know how it does it haha)', 'comment_created': datetime.datetime(2021, 6, 3, 15, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 644904096, 'comment_body': ""We don't 😆 "", 'comment_created': datetime.datetime(2021, 6, 3, 15, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 646042157, 'comment_body': 'maybe change machine to linux distribution?', 'comment_created': datetime.datetime(2021, 6, 5, 22, 14, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 646042722, 'comment_body': 'yep! that makes things more clear', 'comment_created': datetime.datetime(2021, 6, 5, 22, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}]","[{'commit_sha': 'abc8ba277dac5f43074452f83966bb446cb34590', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4c684aaa63ebb29f688d0016e180fecdcc957c8', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
662618502,Increase statistics test coverage,"This PR is part of #276. Test coverage was increased to ~93%, according to [Codecov](https://codecov.io/gh/magalilemes/kworkflow/src/increase_statistics_test/src/statistics.sh).",False,301,https://api.github.com/repos/kworkflow/kworkflow/pulls/301,https://github.com/kworkflow/kworkflow/pull/301,closed,50,11,1,1,3,10,0,0,[],2021-06-05 21:47:30+00:00,2021-06-11 11:21:57+00:00,480867.0,"5 days, 13:34:27","[{'comment_id': 646141078, 'comment_body': 'Double-quotes', 'comment_created': datetime.datetime(2021, 6, 6, 14, 31, 1, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 646141136, 'comment_body': 'Single-quote', 'comment_created': datetime.datetime(2021, 6, 6, 14, 31, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 646141364, 'comment_body': ""Fwiu here, you're testing an empty value which is nice. However, how about adding another test with an invalid month?"", 'comment_created': datetime.datetime(2021, 6, 6, 14, 32, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 646141411, 'comment_body': 'Try an invalid year.', 'comment_created': datetime.datetime(2021, 6, 6, 14, 33, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 646141489, 'comment_body': 'Nice use of `tail` :)', 'comment_created': datetime.datetime(2021, 6, 6, 14, 34, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 646146779, 'comment_body': 'Where in `output=$(statistics --day not_a_day 2> /dev/null)` exactly?', 'comment_created': datetime.datetime(2021, 6, 6, 15, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 646147274, 'comment_body': ""not_a_month isn't an empty value. I meant it to be an invalid month, somehow. Like someone was trying to invoke `kw statistics --month not_a_month`."", 'comment_created': datetime.datetime(2021, 6, 6, 15, 18, 25, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 647350633, 'comment_body': 'My bad... ignore my comment here.', 'comment_created': datetime.datetime(2021, 6, 8, 11, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 647354312, 'comment_body': ""Hmm... correct if I'm wrong, but `not_a_month` and `not_a_year` are just a random string that you're passing to `statistics`.  The test that I suggested in my previous comment was using something like `13` or `-3` in the month parameter."", 'comment_created': datetime.datetime(2021, 6, 8, 11, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 647354562, 'comment_body': 'Ignore my previous comment.', 'comment_created': datetime.datetime(2021, 6, 8, 11, 36, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': '2619378bebe4c22d64dd1d0cb1c97bf0ce4e4e34', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
666386226,Change output for test files not found,"This PR modifies the output when trying to individually run tests files that don't exist. The current output is

```
$ ./run_tests.sh test wrong_test_name
Test file  not found.
=========================================================
Total: 1 test file(s)
1 test file(s) NOT FOUND

Take a look at:
```

and I've changed it to be
```
Test file 'wrong_test_name' not found.
=========================================================
Total: 1 test file(s)
1 test file(s) NOT FOUND
```
Closes #284 ",False,313,https://api.github.com/repos/kworkflow/kworkflow/pulls/313,https://github.com/kworkflow/kworkflow/pull/313,closed,13,7,1,1,2,3,0,0,[],2021-06-09 23:48:43+00:00,2021-06-11 23:54:22+00:00,173139.0,"2 days, 0:05:39","[{'comment_id': 649266245, 'comment_body': 'why not use ""-n"" instead of ""! -z""?', 'comment_created': datetime.datetime(2021, 6, 10, 14, 58, 57, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 649911354, 'comment_body': 'Double-quote', 'comment_created': datetime.datetime(2021, 6, 11, 11, 43, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 649912049, 'comment_body': 'Double-quote', 'comment_created': datetime.datetime(2021, 6, 11, 11, 44, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': 'cea98095a733fc4fe50c4917b1926d1ac3b4d03b', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
669099111,Refactor statistics,This is related to #276 and tries to improve the current structure of the `src/statistics`.sh file.,False,330,https://api.github.com/repos/kworkflow/kworkflow/pulls/330,https://github.com/kworkflow/kworkflow/pull/330,closed,73,62,2,1,5,4,0,0,[],2021-06-13 18:54:51+00:00,2021-06-17 22:02:44+00:00,356873.0,"4 days, 3:07:53","[{'comment_id': 650565285, 'comment_body': '@rodrigosiqueira, do we want to keep the `local` declarations all together in the beginning of the function? you mentioned something like this', 'comment_created': datetime.datetime(2021, 6, 13, 19, 9, 24, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 650568096, 'comment_body': ""Yeah... let's do that since this can avoid shellcheck problems."", 'comment_created': datetime.datetime(2021, 6, 13, 19, 35, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 652231367, 'comment_body': 'I think there is a left over space!', 'comment_created': datetime.datetime(2021, 6, 15, 23, 30, 46, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}]","[{'commit_sha': '2096ac307ef00c85858c2bff2cde30d9ad43498d', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
670487478,Add development workflow page,"This PR adds a new documentation page that briefly explains what should be considered when developing for kw, pointing out specific pages related to some of the topics.",False,334,https://api.github.com/repos/kworkflow/kworkflow/pulls/334,https://github.com/kworkflow/kworkflow/pull/334,closed,128,0,4,1,2,12,0,0,[],2021-06-15 14:59:39+00:00,2021-06-20 13:35:13+00:00,426934.0,"4 days, 22:35:34","[{'comment_id': 652136596, 'comment_body': 'maybe: ""(...) to have your own local copy"" or ""(...) to have a local copy""', 'comment_created': datetime.datetime(2021, 6, 15, 20, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 652136971, 'comment_body': 'also, maybe ""clone the repository"" instead of ""our""?', 'comment_created': datetime.datetime(2021, 6, 15, 20, 44, 2, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 652137931, 'comment_body': 'maybe mention that we use shunit2?', 'comment_created': datetime.datetime(2021, 6, 15, 20, 45, 33, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 652140138, 'comment_body': 'It may be a good idea to explicit the development benefits of this, I think the way it is written may lead a new user to believe this is another way of using kw while it is primarily focused on making development more agile', 'comment_created': datetime.datetime(2021, 6, 15, 20, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 652144684, 'comment_body': 'not sure if this needs to be mentioned on the documentation, but by changing what comes after  the @ we can control the shfmt version so we should always use the same one that is being used in the github action. I don´t know enough about pre-commit to say if there is a way to set this to use always the latest version, but this may be something that will need constant updates otherwise. Every time shmft has a new release and we want to update it we need to remember to also update this part of the docs', 'comment_created': datetime.datetime(2021, 6, 15, 20, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 652145738, 'comment_body': ""I'm not sure if shfmt needs to be installed, I have a strong suspicion that there is docker black magic happening that configures shfmt automatically when you install the hook.\r\n(shellcheck I think really needs to be installed, their hooks seem to be configured differently)"", 'comment_created': datetime.datetime(2021, 6, 15, 20, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'alan-barzilay', 'type': 'User'}, {'comment_id': 652249273, 'comment_body': 'I think this line makes ""Development workflow"" become the first item in kw\'s documentation list. It think it makes sense for the development workflow to come in the last place.', 'comment_created': datetime.datetime(2021, 6, 15, 23, 49, 55, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}, {'comment_id': 652266432, 'comment_body': ""Unintuitively, `./kw --help` is an invalid option (although it gets you what you want, since invalid options trigger the printing of the help message). Maybe it shouldn't be like this, but since it is this line should read `./kw help`"", 'comment_created': datetime.datetime(2021, 6, 16, 0, 43, 5, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}, {'comment_id': 653995236, 'comment_body': 'It is important to highlight that some options may not work, such as `kw b` or `kw d`, because it requires a kernel. Maybe you can talk about a limitation around this approach.', 'comment_created': datetime.datetime(2021, 6, 17, 22, 8, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 653995895, 'comment_body': 'Highlight that we try to use the Sphinx way to document code.', 'comment_created': datetime.datetime(2021, 6, 17, 22, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 653999333, 'comment_body': ""s/ensure that our code is/ensure that your code is/\r\n\r\nhooks are something on the developer side, replace 'our' by 'your'."", 'comment_created': datetime.datetime(2021, 6, 17, 22, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 654002199, 'comment_body': 'It does not hurt to add a note about that. On the other hand, if we update shfmt version, we probably need to update the documentation.', 'comment_created': datetime.datetime(2021, 6, 17, 22, 16, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': '35d5d12d50ae3df3b34fdaf63aeed8abea108fac', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
674059209,Fix all occurences of SC2199,This PR replaces `$@` with either a `for` loop or `$*`.,False,342,https://api.github.com/repos/kworkflow/kworkflow/pulls/342,https://github.com/kworkflow/kworkflow/pull/342,closed,4,2,2,1,2,0,1,0,[{'name': 'shellcheck'}],2021-06-20 16:06:57+00:00,2021-06-20 18:01:12+00:00,6855.0,1:54:15,[],"[{'commit_sha': '15b0d17fff0d663a8c4ea5fbe905551a5fee4b07', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
677573485,New option to show hardware information,"Here's a draft of `kw device`, which, for now, only supports the `--local` option.

For storing the data, I got inspired by src/statistics.sh, and chose to have an associative array for each pieace of information. It's also called `shared_data`.

Each function for retrieving information behaves mostly the same: their main goal is to update the associative array with their corresponding value.

Two things that I see that could be improved:
1) The way the CPU frequency is stored. As for now, it's a whole string with tabs, letters and numbers:
```
		CPU MHz:                         799.951
		CPU max MHz:                     4900,0000
		CPU min MHz:                     400,0000
```
I think this should be just numbers. Maybe I could add more keys to `shared_data`, and have `cpu_currently`, `cpu_max`, `cpu_min`, and then associate it with the numbers above.

2) Same thing with how the storage devices information is stored. It's also a string, with the device name, and, after a few spaces, the information telling whether it's a rotational disk or not:
```
	nvme0n1   not rotational
```
I haven't thought about another way to handle this, keeping in mind that a machine could have more than one storage disk.

And I also haven't written any tests for this new file.

Any tips on what to change, improve and add?",False,345,https://api.github.com/repos/kworkflow/kworkflow/pulls/345,https://github.com/kworkflow/kworkflow/pull/345,closed,681,1,6,3,12,29,0,0,[],2021-06-25 02:30:41+00:00,2021-07-27 01:49:45+00:00,2762344.0,"31 days, 23:19:04","[{'comment_id': 659229651, 'comment_body': 'How about converting the memory size to G? Maybe you can have both information, kB and G.', 'comment_created': datetime.datetime(2021, 6, 26, 22, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 659229927, 'comment_body': ""Hmmm... I'm not too fond of the idea of storing all of these CPU data in a single variable. It will be better if you have a key per option and only save the raw value."", 'comment_created': datetime.datetime(2021, 6, 26, 22, 16, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 659229951, 'comment_body': 'Add documentation', 'comment_created': datetime.datetime(2021, 6, 26, 22, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 659230178, 'comment_body': 'Maybe for the disk, we just want to know the type (sda, nvme, etc), the size, and maybe the vendor.', 'comment_created': datetime.datetime(2021, 6, 26, 22, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 659232835, 'comment_body': ""That's a nice approach, but we can get the OS information without external tools. Actually, we already have it :)\r\nSee `which_distro` and `detect_distro`, maybe we can move some of this function to your new file."", 'comment_created': datetime.datetime(2021, 6, 26, 22, 29, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 659232905, 'comment_body': 'I prefer one or two spaces instead of tabs.', 'comment_created': datetime.datetime(2021, 6, 26, 22, 29, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 661848348, 'comment_body': 'Maybe [`numfmt`](https://www.gnu.org/software/coreutils/manual/html_node/numfmt-invocation.html) can help here!', 'comment_created': datetime.datetime(2021, 6, 30, 22, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}, {'comment_id': 662259093, 'comment_body': 'uouuu... numfmt looks really nice!', 'comment_created': datetime.datetime(2021, 7, 1, 12, 49, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667335235, 'comment_body': 'Maybe add a summary about this `device` feature.', 'comment_created': datetime.datetime(2021, 7, 10, 12, 45, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667335620, 'comment_body': ""Hmmm... I'm wondering, should we check if we can read `/proc/meminfo` first?"", 'comment_created': datetime.datetime(2021, 7, 10, 12, 49, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667336552, 'comment_body': 'Since we are looking for `/`, it might be better to call this ""root path"".', 'comment_created': datetime.datetime(2021, 7, 10, 12, 58, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667373721, 'comment_body': 'Let\'s call it ""root filesystem device"" or similar', 'comment_created': datetime.datetime(2021, 7, 10, 18, 59, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667374120, 'comment_body': 'I would prefer that we separate the parser from the function that manages the action. In other words, create a new function dedicated to parser command-line options (e.g., `device_info_parser`) and keep this function as an entry point for `device_info`. You probably want to put this as the first function in this file.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 3, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667374335, 'comment_body': 'We will want to use the functions provided here in the deploy and maybe other features, for this reason, rename this to something like `device_info_data`.', 'comment_created': datetime.datetime(2021, 7, 10, 19, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 667375250, 'comment_body': 'Inspired by ChromeOS scripts, let call this function `learn_device()` or similar.\r\nSee: https://chromium.googlesource.com/chromiumos/platform/crosutils/+/master/update_kernel.sh#67', 'comment_created': datetime.datetime(2021, 7, 10, 19, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669975748, 'comment_body': ""Let's add this as a set of bullets. Something like this:\r\n\r\n[..] details such as:\r\n1. CPU architecture\r\n2. RAM\r\n..."", 'comment_created': datetime.datetime(2021, 7, 14, 21, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669977361, 'comment_body': 'I did not get why you use `currently` in the `cpu_currently`...', 'comment_created': datetime.datetime(2021, 7, 14, 21, 47, 18, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669978471, 'comment_body': ""Can we organize this struct like this?\r\n```\r\ndevice_info_data=(['ram']=''                   # RAM memory in MB\r\n                               ['cpu_model']=''       # CPU model as ...\r\n                               ['cpu_currently']=''\r\n                               ...\r\n```\r\nP.s.: Idk if this work"", 'comment_created': datetime.datetime(2021, 7, 14, 21, 49, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669981475, 'comment_body': 'I think this code does not belong to this commit. In the first commit, you just dealt with local.', 'comment_created': datetime.datetime(2021, 7, 14, 21, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669982155, 'comment_body': 'FWIW, you are getting the PCI address, right? If so, use a variable name that better describes this.', 'comment_created': datetime.datetime(2021, 7, 14, 21, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669986086, 'comment_body': 'When I use `kw device` to my test machine, I get:\r\n```\r\nVendor: 03:00.0 PCI bridge: Advanced Micro Devices\r\nPrefetchable memory:  Inc. [AMD] 300 Series Chipset PCIe Port (rev 02) (prog-if 00 [Normal decode]),\r\n```\r\nI think the above information is not super useful. When you run the command:\r\n```\r\nlspci  -v -s $(lspci | grep \' VGA \' | cut -d"" "" -f 1)\r\n```\r\nYou get a lot of interesting info, one of them is the ""Subsystem"" since it provides the GPU name and ""VGA compatible controller"" which gives the GPU provider. Let\'s collect this info.\r\n', 'comment_created': datetime.datetime(2021, 7, 14, 22, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669988201, 'comment_body': 'This function depends on `device_info`, which is not ideal. I want to use this function in the deploy context, rewrite it in a way that I can use `include devices.sh` in the `deploy.sh`, and just call this function to collect that hardware data that I need.', 'comment_created': datetime.datetime(2021, 7, 14, 22, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669989081, 'comment_body': ""Let's call this function `show_data`"", 'comment_created': datetime.datetime(2021, 7, 14, 22, 11, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669989168, 'comment_body': 'new line', 'comment_created': datetime.datetime(2021, 7, 14, 22, 11, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 669989266, 'comment_body': 'new line between these `ifs`', 'comment_created': datetime.datetime(2021, 7, 14, 22, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 670100366, 'comment_body': ""Just to make it clear that this isn't a static value, as it stores the _current_ frequency of the CPU at the time the command was invoked. "", 'comment_created': datetime.datetime(2021, 7, 15, 3, 8, 42, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 670107045, 'comment_body': ""Oops, I may have messed something up. The output was supposed to be:\r\n```\r\nGPU:\r\n  Vendor: Intel\r\n  Prefetchable memory: 256M\r\n  Vendor: NVIDIA\r\n  Prefetchable memory: 256M,32M\r\n```\r\nI'll make the changes to show GPU name and provider 😄"", 'comment_created': datetime.datetime(2021, 7, 15, 3, 31, 55, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 672679762, 'comment_body': ""You need to update your regex, in my case, I'm your function return `Advanced instead of ` Advanced Micro Devices`."", 'comment_created': datetime.datetime(2021, 7, 19, 22, 41, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672680399, 'comment_body': 'I think you can use `cmd_pci_address` or similar to make this part of the code easy to read. Maybe add two or three phrases that explain your intention here.', 'comment_created': datetime.datetime(2021, 7, 19, 22, 43, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': 'a236770d50217e153ecb3d54cecaca38438c8543', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f71d86c26bf78c4a430e3885e9a6cfae5fc72de0', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7fb68127cda60cc11efe45333082ab17addbf49b', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
678206027,Fix all occurrences of SC2086,"This PR pretty much adds double quotes around variables. The biggest change happened in the `src/vm.sh` file, more specifically, in the `vm_up` function, where I chose to call `cmd_manager`.",False,346,https://api.github.com/repos/kworkflow/kworkflow/pulls/346,https://github.com/kworkflow/kworkflow/pull/346,closed,52,46,15,1,6,0,1,0,[{'name': 'shellcheck'}],2021-06-25 22:11:13+00:00,2021-06-26 22:04:17+00:00,85984.0,23:53:04,[],"[{'commit_sha': 'f6b8bb5c5a0200e6e8df90ca29a96c944a0c6f0f', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
680468296,Improve bash_autocomplete file,"This PR fixes two minor things in src/bash_autocomplete.sh: it removes options from `kw_options` that are not supported by kw, and adds the ones that are supported and were missing. It also fixes [SC2207](https://github.com/koalaman/shellcheck/wiki/SC2207).",False,352,https://api.github.com/repos/kworkflow/kworkflow/pulls/352,https://github.com/kworkflow/kworkflow/pull/352,closed,3,3,1,2,3,1,0,0,[],2021-06-30 01:37:41+00:00,2021-07-01 13:05:24+00:00,127663.0,"1 day, 11:27:43","[{'comment_id': 661857313, 'comment_body': '`kw v` was dropped since the introduction of `kw -v`! See commit `f8af2abeae4265cc0d55fd9f3544427b02ffadd1` and pull request #169.', 'comment_created': datetime.datetime(2021, 6, 30, 22, 43, 27, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}]","[{'commit_sha': '9194878ea034b2210c50fa049c3986d925969764', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3cfe10d03bf49565eea728c7ce6250372c49dd7e', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
690075343,Introduce backup option,"This PR introduces `kw backup`. There are two options for this feature:
- By invoking `kw backup [path]`, a tar file named _backup.tar_ is created in the directory `[path]`
- If you run `kw backup --restore [tar file path]`, the tar file found in ` [tar file path]` will be extracted into `~/.kw`.",False,384,https://api.github.com/repos/kworkflow/kworkflow/pulls/384,https://github.com/kworkflow/kworkflow/pull/384,closed,661,1,15,3,8,82,0,0,[],2021-07-14 16:55:36+00:00,2021-08-24 23:32:35+00:00,3566219.0,"41 days, 6:36:59","[{'comment_id': 672698878, 'comment_body': '`~~~` should fit the title size perfectly.', 'comment_created': datetime.datetime(2021, 7, 19, 23, 25, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672699934, 'comment_body': ""For backup, let's assume `$PWD` if user does not provide `<path>`"", 'comment_created': datetime.datetime(2021, 7, 19, 23, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672700568, 'comment_body': 'Add return here.', 'comment_created': datetime.datetime(2021, 7, 19, 23, 28, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672701121, 'comment_body': ""Let's set `SILENT` as the default flag."", 'comment_created': datetime.datetime(2021, 7, 19, 23, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672701291, 'comment_body': 'Use `kw-backup.tar.gz` as a name.', 'comment_created': datetime.datetime(2021, 7, 19, 23, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672701902, 'comment_body': ""If the backup operation ends without any problem, let's tell the user by printing a successful message and tell them where the back can be found."", 'comment_created': datetime.datetime(2021, 7, 19, 23, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 672702129, 'comment_body': ""Let's assume `$PWD` as the default path."", 'comment_created': datetime.datetime(2021, 7, 19, 23, 32, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684183164, 'comment_body': ""Let's use `$HOME/.cache/kw/tmp-backup`"", 'comment_created': datetime.datetime(2021, 8, 6, 12, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684184060, 'comment_body': ""let's use `[[ ! -f ...]]`"", 'comment_created': datetime.datetime(2021, 8, 6, 12, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684184665, 'comment_body': 'Use `mkdir -p`; otherwise, you will see an error message if the directory already exists.', 'comment_created': datetime.datetime(2021, 8, 6, 12, 9, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684185101, 'comment_body': 'Use single-quote', 'comment_created': datetime.datetime(2021, 8, 6, 12, 10, 9, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684185437, 'comment_body': 'Double-quote `$ret`', 'comment_created': datetime.datetime(2021, 8, 6, 12, 10, 46, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684186106, 'comment_body': ""Maybe you can initialize `options_values['FORCE']` with an empty string and use `-n` in this check."", 'comment_created': datetime.datetime(2021, 8, 6, 12, 11, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684187635, 'comment_body': 'Can we create a helper function for that? Something like `get_file_extenstion`? We can add it in the `kwlib` (create a new commit for that).', 'comment_created': datetime.datetime(2021, 8, 6, 12, 14, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684189256, 'comment_body': 'How about creating a new function named `restore_config` and encapsulate this part in that function? This will simplify your tests as well.', 'comment_created': datetime.datetime(2021, 8, 6, 12, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684189761, 'comment_body': ""The same idea, let's create a function for that."", 'comment_created': datetime.datetime(2021, 8, 6, 12, 18, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684190564, 'comment_body': ""It looks like that we are starting to use `getopt`, let's use it here. See @joaoseckler PR for a reference."", 'comment_created': datetime.datetime(2021, 8, 6, 12, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684643028, 'comment_body': ""Let's highlight which data we can save."", 'comment_created': datetime.datetime(2021, 8, 7, 15, 3, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684643253, 'comment_body': 'Maybe: This file deals with backing up and restoring kw data files stored under the KW_DATA_DIR directory.', 'comment_created': datetime.datetime(2021, 8, 7, 15, 5, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684643312, 'comment_body': 'I think this should be inside `backup_parser`.', 'comment_created': datetime.datetime(2021, 8, 7, 15, 6, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684643503, 'comment_body': ""let's call this function `parse_deploy_options`."", 'comment_created': datetime.datetime(2021, 8, 7, 15, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684643653, 'comment_body': 'Can we move `!` inside `[[ ...`?', 'comment_created': datetime.datetime(2021, 8, 7, 15, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684643917, 'comment_body': 'One idea, could you make a new PR where we abstract this `tar` command to a generic function in `kwlib`? We use this tar command in other places; it would be nice if we make a function for that.', 'comment_created': datetime.datetime(2021, 8, 7, 15, 12, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684644006, 'comment_body': 'Double quote `$ret`', 'comment_created': datetime.datetime(2021, 8, 7, 15, 13, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684664618, 'comment_body': ""Don't you need to `-r` to make sure that we make a recursive copy?"", 'comment_created': datetime.datetime(2021, 8, 7, 18, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684664812, 'comment_body': 'The same idea, create str function to handle this.', 'comment_created': datetime.datetime(2021, 8, 7, 18, 40, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684665205, 'comment_body': 'How about something like this:\r\n```\r\nassertFalse ""($LINENO) - Tar file was not created"" \'[[ -f ""$SHUNIT_TMPDIR/kw-backup.tar.gz"" ]]\'\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684665274, 'comment_body': ""Another valid test should be uncompressed kw-backup.tar.gz and check if all expected files are there. I'm suggesting this because it is possible to create an empty tar file."", 'comment_created': datetime.datetime(2021, 8, 7, 18, 46, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684665445, 'comment_body': 'Remember to add the backup option in the generic help, i.e, `kw -h`.', 'comment_created': datetime.datetime(2021, 8, 7, 18, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684665607, 'comment_body': 'Include the file name after `$path`, i.e., `kw-backup.tar.gz`', 'comment_created': datetime.datetime(2021, 8, 7, 18, 50, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684665868, 'comment_body': ""If I already have a `kw-backup.tar.gz` in the current folder, we will replace it. Let's add the date and time in the backup name; e.g., `kw-backup-2021-07-07_14-32-32.tar.gz`"", 'comment_created': datetime.datetime(2021, 8, 7, 18, 52, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684666212, 'comment_body': 'Add `-r`.', 'comment_created': datetime.datetime(2021, 8, 7, 18, 56, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684666862, 'comment_body': 'Add `--color=always`. It will make the output better to read :)', 'comment_created': datetime.datetime(2021, 8, 7, 19, 3, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684689272, 'comment_body': 'parse_backup_options, right? 😆', 'comment_created': datetime.datetime(2021, 8, 7, 23, 26, 43, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 684689644, 'comment_body': 'In src/help.sh? I did, or is it something else?', 'comment_created': datetime.datetime(2021, 8, 7, 23, 30, 44, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 684691041, 'comment_body': 'Yes, src/help.', 'comment_created': datetime.datetime(2021, 8, 7, 23, 49, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684691116, 'comment_body': 'Yes :P', 'comment_created': datetime.datetime(2021, 8, 7, 23, 49, 48, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685295422, 'comment_body': 'Add a test that checks:\r\n1. Empty `str`. What should be the behavior?\r\n2. Empty `str_remove`.\r\n3. Both strings are empty.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 27, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685296390, 'comment_body': 'Maybe `get_file_name_from_path`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 28, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685297242, 'comment_body': '1. Add a test that checks empty string.\r\n2. Path ended with `/something/lala/`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685298138, 'comment_body': 'pomodoro data instead of reports.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685302411, 'comment_body': 'Why do we need `.` at the end?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 35, 11, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685305112, 'comment_body': 'declare `local config_file`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 38, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685305476, 'comment_body': 'declare `local year`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685305694, 'comment_body': 'declare `local day`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 39, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685306009, 'comment_body': 'declare `local difference`', 'comment_created': datetime.datetime(2021, 8, 9, 15, 39, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685306329, 'comment_body': 'Add new line', 'comment_created': datetime.datetime(2021, 8, 9, 15, 39, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685306501, 'comment_body': 'Add a new line', 'comment_created': datetime.datetime(2021, 8, 9, 15, 40, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685307365, 'comment_body': 'Can we have two functions here? One for Pomodoro, another for statistics.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 41, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685308687, 'comment_body': ""Don't you need to copy some samples to make the test more realistic?"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 42, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685310114, 'comment_body': 'We have the command `tar -taf` that lists what is compressed in the tar file; maybe we can use it to make sure that we created a valid tarball.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 44, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685311924, 'comment_body': 'How can this path be valid? I thought that the suffix was dynamically generated.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 46, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685313501, 'comment_body': ""How about add a test using `echo 'n'`"", 'comment_created': datetime.datetime(2021, 8, 9, 15, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685314388, 'comment_body': 'Add some tests that check invalid options.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686257981, 'comment_body': 'Sure, there would be some duplicate code, but I get your point.', 'comment_created': datetime.datetime(2021, 8, 10, 19, 23, 8, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 687020554, 'comment_body': 'Compress everything inside the current folder tar just changed into, namely $KW_DATA_DIR', 'comment_created': datetime.datetime(2021, 8, 11, 17, 9, 2, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 687023012, 'comment_body': 'It is but I added a compressed file to the tests samples for testing purposes', 'comment_created': datetime.datetime(2021, 8, 11, 17, 12, 31, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 689094165, 'comment_body': 'Document the behavior of the user passes empty parameters.', 'comment_created': datetime.datetime(2021, 8, 15, 13, 59, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689094347, 'comment_body': 'Document the behavior if an empty string is passed to one of the parameters.', 'comment_created': datetime.datetime(2021, 8, 15, 14, 0, 35, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689094463, 'comment_body': '@kwy95 Could you review the documentation part?', 'comment_created': datetime.datetime(2021, 8, 15, 14, 1, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689094654, 'comment_body': 'Highlight `--force` with an underscore.', 'comment_created': datetime.datetime(2021, 8, 15, 14, 2, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689095522, 'comment_body': 'You create this function, but you did not use it.', 'comment_created': datetime.datetime(2021, 8, 15, 14, 9, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689095598, 'comment_body': 'I suppose we want to drop this in favor of restore_pomodoro and restore_statistics.', 'comment_created': datetime.datetime(2021, 8, 15, 14, 9, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689095904, 'comment_body': 'I think you can try to create a function that encapsulates this idea since it is shared between restore statistics and Pomodoro.', 'comment_created': datetime.datetime(2021, 8, 15, 14, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689095981, 'comment_body': '@kwy95 What is your feedback on this part?', 'comment_created': datetime.datetime(2021, 8, 15, 14, 12, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689096112, 'comment_body': 'Maybe I missed something, but did you added `n`?', 'comment_created': datetime.datetime(2021, 8, 15, 14, 13, 53, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689591831, 'comment_body': 'Enclose placeholders in asterisks: `*<path>*`', 'comment_created': datetime.datetime(2021, 8, 16, 14, 33, 25, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 689593210, 'comment_body': 'Enclose variable a file name in double asterisks: `**KW_DATA_DIR**`', 'comment_created': datetime.datetime(2021, 8, 16, 14, 34, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 689625729, 'comment_body': 'Drop the parentheses from `path` here.', 'comment_created': datetime.datetime(2021, 8, 16, 15, 13, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 689655533, 'comment_body': 'Yes, [here](https://github.com/kworkflow/kworkflow/pull/384/files#diff-432214475775693514da4e82867c3b45b6cb029df81d97dc5cc2ebacbe9748f3R81)', 'comment_created': datetime.datetime(2021, 8, 16, 15, 49, 41, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 689768837, 'comment_body': 'Enclose flags and code in double backticks, documents and files in double asterisks, and variables and palceholders in single asterisks.', 'comment_created': datetime.datetime(2021, 8, 16, 18, 35, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 689789525, 'comment_body': ""It's optional, so should it be [<path>] instead?"", 'comment_created': datetime.datetime(2021, 8, 16, 19, 8, 32, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 689811713, 'comment_body': ""Yes, if it's optional it should be square brackets, parentheses are used for grouping."", 'comment_created': datetime.datetime(2021, 8, 16, 19, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 690299854, 'comment_body': 'If we merge this PR https://github.com/kworkflow/kworkflow/pull/413 I suppose we can replace this `tar..` command, right?', 'comment_created': datetime.datetime(2021, 8, 17, 11, 58, 5, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690300362, 'comment_body': 'Add a test that checks this condition.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 58, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690301032, 'comment_body': 'Incomplete comment.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 59, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690302795, 'comment_body': ""let's use kw_parse and kw_parse_get_errors"", 'comment_created': datetime.datetime(2021, 8, 17, 12, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690303048, 'comment_body': 'Did you add a test that reaches this condition?', 'comment_created': datetime.datetime(2021, 8, 17, 12, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690303776, 'comment_body': 'uouuuu... mapfile :)\r\nAdd a brief comment that explains what these set of line goals are.', 'comment_created': datetime.datetime(2021, 8, 17, 12, 3, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690304395, 'comment_body': 'can we replace this with `compare_command_sequence`?', 'comment_created': datetime.datetime(2021, 8, 17, 12, 4, 17, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690347241, 'comment_body': 'yep', 'comment_created': datetime.datetime(2021, 8, 17, 13, 1, 31, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 694734954, 'comment_body': '@magalilemes \r\nCould you update this line to use the new version of `generate_tarbal`?', 'comment_created': datetime.datetime(2021, 8, 24, 10, 45, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': 'ddd2fa0c910143044545290f470ecc239b81017b', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fd95bee34046b9ca213466071c1127d5bacab83', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '780b9c58b23cd644fb2e596f006caaff28a65851', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
704306454,Add option to get .config file to configm,"This PR introduces `--fetch` to `kw configm`, which can be used with `--optimize` and `--remote.` Below are a few usage examples:

`kw configm --fetch` gets the .config file from the local machine.
`kw configm --fetch --remote user@ip:port` gets the .config file from the specified machine.
`kw configm --fetch --optimize --remote user@ip:port` runs make localmodconfig to get an optimized .config from the remote machine.

Relates to #147.",False,403,https://api.github.com/repos/kworkflow/kworkflow/pulls/403,https://github.com/kworkflow/kworkflow/pull/403,closed,609,85,10,5,19,30,0,0,[],2021-08-05 02:43:46+00:00,2021-09-24 21:11:48+00:00,4386482.0,"50 days, 18:28:02","[{'comment_id': 684309852, 'comment_body': ""I don't think we need to use `device_info.sh` and `get_os`. We can just use `which_distro`."", 'comment_created': datetime.datetime(2021, 8, 6, 15, 9, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684311605, 'comment_body': 'I think a better way to deal with that is:\r\n\r\n1. Check if the OS has `zcat /proc/config.gz` support. If yes, use it.\r\n2. If it does not have support, look at `/boot/config`.\r\n\r\nThe reason for that is the fact that `zcat` is something that can be enabled via kernel config.', 'comment_created': datetime.datetime(2021, 8, 6, 15, 11, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684315453, 'comment_body': ""Let's rely on `populate_remote_info`"", 'comment_created': datetime.datetime(2021, 8, 6, 15, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684316340, 'comment_body': ""Again, I think we should use `which_distro` for simplicity's sake."", 'comment_created': datetime.datetime(2021, 8, 6, 15, 18, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686751158, 'comment_body': ""let's return inside each `if`"", 'comment_created': datetime.datetime(2021, 8, 11, 11, 44, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686752152, 'comment_body': ""let's add `--force`"", 'comment_created': datetime.datetime(2021, 8, 11, 11, 46, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686752377, 'comment_body': ""let's add `-s`"", 'comment_created': datetime.datetime(2021, 8, 11, 11, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686752704, 'comment_body': 'What does` ^-` means here? Do we really need it?', 'comment_created': datetime.datetime(2021, 8, 11, 11, 47, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686752882, 'comment_body': ""let's add `--description`"", 'comment_created': datetime.datetime(2021, 8, 11, 11, 47, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686753563, 'comment_body': ""Let's review this help; we need to update it (see my comments in the getopt part)"", 'comment_created': datetime.datetime(2021, 8, 11, 11, 48, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686754087, 'comment_body': 'declare `ret` as a local variable.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686756367, 'comment_body': 'Explain a little bit more about what do you mean by `fetch`. For example, it elaborates that we can use it for local, remote, and VM. Also, explain if it will replace the current `.config`, etc.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 52, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686758180, 'comment_body': 'We cannot just replace the current `.config`; you first need to check if there is a `.config` file. Next, if the user is not using `--force`, ask them if they want to replace the current .config file.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 55, 41, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686758506, 'comment_body': ""Quote '/proc/config.gz'"", 'comment_created': datetime.datetime(2021, 8, 11, 11, 56, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686759037, 'comment_body': ""let's use `$flag` variable (as a parameter), and set it to `SILENT` by default."", 'comment_created': datetime.datetime(2021, 8, 11, 11, 56, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686759469, 'comment_body': 'Where are all tests for this commit?', 'comment_created': datetime.datetime(2021, 8, 11, 11, 57, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686759954, 'comment_body': 'Add `--optimize` in its own bullet.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 58, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686760699, 'comment_body': 'At the end of this parser, you need to check if `--optimize` was passed alongside `--fetch`; otherwise, you should fail.', 'comment_created': datetime.datetime(2021, 8, 11, 11, 59, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686760894, 'comment_body': 'Again, where are the tests?', 'comment_created': datetime.datetime(2021, 8, 11, 11, 59, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686761748, 'comment_body': ""Use `$flag` instead of 'SILENT`. Notice that you can set `SILENT` to `$flag` as the default value."", 'comment_created': datetime.datetime(2021, 8, 11, 12, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686762276, 'comment_body': ""By default, let's initialize this variable as ''."", 'comment_created': datetime.datetime(2021, 8, 11, 12, 1, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686762882, 'comment_body': ""If you initialize `options_values['OPTIMIZE']` with '', we can use `-n` instead of `== 1`"", 'comment_created': datetime.datetime(2021, 8, 11, 12, 2, 31, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686764077, 'comment_body': 'I think this should be `target`.', 'comment_created': datetime.datetime(2021, 8, 11, 12, 4, 24, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686764700, 'comment_body': ""Let's use the `case` statement here to keep the consistency with the rest of the code."", 'comment_created': datetime.datetime(2021, 8, 11, 12, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686766367, 'comment_body': 'add quote around `/tmp/kw/.config`', 'comment_created': datetime.datetime(2021, 8, 11, 12, 7, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686767325, 'comment_body': ""let's call it remote2host."", 'comment_created': datetime.datetime(2021, 8, 11, 12, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 687963694, 'comment_body': ""In this specific case, it has to be set to SILENT since we don't want the command to appear above the output of the command."", 'comment_created': datetime.datetime(2021, 8, 12, 17, 53, 52, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 688050774, 'comment_body': 'I believe this is supposed to avoid things like `kw configm --save --get`. We were using the exact same thing before getopt as well.', 'comment_created': datetime.datetime(2021, 8, 12, 20, 10, 17, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 694398497, 'comment_body': 'Nice change (from -rm to -r)', 'comment_created': datetime.datetime(2021, 8, 24, 0, 37, 25, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}, {'comment_id': 694398828, 'comment_body': 'Maybe `if [[ -f ""${root}proc/config.gz"" ]] && command_exists \'zcat\'; then`?', 'comment_created': datetime.datetime(2021, 8, 24, 0, 38, 29, tzinfo=datetime.timezone.utc), 'commenter': 'joaoseckler', 'type': 'User'}]","[{'commit_sha': 'dc0100ee5d9e9ef8125ea0a8cdfc7c2497fe3f09', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2839862513f8787df9edaae1633bfbf6a95e1871', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fea2051b5f793775a3140af4f4f87cf710aff195', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6306d4beaf6bfb118724f9f376db1596694153af', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ffc63ce4e91f553cb929fd5aba4f800caa2f1865', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
704310525,Make kworkflow.config customizable with kw init ,"This allows customization of a few variables (arch, target and remote ones) from command line at the time a new `kworkflow.config` is created. For instance, one could run:

`kw init --arch arm --target remote` which would make the brand new kworkflow.config file have these variables set as desired.",False,404,https://api.github.com/repos/kworkflow/kworkflow/pulls/404,https://github.com/kworkflow/kworkflow/pull/404,closed,356,40,7,5,3,34,0,0,[],2021-08-05 02:52:31+00:00,2021-08-26 11:27:17+00:00,1845286.0,"21 days, 8:34:46","[{'comment_id': 684671215, 'comment_body': 'I think the comment does not match the `if` behavior. I think you switch the comments?', 'comment_created': datetime.datetime(2021, 8, 7, 19, 52, 34, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684671300, 'comment_body': ""Keep in mind that we don't want to accept `kworflow.config` in the long term; for this reason, let's add a warning to the user if kw finds this file. We can also ask something like `Do you want to update your config to file to the new way?`, and if the user says yes, we move the `kworkflow.config` to .kw."", 'comment_created': datetime.datetime(2021, 8, 7, 19, 53, 28, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684671369, 'comment_body': 'Add a comment (TODO), to drop `[[ -f ""$PWD/$CONFIG_FILENAME"" ]]` in the future.', 'comment_created': datetime.datetime(2021, 8, 7, 19, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684671481, 'comment_body': ""Since we are here, could you refactor the `init_parser`? Let's call it `parse_init_options`, and use getopt and `option_values`."", 'comment_created': datetime.datetime(2021, 8, 7, 19, 55, 27, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684671572, 'comment_body': 'I think this will be a widespread command for this feature and the `kw config`. Can we abstract this to a function? Something like, `set_config_value OPTION VALUE`.', 'comment_created': datetime.datetime(2021, 8, 7, 19, 56, 45, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684671960, 'comment_body': 'In my view, `kw init` should only be invoked inside the kernel. Let\'s add `if ! is_kernel_root ""$PWD""; then` before `init_parser`.', 'comment_created': datetime.datetime(2021, 8, 7, 20, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684672227, 'comment_body': ""Additionally, let's validate the arch passed by the user. Basically, we can accept any arch described in the folder `arch/`; if the arch specified by the user does not exist, we can fail and ask the user to use `--force` option if they are sure that they want to use that arch. We can also list the valid archs in the failure."", 'comment_created': datetime.datetime(2021, 8, 7, 20, 4, 52, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684673687, 'comment_body': 'This is the deprecated way to get these sorts of info, `populate_remote_info` and `remote_parameters[..]`', 'comment_created': datetime.datetime(2021, 8, 7, 20, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 684673841, 'comment_body': ""Let's validate the target. It can only be `vm`, `local`, or `remote`."", 'comment_created': datetime.datetime(2021, 8, 7, 20, 22, 55, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686230766, 'comment_body': ""It's something like: new users may not have the file, so we check before running the command that relies on the file so it doesn't throw an error for not having found that file.\r\nThe second comment `# Old users may not have used kw init yet, so they wouldn't have .kw` follows the same logic: since old users may not have .kw, we'll check if the directory exists before running a command that uses it. Does that make sense?"", 'comment_created': datetime.datetime(2021, 8, 10, 18, 41, 40, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 690248647, 'comment_body': 'Use `KW_DIR` instead of `.kw`', 'comment_created': datetime.datetime(2021, 8, 17, 10, 41, 30, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690250293, 'comment_body': ""Correct me if I'm wrong, but it looks like this line will fail after the above `if`. I think this should be under an `else` statement."", 'comment_created': datetime.datetime(2021, 8, 17, 10, 43, 54, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690252935, 'comment_body': 'Since we are here, I think we can fix this `expected` variable in general. We can convert it to an array and use compare_command_sequence to validate it.', 'comment_created': datetime.datetime(2021, 8, 17, 10, 47, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690253979, 'comment_body': '@kwy95 this documentation lgtm, since you refactored this part, what do you think?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 49, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690256155, 'comment_body': 'Maybe we can return 22 here?', 'comment_created': datetime.datetime(2021, 8, 17, 10, 52, 2, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690257579, 'comment_body': 'Maybe you can have a third option that specifies the path (we can consider  `$PWD/$KW_DIR/$name` the default); this can enable us to use this function for configuring local and global config files.', 'comment_created': datetime.datetime(2021, 8, 17, 10, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690258663, 'comment_body': 'Take a look at `kw_parse` and `kw_parse_get_errors`, you can also see an usage example in the `parse_deploy_options`.', 'comment_created': datetime.datetime(2021, 8, 17, 10, 55, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690259350, 'comment_body': ""Add a new line to the end of the file (just in line 114, you don't need to create line 115)."", 'comment_created': datetime.datetime(2021, 8, 17, 10, 57, 3, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690259617, 'comment_body': 'Single quotes.', 'comment_created': datetime.datetime(2021, 8, 17, 10, 57, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690260875, 'comment_body': ""@joaoseckler recently updated this function, and now you need to use `'expected_content'`"", 'comment_created': datetime.datetime(2021, 8, 17, 10, 59, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690261489, 'comment_body': 'Replace `($LINENO)` for `($LINENO):` in all your tests.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 0, 23, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690262939, 'comment_body': '`populate_remote_info` might fail if the user gives a bad parameter. Check this function return and let the user know if they pass something wrong.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 2, 38, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690263339, 'comment_body': 'Try to set an invalid remote.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 3, 15, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690265867, 'comment_body': 'Could you add a test that reaches this condition?', 'comment_created': datetime.datetime(2021, 8, 17, 11, 7, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690267449, 'comment_body': 'Could you add a test that validates this part?', 'comment_created': datetime.datetime(2021, 8, 17, 11, 9, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690267667, 'comment_body': 'Also, add a test for this part.', 'comment_created': datetime.datetime(2021, 8, 17, 11, 9, 57, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 690809939, 'comment_body': ""I don't know. Even if we return 22, kw directory will have been initialized, so I thought it was a good idea not to return anything and let the message tell the user that, even though the parameter was wrong, we initialized the directory."", 'comment_created': datetime.datetime(2021, 8, 18, 0, 25, 4, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 691660575, 'comment_body': 'Enclose `kworkflow.config` in double asterisks, do this for files and folder names.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 691661071, 'comment_body': ""`kw init` should be inside double backticks, as it's a command"", 'comment_created': datetime.datetime(2021, 8, 18, 23, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 691664875, 'comment_body': 'Enclose placeholders and variable names in single asterisks.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 13, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kwy95', 'type': 'User'}, {'comment_id': 695303174, 'comment_body': 'Maybe ""We will stop to support kworkflow.config in the kernel root directory in favor of using a .kw/ directory.""', 'comment_created': datetime.datetime(2021, 8, 25, 0, 24, 56, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 695303943, 'comment_body': 'Maybe something like, ""Do you want to migrate to the new configuration file approach? (Recommended)""', 'comment_created': datetime.datetime(2021, 8, 25, 0, 27, 21, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 695307427, 'comment_body': ""Why do we need `-i`? I don't think we need this since we already asked about the action in the `if` condition."", 'comment_created': datetime.datetime(2021, 8, 25, 0, 38, 12, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 695307840, 'comment_body': 'Maybe something like, ""It looks like that you already have a kw config file. Do you want to overwrite it?""', 'comment_created': datetime.datetime(2021, 8, 25, 0, 39, 33, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}]","[{'commit_sha': '6dd135b909b1b74886cddf379c98428ddf2eec5c', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '61eaee6613b99453913c60abe8961cce2a2c7805', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd13d3aa4396d3fd7f8bf116a8e4df297af256688', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36687b60ea791609aa3cfe904eb8244486106169', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': '559b58046eb4ba39f02e63bffdd1ef72fa1082e2', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
705156581,Ignore comments in kworkflow.config,"We were ignoring only lines that started with '#', so any other line that had a '#' in the middle of it wasn't ignored.",False,410,https://api.github.com/repos/kworkflow/kworkflow/pulls/410,https://github.com/kworkflow/kworkflow/pull/410,closed,1,1,1,1,1,0,0,0,[],2021-08-06 03:08:49+00:00,2021-08-07 20:36:58+00:00,149289.0,"1 day, 17:28:09",[],"[{'commit_sha': 'cc8a1be6c154805dbbaaf5a838e2be7e8559cfae', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
706072094,Compress and extract functions,This PR adds compression and extraction functions to kwlib.,False,413,https://api.github.com/repos/kworkflow/kworkflow/pulls/413,https://github.com/kworkflow/kworkflow/pull/413,closed,151,77,7,2,3,23,0,0,[],2021-08-08 16:38:36+00:00,2021-08-21 12:06:57+00:00,1106901.0,"12 days, 19:28:21","[{'comment_id': 685287672, 'comment_body': 'Can we have one extra parameter to indicate the compression type? Something optional.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 18, 14, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685288848, 'comment_body': 'Can we have a test that tries to compress a real file and directory? Next, we check if the output is correct.', 'comment_created': datetime.datetime(2021, 8, 9, 15, 19, 40, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685289158, 'comment_body': ""Let's validate the path passed by the user."", 'comment_created': datetime.datetime(2021, 8, 9, 15, 20, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685290985, 'comment_body': 'Actually, instead of creating this function, how about move the function `generate_tarball` from `remote.sh` to `kwlib.sh` and rework it based on your current version?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 22, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685291394, 'comment_body': ""The same idea, let's verify these paths."", 'comment_created': datetime.datetime(2021, 8, 9, 15, 22, 37, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685291778, 'comment_body': 'Maybe decompress tarball?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 23, 6, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 685292448, 'comment_body': 'Again, can we add a test that checks the command result? Also, can we validate it with invalid paths?', 'comment_created': datetime.datetime(2021, 8, 9, 15, 23, 50, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 686273995, 'comment_body': 'Maybe, but I feel like _extract_ is a more common word for this purpose.', 'comment_created': datetime.datetime(2021, 8, 10, 19, 48, 32, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 686278913, 'comment_body': 'This one test is doing that: it tries to compress the directory `tests/samples/statistics`, sees if the command used is correct and then checks if the compressed file was created', 'comment_created': datetime.datetime(2021, 8, 10, 19, 56, 28, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 689097779, 'comment_body': 'Can we define a default compression type here?', 'comment_created': datetime.datetime(2021, 8, 15, 14, 26, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689097862, 'comment_body': ""Let's define SILENT as the default flag."", 'comment_created': datetime.datetime(2021, 8, 15, 14, 27, 39, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689098190, 'comment_body': 'Can you check if we can validate this compression flag? Maybe the `tar` command provides something; if not, we can try to compress a dummy file just for checking (I would prefer the first option).', 'comment_created': datetime.datetime(2021, 8, 15, 14, 29, 25, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689098218, 'comment_body': 'Double-quote', 'comment_created': datetime.datetime(2021, 8, 15, 14, 29, 44, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689098248, 'comment_body': 'Double-quote', 'comment_created': datetime.datetime(2021, 8, 15, 14, 29, 59, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689098594, 'comment_body': 'I think you can replace all of these codes by using `compare_command_sequence`.', 'comment_created': datetime.datetime(2021, 8, 15, 14, 32, 22, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 689098857, 'comment_body': ""I'm not sure, but I think the option `-a` from tar command is an automatic mechanism to check the compression type and use it (see `-taf`). Let's use this option as a default."", 'comment_created': datetime.datetime(2021, 8, 15, 14, 34, 42, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 691672513, 'comment_body': 'Can you confirm if we need to add a dependency in the `setup.sh` for some of these compression options? For example, I think lzma requires something extra.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 34, 8, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 691673010, 'comment_body': 'I think you forgot to set a default compression.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 35, 29, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 691673761, 'comment_body': 'Did you check the `-a` option? Can we use it as the default?', 'comment_created': datetime.datetime(2021, 8, 18, 23, 37, 32, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 691674956, 'comment_body': 'It looks like that we are not testing this path. Could you add a test for that? Also, use single quotes.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 40, 49, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 691680405, 'comment_body': ""Yes, it's the same as `--auto-compress`, and I opted to set it as default a few lines below (line 457)"", 'comment_created': datetime.datetime(2021, 8, 18, 23, 55, 56, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}, {'comment_id': 691681329, 'comment_body': 'Nice, I missed that. Thanks.', 'comment_created': datetime.datetime(2021, 8, 18, 23, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'rodrigosiqueira', 'type': 'User'}, {'comment_id': 692271285, 'comment_body': ""From what I searched, lzip and zstd don't come by default on Ubuntu, so users need to install them before using them with tar"", 'comment_created': datetime.datetime(2021, 8, 19, 16, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'magalilemes', 'type': 'User'}]","[{'commit_sha': 'bc47e0db07b74c3c1f6bd2508e668ae8b7e28c36', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'baaf7e944e53ce4e25db0fa4c2f824f03a182ae8', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12
711772974,Fix warning from configm_test,This PR changes the order from the arguments in 'find' to get rid of the warning stating that -mindepth must come before -type.,False,420,https://api.github.com/repos/kworkflow/kworkflow/pulls/420,https://github.com/kworkflow/kworkflow/pull/420,closed,2,2,1,1,2,0,0,0,[],2021-08-12 23:24:53+00:00,2021-08-15 14:38:19+00:00,227606.0,"2 days, 15:13:26",[],"[{'commit_sha': 'dd2cb766665bcc807817ed94aa4c9dd3a472abb3', 'committer_username': 'magalilemes', 'committer_name': 'Magali Lemes', 'committer_email': None, 'commit_date': datetime.datetime(2019, 3, 24, 1, 56, 21, tzinfo=datetime.timezone.utc)}]",Magali Lemes,48871985,,User,,16,,12,12

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
133577268,kworkflow,kworkflow/kworkflow,Shell,89,127,10,43,1063,182,2,12,"[{'id': 1396821017, 'number': 866, 'closed': datetime.datetime(2023, 6, 21, 0, 25, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 17, 16, 11, 52, tzinfo=datetime.timezone.utc), 'time_taken': 288837.0, 'time_delta': '3 days, 8:13:57', 'additions': 50, 'deletions': 3, 'state': 'closed'}, {'id': 1022143941, 'number': 668, 'closed': datetime.datetime(2022, 8, 31, 22, 2, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 8, 10, 2, 24, 9, tzinfo=datetime.timezone.utc), 'time_taken': 1885111.0, 'time_delta': '21 days, 19:38:31', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 1012483744, 'number': 653, 'closed': datetime.datetime(2022, 7, 30, 14, 46, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 7, 30, 1, 32, 53, tzinfo=datetime.timezone.utc), 'time_taken': 47632.0, 'time_delta': '13:13:52', 'additions': 12, 'deletions': 8, 'state': 'closed'}, {'id': 952621910, 'number': 629, 'closed': datetime.datetime(2022, 6, 7, 13, 31, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 6, 1, 1, 32, 54, tzinfo=datetime.timezone.utc), 'time_taken': 561541.0, 'time_delta': '6 days, 11:59:01', 'additions': 13, 'deletions': 13, 'state': 'closed'}, {'id': 885478848, 'number': 580, 'closed': datetime.datetime(2022, 3, 26, 16, 1, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 3, 22, 0, 44, 38, tzinfo=datetime.timezone.utc), 'time_taken': 400599.0, 'time_delta': '4 days, 15:16:39', 'additions': 5, 'deletions': 5, 'state': 'closed'}, {'id': 720777386, 'number': 433, 'closed': datetime.datetime(2021, 8, 27, 0, 4, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 26, 19, 14, 43, tzinfo=datetime.timezone.utc), 'time_taken': 17372.0, 'time_delta': '4:49:32', 'additions': 21, 'deletions': 15, 'state': 'closed'}, {'id': 720056349, 'number': 430, 'closed': datetime.datetime(2021, 8, 26, 0, 54, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 25, 22, 58, 9, tzinfo=datetime.timezone.utc), 'time_taken': 6997.0, 'time_delta': '1:56:37', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 718364398, 'number': 428, 'closed': datetime.datetime(2021, 8, 24, 10, 41, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 2, 52, 28, tzinfo=datetime.timezone.utc), 'time_taken': 28163.0, 'time_delta': '7:49:23', 'additions': 17, 'deletions': 11, 'state': 'closed'}, {'id': 718327997, 'number': 427, 'closed': datetime.datetime(2021, 9, 6, 13, 29, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 24, 1, 10, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1167550.0, 'time_delta': '13 days, 12:19:10', 'additions': 66, 'deletions': 4, 'state': 'closed'}, {'id': 717228398, 'number': 426, 'closed': datetime.datetime(2021, 8, 26, 0, 52, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 22, 0, 37, 1, tzinfo=datetime.timezone.utc), 'time_taken': 346531.0, 'time_delta': '4 days, 0:15:31', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 711772974, 'number': 420, 'closed': datetime.datetime(2021, 8, 15, 14, 38, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 23, 24, 53, tzinfo=datetime.timezone.utc), 'time_taken': 227606.0, 'time_delta': '2 days, 15:13:26', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 706072094, 'number': 413, 'closed': datetime.datetime(2021, 8, 21, 12, 6, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 8, 16, 38, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1106901.0, 'time_delta': '12 days, 19:28:21', 'additions': 151, 'deletions': 77, 'state': 'closed'}, {'id': 705156581, 'number': 410, 'closed': datetime.datetime(2021, 8, 7, 20, 36, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 6, 3, 8, 49, tzinfo=datetime.timezone.utc), 'time_taken': 149289.0, 'time_delta': '1 day, 17:28:09', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 704310525, 'number': 404, 'closed': datetime.datetime(2021, 8, 26, 11, 27, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 2, 52, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1845286.0, 'time_delta': '21 days, 8:34:46', 'additions': 356, 'deletions': 40, 'state': 'closed'}, {'id': 704306454, 'number': 403, 'closed': datetime.datetime(2021, 9, 24, 21, 11, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 5, 2, 43, 46, tzinfo=datetime.timezone.utc), 'time_taken': 4386482.0, 'time_delta': '50 days, 18:28:02', 'additions': 609, 'deletions': 85, 'state': 'closed'}, {'id': 690075343, 'number': 384, 'closed': datetime.datetime(2021, 8, 24, 23, 32, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 16, 55, 36, tzinfo=datetime.timezone.utc), 'time_taken': 3566219.0, 'time_delta': '41 days, 6:36:59', 'additions': 661, 'deletions': 1, 'state': 'closed'}, {'id': 680468296, 'number': 352, 'closed': datetime.datetime(2021, 7, 1, 13, 5, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 1, 37, 41, tzinfo=datetime.timezone.utc), 'time_taken': 127663.0, 'time_delta': '1 day, 11:27:43', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 678206027, 'number': 346, 'closed': datetime.datetime(2021, 6, 26, 22, 4, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 22, 11, 13, tzinfo=datetime.timezone.utc), 'time_taken': 85984.0, 'time_delta': '23:53:04', 'additions': 52, 'deletions': 46, 'state': 'closed'}, {'id': 677573485, 'number': 345, 'closed': datetime.datetime(2021, 7, 27, 1, 49, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 25, 2, 30, 41, tzinfo=datetime.timezone.utc), 'time_taken': 2762344.0, 'time_delta': '31 days, 23:19:04', 'additions': 681, 'deletions': 1, 'state': 'closed'}, {'id': 674059209, 'number': 342, 'closed': datetime.datetime(2021, 6, 20, 18, 1, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 20, 16, 6, 57, tzinfo=datetime.timezone.utc), 'time_taken': 6855.0, 'time_delta': '1:54:15', 'additions': 4, 'deletions': 2, 'state': 'closed'}, {'id': 670487478, 'number': 334, 'closed': datetime.datetime(2021, 6, 20, 13, 35, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 14, 59, 39, tzinfo=datetime.timezone.utc), 'time_taken': 426934.0, 'time_delta': '4 days, 22:35:34', 'additions': 128, 'deletions': 0, 'state': 'closed'}, {'id': 669099111, 'number': 330, 'closed': datetime.datetime(2021, 6, 17, 22, 2, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 18, 54, 51, tzinfo=datetime.timezone.utc), 'time_taken': 356873.0, 'time_delta': '4 days, 3:07:53', 'additions': 73, 'deletions': 62, 'state': 'closed'}, {'id': 666403511, 'number': 314, 'closed': datetime.datetime(2021, 6, 15, 1, 29, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 10, 0, 31, 10, tzinfo=datetime.timezone.utc), 'time_taken': 435510.0, 'time_delta': '5 days, 0:58:30', 'additions': 64, 'deletions': 14, 'state': 'closed'}, {'id': 666386226, 'number': 313, 'closed': datetime.datetime(2021, 6, 11, 23, 54, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 9, 23, 48, 43, tzinfo=datetime.timezone.utc), 'time_taken': 173139.0, 'time_delta': '2 days, 0:05:39', 'additions': 13, 'deletions': 7, 'state': 'closed'}, {'id': 662618502, 'number': 301, 'closed': datetime.datetime(2021, 6, 11, 11, 21, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 5, 21, 47, 30, tzinfo=datetime.timezone.utc), 'time_taken': 480867.0, 'time_delta': '5 days, 13:34:27', 'additions': 50, 'deletions': 11, 'state': 'closed'}, {'id': 660208930, 'number': 297, 'closed': datetime.datetime(2021, 6, 6, 14, 18, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 2, 16, 18, 6, tzinfo=datetime.timezone.utc), 'time_taken': 338417.0, 'time_delta': '3 days, 22:00:17', 'additions': 103, 'deletions': 0, 'state': 'closed'}, {'id': 658577533, 'number': 293, 'closed': datetime.datetime(2021, 6, 2, 22, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 1, 1, 20, 15, tzinfo=datetime.timezone.utc), 'time_taken': 162977.0, 'time_delta': '1 day, 21:16:17', 'additions': 25, 'deletions': 37, 'state': 'closed'}, {'id': 655738019, 'number': 283, 'closed': datetime.datetime(2021, 5, 30, 14, 57, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 2, 58, 44, tzinfo=datetime.timezone.utc), 'time_taken': 215945.0, 'time_delta': '2 days, 11:59:05', 'additions': 56, 'deletions': 66, 'state': 'closed'}, {'id': 635952139, 'number': 256, 'closed': datetime.datetime(2021, 5, 23, 20, 46, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 9, 14, 57, 19, tzinfo=datetime.timezone.utc), 'time_taken': 1230552.0, 'time_delta': '14 days, 5:49:12', 'additions': 58, 'deletions': 27, 'state': 'closed'}, {'id': 623880707, 'number': 248, 'closed': datetime.datetime(2021, 4, 27, 22, 58, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 0, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 79358.0, 'time_delta': '22:02:38', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 623855443, 'number': 247, 'closed': datetime.datetime(2021, 5, 2, 21, 48, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 27, 0, 27, 39, tzinfo=datetime.timezone.utc), 'time_taken': 508876.0, 'time_delta': '5 days, 21:21:16', 'additions': 62, 'deletions': 6, 'state': 'closed'}, {'id': 616739509, 'number': 237, 'closed': datetime.datetime(2021, 4, 16, 23, 12, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 16, 10, 54, 42, tzinfo=datetime.timezone.utc), 'time_taken': 44289.0, 'time_delta': '12:18:09', 'additions': 1, 'deletions': 19, 'state': 'closed'}, {'id': 612814536, 'number': 231, 'closed': datetime.datetime(2021, 4, 10, 21, 39, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 10, 1, 50, 19, tzinfo=datetime.timezone.utc), 'time_taken': 71350.0, 'time_delta': '19:49:10', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 612813745, 'number': 230, 'closed': datetime.datetime(2021, 4, 10, 21, 34, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 10, 1, 43, 20, tzinfo=datetime.timezone.utc), 'time_taken': 71479.0, 'time_delta': '19:51:19', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 608451961, 'number': 222, 'closed': datetime.datetime(2021, 4, 17, 12, 23, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 3, 22, 17, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1173938.0, 'time_delta': '13 days, 14:05:38', 'additions': 103, 'deletions': 3, 'state': 'closed'}]"
