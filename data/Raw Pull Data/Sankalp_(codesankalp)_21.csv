pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
676033815,Implement presort method before GiST index building,"* Apply the new feature of [support function 11](https://www.postgresql.org/docs/14/gist-extensibility.html) in PostgreSQL14 to GiST to speed up the index building process and keep the query performance.
* Currently, modify inline function [`uint32_hilbert`](https://github.com/postgis/postgis/blob/b3874ecb488c3e04bcc26f701864a188788c472a/liblwgeom/gbox.c#L815) from `gbox.c` as the hash method to inline modules
* We conducted several tests and the detailed document is [here](https://docs.google.com/document/d/1m4oxBAsKCyjAnYmkCmQ0X_ltiid5tliFwF3rtdzlKsc/edit?usp=sharing). A brief test results table:

Index | Building Time (ms) | Plan Time (ms) | Buffer Hit Number | Excution Time (ms)
-- | -- | -- | -- | --
No index | 0 | 0.05 | 834 | 13.1
Default GiST | 450 | 0.05 | 12 | 0.016
Morton Pre-sort GiST | 130 | 0.05 | 15 | 0.046
Hilbert Pre-sort GiST | 140 | 0.05 | 15 | 0.047

* WiKi: https://trac.osgeo.org/postgis/wiki/ImplementSortingMethodsBeforeGistIndexBuilding
![Pre-sort GiST](https://user-images.githubusercontent.com/25524928/130458502-313360a1-01dd-46f0-8ca7-e9cf0147ee6c.png)


",False,619,https://api.github.com/repos/postgis/postgis/pulls/619,https://github.com/postgis/postgis/pull/619,closed,1358,99,11,20,1,11,0,0,[],2021-06-23 07:43:09+00:00,2021-09-02 19:09:42+00:00,6175593.0,"71 days, 11:26:33","[{'comment_id': 656874244, 'comment_body': ""this one needs to break ties too, if it's a full one you need to also order by the box itself"", 'comment_created': datetime.datetime(2021, 6, 23, 8, 26, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Komzpa', 'type': 'User'}, {'comment_id': 656876101, 'comment_body': 'a useful ND sort will be to sort by hilbert(x,y) then by z, m then tiebreaking just by binary representation of the box.', 'comment_created': datetime.datetime(2021, 6, 23, 8, 29, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Komzpa', 'type': 'User'}, {'comment_id': 656876621, 'comment_body': 'TODO: make sure we have only one copy of this in code', 'comment_created': datetime.datetime(2021, 6, 23, 8, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Komzpa', 'type': 'User'}, {'comment_id': 656894952, 'comment_body': 'I would like to know if I could make the hash function in `gbox.c` visible to other mudule', 'comment_created': datetime.datetime(2021, 6, 23, 8, 53, 19, tzinfo=datetime.timezone.utc), 'commenter': 'HanwGeek', 'type': 'User'}, {'comment_id': 656912165, 'comment_body': 'you\'ll have to remove ""static"" qualifier for that. alternatively there\'s ""lwinline"" thingy where you can move it and include to both places.', 'comment_created': datetime.datetime(2021, 6, 23, 9, 15, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Komzpa', 'type': 'User'}, {'comment_id': 657209873, 'comment_body': 'I plan to add sort support function which accepts `GIDX` as a multi-dimentional bounding box in the `gist_geometry_ops_nd`', 'comment_created': datetime.datetime(2021, 6, 23, 15, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'HanwGeek', 'type': 'User'}, {'comment_id': 668265403, 'comment_body': ""I'm not sure this is what the comment above says it is? It's only turned on in abbreviated mode, and then it is... not fed GSERIALIZED, but actually fed uint hash codes in the datums? (I think I'm reading what's going on below correctly, but still guessing at how the SortSupport API works.) Maybe rename things for a little more clarity."", 'comment_created': datetime.datetime(2021, 7, 12, 21, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'pramsey', 'type': 'User'}, {'comment_id': 698718865, 'comment_body': 'GIDX is used to store GIST Nd so you can consider using `gbox_get_sortable_hash` here for now\r\nhttps://github.com/postgis/postgis/blob/45e491242d9d63beb7eac0961b16439d00c93bd4/liblwgeom/gbox.c#L893', 'comment_created': datetime.datetime(2021, 8, 30, 18, 40, 15, tzinfo=datetime.timezone.utc), 'commenter': 'kalenikaliaksandr', 'type': 'User'}, {'comment_id': 698783975, 'comment_body': ""won't work on 32-bit machines since uint32_hilbert always returns 64-bit value.\r\nyou may see here how it was solved before: https://github.com/postgis/postgis/pull/429"", 'comment_created': datetime.datetime(2021, 8, 30, 20, 26, 3, tzinfo=datetime.timezone.utc), 'commenter': 'kalenikaliaksandr', 'type': 'User'}, {'comment_id': 698840895, 'comment_body': 'that is different kind of hash. hilbert is not aimed at uniqueness, but rather at spatial locality.', 'comment_created': datetime.datetime(2021, 8, 30, 22, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Komzpa', 'type': 'User'}, {'comment_id': 699213804, 'comment_body': 'yeah, sorry.\r\nI checked btree and it enables abbrev comparator only for 64bit. I think the same should be done for GIST sortsupport so at least it will work correctly. https://github.com/postgis/postgis/blob/5f4b44edb30c8609d3f812d1f0bc6fd07d750f0f/postgis/lwgeom_btree.c#L187-L196', 'comment_created': datetime.datetime(2021, 8, 31, 11, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kalenikaliaksandr', 'type': 'User'}]","[{'commit_sha': '113d0b518184460490d2e7ed455cf44b8f76a892', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2872af9fe4fcf5e2b43184e664afe3a9ab5d7905', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0978be9985f1dbb22a94d721bbdd99b24a940d1d', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98774726477daeca908ce113fe85b7b4d70fdb56', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73e725c1cfefca22fca4f047d64b7b8a56af7f5e', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7cb30165e95a21042a85771f08a8eaaae1769744', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '339634586f106c2e9e32e436ba9a09f424f9d45c', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7b5b334955a5fef63ee3efc43284ccac97cd8b4', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0b6157142edffc6a3ec0c1bf4803d4f2a0389cc8', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '28e7db53d73ffcb1abc7b8dd28e7a9fe51ffe669', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cd2ec5e2a3cab739ef628e0dc5f5e44804cdb274', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4adf474f8db96a4c0212346fd4a13d7afccb376', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f22999a6043cf9b479b436dedfcd67fbfef6d1d5', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9cfd263955563d9aea9d28543b3886c4f5c7b71f', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0575ea13cce7244e8fff481bdf09180bd3b5f45f', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad2b1d244d78fa6949128ea10b6fc9cbb9f0d7c1', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dfa61b625b15d3edc4d476da25e7539e90c42b02', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd26ddd3b2381770f1d642812107a788f3b1ff53', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ad69c0257c509b11e56a22ed6eb5472babb04deb', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6770adcd6eae94ae72a1963f4a18f5dea0497c16', 'committer_username': 'HanwGeek', 'committer_name': 'Han Wang', 'committer_email': None, 'commit_date': datetime.datetime(2017, 2, 3, 8, 26, 33, tzinfo=datetime.timezone.utc)}]",Han Wang,25524928,,User,,28,,52,66

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
4407129,postgis,postgis/postgis,PLpgSQL,382,1665,72,104,18067,7,25,7,"[{'id': 676033815, 'number': 619, 'closed': datetime.datetime(2021, 9, 2, 19, 9, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 23, 7, 43, 9, tzinfo=datetime.timezone.utc), 'time_taken': 6175593.0, 'time_delta': '71 days, 11:26:33', 'additions': 1358, 'deletions': 99, 'state': 'closed'}]"
