pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
697279841,[WIP] Prototype for timeseries plots,"## Description
This is another plot that I worked on under Google Summer of Code 2021. It includes overall time series and its components plots. 
High level design:

- **y** : from observed_data,
- **x** : from constant_data or observed_data dims.
- **x_holdout** : from constant_data or posterior_predictive dims
- **y_holdout** : from observed_data (or constant data)
- **y_ppc** : from posterior_predictive, default name same as y
- **forecast** : from posterior_predictive, default name same as y_holdout
- **components** : from posterior, default None

Please see the docstring in `files changed` for a more detailed explanation of the user API.

This plot successfully plots the overall time series for the matplotlib backend only. The added functionality is well-tested and nicely explained using examples in docstring.

Work yet to be done: Bokeh plot function is yet to be added may be in a different PR. Also, functionality to plot components is aimed to be covered in a future PR.


Plots:
![image](https://user-images.githubusercontent.com/32706356/127043867-915ed36d-2148-4d5e-8943-6298019137eb.png)

<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [ ] New features are properly documented (with an example if appropriate)?
- [ ] Includes new or updated tests to cover the new feature
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1747,https://api.github.com/repos/arviz-devs/arviz/pulls/1747,https://github.com/arviz-devs/arviz/pull/1747,closed,652,0,4,9,8,24,1,0,[{'name': 'GSOC'}],2021-07-26 19:07:32+00:00,2021-08-27 14:54:26+00:00,2749614.0,"31 days, 19:46:54","[{'comment_id': 678645664, 'comment_body': 'this assumes that the dim on which holdout should be done is the last one, which may not be the case. It should be `.isel(dim_name=slice(None, holdout)`\r\n\r\nAlso, the name of the stacked dimension should be `__sample__` instead to avoid name clashes. see #1613 for context', 'comment_created': datetime.datetime(2021, 7, 28, 20, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 678646223, 'comment_body': 'Stacking makes sure the newly generated dimension is the last one, but even so I think using `isel` would be better.', 'comment_created': datetime.datetime(2021, 7, 28, 20, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679965311, 'comment_body': '```suggestion\r\n    """"""Plot timeseries and its components.\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 14, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 685956578, 'comment_body': 'Quick initial comment, we should include examples somewhere, whether here or in the examples folder', 'comment_created': datetime.datetime(2021, 8, 10, 12, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686563838, 'comment_body': ""same comment I did for `plot_lm`. Is the grid *vital* to the plot? The default should be to use or not use a grid based on the matplotlib style users have chosen, not only it's easy to set, it will affect all plots at once without needing any extra argument nor call to `plt.` after calling ArviZ. Adding grid here means we want the grid to be/not be present and believe this to be important enough to overwrite the defaults set by the user."", 'comment_created': datetime.datetime(2021, 8, 11, 7, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686564053, 'comment_body': '```suggestion\r\n    y : str\r\n        variable name from observed_data\r\n```\r\n\r\nthe ""first line"" should have only the argument name, type info and optional/default info. Any extra description should go in the ""second line/paragraph"" that is indented.', 'comment_created': datetime.datetime(2021, 8, 11, 7, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686566184, 'comment_body': ""```suggestion\r\n    num_samples : int, default 100\r\n```\r\n\r\nin numpydoc style, using the `default xxx` idiom already indicates it's an optional argument because if it's not passed it will fall back to the default. The convention is also to use lowercase"", 'comment_created': datetime.datetime(2021, 8, 11, 7, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686567275, 'comment_body': '```suggestion\r\n    backend : {""matplotlib"",""bokeh""}, default ""matplotlib""\r\n        Select plotting backend\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 7, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686571795, 'comment_body': ""examples should go in both places ideally, not necessarily in this PR. Also, if you liked one model from ROS or another resource and used it as example for testing, it could be added as an example to ArviZ so it's available via `load_arviz_data`. Tests can't use examples that require internet connection but docs do. See #1132 "", 'comment_created': datetime.datetime(2021, 8, 11, 7, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686814717, 'comment_body': 'More general outside of this PR @utkarsh-maheshwari it would be good to have a medium length blog post explaining this and plot_lm using real world examples. Itll be a good exercise for you to practice technical communication in a more general audience voice, and be beneficial to the community. Importantly it will help us advertise your work so people are both well aware of it and how to use it!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816145, 'comment_body': 'These docstrings need to explain what these things are. Some of them explain when its necessary or not but not what they represent. Its somewhat obvious from the names but its better if you explain it well', 'comment_created': datetime.datetime(2021, 8, 11, 13, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816859, 'comment_body': ""This is an example for my comment above. I'm not entirely certain what a holdout vs forecast is just reading the docstring"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817355, 'comment_body': 'Thanks for adding these!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817961, 'comment_body': 'Do we need this commented out code block?', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686818100, 'comment_body': 'Same question here', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686990916, 'comment_body': 'Great advice! We have 10 days left for GSoC, which I would like to dedicate to documentation, examples and blog posts. Also, I will be available even after GSoC to maintain the functions.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686995227, 'comment_body': 'Oh.. sure!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686997056, 'comment_body': 'Oh, I miss that! I was over-concerned about the functionality and forgot to double-check the docstring! Thanks for pointing it out!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686998524, 'comment_body': ""Oh, that's an important observation! Thanks!"", 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686999076, 'comment_body': 'Haha! Thanks for reminding me to add these! ', 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000416, 'comment_body': 'No, I forgot to remove it. Was more concerned about the functionality!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000916, 'comment_body': 'Same answer here', 'comment_created': datetime.datetime(2021, 8, 11, 16, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687014063, 'comment_body': 'Hmm, Didn\'t think it in ""matplotlib style"" way! I do not feel the need of it now.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687078099, 'comment_body': 'Updated the docstring. Tried to be more clear this time. But I think holdout terminology may confuse the user if he/she is not aware of it!', 'comment_created': datetime.datetime(2021, 8, 11, 18, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}]","[{'commit_sha': 'dd656b6b90ab17ceb0163084e79ea821fb211da3', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f442ecb2d675e8a6bd95130904de9cf9672dc2', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f6d23923745cb2419417c90fa5260004694067', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1a69ff619964478e959fc43478efec2ede00d2f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc3bdfecb124d1929fe1438c44deea4de7c58c5', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ed5b473a699547db99c7355f61ef05843c3d0a', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a1cb67c8df1bce43f5004faf6ec3622fa61837', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d1071177313acc21b02984979c42bee122fe22', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c52825b19a220b495e9e9277ca47212d44c6a92f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
697279841,[WIP] Prototype for timeseries plots,"## Description
This is another plot that I worked on under Google Summer of Code 2021. It includes overall time series and its components plots. 
High level design:

- **y** : from observed_data,
- **x** : from constant_data or observed_data dims.
- **x_holdout** : from constant_data or posterior_predictive dims
- **y_holdout** : from observed_data (or constant data)
- **y_ppc** : from posterior_predictive, default name same as y
- **forecast** : from posterior_predictive, default name same as y_holdout
- **components** : from posterior, default None

Please see the docstring in `files changed` for a more detailed explanation of the user API.

This plot successfully plots the overall time series for the matplotlib backend only. The added functionality is well-tested and nicely explained using examples in docstring.

Work yet to be done: Bokeh plot function is yet to be added may be in a different PR. Also, functionality to plot components is aimed to be covered in a future PR.


Plots:
![image](https://user-images.githubusercontent.com/32706356/127043867-915ed36d-2148-4d5e-8943-6298019137eb.png)

<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [ ] New features are properly documented (with an example if appropriate)?
- [ ] Includes new or updated tests to cover the new feature
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1747,https://api.github.com/repos/arviz-devs/arviz/pulls/1747,https://github.com/arviz-devs/arviz/pull/1747,closed,652,0,4,9,8,24,1,0,[{'name': 'GSOC'}],2021-07-26 19:07:32+00:00,2021-08-27 14:54:26+00:00,2749614.0,"31 days, 19:46:54","[{'comment_id': 678645664, 'comment_body': 'this assumes that the dim on which holdout should be done is the last one, which may not be the case. It should be `.isel(dim_name=slice(None, holdout)`\r\n\r\nAlso, the name of the stacked dimension should be `__sample__` instead to avoid name clashes. see #1613 for context', 'comment_created': datetime.datetime(2021, 7, 28, 20, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 678646223, 'comment_body': 'Stacking makes sure the newly generated dimension is the last one, but even so I think using `isel` would be better.', 'comment_created': datetime.datetime(2021, 7, 28, 20, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679965311, 'comment_body': '```suggestion\r\n    """"""Plot timeseries and its components.\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 14, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 685956578, 'comment_body': 'Quick initial comment, we should include examples somewhere, whether here or in the examples folder', 'comment_created': datetime.datetime(2021, 8, 10, 12, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686563838, 'comment_body': ""same comment I did for `plot_lm`. Is the grid *vital* to the plot? The default should be to use or not use a grid based on the matplotlib style users have chosen, not only it's easy to set, it will affect all plots at once without needing any extra argument nor call to `plt.` after calling ArviZ. Adding grid here means we want the grid to be/not be present and believe this to be important enough to overwrite the defaults set by the user."", 'comment_created': datetime.datetime(2021, 8, 11, 7, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686564053, 'comment_body': '```suggestion\r\n    y : str\r\n        variable name from observed_data\r\n```\r\n\r\nthe ""first line"" should have only the argument name, type info and optional/default info. Any extra description should go in the ""second line/paragraph"" that is indented.', 'comment_created': datetime.datetime(2021, 8, 11, 7, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686566184, 'comment_body': ""```suggestion\r\n    num_samples : int, default 100\r\n```\r\n\r\nin numpydoc style, using the `default xxx` idiom already indicates it's an optional argument because if it's not passed it will fall back to the default. The convention is also to use lowercase"", 'comment_created': datetime.datetime(2021, 8, 11, 7, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686567275, 'comment_body': '```suggestion\r\n    backend : {""matplotlib"",""bokeh""}, default ""matplotlib""\r\n        Select plotting backend\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 7, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686571795, 'comment_body': ""examples should go in both places ideally, not necessarily in this PR. Also, if you liked one model from ROS or another resource and used it as example for testing, it could be added as an example to ArviZ so it's available via `load_arviz_data`. Tests can't use examples that require internet connection but docs do. See #1132 "", 'comment_created': datetime.datetime(2021, 8, 11, 7, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686814717, 'comment_body': 'More general outside of this PR @utkarsh-maheshwari it would be good to have a medium length blog post explaining this and plot_lm using real world examples. Itll be a good exercise for you to practice technical communication in a more general audience voice, and be beneficial to the community. Importantly it will help us advertise your work so people are both well aware of it and how to use it!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816145, 'comment_body': 'These docstrings need to explain what these things are. Some of them explain when its necessary or not but not what they represent. Its somewhat obvious from the names but its better if you explain it well', 'comment_created': datetime.datetime(2021, 8, 11, 13, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816859, 'comment_body': ""This is an example for my comment above. I'm not entirely certain what a holdout vs forecast is just reading the docstring"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817355, 'comment_body': 'Thanks for adding these!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817961, 'comment_body': 'Do we need this commented out code block?', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686818100, 'comment_body': 'Same question here', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686990916, 'comment_body': 'Great advice! We have 10 days left for GSoC, which I would like to dedicate to documentation, examples and blog posts. Also, I will be available even after GSoC to maintain the functions.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686995227, 'comment_body': 'Oh.. sure!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686997056, 'comment_body': 'Oh, I miss that! I was over-concerned about the functionality and forgot to double-check the docstring! Thanks for pointing it out!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686998524, 'comment_body': ""Oh, that's an important observation! Thanks!"", 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686999076, 'comment_body': 'Haha! Thanks for reminding me to add these! ', 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000416, 'comment_body': 'No, I forgot to remove it. Was more concerned about the functionality!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000916, 'comment_body': 'Same answer here', 'comment_created': datetime.datetime(2021, 8, 11, 16, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687014063, 'comment_body': 'Hmm, Didn\'t think it in ""matplotlib style"" way! I do not feel the need of it now.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687078099, 'comment_body': 'Updated the docstring. Tried to be more clear this time. But I think holdout terminology may confuse the user if he/she is not aware of it!', 'comment_created': datetime.datetime(2021, 8, 11, 18, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}]","[{'commit_sha': 'dd656b6b90ab17ceb0163084e79ea821fb211da3', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f442ecb2d675e8a6bd95130904de9cf9672dc2', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f6d23923745cb2419417c90fa5260004694067', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1a69ff619964478e959fc43478efec2ede00d2f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc3bdfecb124d1929fe1438c44deea4de7c58c5', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ed5b473a699547db99c7355f61ef05843c3d0a', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a1cb67c8df1bce43f5004faf6ec3622fa61837', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d1071177313acc21b02984979c42bee122fe22', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c52825b19a220b495e9e9277ca47212d44c6a92f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
697279841,[WIP] Prototype for timeseries plots,"## Description
This is another plot that I worked on under Google Summer of Code 2021. It includes overall time series and its components plots. 
High level design:

- **y** : from observed_data,
- **x** : from constant_data or observed_data dims.
- **x_holdout** : from constant_data or posterior_predictive dims
- **y_holdout** : from observed_data (or constant data)
- **y_ppc** : from posterior_predictive, default name same as y
- **forecast** : from posterior_predictive, default name same as y_holdout
- **components** : from posterior, default None

Please see the docstring in `files changed` for a more detailed explanation of the user API.

This plot successfully plots the overall time series for the matplotlib backend only. The added functionality is well-tested and nicely explained using examples in docstring.

Work yet to be done: Bokeh plot function is yet to be added may be in a different PR. Also, functionality to plot components is aimed to be covered in a future PR.


Plots:
![image](https://user-images.githubusercontent.com/32706356/127043867-915ed36d-2148-4d5e-8943-6298019137eb.png)

<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [ ] New features are properly documented (with an example if appropriate)?
- [ ] Includes new or updated tests to cover the new feature
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1747,https://api.github.com/repos/arviz-devs/arviz/pulls/1747,https://github.com/arviz-devs/arviz/pull/1747,closed,652,0,4,9,8,24,1,0,[{'name': 'GSOC'}],2021-07-26 19:07:32+00:00,2021-08-27 14:54:26+00:00,2749614.0,"31 days, 19:46:54","[{'comment_id': 678645664, 'comment_body': 'this assumes that the dim on which holdout should be done is the last one, which may not be the case. It should be `.isel(dim_name=slice(None, holdout)`\r\n\r\nAlso, the name of the stacked dimension should be `__sample__` instead to avoid name clashes. see #1613 for context', 'comment_created': datetime.datetime(2021, 7, 28, 20, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 678646223, 'comment_body': 'Stacking makes sure the newly generated dimension is the last one, but even so I think using `isel` would be better.', 'comment_created': datetime.datetime(2021, 7, 28, 20, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679965311, 'comment_body': '```suggestion\r\n    """"""Plot timeseries and its components.\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 14, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 685956578, 'comment_body': 'Quick initial comment, we should include examples somewhere, whether here or in the examples folder', 'comment_created': datetime.datetime(2021, 8, 10, 12, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686563838, 'comment_body': ""same comment I did for `plot_lm`. Is the grid *vital* to the plot? The default should be to use or not use a grid based on the matplotlib style users have chosen, not only it's easy to set, it will affect all plots at once without needing any extra argument nor call to `plt.` after calling ArviZ. Adding grid here means we want the grid to be/not be present and believe this to be important enough to overwrite the defaults set by the user."", 'comment_created': datetime.datetime(2021, 8, 11, 7, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686564053, 'comment_body': '```suggestion\r\n    y : str\r\n        variable name from observed_data\r\n```\r\n\r\nthe ""first line"" should have only the argument name, type info and optional/default info. Any extra description should go in the ""second line/paragraph"" that is indented.', 'comment_created': datetime.datetime(2021, 8, 11, 7, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686566184, 'comment_body': ""```suggestion\r\n    num_samples : int, default 100\r\n```\r\n\r\nin numpydoc style, using the `default xxx` idiom already indicates it's an optional argument because if it's not passed it will fall back to the default. The convention is also to use lowercase"", 'comment_created': datetime.datetime(2021, 8, 11, 7, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686567275, 'comment_body': '```suggestion\r\n    backend : {""matplotlib"",""bokeh""}, default ""matplotlib""\r\n        Select plotting backend\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 7, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686571795, 'comment_body': ""examples should go in both places ideally, not necessarily in this PR. Also, if you liked one model from ROS or another resource and used it as example for testing, it could be added as an example to ArviZ so it's available via `load_arviz_data`. Tests can't use examples that require internet connection but docs do. See #1132 "", 'comment_created': datetime.datetime(2021, 8, 11, 7, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686814717, 'comment_body': 'More general outside of this PR @utkarsh-maheshwari it would be good to have a medium length blog post explaining this and plot_lm using real world examples. Itll be a good exercise for you to practice technical communication in a more general audience voice, and be beneficial to the community. Importantly it will help us advertise your work so people are both well aware of it and how to use it!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816145, 'comment_body': 'These docstrings need to explain what these things are. Some of them explain when its necessary or not but not what they represent. Its somewhat obvious from the names but its better if you explain it well', 'comment_created': datetime.datetime(2021, 8, 11, 13, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816859, 'comment_body': ""This is an example for my comment above. I'm not entirely certain what a holdout vs forecast is just reading the docstring"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817355, 'comment_body': 'Thanks for adding these!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817961, 'comment_body': 'Do we need this commented out code block?', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686818100, 'comment_body': 'Same question here', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686990916, 'comment_body': 'Great advice! We have 10 days left for GSoC, which I would like to dedicate to documentation, examples and blog posts. Also, I will be available even after GSoC to maintain the functions.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686995227, 'comment_body': 'Oh.. sure!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686997056, 'comment_body': 'Oh, I miss that! I was over-concerned about the functionality and forgot to double-check the docstring! Thanks for pointing it out!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686998524, 'comment_body': ""Oh, that's an important observation! Thanks!"", 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686999076, 'comment_body': 'Haha! Thanks for reminding me to add these! ', 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000416, 'comment_body': 'No, I forgot to remove it. Was more concerned about the functionality!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000916, 'comment_body': 'Same answer here', 'comment_created': datetime.datetime(2021, 8, 11, 16, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687014063, 'comment_body': 'Hmm, Didn\'t think it in ""matplotlib style"" way! I do not feel the need of it now.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687078099, 'comment_body': 'Updated the docstring. Tried to be more clear this time. But I think holdout terminology may confuse the user if he/she is not aware of it!', 'comment_created': datetime.datetime(2021, 8, 11, 18, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}]","[{'commit_sha': 'dd656b6b90ab17ceb0163084e79ea821fb211da3', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f442ecb2d675e8a6bd95130904de9cf9672dc2', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f6d23923745cb2419417c90fa5260004694067', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1a69ff619964478e959fc43478efec2ede00d2f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc3bdfecb124d1929fe1438c44deea4de7c58c5', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ed5b473a699547db99c7355f61ef05843c3d0a', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a1cb67c8df1bce43f5004faf6ec3622fa61837', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d1071177313acc21b02984979c42bee122fe22', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c52825b19a220b495e9e9277ca47212d44c6a92f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
697279841,[WIP] Prototype for timeseries plots,"## Description
This is another plot that I worked on under Google Summer of Code 2021. It includes overall time series and its components plots. 
High level design:

- **y** : from observed_data,
- **x** : from constant_data or observed_data dims.
- **x_holdout** : from constant_data or posterior_predictive dims
- **y_holdout** : from observed_data (or constant data)
- **y_ppc** : from posterior_predictive, default name same as y
- **forecast** : from posterior_predictive, default name same as y_holdout
- **components** : from posterior, default None

Please see the docstring in `files changed` for a more detailed explanation of the user API.

This plot successfully plots the overall time series for the matplotlib backend only. The added functionality is well-tested and nicely explained using examples in docstring.

Work yet to be done: Bokeh plot function is yet to be added may be in a different PR. Also, functionality to plot components is aimed to be covered in a future PR.


Plots:
![image](https://user-images.githubusercontent.com/32706356/127043867-915ed36d-2148-4d5e-8943-6298019137eb.png)

<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [ ] New features are properly documented (with an example if appropriate)?
- [ ] Includes new or updated tests to cover the new feature
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1747,https://api.github.com/repos/arviz-devs/arviz/pulls/1747,https://github.com/arviz-devs/arviz/pull/1747,closed,652,0,4,9,8,24,1,0,[{'name': 'GSOC'}],2021-07-26 19:07:32+00:00,2021-08-27 14:54:26+00:00,2749614.0,"31 days, 19:46:54","[{'comment_id': 678645664, 'comment_body': 'this assumes that the dim on which holdout should be done is the last one, which may not be the case. It should be `.isel(dim_name=slice(None, holdout)`\r\n\r\nAlso, the name of the stacked dimension should be `__sample__` instead to avoid name clashes. see #1613 for context', 'comment_created': datetime.datetime(2021, 7, 28, 20, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 678646223, 'comment_body': 'Stacking makes sure the newly generated dimension is the last one, but even so I think using `isel` would be better.', 'comment_created': datetime.datetime(2021, 7, 28, 20, 56, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679965311, 'comment_body': '```suggestion\r\n    """"""Plot timeseries and its components.\r\n```', 'comment_created': datetime.datetime(2021, 7, 30, 14, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 685956578, 'comment_body': 'Quick initial comment, we should include examples somewhere, whether here or in the examples folder', 'comment_created': datetime.datetime(2021, 8, 10, 12, 10, 8, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686563838, 'comment_body': ""same comment I did for `plot_lm`. Is the grid *vital* to the plot? The default should be to use or not use a grid based on the matplotlib style users have chosen, not only it's easy to set, it will affect all plots at once without needing any extra argument nor call to `plt.` after calling ArviZ. Adding grid here means we want the grid to be/not be present and believe this to be important enough to overwrite the defaults set by the user."", 'comment_created': datetime.datetime(2021, 8, 11, 7, 18, 51, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686564053, 'comment_body': '```suggestion\r\n    y : str\r\n        variable name from observed_data\r\n```\r\n\r\nthe ""first line"" should have only the argument name, type info and optional/default info. Any extra description should go in the ""second line/paragraph"" that is indented.', 'comment_created': datetime.datetime(2021, 8, 11, 7, 19, 11, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686566184, 'comment_body': ""```suggestion\r\n    num_samples : int, default 100\r\n```\r\n\r\nin numpydoc style, using the `default xxx` idiom already indicates it's an optional argument because if it's not passed it will fall back to the default. The convention is also to use lowercase"", 'comment_created': datetime.datetime(2021, 8, 11, 7, 22, 18, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686567275, 'comment_body': '```suggestion\r\n    backend : {""matplotlib"",""bokeh""}, default ""matplotlib""\r\n        Select plotting backend\r\n```', 'comment_created': datetime.datetime(2021, 8, 11, 7, 24, 9, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686571795, 'comment_body': ""examples should go in both places ideally, not necessarily in this PR. Also, if you liked one model from ROS or another resource and used it as example for testing, it could be added as an example to ArviZ so it's available via `load_arviz_data`. Tests can't use examples that require internet connection but docs do. See #1132 "", 'comment_created': datetime.datetime(2021, 8, 11, 7, 30, 31, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686814717, 'comment_body': 'More general outside of this PR @utkarsh-maheshwari it would be good to have a medium length blog post explaining this and plot_lm using real world examples. Itll be a good exercise for you to practice technical communication in a more general audience voice, and be beneficial to the community. Importantly it will help us advertise your work so people are both well aware of it and how to use it!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 9, 44, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816145, 'comment_body': 'These docstrings need to explain what these things are. Some of them explain when its necessary or not but not what they represent. Its somewhat obvious from the names but its better if you explain it well', 'comment_created': datetime.datetime(2021, 8, 11, 13, 11, 21, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686816859, 'comment_body': ""This is an example for my comment above. I'm not entirely certain what a holdout vs forecast is just reading the docstring"", 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 16, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817355, 'comment_body': 'Thanks for adding these!', 'comment_created': datetime.datetime(2021, 8, 11, 13, 12, 53, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686817961, 'comment_body': 'Do we need this commented out code block?', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 36, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686818100, 'comment_body': 'Same question here', 'comment_created': datetime.datetime(2021, 8, 11, 13, 13, 45, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 686990916, 'comment_body': 'Great advice! We have 10 days left for GSoC, which I would like to dedicate to documentation, examples and blog posts. Also, I will be available even after GSoC to maintain the functions.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 27, 58, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686995227, 'comment_body': 'Oh.. sure!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 33, 39, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686997056, 'comment_body': 'Oh, I miss that! I was over-concerned about the functionality and forgot to double-check the docstring! Thanks for pointing it out!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 36, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686998524, 'comment_body': ""Oh, that's an important observation! Thanks!"", 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 686999076, 'comment_body': 'Haha! Thanks for reminding me to add these! ', 'comment_created': datetime.datetime(2021, 8, 11, 16, 38, 42, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000416, 'comment_body': 'No, I forgot to remove it. Was more concerned about the functionality!', 'comment_created': datetime.datetime(2021, 8, 11, 16, 40, 35, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687000916, 'comment_body': 'Same answer here', 'comment_created': datetime.datetime(2021, 8, 11, 16, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687014063, 'comment_body': 'Hmm, Didn\'t think it in ""matplotlib style"" way! I do not feel the need of it now.', 'comment_created': datetime.datetime(2021, 8, 11, 16, 59, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 687078099, 'comment_body': 'Updated the docstring. Tried to be more clear this time. But I think holdout terminology may confuse the user if he/she is not aware of it!', 'comment_created': datetime.datetime(2021, 8, 11, 18, 33, 2, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}]","[{'commit_sha': 'dd656b6b90ab17ceb0163084e79ea821fb211da3', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '11f442ecb2d675e8a6bd95130904de9cf9672dc2', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76f6d23923745cb2419417c90fa5260004694067', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1a69ff619964478e959fc43478efec2ede00d2f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dc3bdfecb124d1929fe1438c44deea4de7c58c5', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1ed5b473a699547db99c7355f61ef05843c3d0a', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3a1cb67c8df1bce43f5004faf6ec3622fa61837', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2d1071177313acc21b02984979c42bee122fe22', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c52825b19a220b495e9e9277ca47212d44c6a92f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
654752711,Fixed Posterior plot errors with boolean array.,"## Description
Plotted bar instead of hist for a boolean value.
Also, should HDI also be visible? I have assumed no. 

Fixes #1694
<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [ ] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [ ] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [ ] New features are properly documented (with an example if appropriate)?
- [ ] Includes new or updated tests to cover the new feature
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1707,https://api.github.com/repos/arviz-devs/arviz/pulls/1707,https://github.com/arviz-devs/arviz/pull/1707,closed,56,13,5,11,18,22,0,0,[],2021-05-27 10:07:51+00:00,2022-03-23 10:55:22+00:00,25922851.0,"300 days, 0:47:31","[{'comment_id': 650214182, 'comment_body': 'we should add an else and an error to make sure it fails informatively if anyone ever passed an array with object dtype for example', 'comment_created': datetime.datetime(2021, 6, 11, 19, 17, 7, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 650215078, 'comment_body': ""can you also add an assert with `get_xticklabels` or something like that to make sure they are not 0 and 1? We don't need to check every aspect of the plot, I propose this one because I think it's the easiest one and will catch breaking changes if we update the plot and change the labels for example"", 'comment_created': datetime.datetime(2021, 6, 11, 19, 18, 55, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 650237019, 'comment_body': 'Adding `raise TypeError(""Values Must be float, Integer or boolean"")` to the else. ', 'comment_created': datetime.datetime(2021, 6, 11, 20, 5, 19, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 650263726, 'comment_body': ""`axes.get_xticklabels()` returns \r\n`[Text(0, 0, 'False'), Text(1, 0, 'True')]` in boolean case\r\n\r\nNot very sure how to tackle this one. It needs some attention\r\n"", 'comment_created': datetime.datetime(2021, 6, 11, 21, 3, 47, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 650401774, 'comment_body': 'the initial condition is `if kind=kde and dtype=f` so this condition is too restrictive, I think it should be `if dtype=i or (dtype=f and kind=hist)`', 'comment_created': datetime.datetime(2021, 6, 12, 15, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 650410032, 'comment_body': 'Yea right. I should have done it that way. Thanks for pointing.', 'comment_created': datetime.datetime(2021, 6, 12, 16, 29, 29, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 650410971, 'comment_body': ""Maybe \r\n`assert axes.get_xticklabels()[0].get_text()=='False'` this will do the job?"", 'comment_created': datetime.datetime(2021, 6, 12, 16, 39, 55, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 650411171, 'comment_body': 'test exists because we all do this which is also why writing tests is important everywhere', 'comment_created': datetime.datetime(2021, 6, 12, 16, 42, 4, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 650412725, 'comment_body': ""Done.\r\nOne more observation. Now, that there is an added kind of plot `bar` for boolean values. So maybe we should set \r\n`kind = 'bar'` somewhere and should accept `kind = 'bar'`. "", 'comment_created': datetime.datetime(2021, 6, 12, 16, 59, 12, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 650425272, 'comment_body': 'This line is not covered by test. Less idea do it', 'comment_created': datetime.datetime(2021, 6, 12, 19, 11, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 650722431, 'comment_body': '```suggestion\r\n```', 'comment_created': datetime.datetime(2021, 6, 14, 7, 55, 16, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 650722883, 'comment_body': 'I think this is not needed for tests (or is it?)', 'comment_created': datetime.datetime(2021, 6, 14, 7, 55, 55, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 651126196, 'comment_body': 'Answer to this question may look weird at first but\r\nOn notebook, assert axes.get_xticklabels() runs fine when run in next cell but returns empty list when run on the same cell containing `plt.plot()`.\r\nFound a solution [here](https://github.com/matplotlib/matplotlib/issues/6103/)\r\n\r\n\r\n(My earlier comment got duplicated. When I deleted one, both got deleted 🤦🏼 )', 'comment_created': datetime.datetime(2021, 6, 14, 17, 7, 3, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 651132812, 'comment_body': ""Ok, then this can be removed (we don't run tests in notebooks)"", 'comment_created': datetime.datetime(2021, 6, 14, 17, 16, 40, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 651227839, 'comment_body': 'Tests were failing when I removed this because then get_xticklabels() returns empty list.\r\n\r\nInteractive users when want to run `axes.get_xticklabels()` can do this by running it in different cell\r\n\r\nBut non interactive users have to call plt.draw() before using `axes.get_xticklabels()` \r\n\r\nMore clear explanation : \r\n> in interactive mode in ipython, a draw() is automatically triggered after each function that has a plotting action. In non-interactive environments, the draw action is executed only at the end--this saves a lot of run time.\r\n\r\n\r\nBut maybe, we can call plt.draw() inside our posterior plot function and remove it from here.', 'comment_created': datetime.datetime(2021, 6, 14, 19, 44, 7, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 651273393, 'comment_body': 'Yes, tests are really run from command line \r\n\r\n    python -m pytest path/to/tests\r\n\r\nSo keeping them clean is ok.', 'comment_created': datetime.datetime(2021, 6, 14, 20, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 677081930, 'comment_body': ""This could be tested using an array of strings I think, but I'm not sure it's worth it. @canyon289?"", 'comment_created': datetime.datetime(2021, 7, 27, 3, 1, 49, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679444103, 'comment_body': ""I know this is not the best way to see if xticklabels are correct. It should be like `assert axes.get_xticklabels()[0].get_text() == 'False'`.\r\nWhen I tried it locally, tests work well only if I provide `show=True` to the plot function call but shows an assertion error when show=False (default).\r\n`AssertionError: assert ' ' == 'False'`\r\nAzure jobs fails with same error even if `show=True` is pushed."", 'comment_created': datetime.datetime(2021, 7, 29, 19, 53, 40, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 679444989, 'comment_body': ""If it's not worth, can it be left uncovered?"", 'comment_created': datetime.datetime(2021, 7, 29, 19, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 679477882, 'comment_body': ""maybe it could be solved using some non-interactive/directly writing to file backend? I don't reallly know what is happening, but it would not be surprising that Azure had some extra checks preventing guis, pop ups or other interactive objects"", 'comment_created': datetime.datetime(2021, 7, 29, 20, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 686200074, 'comment_body': 'Already tried using `plt.draw()` in the matplotlib backend file, didn\'t work! I guess we need to call `plt.draw()` in the test function before assert or maybe leave it like that if its an ""okayish"" way to test if not good.', 'comment_created': datetime.datetime(2021, 8, 10, 17, 57, 16, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 720707812, 'comment_body': 'Hey sorry for the super long delay. Ideally itd be tested if its not too hard. In this case it dooesnt look like itll be too bad to write a test to check for the exception so Id do it', 'comment_created': datetime.datetime(2021, 10, 2, 17, 46, 9, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}]","[{'commit_sha': '1db9b3c83dce9f9b52e8777d50fd15bf44b2d9f4', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bf9141cec970dd3063e7e22c2b82ac3f45b3997d', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4396f78f88174e66aa413f36fd528d895c8c343a', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fe402e1569e4f2923e14b9d6fbdb3e73490f1cd', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6791df74244ab5bdb4c2be8e2b9f094da84469ff', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e8d8e492beca6a929bfe175aa17a7c5b5868fd84', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9ab6856c3d686e64416bb412bee6a82c64feb47', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b75bb3f51e9746489b5257a058c24457b5e03f8f', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '65521ec8667e5ec7133dac0e90e0c72402fbdf67', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7afcde163aa54c933716c40efae6540513c45d3d', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b799812852477b5ef0c357dd72e4047516039caa', 'committer_username': 'ahartikainen', 'committer_name': 'Ari Hartikainen', 'committer_email': None, 'commit_date': datetime.datetime(2015, 7, 3, 6, 50, 38, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
670511024,Initial prototype of plot_lm,"## Description
This PR and #1747 summarizes my work done in Google Summer of Code 2021. I added 2 plots, `plot_lm` and `plot_ts`. The first one is covered in this PR and the next one in #1747. The project workflow was like this:

1. **Started with a high-level design**: Discussed the user API function with the mentors and other community members. Discussion includes input variable names, accepted datatypes, accepted values and other input details. Also showed a sample output visualization. Once it was approved, I moved on to opening this PR. [This Github Gist](https://gist.github.com/utkarsh-maheshwari/8d4cd2fd84c763bf85291c3f0881d588) shows the design and some discussions related to it. The design process took an initial week.

2. **Submitted a prototype**: This PR was earlier a prototype. This step is basically implementing the design decision made in the previous step. In addition to the user API, backend functions are also added. As ArviZ uses 2 backends, artist functions for both of them were added. This step took another week.

3. **Improved it according to reviews**: In this step, mentors review your code to provide feedback and improvement tips. Learned the best code practices in this step. Ideally, improving never ends. It is important to maintain the added code after it is merged to keep it bug-free. I aim to provide support after GSoC. This step was a bit lengthy and complex and thus took 2 weeks.

4. **Tested the functionality**: Added unit tests using `pytest`. Aimed and achieved to cover all of the added functionality under tests. Similar to step 2, added tests for both of the backends. Also, solved some simple to complex bugs that arise while testing. This step took another week.

5. **Added examples**: Examples are added to the docstring as well as to the examples folder. Please check out the files changed tab to know more about this step. This step was quick, took only half a week.

6. **Added documentation**: If you want to know how to use `plot_lm`, checkout out [this blog](https://utkarsh-maheshwari.medium.com/how-to-use-plot-lm-part-i-1f1cb099503e). However, if you want to go on a low level to know the working in detail, I would suggest taking a look over the docstring in ArviZ docs and probably follow the comments sequentially. Another week was consumed in this step.

Output : 
![image](https://user-images.githubusercontent.com/32706356/122080753-27f97c80-ce1c-11eb-8979-062a3dc4b923.png)


<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [x] New features are properly documented (with an example if appropriate)?
- [x] Includes new or updated tests to cover the new feature
- [x] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1727,https://api.github.com/repos/arviz-devs/arviz/pulls/1727,https://github.com/arviz-devs/arviz/pull/1727,closed,848,0,9,11,38,60,0,0,[],2021-06-15 15:25:52+00:00,2021-07-30 14:15:36+00:00,3883784.0,"44 days, 22:49:44","[{'comment_id': 652295720, 'comment_body': 'Renaming like this is odd. Is there a reason it needs to be done?', 'comment_created': datetime.datetime(2021, 6, 16, 2, 16, 58, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 652295774, 'comment_body': 'Use warning module instead of print. Same for all print statements', 'comment_created': datetime.datetime(2021, 6, 16, 2, 17, 13, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 652295934, 'comment_body': 'Same comment here, why rename the variable?', 'comment_created': datetime.datetime(2021, 6, 16, 2, 17, 44, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 652296410, 'comment_body': 'I would consider splitting this into another function and testing it independently', 'comment_created': datetime.datetime(2021, 6, 16, 2, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 652296887, 'comment_body': 'Is there a way we can use inference data as an input and specify the x_values and such in reference to inf data?', 'comment_created': datetime.datetime(2021, 6, 16, 2, 20, 53, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 652551383, 'comment_body': 'Basically x could be a string or sequence. So, I was renaming it to conserve the string name before converting it to DataArray.', 'comment_created': datetime.datetime(2021, 6, 16, 10, 14, 55, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 652551474, 'comment_body': 'Sure!', 'comment_created': datetime.datetime(2021, 6, 16, 10, 15, 2, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 652554102, 'comment_body': 'Then I guess y_model need to be stored somewhere in idata.', 'comment_created': datetime.datetime(2021, 6, 16, 10, 18, 43, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 656013185, 'comment_body': 'This could call the function in plot_utils. I think other plots use that func too.', 'comment_created': datetime.datetime(2021, 6, 22, 8, 50, 28, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 656013739, 'comment_body': 'At some point these could be used with kwargs (with some setdefault magic)', 'comment_created': datetime.datetime(2021, 6, 22, 8, 51, 9, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 656014129, 'comment_body': '```suggestion\r\n        arr = np.arange(y_ppc.draw.size * y_ppc.chain.size)\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 656014725, 'comment_body': '```suggestion\r\n        arr = np.arange(y_model.draw.size * y_ppc.chain.size)\r\n```', 'comment_created': datetime.datetime(2021, 6, 22, 8, 52, 19, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 656015389, 'comment_body': 'I think this also needs some thinking when we want to do this and when not', 'comment_created': datetime.datetime(2021, 6, 22, 8, 53, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 656015676, 'comment_body': 'This should also be some kwargs', 'comment_created': datetime.datetime(2021, 6, 22, 8, 53, 31, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 656042895, 'comment_body': 'I have done it in my local branch. I will soon push the changes', 'comment_created': datetime.datetime(2021, 6, 22, 9, 27, 33, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 656043469, 'comment_body': 'Yes, this remains to be done.', 'comment_created': datetime.datetime(2021, 6, 22, 9, 28, 14, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 656045342, 'comment_body': 'Yes , I have just taken it from from your function. I need to think about it because I have less idea where is it useful.', 'comment_created': datetime.datetime(2021, 6, 22, 9, 30, 30, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 656046654, 'comment_body': 'Sure, I have made the change in local branch. Actually, currently I am working to add argument `plot_dim`. I will push the changes as soon as I finish it', 'comment_created': datetime.datetime(2021, 6, 22, 9, 32, 15, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 658198153, 'comment_body': 'Different kwargs for observed data, PPC and model?', 'comment_created': datetime.datetime(2021, 6, 24, 18, 45, 15, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 663605674, 'comment_body': '```suggestion\r\n        If str, variable name from posterior_predictive.\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 2, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 663605756, 'comment_body': '```suggestion\r\n        Necessary if y is multidimensional.\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 2, 43, 10, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 663605795, 'comment_body': '```suggestion\r\n    backend : str, Optional\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 2, 43, 20, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 663608334, 'comment_body': 'Mark these as optional', 'comment_created': datetime.datetime(2021, 7, 5, 2, 53, 54, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 663608409, 'comment_body': '```suggestion\r\n        raise ValueError(""kind_ppc should be either samples or hdi"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 2, 54, 16, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 663608447, 'comment_body': '```suggestion\r\n        raise ValueError(""kind_model should be either lines or hdi"")\r\n```', 'comment_created': datetime.datetime(2021, 7, 5, 2, 54, 28, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 663608683, 'comment_body': '```suggestion\r\n        raise ValueError(""Argument plot_dim is needed in case of multidimensional data"")\r\n```\r\n\r\nMake the capitalization more clear', 'comment_created': datetime.datetime(2021, 7, 5, 2, 55, 21, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671705413, 'comment_body': 'Not required just asking. Should we just moditfy regressionid to include these?', 'comment_created': datetime.datetime(2021, 7, 17, 14, 42, 45, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671705616, 'comment_body': '```suggestion\r\n        If str, variable name from posterior.\r\n```', 'comment_created': datetime.datetime(2021, 7, 17, 14, 44, 40, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671705882, 'comment_body': '```suggestion\r\n    Plot regression data for multi-dimensional y using plot_dim\r\n```', 'comment_created': datetime.datetime(2021, 7, 17, 14, 47, 19, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671705916, 'comment_body': '```suggestion\r\n    Plot regression data and uncertainty in mean\r\n```', 'comment_created': datetime.datetime(2021, 7, 17, 14, 47, 41, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671707241, 'comment_body': 'Nit, add keyword arguments here, itll make the code easier to read', 'comment_created': datetime.datetime(2021, 7, 17, 15, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671707265, 'comment_body': 'Same comment here', 'comment_created': datetime.datetime(2021, 7, 17, 15, 0, 39, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671707273, 'comment_body': 'Thanks for the comment!', 'comment_created': datetime.datetime(2021, 7, 17, 15, 0, 47, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671707440, 'comment_body': 'Can this test be parameterized?', 'comment_created': datetime.datetime(2021, 7, 17, 15, 2, 8, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671707584, 'comment_body': 'This one isnt your fault, but because we split our tests by plotting backend we get tons of repeated code. No need to change here. @ahartikainen  curious what your thoughts are', 'comment_created': datetime.datetime(2021, 7, 17, 15, 3, 41, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671709362, 'comment_body': '```suggestion\r\n    Plot regression data and uncertainty in hdi form\r\n```', 'comment_created': datetime.datetime(2021, 7, 17, 15, 20, 2, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671711010, 'comment_body': 'Add more comments like this in various places. Its very helpful to understand whats going on in the code!', 'comment_created': datetime.datetime(2021, 7, 17, 15, 34, 45, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 671715839, 'comment_body': 'regression1d needs to be modified a bit. `y` dimensions and `y_model` dimensions do not match. y is aginst [0,100] while latter one is [0,1]', 'comment_created': datetime.datetime(2021, 7, 17, 16, 19, 47, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 671722707, 'comment_body': 'How about adding 3 different methods for testing ValueError, TypeError and UserWarning?', 'comment_created': datetime.datetime(2021, 7, 17, 17, 26, 26, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 671729166, 'comment_body': ""Didn't get your point here. Confused what's not my fault 😆 "", 'comment_created': datetime.datetime(2021, 7, 17, 18, 32, 7, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 671729283, 'comment_body': 'I have tried to make these tests patrameterized.', 'comment_created': datetime.datetime(2021, 7, 17, 18, 33, 19, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 672399733, 'comment_body': 'Theres a lot of duplication of code between `test_plots_matplotlib`, and the bokeh equivalent. Ideally we would not want to repeat things like the parameterization etc etc, and instead make the backend itself a parameter', 'comment_created': datetime.datetime(2021, 7, 19, 15, 24, 16, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 672400910, 'comment_body': 'Add docstrings to all these tests. Even if a basic one', 'comment_created': datetime.datetime(2021, 7, 19, 15, 25, 36, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 672402041, 'comment_body': 'Theres still many things being tested in the same test. Can we split these tests apart so each `pytest.raises` is in its own test? Or is this not possible?\r\n\r\nWhat will happen if things fail is that itll be unclear which one of these conditions is failing and make subsequent development and debugging more challenging. Ideally each unittests tests one unit of code functionality', 'comment_created': datetime.datetime(2021, 7, 19, 15, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'canyon289', 'type': 'User'}, {'comment_id': 675801064, 'comment_body': 'Okay! Got it! making the changes..', 'comment_created': datetime.datetime(2021, 7, 23, 19, 2, 16, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 676801959, 'comment_body': 'Removed `test_plot_lm_bad_kwargs` from bokeh tests.', 'comment_created': datetime.datetime(2021, 7, 26, 17, 25, 6, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 677648748, 'comment_body': 'I think it should be `InferenceData` alone, or alternatively `arviz.InferenceData`, object is not necessary, and I think `az` can be confusing and redundant (arviz.InferenceData is as redundant, but IIUC, as arviz is the valid package name it will be rendered as a link to inferencedata api docs)', 'comment_created': datetime.datetime(2021, 7, 27, 17, 16, 22, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677649154, 'comment_body': ""sequence is not a valid type according to `y` docstring, so I'm not sure what this means."", 'comment_created': datetime.datetime(2021, 7, 27, 17, 16, 57, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677649718, 'comment_body': '```suggestion\r\n    x : str, tuple of strings, DataArray or array-like, optional\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 17, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677651356, 'comment_body': 'for arguments taking only a set of known values, the convention is to use `{` instead of `[`. Moreover, adding `default ""value""` already indicated that this is an optional argument in numpydoc:\r\n\r\n```suggestion\r\n    kind_pp : {""samples"", ""hdi""}, default ""samples""\r\n```', 'comment_created': datetime.datetime(2021, 7, 27, 17, 20, 19, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677653421, 'comment_body': 'can you make plot and circle hyperlinks using intersphinx? same for all other kwargs.\r\n\r\nsee https://arviz-devs.github.io/arviz/contributing/developer_guide.html#hyperlinks and #1188 for guidance and examples.', 'comment_created': datetime.datetime(2021, 7, 27, 17, 23, 10, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677706928, 'comment_body': 'If any of y, x, y_hat, y_model is str, then idata is necessary. Yea, This line is unclear.', 'comment_created': datetime.datetime(2021, 7, 27, 18, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 677720392, 'comment_body': 'Done! ', 'comment_created': datetime.datetime(2021, 7, 27, 19, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 677852547, 'comment_body': ""This explanation should be the one on the docstring! It's different from the current one too which seeing this looks wrong"", 'comment_created': datetime.datetime(2021, 7, 27, 22, 50, 11, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677853050, 'comment_body': 'these need an explanation, even if a single sentence.', 'comment_created': datetime.datetime(2021, 7, 27, 22, 51, 7, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677854375, 'comment_body': 'according to sphinxinv, the objects in bokeh docs containing circle are these: \r\n\r\n```\r\n:py:class:`bokeh.models.glyphs.Circle`\r\n:py:attribute:`bokeh.models.glyphs.Circle.x`\r\n:py:attribute:`bokeh.models.glyphs.Circle.y`\r\n:py:function:`bokeh.models.markers.Circle`\r\n:py:function:`bokeh.models.markers.CircleX`\r\n:py:function:`bokeh.models.markers.CircleY`\r\n:py:method:`bokeh.plotting.Figure.circle`\r\n:py:method:`bokeh.plotting.Figure.circle_x`\r\n:py:method:`bokeh.plotting.Figure.circle_y`\r\n:py:method:`bokeh.plotting.GMap.circle`\r\n:py:method:`bokeh.plotting.GMap.circle_x`\r\n:std:label:`bokeh.models.glyphs.circle`\r\n:std:label:`bokeh.models.markers.circle`\r\n:std:label:`bokeh.models.markers.circledot`\r\n:std:label:`bokeh.models.markers.circlex`\r\n:std:label:`bokeh.models.markers.circley`\r\n```\r\n\r\nthe one you used is not an option, maybe it was in an old version?', 'comment_created': datetime.datetime(2021, 7, 27, 22, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 677854611, 'comment_body': 'this also needs some explanation as well as the intersphinx references.', 'comment_created': datetime.datetime(2021, 7, 27, 22, 54, 52, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679085817, 'comment_body': '```suggestion\r\n        Passed to {func}`~arviz.plot_hdi`\r\n```', 'comment_created': datetime.datetime(2021, 7, 29, 12, 0, 50, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679086492, 'comment_body': 'the links to the methods where these are passed are still missing, you can take them from #1728 to avoid having to track them down in the source code.', 'comment_created': datetime.datetime(2021, 7, 29, 12, 1, 51, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 679391660, 'comment_body': ""I don't know how I missed this one! "", 'comment_created': datetime.datetime(2021, 7, 29, 18, 30, 7, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}]","[{'commit_sha': '3d30b8e89724cf4ce45200594c760ad852cd0a6c', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b1c7e8c4300e39a4588a2988854adb92fc2526c5', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '063a24528a3dae1ca0dd6271f3b3dd4743c4508f', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2ab1db62bba252596735d0c41bdd9a792b89cf3', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '04fe120c6316638cec2983f7e13db2026a1b2dfc', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '546a909ee5e03b6e319e225f9150dc17ee5b0700', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b9ace4711fb12fe93e841bf9be735afe82c3ca0', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18655e224dea17df51a436fb6f1db106bfd04a9e', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6adff31754ba7693623dbdc7f5eef6d783b13f44', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e93b4d0ae78b7f626509a8b8e45030d09aa8e090', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bc9c18ef2a17f56664b2d352f7fb09a012c39d09', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
663015373,Remove testing dependency on http download for radon dataset,"## Description
Modified loo_pit tests to remove dependency on radon dataset. Using modified centered_eight instead.
Closes #1716 
<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1717,https://api.github.com/repos/arviz-devs/arviz/pulls/1717,https://github.com/arviz-devs/arviz/pull/1717,closed,10,3,1,1,12,0,0,0,[],2021-06-06 17:56:13+00:00,2021-06-07 18:13:48+00:00,87455.0,"1 day, 0:17:35",[],"[{'commit_sha': 'cd99aff4c802f5d9a59db9b351e6c232bd360537', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
656984708,fixed plot_kde to take labels with kwargs.,"## Description
This pr solves the conflict that arises when `label` is passed as a kwarg. It conflicted with the argument `label`. 
Added `set_default` to the required args. 
Added relevant kwargs in the test module.
Also, now user can use plot_posterior to use plot multiple distributions and have a legend.

closes #1703

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [ ] Includes a sample plot to visually illustrate the changes (only for plot-related functions)
- [ ] New features are properly documented (with an example if appropriate)?
- [x] Includes new or updated tests to cover the new feature
- [x] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1710,https://api.github.com/repos/arviz-devs/arviz/pulls/1710,https://github.com/arviz-devs/arviz/pull/1710,closed,10,4,5,4,11,3,0,0,[],2021-05-28 19:33:30+00:00,2021-06-11 19:15:41+00:00,1208531.0,"13 days, 23:42:11","[{'comment_id': 641784938, 'comment_body': ""I think setdefault doesn't return anything, so it's output should not be stored anywhere."", 'comment_created': datetime.datetime(2021, 5, 28, 19, 51, 52, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 641965221, 'comment_body': 'I referred [this](https://docs.python.org/3/library/stdtypes.html#dict.setdefault) link. I have stored its value because `label` is used in line 154.', 'comment_created': datetime.datetime(2021, 5, 29, 17, 44, 41, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 641988880, 'comment_body': 'true, good catch ', 'comment_created': datetime.datetime(2021, 5, 29, 22, 4, 59, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}]","[{'commit_sha': 'ed6207619af6eed540991401271b2c68d2df2180', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '281c9c5aae6d205600ba9e3c86ddfe5e21bfaf2c', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd142ebabb78908e1030e7e5dd1330c23d54db8be', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c3e3e153b707a5b871096d1377ef44742c846ada', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
581044097,[WIP] fix mypy errors,"## Description
Fixed mypy errors mentioned in https://github.com/arviz-devs/arviz/pull/1528#issuecomment-783115088 by adding type hints to `var_names` and `latex_elements`. Addresses #1581

<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1586,https://api.github.com/repos/arviz-devs/arviz/pulls/1586,https://github.com/arviz-devs/arviz/pull/1586,closed,4,3,2,2,8,0,0,0,[],2021-02-26 18:31:19+00:00,2021-03-01 01:51:32+00:00,199213.0,"2 days, 7:20:13",[],"[{'commit_sha': '5ef48272d333596692115a58a8aa57147e423871', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1383ea59c5bb2729660b732cc1b047d4ddfef87b', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
570492646,Update from_cmdstanpy converter to follow schema convention,"## Description
Matched sample stats according to InferenceData schema specification in from_cmdstanpy converter. Addreses issue #1514
<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [ ] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1550,https://api.github.com/repos/arviz-devs/arviz/pulls/1550,https://github.com/arviz-devs/arviz/pull/1550,closed,10,3,2,1,5,0,0,0,[],2021-02-09 17:57:52+00:00,2021-02-15 22:27:37+00:00,534585.0,"6 days, 4:29:45",[],"[{'commit_sha': 'f7e0b40303b38a6afbe905bb29b2ee6d834c0677', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
568845781,Update from_cmdstan converter to follow schema convention,"## Description
 Matched sample stats according to InferenceData schema specification in from_cmdstan converter. Addreses issue #1514
<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md#pull-request-checklist) PR format
- [x] Code style  correct (follows pylint and black guidelines)
- [x] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/main/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/main/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/main/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1541,https://api.github.com/repos/arviz-devs/arviz/pulls/1541,https://github.com/arviz-devs/arviz/pull/1541,closed,13,10,2,2,4,10,0,0,[],2021-02-06 20:11:20+00:00,2021-02-09 18:01:56+00:00,251436.0,"2 days, 21:50:36","[{'comment_id': 571623606, 'comment_body': 'I think that now that multiple variables are renamed, using a dict as mapping like in `io_numpyro` will be more clear', 'comment_created': datetime.datetime(2021, 2, 7, 14, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 571674932, 'comment_body': ""Also, according to this [comment](https://github.com/arviz-devs/arviz/pull/1063#issuecomment-589771200), stan variables don't need to be splitted and joined as none of them have '.' seperated strings in their names."", 'comment_created': datetime.datetime(2021, 2, 7, 19, 29, 48, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 571686110, 'comment_body': 'Not sure about the split, @ahartikainen will know, but removing the final `__` is still necessary, there are some variables which are not renamed and should have them removed, `lp` for example', 'comment_created': datetime.datetime(2021, 2, 7, 20, 11, 58, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}, {'comment_id': 571703880, 'comment_body': 'Split is needed for nD variables\r\n\r\n    theta.1.2', 'comment_created': datetime.datetime(2021, 2, 7, 21, 38, 4, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 571704252, 'comment_body': 'No wait, I need to reread the code, it might be irrelevant in this step.', 'comment_created': datetime.datetime(2021, 2, 7, 21, 41, 10, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 571813996, 'comment_body': '> Not sure about the split, @ahartikainen will know, but removing the final `__` is still necessary, there are some variables which are not renamed and should have them removed, `lp` for example\r\n\r\nIn that case, all the stan variables in the [comment](https://github.com/arviz-devs/arviz/pull/1063#issuecomment-589771200) need to be mapped to unified name. To do that, a separate dictionary for renaming (other then already mentioned `rename_dict`) need to be made.', 'comment_created': datetime.datetime(2021, 2, 8, 6, 52, 38, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 571821156, 'comment_body': 'Ok, I think that split is not necessary here.\r\n\r\nI would use the rename dict for variables which we want to be mapped and then I would leave the rest of the variables as is (just removing `__` like we currently do)', 'comment_created': datetime.datetime(2021, 2, 8, 7, 12, 37, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 571821847, 'comment_body': '> I would leave the rest of the variables as is (just removing `__` like we currently do)\r\n\r\nThis assumes that there might be new diagnostics in future.', 'comment_created': datetime.datetime(2021, 2, 8, 7, 14, 34, tzinfo=datetime.timezone.utc), 'commenter': 'ahartikainen', 'type': 'User'}, {'comment_id': 571903399, 'comment_body': 'Okay. \r\nThen I am initializing `rename_dict` before the outer for loop.', 'comment_created': datetime.datetime(2021, 2, 8, 9, 42, 49, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}, {'comment_id': 571916239, 'comment_body': ""Now, we don't need these commands to rename the keys as renaming is already been taken care of in the loop."", 'comment_created': datetime.datetime(2021, 2, 8, 10, 1, 9, tzinfo=datetime.timezone.utc), 'commenter': 'utkarsh-maheshwari', 'type': 'User'}]","[{'commit_sha': '983553781e82a1593c30eb1894630cb2a75ea45a', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c64002227dbf47f28a01efa574b52bbd4af63fe', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3
562744082,Update from_numpyro converter to follow schema convention,"## Description
Matched sample stats to ArviZ names in `from_numpyro` converter. Addreses issue #1514
<!--
Thank you so much for your PR! To help us review your contribution, please consider the following points:

- The PR title should summarize the changes, for example ""Add new group argument for the pair plot"".
  Avoid non-descriptive titles such as ""Addresses issue #348"".

- The description should provide at least 1-2 sentences describing the pull request in detail and
  link to any relevant issues.

- Please prefix the title of incomplete contributions with [WIP] (to indicate a work in
  progress). WIPs may be useful to (1) indicate you are working on something to avoid
  duplicated work, (2) request broad review of functionality or API, or (3) seek collaborators. -->

## Checklist
<!-- Feel free to remove check-list items aren't relevant to your change -->

- [x] Follows [official](https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md#pull-request-checklist) PR format
- [ ] Code style  correct (follows pylint and black guidelines)
- [ ] Changes are listed in [changelog](https://github.com/arviz-devs/arviz/blob/master/CHANGELOG.md#v0xx-unreleased)

<!--
Also, please consider reading the contributing guidelines and code of conduct carefully before submitting the PR. They are available at
- https://github.com/arviz-devs/arviz/blob/master/CONTRIBUTING.md
- https://github.com/arviz-devs/arviz/blob/master/CODE_OF_CONDUCT.md

We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in. Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.
-->
",True,1525,https://api.github.com/repos/arviz-devs/arviz/pulls/1525,https://github.com/arviz-devs/arviz/pull/1525,closed,4,5,2,2,20,1,0,0,[],2021-01-27 19:37:59+00:00,2021-02-07 14:10:27+00:00,930748.0,"10 days, 18:32:28","[{'comment_id': 565636416, 'comment_body': 'I think we can delete the comment now, all libraries will have some kind of renaming to match arviz convention.', 'comment_created': datetime.datetime(2021, 1, 27, 21, 12, 19, tzinfo=datetime.timezone.utc), 'commenter': 'OriolAbril', 'type': 'User'}]","[{'commit_sha': 'ce2a6d9431d06c4200f859d2d9005d7fab27a17b', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c82c6aae08b52e2cab1d3772b2ca74c7e355afd', 'committer_username': 'utkarsh-maheshwari', 'committer_name': 'Utkarsh Mahweshwari', 'committer_email': None, 'commit_date': datetime.datetime(2017, 10, 11, 12, 5, 39, tzinfo=datetime.timezone.utc)}]",Utkarsh Mahweshwari,32706356,,User,,30,,7,3

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
39890704,arviz,arviz-devs/arviz,Python,394,1574,47,161,1557,177,7,8,"[{'id': 697279841, 'number': 1747, 'closed': datetime.datetime(2021, 8, 27, 14, 54, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 19, 7, 32, tzinfo=datetime.timezone.utc), 'time_taken': 2749614.0, 'time_delta': '31 days, 19:46:54', 'additions': 652, 'deletions': 0, 'state': 'closed'}, {'id': 670511024, 'number': 1727, 'closed': datetime.datetime(2021, 7, 30, 14, 15, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 15, 15, 25, 52, tzinfo=datetime.timezone.utc), 'time_taken': 3883784.0, 'time_delta': '44 days, 22:49:44', 'additions': 848, 'deletions': 0, 'state': 'closed'}, {'id': 663015373, 'number': 1717, 'closed': datetime.datetime(2021, 6, 7, 18, 13, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 6, 17, 56, 13, tzinfo=datetime.timezone.utc), 'time_taken': 87455.0, 'time_delta': '1 day, 0:17:35', 'additions': 10, 'deletions': 3, 'state': 'closed'}, {'id': 656984708, 'number': 1710, 'closed': datetime.datetime(2021, 6, 11, 19, 15, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 28, 19, 33, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1208531.0, 'time_delta': '13 days, 23:42:11', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 654752711, 'number': 1707, 'closed': datetime.datetime(2022, 3, 23, 10, 55, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 10, 7, 51, tzinfo=datetime.timezone.utc), 'time_taken': 25922851.0, 'time_delta': '300 days, 0:47:31', 'additions': 56, 'deletions': 13, 'state': 'closed'}, {'id': 653614293, 'number': 1705, 'closed': datetime.datetime(2021, 5, 27, 9, 47, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 26, 11, 14, tzinfo=datetime.timezone.utc), 'time_taken': 81200.0, 'time_delta': '22:33:20', 'additions': 9794, 'deletions': 6305, 'state': 'closed'}, {'id': 581044097, 'number': 1586, 'closed': datetime.datetime(2021, 3, 1, 1, 51, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 26, 18, 31, 19, tzinfo=datetime.timezone.utc), 'time_taken': 199213.0, 'time_delta': '2 days, 7:20:13', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 570492646, 'number': 1550, 'closed': datetime.datetime(2021, 2, 15, 22, 27, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 9, 17, 57, 52, tzinfo=datetime.timezone.utc), 'time_taken': 534585.0, 'time_delta': '6 days, 4:29:45', 'additions': 10, 'deletions': 3, 'state': 'closed'}, {'id': 568845781, 'number': 1541, 'closed': datetime.datetime(2021, 2, 9, 18, 1, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 6, 20, 11, 20, tzinfo=datetime.timezone.utc), 'time_taken': 251436.0, 'time_delta': '2 days, 21:50:36', 'additions': 13, 'deletions': 10, 'state': 'closed'}, {'id': 562744082, 'number': 1525, 'closed': datetime.datetime(2021, 2, 7, 14, 10, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 27, 19, 37, 59, tzinfo=datetime.timezone.utc), 'time_taken': 930748.0, 'time_delta': '10 days, 18:32:28', 'additions': 4, 'deletions': 5, 'state': 'closed'}]"
