pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
430409217,CAMEL-13934 camel-minio - Component to store/load files from blob store,"This is a draft pull request
",True,3897,https://api.github.com/repos/apache/camel/pulls/3897,https://github.com/apache/camel/pull/3897,closed,9039,2,55,58,5,77,0,0,[],2020-06-07 21:45:18+00:00,2020-08-10 12:43:34+00:00,5497096.0,"63 days, 14:58:16","[{'comment_id': 436470452, 'comment_body': 'This is not needed. You could remove this file.', 'comment_created': datetime.datetime(2020, 6, 8, 5, 55, 26, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 436470567, 'comment_body': 'No need for the camel-bom here. Take as example the other components in the components folder.', 'comment_created': datetime.datetime(2020, 6, 8, 5, 55, 51, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 436470795, 'comment_body': 'This class can be removed.', 'comment_created': datetime.datetime(2020, 6, 8, 5, 56, 38, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 436470950, 'comment_body': 'You can use directly Component annotation without the whole package.', 'comment_created': datetime.datetime(2020, 6, 8, 5, 57, 13, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 436471145, 'comment_body': ""Remove the eventBusHelper, except it is something really useful to the basic feature of component, but I don't think so."", 'comment_created': datetime.datetime(2020, 6, 8, 5, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 436471424, 'comment_body': 'Please add the component in the correct order.', 'comment_created': datetime.datetime(2020, 6, 8, 5, 59, 1, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 437672436, 'comment_body': ""Hi thank you for the suggestion, and I'll remove this for sure. But I'll keep it for a while for some random hello world kind tests while on the go. :)"", 'comment_created': datetime.datetime(2020, 6, 9, 19, 38, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 437673851, 'comment_body': ""Hi thank you for the suggestion, and I'll remove this for sure. But I'll keep it for a while for some random hello world kind tests while on the go. :)"", 'comment_created': datetime.datetime(2020, 6, 9, 19, 41, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 439466333, 'comment_body': 'Maybe `firstVersion` could be set to `3.5.0` or something like that.', 'comment_created': datetime.datetime(2020, 6, 12, 14, 50, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 439466644, 'comment_body': 'And maybe scheme could be lowercase, like ""minio""', 'comment_created': datetime.datetime(2020, 6, 12, 14, 51, 2, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 445202915, 'comment_body': '@oscerd @DenisIstomin What kind of approach suitable here? AWS2 S3 component have use something like this\r\n```\r\nListObjectsRequest.Builder listObjectsRequest = ListObjectsRequest.builder();\r\n            listObjectsRequest.bucket(bucketName);\r\n            listObjectsRequest.prefix(getConfiguration().getPrefix());\r\n            listObjectsRequest.delimiter(getConfiguration().getDelimiter());\r\n``` ', 'comment_created': datetime.datetime(2020, 6, 24, 22, 18, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 445302954, 'comment_body': 'you could use https://docs.min.io/docs/java-client-api-reference.html#listObjects @Nayananga ', 'comment_created': datetime.datetime(2020, 6, 25, 4, 41, 33, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 445307693, 'comment_body': ""Hi @oscerd, here if users haven't provided any objectName then my intention is to pull all the objects in the bucket using Iterator named marker, first I would like to know is that ok to do?"", 'comment_created': datetime.datetime(2020, 6, 25, 5, 0, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 445308634, 'comment_body': 'Hello @Nayananga , yes it is ok. You can do that and then process the result as a batch, like the S3 AWS2 component does.', 'comment_created': datetime.datetime(2020, 6, 25, 5, 4, 47, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 445310644, 'comment_body': 'Thank you, is it okay to queue all the bucket objects (may take lot memory I guess) then send to  ```processBatch(CastUtils.cast(exchanges))```? because in minio I had to queue each object in a ```Queue<Object>``` until ```iterator.hasNext()``` return false', 'comment_created': datetime.datetime(2020, 6, 25, 5, 12, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 445311790, 'comment_body': 'Not all the objects in one call, you need to define a limit for the batch, like setMaxKeys in AWS2 S3 component https://github.com/apache/camel/blob/master/components/camel-aws2-s3/src/main/java/org/apache/camel/component/aws2/s3/AWS2S3Consumer.java#L88\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 25, 5, 16, 55, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 449649678, 'comment_body': 'Maybe you should avoid using `assert`. It is not enabled by default. It would be better to handle that with `if` condition.', 'comment_created': datetime.datetime(2020, 7, 3, 16, 15, 31, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 449650386, 'comment_body': 'Maybe [try-with-resources](https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html) could be used here. It would be nice to reduce nesting.', 'comment_created': datetime.datetime(2020, 7, 3, 16, 18, 4, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 449650977, 'comment_body': 'Typo: retrieve', 'comment_created': datetime.datetime(2020, 7, 3, 16, 20, 17, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 449651579, 'comment_body': 'Looks like that test should fail, because there are no messages being sent.', 'comment_created': datetime.datetime(2020, 7, 3, 16, 22, 46, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 449760185, 'comment_body': ""ack, I haven't look into tests yet, I'll work on these asap :)"", 'comment_created': datetime.datetime(2020, 7, 4, 10, 18, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 453283638, 'comment_body': 'This should go as property in parent pom', 'comment_created': datetime.datetime(2020, 7, 12, 8, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 453283693, 'comment_body': ""I don't think aws2-s3 is needed"", 'comment_created': datetime.datetime(2020, 7, 12, 8, 4, 14, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 456499948, 'comment_body': '@oscerd Thank you for the suggestion. Would you mind telling me where exactly this property should go? is it pom.xml in component root directory?', 'comment_created': datetime.datetime(2020, 7, 17, 15, 3, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 456501227, 'comment_body': 'It should go in parent/pom.xml', 'comment_created': datetime.datetime(2020, 7, 17, 15, 5, 49, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 460728216, 'comment_body': 'labels are missing here, for example `producer`, `consumer`, `common` ..etc', 'comment_created': datetime.datetime(2020, 7, 27, 8, 29, 11, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460729429, 'comment_body': 'Please avoid wildcard import', 'comment_created': datetime.datetime(2020, 7, 27, 8, 31, 6, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460731257, 'comment_body': 'Should we handle this exception as well?', 'comment_created': datetime.datetime(2020, 7, 27, 8, 34, 15, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460731754, 'comment_body': 'Same here, should handle this exception as well?', 'comment_created': datetime.datetime(2020, 7, 27, 8, 35, 6, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460740321, 'comment_body': ""I am bit not comfortable of having check with not equal 0, odd cases like minus could slip. I'd recommend changing this to `> 0` instead. Same for the other checks"", 'comment_created': datetime.datetime(2020, 7, 27, 8, 49, 28, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460747948, 'comment_body': 'Perhaps we can use `isNotEmpty` from `org.apache.camel.util.ObjectHelper` to check for nulls or emptyness', 'comment_created': datetime.datetime(2020, 7, 27, 9, 1, 43, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460750413, 'comment_body': ""I don't see any reason to null the client here, isn't? "", 'comment_created': datetime.datetime(2020, 7, 27, 9, 6, 5, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460751316, 'comment_body': ""please don't print the stack trace here, instead handle the exception."", 'comment_created': datetime.datetime(2020, 7, 27, 9, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460754824, 'comment_body': '`versionId` is not used here', 'comment_created': datetime.datetime(2020, 7, 27, 9, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460756730, 'comment_body': '`isNotEmpty` as I mentioned earlier would make more sense here', 'comment_created': datetime.datetime(2020, 7, 27, 9, 17, 20, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460757877, 'comment_body': 'this check here is not needed. `ObjectHelper.isEmpty(bucketName)` will check if string is empty or null', 'comment_created': datetime.datetime(2020, 7, 27, 9, 19, 21, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460759163, 'comment_body': 'why is it `1024` bits here? Can you please move this into constant and with some comment why you opted for `1024`bits?', 'comment_created': datetime.datetime(2020, 7, 27, 9, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460765307, 'comment_body': 'This class name is weird for the client impl. If this the remote client from the factory, something like `MinioRemoteClientImpl` would make more sense', 'comment_created': datetime.datetime(2020, 7, 27, 9, 32, 2, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460766063, 'comment_body': 'I wonder accessKeys, same as region are not required?', 'comment_created': datetime.datetime(2020, 7, 27, 9, 33, 28, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460766557, 'comment_body': 'Please add more cases for region, secretKey .. etc', 'comment_created': datetime.datetime(2020, 7, 27, 9, 34, 22, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 460775832, 'comment_body': 'These checks are pretty redundant. Perhaps what we can do here, wrap these into centralized lambdas somewhere and just pass the function reference. Example:\r\n```\r\nprivate void checkMatchTagConfig(final MinioConfiguration configuration, final java.util.function.Consumer<String> fn) {\r\n        if ( ObjectHelper.isNotEmpty(configuration.getMatchETag()) ) {\r\n            fn.accept(configuration.getMatchETag());\r\n        }\r\n    }\r\n```  \r\nAnd then somewhere in the code:\r\n```\r\ncheckMatchTagConfig(getConfiguration(), statObjectRequest::matchETag);\r\n```', 'comment_created': datetime.datetime(2020, 7, 27, 9, 50, 46, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 463681735, 'comment_body': 'Not sure about this, might lead to `NullPointerException`s', 'comment_created': datetime.datetime(2020, 7, 31, 15, 34, 12, tzinfo=datetime.timezone.utc), 'commenter': 'zregvart', 'type': 'User'}, {'comment_id': 463684336, 'comment_body': 'No, this is fine, we are using similar approach for component with Extension for validation like this https://github.com/apache/camel/blob/master/components/camel-aws-s3/src/main/java/org/apache/camel/component/aws/s3/S3Component.java#L35', 'comment_created': datetime.datetime(2020, 7, 31, 15, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 463689546, 'comment_body': 'Content is not updated from original `adoc` file.', 'comment_created': datetime.datetime(2020, 7, 31, 15, 48, 37, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463692222, 'comment_body': 'I would suggest to reformat it like this:\r\n```\r\n    @Override\r\n    protected Result verifyParameters(Map<String, Object> parameters) {\r\n        ResultBuilder builder = ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.PARAMETERS)\r\n                                             .error(ResultErrorHelper.requiresOption(""accessKey"", parameters))\r\n                                             .error(ResultErrorHelper.requiresOption(""secretKey"", parameters))\r\n                                             .error(ResultErrorHelper.requiresOption(""region"", parameters));\r\n\r\n        // Validate using the catalog\r\n        super.verifyParametersAgainstCatalog(builder, parameters);\r\n\r\n        return builder.build();\r\n    }\r\n```', 'comment_created': datetime.datetime(2020, 7, 31, 15, 53, 27, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463692845, 'comment_body': 'And the same below', 'comment_created': datetime.datetime(2020, 7, 31, 15, 54, 38, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463694308, 'comment_body': 'This is TODO comment?', 'comment_created': datetime.datetime(2020, 7, 31, 15, 57, 10, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463695609, 'comment_body': 'Looks like it could be simplified:\r\n```\r\nReader reader = new BufferedReader(new InputStreamReader(minioObject, StandardCharsets.UTF_8));\r\n```', 'comment_created': datetime.datetime(2020, 7, 31, 15, 59, 40, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463699896, 'comment_body': 'Please avoid `star import` usage.', 'comment_created': datetime.datetime(2020, 7, 31, 16, 8, 36, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463700750, 'comment_body': 'It would be nice to extract all credentials into `.properties` file', 'comment_created': datetime.datetime(2020, 7, 31, 16, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463700982, 'comment_body': 'Please resolve this TODO', 'comment_created': datetime.datetime(2020, 7, 31, 16, 10, 47, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 463978808, 'comment_body': '```suggestion\r\n    private boolean autoCloseBody = true;\r\n```', 'comment_created': datetime.datetime(2020, 8, 1, 16, 41, 18, tzinfo=datetime.timezone.utc), 'commenter': 'dmvolod', 'type': 'User'}, {'comment_id': 463979851, 'comment_body': ""@Nayananga if two types of the requests are only possible, it's ok, but if you would like to extend, the requestType enum is better to use. It also common recommendation to review a large number of boolean flags which can be grouped together to the some enums types. Usually the minio API and Camel component pararameters can be not the same types and names.   "", 'comment_created': datetime.datetime(2020, 8, 1, 16, 53, 51, tzinfo=datetime.timezone.utc), 'commenter': 'dmvolod', 'type': 'User'}, {'comment_id': 463980253, 'comment_body': 'I saw this implementation in large number of components, developed by @omarsmak, @oscerd and other members, but a little bit confusing about error message as getCamelContext().getRegistry().findByType can return more than one record if user suddenly put more than one MinioClient.class in the registry even if it doesn\'t make sense.\r\nThe error will be ""No MinioClient instance in the registry"" but can be wrong enough.', 'comment_created': datetime.datetime(2020, 8, 1, 16, 58, 38, tzinfo=datetime.timezone.utc), 'commenter': 'dmvolod', 'type': 'User'}, {'comment_id': 463980528, 'comment_body': '@Nayananga a little bit confusing about key name and key value. The same as for `LENGTH`', 'comment_created': datetime.datetime(2020, 8, 1, 17, 1, 42, tzinfo=datetime.timezone.utc), 'commenter': 'dmvolod', 'type': 'User'}, {'comment_id': 463981326, 'comment_body': ""I introduced the autoDisvoverCliebt for this situation in 3.5.0. in case it is false, that method won't be called"", 'comment_created': datetime.datetime(2020, 8, 1, 17, 11, 19, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}, {'comment_id': 464088247, 'comment_body': 'Hi @omarsmak this has to handle since ```getMinioClient().removeObject(removeObjectRequest.build());``` throws an error', 'comment_created': datetime.datetime(2020, 8, 2, 15, 4, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464088357, 'comment_body': 'Hi @omarsmak this has to handle since ```getMinioClient().copyObject(copyObjectRequest.build());``` throws an error', 'comment_created': datetime.datetime(2020, 8, 2, 15, 5, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464100320, 'comment_body': ""Hi @omarsmak sorry, I didn't get this question?"", 'comment_created': datetime.datetime(2020, 8, 2, 17, 4, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464112015, 'comment_body': 'Hi @DenisIstomin, How can I do that?', 'comment_created': datetime.datetime(2020, 8, 2, 19, 3, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464113257, 'comment_body': 'Hi @omarsmak, I was actually mimicking [this](https://github.com/apache/camel/blob/d4cfbd3631a0b277b5228224e1855c7229062c21/components/camel-aws2-s3/src/main/java/org/apache/camel/component/aws2/s3/AWS2S3Producer.java#L573) line. I will put this as a constant in MinioConstants.java', 'comment_created': datetime.datetime(2020, 8, 2, 19, 15, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464113295, 'comment_body': 'Hi @omarsmak, I was actually mimicking [this](https://github.com/apache/camel/blob/d4cfbd3631a0b277b5228224e1855c7229062c21/components/camel-aws2-s3/src/main/java/org/apache/camel/component/aws2/s3/AWS2S3Producer.java#L573) line. I will put this as a constant in MinioConstants.java', 'comment_created': datetime.datetime(2020, 8, 2, 19, 15, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464269216, 'comment_body': 'What I mean here, does it make sense to handle it through  `getExceptionHandler().handleException`', 'comment_created': datetime.datetime(2020, 8, 3, 8, 32, 27, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 464270607, 'comment_body': 'What I mean here, are the `accessKey`, `secretKey` and `region` are required in order to initiate the client? What happens if one of these is null or not set?', 'comment_created': datetime.datetime(2020, 8, 3, 8, 35, 8, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 464272194, 'comment_body': 'An example [here](https://github.com/apache/camel/blob/master/components/camel-azure-storage-blob/src/test/java/org/apache/camel/component/azure/storage/blob/BlobTestUtils.java)', 'comment_created': datetime.datetime(2020, 8, 3, 8, 38, 19, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 464275690, 'comment_body': '@Nayananga a tip: I think it will be easier for these Integration Tests classes to run through maven command line instead of having to remove the `@Disabled`. An example, take a look at this [component IT tests](https://github.com/apache/camel/tree/master/components/camel-azure-storage-blob/src/test/java/org/apache/camel/component/azure/storage/blob). You will need to add a maven profile that will run IT tests that end with IT [here](https://github.com/apache/camel/blob/master/components/camel-azure-storage-blob/pom.xml#L87). And then, you can add a [Util class](https://github.com/apache/camel/blob/master/components/camel-azure-storage-blob/src/test/java/org/apache/camel/component/azure/storage/blob/BlobTestUtils.java#L40) to load the credentials from the maven command line. Therefore after you have done all of the mentioned steps, you will just run your IT like this:\r\n`mvn clean test -PfullTests` ', 'comment_created': datetime.datetime(2020, 8, 3, 8, 45, 16, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 464280762, 'comment_body': '@dmvolod yes, I agree, this error message could be misleading, I think error message could be changed if there are two cases, one for more than one `MinioClient` instance and other one for in case there is no instance of `MinioClient`.', 'comment_created': datetime.datetime(2020, 8, 3, 8, 54, 29, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 464614021, 'comment_body': 'Hi, @omarsmak I was mimicking [this](https://github.com/apache/camel/blob/d4cfbd3631a0b277b5228224e1855c7229062c21/components/camel-aws2-s3/src/main/java/org/apache/camel/component/aws2/s3/AWS2S3Consumer.java#L288) line. should I keep this or change it to maybe ```LOG.warn```?', 'comment_created': datetime.datetime(2020, 8, 3, 19, 20, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464620523, 'comment_body': ""I'll remove this error handle since this is redundant"", 'comment_created': datetime.datetime(2020, 8, 3, 19, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464623864, 'comment_body': '@omarsmak, As per [Java Client API Reference](https://docs.min.io/docs/java-client-api-reference.html) you can create MinioClient with or without ```accessKey```, ```secretKey``` (namely **anonymous access**) or ```region```. ', 'comment_created': datetime.datetime(2020, 8, 3, 19, 42, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 464886215, 'comment_body': '@Nayananga my question is about catching `Exception e`, do you need your consumer to ignore *all* exceptions (as the case now) or you need your consumer to throw  and halt camel process in case minio client throw any exceptions other than `MinioException`? My gut feeling, you may just need to remove `catch (Exception e)` block and only handle `MinioException` as you are currently doing, by that camel will halt its process in any unexpected process.', 'comment_created': datetime.datetime(2020, 8, 4, 8, 27, 47, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 466215578, 'comment_body': 'Hi @omarsmak, thank you for your suggestion. I did some changes :)', 'comment_created': datetime.datetime(2020, 8, 6, 7, 55, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 466216204, 'comment_body': '@omarsmak is it okay to mark this as resolved?', 'comment_created': datetime.datetime(2020, 8, 6, 7, 56, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 466837828, 'comment_body': '@omarsmak, @DenisIstomin I have put minio_key.properties file in test/resources file along with the log4j2.properties file, \r\n```\r\nendpoint=https://play.min.io\r\naccessKey=Q3AM3UQ867SPQQA43P2F\r\nsecretKey=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\r\nregion=us-west-1\r\n```\r\nbut then it throws this error ```java.lang.Exception: Make sure to supply minio endpoint and credentials``` as throws in [this](https://github.com/apache/camel/blob/0370bc71394616c407048594bd840f93a11f23f5/components/camel-azure-storage-blob/src/test/java/org/apache/camel/component/azure/storage/blob/BlobTestUtils.java#L43) line. Any suggestions?', 'comment_created': datetime.datetime(2020, 8, 7, 6, 1, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 466840183, 'comment_body': 'Hi this problem solved', 'comment_created': datetime.datetime(2020, 8, 7, 6, 9, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 467483667, 'comment_body': 'Hi @dmvolod, are you suggesting that I can group boolean flags with the same default value together to some enums types?\r\nand also \r\n\r\n> Usually the minio API and Camel component pararameters can be not the same types and names.\r\n\r\ncould you provide me with an example as such?', 'comment_created': datetime.datetime(2020, 8, 8, 16, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 467484654, 'comment_body': 'Hi all,\r\n```\r\nif (clients.size() > 1) {\r\n                LOG.debug(""Found more than one MinioClient instance in the registry, getting the first one..."");\r\n                configuration.setMinioClient(clients.stream().findFirst().get());\r\n            } else if (clients.size() == 1) {\r\n                LOG.debug(""Found exactly one MinioClient instance in the registry"");\r\n                configuration.setMinioClient(clients.stream().findFirst().get());\r\n            } else {\r\n                LOG.debug(""No MinioClient instance in the registry"");\r\n            }\r\n```\r\nis this approach okay?', 'comment_created': datetime.datetime(2020, 8, 8, 17, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}]","[{'commit_sha': '1535a16a62132c3be469a43230d0507eba76063c', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '228df3f1623107af49b9755bf053b063e3375dda', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0fd206c77f5d3fa320bad1cd34683710c229b2cf', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '90bce55a7e8b2800e08abaac9e633d36e23ae4fe', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e66a510a172e04b1bbeece7e1a5d330944daf14', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6a9b5ac3b4d5a128c045495008174d905492576', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cfce4fb8f46ec8057652ad366b47bbc93da82849', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1328d8106703a3d90d671d8d32c5eaa7419fa147', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '843335696c2da037e026ad7cc0318cf36494b183', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2de2427460630152d5be00c6c33bad22c015f2cd', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bcf25f83ff57e5e99db01aba34cbf6ce051dba00', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '152fd8b381686621d3de6a6300323fe89f42720b', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cce1852e6ad88c7c3a35134e8b0771f3a216e754', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0acedfcedaaf81796626b5f205f187b1262137ec', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acaa69fc2cf7a1f7127fc945e0bc5724c0af8aaa', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '45beb5ddeaad938003b700bcf4f34b1da4105be3', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c31ba2f8a3f6292297ff18111c199ffd8e4bb2b8', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6972439ee57658ed13ff58c89df749dfafbfa18b', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f4aea6f0902b2108a296a183973813785969618b', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9dd0f1297a490222db92d0e8aee5919403fdcda7', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e2463ac08dfe95e015a7c22394bba783110e159', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '217cea4fdb007779cfeaa3f709c8b5111de0ec22', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a118ffe604943fd210497c88aaf14265888eceb8', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f2e79fda016b69999310571208bcda56d08251a4', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08f2029caf83805ec099e160924b48da294350d8', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbe1b9d6a59d2d844b774b48c576d31519b8239e', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e215f54a6df69b8da845a48ab9966c6f5afdef8', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c39393a1c2b10699825ca6286d2d5f3c0062dab', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bbe7f6fbe7e11a8d4c0ddf6316f11d1848b225f5', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c35a7cb2bc1e76ec8968eb7e7b7b92b9c267ed0f', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d02c2928ffc2cb751e6fae3d2353aa29fda95f0', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '166adad9f8d0ae86f322dc34e5480a3d2e0a7b73', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '429db9080e37920a959ef6837141e7ed94357f9d', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '585e4deebddd6999431c35a3b5a8f3ce72f1f974', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd09d6135cbb90dde34b080b393621fa69c16777d', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c627c28ed07400606c1f31ef1a6a6e0ce975da10', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e01c571ced63b6f85456cb419085ad2a5db9df3d', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '652ceb5290bc403dfa12cc3dfc27447163f07e20', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5a8af2544004b9d92e26d5db558932c2bb446f4f', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '170ea27658ce31d585e0df8cddc599d6e2e63d74', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c97f24959e7766acbc0e8159512233954d0ecbb', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1f08aa281662d69aecfdbad038df3b1d8add228b', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fa241fb3e2068636d81e3e918a63414639c06eec', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '27adf752f62677ae3e8488ed7350fb3bd5e2eefa', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '73e3b6bd522d7123fee5dbe1045b5a0890ffe326', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7136941423266b6a21f290a250e1e0017e439219', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b27c7c868f05fbad30816b0a540fc4aa4c0965d', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '56eddb9a3966a9f0dfa00c44ea030b09db3492c3', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '409614e6426f1393c9c465c7dae4ff670902b2d2', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c308169b9ee19d93399a599b1a4df08e7816b5fd', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1bebb8cb5eea864f23e7347cc793c84ea5036cf', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b08f49d96a2ce88cc46a80decd169986249b5779', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '18ec4f679abc44faac6792ddc5a619a880e05e93', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e7587acde63bffaa8966d15689af206cb9577d9', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9f619c84b46945598c63f1d7ad04cdefa1329d39', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ce02877a27e4c44242760f1bd7af412bd220664', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae457d0c7b0907f3ede8722baf1eec49803d60d4', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e7c617cce3dc8ee50b2c4eaf46d9730918ce63d', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}]",Nayananga Anuradha Muhandiram,25351304,nayanangamuhandiram@gmail.com,User,,58,,7,28
465646973,Resolved a TODO in camel minio component integration test,There has been a known issue in minio consumer implementation which is now solved,True,4082,https://api.github.com/repos/apache/camel/pulls/4082,https://github.com/apache/camel/pull/4082,closed,12,13,3,1,0,0,0,0,[],2020-08-10 17:57:37+00:00,2020-08-10 18:52:19+00:00,3282.0,0:54:42,[],"[{'commit_sha': '9b22587b417fd5b5f2bd759ce8dbf381bb70b7e2', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}]",Nayananga Anuradha Muhandiram,25351304,nayanangamuhandiram@gmail.com,User,,58,,7,28
470056164,Added testcontainer integration test for Minio,"I wanted to integrate testcontainer integration testing to this component. But I keep getting this error
> Caused by: java.net.ConnectException: Failed to connect to /127.0.0.1:9000

here I have attached the log
```
2020-08-19 14:37:43,137 [main           ] INFO  CamelTestSupport               - ********************************************************************************
2020-08-19 14:37:43,145 [main           ] INFO  CamelTestSupport               - Testing: sendInOnly()(org.apache.camel.component.minio.integration.testContainers.MinioComponentIntegrationTest)
2020-08-19 14:37:43,145 [main           ] INFO  CamelTestSupport               - ********************************************************************************
2020-08-19 14:37:43,357 [Thread-1       ] INFO  DockerClientProviderStrategy   - Loaded org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy from ~/.testcontainers.properties, will try it first
2020-08-19 14:37:44,685 [Thread-1       ] INFO  PropertyClientProviderStrategy - Found docker client settings from environment
2020-08-19 14:37:44,685 [Thread-1       ] INFO  DockerClientProviderStrategy   - Found Docker environment with Environment variables, system properties and defaults. Resolved dockerHost=unix:///var/run/docker.sock
2020-08-19 14:37:44,966 [Thread-1       ] INFO  DockerClientFactory            - Docker host IP address is localhost
2020-08-19 14:37:45,012 [Thread-1       ] INFO  DockerClientFactory            - Connected to docker: 
  Server Version: 19.03.8
  API Version: 1.40
  Operating System: Ubuntu 20.04.1 LTS
  Total Memory: 15881 MB
2020-08-19 14:37:45,095 [Thread-1       ] WARN  RegistryAuthLocator            - Failure when attempting to lookup auth config (dockerImageName: testcontainersofficial/ryuk:0.3.0, configFile: /home/nayananga/.docker/config.json. Falling back to docker-java default behaviour. Exception message: /home/nayananga/.docker/config.json (No such file or directory)
2020-08-19 14:37:46,740 [Thread-1       ] INFO  DockerClientFactory            - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2020-08-19 14:37:46,740 [Thread-1       ] INFO  DockerClientFactory            - Checking the system...
2020-08-19 14:37:46,742 [Thread-1       ] INFO  DockerClientFactory            - ✔︎ Docker server version should be at least 1.6.0
2020-08-19 14:37:46,935 [Thread-1       ] INFO  DockerClientFactory            - ✔︎ Docker environment should have more than 2GB free disk space
2020-08-19 14:37:46,948 [Thread-1       ] INFO  🐳 [minio/minio:latest]        - Creating container for image: minio/minio:latest
2020-08-19 14:37:47,549 [Thread-1       ] INFO  🐳 [minio/minio:latest]        - Starting container with ID: e3587aa9bbe5f20a1a0df332523d75d7a4a8d581636961754070ab6a5c7b2b87
2020-08-19 14:37:48,023 [Thread-1       ] INFO  🐳 [minio/minio:latest]        - Container minio/minio:latest is starting: e3587aa9bbe5f20a1a0df332523d75d7a4a8d581636961754070ab6a5c7b2b87
2020-08-19 14:37:48,079 [Thread-1       ] INFO  HttpWaitStrategy               - /nifty_perlman: Waiting for 10 seconds for URL: http://localhost:32785/minio/health/ready
2020-08-19 14:37:49,809 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: 
2020-08-19 14:37:49,810 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:  You are running an older version of MinIO released 2 days ago 
2020-08-19 14:37:49,811 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:  Update: docker pull minio/minio:RELEASE.2020-08-18T19-41-00Z 
2020-08-19 14:37:49,812 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: 
2020-08-19 14:37:49,812 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: 
2020-08-19 14:37:49,832 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: Attempting encryption of all config, IAM users and policies on MinIO backend
2020-08-19 14:37:50,116 [Thread-1       ] INFO  🐳 [minio/minio:latest]        - Container minio/minio:latest started in PT6.805S
2020-08-19 14:37:50,183 [main           ] INFO  LRUCacheFactory                - Detected and using LRUCacheFactory: camel-caffeine-lrucache
2020-08-19 14:37:50,770 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: Endpoint:  http://172.17.0.3:9000  http://127.0.0.1:9000
2020-08-19 14:37:50,771 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: 
2020-08-19 14:37:50,771 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: Browser Access:
2020-08-19 14:37:50,771 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:    http://172.17.0.3:9000  http://127.0.0.1:9000
2020-08-19 14:37:50,772 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: 
2020-08-19 14:37:50,772 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT: Object API (Amazon S3 compatible):
2020-08-19 14:37:50,772 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:    Go:         https://docs.min.io/docs/golang-client-quickstart-guide
2020-08-19 14:37:50,773 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:    Java:       https://docs.min.io/docs/java-client-quickstart-guide
2020-08-19 14:37:50,774 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:    Python:     https://docs.min.io/docs/python-client-quickstart-guide
2020-08-19 14:37:50,775 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:    JavaScript: https://docs.min.io/docs/javascript-client-quickstart-guide
2020-08-19 14:37:50,776 [tream-789982197] INFO  Containers                     - [tc-9EqZjVGT] STDOUT:    .NET:       https://docs.min.io/docs/dotnet-client-quickstart-guide
2020-08-19 14:37:50,937 [main           ] INFO  AbstractCamelContext           - Apache Camel  (camel-1) is starting
2020-08-19 14:37:50,940 [main           ] INFO  AbstractCamelContext           - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2020-08-19 14:37:50,940 [main           ] INFO  AbstractCamelContext           - Using HealthCheck: camel-health
2020-08-19 14:37:51,161 [main           ] ERROR AbstractCamelContext           - Error starting CamelContext (camel-1) due to exception thrown: Failed to start route route1 because of null
org.apache.camel.FailedToStartRouteException: Failed to start route route1 because of null
	at org.apache.camel.impl.engine.RouteService.warmUp(RouteService.java:125) ~[classes/:?]
	at org.apache.camel.impl.engine.InternalRouteStartupManager.doWarmUpRoutes(InternalRouteStartupManager.java:263) ~[classes/:?]
	at org.apache.camel.impl.engine.InternalRouteStartupManager.safelyStartRouteServices(InternalRouteStartupManager.java:156) ~[classes/:?]
	at org.apache.camel.impl.engine.InternalRouteStartupManager.doStartOrResumeRoutes(InternalRouteStartupManager.java:114) ~[classes/:?]
	at org.apache.camel.impl.engine.AbstractCamelContext.doStartCamel(AbstractCamelContext.java:2833) ~[classes/:?]
	at org.apache.camel.impl.engine.AbstractCamelContext.doStartContext(AbstractCamelContext.java:2674) ~[classes/:?]
	at org.apache.camel.impl.engine.AbstractCamelContext.doStart(AbstractCamelContext.java:2637) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2450) ~[classes/:?]
	at org.apache.camel.test.junit5.CamelTestSupport.startCamelContext(CamelTestSupport.java:731) ~[classes/:?]
	at org.apache.camel.test.junit5.CamelTestSupport.doSetUp(CamelTestSupport.java:504) ~[classes/:?]
	at org.apache.camel.test.junit5.CamelTestSupport.setUp(CamelTestSupport.java:379) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_265]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_265]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_265]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_265]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686) ~[junit-platform-commons-1.6.2.jar:1.6.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:76) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:481) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$18(ClassBasedTestDescriptor.java:466) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$2(TestMethodTestDescriptor.java:169) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$5(TestMethodTestDescriptor.java:197) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:197) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:166) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:133) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71) ~[junit-jupiter-engine-5.6.2.jar:5.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[?:1.8.0_265]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[?:1.8.0_265]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) ~[junit-platform-engine-1.6.2.jar:1.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248) ~[junit-platform-launcher-1.6.2.jar:1.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211) ~[junit-platform-launcher-1.6.2.jar:1.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226) [junit-platform-launcher-1.6.2.jar:1.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199) [junit-platform-launcher-1.6.2.jar:1.6.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132) [junit-platform-launcher-1.6.2.jar:1.6.2]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
Caused by: org.apache.camel.RuntimeCamelException: java.net.ConnectException: Failed to connect to /127.0.0.1:9000
	at org.apache.camel.RuntimeCamelException.wrapRuntimeException(RuntimeCamelException.java:68) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.doFail(BaseService.java:411) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.fail(BaseService.java:337) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:127) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:228) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:101) ~[classes/:?]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.doStart(RedeliveryErrorHandler.java:1459) ~[classes/:?]
	at org.apache.camel.support.ChildServiceSupport.start(ChildServiceSupport.java:60) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:101) ~[classes/:?]
	at org.apache.camel.processor.channel.DefaultChannel.doStart(DefaultChannel.java:143) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:87) ~[classes/:?]
	at org.apache.camel.processor.Pipeline.doStart(Pipeline.java:154) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.processor.DelegateAsyncProcessor.doStart(DelegateAsyncProcessor.java:78) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.startChildService(RouteService.java:334) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.doWarmUp(RouteService.java:184) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.warmUp(RouteService.java:123) ~[classes/:?]
	... 78 more
Caused by: java.net.ConnectException: Failed to connect to /127.0.0.1:9000
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:265) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:183) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.9.jar:?]
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229) ~[okhttp-3.14.9.jar:?]
	at okhttp3.RealCall.execute(RealCall.java:81) ~[okhttp-3.14.9.jar:?]
	at io.minio.MinioClient.execute(MinioClient.java:1014) ~[minio-7.1.0.jar:7.1.0]
	at io.minio.MinioClient.execute(MinioClient.java:935) ~[minio-7.1.0.jar:7.1.0]
	at io.minio.MinioClient.executeHead(MinioClient.java:1204) ~[minio-7.1.0.jar:7.1.0]
	at io.minio.MinioClient.bucketExists(MinioClient.java:3592) ~[minio-7.1.0.jar:7.1.0]
	at org.apache.camel.component.minio.MinioEndpoint.bucketExists(MinioEndpoint.java:188) ~[classes/:?]
	at org.apache.camel.component.minio.MinioEndpoint.doStart(MinioEndpoint.java:103) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:228) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:101) ~[classes/:?]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.doStart(RedeliveryErrorHandler.java:1459) ~[classes/:?]
	at org.apache.camel.support.ChildServiceSupport.start(ChildServiceSupport.java:60) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:101) ~[classes/:?]
	at org.apache.camel.processor.channel.DefaultChannel.doStart(DefaultChannel.java:143) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:87) ~[classes/:?]
	at org.apache.camel.processor.Pipeline.doStart(Pipeline.java:154) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.processor.DelegateAsyncProcessor.doStart(DelegateAsyncProcessor.java:78) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.startChildService(RouteService.java:334) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.doWarmUp(RouteService.java:184) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.warmUp(RouteService.java:123) ~[classes/:?]
	... 78 more
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method) ~[?:1.8.0_265]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_265]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_265]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_265]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_265]
	at java.net.Socket.connect(Socket.java:607) ~[?:1.8.0_265]
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:130) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:263) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:183) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.9.jar:?]
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.9.jar:?]
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229) ~[okhttp-3.14.9.jar:?]
	at okhttp3.RealCall.execute(RealCall.java:81) ~[okhttp-3.14.9.jar:?]
	at io.minio.MinioClient.execute(MinioClient.java:1014) ~[minio-7.1.0.jar:7.1.0]
	at io.minio.MinioClient.execute(MinioClient.java:935) ~[minio-7.1.0.jar:7.1.0]
	at io.minio.MinioClient.executeHead(MinioClient.java:1204) ~[minio-7.1.0.jar:7.1.0]
	at io.minio.MinioClient.bucketExists(MinioClient.java:3592) ~[minio-7.1.0.jar:7.1.0]
	at org.apache.camel.component.minio.MinioEndpoint.bucketExists(MinioEndpoint.java:188) ~[classes/:?]
	at org.apache.camel.component.minio.MinioEndpoint.doStart(MinioEndpoint.java:103) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:228) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:101) ~[classes/:?]
	at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.doStart(RedeliveryErrorHandler.java:1459) ~[classes/:?]
	at org.apache.camel.support.ChildServiceSupport.start(ChildServiceSupport.java:60) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:101) ~[classes/:?]
	at org.apache.camel.processor.channel.DefaultChannel.doStart(DefaultChannel.java:143) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:87) ~[classes/:?]
	at org.apache.camel.processor.Pipeline.doStart(Pipeline.java:154) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.support.processor.DelegateAsyncProcessor.doStart(DelegateAsyncProcessor.java:78) ~[classes/:?]
	at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[classes/:?]
	at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:84) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.startChildService(RouteService.java:334) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.doWarmUp(RouteService.java:184) ~[classes/:?]
	at org.apache.camel.impl.engine.RouteService.warmUp(RouteService.java:123) ~[classes/:?]
	... 78 more
2020-08-19 14:37:51,170 [main           ] INFO  AbstractCamelContext           - Apache Camel  (camel-1) is shutting down
2020-08-19 14:37:51,179 [main           ] INFO  AbstractCamelContext           - Apache Camel  (camel-1) uptime 0.241 seconds
2020-08-19 14:37:51,179 [main           ] INFO  AbstractCamelContext           - Apache Camel  (camel-1) is shutdown in 0.009 seconds
```",True,4101,https://api.github.com/repos/apache/camel/pulls/4101,https://github.com/apache/camel/pull/4101,closed,759,62,19,8,6,5,0,0,[],2020-08-19 10:00:59+00:00,2020-08-27 06:03:21+00:00,676942.0,"7 days, 20:02:22","[{'comment_id': 472921664, 'comment_body': ""Please don't add credentials to the source code files"", 'comment_created': datetime.datetime(2020, 8, 19, 10, 19, 23, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 473064197, 'comment_body': ""@omarsmak sure I'll import them from a resource file, Any suggestions regarding above error?"", 'comment_created': datetime.datetime(2020, 8, 19, 14, 17, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Nayananga', 'type': 'User'}, {'comment_id': 473074534, 'comment_body': ""@Nayananga Try to use something similar to [this](https://github.com/apache/camel/blob/992a6b9685f4db49236e540af2546548cf99a7d3/components/camel-couchdb/src/test/java/org/apache/camel/component/couchdb/CouchDbTestSupport.java) as I think testcontainer will generate dynamic IP but then needs to be mapped and then something like `getContainer(CONTAINER_NAME).getContainerIpAddress();` to access your container's IP"", 'comment_created': datetime.datetime(2020, 8, 19, 14, 30, 42, tzinfo=datetime.timezone.utc), 'commenter': 'omarsmak', 'type': 'User'}, {'comment_id': 475276617, 'comment_body': 'Junit5 is used, would be better to remove `public` access modifier in all test classes and all tests methods. So they will have default access modifier:\r\n```\r\nclass MinioComponentIntegrationTest extends CamelTestSupport {\r\n```', 'comment_created': datetime.datetime(2020, 8, 23, 22, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}, {'comment_id': 475276725, 'comment_body': 'Junit5 is used, would be better to remove `public` access modifier in all test classes and all tests methods. So they will have default access modifier:\r\n```\r\nvoid sendInOnly() throws Exception {\r\n```', 'comment_created': datetime.datetime(2020, 8, 23, 22, 47, 26, tzinfo=datetime.timezone.utc), 'commenter': 'DenisIstomin', 'type': 'User'}]","[{'commit_sha': '4282fb6650ff68e2bbd72bea5dad8088e53c0b71', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b0a058ceed181e6b40333e88e99d4ecf77a49177', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e168043395f49d75eb2cf3cd6d0db492a2e8a040', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '06d4522780e935af60a958c0e79797aa6ebdd354', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a2b730974c7cb925c6efa0861bc96025da9e7184', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '71b4301477f9f9b14d592665b3027390edc48659', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ef0e93a0343995930aceff36ebbca1e278364460', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b3bbbbb23ee79f8c0f685f3fbb7f43e1a5bc0da1', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}]",Nayananga Anuradha Muhandiram,25351304,nayanangamuhandiram@gmail.com,User,,58,,7,28
469077845,Added minio example,,True,15,https://api.github.com/repos/apache/camel-examples/pulls/15,https://github.com/apache/camel-examples/pull/15,closed,540,5,10,3,0,1,0,0,[],2020-08-17 21:30:40+00:00,2020-08-19 18:16:21+00:00,161141.0,"1 day, 20:45:41","[{'comment_id': 471954001, 'comment_body': 'Please add Asf license', 'comment_created': datetime.datetime(2020, 8, 18, 6, 55, tzinfo=datetime.timezone.utc), 'commenter': 'oscerd', 'type': 'User'}]","[{'commit_sha': '334e105fcd763b276e11bfc9160d5cadb215fbb2', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '188ae25c94de92e73aca33ea553a88ecbb9b2050', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8e72cc0455221e5731f2932e4418966ae9e6e15c', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}]",Nayananga Anuradha Muhandiram,25351304,nayanangamuhandiram@gmail.com,User,,58,,7,28
469034098,Created starter for minio,,True,140,https://api.github.com/repos/apache/camel-spring-boot/pulls/140,https://github.com/apache/camel-spring-boot/pull/140,closed,1385,6,15,1,6,0,0,0,[],2020-08-17 19:46:18+00:00,2020-08-22 14:34:34+00:00,413296.0,"4 days, 18:48:16",[],"[{'commit_sha': '1c7f7688feecf139aed5ce9d85ae04b96adc1a2e', 'committer_username': 'Nayananga', 'committer_name': 'Nayananga Anuradha Muhandiram', 'committer_email': 'nayanangamuhandiram@gmail.com', 'commit_date': datetime.datetime(2017, 1, 25, 18, 2, 22, tzinfo=datetime.timezone.utc)}]",Nayananga Anuradha Muhandiram,25351304,nayanangamuhandiram@gmail.com,User,,58,,7,28

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
206317,camel,apache/camel,Java,4925,5461,270,1417,71923,11,66,11,"[{'id': 470056164, 'number': 4101, 'closed': datetime.datetime(2020, 8, 27, 6, 3, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 10, 0, 59, tzinfo=datetime.timezone.utc), 'time_taken': 676942.0, 'time_delta': '7 days, 20:02:22', 'additions': 759, 'deletions': 62, 'state': 'closed'}, {'id': 465646973, 'number': 4082, 'closed': datetime.datetime(2020, 8, 10, 18, 52, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 17, 57, 37, tzinfo=datetime.timezone.utc), 'time_taken': 3282.0, 'time_delta': '0:54:42', 'additions': 12, 'deletions': 13, 'state': 'closed'}, {'id': 430409217, 'number': 3897, 'closed': datetime.datetime(2020, 8, 10, 12, 43, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 7, 21, 45, 18, tzinfo=datetime.timezone.utc), 'time_taken': 5497096.0, 'time_delta': '63 days, 14:58:16', 'additions': 9039, 'deletions': 2, 'state': 'closed'}, {'id': 309161667, 'number': 3115, 'closed': datetime.datetime(2019, 8, 21, 7, 46, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 20, 17, 50, 25, tzinfo=datetime.timezone.utc), 'time_taken': 50151.0, 'time_delta': '13:55:51', 'additions': 387, 'deletions': 1, 'state': 'closed'}, {'id': 308273399, 'number': 3108, 'closed': datetime.datetime(2019, 8, 19, 14, 4, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 17, 7, 21, 28, tzinfo=datetime.timezone.utc), 'time_taken': 196975.0, 'time_delta': '2 days, 6:42:55', 'additions': 0, 'deletions': 2, 'state': 'closed'}, {'id': 300212494, 'number': 3058, 'closed': datetime.datetime(2019, 7, 25, 9, 19, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 23, 9, 46, 2, tzinfo=datetime.timezone.utc), 'time_taken': 171192.0, 'time_delta': '1 day, 23:33:12', 'additions': 29, 'deletions': 15, 'state': 'closed'}, {'id': 299317965, 'number': 3051, 'closed': datetime.datetime(2019, 7, 22, 7, 13, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 19, 12, 40, 50, tzinfo=datetime.timezone.utc), 'time_taken': 239580.0, 'time_delta': '2 days, 18:33:00', 'additions': 638, 'deletions': 640, 'state': 'closed'}, {'id': 298760599, 'number': 3047, 'closed': datetime.datetime(2019, 7, 18, 7, 41, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 18, 5, 29, 22, tzinfo=datetime.timezone.utc), 'time_taken': 7911.0, 'time_delta': '2:11:51', 'additions': 170, 'deletions': 170, 'state': 'closed'}, {'id': 297209035, 'number': 3040, 'closed': datetime.datetime(2019, 7, 14, 19, 35, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 12, 20, 14, 22, tzinfo=datetime.timezone.utc), 'time_taken': 170453.0, 'time_delta': '1 day, 23:20:53', 'additions': 438, 'deletions': 440, 'state': 'closed'}, {'id': 296504429, 'number': 3032, 'closed': datetime.datetime(2019, 7, 12, 8, 58, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 11, 7, 33, 10, tzinfo=datetime.timezone.utc), 'time_taken': 91506.0, 'time_delta': '1 day, 1:25:06', 'additions': 154, 'deletions': 188, 'state': 'closed'}, {'id': 295149833, 'number': 3024, 'closed': datetime.datetime(2019, 7, 8, 6, 4, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 8, 1, 51, 25, tzinfo=datetime.timezone.utc), 'time_taken': 15180.0, 'time_delta': '4:13:00', 'additions': 15, 'deletions': 13, 'state': 'closed'}, {'id': 293055586, 'number': 3006, 'closed': datetime.datetime(2019, 7, 1, 16, 32, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 29, 18, 36, 39, tzinfo=datetime.timezone.utc), 'time_taken': 165359.0, 'time_delta': '1 day, 21:55:59', 'additions': 859, 'deletions': 859, 'state': 'closed'}, {'id': 292979013, 'number': 3003, 'closed': datetime.datetime(2019, 6, 29, 6, 4, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 28, 21, 51, 30, tzinfo=datetime.timezone.utc), 'time_taken': 29609.0, 'time_delta': '8:13:29', 'additions': 515, 'deletions': 515, 'state': 'closed'}, {'id': 291965014, 'number': 3001, 'closed': datetime.datetime(2019, 6, 28, 14, 0, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 26, 12, 27, 57, tzinfo=datetime.timezone.utc), 'time_taken': 178382.0, 'time_delta': '2 days, 1:33:02', 'additions': 314, 'deletions': 323, 'state': 'closed'}, {'id': 290818240, 'number': 2995, 'closed': datetime.datetime(2019, 6, 25, 4, 4, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 22, 11, 39, 33, tzinfo=datetime.timezone.utc), 'time_taken': 231921.0, 'time_delta': '2 days, 16:25:21', 'additions': 155, 'deletions': 155, 'state': 'closed'}, {'id': 290790715, 'number': 2994, 'closed': datetime.datetime(2019, 6, 22, 9, 32, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 22, 3, 19, 20, tzinfo=datetime.timezone.utc), 'time_taken': 22367.0, 'time_delta': '6:12:47', 'additions': 1778, 'deletions': 1802, 'state': 'closed'}, {'id': 290161795, 'number': 2987, 'closed': datetime.datetime(2019, 6, 20, 20, 45, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 20, 10, 47, 55, tzinfo=datetime.timezone.utc), 'time_taken': 35833.0, 'time_delta': '9:57:13', 'additions': 241, 'deletions': 9, 'state': 'closed'}, {'id': 289732949, 'number': 2986, 'closed': datetime.datetime(2019, 6, 20, 10, 2, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 19, 14, 27, 12, tzinfo=datetime.timezone.utc), 'time_taken': 70510.0, 'time_delta': '19:35:10', 'additions': 0, 'deletions': 0, 'state': 'closed'}, {'id': 289588795, 'number': 2985, 'closed': datetime.datetime(2019, 6, 19, 12, 38, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 19, 8, 15, 27, tzinfo=datetime.timezone.utc), 'time_taken': 15811.0, 'time_delta': '4:23:31', 'additions': 0, 'deletions': 0, 'state': 'closed'}]"
238404616,camel-examples,apache/camel-examples,Java,363,398,39,125,2734,1,1,1,"[{'id': 469077845, 'number': 15, 'closed': datetime.datetime(2020, 8, 19, 18, 16, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 21, 30, 40, tzinfo=datetime.timezone.utc), 'time_taken': 161141.0, 'time_delta': '1 day, 20:45:41', 'additions': 540, 'deletions': 5, 'state': 'closed'}]"
228330020,camel-spring-boot,apache/camel-spring-boot,Java,166,154,28,830,43808,0,41,0,"[{'id': 469034098, 'number': 140, 'closed': datetime.datetime(2020, 8, 22, 14, 34, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 19, 46, 18, tzinfo=datetime.timezone.utc), 'time_taken': 413296.0, 'time_delta': '4 days, 18:48:16', 'additions': 1385, 'deletions': 6, 'state': 'closed'}]"
