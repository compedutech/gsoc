pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
672597340,Altitude crossing,"In this pull request, an attempt has been made to include altitude crossing detection. The structure seems to be similar to `LithobrakeEvent`.


Orekit's implementation stops propagation if the altitude starts to get lower than the threshold but continues propagation while ascending. Here, even though there are `terminal` and `direction` attributes, I immediately couldn't find a way to handle both at the same time, i.e. if `direction` is from up to down, `terminal=False` and if `direction` is down to up, `terminal=True`. But this might be done in some way...

- [ ] Based on the above, handle the `terminal` attribute? 

**Question**

- Is it a good choice to have a default threshold altitude or should the user compulsorily pass it?
- It seems there is currently no way to get an orbit's altitude (eg: `orbit.alt`)? If it looks like a plausible addition, `H - self._R` can be changed to `orbit.alt`.

Thanks!",True,1254,https://api.github.com/repos/poliastro/poliastro/pulls/1254,https://github.com/poliastro/poliastro/pull/1254,closed,141,11,2,2,13,11,0,0,[],2021-06-17 12:45:38+00:00,2021-06-20 14:46:50+00:00,266472.0,"3 days, 2:01:12","[{'comment_id': 654778039, 'comment_body': 'Looks good! 🎉 ', 'comment_created': datetime.datetime(2021, 6, 19, 10, 13, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654778366, 'comment_body': 'Because this is named `AltitudeCrossEvent`, let us make the threshold altitude to be the first parameter and impose it not to be optional. Also, I think we should change its name just to `alt`, as it is shorter.\r\n\r\n```python\r\ndef __init__(self, alt, R, terminal=True, direction=0):\r\n    ...\r\n```', 'comment_created': datetime.datetime(2021, 6, 19, 10, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654780753, 'comment_body': 'Let us rename variable `H` to `r_norm` in order no to confuse it with height.', 'comment_created': datetime.datetime(2021, 6, 19, 10, 42, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654781099, 'comment_body': 'There is no need to have an altitude argument in this case. Hence:\r\n\r\n```python\r\ndef __init__(self, R, terminal=True, direction=0)\r\n    ...\r\n```', 'comment_created': datetime.datetime(2021, 6, 19, 10, 45, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654783972, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 6, 19, 11, 16, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 654784014, 'comment_body': 'Thanks for these suggestions!', 'comment_created': datetime.datetime(2021, 6, 19, 11, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 654784073, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 6, 19, 11, 17, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 654785032, 'comment_body': 'Were the changes in this notebook intended? They do not introduced any kind of feature nor increase the performance.', 'comment_created': datetime.datetime(2021, 6, 19, 11, 28, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654785329, 'comment_body': 'The doctest builds in this PR yielded an error since I had changed the signature of `LithobrakeEvent` by allowing an astropy `Quantity` object instead of a float. So a corresponding change needed to be made in the doc examples.', 'comment_created': datetime.datetime(2021, 6, 19, 11, 32, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 654810758, 'comment_body': 'Alright, so let us make the `Event` class and the members which inherit from it to work without units. This was the original behavior, so let us keep it this way.', 'comment_created': datetime.datetime(2021, 6, 19, 15, 47, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654810795, 'comment_body': 'Only files modified in this PR should be the `events.py` and associated tests.', 'comment_created': datetime.datetime(2021, 6, 19, 15, 48, 21, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}]","[{'commit_sha': '4aa11073a551c8a026daea9175336b63dd9780b2', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '17e042c8170fa6008afb8a9c51757422d329da94', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
680565653,Lat and Lon detector,"A draft for detecting latitude and longitude crossing.

- [ ] Change ITRS and GCRS to account for a general attractor and not just the Earth.
- [ ] Find a way to get rid of the warnings from tests.",True,1268,https://api.github.com/repos/poliastro/poliastro/pulls/1268,https://github.com/poliastro/poliastro/pull/1268,closed,62,1,2,12,2,5,0,0,[],2021-06-30 06:18:04+00:00,2021-07-16 10:11:23+00:00,1396399.0,"16 days, 3:53:19","[{'comment_id': 663539978, 'comment_body': 'As discussed in the weekly meeting on July the 2nd, let us pass a `~poliastro.bodies.body`, so we can check if body is the `Earth` and raise a `NotImplementedError` till #1269 is better discussed.', 'comment_created': datetime.datetime(2021, 7, 4, 18, 25, 8, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 663540452, 'comment_body': 'The `t` variable is just a float value representing the amount of seconds since the initial orbit epoch. Therefore, we require to store the initial orbit epoch to build the right epoch value after `t` elapsed seconds:\r\n\r\n```python\r\nTime(self._last_t = self._epoch0 + t * u.s)\r\n```', 'comment_created': datetime.datetime(2021, 7, 4, 18, 29, 4, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 663540575, 'comment_body': 'In fact, let us pass the orbit to be propagated so we can compute:\r\n\r\n```python\r\nself._R = orbit.attractor.R\r\nself._epoch0 = orbit.epoch\r\n```\r\nthose will be useful for later logic.', 'comment_created': datetime.datetime(2021, 7, 4, 18, 30, 20, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 671105503, 'comment_body': 'There seems to be a problem with units here that only surfaces when disabling numba, see\r\n\r\nhttps://dev.azure.com/poliastro/poliastro/_build/results?buildId=1408&view=logs&j=1117f030-3e3a-5822-cfd7-97e776c1f4cb&t=af77bb0c-2bf7-50ca-9891-2682490c119e&l=119', 'comment_created': datetime.datetime(2021, 7, 16, 9, 30, 41, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 671106677, 'comment_body': 'Maybe because we need to do `self._R = orbit.attractor.R.to_value(u.km)`', 'comment_created': datetime.datetime(2021, 7, 16, 9, 32, 23, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}]","[{'commit_sha': 'eb9a9727b18957e5b8b184e55085882a55dce6e8', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f7d4e86a7ef97566fb4cfd0810b49917b858d967', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7eb25efd412147a0f131deb44d1dd2a5075e3da0', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '010de1d5141c10f164341a4a3d33bbe02bb40f76', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '74914b282a9b957884be4eab4535a1c1d8bfc60e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a045e602e0de66214df43ca663e61b86844ba481', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9759fd5dbe1950ef26a06f498efb539201b30497', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6486ddbd164b76077cda60662f86c61dc9c2c29e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '76fd1cea004f6f2292f902591a10ed1320f520b5', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '62e80ea5280ad965bb526d28e0d8e304b1bc4636', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c805a89650f5c764c5a96eefdeb761acd3fb0a57', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d7ee0343e7e8bd9ac9864e7caac99affba95d5c', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
667864430,Eclipse event,"Currently a draft for adding eclipse detection capabilities. Needs some more work for it to work correctly :)

The tests are also not complete. Thinking of some ways to check the implementation...",True,1246,https://api.github.com/repos/poliastro/poliastro/pulls/1246,https://github.com/poliastro/poliastro/pull/1246,closed,258,1,3,4,16,38,0,0,[],2021-06-11 08:37:11+00:00,2021-07-18 16:56:35+00:00,3226764.0,"37 days, 8:19:24","[{'comment_id': 650562406, 'comment_body': 'Is there any particular reason for this change in the name of the variable?', 'comment_created': datetime.datetime(2021, 6, 13, 18, 41, 58, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 650562973, 'comment_body': 'I think it would be interesting to enable user to set the value for the `terminal` attribute. Hence, we could pass it as a keyword parameter to the `__init__(self, ..., terminal=False)`. ', 'comment_created': datetime.datetime(2021, 6, 13, 18, 47, 15, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 650563994, 'comment_body': 'Notice this values are given for the particular case of Sun-Earth system. We need to generalize this number using the formula provided at the end of page 299 from Vallado 4th Edition:\r\n\r\n```python\r\nalpha_um = np.arcsin((r_s - r_p) / R_p)  \r\nalpha_pen = np.arcsin((r_s + r_p) / R_p)\r\n```', 'comment_created': datetime.datetime(2021, 6, 13, 18, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 650564325, 'comment_body': 'I think we should call this function `is_in_umbral_shadow`. Therefor, we could take the advantage in the `__call__` method of the `PenumbraEvent` of doing:\r\n\r\n```python\r\nreturn 0 if is_in_umbral_shadow(...) is True else 1\r\n```\r\n\r\nNotice that the `__call__` method returns a `0` if the event has happened or a different number if not.', 'comment_created': datetime.datetime(2021, 6, 13, 19, 0, 18, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 650564402, 'comment_body': 'Again, this is the case for Sun-Earth system. We need to generalize, see previous comment.', 'comment_created': datetime.datetime(2021, 6, 13, 19, 0, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 650670792, 'comment_body': ""I noticed the `u` inside `__call__` collided with `astropy.units` which is also imported as `u`. Since `astropy.units` is generally imported as `u`, I changed this variable's name instead..."", 'comment_created': datetime.datetime(2021, 6, 14, 6, 12, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 650671004, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 6, 14, 6, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 650671231, 'comment_body': 'Thanks again! I have generalised it now.', 'comment_created': datetime.datetime(2021, 6, 14, 6, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 650673298, 'comment_body': 'Good catch @Yash-10!', 'comment_created': datetime.datetime(2021, 6, 14, 6, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 650675427, 'comment_body': ""I did this for the `return` condition inside `__call__` since `is_in_penumbra` returns the difference between vertical distances if it is in one of the shadow regions (umbra or penumbra) and returns the satellite's position vector if it is not in one of those shadow regions.\r\n\r\nThe reason for doing this was `r_sat_norm`, I thought, would never be zero since it is the distance from the center of the primary attractor and satellite would never go to the center of the Earth, hopefully :)\r\n\r\nImportantly, doing, for example:\r\n\r\n```py\r\nreturn is_in_penumbra\r\n```\r\ndidn't seem to work (the same bug: satellite's position vector hangs) and returning True or False inside `is_in_penumbral_shadow` also didn't seem to work for some reason.\r\n\r\nWould you have any suggestions?"", 'comment_created': datetime.datetime(2021, 6, 14, 6, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651055728, 'comment_body': ""Hi @jorgepiloto I was thinking of the following:\r\n\r\nWould `is_in_umbral_shadow` returning the difference between the vertical distances (as is done in the current commit) be a better choice instead of returning True or False? Since this would open the possibility to identify whether a satellite is going into or out of a particular shadow type (umbra or penumbra). Am I missing anywhere?\r\n\r\n`r_sat_norm` is returned if it is not in any shadow (there we could put any non-zero value but I tried to choose `r_sat_norm` since it was already computed and that it would never be zero since its the distance from the center of the attractor and the satellite can only reach upto the attractor's radius)."", 'comment_created': datetime.datetime(2021, 6, 14, 15, 31, 48, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651117707, 'comment_body': 'By the way, I noticed you included the core logic of the events within `perturbations.py` module. I think we should move this to its own `core/events.py` file.', 'comment_created': datetime.datetime(2021, 6, 14, 16, 54, 39, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651119193, 'comment_body': 'Why not using `np.linalg.norm` instead?', 'comment_created': datetime.datetime(2021, 6, 14, 16, 56, 49, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651134369, 'comment_body': ""We usually used `r` for the position vector and `R` for identifying the radius of the body. I think we should keep the same variable names in this case, even if yours match Vallado's notation.\r\n\r\nTherefore we could discuss about: \r\n\r\n* `r_sat` for the position of the satellite in the frame of the attractor, as you wrote.\r\n* `r_attractor` for the position of the attractor w.r.t. the star.\r\n* `R_star` for the radius of the star.\r\n* `R_attractor` for the radius of the satellite's attractor.\r\n\r\nWhat do you think? @Yash-10 "", 'comment_created': datetime.datetime(2021, 6, 14, 17, 19, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651135285, 'comment_body': 'See previous comment on variable names.', 'comment_created': datetime.datetime(2021, 6, 14, 17, 20, 12, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651141503, 'comment_body': 'Sorry, this is my fault and should have developed more on the explanation behind this function. The name I suggested is not a good one for boolean functions and we must get rid of the `is_`, having only `in_umbral_shadow`.', 'comment_created': datetime.datetime(2021, 6, 14, 17, 29, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651142704, 'comment_body': 'Also, I think any core event function must return a boolean variable, as they work like ""triggers"" for the `solve_ivp` integrator.', 'comment_created': datetime.datetime(2021, 6, 14, 17, 31, 30, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651147420, 'comment_body': 'I think the only parameters should be the orbit and the terminal state, let me justify this. \r\n\r\nFrom the orbit it is possible to obtain all the the attractor properties and from this one, all the properties for the star (see `attractor.parent` attribute).', 'comment_created': datetime.datetime(2021, 6, 14, 17, 38, 59, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651151107, 'comment_body': 'From my point of view, boolean variables are the preferred return values when working with event functions.', 'comment_created': datetime.datetime(2021, 6, 14, 17, 44, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651151775, 'comment_body': 'In fact, returning the dot product does not give any information about the event.', 'comment_created': datetime.datetime(2021, 6, 14, 17, 45, 57, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651153476, 'comment_body': 'Should we recompute the position vector of the attractor? I mean, it moves as time passes and so it does its shadow.', 'comment_created': datetime.datetime(2021, 6, 14, 17, 48, 31, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651175773, 'comment_body': 'This might be a critical point. Vallado only provides the algorithm for a particular instant of time. But in this logic, we are propagating the orbit, which moves together with its attractor. I would like to ping @astrojuanlu here for a further discussion on this.\r\n\r\nFrom my side, I will try to implement validation cases related to eclipse detection so we can be sure if these is properly implemented. ', 'comment_created': datetime.datetime(2021, 6, 14, 18, 22, 35, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651178157, 'comment_body': 'I understand the idea behind returning the `r_sat_norm` but do not agree with it. See previous comments on boolean return variables. Notice that the `__call__` method must return a numerical value, hence my previous suggestion on doing:\r\n\r\n```python\r\ndef __call__(...):\r\n    return 0 if in_penumbra is True else 1\r\n``` ', 'comment_created': datetime.datetime(2021, 6, 14, 18, 26, 19, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651457935, 'comment_body': 'Thanks, I have made that change. I had included it in `core/perturbations` earlier thinking it might be good to modify `radiation_pressure` accordingly once one knows whether the satellite is in sunlight, penumbra, or umbra. But we could anyways import those functions from `core/events`', 'comment_created': datetime.datetime(2021, 6, 15, 5, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651457958, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 6, 15, 5, 27, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651458404, 'comment_body': 'Would using ""secondary"" and ""primary"" body be a more general term to include in the variable names? \r\n\r\nIf yes, would it be good to use `R_s` for radius of the secondary body (the star) and `R_p` for the radius of the primary body (attractor)?\r\n\r\nTo summarize, I currently used:\r\n\r\n```\r\nr_sat: numpy.ndarray\r\n    Position of the satellite in the frame of the attractor (km).\r\nr_sec: numpy.ndarray\r\n    Position of the secondary body in the frame of the attractor (km).\r\nR_s: float\r\n    Radius of the secondary body.\r\nR_p: float\r\n    Radius of the primary body (attractor) responsible for the umbral shadow (km).\r\n```\r\nAny suggestions on these?', 'comment_created': datetime.datetime(2021, 6, 15, 5, 28, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651459429, 'comment_body': 'Thanks again. Since `r_sun` is the position of secondary body wrt primary body, it might not be related to the orbit? So it would need to be passed as a separate argument, right? Or did you mean we should use vector math to calculate `r_sun`?\r\n\r\n*(`r_sun` is changed to `r_sec`)*', 'comment_created': datetime.datetime(2021, 6, 15, 5, 30, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651460461, 'comment_body': ""What I was thinking is `sat_vert - umb_vert` is the difference in the vertical distances and the sign of that expression could tell whether a satellite is going in or out of a particular shadow. Since the `__call__` method looks for zero crossings, I had thought the return value of these two core functions does give information about the event.\r\n\r\nThe motivation for doing the above was this line from scipy's `solve_ivp` docs:\r\n\r\n> Each event occurs at the zeros of a continuous function of time and state\r\n\r\nand also the `LithobrakeEvent` which returns `H - R` inside the `__call__` method.\r\n\r\nI was wondering, if we return either 0 or 1, would we lose the ability to tell whether the satellite is going in or out of shadow?"", 'comment_created': datetime.datetime(2021, 6, 15, 5, 33, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651462471, 'comment_body': 'Thanks, returning a boolean value does look better...I made those changes.', 'comment_created': datetime.datetime(2021, 6, 15, 5, 38, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 651494713, 'comment_body': 'I see your point. In the [scipy solve_ivp docs](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html) it is said that a `direction` attribute can be used to determine the sense in which the zero is found.\r\n\r\nHowever, I think this `direction` is used to determine the limiting cases: the point entering at eclipse and the point going outside of it. The `direction` attribute is in fact another trigger, similar to `terminal`, but focuses on limiting points.\r\n\r\nThis mean that you are right. By returning only a `0` or a `1` we are loosing the ability to indicate the current `direction` value... Let me think more about how could we face this problem, I will need some time to develop a solution 🤔 ', 'comment_created': datetime.datetime(2021, 6, 15, 6, 47, 1, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 651772784, 'comment_body': 'What about R_1 and R_2 ? :)', 'comment_created': datetime.datetime(2021, 6, 15, 13, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 671797135, 'comment_body': 'Let us name this `eclipse_shadow` so we do not confuse it with the current `shadow_function` from `perturbations.py`. Because the only difference between the `umbra` and `penumbra` logic is a sign, let us use an extra boolean parameter:\r\n\r\n```python\r\ndef eclipse_function(k, u_, r_sec, R_sec, R_primary, umbra=True):\r\n    # Plus or minus condition\r\n    pm = 1 if umbra is True else -1\r\n    # The eclipse shadow function becomes\r\n    ... + pm * (2 * p * R_primary * cos_psi) ...\r\n```\r\n\r\nTherefore, we do not repeat ourselves by having two functions 👍🏽 \r\n  \r\n ', 'comment_created': datetime.datetime(2021, 7, 18, 7, 24, 46, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 671799006, 'comment_body': 'This logic is already implemented in poliastro, see:\r\n\r\n```python\r\ndef coe_rotation_matrix(inc, raan, argp):\r\n    """"""Create a rotation matrix for coe transformation""""""\r\n    r = rotation_matrix(raan, 2)\r\n    r = r @ rotation_matrix(inc, 0)\r\n    r = r @ rotation_matrix(argp, 2)\r\n    return r\r\n```\r\n\r\nwhere `P` and `Q` are the first and second column vectors of previous output matrix. Therefore, this logic could be simplified to:\r\n\r\n```python\r\nPQW = coe_rotation_matrix(inc, raan, argp)\r\nP, Q = PQW[:,0], PQW[:,1]\r\n```', 'comment_created': datetime.datetime(2021, 7, 18, 7, 38, 51, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 671805716, 'comment_body': 'Oh, I forgot to use that. Thanks so much for this!', 'comment_created': datetime.datetime(2021, 7, 18, 8, 30, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 671806503, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 7, 18, 8, 36, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 671810665, 'comment_body': 'I see you are applying the `arcsin` function and a few lines later the `sin`. Let use the same idea as in `cos_psi` variable, therefore:\r\n\r\n```python\r\nsin_delta_shadow = np.sin((R_sec - pm * R_primary) / r_sec_norm)\r\n```\r\n\r\nso only one function is being called instead of making round trip conversion.', 'comment_created': datetime.datetime(2021, 7, 18, 9, 9, 48, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 671810884, 'comment_body': 'Yeah, it was a little bit hidden...', 'comment_created': datetime.datetime(2021, 7, 18, 9, 11, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 671819234, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 7, 18, 10, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}]","[{'commit_sha': '7481ed22a91a1adb53cbde3f61f9dc6e98309a46', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3eab305b42d149dbeb239a0c0d2a2644a5881138', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da28251205dddb29b4a9359937e65ed9d838f4bd', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c2df157d8421d0edecf7706115b42c65d24d516', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
696933710,Node crossing,"This attempts to add a node crossing detector.

- The `atol` value for an already equatorial orbit needed to kept `0.1s` for the tests to pass. I think it's because `scipy` would take some small finite time if the initial conditions themselves match the event condition.

Thanks!",True,1293,https://api.github.com/repos/poliastro/poliastro/pulls/1293,https://github.com/poliastro/poliastro/pull/1293,closed,51,0,2,2,3,0,0,0,[],2021-07-26 11:16:21+00:00,2021-07-30 09:18:02+00:00,338501.0,"3 days, 22:01:41",[],"[{'commit_sha': '3cb8f227828ba895d93bfaf454ea2cb623dd90b8', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '167246fe42b27c360403849777eb8610ce4fba97', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
695184069,Continue propagation if `event.terminal` is `False`,"From #1285, this prevents hanging of orbit if an event's terminal property is False. I realized this behavior might not have been evident earlier since this condition was not tested.

For the test, would there be any suggestions on whether a single event detector would suffice or should it be parametrized for all events?

Thanks!",True,1288,https://api.github.com/repos/poliastro/poliastro/pulls/1288,https://github.com/poliastro/poliastro/pull/1288,closed,114,7,4,9,9,8,0,0,[],2021-07-22 13:28:22+00:00,2021-08-07 10:22:05+00:00,1371223.0,"15 days, 20:53:43","[{'comment_id': 676094292, 'comment_body': 'This assertion is a bit confusing. What about checking that the. `len` of `rr` is the same as the original `tofs`? Also, I\'m wondering if the norm of `rr` becomes zero after ""lithobrake"" and if it\'s something we can use here as well.', 'comment_created': datetime.datetime(2021, 7, 25, 6, 44, 8, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 676094611, 'comment_body': 'Rather than `terminals[0]` and `terminals[-1]`, can we use two distinct variable names? Like `penumbra_terminal` and `latitude_terminal`. That will make the conditional at the end more clear as well I think.', 'comment_created': datetime.datetime(2021, 7, 25, 6, 47, 20, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 676114025, 'comment_body': 'Thanks!', 'comment_created': datetime.datetime(2021, 7, 25, 9, 16, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 676114058, 'comment_body': ""I wanted to confirm, through this test, the position vectors don't hang in the case where the event was detected and the terminal was set to False. Earlier, `len(rr) == len(tofs)` was satisfied, but the position vectors hanged (i.e. kept repeating till `tofs[-1]`). Would you recommend making the current assertion condition a bit easier to read?"", 'comment_created': datetime.datetime(2021, 7, 25, 9, 16, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 676115548, 'comment_body': '> I\'m wondering if the norm of `rr` becomes zero after ""lithobrake"" and if it\'s something we can use here as well.\r\n\r\nDoes it mean adding some more checks that check something with `rr` for all the added event tests? `norm` of `rr` would be equal to the radius of the attractor for `lithobrake`, isn\'t it? I am a bit confused with this suggestion @astrojuanlu, could you help me understand a bit more? :)', 'comment_created': datetime.datetime(2021, 7, 25, 9, 29, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 679785674, 'comment_body': 'Instead of saying ""orbit doesn\'t hang"" let us say here ""checking not repeated position vectors during propagation"".', 'comment_created': datetime.datetime(2021, 7, 30, 9, 27, 44, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 679786262, 'comment_body': 'Checking the length of vectors, as claimed by @Yash-10, does not ensure no repeated position vectors. The last values of the array need to be checked directly.', 'comment_created': datetime.datetime(2021, 7, 30, 9, 28, 34, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 684615349, 'comment_body': 'I understand now, thanks for the clarification!', 'comment_created': datetime.datetime(2021, 8, 7, 10, 21, 41, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}]","[{'commit_sha': 'df31563e4c71ce4abbd6f1dc088ceaadb67b4b56', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc8c2e6f8514fdf2fcfce11dcb6ee10597ab8d9e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db94972d7b2e5fa0b2c54663cbf8ef065ed5b3cc', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b15f6ade6f88c2bd8a96310cd6c22aff0c4df177', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6cf5d243661c80566c3d0f7ea07d93429d23126f', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '08e367a129acfd61d2ce3eb5b68673dbc11d6d93', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9df4933c5f02786184180588ad73f4ef495dcc9', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '66bb131cafd904103ba531ae099b9e461fc4f2e0', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e37cd4a3bb9b530095df261187677fc10dd3163', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
673526681,Add some more tests and checks,"This pull request is a continuation of addition of some tests and checks.

- The altitude checks were added to prevent creation of an orbit with negative altitude. This might yield unexpected results at some places, for example, in the lithobrake event.

**Questions**

- It looks like `@pytest.mark.skipif(""czml3"" not in sys.modules, reason=""requires czml3"")` gets repeated for each test in `test_czml.py`. Could we instead have a global `pytestmark` to skip the whole module if `czml3` is not installed?

```python
pytestmark = pytest.mark.skipif(""czml3"" not in sys.modules)
```

- `ALL_PROPAGATORS` in `twobody/propagation.py`  seem to not contain `markley` and `danby`. This seems to be contrary to the name of the variable. Is this expected? If not, should we include all the propagators in `ALL_PROPAGATORS`?

- In #1253, you had advised to make `expected_doc` as a fixture. It seems that there are more `expected_doc`'s inside the tests. Is it necessary to have a fixture for each of them?

@astrojuanlu Could you let me know what do you think about the above questions?

Thanks!",True,1255,https://api.github.com/repos/poliastro/poliastro/pulls/1255,https://github.com/poliastro/poliastro/pull/1255,closed,82,32,5,9,7,6,0,0,[],2021-06-18 14:34:25+00:00,2021-06-20 17:27:59+00:00,183214.0,"2 days, 2:53:34","[{'comment_id': 654827228, 'comment_body': 'I would also say in here the following:\r\n\r\n```\r\n... propagates to the maximum value (unless a terminal event is defined) and calculates ...\r\n```', 'comment_created': datetime.datetime(2021, 6, 19, 18, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654827599, 'comment_body': 'This is not required, there is a test already checking for `ALL_PROPAGATORS`, see:\r\n\r\nhttps://github.com/poliastro/poliastro/blob/0a0c00559a36ce9779f824738773bc7e98a6697c/tests/tests_twobody/test_propagation.py#L105-L106', 'comment_created': datetime.datetime(2021, 6, 19, 18, 47, 43, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 654829009, 'comment_body': 'The motivation for adding this test was this line: https://github.com/poliastro/poliastro/blob/main/src/poliastro/twobody/propagation.py#L476. I noticed that below the ""TODO""\'s, there was an assert condition inside the source code. I thought it would be good to turn it into its own test since the TODO mentioned it. Also, this method uses the propagator method directly and not the propagation method of an orbit. Hence, after adding this test, the assert condition in `src` was removed.\r\n\r\nWhat do you think about adding this test?', 'comment_created': datetime.datetime(2021, 6, 19, 19, 2, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 654832291, 'comment_body': 'Thanks for this!', 'comment_created': datetime.datetime(2021, 6, 19, 19, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 654911475, 'comment_body': ""I'm +1 on adding this test and removing the `assert`!"", 'comment_created': datetime.datetime(2021, 6, 20, 10, 13, 11, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 654964910, 'comment_body': 'Oh, I see. Thanks for the clarification @Yash-10!', 'comment_created': datetime.datetime(2021, 6, 20, 17, 24, 13, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}]","[{'commit_sha': '7906a3efe8ea3d9de402877c11cd8d4aad8775e8', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c2c17d782cb21bd4f3fced7221a3128803a0341b', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '81d07447d8ece45f5b8de05e9d4b02c9ebf4d75e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d7c50294ab9673c5e079864e80b965784d4c067', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a7f81ecbedaec17df7eb1f9dce3e47a516bc60f', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '151a1da4eb43767dff7edd3090a64b0cab673db8', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '385984234a07c20e47e8f8a65909c2ffeb12c06e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67a275a90e3aa0ae2159437670da1c11f2d0d89a', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8c5a9c7cfb865b54b867c6d215c5f4d451b24d76', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
683163333,Some more tests,"Some tests for `heliosynchronous`.

### Questions

- Would it be a good option to check for the ""unphysical"" condition where `a` is less than the radius of Earth and if radius of perigee is less than radius of Earth), as stated in Vallado?
![Screenshot from 2021-07-04 17-30-28](https://user-images.githubusercontent.com/68844397/124384132-92039400-dced-11eb-972e-157c9d906db8.png).
- I think [this](https://github.com/poliastro/poliastro/blob/main/src/poliastro/twobody/orbit.py#L1067) exception would never be raised since [this](https://github.com/poliastro/poliastro/blob/main/src/poliastro/twobody/orbit.py#L1028) line ensures that and also given that the condition for `alt < 0` is already checked in one of the above lines. Would it be a good choice to remove raising that exception?

 Currently, if I try to create an orbit with a < radius of earth, then it doesn't give an error.

The test `test_heliosynchronous_orbit_ecc` fails, but I think it should have passed. That might need more investigation.

---
It seems the difference in expected eccentricities is of the order `1e-5` if I use these parameters:

```py
expected_ecc = 0.2 * u.one
expected_inc = 98.6 * u.deg
expected_a = 7346.846 * u.km
```
instead of the current parameters (giving errors of the order `1e-2`, which may not be negligible):

```py
expected_ecc = 0.0 * u.one
expected_inc = 98.6 * u.deg
expected_a = 7178.1363 * u.km
```

It looks like the calculation is not accurate, or am I missing something?

Thanks!",True,1272,https://api.github.com/repos/poliastro/poliastro/pulls/1272,https://github.com/poliastro/poliastro/pull/1272,closed,29,6,2,7,7,4,0,0,[],2021-07-04 12:06:29+00:00,2021-07-16 12:32:56+00:00,1038387.0,"12 days, 0:26:27","[{'comment_id': 666734830, 'comment_body': 'Woops, much better to do it here, yes!', 'comment_created': datetime.datetime(2021, 7, 9, 7, 30, 47, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 666765863, 'comment_body': ""If I understand correctly, this corresponds to example 11-2a, right? I'm now trying to reproduce the results and I don't get the same. Am I doing something wrong?\r\n\r\n```\r\n>>> math.degrees(math.acos(-((1.12532 ** (7/2) * 2 * 1.991063853e-7) / (3 * 6378.137**2 * 0.00108263 * math.sqrt(398600.4418)))))\r\n90.00000000000043\r\n```"", 'comment_created': datetime.datetime(2021, 7, 9, 8, 20, 48, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 666986797, 'comment_body': ""It seems the equations in the solution of example 11-2:\r\n\r\n![Screenshot from 2021-07-09 19-47-34](https://user-images.githubusercontent.com/68844397/125092095-987b7c80-e0ee-11eb-97bb-0089da6dc98a.png)\r\n\r\nThe value of `a` is printed as 1.12532 where it must have been 7178.1363. If I use 7178.1363 instead, in the equation, it gives me an inclination of 98.60308111784582. So maybe that's not a problem?"", 'comment_created': datetime.datetime(2021, 7, 9, 14, 21, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 671049201, 'comment_body': ""Thanks for reproducing it! Yeah, shouldn't be a problem"", 'comment_created': datetime.datetime(2021, 7, 16, 8, 4, 40, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}]","[{'commit_sha': 'a7acc5bc51a410ac5061fea0be9533cedb920649', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35671756f1b1d3dff77957647253d4ef67035cc1', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ba63d78a1c0792a6d4657ba4454a3bd904a01e94', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6615ea32aeb6b53d14efc19f50d4ff19bfe9d80e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1d72c38248fe5a1a874d2573fb8c905a9800bfde', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '84a7b8418121d68d67463859e4c8d45506b2a3cf', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8677ad5bcc18abedf2f72d8e1b77e558cdffca6c', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
654818451,Addressing more test warnings,"Continuing work from #1137. Thanks @ishanSrt !

*Some analysis*
- The dubious year warnings (coming from `test_propagate_long_times_keeps_geometry`) due to the dates being far into the future seem to be legitimate, since that test propagates an orbit for 100 years and hence the resultant orbit is mostly going to be out of the non-dubious range defined by `erfa`.
- I thought it might be a good choice to just filter the warning since after looking at [issue 256](https://github.com/poliastro/poliastro/issues/265), I wondered whether it would be good to still check for long propagations like 100 years. Moreover, reducing the propagation time while still keeping it long enough, say, 60 years didn't seem to solve it.
- For the second set of `erfa` warnings, eg:

```
ERFA function ""epv00"" yielded 8 of ""warning: date outsidethe range 1900-2100 AD""
```
Any date after about the year 1935 yields that warning. Here, it might be a good choice to just choose a ""safe"" date value to prevent these warnings pop up.

Thanks, and would love to get any suggestions!

---
The coverage decrease needs to be addressed and I am working on that...",True,1235,https://api.github.com/repos/poliastro/poliastro/pulls/1235,https://github.com/poliastro/poliastro/pull/1235,closed,19,136,6,21,6,9,0,0,[],2021-05-27 11:21:01+00:00,2021-06-11 09:07:16+00:00,1287975.0,"14 days, 21:46:15","[{'comment_id': 649571011, 'comment_body': 'I guess this avoids a corner case in which `R` and `R_polar` are 0, right?', 'comment_created': datetime.datetime(2021, 6, 10, 22, 23, 25, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649587880, 'comment_body': 'From `conftest.py`, `earth_perihelion` is `""2020-01-05 07:47:00""`. I get that, by using an epoch in the past, we avoid going outside the range of `epv00`.\r\n\r\nHowever, I think that the correct solution here is to silence such warnings inside `plot_solar_system`. Yes, we know that getting the position of the Earth 100 years from now is unreliable, but for plotting we don\'t care.', 'comment_created': datetime.datetime(2021, 6, 10, 23, 8, 38, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649588613, 'comment_body': ""We can't remove `Orbit.pqw` yet, because we need it for the plotting:\r\n\r\nhttps://github.com/poliastro/poliastro/blob/49ae31844b2d59a6b052a42bc64f34efd0f870fb/src/poliastro/plotting/_base.py#L346-L357\r\n\r\nWe are tracking that in https://github.com/poliastro/poliastro/issues/557.\r\n\r\nIn this case, let's silence the deprecation warning inside the test."", 'comment_created': datetime.datetime(2021, 6, 10, 23, 10, 44, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649589037, 'comment_body': 'Time to remove `Orbit.from_horizons` :)', 'comment_created': datetime.datetime(2021, 6, 10, 23, 11, 53, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649589118, 'comment_body': ""Let's keep this test, see above"", 'comment_created': datetime.datetime(2021, 6, 10, 23, 12, 5, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649589250, 'comment_body': ""Let's keep this test, see above. (But silence the deprecation warning.)"", 'comment_created': datetime.datetime(2021, 6, 10, 23, 12, 29, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649589408, 'comment_body': 'Good!', 'comment_created': datetime.datetime(2021, 6, 10, 23, 12, 58, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 649719214, 'comment_body': 'Just to confirm what you meant: We should remove `Orbit.from_horizons` from `src` and their corresponding tests, right?\r\n\r\nSorry, I was confused with our intention regarding `Orbit.from_horizons`..', 'comment_created': datetime.datetime(2021, 6, 11, 6, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 649755602, 'comment_body': ""Yes, let's remove it! It was deprecated in 0.14 I think"", 'comment_created': datetime.datetime(2021, 6, 11, 7, 31, 10, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}]","[{'commit_sha': '4b9d6a27c6b5b070601b88ce5de1aeda790dcecf', 'committer_username': 'ishanSrt', 'committer_name': 'Ishan Srivastava', 'committer_email': 'ishan.srt@gmail.com', 'commit_date': datetime.datetime(2017, 7, 3, 9, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '322d07dee4260e55faa09a5ef5ad4f53bb2c21c3', 'committer_username': 'ishanSrt', 'committer_name': 'Ishan Srivastava', 'committer_email': 'ishan.srt@gmail.com', 'commit_date': datetime.datetime(2017, 7, 3, 9, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2b8e6c0b33ad7cfe4a64f0d7f9005d13186a76ac', 'committer_username': 'ishanSrt', 'committer_name': 'Ishan Srivastava', 'committer_email': 'ishan.srt@gmail.com', 'commit_date': datetime.datetime(2017, 7, 3, 9, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33d498d8310f82636ef9e57f750ece5cf07854f3', 'committer_username': 'ishanSrt', 'committer_name': 'Ishan Srivastava', 'committer_email': 'ishan.srt@gmail.com', 'commit_date': datetime.datetime(2017, 7, 3, 9, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21f7251c8a7a91df244afb5d808cf0f9aa46fd89', 'committer_username': 'ishanSrt', 'committer_name': 'Ishan Srivastava', 'committer_email': 'ishan.srt@gmail.com', 'commit_date': datetime.datetime(2017, 7, 3, 9, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39b1e8615fed5eaa80cc1d13ecb10aa62a2d3afa', 'committer_username': 'ishanSrt', 'committer_name': 'Ishan Srivastava', 'committer_email': 'ishan.srt@gmail.com', 'commit_date': datetime.datetime(2017, 7, 3, 9, 49, 50, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ca3a467e621edbff8651bb29001876e96c2c498', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f078f38c0a922c5192fa24585121b860c6e4208f', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ab686c5e8864048d5a7a93cd8a10d732098e696', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fdf5f38837bd25ab5073a01df2277475c6cbc3a', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '53678fadda7760c27c80aa27b67ae737c8821870', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f6cdc3ea56166e9974015c0bde9b97b19c2570ad', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c93d9668c69345ea6c955855e8bf3957d7be180', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41fe183a2af17d79e8631a05239219e8cf2938da', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc729ba0b140c38befe6b182783dca10358ac611', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '97f64d1d0ff4fb68c7fc909c967c819b468ff23d', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e1c4c2ea7d25360bb6cc69faddd7792b4b233d37', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '870042a8223ae445339b45bc4017e4a0d10d3a71', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c4494ed744c170814168f3011abe48840cd7d7d3', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7b0aa05b32511d302b344700c326fd89d4f35118', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0be91a05c35296825481833a9cc20535cd5ff233', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
674505548,General `LOS` for `LOSEvent`,"The current `shadow_function` used trigonometric manipulation (from Howard Curtis). In this pull request:

- An attempt has been made to add a general line of sight functionality that can be used to detect LOS between any given two position vectors (eg: between two satellites, or between a satellite and the Sun).
- `shadow_function` has been modified to use this general LOS implementation.

Currently, the LOS function allows both ellipsoidal and circular shape of the attractor, but I think bodies are taken to be a general case of ellipsoid. So the existence of the `ellipsoid` parameter in the functions might be in doubt.

---
This was an older comment :)

Thanks!",True,1258,https://api.github.com/repos/poliastro/poliastro/pulls/1258,https://github.com/poliastro/poliastro/pull/1258,closed,199,30,4,3,9,5,0,0,[],2021-06-21 12:22:02+00:00,2021-09-03 08:38:10+00:00,6380168.0,"73 days, 20:16:08","[{'comment_id': 692799364, 'comment_body': 'As @Yash-10 pointed out during weekly meeting, if `r1_norm` is lower than `R`, then the argument of the cosine function has a value `>1` and `nan` values are returned.', 'comment_created': datetime.datetime(2021, 8, 20, 9, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 692801375, 'comment_body': 'The condition `r1_norm > R` might be checked here 👍🏽 ', 'comment_created': datetime.datetime(2021, 8, 20, 9, 21, 5, tzinfo=datetime.timezone.utc), 'commenter': 'jorgepiloto', 'type': 'User'}, {'comment_id': 694802520, 'comment_body': 'I noticed a slight problem in the edge case we had discussed in #1307. To resolve the problems with any edge cases, the best solution I could think till now is to raise a warning stating ""Orbit is going beneath the surface of attractor, LOS event may not work properly"".\r\n\r\nBut we decided a warning was not a good option, right? It might atleast solve the problem.', 'comment_created': datetime.datetime(2021, 8, 24, 12, 28, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Yash-10', 'type': 'User'}, {'comment_id': 701708750, 'comment_body': 'Discussed at length in other comments here and in #1307, we decided for the current solution of a warning to minimize complexity', 'comment_created': datetime.datetime(2021, 9, 3, 8, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}, {'comment_id': 701709125, 'comment_body': 'Noted, and handling it in the event function', 'comment_created': datetime.datetime(2021, 9, 3, 8, 36, 26, tzinfo=datetime.timezone.utc), 'commenter': 'astrojuanlu', 'type': 'User'}]","[{'commit_sha': 'd032f00867a29bf0579008e52745a721e9e4039e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b42920a4f693e1087d205d968547b16c26608246', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '41cf7e60cef946e4c46d6defab1098210dc5db9c', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
704398142,Satellite visibility,"This draft attempt is for satellite visibility with respect to a ground station on the central attractor. Inspired by section 5.4 on rise and set time of a satellite about an oblate planet.

- Currently figuring out the difference between section 5.2.2 and 5.2.5 and which function is the appropriate one.
- Trying to find if the ""PREDICT"" formulation from Vallado Algorithm 74 would be a simpler choice instead.
- Could check its connection with `is_visible` method of the `SpheroidLocation` class and possible refactoring.

Thanks!",False,1299,https://api.github.com/repos/poliastro/poliastro/pulls/1299,https://github.com/poliastro/poliastro/pull/1299,open,175,2,3,8,6,0,0,0,[],2021-08-05 05:44:33+00:00,,0.0,,[],"[{'commit_sha': '53f02567a66b1ce69f128c66a6810f333bc76ab8', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c68a96cbc2ed8f23a464ecf266f4753045246b0', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ee7b295253814aa94b53b2aea9ccc9146497230', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b34db504a17c203420c976dedc7571edbc8c578e', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '98a4533810578f9a103328926fff5f112b9f0b53', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5fd8f5e9cc10e257d56220bd914478330b743f85', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c267e8bd6407707a2979fdd81131081f9f9988a6', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '88e49348f87b4021bb751ec44d0113646fe3defb', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17
704393808,Attractor surface visibility,"This is an attempt inspired by section 5.2 (""Direct Visibility of a Planetary Surface"") of Escobal's book and uses equation 5.5.

- [ ] Trying to find what tests can be included. 

As mentioned in the book, this might have application for planetary probes to study some properties of a planet, its composition, atmosphere, etc.

Just added a test to check if it doesn't give any errors.",False,1298,https://api.github.com/repos/poliastro/poliastro/pulls/1298,https://github.com/poliastro/poliastro/pull/1298,open,165,0,3,6,10,0,0,0,[],2021-08-05 05:35:25+00:00,,0.0,,[],"[{'commit_sha': '9dbaf56f5b49b8015904a1b1d459269a91bd8a52', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edc15215a2b52eb1eecbf8482f1599c3226aaf60', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '943b884e2809f0fd567a9f6d395102dc079d3efd', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5dbd67738e554e00b5a605de1936cd147373454a', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8fe9992a399ec8e7b9cd56d7855edea18fe244cc', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f48862ce76341469257d6ecb66f867e66849a7f5', 'committer_username': 'Yash-10', 'committer_name': 'Yash Gondhalekar', 'committer_email': 'yashgondhalekar567@gmail.com', 'commit_date': datetime.datetime(2020, 7, 27, 7, 59, 17, tzinfo=datetime.timezone.utc)}]",Yash Gondhalekar,68844397,yashgondhalekar567@gmail.com,User,,49,,7,17

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
11178845,poliastro,poliastro/poliastro,Python,280,869,26,123,3839,142,21,23,"[{'id': 858850267, 'number': 1486, 'closed': datetime.datetime(2022, 6, 9, 6, 0, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 2, 20, 15, 50, 4, tzinfo=datetime.timezone.utc), 'time_taken': 9382228.0, 'time_delta': '108 days, 14:10:28', 'additions': 214, 'deletions': 1, 'state': 'closed'}, {'id': 825642141, 'number': 1444, 'closed': datetime.datetime(2022, 1, 18, 17, 25, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 18, 16, 7, 9, tzinfo=datetime.timezone.utc), 'time_taken': 4675.0, 'time_delta': '1:17:55', 'additions': 14, 'deletions': 10, 'state': 'closed'}, {'id': 823869779, 'number': 1443, 'closed': datetime.datetime(2022, 1, 16, 16, 17, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 16, 9, 44, 14, tzinfo=datetime.timezone.utc), 'time_taken': 23611.0, 'time_delta': '6:33:31', 'additions': 20, 'deletions': 0, 'state': 'closed'}, {'id': 823615037, 'number': 1442, 'closed': datetime.datetime(2022, 1, 15, 15, 57, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2022, 1, 15, 11, 38, 41, tzinfo=datetime.timezone.utc), 'time_taken': 15544.0, 'time_delta': '4:19:04', 'additions': 37, 'deletions': 24, 'state': 'closed'}, {'id': 790510502, 'number': 1409, 'closed': datetime.datetime(2021, 11, 29, 17, 55, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 29, 10, 5, 35, tzinfo=datetime.timezone.utc), 'time_taken': 28181.0, 'time_delta': '7:49:41', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 772419332, 'number': 1379, 'closed': datetime.datetime(2021, 11, 3, 14, 45, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 3, 14, 14, 31, tzinfo=datetime.timezone.utc), 'time_taken': 1834.0, 'time_delta': '0:30:34', 'additions': 0, 'deletions': 1, 'state': 'closed'}, {'id': 770847921, 'number': 1376, 'closed': datetime.datetime(2021, 11, 1, 21, 4, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 11, 1, 20, 12, 16, tzinfo=datetime.timezone.utc), 'time_taken': 3124.0, 'time_delta': '0:52:04', 'additions': 126, 'deletions': 131, 'state': 'closed'}, {'id': 768496781, 'number': 1367, 'closed': datetime.datetime(2021, 10, 30, 6, 53, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 28, 16, 6, 15, tzinfo=datetime.timezone.utc), 'time_taken': 139610.0, 'time_delta': '1 day, 14:46:50', 'additions': 29, 'deletions': 34, 'state': 'closed'}, {'id': 742014025, 'number': 1323, 'closed': datetime.datetime(2021, 10, 3, 19, 3, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 9, 24, 8, 24, 50, tzinfo=datetime.timezone.utc), 'time_taken': 815919.0, 'time_delta': '9 days, 10:38:39', 'additions': 32, 'deletions': 15, 'state': 'closed'}, {'id': 714467282, 'number': 1306, 'closed': datetime.datetime(2021, 8, 17, 19, 28, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 17, 18, 16, 33, tzinfo=datetime.timezone.utc), 'time_taken': 4304.0, 'time_delta': '1:11:44', 'additions': 4, 'deletions': 7, 'state': 'closed'}, {'id': 711349889, 'number': 1304, 'closed': datetime.datetime(2021, 8, 20, 9, 7, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 8, 12, 18, 2, 7, tzinfo=datetime.timezone.utc), 'time_taken': 659119.0, 'time_delta': '7 days, 15:05:19', 'additions': 402, 'deletions': 0, 'state': 'closed'}, {'id': 704398142, 'number': 1299, 'closed': None, 'created': datetime.datetime(2021, 8, 5, 5, 44, 33, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 175, 'deletions': 2, 'state': 'open'}, {'id': 704393808, 'number': 1298, 'closed': None, 'created': datetime.datetime(2021, 8, 5, 5, 35, 25, tzinfo=datetime.timezone.utc), 'time_taken': 0.0, 'time_delta': '', 'additions': 165, 'deletions': 0, 'state': 'open'}, {'id': 700503423, 'number': 1297, 'closed': datetime.datetime(2021, 8, 7, 19, 19, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 30, 18, 58, 42, tzinfo=datetime.timezone.utc), 'time_taken': 692468.0, 'time_delta': '8 days, 0:21:08', 'additions': 24, 'deletions': 8, 'state': 'closed'}, {'id': 696933710, 'number': 1293, 'closed': datetime.datetime(2021, 7, 30, 9, 18, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 26, 11, 16, 21, tzinfo=datetime.timezone.utc), 'time_taken': 338501.0, 'time_delta': '3 days, 22:01:41', 'additions': 51, 'deletions': 0, 'state': 'closed'}, {'id': 696053000, 'number': 1292, 'closed': datetime.datetime(2021, 7, 24, 22, 46, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 23, 16, 12, 11, tzinfo=datetime.timezone.utc), 'time_taken': 110061.0, 'time_delta': '1 day, 6:34:21', 'additions': 25, 'deletions': 4, 'state': 'closed'}, {'id': 695184069, 'number': 1288, 'closed': datetime.datetime(2021, 8, 7, 10, 22, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 22, 13, 28, 22, tzinfo=datetime.timezone.utc), 'time_taken': 1371223.0, 'time_delta': '15 days, 20:53:43', 'additions': 114, 'deletions': 7, 'state': 'closed'}, {'id': 694598137, 'number': 1286, 'closed': datetime.datetime(2021, 7, 23, 9, 12, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 21, 18, 23, 41, tzinfo=datetime.timezone.utc), 'time_taken': 139708.0, 'time_delta': '1 day, 14:48:28', 'additions': 60, 'deletions': 56, 'state': 'closed'}, {'id': 691959620, 'number': 1282, 'closed': datetime.datetime(2021, 7, 17, 20, 46, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 16, 57, 46, tzinfo=datetime.timezone.utc), 'time_taken': 13749.0, 'time_delta': '3:49:09', 'additions': 17, 'deletions': 11, 'state': 'closed'}, {'id': 691864687, 'number': 1280, 'closed': datetime.datetime(2021, 7, 17, 13, 31, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 17, 7, 15, 29, tzinfo=datetime.timezone.utc), 'time_taken': 22542.0, 'time_delta': '6:15:42', 'additions': 318, 'deletions': 256, 'state': 'closed'}, {'id': 689948784, 'number': 1279, 'closed': datetime.datetime(2021, 12, 27, 12, 16, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 14, 14, 9, 19, tzinfo=datetime.timezone.utc), 'time_taken': 14335612.0, 'time_delta': '165 days, 22:06:52', 'additions': 134, 'deletions': 7, 'state': 'closed'}, {'id': 687221980, 'number': 1275, 'closed': datetime.datetime(2021, 7, 10, 19, 48, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 10, 18, 34, 40, tzinfo=datetime.timezone.utc), 'time_taken': 4443.0, 'time_delta': '1:14:03', 'additions': 83, 'deletions': 71, 'state': 'closed'}, {'id': 683163333, 'number': 1272, 'closed': datetime.datetime(2021, 7, 16, 12, 32, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 4, 12, 6, 29, tzinfo=datetime.timezone.utc), 'time_taken': 1038387.0, 'time_delta': '12 days, 0:26:27', 'additions': 29, 'deletions': 6, 'state': 'closed'}, {'id': 681528910, 'number': 1271, 'closed': datetime.datetime(2021, 7, 9, 8, 36, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 1, 6, 37, 49, tzinfo=datetime.timezone.utc), 'time_taken': 698333.0, 'time_delta': '8 days, 1:58:53', 'additions': 21, 'deletions': 7, 'state': 'closed'}, {'id': 680565653, 'number': 1268, 'closed': datetime.datetime(2021, 7, 16, 10, 11, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 30, 6, 18, 4, tzinfo=datetime.timezone.utc), 'time_taken': 1396399.0, 'time_delta': '16 days, 3:53:19', 'additions': 62, 'deletions': 1, 'state': 'closed'}, {'id': 678509724, 'number': 1264, 'closed': datetime.datetime(2021, 7, 4, 18, 20, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 27, 12, 39, 41, tzinfo=datetime.timezone.utc), 'time_taken': 625241.0, 'time_delta': '7 days, 5:40:41', 'additions': 99, 'deletions': 82, 'state': 'closed'}, {'id': 674505548, 'number': 1258, 'closed': datetime.datetime(2021, 9, 3, 8, 38, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 21, 12, 22, 2, tzinfo=datetime.timezone.utc), 'time_taken': 6380168.0, 'time_delta': '73 days, 20:16:08', 'additions': 199, 'deletions': 30, 'state': 'closed'}, {'id': 673526681, 'number': 1255, 'closed': datetime.datetime(2021, 6, 20, 17, 27, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 18, 14, 34, 25, tzinfo=datetime.timezone.utc), 'time_taken': 183214.0, 'time_delta': '2 days, 2:53:34', 'additions': 82, 'deletions': 32, 'state': 'closed'}, {'id': 672597340, 'number': 1254, 'closed': datetime.datetime(2021, 6, 20, 14, 46, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 17, 12, 45, 38, tzinfo=datetime.timezone.utc), 'time_taken': 266472.0, 'time_delta': '3 days, 2:01:12', 'additions': 141, 'deletions': 11, 'state': 'closed'}, {'id': 671471755, 'number': 1253, 'closed': datetime.datetime(2021, 6, 16, 18, 27, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 16, 13, 32, 8, tzinfo=datetime.timezone.utc), 'time_taken': 17701.0, 'time_delta': '4:55:01', 'additions': 105, 'deletions': 30, 'state': 'closed'}, {'id': 668987327, 'number': 1252, 'closed': datetime.datetime(2021, 6, 13, 12, 19, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 13, 4, 13, 4, tzinfo=datetime.timezone.utc), 'time_taken': 29206.0, 'time_delta': '8:06:46', 'additions': 29, 'deletions': 24, 'state': 'closed'}, {'id': 668209420, 'number': 1247, 'closed': datetime.datetime(2021, 6, 14, 7, 41, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 14, 26, 3, tzinfo=datetime.timezone.utc), 'time_taken': 234915.0, 'time_delta': '2 days, 17:15:15', 'additions': 45, 'deletions': 24, 'state': 'closed'}, {'id': 667864430, 'number': 1246, 'closed': datetime.datetime(2021, 7, 18, 16, 56, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 11, 8, 37, 11, tzinfo=datetime.timezone.utc), 'time_taken': 3226764.0, 'time_delta': '37 days, 8:19:24', 'additions': 258, 'deletions': 1, 'state': 'closed'}, {'id': 665121540, 'number': 1243, 'closed': datetime.datetime(2021, 6, 12, 7, 51, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 6, 8, 17, 43, 2, tzinfo=datetime.timezone.utc), 'time_taken': 310124.0, 'time_delta': '3 days, 14:08:44', 'additions': 37, 'deletions': 36, 'state': 'closed'}, {'id': 658395262, 'number': 1239, 'closed': datetime.datetime(2021, 6, 1, 8, 11, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 15, 33, 4, tzinfo=datetime.timezone.utc), 'time_taken': 59898.0, 'time_delta': '16:38:18', 'additions': 88, 'deletions': 41, 'state': 'closed'}, {'id': 657606570, 'number': 1237, 'closed': datetime.datetime(2021, 5, 31, 22, 19, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 30, 6, 2, 54, tzinfo=datetime.timezone.utc), 'time_taken': 144998.0, 'time_delta': '1 day, 16:16:38', 'additions': 5, 'deletions': 7, 'state': 'closed'}, {'id': 654818451, 'number': 1235, 'closed': datetime.datetime(2021, 6, 11, 9, 7, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 27, 11, 21, 1, tzinfo=datetime.timezone.utc), 'time_taken': 1287975.0, 'time_delta': '14 days, 21:46:15', 'additions': 19, 'deletions': 136, 'state': 'closed'}, {'id': 629044375, 'number': 1202, 'closed': datetime.datetime(2021, 5, 4, 14, 0, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 3, 11, 38, 52, tzinfo=datetime.timezone.utc), 'time_taken': 94890.0, 'time_delta': '1 day, 2:21:30', 'additions': 78, 'deletions': 80, 'state': 'closed'}, {'id': 628381787, 'number': 1191, 'closed': datetime.datetime(2021, 6, 11, 10, 18, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 8, 6, 27, tzinfo=datetime.timezone.utc), 'time_taken': 3550321.0, 'time_delta': '41 days, 2:12:01', 'additions': 194, 'deletions': 93, 'state': 'closed'}, {'id': 628379651, 'number': 1190, 'closed': datetime.datetime(2021, 5, 16, 15, 31, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 1, 7, 50, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1323640.0, 'time_delta': '15 days, 7:40:40', 'additions': 397, 'deletions': 179, 'state': 'closed'}, {'id': 622628605, 'number': 1184, 'closed': datetime.datetime(2021, 5, 16, 15, 28, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 24, 18, 28, 11, tzinfo=datetime.timezone.utc), 'time_taken': 1889990.0, 'time_delta': '21 days, 20:59:50', 'additions': 78, 'deletions': 37, 'state': 'closed'}, {'id': 614708690, 'number': 1173, 'closed': datetime.datetime(2021, 4, 19, 12, 12, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 13, 19, 30, 2, tzinfo=datetime.timezone.utc), 'time_taken': 492158.0, 'time_delta': '5 days, 16:42:38', 'additions': 282, 'deletions': 53, 'state': 'closed'}, {'id': 609654127, 'number': 1159, 'closed': datetime.datetime(2021, 4, 6, 9, 47, 51, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 4, 6, 8, 37, 36, tzinfo=datetime.timezone.utc), 'time_taken': 4215.0, 'time_delta': '1:10:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 601001976, 'number': 1136, 'closed': datetime.datetime(2021, 4, 11, 17, 2, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 25, 19, 25, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1460216.0, 'time_delta': '16 days, 21:36:56', 'additions': 240, 'deletions': 154, 'state': 'closed'}, {'id': 596831404, 'number': 1126, 'closed': datetime.datetime(2021, 3, 20, 20, 55, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 19, 19, 47, 38, tzinfo=datetime.timezone.utc), 'time_taken': 90465.0, 'time_delta': '1 day, 1:07:45', 'additions': 8, 'deletions': 7, 'state': 'closed'}, {'id': 591072033, 'number': 1116, 'closed': datetime.datetime(2021, 3, 22, 8, 11, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 11, 18, 5, 57, tzinfo=datetime.timezone.utc), 'time_taken': 914707.0, 'time_delta': '10 days, 14:05:07', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 586123446, 'number': 1114, 'closed': datetime.datetime(2021, 3, 11, 17, 37, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 3, 6, 19, 44, 37, tzinfo=datetime.timezone.utc), 'time_taken': 424360.0, 'time_delta': '4 days, 21:52:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 572712558, 'number': 1101, 'closed': datetime.datetime(2021, 2, 13, 8, 41, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 12, 18, 46, 51, tzinfo=datetime.timezone.utc), 'time_taken': 50107.0, 'time_delta': '13:55:07', 'additions': 4, 'deletions': 5, 'state': 'closed'}, {'id': 568831495, 'number': 1098, 'closed': datetime.datetime(2021, 11, 12, 18, 19, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 2, 6, 18, 36, 55, tzinfo=datetime.timezone.utc), 'time_taken': 24104553.0, 'time_delta': '278 days, 23:42:33', 'additions': 410, 'deletions': 31, 'state': 'closed'}, {'id': 562561005, 'number': 1092, 'closed': datetime.datetime(2021, 1, 28, 14, 52, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 27, 14, 49, 17, tzinfo=datetime.timezone.utc), 'time_taken': 86574.0, 'time_delta': '1 day, 0:02:54', 'additions': 28, 'deletions': 20, 'state': 'closed'}, {'id': 559181211, 'number': 1085, 'closed': datetime.datetime(2021, 1, 22, 9, 56, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 21, 13, 8, 23, tzinfo=datetime.timezone.utc), 'time_taken': 74881.0, 'time_delta': '20:48:01', 'additions': 73, 'deletions': 73, 'state': 'closed'}, {'id': 547625510, 'number': 1056, 'closed': datetime.datetime(2021, 1, 5, 7, 54, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 1, 1, 13, 3, 38, tzinfo=datetime.timezone.utc), 'time_taken': 327062.0, 'time_delta': '3 days, 18:51:02', 'additions': 85, 'deletions': 0, 'state': 'closed'}]"
