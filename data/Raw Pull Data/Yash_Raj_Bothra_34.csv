pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
433985833,Add Support to Encounter Class UI,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

<!--
(Thanks for sending a pull request!
-->

<!-- Add the issue number that is fixed by this PR (In the form Fixes #123) -->
Fixes #

#### Short description of what this resolves:


#### Changes proposed in this pull request:

-
-
-",True,3628,https://api.github.com/repos/openemr/openemr/pulls/3628,https://github.com/openemr/openemr/pull/3628,closed,13,1,2,2,2,2,1,0,[{'name': 'Status: Needs Review'}],2020-06-13 09:55:07+00:00,2020-06-14 00:20:29+00:00,51922.0,14:25:22,"[{'comment_id': 439764465, 'comment_body': 'hi @yashrajbothra , Would do this instead:\r\n```\r\n<?php echo generate_select_list(\'class_code\', \'_ActEncounterCode\', $viewmode ? $result[\'class_code\'] : \'\', \'\', \'\'); ?>\r\n```\r\n(in this case the list itself will enforce the default and that empty 5th parameter will remove the ""empty"" selection)', 'comment_created': datetime.datetime(2020, 6, 13, 19, 48, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439779007, 'comment_body': ""```suggestion\r\n                            <?php echo generate_select_list('class_code', '_ActEncounterCode', $viewmode ? $result['class_code'] : '', '', ''); ?>\r\n\r\n```"", 'comment_created': datetime.datetime(2020, 6, 14, 0, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}]","[{'commit_sha': '49a6bdf4c5d46656f1bd7ed77e9dca1355038193', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '80498fdfcac1c999747afced12bee596d43b898b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
416685289,Upgrade Encounter Resource,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

### Objective
1. Upgrade `forms_encounter to support UUID (https://github.com/openemr/openemr/pull/3506/commits/e71ecfa3f823a9f4fd40833646d4832823f1797a - Ready to Review)
2. Upgrade Standard API getAll and getOne Endpoints (https://github.com/openemr/openemr/pull/3506/commits/c19a3a91f909ad4dcba864bfcac70b5153ebf60d - Ready to Review)
3. Upgrade All Remaining Endpoints (https://github.com/openemr/openemr/pull/3506/commits/909a899eefbe51bd3415220d740a34ada0f35fd1 - Ready to review).
4. Upgrade FHIR Resource Endpoints (9e665b88c78462e3f95760e0daa29cf20662bfc8 - Ready to Review]
5. Upgraded Documentation (c13d001842d26543fb7a8d6a117a494a8c86174c - Ready to Review)

Fixes #3454 ",True,3506,https://api.github.com/repos/openemr/openemr/pulls/3506,https://github.com/openemr/openemr/pull/3506,closed,1322,414,20,22,38,22,1,0,[{'name': 'Status: Needs Review'}],2020-05-12 12:13:25+00:00,2020-06-13 02:42:50+00:00,2730565.0,"31 days, 14:29:25","[{'comment_id': 432819599, 'comment_body': 'hi @yashrajbothra , This code block will go into the middle of these 2 code blocks:\r\n```\r\n#IfUuidNeedUpdate form_encounter\r\n#EndIf\r\n```\r\nThis will populate all the empty uuid when upgrading from a prior OpenEMR versions. So, when making the uuid for upgrade, there are 3 steps:\r\n1. Create the uuid column (you did above)\r\n2. Populate the blank uuids with a uuid (with code I copied here)\r\n3. Then make the uuid column a unique index (you did below)\r\n\r\nNote that if you skip step 2, then it will break on step 3, since blank columns are not unique.', 'comment_created': datetime.datetime(2020, 5, 30, 7, 36, 19, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 432883206, 'comment_body': 'Actually I was unaware of how Comments Meta language is working but now after going through this [file](https://github.com/openemr/openemr/blob/81eaedc5377f46590445367e696ffdcc60da71de/library/sql_upgrade_fx.php ). I have a little understanding of how things are wired.\r\n\r\nThanks', 'comment_created': datetime.datetime(2020, 5, 30, 20, 8, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 432893076, 'comment_body': ""Note this createMissingUuids() function is just meant for OpenEMR upgrades. Since uuid is a unique key, mysql will throw an error if there are any empty uuid's (ie. no need to run above line). This is the nice thing about the unique key part of the uuid, it will let us know with a hard error if we have missed any places when inserting form_encounter in the codebase, which can then fix."", 'comment_created': datetime.datetime(2020, 5, 30, 22, 45, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 432893377, 'comment_body': 'nice line and function!\r\n![2DV](https://user-images.githubusercontent.com/278968/83340466-6661df00-a28d-11ea-93c3-c130646eed65.gif)\r\n', 'comment_created': datetime.datetime(2020, 5, 30, 22, 51, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 432893575, 'comment_body': 'just to make this more clear for future developers, would prepend fe. to the pid:\r\n```\r\nWHERE fe.pid=? and fe.uuid=?\r\n```', 'comment_created': datetime.datetime(2020, 5, 30, 22, 54, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 432894677, 'comment_body': ""shouldn't be inserting the above 2 lines in data since don't want those updated. can just store them here as normal variables that you then use below in the `$query['bind']`"", 'comment_created': datetime.datetime(2020, 5, 30, 23, 14, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 432894949, 'comment_body': 'nice!', 'comment_created': datetime.datetime(2020, 5, 30, 23, 18, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 433139580, 'comment_body': 'If I would remove the function and then try to add any Encounter from our UI then the UUID field is empty. And when trying to fetch all records it shows :arrow_down: \r\n![image](https://user-images.githubusercontent.com/47683556/83397040-9985a900-a41a-11ea-9c44-8a381d91c249.png)\r\n:confused:  ', 'comment_created': datetime.datetime(2020, 6, 1, 9, 45, 7, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 435693150, 'comment_body': ""Above block not needed. I had to add this for the patient_data column for those that are using the master branch in production (since i previously added a column that didn't default to null, I had to add the block to fix that and convert it to NULL). Since the form_encounter uuid has not yet been added to the codebase, you don't need to do this :)"", 'comment_created': datetime.datetime(2020, 6, 5, 5, 10, 43, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 435851414, 'comment_body': 'Yea Agree, It was needed only once for my local but not needed here :+1:', 'comment_created': datetime.datetime(2020, 6, 5, 11, 8, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 436069363, 'comment_body': 'Need to change this because the  `$_SERVER[\'REQUEST_URI\']` comes with query string which can\'t be used in ""fullUrl""\r\nExample : ` ""fullUrl"": ""http//localhost/openemr/apis/fhir/Encounter?_id=90b834ff-b521-488d-aa3e-8f60193db3ec/90b834ff-b521-488d-aa3e-8f60193db3ec""`\r\n\r\nAnother possible solution could be\r\n`parse_url($_SERVER[\'REQUEST_URI\'], PHP_URL_PATH)`\r\n', 'comment_created': datetime.datetime(2020, 6, 5, 17, 43, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 436204754, 'comment_body': ""Still need to add Encounter.type & Encounter.class as we are following [US Core Profile](https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-encounter.html) and these are must haves so I think it will be [mandatory](https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-encounter.html#mandatory-and-must-support-data-elements) to add these coding. I have discussed few things with brady sir but couldn't figure out which way would be better to implement. If anyone can help me figure out which field we can map to the valueset so that we can easily support this :)\r\n\r\ncc @rhausam @dixonwhitmire "", 'comment_created': datetime.datetime(2020, 6, 5, 23, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 436240085, 'comment_body': 'nice! OpenEMR now has bidirectional id<->uuid mapping :)\r\n\r\n![2DV](https://user-images.githubusercontent.com/278968/83936761-8278eb00-a77b-11ea-8fa1-b12923dd48b1.gif)\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 6, 5, 25, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 436316842, 'comment_body': ""1. Need an item that gives the list a title:\r\n```\r\nINSERT INTO list_options (list_id, option_id, title, seq) VALUES ('lists', '_ActEncounterCode', 'Value Set ActEncounterCode', 1);\r\n```\r\n\r\n2. AMB and EMER need titles\r\n\r\n3. Add seq to all the items (start with 10 and increment by 10)\r\n\r\n3. Give AMB the is_default\r\n```\r\nINSERT INTO list_options (list_id, option_id, title, seq, is_default) VALUES ('_ActEncounterCode', 'AMB', 'ambulatory', 10, 1);\r\n```\r\n\r\nNote that the title is what will show in the selector from the encounter UI, so this will likely need to be capitalized. Because of that, I would store the actual string that is needed for FHIR in the notes column:\r\n```\r\nINSERT INTO list_options (list_id, option_id, title, notes, seq, is_default) VALUES ('_ActEncounterCode', 'AMB', 'Outpatient', 'ambulatory', 10, 1);\r\n```\r\nAnd would use following titles respectively\r\nOutpatient\r\nEmergency Dept\r\nOut in Field\r\nHome Health\r\nInpatient Encounter\r\nInpatient Acute\r\nInpatient Non-Acute\r\nObservation Encounter\r\nPre-Admission\r\nShort Stay\r\nVirtual Encounter\r\n\r\nI would then place this as an input selector in the encounter UI which will default to AMB and not allow it to be set to empty. I the Encounter UI would place it to the right of Encounter Provider selector."", 'comment_created': datetime.datetime(2020, 6, 7, 2, 2, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 436317019, 'comment_body': 'Will need to add the list_options stuff here. Will look like this:\r\n```\r\n#IfNotRow list_options list_id _ActEncounterCode\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 2, 6, 17, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439185885, 'comment_body': 'this should be:\r\n```\r\n#IfNotRow2D list_options list_id lists option_id _ActEncounterCode\r\n```', 'comment_created': datetime.datetime(2020, 6, 12, 3, 21, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439186144, 'comment_body': 'need to increment the seq by 10 rather than 1. so, should be 10, 20, 30, 40, 50...', 'comment_created': datetime.datetime(2020, 6, 12, 3, 22, 45, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439198631, 'comment_body': 'need to increment the seq by 10 rather than 1. so, should be 10, 20, 30, 40, 50...', 'comment_created': datetime.datetime(2020, 6, 12, 4, 19, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439202273, 'comment_body': 'pretty sure this now needs to be:\r\n```\r\nclass.note as class_title,\r\n```', 'comment_created': datetime.datetime(2020, 6, 12, 4, 37, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439202551, 'comment_body': 'pretty sure this now needs to be:\r\n```\r\nclass.note as class_title,\r\n```', 'comment_created': datetime.datetime(2020, 6, 12, 4, 38, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439202689, 'comment_body': 'pretty sure this now needs to be:\r\n```\r\nclass.note as class_title,\r\n```', 'comment_created': datetime.datetime(2020, 6, 12, 4, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 439202978, 'comment_body': 'pretty sure this now needs to be:\r\n```\r\nclass.note as class_title,\r\n```', 'comment_created': datetime.datetime(2020, 6, 12, 4, 40, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': 'e71ecfa3f823a9f4fd40833646d4832823f1797a', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c19a3a91f909ad4dcba864bfcac70b5153ebf60d', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5309fc257be1ae294167f826c4d2af8d21c028a5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '909a899eefbe51bd3415220d740a34ada0f35fd1', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0d66809e2c69ea2e5b91dcb5d124e3f5b70e99c9', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e53dffce106134e591675a813320bffc0e67e1c8', 'committer_username': 'bradymiller', 'committer_name': 'Brady Miller', 'committer_email': 'brady.g.miller@gmail.com', 'commit_date': datetime.datetime(2010, 5, 17, 8, 0, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '452811989e1fc579b621537911e6eb4cb6e84bc6', 'committer_username': 'bradymiller', 'committer_name': 'Brady Miller', 'committer_email': 'brady.g.miller@gmail.com', 'commit_date': datetime.datetime(2010, 5, 17, 8, 0, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'eacb34f8f05575ae33aca73610cc843ff63cad89', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a0830b908ce5cfb7a20e4bca0e4175baf8f90521', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9e665b88c78462e3f95760e0daa29cf20662bfc8', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1b929a2f12244826cde2e69f4dfb759809e5b44', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e1b9382b6138bce632a7695d11c8d864a72d3ba', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c33233f234253d0dde76d82f2a55580b0d6ba78', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f0328dc7bd66ae2986db7e3e75025049af8ec2c2', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6e94e6050cb955734081a9a9d163dc19e1b1a3e4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c13d001842d26543fb7a8d6a117a494a8c86174c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4f93534c193eca7f61d5b62f36edaa8bedc1c424', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a8d6bbeae9001d29fa006229caaad3e8f6615312', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6d34e0f4e2da04d33815827809d860e3ace8b497', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'edb5cfe8389dd8150d68cc91e5637412717f5a0c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79ebf129779a81b69c872e9c0859a798ab2d79a5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'acf85c4005be9f5816d87b88306fe36dac32ccb5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
435982477,Upgraded Practitioner/Provider Resource,"<!--
(Thanks for sending a pull request!
-->

<!-- Add the issue number that is fixed by this PR (In the form Fixes #123) -->
Fixes #

#### Short description of what this resolves:


#### Changes proposed in this pull request:

-
-
-",True,3652,https://api.github.com/repos/openemr/openemr/pulls/3652,https://github.com/openemr/openemr/pull/3652,closed,2482,173,26,11,7,10,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-06-17 17:04:35+00:00,2020-06-20 00:43:23+00:00,200328.0,"2 days, 7:38:48","[{'comment_id': 441721068, 'comment_body': '```\r\n#IfUuidNeedUpdate users\r\n```\r\n:)', 'comment_created': datetime.datetime(2020, 6, 17, 17, 47, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 441721764, 'comment_body': 'also needs to be set up as unique key', 'comment_created': datetime.datetime(2020, 6, 17, 17, 48, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 441730725, 'comment_body': 'Note that id in users table is autoincrementing, so no reason to create an id here (doing this opens door to possible concurrency issues). Can just let database create the id naturally on the insert.', 'comment_created': datetime.datetime(2020, 6, 17, 18, 3, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 441731922, 'comment_body': 'Agree :+1:  \r\n\r\nThanks :)', 'comment_created': datetime.datetime(2020, 6, 17, 18, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 441732233, 'comment_body': 'the $results should be storing the id (this is the return from the sqlInsert call).', 'comment_created': datetime.datetime(2020, 6, 17, 18, 6, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 441732540, 'comment_body': ""so this should work:\r\n```\r\n'id' => $results,\r\n```"", 'comment_created': datetime.datetime(2020, 6, 17, 18, 6, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 441734564, 'comment_body': 'Guessing the above 2 lines can be removed', 'comment_created': datetime.datetime(2020, 6, 17, 18, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 441735643, 'comment_body': ""Definitely! 11 LN can be removed can't guess the second one?"", 'comment_created': datetime.datetime(2020, 6, 17, 18, 12, 10, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 441738610, 'comment_body': 'oops, just meant line 11 :)', 'comment_created': datetime.datetime(2020, 6, 17, 18, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 442654073, 'comment_body': '@yashrajbothra , The above line in the 4 endpoints above should be this instead:\r\n```\r\nRestConfig::authorization_check(""admin"", ""users"");\r\n```', 'comment_created': datetime.datetime(2020, 6, 19, 6, 25, 58, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '9a27e52af38521f7b35a8b3646e243345635290e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a803fda7cb207744b5c45e686722c1376454c20a', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f705401b43239e08447aee34c2591f7eb84e221b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'db445ca08c16c0d09beb9d165f76d06822156f4b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feddd5ffc1748c26ff4dd661703d9ba336642715', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3b911babc69cf8003b56d3fdbfe07fe736bd96b0', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3e85558e1015d5925df227d36789fd6e66ef847b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2cbd2bd4c7996636bc6593589137b313842d7d0', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6bcb955c5e9948973ab177788b36b2e5579fdd68', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fc818762539589b66b8c98b64323a394ec6be12d', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '35ffc031c5de602b8ce550e475559723555a35bd', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
437288048,Adding/Upgrading Organization Resource ,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

#### Short description of what this resolves:
This will Add some Updates related to Standard and FHIR Organization Resource

#### Changes proposed in this pull request:
1. Changed Names of Existing functions to introduce the new ones and maintain our Standard API flow.(https://github.com/openemr/openemr/commit/ae52257ac83c66fdbcde6394db0231ff66012283)
",True,3662,https://api.github.com/repos/openemr/openemr/pulls/3662,https://github.com/openemr/openemr/pull/3662,closed,1886,187,31,10,12,7,1,0,[{'name': 'Status: Needs Review'}],2020-06-19 20:42:20+00:00,2020-06-27 20:24:14+00:00,690114.0,"7 days, 23:41:54","[{'comment_id': 444047906, 'comment_body': '@yashrajbothra , A common issue that happens when adding a new column to the facility table is that it breaks the install (we have all made this mistake; some of us including myself even more than once :) ). Just need to remember to place NULL for the `uuid` below this where the facility insert is (line 1623).', 'comment_created': datetime.datetime(2020, 6, 23, 8, 22, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 444055006, 'comment_body': ""Note that the follow will also return unregistered uuid not based on a table:\r\n```(new UuidRegistry(['disable_tracker' => true]))->createUuid()```"", 'comment_created': datetime.datetime(2020, 6, 23, 8, 33, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 444548558, 'comment_body': ""note uuid is the second column, so this should be:\r\n```\r\nINSERT INTO `facility` VALUES (3, NULL, 'Your Clinic Name Here', '000-000-0000', '000-000-0000', '', '', '', '', '', '', NULL, NULL, 1, 1, 0, NULL, '', '', '', '', '', '','#99FFFF','0', '', '1', '', '', '', '', '', '', '', '');\r\n```"", 'comment_created': datetime.datetime(2020, 6, 23, 22, 44, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 444548866, 'comment_body': 'note this returns a binary uuid', 'comment_created': datetime.datetime(2020, 6, 23, 22, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 445081370, 'comment_body': 'just noted this. for the above 2 endpoints (Organization POST/PATCH) should have:\r\n```\r\nRestConfig::authorization_check(""admin"", ""super"");\r\n```\r\n(then will be consistent with the api permissions)', 'comment_created': datetime.datetime(2020, 6, 24, 18, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446557918, 'comment_body': 'This block needs to be added back:\r\n```\r\n#IfMissingColumn facility_user_ids uuid\r\nALTER TABLE `facility_user_ids` ADD `uuid` binary(16) DEFAULT NULL;\r\n#EndIf\r\n\r\n#IfUuidNeedUpdateVertical facility_user_ids uid:facility_id\r\n#EndIf\r\n\r\n#IfNotIndex facility_user_ids uuid\r\nCREATE INDEX `uuid` ON `facility_user_ids` (`uuid`);\r\n#EndIf\r\n```', 'comment_created': datetime.datetime(2020, 6, 27, 19, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446559233, 'comment_body': ""Will never do Merge's on Github Confuses me a lot :confused:  "", 'comment_created': datetime.datetime(2020, 6, 27, 19, 27, 32, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}]","[{'commit_sha': '5135f59bd808a0a7f2503e3d3edadc83b4977d56', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da9b000e2b746d134e72af659ea2c3c54901533d', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a4ad5bf77cb6e9455c2377699bbec5087387273e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ec91f3043558650003b0238c4ddf7950f8ab025e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6887efa379a7cd57d7effade1d902c5dff0e893a', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df7c4b70bc2bfcbb90418e14ded568da736dd52a', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02d894721b767d201144dfeed14a428b6ed5bffc', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07d5a5423732f034a0eee85495fbcc83dbae4c16', 'committer_username': 'bradymiller', 'committer_name': 'Brady Miller', 'committer_email': 'brady.g.miller@gmail.com', 'commit_date': datetime.datetime(2010, 5, 17, 8, 0, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3fa543b269d5bd4d188cd195466200376bcb15f3', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c0600628899b1d718b59aa57d422847f82802589', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
440254065,Add UI List for Provide Role/Specialty with ValueSet,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

<!--
(Thanks for sending a pull request!
-->

<!-- Add the issue number that is fixed by this PR (In the form Fixes #123) -->
Fixes #

#### Short description of what this resolves:


#### Changes proposed in this pull request:

-
-
-",True,3680,https://api.github.com/repos/openemr/openemr/pulls/3680,https://github.com/openemr/openemr/pull/3680,closed,2337,64,13,17,2,18,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-06-25 20:58:21+00:00,2020-07-02 07:59:12+00:00,558051.0,"6 days, 11:00:51","[{'comment_id': 445967664, 'comment_body': 'oh, oh, @tywrenn may strike this line down with a lightning bolt :)\r\n\r\n![tenor (30)](https://user-images.githubusercontent.com/278968/85822148-08f76b80-b72f-11ea-9075-192d7c88673a.gif)\r\n', 'comment_created': datetime.datetime(2020, 6, 26, 4, 58, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446049057, 'comment_body': ""hi @yashrajbothra ,\r\nThis is a good first stab at this. note the goal is for this to work with the `generate_form_field($layout_entry, $entry_data['field_value'])` for all cases. The magic is in the data_type setting for the field in layout_options entry. This is where you can choose whether it is a simple text field or a list selector. If a list selector, then the list_id will store the list that is used. When you have a handle on that, then you can create magic by creating a new data_type that basically looks like the list selector with a couple modifications (the select-dropdown class when call generate_select_list from it) to support the search feature. Then this new datatype will be able to be used in any form that uses the layout based engine."", 'comment_created': datetime.datetime(2020, 6, 26, 8, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446051657, 'comment_body': ""remove to add the main list entry here:\r\n```\r\nINSERT INTO `list_options` ( `list_id`, `option_id`, `title`, `seq` ) VALUES ('lists' ,'us-core-provider-role', 'US Core Provider Role', 1);\r\n```"", 'comment_created': datetime.datetime(2020, 6, 26, 8, 44, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446052613, 'comment_body': 'safer to use #IfNotRow2D\r\n```\r\n#IfNotRow2D layout_options form_id FACUSR field_id role_code\r\n```', 'comment_created': datetime.datetime(2020, 6, 26, 8, 46, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446059982, 'comment_body': 'Hi @yashrajbothra \r\n\r\nPlease help remove the `body_top `class it is unnecessary.', 'comment_created': datetime.datetime(2020, 6, 26, 9, 1, 8, tzinfo=datetime.timezone.utc), 'commenter': 'stu01509', 'type': 'User'}, {'comment_id': 446060686, 'comment_body': 'Please help to remove the body_top class it is unnecessary.\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 26, 9, 2, 33, tzinfo=datetime.timezone.utc), 'commenter': 'stu01509', 'type': 'User'}, {'comment_id': 446062355, 'comment_body': 'Please add the bootstrap table style, It may look like this\r\n```html\r\n<table class=""table table-borderless "">\r\n```\r\n\r\nAlso, I guess the `td` content didn\'t need to add the `p` tag.\r\ncc @tywrenn ', 'comment_created': datetime.datetime(2020, 6, 26, 9, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'stu01509', 'type': 'User'}, {'comment_id': 446413381, 'comment_body': 'Cleared this mess before lightning Yoda come :wink: ', 'comment_created': datetime.datetime(2020, 6, 26, 21, 15, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 446414029, 'comment_body': ""Kool :+1:  Didn't new Layout options are so powerful \r\nWill go ahead and try to make new data type for this case then :+1: "", 'comment_created': datetime.datetime(2020, 6, 26, 21, 17, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 446414375, 'comment_body': 'Thanks @stu01509 for the review. I think I have fixed some of them :) ', 'comment_created': datetime.datetime(2020, 6, 26, 21, 17, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 446600494, 'comment_body': 'also need to incorporate `$smallform` in above (like is done in data_type 1)', 'comment_created': datetime.datetime(2020, 6, 28, 4, 59, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446600572, 'comment_body': 'also need to incorporate `$disabled` in above (like is done in data_type 1)', 'comment_created': datetime.datetime(2020, 6, 28, 5, 0, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446600735, 'comment_body': '```suggestion\r\n            $smallform . "" select-dropdown"",\r\n```\r\n\r\nThis will work?', 'comment_created': datetime.datetime(2020, 6, 28, 5, 2, 43, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 446600830, 'comment_body': 'also need to use same strategy as above line for the `generate_print_field()` and `generate_plaintext_field()` function in this library ', 'comment_created': datetime.datetime(2020, 6, 28, 5, 3, 22, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446601233, 'comment_body': '```suggestion \r\n            $disabled,\r\n```', 'comment_created': datetime.datetime(2020, 6, 28, 5, 9, 36, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 446607908, 'comment_body': 'actually, it would be easier to maintain if incorporated this datatype into the `if ($data_type == 1 || $data_type == 33) {` above and then change the pertinent line there to:\r\n```\r\n(($data_type == 43) ? $smallform . "" select-dropdown"" : $smallform),\r\n```', 'comment_created': datetime.datetime(2020, 6, 28, 6, 32, 3, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 446608291, 'comment_body': 'increment seq by 1 (so this will be 2)\r\nset it with new data_type of 43 :)', 'comment_created': datetime.datetime(2020, 6, 28, 6, 36, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 447410871, 'comment_body': 'also need to bring in the 2 new list_options into this script (recommend doing after you ensure it is testing well from the upgrade script). and copy them into the section in this script where the other list_options are listed.', 'comment_created': datetime.datetime(2020, 6, 30, 5, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '700f0de153c38696f50c042ec354a7d1ccb94f44', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29991bd3d17ec2a3a1109e1ca6634925a51cf988', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be22553d285d882f80721bb842157aff7aa1b9ae', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd15731597e5965e2e9c5cfc5adfc1964bf55a56c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1611fde9ce44fde2c501717401733660f5da7b4b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd1126fc788f26443c462eb01f24e027abc0b9f0', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3ca9a45b957ee4ece3b2612f4c5370f87f107db7', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67f77c43f1a643aba22261c426e7bc4352bce34b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbd162ec94f628035744593e8c09ac804aac62ef', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2ab6b9207380e03701f290ff28e177f7d97ce9fe', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '670afff4e419258886d6c0faa6c5ae5119b4b505', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cecf4d4a5dc20a88ea8b4cd246b4af82b0da697b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '434ef15b1fd61c8d82b807e5bc88e63ed563249f', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e2468bcd1df54f1409881880dd7b7dc1b9c76c10', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbe46a4aa42c49ed85cddf860139fb50d4845198', 'committer_username': 'bradymiller', 'committer_name': 'Brady Miller', 'committer_email': 'brady.g.miller@gmail.com', 'commit_date': datetime.datetime(2010, 5, 17, 8, 0, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': '230941e75950d2008f8eb2e60b5d2b235fffb630', 'committer_username': 'bradymiller', 'committer_name': 'Brady Miller', 'committer_email': 'brady.g.miller@gmail.com', 'commit_date': datetime.datetime(2010, 5, 17, 8, 0, 16, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a84957033d65e675d5d79889cdc7eb81389d3a0d', 'committer_username': 'bradymiller', 'committer_name': 'Brady Miller', 'committer_email': 'brady.g.miller@gmail.com', 'commit_date': datetime.datetime(2010, 5, 17, 8, 0, 16, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
443744764,Added FHIR Endpoints for PractitionerRole,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

#### Changes proposed in this pull request:

- Added FHIR GET Endpoint 
- Updated Documentation",True,3709,https://api.github.com/repos/openemr/openemr/pulls/3709,https://github.com/openemr/openemr/pull/3709,closed,456,0,6,3,2,5,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-07-02 21:14:25+00:00,2020-07-03 08:17:22+00:00,39777.0,11:02:57,"[{'comment_id': 449351847, 'comment_body': '```\r\n RestConfig::authorization_check(""admin"", ""users"");\r\n```', 'comment_created': datetime.datetime(2020, 7, 3, 2, 56, 6, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 449351878, 'comment_body': '```\r\n RestConfig::authorization_check(""admin"", ""users"");\r\n```', 'comment_created': datetime.datetime(2020, 7, 3, 2, 56, 20, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 449352227, 'comment_body': 'also, add the following to the endpoints `""GET /fhir/Organization"" => function () {` and `""GET /fhir/Organization/:id"" => function ($id) {` endpoints:\r\n```\r\nRestConfig::authorization_check(""admin"", ""users"");\r\n```', 'comment_created': datetime.datetime(2020, 7, 3, 2, 58, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 449353525, 'comment_body': ""note this needs to use the vertical table setting to work correctly:\r\n```\r\n$this->uuidRegistery = new UuidRegistry(['table_name' => self::PRACTITIONER_ROLE_TABLE, 'table_vertical' => ['uid', 'facility_id']]);\r\n```"", 'comment_created': datetime.datetime(2020, 7, 3, 3, 4, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 449354893, 'comment_body': ""also, since this will need uuid population in users and facility, I'm guessing you'll need to ensure these are populated. maybe something like this here will do it:\r\n```\r\n(new UuidRegistry(['table_name' => 'users']))->createMissingUuids();\r\n(new UuidRegistry(['table_name' => 'facility']))->createMissingUuids();\r\n\r\n```"", 'comment_created': datetime.datetime(2020, 7, 3, 3, 11, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '9c729948809586e909a8f0530393e09d76c7ed3c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7c2d9488fcc58cd10fe2870f1b6402a681935dd8', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3d1931013e8c8852d4515208a5156d7a9d59b469', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
443960549,Duplicates In PractitionerRole FHIR Resource,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

#### Short description of what this resolves:
In search query, there are many-to-many joins resulting to duplicate fields.

#### Changes proposed in this pull request:

- Fixed by using `GROUP BY ID`",True,3713,https://api.github.com/repos/openemr/openemr/pulls/3713,https://github.com/openemr/openemr/pull/3713,closed,31,60,5,4,2,6,1,0,[{'name': 'Status: Needs Review'}],2020-07-03 09:39:29+00:00,2020-07-09 08:19:30+00:00,513601.0,"5 days, 22:40:01","[{'comment_id': 449668486, 'comment_body': 'yep, was a bit suspicious of these queries not working on the vertical table. Guessing this GROUP BY will need to be by the prac_role.uuid  (and guessing more work will be needed on these queries).', 'comment_created': datetime.datetime(2020, 7, 3, 17, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 449773792, 'comment_body': ""Just pushed a patch not so confident, please tell me if it doesn't make sense. Testing well :)"", 'comment_created': datetime.datetime(2020, 7, 4, 13, 35, 58, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 450017480, 'comment_body': 'hi @yashrajbothra , Testing is showing 32 entries when there should only be 6 (on my test data), and a bunch of inaccurate stuff (I think it may be giving every combination of possible role/specialty/user :) ). Using vertical tables (by pivoting them in the query) is definitely tough to learn. In the past, I had to figure this out on some reporting code: https://github.com/openemr/openemr/blob/master/library/report_database.inc#L52-L83\r\nAnd it was definitely not easy for me to figure it out at that time. So recommend keep working on it and testing it. ', 'comment_created': datetime.datetime(2020, 7, 6, 6, 53, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 450018661, 'comment_body': 'Also, will probably be easier to get the query in getOne() done first. Then can leverage that solution for the GetAll().', 'comment_created': datetime.datetime(2020, 7, 6, 6, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 451988795, 'comment_body': 'Concatenated User Name for better search :)', 'comment_created': datetime.datetime(2020, 7, 9, 6, 21, 23, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 451989350, 'comment_body': 'GROUP BY was missing so added to resolve duplicate entries.', 'comment_created': datetime.datetime(2020, 7, 9, 6, 22, 59, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}]","[{'commit_sha': '71e0b7374ab3156d382ec2f384f722a89ef57a9e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b2ccc781067a68d78ff578c81d29a1b6e9978f5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b05da2c7449226c95d98c3ccdd48cd365a69ad1', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aee9fa151aa50f15539fcfb8088aa59717b1d2a0', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
446646522,Immuniazation Resource,"Upgrading FHIR Immunization Resource with New Standard Endpoints 

#### Changes proposed in this pull request:

- Upgraded SEARCH Capabilities",True,3729,https://api.github.com/repos/openemr/openemr/pulls/3729,https://github.com/openemr/openemr/pull/3729,closed,641,258,12,8,2,19,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-07-09 06:27:52+00:00,2020-07-12 04:41:50+00:00,252838.0,"2 days, 22:13:58","[{'comment_id': 452623969, 'comment_body': '```\r\nRestConfig::authorization_check(""patients"", ""med"");\r\n```\r\nreference:\r\nhttps://www.open-emr.org/wiki/index.php/Access_Controls_Listing#Medical_Records_and_History_.28write.2Caddonly_optional.29_.28med.29', 'comment_created': datetime.datetime(2020, 7, 10, 5, 5, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452624014, 'comment_body': '```\r\nRestConfig::authorization_check(""patients"", ""med"");\r\n```\r\nreference:\r\nhttps://www.open-emr.org/wiki/index.php/Access_Controls_Listing#Medical_Records_and_History_.28write.2Caddonly_optional.29_.28med.29', 'comment_created': datetime.datetime(2020, 7, 10, 5, 5, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452624441, 'comment_body': 'lets keep the `use` block ordered alphabetically', 'comment_created': datetime.datetime(2020, 7, 10, 5, 7, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452625037, 'comment_body': ""good idea on the isValidUUID function. I'd make it clear whether it is checking for a string or binary uuid."", 'comment_created': datetime.datetime(2020, 7, 10, 5, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452625979, 'comment_body': ""oh, I see that you are using isValidUUID function for both binary and string validation. i would probably make those 2 separate functions (the only real difference is that check for `'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'` but since we are making these new helper functions, good idea to make it clear).\r\nAnd come to think of it, this isn't really checking if valid, but more checking if empty. so would use names of function to be similar to something like:\r\nisEmptyStringUUID\r\nisEmptyBinaryUUID"", 'comment_created': datetime.datetime(2020, 7, 10, 5, 14, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452626225, 'comment_body': 'database.sql also needs to be updated', 'comment_created': datetime.datetime(2020, 7, 10, 5, 15, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452626473, 'comment_body': 'better to remove than commenting out code', 'comment_created': datetime.datetime(2020, 7, 10, 5, 16, 54, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452626823, 'comment_body': 'better to remove code than comment it out', 'comment_created': datetime.datetime(2020, 7, 10, 5, 18, 24, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452627901, 'comment_body': 'Thanks for sharing the reference :)', 'comment_created': datetime.datetime(2020, 7, 10, 5, 22, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 452628950, 'comment_body': 'this auto-populating uuid stuff is just too cool every time i see it :)', 'comment_created': datetime.datetime(2020, 7, 10, 5, 27, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452632284, 'comment_body': 'Thanks, that would be better :) ', 'comment_created': datetime.datetime(2020, 7, 10, 5, 39, 45, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 452705471, 'comment_body': ""for this, note basically includes what is empty in the string in addition to this crazy binary, so something like:\r\n```\r\nreturn ((self::isEmptyStringUUID($uuidString)) && ($uuidString != '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'))\r\n```"", 'comment_created': datetime.datetime(2020, 7, 10, 8, 38, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452707308, 'comment_body': ""To clarify here, are we checking if the uuid is empty or valid? (I'd rec empty since would hate to overwrite a current uuid if the underlying code decided that the current uuid's were not valid in future)."", 'comment_created': datetime.datetime(2020, 7, 10, 8, 42, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452708171, 'comment_body': 'needs to be unique', 'comment_created': datetime.datetime(2020, 7, 10, 8, 43, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452709656, 'comment_body': 'plus I think for both of these functions, now need to reverse the comparisons since now checking if empty rather than if valid (or not empty)', 'comment_created': datetime.datetime(2020, 7, 10, 8, 46, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 452715618, 'comment_body': 'It would be isEmptyBinary as its a Binary value :)', 'comment_created': datetime.datetime(2020, 7, 10, 8, 57, 28, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 452722644, 'comment_body': 'Not Needed as `empty()` can be used to check any empty string :-1:  ', 'comment_created': datetime.datetime(2020, 7, 10, 9, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 453244970, 'comment_body': ""This should not be UNIQUE since it is a vertical table\r\n(hint: check out the data with several entries in it and you'll see what I mean :) )"", 'comment_created': datetime.datetime(2020, 7, 11, 23, 20, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 453261854, 'comment_body': 'Oh ya, I remember those duplicate entries with the same uuid. Will revert this :+1: ', 'comment_created': datetime.datetime(2020, 7, 12, 3, 30, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}]","[{'commit_sha': '134e0cd85cbfb91485725ae4b17c869ae1204480', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c8aff8e3bf48d0a3888299960f648aad66f6b61c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '86ee835dfc6354fb32767b7d722dfc1f50118db8', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '809d90b64d56bb16f5b3c44fc74fbf55389eb6f2', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2aad9d089d121fabb9d130428a8a82f8af8037d1', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '742ce39add39164feee24a004a59bb02ae4c93a7', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5d3bb197b9e3b6248d19b4912f3e9ef5709087d8', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7916836561a44018695f1f7bc7284ea3330968f3', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
447853151,Upgrading AllergyIntolerance Resource,"Signed-off-by: Yash Bothra <yashrajbothra786@gmail.com>

#### Changes proposed in this pull request:

- Added New Standard AllergyIntolrence Resource Endpoints
- Upgraded FHIR AllergyIntolrence Resource",True,3736,https://api.github.com/repos/openemr/openemr/pulls/3736,https://github.com/openemr/openemr/pull/3736,closed,1333,865,13,24,15,36,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-07-12 05:23:30+00:00,2020-07-24 06:29:34+00:00,1040764.0,"12 days, 1:06:04","[{'comment_id': 455414262, 'comment_body': ""@yashrajbothra , I just realized we already have allergy api endpoints (and classes). Shouldn't we be using the allergy api endpoints that already exist?"", 'comment_created': datetime.datetime(2020, 7, 15, 23, 4, 46, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 455414590, 'comment_body': '@yashrajbothra , I messed up on the @ above; check out my post above', 'comment_created': datetime.datetime(2020, 7, 15, 23, 5, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 455415965, 'comment_body': 'not sure if making all allergies unconfirmed makes sense for upgraders. would probably:\r\n1. make blank by default (so then upgraders entries will be blank)\r\n2. if blank, then fhir should return unconfirmed for the resource', 'comment_created': datetime.datetime(2020, 7, 15, 23, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 455416383, 'comment_body': ""don't forget:\r\n```\r\n#EndIf\r\n```"", 'comment_created': datetime.datetime(2020, 7, 15, 23, 10, 50, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 455416587, 'comment_body': 'also need to add the new list to database.sql', 'comment_created': datetime.datetime(2020, 7, 15, 23, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 455816812, 'comment_body': 'Ooops, Sometimes I just be selfish and think from FHIR perspective and forget there is also a web app :sweat_smile: ', 'comment_created': datetime.datetime(2020, 7, 16, 14, 11, 26, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 456946961, 'comment_body': 'In cases where api endpoints already exist, we should use same strategy as encounter enpoints where update the all the related endpoints to new api wiring and use uuid (for example, where patient is in these endpoints). Then would build the related fhir endpoints on top of that.', 'comment_created': datetime.datetime(2020, 7, 19, 19, 40, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 456954715, 'comment_body': 'to my point above, should be updating/leveraging the calls to ListRestController() rather than creating a new workaround controller.', 'comment_created': datetime.datetime(2020, 7, 19, 20, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 456955679, 'comment_body': ""I don't think list_option_id is related to allergyintolerance-verification ."", 'comment_created': datetime.datetime(2020, 7, 19, 21, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 456955737, 'comment_body': 'i think this comment is meant for the verification column above.', 'comment_created': datetime.datetime(2020, 7, 19, 21, 7, 2, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457212621, 'comment_body': 'Okay, these endpoints can be easily wired with `getAll` service :)', 'comment_created': datetime.datetime(2020, 7, 20, 9, 21, 33, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 457231937, 'comment_body': '`ListController` is getting used for all the Issues like allergy,medical_problem but for FHIR needs we need to customize all the queries in services for every resource. So using one controller for all might create a mess :thought_balloon:\r\n\r\n ', 'comment_created': datetime.datetime(2020, 7, 20, 9, 46, 55, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 457236271, 'comment_body': 'Thanks :)\r\nAlso for other old fields which are already added do, we need to update Comments in Upgrades or Database.sql is fine?', 'comment_created': datetime.datetime(2020, 7, 20, 9, 52, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 457338162, 'comment_body': 'Updated the potential fix. Lemme know if that looks good. Will Update the Doc too :)', 'comment_created': datetime.datetime(2020, 7, 20, 12, 30, 3, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 457820468, 'comment_body': ""ok to migrate out of the ListController, but we just shouldn't have both mechanisms (ie. shouldn't be able to use both new controller and ListController for allergy calls)"", 'comment_created': datetime.datetime(2020, 7, 21, 3, 53, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457893253, 'comment_body': ""Agreed for now we can't remove ListController as lots of other endpoints are using that Controller so we can just use New controller for allergy and keep Listcontroller as is :)"", 'comment_created': datetime.datetime(2020, 7, 21, 7, 30, 8, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 457893878, 'comment_body': 'Will go ahead and update PUT/POST And delete for new Controller that will resolve the issue :)', 'comment_created': datetime.datetime(2020, 7, 21, 7, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 457896727, 'comment_body': 'lets keep the old comment, though :)', 'comment_created': datetime.datetime(2020, 7, 21, 7, 36, 39, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457898214, 'comment_body': 'looks like the $isValidEncounter is a misnomer', 'comment_created': datetime.datetime(2020, 7, 21, 7, 39, 26, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457899712, 'comment_body': 'another misnomer', 'comment_created': datetime.datetime(2020, 7, 21, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457902083, 'comment_body': 'need to use binding to prevent sql-injection\r\n```\r\nAND formatted_dx_code = ?"";\r\n$codedesc = sqlQuery($codeSql, [$code]);\r\n```', 'comment_created': datetime.datetime(2020, 7, 21, 7, 46, 18, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457903908, 'comment_body': 'actually, better to run these through the following function to collect the code descriptions:\r\nhttps://github.com/openemr/openemr/blob/master/custom/code_types.inc.php#L680', 'comment_created': datetime.datetime(2020, 7, 21, 7, 49, 39, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457908164, 'comment_body': 'looks good', 'comment_created': datetime.datetime(2020, 7, 21, 7, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 457908954, 'comment_body': 'agreed', 'comment_created': datetime.datetime(2020, 7, 21, 7, 58, 31, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 458990539, 'comment_body': 'This is actually incorrect. The Bootstrap 4 grid system goes all the way up to col-12, not col-14.', 'comment_created': datetime.datetime(2020, 7, 22, 18, 16, 34, tzinfo=datetime.timezone.utc), 'commenter': 'tywrenn', 'type': 'User'}, {'comment_id': 458990704, 'comment_body': 'This is actually incorrect. The Bootstrap 4 grid system goes all the way up to col-12, not col-14.', 'comment_created': datetime.datetime(2020, 7, 22, 18, 16, 50, tzinfo=datetime.timezone.utc), 'commenter': 'tywrenn', 'type': 'User'}, {'comment_id': 458990833, 'comment_body': 'This is actually incorrect. The Bootstrap 4 grid system goes all the way up to col-12, not col-14.', 'comment_created': datetime.datetime(2020, 7, 22, 18, 17, 3, tzinfo=datetime.timezone.utc), 'commenter': 'tywrenn', 'type': 'User'}, {'comment_id': 458990889, 'comment_body': 'This is actually incorrect. The Bootstrap 4 grid system goes all the way up to col-12, not col-14.', 'comment_created': datetime.datetime(2020, 7, 22, 18, 17, 8, tzinfo=datetime.timezone.utc), 'commenter': 'tywrenn', 'type': 'User'}, {'comment_id': 459002580, 'comment_body': '```\r\n#### GET /api/allergy/:auuid\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 18, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459003238, 'comment_body': '```\r\n#### DELETE /api/patient/:puuid/allergy/:auuid\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 18, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459008806, 'comment_body': '```\r\n""DELETE /api/patient/:puuid/allergy/:uuid"" => function ($puuid, $uuid) {\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 18, 47, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459009054, 'comment_body': '```\r\nreturn (new AllergyIntoleranceRestController())->delete($puuid, $uuid);\r\n```', 'comment_created': datetime.datetime(2020, 7, 22, 18, 48, 17, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459011027, 'comment_body': ""need the list title:\r\n```\r\nINSERT INTO `list_options` ( `list_id`, `option_id`, `title`, `seq` ) VALUES ('lists' ,'allergyintolerance-verification', 'AllergyIntolerance Verification Status Codes', 1);\r\n```"", 'comment_created': datetime.datetime(2020, 7, 22, 18, 51, 27, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459051453, 'comment_body': '$isValidPatient :)', 'comment_created': datetime.datetime(2020, 7, 22, 20, 5, 29, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459053711, 'comment_body': ""general practice in classes is to use direct path so don't need to worry about if globals.php has been run\r\n```\r\nrequire_once(__DIR__  . '/../../custom/code_types.inc.php');\r\n```"", 'comment_created': datetime.datetime(2020, 7, 22, 20, 9, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 459071014, 'comment_body': 'Also, this should only show in the allergy UI (like the Reaction), however, it is showing in all other lists items UI (medication, medical problems, surgeries, etc.)', 'comment_created': datetime.datetime(2020, 7, 22, 20, 42, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '0fa8f0d49cbc42d1da693b9921379d64f64af5ac', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c1eeedd020f983d2241d796e833c977232841cbc', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '29a457136ff9f0abd2f4d930a792fd0718e0bc09', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2efd28700514dd52be55324fb8e10a4b1516d0c4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'da7d17037a5979751146e7137614e9a08e05e7f3', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '408059bd7e8e6c1f44dd39de18a9f0a93c330c39', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d83189aec870ae8ee96e0a0bcc78f422577a271', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9fc758efb642a6c556258faf5996fbc5fecdd6b2', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '20009ce39840683f3bdc2151b3fe098978fa45b5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4e4587406930a8d07c9fcfeeaa271f5f9aa6724c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8edd797891d37ddd259bb5a0e9de610d5c56596e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ca4d8fd7da1f06ae173fc1489f61df3aa51a204', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '15d576f2687637f5322776548e31ec8acd37c8f0', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6fe4e9d62cd05bff6f24f26f77e449c860c2b037', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30339c61a7b4c11abc70750f90db1acefa50d2c5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf68ff61fb198b2c0c6eda742930e5ab9682124c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5319e361befe9637c5eb57b5b2942d2512f2c24c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5528b03a5728fb35887211c5a08ade6741be33b4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6c8973f8388b56270f03c65784f268d38d413c65', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ed5e28dcd7798fe686168febadb1d3c20b2b99d4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '664e86c07541319daebff01559be1ff21aee1338', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2604157fe6ab5f089b83d55849c594765278a53d', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7c42be234996d5bdf9223d892d6e0f26698c89', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e8b1d3e2e4552312e40fc486aad5605633d00c3', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
452327726,Upgraded Condition Resource,"#### Short description of what this resolves:
Upgraded FHIR Condition Resource

#### Changes proposed in this pull request:

-
-
-",True,3763,https://api.github.com/repos/openemr/openemr/pulls/3763,https://github.com/openemr/openemr/pull/3763,closed,735,270,15,9,6,9,1,0,[{'name': 'Status: Needs Review'}],2020-07-19 04:28:12+00:00,2020-07-27 06:19:55+00:00,697903.0,"8 days, 1:51:43","[{'comment_id': 460502400, 'comment_body': ""note this didn't work well previously (it didn't work for edit ui of items), so instead leveraged the javascript method:\r\nhttps://github.com/openemr/openemr/commit/3e1e77b1b0e1f87d030a607713974e4d8c6aaa70\r\n\r\nAlso, the medical_problem should use it's own list, which will default to Confirmed"", 'comment_created': datetime.datetime(2020, 7, 26, 9, 18, 56, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 460502779, 'comment_body': 'it looks like you removed the addDiagnosis function below?', 'comment_created': datetime.datetime(2020, 7, 26, 9, 22, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 460502849, 'comment_body': 'disregard above comment, i see what you did (now in base class) :)', 'comment_created': datetime.datetime(2020, 7, 26, 9, 22, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 460503505, 'comment_body': 'Is this ProcedureService supposed to be here?', 'comment_created': datetime.datetime(2020, 7, 26, 9, 29, 19, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 460509421, 'comment_body': 'Oops It was WIP for Our Next Resource :sweat_smile: ', 'comment_created': datetime.datetime(2020, 7, 26, 10, 30, 37, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 460536020, 'comment_body': 'Did you mean Default in Database or Default in UI?', 'comment_created': datetime.datetime(2020, 7, 26, 14, 43, 17, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 460539555, 'comment_body': 'Also, this file will not be used in edit UI so will this change have any effect here?', 'comment_created': datetime.datetime(2020, 7, 26, 15, 17, 50, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 460555522, 'comment_body': 'Regarding default, meant in the UI.\r\n\r\nYou are correct that I was mistaken on this file (assumed it was the add edit script), so disregard that part of the comment :)', 'comment_created': datetime.datetime(2020, 7, 26, 17, 55, 42, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 460589526, 'comment_body': 'these changes also need to go into database.sql', 'comment_created': datetime.datetime(2020, 7, 26, 23, 53, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '837230b439413cb5e55e966da1d33727892e5034', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0c9dc6446b80293b3095e1cae56c28818222bda8', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4c51e3e82acf56e4beb7e51a8654dc4875265e1c', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd7f58766091b4c661568eda050cc81233ea00742', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0ba2b0cdb5021f327918240a8099c0c3a01b69da', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e9a54fb80f9680f494dd9048128e03bbb659bf73', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f9792d5f176670f7ad35222b7c059c390ed3a228', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1e5f08648ea4faf7976f3d51dc89520087c3964', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ae1e019a533d27c4856e515b46ed591e77fc5ce1', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
457976895,Updated Procedure Resource,"#### Short description of what this resolves:
Updated and Added some endpoints to Procedure Resource

#### Changes proposed in this pull request:

-
-
-",True,3784,https://api.github.com/repos/openemr/openemr/pulls/3784,https://github.com/openemr/openemr/pull/3784,closed,504,284,18,8,4,14,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-07-28 18:27:12+00:00,2020-08-02 20:57:32+00:00,441020.0,"5 days, 2:30:20","[{'comment_id': 462052250, 'comment_body': 'missing comma at end (this is what is breaking travis)', 'comment_created': datetime.datetime(2020, 7, 29, 5, 46, 24, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462052620, 'comment_body': 'looking forward to when this looks something like:\r\n```\r\n#IfUuidNeedUpdateId procedure_order procedure_order_id\r\n```\r\n:)', 'comment_created': datetime.datetime(2020, 7, 29, 5, 47, 39, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462053954, 'comment_body': 'Three cheers for the new UuidRegistry feature :)\r\n\r\n![2DV](https://user-images.githubusercontent.com/278968/88761778-ab3ab280-d124-11ea-8fda-57404fb21c35.gif)\r\n', 'comment_created': datetime.datetime(2020, 7, 29, 5, 51, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462054986, 'comment_body': 'also looks like gotta do for users (practitioners) and encounters', 'comment_created': datetime.datetime(2020, 7, 29, 5, 55, 10, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462209785, 'comment_body': 'Yay :)\r\n\r\n![minions](https://user-images.githubusercontent.com/47683556/88791318-29479980-d1b7-11ea-918a-b452c29919c2.gif)\r\n', 'comment_created': datetime.datetime(2020, 7, 29, 10, 49, 9, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 462218780, 'comment_body': 'Wait is Over. Pushed the fix :)', 'comment_created': datetime.datetime(2020, 7, 29, 11, 7, 44, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 462655620, 'comment_body': 'looks like there is already a fhir procedure api link', 'comment_created': datetime.datetime(2020, 7, 29, 23, 57, 14, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462655845, 'comment_body': 'same as above, already a link for this', 'comment_created': datetime.datetime(2020, 7, 29, 23, 58, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462656466, 'comment_body': '![2DV](https://user-images.githubusercontent.com/278968/88865495-eb4d7400-d1bc-11ea-8337-173bbef02d02.gif)\r\n', 'comment_created': datetime.datetime(2020, 7, 29, 23, 59, 55, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462657374, 'comment_body': 'to be safe would also make sure the column exists:\r\n```\r\nif (tableExists($matches[1]) && columnExists($matches[1], $matches[2]) && $uuidRegistry->tableNeedsUuidCreation()) {\r\n```', 'comment_created': datetime.datetime(2020, 7, 30, 0, 3, 1, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462658795, 'comment_body': 'to be consistent (since placing this stuff in constants), would also do:\r\n```\r\nprivate const PROCEDURE_TABLE_ID = ""procedure_order_id"";\r\n```\r\nand then use it below in the uuidRegistry call', 'comment_created': datetime.datetime(2020, 7, 30, 0, 7, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462659295, 'comment_body': 'lets make it three :)\r\n\r\n![tenor (38)](https://user-images.githubusercontent.com/278968/88866046-55b2e400-d1be-11ea-87d2-33ed82b5fdf4.gif)\r\n\r\n', 'comment_created': datetime.datetime(2020, 7, 30, 0, 9, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462659772, 'comment_body': 'patient; not encounter', 'comment_created': datetime.datetime(2020, 7, 30, 0, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 462660477, 'comment_body': ""it's uuid magic :)\r\n\r\nhttps://www.youtube.com/watch?v=ATY3-8PlCRw"", 'comment_created': datetime.datetime(2020, 7, 30, 0, 13, 49, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': 'e53aaca37fde9e93cbb9f44f3623d20243d22241', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4d50ab39c8f0a050d887666354c6c4f4b97da4dd', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '37ad93100aa32bd320928d534cc85bebdc04744f', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c044d5550fa2154c770ad58d38aceaad890621b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9709e73f34693f3edf30d4338cdbbf9519b4aa8f', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '459db4242a03edcdad22b5ce88a3d68c09478cf4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cbe407070825c5c1b8e939dc1227a1193a99d156', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4ddd23598c6d3d0272996251d5dc6626180df71f', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
459003284,Upgraded Medication Resource,"#### Short description of what this resolves:
Added New Drug Endpoint and Upgraded Existing FHIRMedication Resource

#### Changes proposed in this pull request:

-
-
-",True,3790,https://api.github.com/repos/openemr/openemr/pulls/3790,https://github.com/openemr/openemr/pull/3790,closed,413,149,12,7,1,0,1,0,[{'name': 'Status: Needs Work'}],2020-07-30 09:15:03+00:00,2020-08-05 02:54:02+00:00,495539.0,"5 days, 17:38:59",[],"[{'commit_sha': '7bf7bc2022992fd6e5fc35159b0476dfc3cf6997', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c997351fdc04f5bbc2c22b0edd583d64045a2309', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ab307c45d3575b418d0b971cd6681a1c033c0428', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2a23d5a3088bb458ab161e26544df5443aa59c05', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'af73805648b943b3953d8ac18f78adda2d48ff7d', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4bdefe3aa72e20bba5fb045fc39fa95f8b71535', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '82acbaad0f85a2759bbcecfa643f545e0466ba26', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
463793087,Added Endpoints for Prescription/MedicationRequest Resource,"<!--
(Thanks for sending a pull request!
-->

<!-- Add the issue number that is fixed by this PR (In the form Fixes #123) -->
Fixes #

#### Short description of what this resolves:


#### Changes proposed in this pull request:

- Added Prescription Endpoints
- Added MedicationRequest Endpoints
- Changed Drug Code to support only RXCUI Code",True,3821,https://api.github.com/repos/openemr/openemr/pulls/3821,https://github.com/openemr/openemr/pull/3821,closed,619,336,17,11,6,3,1,0,[{'name': 'Status: Needs Review'}],2020-08-06 05:32:54+00:00,2020-08-16 06:56:36+00:00,869022.0,"10 days, 1:23:42","[{'comment_id': 466161203, 'comment_body': 'mispell DEFAULT', 'comment_created': datetime.datetime(2020, 8, 6, 5, 50, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 466161242, 'comment_body': 'mispell DEFAULT', 'comment_created': datetime.datetime(2020, 8, 6, 5, 50, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 466829775, 'comment_body': ""Pretty sure all the potential uuid's in here need to be populated in __contruct , correct?"", 'comment_created': datetime.datetime(2020, 8, 7, 5, 32, 44, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '85a35a6418d8f0df0d791b9479cea4af3170d9ba', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4dbab65ac547559c25287b772490371c6370b353', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'feab62a84b69cf2e6bdbd9a8ca2d1424c5d21f36', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e87698ee1b4ed09e48f5d76891297909e9121f8', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93979f1f923c355ce23a97dd1d31471ddfe51de2', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2bf8ad23b5eb74e2be225fd7609b216c889f2b56', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ea88f6ae63c995cfb30c9a4a93d3e29cd542cc5b', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '30cc7210f00aa3ab4235e397a8ea71db216b04c7', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b86e2614ed73d35bc5983adeec9c2eb526615df7', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a8a818ece9197b5fcecd27fd867187e29b6412e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a305d49aecfdd5b4523ef39988b82fdda9e62543', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
465022846,All New FHIR Location Resource ,"#### Short description of what this resolves:
Added new endpoints for location resource

#### Changes proposed in this pull request:

-
-
-",True,3829,https://api.github.com/repos/openemr/openemr/pulls/3829,https://github.com/openemr/openemr/pull/3829,closed,429,0,6,6,2,2,1,0,[{'name': 'Status: Needs Review'}],2020-08-08 11:48:41+00:00,2020-08-14 07:52:28+00:00,504227.0,"5 days, 20:03:47","[{'comment_id': 470416803, 'comment_body': ""Is this validating the correct table(s). Aren't the uuid's that you are searching with stored in the uuid_mapping table?"", 'comment_created': datetime.datetime(2020, 8, 14, 5, 25, 17, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 470441822, 'comment_body': ""Yup, Also we don't need this Multiple Id function now :)"", 'comment_created': datetime.datetime(2020, 8, 14, 6, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}]","[{'commit_sha': 'aef3b2ffcc7a00c7ee92aad4e33b4e9b65604060', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ebfa2c52e915ba485e5175c13b5f9f100d93160e', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '67298c57803832128ce9d0850d4929fbb226c18d', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9b8dc22d1fa8187a241f838e204d13880a040481', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b6d8abe6c5b7937c6e1b06beb7df8f9ce3f59121', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a7f324e96ef95e925dd181c0646504fe6572ecd0', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
470143232,Observation Lab [US Core Profile],"#### Short description of what this resolves:
Upgraded FHIR Observation Resource

#### Changes proposed in this pull request:

-
-
-",True,3867,https://api.github.com/repos/openemr/openemr/pulls/3867,https://github.com/openemr/openemr/pull/3867,closed,292,442,8,5,3,0,1,0,[{'name': 'Status: Needs Review'}],2020-08-19 12:50:28+00:00,2020-08-20 06:03:56+00:00,62008.0,17:13:28,[],"[{'commit_sha': 'e92f2373a4d097a562f3b8f2ca7d099c80b93f26', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8a64ec3cbda960ca90db1eba48ce43c460becedc', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03aafa2f3a239c9ec3010c32d7445ca34d1006d4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dcbb6ee35ea7edbc58f161c14a1404ec4b69eeea', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a54d5a062ed309b63bd7fc0ba5e0ae1e339cfc44', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189
473197613,Added CareTeam Resource,"#### Short description of what this resolves:
Added Support to CareTeam Resource as per US core Profile

#### Changes proposed in this pull request:

-
-
-",True,3884,https://api.github.com/repos/openemr/openemr/pulls/3884,https://github.com/openemr/openemr/pull/3884,closed,541,33,23,11,8,37,2,0,"[{'name': 'Status: Needs Review'}, {'name': 'Status: Needs Work'}]",2020-08-25 13:16:50+00:00,2020-09-09 03:14:31+00:00,1259861.0,"14 days, 13:57:41","[{'comment_id': 478097761, 'comment_body': 'before dropping the column, should do a query to copy data over from care_team to care_team_provider', 'comment_created': datetime.datetime(2020, 8, 27, 4, 28, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478098669, 'comment_body': 'and would then place this block before the prior code block', 'comment_created': datetime.datetime(2020, 8, 27, 4, 29, 8, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478099935, 'comment_body': 'Would do a query outside a if block that simply changes care_team field_id to care_team_provider', 'comment_created': datetime.datetime(2020, 8, 27, 4, 30, 28, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478104286, 'comment_body': 'actually, see below post for a better plan', 'comment_created': datetime.datetime(2020, 8, 27, 4, 35, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478105972, 'comment_body': 'ok if skip a seq so no need for above 2 code blocks. In this if would do following:\r\n1. change care_team field_id to care_team_provider\r\n2. find the highest seq in the group_id that the care_team_provider field_id is in (also get the group_id)\r\n3. Then change the seq in care_team_provider to this max seq + 1\r\n4. Then add the care_team_facility entry with max seq + 2 and with the group_id obtained in step 2', 'comment_created': datetime.datetime(2020, 8, 27, 4, 37, 52, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478107280, 'comment_body': ""Doing above allows addition of new fields even if their group_id's have been changed with customization"", 'comment_created': datetime.datetime(2020, 8, 27, 4, 39, 57, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478107954, 'comment_body': 'will need the uuidMapping fix that discussed on call for this to work', 'comment_created': datetime.datetime(2020, 8, 27, 4, 41, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478109158, 'comment_body': 'Also note that the care_team_provider and care_team_facility will need to support multiselect (likely means need new datatypes that adapted from 11 and 35)', 'comment_created': datetime.datetime(2020, 8, 27, 4, 42, 51, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478160826, 'comment_body': 'So It should be like \r\n1. create care_team_provider \r\n2. copy care_team data to care_team_provider\r\n3. drop care_team\r\n\r\nRIGHT?', 'comment_created': datetime.datetime(2020, 8, 27, 6, 3, 48, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 478162603, 'comment_body': 'Did you mean user should able to select multiple providers?', 'comment_created': datetime.datetime(2020, 8, 27, 6, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 478162906, 'comment_body': 'Yup Will push it asap :)', 'comment_created': datetime.datetime(2020, 8, 27, 6, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 478169564, 'comment_body': 'yep, that is good', 'comment_created': datetime.datetime(2020, 8, 27, 6, 16, 15, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 478171185, 'comment_body': 'yep, for the care team provider and care team facility, should be able to add multiple selections. can see how this is done for the multiselect list datatype which basically just extended the normal select list datatype.', 'comment_created': datetime.datetime(2020, 8, 27, 6, 18, 30, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 479650121, 'comment_body': 'Do we need to create new datatype for multi-select and how will we store multiple id in one field?', 'comment_created': datetime.datetime(2020, 8, 29, 13, 31, 2, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 479727854, 'comment_body': 'Would make them TEXT columns in database and can check out data_type 36 to see how it stores and collects the items from one field in library/options.inc.php', 'comment_created': datetime.datetime(2020, 8, 30, 6, 19, 37, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 479737939, 'comment_body': 'but data_type 36 accepts data from `list_options` only and we require data from `facility`  & `users` table :thinking: ', 'comment_created': datetime.datetime(2020, 8, 30, 8, 10, 52, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 479738099, 'comment_body': 'Should I make a util function which gets array of data and converts it into Multiple-Select list and Simple Select List?', 'comment_created': datetime.datetime(2020, 8, 30, 8, 12, 39, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 479872120, 'comment_body': ""if compare the difference between data_type 36 and 1, then will note:\r\n1. having `multiple='multiple'` in the select\r\n2. take the posted select array and convert it to a string with `|` delimiter\r\n3. store the elements in the database field with the `|` delimiter\r\n\r\nSo, basically need to duplicate the 11 and 25 date_type into new data_types that support 1 - 3 above"", 'comment_created': datetime.datetime(2020, 8, 31, 3, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482707560, 'comment_body': 'remove xl_list_label() call', 'comment_created': datetime.datetime(2020, 9, 3, 5, 9, 53, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482707710, 'comment_body': 'remove xl_list_label() call', 'comment_created': datetime.datetime(2020, 9, 3, 5, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482707730, 'comment_body': 'remove xl_list_label() call', 'comment_created': datetime.datetime(2020, 9, 3, 5, 10, 23, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482707893, 'comment_body': 'remove xl_list_label() call', 'comment_created': datetime.datetime(2020, 9, 3, 5, 10, 59, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482707921, 'comment_body': 'remove xl_list_label() call', 'comment_created': datetime.datetime(2020, 9, 3, 5, 11, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482708636, 'comment_body': ""upgrade not working. getting following error:\r\n```\r\nUPDATE `layout_options` SET field_id='care_team_provider', seq=`22`, group_id=`3`, title='Care Team (Facility)', data_type=`11` WHERE form_id='DEM' AND field_id='care_team'<br />\r\n<h2><font color='red'>Query Error</font></h2><p><font color='red'>ERROR:</font> query failed: UPDATE `layout_options` SET field_id='care_team_provider', seq=`22`, group_id=`3`, title='Care Team (Facility)', data_type=`11` WHERE form_id='DEM' AND field_id='care_team'</p><p>Error: <font color='red'>Unknown column '22' in 'field list'</font></p><br />/var/www/localhost/htdocs/openemr/library/sql_upgrade_fx.php at 1097:sqlStatement<br />/var/www/localhost/htdocs/openemr/sql_upgrade_temp.php at 118:upgradeFromSqlFile(5_0_2-to-6_0_0_upgrade.sql)SQL Error with statement:query failed: UPDATE `layout_options` SET field_id=&#039;care_team_provider&#039;, seq=`22`, group_id=`3`, title=&#039;Care Team (Facility)&#039;, data_type=`11` WHERE form_id=&#039;DEM&#039; AND field_id=&#039;care_team&#039;--Unknown column &#039;22&#039; in &#039;field list&#039;==&gt;/var/www/localhost/htdocs/openemr/library/sql_upgrade_fx.php at 1097:sqlStatement\r\n```"", 'comment_created': datetime.datetime(2020, 9, 3, 5, 14, 5, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482709229, 'comment_body': 'need to use the new datatypes in the above 2 new entries', 'comment_created': datetime.datetime(2020, 9, 3, 5, 16, 13, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482709536, 'comment_body': 'above should be:\r\n```\r\n  `care_team_provider` TEXT,\r\n  `care_team_facility` TEXT,\r\n```', 'comment_created': datetime.datetime(2020, 9, 3, 5, 17, 16, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482710103, 'comment_body': ""should use binding and a parenthesis to help make logic clear (since this is a tough to follow query logic-wise):\r\n```\r\nWHERE ((`uuid_mapping`.`uuid` IS NULL OR `uuid_mapping`.`uuid` = '' OR `uuid_mapping`.`uuid` = '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0') AND `uuid_mapping`.`resource` != ?)\r\n```"", 'comment_created': datetime.datetime(2020, 9, 3, 5, 19, 34, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482710557, 'comment_body': 'binding:\r\n```\r\n, [$resource]\r\n```', 'comment_created': datetime.datetime(2020, 9, 3, 5, 21, 4, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 482711113, 'comment_body': 'will the logic here be more complicated now that there are multiple providers or facilities stored in a field?', 'comment_created': datetime.datetime(2020, 9, 3, 5, 23, 15, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 483159479, 'comment_body': 'Agreed :+1: \r\n\r\nThanks', 'comment_created': datetime.datetime(2020, 9, 3, 18, 0, 24, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 483197402, 'comment_body': ""Yea, I didn't test APIs after the latest change so couldn't be caught this one. Will update the logic tomorrow :+1: \r\n\r\nThanks :)"", 'comment_created': datetime.datetime(2020, 9, 3, 19, 10, 1, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 484113115, 'comment_body': 'change int(11) to text', 'comment_created': datetime.datetime(2020, 9, 6, 20, 56, 15, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 484113733, 'comment_body': 'looks like not using this and instead using $uuidMapping', 'comment_created': datetime.datetime(2020, 9, 6, 21, 3, 31, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 484115345, 'comment_body': ""In this case, we need to collect the current seq id in the group this lies in (since these fields are very customizable), and then add 1 to it. Should look something like this:\r\n(note the backup_group_name error is to avoid the odd situation where the user has deleted care_team entry so it does not break the sql upgrade script)\r\n```\r\nSET @group_name = (SELECT group_name FROM layout_options WHERE field_id='care_team' AND form_id='DEM');\r\nSET @backup_group_name = (SELECT group_name FROM layout_options WHERE field_id='DOB' AND form_id='DEM');\r\nSET @seq = (SELECT MAX(seq) FROM layout_options WHERE group_name = IFNULL(@group_name,@backup_group_name) AND form_id='DEM');\r\nUPDATE `layout_options` SET field_id='care_team_provider', group_name=IFNULL(@group_name,@backup_group_name), seq=@seq+1, title='Care Team (Provider)', data_type=45 WHERE form_id='DEM' AND field_id='care_team';\r\n```"", 'comment_created': datetime.datetime(2020, 9, 6, 21, 22, 47, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 484116095, 'comment_body': ""per above, need to be more flexible, and above should look something like:\r\n```\r\nSET @group_name = (SELECT group_name FROM layout_options WHERE field_id='care_team_provider' AND form_id='DEM');\r\nSET @backup_group_name = (SELECT group_name FROM layout_options WHERE field_id='DOB' AND form_id='DEM');\r\nSET @seq = (SELECT MAX(seq) FROM layout_options WHERE group_name = IFNULL(@group_name,@backup_group_name) AND form_id='DEM');\r\nINSERT INTO `layout_options` (`form_id`,`field_id`,`group_id`,`title`,`seq`,`data_type`,`uor`,`fld_length`,`max_length`,`list_id`,`titlecols`,`datacols`,`default_value`,`edit_options`,`description`,`fld_rows`) VALUES ('DEM', 'care_team_facility', IFNULL(@group_name,@backup_group_name), 'Care Team (Facility)', @seq+1, 44, 1, 0, 0, '', 1, 1, '', '', '', 0);\r\n```"", 'comment_created': datetime.datetime(2020, 9, 6, 21, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}, {'comment_id': 485096300, 'comment_body': ""Thanks for sharing. Didn't know those capablities of sql."", 'comment_created': datetime.datetime(2020, 9, 8, 17, 51, 49, tzinfo=datetime.timezone.utc), 'commenter': 'yashrajbothra', 'type': 'User'}, {'comment_id': 485172153, 'comment_body': ""TODO for me:\r\nI think i may of given you some outdated logic (group_name instead of group_id in places). If i did, I'll fix that when I test it and bring it in."", 'comment_created': datetime.datetime(2020, 9, 8, 20, 17, 11, tzinfo=datetime.timezone.utc), 'commenter': 'bradymiller', 'type': 'User'}]","[{'commit_sha': '7d2a192a8d0926cbdfa0471dce74e4493d7dd0cd', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dc043ef1740d7ea29df3220b53eb35a0630aafb2', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a1fe637967fbd374867d18242e70b1f5d2729fb5', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bbe0653773069c52ae875d436042eea0038b3a4', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4b9ec4ca6d2dadccf5b333c63383d45fbb4ade34', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '766589b10579f3128c9a2f9b0304d8bb67034e11', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e898d20460a88141cab33ec9dd95083375f243cd', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '36fb7523102202dbcb5397004e54ecffcc6aa117', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '93fc00153e9838184c24b689620362880688e60f', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f94e9a824fd9cdf46b4a01c4c91b24d05b3b959', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5b11149f2c298a5f8b2a9f61e2e4292796dfbccc', 'committer_username': 'yashrajbothra', 'committer_name': 'Yash Raj Bothra', 'committer_email': None, 'commit_date': datetime.datetime(2019, 2, 16, 5, 7, 49, tzinfo=datetime.timezone.utc)}]",Yash Raj Bothra,47683556,,User,,28,,35,189

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
679584,openemr,openemr/openemr,PHP,2095,3048,136,287,10110,329,40,75,"[{'id': 473197613, 'number': 3884, 'closed': datetime.datetime(2020, 9, 9, 3, 14, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 13, 16, 50, tzinfo=datetime.timezone.utc), 'time_taken': 1259861.0, 'time_delta': '14 days, 13:57:41', 'additions': 541, 'deletions': 33, 'state': 'closed'}, {'id': 470143232, 'number': 3867, 'closed': datetime.datetime(2020, 8, 20, 6, 3, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 19, 12, 50, 28, tzinfo=datetime.timezone.utc), 'time_taken': 62008.0, 'time_delta': '17:13:28', 'additions': 292, 'deletions': 442, 'state': 'closed'}, {'id': 465022846, 'number': 3829, 'closed': datetime.datetime(2020, 8, 14, 7, 52, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 11, 48, 41, tzinfo=datetime.timezone.utc), 'time_taken': 504227.0, 'time_delta': '5 days, 20:03:47', 'additions': 429, 'deletions': 0, 'state': 'closed'}, {'id': 463793087, 'number': 3821, 'closed': datetime.datetime(2020, 8, 16, 6, 56, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 5, 32, 54, tzinfo=datetime.timezone.utc), 'time_taken': 869022.0, 'time_delta': '10 days, 1:23:42', 'additions': 619, 'deletions': 336, 'state': 'closed'}, {'id': 459003284, 'number': 3790, 'closed': datetime.datetime(2020, 8, 5, 2, 54, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 30, 9, 15, 3, tzinfo=datetime.timezone.utc), 'time_taken': 495539.0, 'time_delta': '5 days, 17:38:59', 'additions': 413, 'deletions': 149, 'state': 'closed'}, {'id': 457976895, 'number': 3784, 'closed': datetime.datetime(2020, 8, 2, 20, 57, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 28, 18, 27, 12, tzinfo=datetime.timezone.utc), 'time_taken': 441020.0, 'time_delta': '5 days, 2:30:20', 'additions': 504, 'deletions': 284, 'state': 'closed'}, {'id': 452327726, 'number': 3763, 'closed': datetime.datetime(2020, 7, 27, 6, 19, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 19, 4, 28, 12, tzinfo=datetime.timezone.utc), 'time_taken': 697903.0, 'time_delta': '8 days, 1:51:43', 'additions': 735, 'deletions': 270, 'state': 'closed'}, {'id': 449377478, 'number': 3749, 'closed': datetime.datetime(2021, 1, 22, 6, 39, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 15, 10, 0, 30, tzinfo=datetime.timezone.utc), 'time_taken': 16490319.0, 'time_delta': '190 days, 20:38:39', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 447853151, 'number': 3736, 'closed': datetime.datetime(2020, 7, 24, 6, 29, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 5, 23, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1040764.0, 'time_delta': '12 days, 1:06:04', 'additions': 1333, 'deletions': 865, 'state': 'closed'}, {'id': 446646522, 'number': 3729, 'closed': datetime.datetime(2020, 7, 12, 4, 41, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 9, 6, 27, 52, tzinfo=datetime.timezone.utc), 'time_taken': 252838.0, 'time_delta': '2 days, 22:13:58', 'additions': 641, 'deletions': 258, 'state': 'closed'}, {'id': 443960549, 'number': 3713, 'closed': datetime.datetime(2020, 7, 9, 8, 19, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 9, 39, 29, tzinfo=datetime.timezone.utc), 'time_taken': 513601.0, 'time_delta': '5 days, 22:40:01', 'additions': 31, 'deletions': 60, 'state': 'closed'}, {'id': 443744764, 'number': 3709, 'closed': datetime.datetime(2020, 7, 3, 8, 17, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 21, 14, 25, tzinfo=datetime.timezone.utc), 'time_taken': 39777.0, 'time_delta': '11:02:57', 'additions': 456, 'deletions': 0, 'state': 'closed'}, {'id': 441565945, 'number': 3696, 'closed': datetime.datetime(2020, 6, 30, 4, 55, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 18, 0, tzinfo=datetime.timezone.utc), 'time_taken': 39329.0, 'time_delta': '10:55:29', 'additions': 6, 'deletions': 6, 'state': 'closed'}, {'id': 440254065, 'number': 3680, 'closed': datetime.datetime(2020, 7, 2, 7, 59, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 25, 20, 58, 21, tzinfo=datetime.timezone.utc), 'time_taken': 558051.0, 'time_delta': '6 days, 11:00:51', 'additions': 2337, 'deletions': 64, 'state': 'closed'}, {'id': 437288048, 'number': 3662, 'closed': datetime.datetime(2020, 6, 27, 20, 24, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 19, 20, 42, 20, tzinfo=datetime.timezone.utc), 'time_taken': 690114.0, 'time_delta': '7 days, 23:41:54', 'additions': 1886, 'deletions': 187, 'state': 'closed'}, {'id': 435982477, 'number': 3652, 'closed': datetime.datetime(2020, 6, 20, 0, 43, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 17, 17, 4, 35, tzinfo=datetime.timezone.utc), 'time_taken': 200328.0, 'time_delta': '2 days, 7:38:48', 'additions': 2482, 'deletions': 173, 'state': 'closed'}, {'id': 433985833, 'number': 3628, 'closed': datetime.datetime(2020, 6, 14, 0, 20, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 13, 9, 55, 7, tzinfo=datetime.timezone.utc), 'time_taken': 51922.0, 'time_delta': '14:25:22', 'additions': 13, 'deletions': 1, 'state': 'closed'}, {'id': 416685289, 'number': 3506, 'closed': datetime.datetime(2020, 6, 13, 2, 42, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 12, 12, 13, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2730565.0, 'time_delta': '31 days, 14:29:25', 'additions': 1322, 'deletions': 414, 'state': 'closed'}, {'id': 412416206, 'number': 3467, 'closed': datetime.datetime(2020, 5, 2, 17, 43, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 2, 8, 8, 22, tzinfo=datetime.timezone.utc), 'time_taken': 34487.0, 'time_delta': '9:34:47', 'additions': 12, 'deletions': 0, 'state': 'closed'}, {'id': 410119194, 'number': 3441, 'closed': datetime.datetime(2020, 4, 28, 16, 13, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 28, 13, 28, 24, tzinfo=datetime.timezone.utc), 'time_taken': 9907.0, 'time_delta': '2:45:07', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 406860373, 'number': 3406, 'closed': datetime.datetime(2020, 5, 24, 12, 5, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 21, 19, 25, tzinfo=datetime.timezone.utc), 'time_taken': 2824828.0, 'time_delta': '32 days, 16:40:28', 'additions': 18, 'deletions': 7, 'state': 'closed'}, {'id': 402371060, 'number': 3368, 'closed': datetime.datetime(2020, 4, 19, 19, 25, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 12, 17, 21, 18, tzinfo=datetime.timezone.utc), 'time_taken': 612244.0, 'time_delta': '7 days, 2:04:04', 'additions': 546, 'deletions': 0, 'state': 'closed'}, {'id': 397221700, 'number': 3306, 'closed': datetime.datetime(2020, 4, 9, 20, 43, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 1, 20, 41, 13, tzinfo=datetime.timezone.utc), 'time_taken': 691325.0, 'time_delta': '8 days, 0:02:05', 'additions': 127, 'deletions': 69, 'state': 'closed'}, {'id': 396393244, 'number': 3298, 'closed': datetime.datetime(2020, 4, 1, 12, 27, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 31, 14, 57, 4, tzinfo=datetime.timezone.utc), 'time_taken': 77403.0, 'time_delta': '21:30:03', 'additions': 335, 'deletions': 244, 'state': 'closed'}, {'id': 394787919, 'number': 3252, 'closed': datetime.datetime(2020, 3, 28, 19, 38, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 27, 14, 31, 40, tzinfo=datetime.timezone.utc), 'time_taken': 104802.0, 'time_delta': '1 day, 5:06:42', 'additions': 99, 'deletions': 27, 'state': 'closed'}, {'id': 393644358, 'number': 3244, 'closed': datetime.datetime(2020, 3, 25, 15, 33, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 25, 15, 7, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1562.0, 'time_delta': '0:26:02', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 391706517, 'number': 3198, 'closed': datetime.datetime(2020, 3, 22, 6, 24, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 20, 19, 31, 55, tzinfo=datetime.timezone.utc), 'time_taken': 125547.0, 'time_delta': '1 day, 10:52:27', 'additions': 32, 'deletions': 2, 'state': 'closed'}, {'id': 390664304, 'number': 3185, 'closed': datetime.datetime(2020, 4, 22, 1, 44, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 21, 6, 40, tzinfo=datetime.timezone.utc), 'time_taken': 2954284.0, 'time_delta': '34 days, 4:38:04', 'additions': 42, 'deletions': 4, 'state': 'closed'}, {'id': 390628307, 'number': 3184, 'closed': datetime.datetime(2020, 3, 19, 2, 45, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 19, 40, 5, tzinfo=datetime.timezone.utc), 'time_taken': 25524.0, 'time_delta': '7:05:24', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 390620743, 'number': 3183, 'closed': datetime.datetime(2020, 3, 29, 7, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 19, 22, tzinfo=datetime.timezone.utc), 'time_taken': 908580.0, 'time_delta': '10 days, 12:23:00', 'additions': 12, 'deletions': 11, 'state': 'closed'}, {'id': 390617396, 'number': 3182, 'closed': datetime.datetime(2020, 3, 18, 19, 19, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 19, 14, 5, tzinfo=datetime.timezone.utc), 'time_taken': 312.0, 'time_delta': '0:05:12', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 390219202, 'number': 3180, 'closed': datetime.datetime(2020, 4, 8, 17, 18, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 18, 5, 4, 12, tzinfo=datetime.timezone.utc), 'time_taken': 1858485.0, 'time_delta': '21 days, 12:14:45', 'additions': 64, 'deletions': 12, 'state': 'closed'}, {'id': 385795245, 'number': 3132, 'closed': datetime.datetime(2020, 3, 11, 6, 36, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 9, 20, 14, 11, tzinfo=datetime.timezone.utc), 'time_taken': 123728.0, 'time_delta': '1 day, 10:22:08', 'additions': 2, 'deletions': 1, 'state': 'closed'}, {'id': 385276768, 'number': 3123, 'closed': datetime.datetime(2020, 9, 20, 9, 49, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 8, 15, 4, 16, tzinfo=datetime.timezone.utc), 'time_taken': 16915508.0, 'time_delta': '195 days, 18:45:08', 'additions': 9, 'deletions': 20, 'state': 'closed'}, {'id': 385043950, 'number': 3098, 'closed': datetime.datetime(2020, 3, 7, 4, 51, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 6, 22, 10, 53, tzinfo=datetime.timezone.utc), 'time_taken': 24051.0, 'time_delta': '6:40:51', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 385004528, 'number': 3096, 'closed': datetime.datetime(2020, 3, 7, 4, 43, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 6, 20, 20, 7, tzinfo=datetime.timezone.utc), 'time_taken': 30202.0, 'time_delta': '8:23:22', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 384981496, 'number': 3094, 'closed': datetime.datetime(2020, 3, 6, 20, 6, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 6, 19, 23, 4, tzinfo=datetime.timezone.utc), 'time_taken': 2581.0, 'time_delta': '0:43:01', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 384142079, 'number': 3079, 'closed': datetime.datetime(2020, 3, 14, 14, 9, 29, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 3, 5, 8, 48, 52, tzinfo=datetime.timezone.utc), 'time_taken': 796837.0, 'time_delta': '9 days, 5:20:37', 'additions': 43, 'deletions': 14, 'state': 'closed'}]"
