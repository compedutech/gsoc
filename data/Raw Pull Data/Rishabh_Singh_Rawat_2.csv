pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
420604431,Topic dashboard ui,"Created UI or the topic Dashboard, added Category to topics and TopicSummary, added pagination and filters. I have not worked on skills dashboard in this PR. Also, added a One-Off job for handling topics on production server.

![createTOpic](https://user-images.githubusercontent.com/30312043/82425975-dfe71980-9aa4-11ea-9f07-84255965ab06.png)
![Untitled](https://user-images.githubusercontent.com/30312043/82425980-e4133700-9aa4-11ea-98d2-0cb5a0f1cea0.png)

karma coverage: 
![image](https://user-images.githubusercontent.com/30312043/82830559-b29ad100-9ed3-11ea-9698-8f85b008587d.png)
![image](https://user-images.githubusercontent.com/30312043/82830610-dfe77f00-9ed3-11ea-916d-5723d7c16653.png)
![image](https://user-images.githubusercontent.com/30312043/82830619-e4ac3300-9ed3-11ea-9d4b-9f09e7fd0c0b.png)

This is how it looks when I switch the server from develop to this branch, when the topic was created in the develop branch(Nothing's breaking), so to update the existing topic, I'll need to just add the category dropdown in the topic editor and update the patch API, which i plan to do in the next PR.
![image](https://user-images.githubusercontent.com/30312043/82831187-5933a180-9ed5-11ea-9f1b-09754b0a38dc.png)

## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [X] The linter/Karma presubmit checks have passed locally on your machine.
- [X] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [X] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9333,https://api.github.com/repos/oppia/oppia/pulls/9333,https://github.com/oppia/oppia/pull/9333,closed,2372,471,52,73,40,292,0,4,[],2020-05-20 08:50:27+00:00,2020-06-08 13:47:48+00:00,1659441.0,"19 days, 4:57:21","[{'comment_id': 428386921, 'comment_body': 'Why not reuse (but update) the existing create_default_topic method?', 'comment_created': datetime.datetime(2020, 5, 21, 0, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428392779, 'comment_body': 'Is it supposed to be one of a predefined set of strings? If so, that needs to be validated, too.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396516, 'comment_body': 'Docstring seems wrong -- ""exploration""?\r\n\r\nAlso, what is your plan for updating existing topics in prod?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396556, 'comment_body': 'Why ""2""? That\'s not a suitable name because it doesn\'t convey meaning...', 'comment_created': datetime.datetime(2020, 5, 21, 1, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396653, 'comment_body': 'What does it mean for an ""id to have loaded""?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 29, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396793, 'comment_body': ""Make a domain object, don't do this. We are trying to discourage creation of raw/arbitrary dict blobs in the codebase because they are too easy to modify unintentionally."", 'comment_created': datetime.datetime(2020, 5, 21, 1, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397049, 'comment_body': 'This should be part of a domain object function for the topicObject (which should be renamed if its fields are not the same as that of a Topic).', 'comment_created': datetime.datetime(2020, 5, 21, 1, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397331, 'comment_body': 'Use a domain object throughout, and call it the name of the domain object. For example, if it is a Topic domain object, then have the variable name be ""topic"". If it\'s something else, change the variable name accordingly. We typically do not add the ""Object"" suffix to variable names.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397525, 'comment_body': 'Pass domain objects around, never pass dicts.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397611, 'comment_body': 'Every argument needs a typedef (here and elsewhere).\r\n\r\nAlso, the previous pattern in the code was good. Either have a domain object or split the variables out into separate args.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397853, 'comment_body': 'I have no idea what ""E"" is, perhaps you could pick a clearer name. Ditto below.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398267, 'comment_body': 'Try and convert the response into a domain object or separate args within the backend API service, and only then pass it to the controller layer.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398410, 'comment_body': 'e is not a good variable name. Please pick something clearer.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398601, 'comment_body': 'totalCount is not a good variable name -- totalCount of what? Also, how does this differ from totalTopicSummaries?\r\n\r\nPlease pick clear variable names, and put effort into making the variable names as clear as possible. This is very important for future maintainability.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398787, 'comment_body': ""Same thing about variable names. I'm going to stop reviewing this file until you've done a full pass and fixed all these issues."", 'comment_created': datetime.datetime(2020, 5, 21, 1, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398849, 'comment_body': 'Also, function names should start with verbs.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399176, 'comment_body': 'What\'s the point of the ""1""?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399335, 'comment_body': 'No raw dicts. Use a domain object or separate args.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399460, 'comment_body': 'Function names should start with verbs.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399509, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399588, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399827, 'comment_body': 'The variable name makes it sound like this represents a ""page"". Please update it so that it specifies what this actually represents (e.g. TAB_NAME_UNTRIAGED_SKILLS is a better name than UNTRIAGED_SKILLS).', 'comment_created': datetime.datetime(2020, 5, 21, 1, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399977, 'comment_body': 'If initDashboard is not being accessed ""from outside"" then do not bind it to ctrl. Use ctrl only for things which need to be accessible to the corresponding template.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400198, 'comment_body': 'No passing dicts around.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400260, 'comment_body': 'Add JSDoc with typeinfo and description of each arg. Try to do this for all new functions you add.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400451, 'comment_body': 'Break and throw error after this so that we can catch cases where ""sort"" is incorrect.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400698, 'comment_body': 'No calling private methods from outside the file. See [frontend test guidelines](https://github.com/oppia/oppia/wiki/Frontend-unit-tests-guide#good-practices). /cc @marianazangrossi for info', 'comment_created': datetime.datetime(2020, 5, 21, 1, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401249, 'comment_body': 'The test does not seem to be testing what you are stating here. It appears to test whether a modal has been opened. Please make sure the descriptions match the tests exactly. /cc @marianazangrossi for info.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401534, 'comment_body': '""serial number"" is not descriptive, and neither is ""index"".  Please choose clearer names if possible and also write JSDoc for each function you add.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401712, 'comment_body': 'The test seems to be testing more than what is stated in the description. Have the description actually match the test in question. You can split this test into two separate ones, if you like.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428402022, 'comment_body': 'Each action should cause the ""before"" and ""after"" assertion to change, otherwise it is not clear that anything happened or that the functionality is working correctly. Please set the test up so that there is a meaningful difference between the before/after assertions.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428402105, 'comment_body': 'Never leave commented code in a PR. Please proofread your PR before sending for review.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428422253, 'comment_body': 'Would this be okay? Or should I make them as required parameters and refractor everywhere? \r\n![image](https://user-images.githubusercontent.com/30312043/82519370-21c49e00-9b3f-11ea-9ad5-6155641bee81.png)\r\n', 'comment_created': datetime.datetime(2020, 5, 21, 3, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 428422798, 'comment_body': ""Last time when I created a PR for adding description, we had a discussion that it's just 1 or 2 topics in the production right now and hence no job would be required. Have they increased recently? If yes, then I can write a One-off job for that."", 'comment_created': datetime.datetime(2020, 5, 21, 3, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 428464651, 'comment_body': 'I think making it required is probably safer.', 'comment_created': datetime.datetime(2020, 5, 21, 6, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428465038, 'comment_body': ""There's only 1 topic but we still need a way to handle that, right?\r\n\r\nI'm not sure if you need a one-off job since this is a topic property. Just make sure there is some kind of upgrade pathway. I am fine with upgrading manually. But you should basically checkout develop, make a topic, switch to your branch (while keeping the dev server running) and ensure that the topic still loads without errors and that it's possible to change its description."", 'comment_created': datetime.datetime(2020, 5, 21, 6, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429821905, 'comment_body': 'Sorry, fixed!', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429821998, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822044, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822164, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822234, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822306, 'comment_body': 'Not needed, removed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822377, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822428, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822449, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822514, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822546, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822732, 'comment_body': 'Not needed anymore, fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822837, 'comment_body': 'Fixed the docstring. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822896, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822957, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823076, 'comment_body': 'Updated them. Done', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823133, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823165, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823245, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823305, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823414, 'comment_body': 'Oops, removed. Done!', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823455, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823529, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823589, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823697, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824026, 'comment_body': ""Needed to test it. (It's not being called from outside.)"", 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824064, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824085, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824179, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824241, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429840320, 'comment_body': 'ALLOWED_TOPIC_CATEGORIES', 'comment_created': datetime.datetime(2020, 5, 25, 9, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429840878, 'comment_body': 'Do not include the argname for args which do not have a default value specified. (Conversely, include the argname for any args which do.)\r\n\r\nPlease fix, here and elsewhere throughout this PR.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429841377, 'comment_body': 'Why is this still here? Please proofread your PR.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429841806, 'comment_body': 'Also, you did not reply to my last comment:\r\n\r\n> Also, what is your plan for updating existing topics in prod?\r\n\r\nThere needs to be a list of step-by-step instructions that is guaranteed to work. Also, in general, please make sure to reply to all parts of existing comments before requesting a review.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429842531, 'comment_body': 'Nit: can move this to the previous line, I think.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429842617, 'comment_body': 'can not --> cannot', 'comment_created': datetime.datetime(2020, 5, 25, 9, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429843451, 'comment_body': 'Is this a standard topic object? If not, name it something different.\r\n\r\nIn this case, it is more like a ""newly-created topic"", right? If so, then perhaps naming it NewlyCreatedTopicObjectFactory and $scope.newlyCreatedTopic is better.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429844905, 'comment_body': 'Should be 2-space indentation right? /cc @Hudda', 'comment_created': datetime.datetime(2020, 5, 25, 9, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845436, 'comment_body': 'This sounds more like a list of strings than a string?', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845583, 'comment_body': 'Probably needs a more explicit name. There are many dashboards in the codebase.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845726, 'comment_body': '2-space indentation?', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429846081, 'comment_body': 'Needs a more specific name -- see previous suggestion of NewlyCreatedTopic, or perhaps you could go with TopicMetadata.\r\n\r\nDashboardTopic is not a great name. There are many dashboards in Oppia and the topic doesn\'t really ""belong"" to a dashboard anyway.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429847224, 'comment_body': '@marianazangrossi do you think this is acceptable? (@Showtim3 please check with her explicitly, since this might get lost in the sea of comments.)', 'comment_created': datetime.datetime(2020, 5, 25, 9, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429848299, 'comment_body': 'The method name doesn\'t seems to match the implementation. (It\'s also kinda vague -- what does ""change items"" mean?)', 'comment_created': datetime.datetime(2020, 5, 25, 9, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429849145, 'comment_body': 'The original comment was:\r\n\r\n> Add JSDoc with typeinfo and description of each arg. Try to do this for all new functions you add.\r\n\r\nPlease do this for other functions too.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429849985, 'comment_body': 'Please make sure these read as an actual English sentence. ""It should reinitialize the page after successfully deleting the topic"", ""It should show an error if the backend fails to delete the topic"".\r\n\r\nDitto below, and for all tests you write in this PR and in the future.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429850523, 'comment_body': 'The original comment, to which you wrote ""Done."", was:\r\n\r\n> ""serial number"" is not descriptive, and neither is ""index"". Please choose clearer names if possible and also write JSDoc for each function you add.\r\n\r\nPlease add JSDoc and use that to describe clearly what ""serial number"" means. \r\n\r\nAlso, do not respond ""Done"" until you have actually done the thing in the comment.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429851226, 'comment_body': 'Assert, before this, that the number of topics is 2.\r\n\r\nDitto for all other actions: assert the ""before"" status as well as the ""after"" status.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430010235, 'comment_body': 'Updated. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010273, 'comment_body': 'Updated. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010359, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010439, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010464, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010538, 'comment_body': 'Fixed. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010701, 'comment_body': 'yeah you are right, updated it to **keyword**', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010733, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010800, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010867, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011307, 'comment_body': 'Updated the name.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011753, 'comment_body': ""Sorry, I thought it's only to be done in services. Added them."", 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011780, 'comment_body': 'Updated this. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011845, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011900, 'comment_body': 'Updated this. Done', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430016942, 'comment_body': 'I have pinged her on hangouts. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430017108, 'comment_body': 'Updated the PR description. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430017157, 'comment_body': 'Sorry, fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430069226, 'comment_body': 'You have not removed the argnames from here. Please do a **thorough** check, here and elsewhere, before replying ""Done"" to a comment.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430069509, 'comment_body': 'Please check the ""Files Changed"" tab and proofread before you submit a PR for review.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430082890, 'comment_body': ""Shouldn't the category be 'math' since the classroom/subject name is 'math'. ([ref](https://github.com/oppia/oppia/blob/3b89e1f6340586f288267322246be12e66653bb9/feconf.py#L976))"", 'comment_created': datetime.datetime(2020, 5, 25, 21, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 430085454, 'comment_body': ""What's the problem here?"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430085526, 'comment_body': 'So sorry. Did a check, and I think this is ready to be reviewed now.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430087239, 'comment_body': 'Ah, my apologies, this was my bad. I saw the same line repeated twice and thought it was for the same model. Please ignore the previous comment -- sorry!', 'comment_created': datetime.datetime(2020, 5, 25, 22, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087507, 'comment_body': ""Shouldn't this be 2-space indentation? (I thought I commented on this before.)"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087621, 'comment_body': ""I don't understand this docstring. Perhaps list the allowed values. Also be clear, in the docstring, which of these properties are enums and which are not."", 'comment_created': datetime.datetime(2020, 5, 25, 22, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087681, 'comment_body': ""Shouldn't this and status be null rather than empty string (if they are enums)?"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087993, 'comment_body': 'Weird indentation. Consider:\r\n\r\n```\r\n      $scope.bindableDict.displayedConceptCardExplanation = (\r\n        explanationObject.getHtml());\r\n```', 'comment_created': datetime.datetime(2020, 5, 25, 22, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088117, 'comment_body': 'Follow existing style, don\'t leave spaces around ""=""', 'comment_created': datetime.datetime(2020, 5, 25, 22, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088475, 'comment_body': 'Seems like this needs a fixup todo after the angular migration is done. Please create an issue stating clearly what needs to be done, and add a todo here that links to that issue.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088595, 'comment_body': 'Should this be ""goToPageNumber""?', 'comment_created': datetime.datetime(2020, 5, 25, 22, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088733, 'comment_body': 'No dicts in the codebase. Use domain objects. Please remember this.\r\n\r\nIf you need to access properties, use the object directly or implement getters.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088859, 'comment_body': 'iD --> ID', 'comment_created': datetime.datetime(2020, 5, 25, 22, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088892, 'comment_body': 'Technically, should use UrlInterpolationService here.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430105586, 'comment_body': 'Ah, yes(it was another file.) My IDE generally tells if the spacing is off. Anyways, fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105683, 'comment_body': 'Updated them, but still not sure if they are descriptive enough now or not.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105715, 'comment_body': 'Yes, linked these to the constants. Fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105741, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105754, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105797, 'comment_body': 'Added a todo in the code.Done', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105867, 'comment_body': ""Yeah it'll be better. Done"", 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105898, 'comment_body': 'Ok fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105948, 'comment_body': 'Ok updated! Done.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430136456, 'comment_body': 'This is wrong, right? It should represent a specific value, not a list of possible values. So perhaps ""One of the values in {{name of the enum}}.""\r\n\r\nDitto for status.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136656, 'comment_body': 'One question about this. What happens when there is no selection made by the user? Is the field blank or is there a default selection? It seems like it ought to be the latter, so that it is always valid.\r\n\r\nIn general, for ""type in"" fields, an empty string is fine, but for ""select from a dropdown"" fields, have the default option always be an option in the dropdown.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136685, 'comment_body': 'Ditto (and also below).', 'comment_created': datetime.datetime(2020, 5, 26, 3, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136802, 'comment_body': ""Does breaking after { not work? It's more consistent with the existing codebase style, I think."", 'comment_created': datetime.datetime(2020, 5, 26, 3, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430137003, 'comment_body': 'Again, before asking for a review, **please self-review your PR**. Commented-out code should not be included in PRs.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430137158, 'comment_body': 'Note that if sort/status always exists then you don\'t need this ""if"".', 'comment_created': datetime.datetime(2020, 5, 26, 3, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430157343, 'comment_body': '> Should be 2-space indentation right? /cc @Hudda\r\n\r\n@seanlip already in #8423 ', 'comment_created': datetime.datetime(2020, 5, 26, 5, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Hudda', 'type': 'User'}, {'comment_id': 430458577, 'comment_body': 'Why are we adding a new file to this list? [I think we only expect to remove the file from this ist, right?]', 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 430783106, 'comment_body': 'I think you can test it when `$onInit` is called, make some assertions than shows this method was called. For example, you can check if `fetchDashboardData` was called and then assert its response.', 'comment_created': datetime.datetime(2020, 5, 27, 0, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 430784316, 'comment_body': ""Yeah, you're right @DubeySandeep "", 'comment_created': datetime.datetime(2020, 5, 27, 0, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 430894711, 'comment_body': ""Yes, that'll be better. Done."", 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894737, 'comment_body': 'Ok noted for future work. Done.\r\nThese are how they look now.\r\n![image](https://user-images.githubusercontent.com/30312043/82984071-04944180-a00f-11ea-8762-91c141c56b4b.png)\r\n', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894747, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894759, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894776, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894788, 'comment_body': 'Yeah correct. Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430946447, 'comment_body': 'Indent by 2.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430947201, 'comment_body': ""From your mocks -- it looks like the category is actually a dropdown? If so, you should treat it here similarly to the enum options (in particular, 'All' should be a named constant)."", 'comment_created': datetime.datetime(2020, 5, 27, 8, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430947379, 'comment_body': 'Ditto, no ""magic strings"" (\'All\'). Should be a named constant, here and elsewhere.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430948109, 'comment_body': 'Please update the text of the issue #9364 per the comment I left there, and assign it to yourself for future tracking. Address it at the first opportunity.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430949220, 'comment_body': 'Indentation is wrong. /cc @Hudda ', 'comment_created': datetime.datetime(2020, 5, 27, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430950267, 'comment_body': '/cc @marianazangrossi to confirm whether this is OK.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430950694, 'comment_body': 'Must use a named constant. (Never repeat raw strings/numbers throughout the codebase, for maintainability.)', 'comment_created': datetime.datetime(2020, 5, 27, 8, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430955414, 'comment_body': 'https://github.com/oppia/oppia/issues/9364#issuecomment-634519460', 'comment_created': datetime.datetime(2020, 5, 27, 8, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bansalnitish', 'type': 'User'}, {'comment_id': 431749562, 'comment_body': '@seanlip Already in #8423 ', 'comment_created': datetime.datetime(2020, 5, 28, 10, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Hudda', 'type': 'User'}, {'comment_id': 432138573, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138720, 'comment_body': '(Just copy pasted this bit, hence missed that). Fixed.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138863, 'comment_body': 'Removed that. Done. \r\n', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138913, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138941, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138986, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432140033, 'comment_body': ""@marianazangrossi The topic dashboard had an inline uibModal, and in order to test this file, I needed to separate the modal out, and hence I created a new file and added that to the list in the scripts/check_frontend_coverage.py. Since the modal is related to skills(i have only worked on topics in this PR), I plan to test that file in the next PR that I'll make and I'll remove this file from this list then(because probably I'll need to make some changes to that modal)\r\nLink for reference: #8924"", 'comment_created': datetime.datetime(2020, 5, 28, 21, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432142549, 'comment_body': ""Just wrapping up, I think it's fine to spy on private methods. If you were calling this private method here, then it would be a problem."", 'comment_created': datetime.datetime(2020, 5, 28, 21, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 432326967, 'comment_body': ""@Showtim3 Shouldn't the category be 'math' since the classroom/subject name is 'math'. ([ref](https://github.com/oppia/oppia/blob/3b89e1f6340586f288267322246be12e66653bb9/feconf.py#L976))"", 'comment_created': datetime.datetime(2020, 5, 29, 8, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 432843023, 'comment_body': 'Yeah, I was also thinking the same thing. Thanks!\r\n\r\n@DubeySandeep @seanlip I think this resolves your query too.', 'comment_created': datetime.datetime(2020, 5, 30, 13, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432843180, 'comment_body': 'Hey, @iamprayush I am not sure about this either, I have started an email thread with you, Akshay, Kevin, and Sean. WIll update the conclusion here too.', 'comment_created': datetime.datetime(2020, 5, 30, 13, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432891239, 'comment_body': 'Probably better to use a named constant here and anywhere else you state ""Mathematics"".', 'comment_created': datetime.datetime(2020, 5, 30, 22, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432891782, 'comment_body': 'The naming seems off -- there is nothing in the name of this constant that relates to ""category"".', 'comment_created': datetime.datetime(2020, 5, 30, 22, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432891819, 'comment_body': 'Why are you setting  these two vars to the same thing? Just use one.', 'comment_created': datetime.datetime(2020, 5, 30, 22, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432964303, 'comment_body': 'I think you need an `await` here', 'comment_created': datetime.datetime(2020, 5, 31, 16, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432964612, 'comment_body': ""You don't need to await `element.all` calls. Instead, await the asynchronous functions of the returned ElementArrayFinder. The [wiki page](https://github.com/oppia/oppia/wiki/Migrating-End-to-End-Tests-to-Async-Await#migrating-common-patterns) has more details. Also, you can move this `element.all` call to the top once you remove the `await`"", 'comment_created': datetime.datetime(2020, 5, 31, 16, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432964922, 'comment_body': ""Can you use the ElementArrayFinder `.get()` function instead of treating the finder like an array? We're not sure why, but `.get()` seems to be more reliable"", 'comment_created': datetime.datetime(2020, 5, 31, 16, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965149, 'comment_body': ""This requires a nested await:\r\n```suggestion\r\n    await (await browser.driver.switchTo().activeElement()).sendKeys(category + '\\n');\r\n```\r\nThe reason is that `.activeElement()` returns a promise that needs to resolve before we call `.sendKeys`"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965209, 'comment_body': 'ditto: nested await', 'comment_created': datetime.datetime(2020, 5, 31, 17, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965253, 'comment_body': ""ditto: don't need to await element.all"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965273, 'comment_body': 'ditto: .get() instead of []', 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965289, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965335, 'comment_body': 'Does `this.get()` already wait for the page to load?', 'comment_created': datetime.datetime(2020, 5, 31, 17, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965392, 'comment_body': ""You don't need to `await` ElementArrayFinders. Also, `.forEach` is unreliable with async-await"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965413, 'comment_body': ""With async-await, can we avoid using `.then()`? Also, isn't `this.navigateToTopicWithIndex` async?"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965627, 'comment_body': 'Can we make the topic name here reliably unique? Guidance on the wiki: https://github.com/oppia/oppia/wiki/End-to-End-Tests#independence', 'comment_created': datetime.datetime(2020, 5, 31, 17, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965653, 'comment_body': 'ditto: uniqueness', 'comment_created': datetime.datetime(2020, 5, 31, 17, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965713, 'comment_body': ""We don't we check that the number of topics returns to 2 after this call?"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433223420, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223453, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223497, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223543, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223593, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223711, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223819, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223862, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223921, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433224000, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433224077, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433343823, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344404, 'comment_body': ""Can we change the indentation here to make it more readable?\r\n\r\n```suggestion\r\n    await (\r\n      await browser.driver.switchTo().activeElement()\r\n    ).sendKeys(category + '\\n');\r\n```"", 'comment_created': datetime.datetime(2020, 6, 1, 16, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344609, 'comment_body': 'ditto: make more readable', 'comment_created': datetime.datetime(2020, 6, 1, 16, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344917, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433345229, 'comment_body': ""Don't need to await `.get()` because `.get()` returns an ElementFinder, not a Promise"", 'comment_created': datetime.datetime(2020, 6, 1, 16, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433345466, 'comment_body': 'ditto: No need to await `.get()`', 'comment_created': datetime.datetime(2020, 6, 1, 16, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433347217, 'comment_body': 'No need to await ElementArrayFinders', 'comment_created': datetime.datetime(2020, 6, 1, 16, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433348225, 'comment_body': 'Can we make this more reliably unique? Maybe `topic1TopicsAndSkillsDashboard`?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433349669, 'comment_body': 'Per the conventions on the wiki, can we include either `topicsAndSkillsDashboard` or `TASD` to ensure uniqueness?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433349842, 'comment_body': 'ditto: uniqueness', 'comment_created': datetime.datetime(2020, 6, 1, 16, 31, 58, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433824980, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825014, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825051, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825083, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825099, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825118, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825146, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825170, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825200, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825227, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 434299107, 'comment_body': ""Do we need both the `await Promise.all(` and the `await topicNames.map` awaits? Intuitively it feels like the outer await isn't going to be doing anything, but I'm not sure."", 'comment_created': datetime.datetime(2020, 6, 3, 4, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 434843312, 'comment_body': 'Newline after `(`[Ditto below]', 'comment_created': datetime.datetime(2020, 6, 3, 20, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 434845008, 'comment_body': ""Leaving this for @marianazangrossi to decide. I'm fine with whatever you all decide."", 'comment_created': datetime.datetime(2020, 6, 3, 20, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 436299748, 'comment_body': 'Removed. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299764, 'comment_body': 'Yeah you are right. Removed the outer await.\r\nPTAL! @U8NWXD ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299928, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 6, 6, 20, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299948, 'comment_body': 'Fixed. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436300037, 'comment_body': 'I need three arrays for the pagination, first one is the complete original one, second is the filtered one(based on the filters applied) and third one is the array that is being displayed which is a subset of the second array based on page number and items per page. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436318335, 'comment_body': 'all_classrooms_dict', 'comment_created': datetime.datetime(2020, 6, 7, 2, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318357, 'comment_body': ""It's really topic_is_assigned_to_classroom"", 'comment_created': datetime.datetime(2020, 6, 7, 2, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318420, 'comment_body': ""You can just do this before the inner for loop, and then you don't need the extra boolean variable at all."", 'comment_created': datetime.datetime(2020, 6, 7, 2, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318428, 'comment_body': 'all_classroom_names perhaps', 'comment_created': datetime.datetime(2020, 6, 7, 2, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318534, 'comment_body': 'Should we be declaring this as a separate controller? /cc @marianazangrossi @nithusha21 ', 'comment_created': datetime.datetime(2020, 6, 7, 2, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318561, 'comment_body': 'Perhaps you could do: `return bool(this.name && this.description)` -- simpler to read, perhaps?', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318566, 'comment_body': 'Can move to previous line.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318592, 'comment_body': 'A good test would examine all the failure options thoroughly, e.g. name but no description, etc.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318691, 'comment_body': ""Shouldn't this be indented by only 2 from the previous line?"", 'comment_created': datetime.datetime(2020, 6, 7, 2, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318765, 'comment_body': 'Always either prefix classes by ""oppia-"", or prefix them by some top-level class that covers this entire modal/directive (e.g. `.oppia-create-new-topic modal .input-field` or  `.oppia-create-new-topic modal .create-new-topic-input-field`) to ensure that these CSS classes don\'t get invoked outside this modal.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318860, 'comment_body': 'This is missing the necessary previx. Please double-check all your CSS classes here and elsewhere, there are similar issues in some of the above ones too.\r\n\r\nIf things get too long, add line breaks after the commas. But it is important to ensure that the CSS classes don\'t ""break out"" beyond this directive.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318959, 'comment_body': 'Just checking, why delete the ""await""? Ditto elsewhere. /cc @U8NWXD ', 'comment_created': datetime.datetime(2020, 6, 7, 2, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436319046, 'comment_body': ""I think this is OK, based on what I saw of @marianazangrossi's other PR. "", 'comment_created': datetime.datetime(2020, 6, 7, 2, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436324823, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324826, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324844, 'comment_body': ""Woah! that's smart. Done."", 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324857, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324864, 'comment_body': 'Yeah we should. Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324884, 'comment_body': 'Yes, Done', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324918, 'comment_body': 'Sorry, Done', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324926, 'comment_body': 'Ok updated this. Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324934, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324969, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324972, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324978, 'comment_body': 'You can take a look at [this](https://github.com/oppia/oppia/pull/9333#discussion_r433345229).', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436340155, 'comment_body': 'AFAICT, not done :(', 'comment_created': datetime.datetime(2020, 6, 7, 8, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436378477, 'comment_body': 'Sorry, Done!', 'comment_created': datetime.datetime(2020, 6, 7, 16, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436381859, 'comment_body': 'Can you check if this is really required?', 'comment_created': datetime.datetime(2020, 6, 7, 16, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382028, 'comment_body': 'Can you check if this is really required?', 'comment_created': datetime.datetime(2020, 6, 7, 16, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382090, 'comment_body': 'Move the string to the next line.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382182, 'comment_body': 'Can you follow the same pattern as earlier ie. wrapping with `(..)` and breaking after `(`. Here and below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382213, 'comment_body': 'This is no longer required? Why?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382258, 'comment_body': ""@Showtim3 I don't think you need the `Promise.all` either since `Promise.all` just returns a promise that returns/rejects based on the promises it's passed. Docs here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"", 'comment_created': datetime.datetime(2020, 6, 7, 17, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 436382304, 'comment_body': 'You can move this to the previous line, I think.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382357, 'comment_body': 'Wrap in `(..)` when you have statements spanning multiple lines.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382444, 'comment_body': 'Why do we need this? Maybe add a comment.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382632, 'comment_body': 'I see this style property being repeated. Can you put it in a class and use that instead?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382782, 'comment_body': 'I think we use 6 char HEX codes based on the example [here](https://github.com/oppia/oppia/wiki/Coding-style-guide#css). Ditto below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382830, 'comment_body': 'I think quotes are not required here, can you remove those?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383013, 'comment_body': 'Can you use CSS classes instead?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383075, 'comment_body': 'nit: \r\n```suggestion\r\n            <span>Delete</span>\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 17, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383116, 'comment_body': 'nit:\r\n```suggestion\r\n      <td>\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 17, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383233, 'comment_body': 'Use HEX values for colours (see [guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css)). Ditto below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383749, 'comment_body': 'Can you check if this is required for this spec?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383878, 'comment_body': 'Why are we using $scope and ctrl in this directive?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436404234, 'comment_body': ""Yeah I checked locally, it's working.\r\nDone"", 'comment_created': datetime.datetime(2020, 6, 7, 21, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404267, 'comment_body': 'Yeah, this one is. I commented this out and it was getting an Angular injector error. ', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404270, 'comment_body': 'Yeah, this one is. I commented this out and it was getting an Angular injector error.\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404278, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404294, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404310, 'comment_body': ""It is, I haven't removed it, just moved this to the bottom part. "", 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404320, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404325, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404329, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404346, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404351, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404361, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404364, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404398, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404403, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404430, 'comment_body': 'Oh here the tests were working without this. Removed.\r\nDone.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404457, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404623, 'comment_body': 'Some properties are being passed from the parent controller and to avoid using them as $scope everywhere, I used ctrl for consistency.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436405219, 'comment_body': ""I'm still seeing  `#fff` in L378 and `#eee` in L389."", 'comment_created': datetime.datetime(2020, 6, 7, 21, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436405301, 'comment_body': 'Change this as well. There seem to be few more in this file.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436405579, 'comment_body': 'Not done!', 'comment_created': datetime.datetime(2020, 6, 7, 21, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436407234, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 22, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436407238, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 22, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436705601, 'comment_body': 'Yep, `.get()` returns an ElementFinder synchronously, and then operations on that ElementFinder are asynchronous', 'comment_created': datetime.datetime(2020, 6, 8, 13, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}]","[{'commit_sha': 'b5f589ce25a457fa7ee85abb9fcc3990ae320b3c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3ba5076d7b2de84cfcd46100ba880856f21f420', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447c18834685674578af06305cd53b5b242844ba', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b02b935ae04d2b0db49610815bd5b1015b0092', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16623b570a1c21e98e7539c4d930acc157e9007', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c542fffef0648d7e77a651169b6689fbb452c9e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07655bce2870d8f7d3596b65f6c6a9dc8476f290', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a31f3d55bca4092b4232062f7bc0c3e158de009', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8601be066cc3740b6374f1cd697b2bfbd6158e7', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '389b7360f5fa1b56f109e1bda42e2d4ad21c6262', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff81cc8fee4b2ea389ca7486d86adeaf0142e1a4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '604bd76985bf1b18f75bb277e410c566b6db87e0', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc654a1926ca727a01b44486f219f6c6f420624e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a78938662951ca0f95a527ab6427ce531bab1f5', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54a5fb4a59768368a4379457e5a4c0f109a8864f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42c44f6b4332b56386273dd4b09264c75ce5b8a2', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df560fb08340ef3fbee2ed85ba33371805c8153c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '077032ffedeee08d8b759634b55caa1605233308', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e943b28d5a8495dd6d3521760bfc23d32284736', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '991b5413a720f6e8361b06f0770e9985dcbc8566', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e622f6d6bddbe9216c8851eaf49aa5882370750', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ee6efe5dbbe30f5b5d52ef4812902536d0ea719', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '913b3b8f25bc91d52c76963539abec930a921c7e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8551c3873b9308a69032a06123d2a1d749176bb6', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bb18cb0a43eeaee0439c55145d70743be73ce11', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e87457c3914d1509a7f0e46d81271ab7fa0e976', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b49783821e8016dc627f6d18c8e06849cc512b9e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd29bb1ae5cf4fe7a2665813af79a469a528a281', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2145ef59f8b06cec7ae91bda85b3b8e47cfa2b1f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58834f8f12d53cbb35fc91ab08057d24c3f3dbe1', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1b97d174d82e78768e02e8ced77fb0497498445', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79d9688b614350d25712f90fee4092ee16e6251', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6456b97183ad7cb9a8b78b0ea6d021a813aee31b', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a74e2bb22e4718daee68058f2dc80101c7727b2', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adfecd84aee8e330827098450e50b83ebaebe43e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '755e268611a8ee526d9cbe011cbe7e04e62a03e6', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0311d77046b143ce76a8bd045498eef5cf5f7479', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e37ea5a101a808da6fabc9d44373d828b1a1112', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47a0d2753bff2427e41dab1b18b5956190835a91', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd7c484557e816ae52a58a3d3b64996186813506', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d58a44935feb8cc8ff0e405c1fb7d5cb756097', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '745de7fca7ab19c738df3cffde5ba17746b1ca50', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a93440f914dc563fa1a657003cc714a3e5195490', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47b33b0bef62ef5062e69fac4c54a7242570b925', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb73fcfd45f706e9deac056402c4de18c5da347', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21461fd7534583e5b217f4d94b7bac74002bf557', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf9486a0e08083defaa84b3b01c387c6c6284ff', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02bec0c492537a7e04f2df8246c09d67d153f408', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72f6c5bee88518005df61a8b1c7eccc50a8c261', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '907d0b8b928a2eddbb55dba8066b0dd0e58ddf4a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6344ed9fdff9376e035ec4dc109ea3eab63dc04', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b94b84af7cd7a5e9fcd31c47a7cc7b4b21c4efa', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '987c9b49a98cef2b4500ea19c4123137e76608af', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc58791a45d6224d7ef494f756e6faf010ea6f4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e6020191bc5363184472cb977fc8669a8e3074c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79bcce150d898886a348caa319187ea09d607f6d', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a2f3de15b9efa606d9f67796192d6218f96a7f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1567238bea8eb0171c92bfe191e5236c54f648d4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b461620c4f49e50f7e3e0b00633d836827ca39c7', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3562c46a94bcd91a52fa05d6fe98f82187debb67', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a0346e6721ce0fe246a04a4fb2acf32eb4ca45', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ffed7565b01dae94af234d96db8395fa82c01af', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6df5ba94585072a7ca0c8ac30873b173ac0984f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3807a04cfc4731d1b5939506ac9b0c523560165a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f80309715dcb8c0bc37242fe44c7ac111bbdd2f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86b7ba0750654b21275552c768e818b02194aeb', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e948a34364eee1e3314b192d1c57e3209b4e928', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8810bb51f74aad7f4d24c0158b4c219d65736e07', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aafa2908daec5db0ec14295414cd876f8562b1a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40279b342b0b009e66c2f05ca6701ddc45d768b5', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b153c6e2a9ccc4830c1caf2c323a04c3b106ef0f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4e1cabc8e0e24ce42911491c67bb2188ac15725', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b50364a81e80952c3301872bebe9230a9b76a1d', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}]",Rishabh Rawat,30312043,,User,,39,,5,13
420604431,Topic dashboard ui,"Created UI or the topic Dashboard, added Category to topics and TopicSummary, added pagination and filters. I have not worked on skills dashboard in this PR. Also, added a One-Off job for handling topics on production server.

![createTOpic](https://user-images.githubusercontent.com/30312043/82425975-dfe71980-9aa4-11ea-9f07-84255965ab06.png)
![Untitled](https://user-images.githubusercontent.com/30312043/82425980-e4133700-9aa4-11ea-98d2-0cb5a0f1cea0.png)

karma coverage: 
![image](https://user-images.githubusercontent.com/30312043/82830559-b29ad100-9ed3-11ea-9698-8f85b008587d.png)
![image](https://user-images.githubusercontent.com/30312043/82830610-dfe77f00-9ed3-11ea-916d-5723d7c16653.png)
![image](https://user-images.githubusercontent.com/30312043/82830619-e4ac3300-9ed3-11ea-9d4b-9f09e7fd0c0b.png)

This is how it looks when I switch the server from develop to this branch, when the topic was created in the develop branch(Nothing's breaking), so to update the existing topic, I'll need to just add the category dropdown in the topic editor and update the patch API, which i plan to do in the next PR.
![image](https://user-images.githubusercontent.com/30312043/82831187-5933a180-9ed5-11ea-9f1b-09754b0a38dc.png)

## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [X] The linter/Karma presubmit checks have passed locally on your machine.
- [X] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [X] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9333,https://api.github.com/repos/oppia/oppia/pulls/9333,https://github.com/oppia/oppia/pull/9333,closed,2372,471,52,73,40,292,0,4,[],2020-05-20 08:50:27+00:00,2020-06-08 13:47:48+00:00,1659441.0,"19 days, 4:57:21","[{'comment_id': 428386921, 'comment_body': 'Why not reuse (but update) the existing create_default_topic method?', 'comment_created': datetime.datetime(2020, 5, 21, 0, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428392779, 'comment_body': 'Is it supposed to be one of a predefined set of strings? If so, that needs to be validated, too.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396516, 'comment_body': 'Docstring seems wrong -- ""exploration""?\r\n\r\nAlso, what is your plan for updating existing topics in prod?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396556, 'comment_body': 'Why ""2""? That\'s not a suitable name because it doesn\'t convey meaning...', 'comment_created': datetime.datetime(2020, 5, 21, 1, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396653, 'comment_body': 'What does it mean for an ""id to have loaded""?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 29, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396793, 'comment_body': ""Make a domain object, don't do this. We are trying to discourage creation of raw/arbitrary dict blobs in the codebase because they are too easy to modify unintentionally."", 'comment_created': datetime.datetime(2020, 5, 21, 1, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397049, 'comment_body': 'This should be part of a domain object function for the topicObject (which should be renamed if its fields are not the same as that of a Topic).', 'comment_created': datetime.datetime(2020, 5, 21, 1, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397331, 'comment_body': 'Use a domain object throughout, and call it the name of the domain object. For example, if it is a Topic domain object, then have the variable name be ""topic"". If it\'s something else, change the variable name accordingly. We typically do not add the ""Object"" suffix to variable names.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397525, 'comment_body': 'Pass domain objects around, never pass dicts.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397611, 'comment_body': 'Every argument needs a typedef (here and elsewhere).\r\n\r\nAlso, the previous pattern in the code was good. Either have a domain object or split the variables out into separate args.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397853, 'comment_body': 'I have no idea what ""E"" is, perhaps you could pick a clearer name. Ditto below.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398267, 'comment_body': 'Try and convert the response into a domain object or separate args within the backend API service, and only then pass it to the controller layer.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398410, 'comment_body': 'e is not a good variable name. Please pick something clearer.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398601, 'comment_body': 'totalCount is not a good variable name -- totalCount of what? Also, how does this differ from totalTopicSummaries?\r\n\r\nPlease pick clear variable names, and put effort into making the variable names as clear as possible. This is very important for future maintainability.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398787, 'comment_body': ""Same thing about variable names. I'm going to stop reviewing this file until you've done a full pass and fixed all these issues."", 'comment_created': datetime.datetime(2020, 5, 21, 1, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398849, 'comment_body': 'Also, function names should start with verbs.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399176, 'comment_body': 'What\'s the point of the ""1""?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399335, 'comment_body': 'No raw dicts. Use a domain object or separate args.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399460, 'comment_body': 'Function names should start with verbs.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399509, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399588, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399827, 'comment_body': 'The variable name makes it sound like this represents a ""page"". Please update it so that it specifies what this actually represents (e.g. TAB_NAME_UNTRIAGED_SKILLS is a better name than UNTRIAGED_SKILLS).', 'comment_created': datetime.datetime(2020, 5, 21, 1, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399977, 'comment_body': 'If initDashboard is not being accessed ""from outside"" then do not bind it to ctrl. Use ctrl only for things which need to be accessible to the corresponding template.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400198, 'comment_body': 'No passing dicts around.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400260, 'comment_body': 'Add JSDoc with typeinfo and description of each arg. Try to do this for all new functions you add.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400451, 'comment_body': 'Break and throw error after this so that we can catch cases where ""sort"" is incorrect.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400698, 'comment_body': 'No calling private methods from outside the file. See [frontend test guidelines](https://github.com/oppia/oppia/wiki/Frontend-unit-tests-guide#good-practices). /cc @marianazangrossi for info', 'comment_created': datetime.datetime(2020, 5, 21, 1, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401249, 'comment_body': 'The test does not seem to be testing what you are stating here. It appears to test whether a modal has been opened. Please make sure the descriptions match the tests exactly. /cc @marianazangrossi for info.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401534, 'comment_body': '""serial number"" is not descriptive, and neither is ""index"".  Please choose clearer names if possible and also write JSDoc for each function you add.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401712, 'comment_body': 'The test seems to be testing more than what is stated in the description. Have the description actually match the test in question. You can split this test into two separate ones, if you like.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428402022, 'comment_body': 'Each action should cause the ""before"" and ""after"" assertion to change, otherwise it is not clear that anything happened or that the functionality is working correctly. Please set the test up so that there is a meaningful difference between the before/after assertions.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428402105, 'comment_body': 'Never leave commented code in a PR. Please proofread your PR before sending for review.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428422253, 'comment_body': 'Would this be okay? Or should I make them as required parameters and refractor everywhere? \r\n![image](https://user-images.githubusercontent.com/30312043/82519370-21c49e00-9b3f-11ea-9ad5-6155641bee81.png)\r\n', 'comment_created': datetime.datetime(2020, 5, 21, 3, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 428422798, 'comment_body': ""Last time when I created a PR for adding description, we had a discussion that it's just 1 or 2 topics in the production right now and hence no job would be required. Have they increased recently? If yes, then I can write a One-off job for that."", 'comment_created': datetime.datetime(2020, 5, 21, 3, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 428464651, 'comment_body': 'I think making it required is probably safer.', 'comment_created': datetime.datetime(2020, 5, 21, 6, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428465038, 'comment_body': ""There's only 1 topic but we still need a way to handle that, right?\r\n\r\nI'm not sure if you need a one-off job since this is a topic property. Just make sure there is some kind of upgrade pathway. I am fine with upgrading manually. But you should basically checkout develop, make a topic, switch to your branch (while keeping the dev server running) and ensure that the topic still loads without errors and that it's possible to change its description."", 'comment_created': datetime.datetime(2020, 5, 21, 6, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429821905, 'comment_body': 'Sorry, fixed!', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429821998, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822044, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822164, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822234, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822306, 'comment_body': 'Not needed, removed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822377, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822428, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822449, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822514, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822546, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822732, 'comment_body': 'Not needed anymore, fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822837, 'comment_body': 'Fixed the docstring. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822896, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822957, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823076, 'comment_body': 'Updated them. Done', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823133, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823165, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823245, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823305, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823414, 'comment_body': 'Oops, removed. Done!', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823455, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823529, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823589, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823697, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824026, 'comment_body': ""Needed to test it. (It's not being called from outside.)"", 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824064, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824085, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824179, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824241, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429840320, 'comment_body': 'ALLOWED_TOPIC_CATEGORIES', 'comment_created': datetime.datetime(2020, 5, 25, 9, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429840878, 'comment_body': 'Do not include the argname for args which do not have a default value specified. (Conversely, include the argname for any args which do.)\r\n\r\nPlease fix, here and elsewhere throughout this PR.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429841377, 'comment_body': 'Why is this still here? Please proofread your PR.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429841806, 'comment_body': 'Also, you did not reply to my last comment:\r\n\r\n> Also, what is your plan for updating existing topics in prod?\r\n\r\nThere needs to be a list of step-by-step instructions that is guaranteed to work. Also, in general, please make sure to reply to all parts of existing comments before requesting a review.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429842531, 'comment_body': 'Nit: can move this to the previous line, I think.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429842617, 'comment_body': 'can not --> cannot', 'comment_created': datetime.datetime(2020, 5, 25, 9, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429843451, 'comment_body': 'Is this a standard topic object? If not, name it something different.\r\n\r\nIn this case, it is more like a ""newly-created topic"", right? If so, then perhaps naming it NewlyCreatedTopicObjectFactory and $scope.newlyCreatedTopic is better.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429844905, 'comment_body': 'Should be 2-space indentation right? /cc @Hudda', 'comment_created': datetime.datetime(2020, 5, 25, 9, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845436, 'comment_body': 'This sounds more like a list of strings than a string?', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845583, 'comment_body': 'Probably needs a more explicit name. There are many dashboards in the codebase.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845726, 'comment_body': '2-space indentation?', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429846081, 'comment_body': 'Needs a more specific name -- see previous suggestion of NewlyCreatedTopic, or perhaps you could go with TopicMetadata.\r\n\r\nDashboardTopic is not a great name. There are many dashboards in Oppia and the topic doesn\'t really ""belong"" to a dashboard anyway.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429847224, 'comment_body': '@marianazangrossi do you think this is acceptable? (@Showtim3 please check with her explicitly, since this might get lost in the sea of comments.)', 'comment_created': datetime.datetime(2020, 5, 25, 9, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429848299, 'comment_body': 'The method name doesn\'t seems to match the implementation. (It\'s also kinda vague -- what does ""change items"" mean?)', 'comment_created': datetime.datetime(2020, 5, 25, 9, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429849145, 'comment_body': 'The original comment was:\r\n\r\n> Add JSDoc with typeinfo and description of each arg. Try to do this for all new functions you add.\r\n\r\nPlease do this for other functions too.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429849985, 'comment_body': 'Please make sure these read as an actual English sentence. ""It should reinitialize the page after successfully deleting the topic"", ""It should show an error if the backend fails to delete the topic"".\r\n\r\nDitto below, and for all tests you write in this PR and in the future.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429850523, 'comment_body': 'The original comment, to which you wrote ""Done."", was:\r\n\r\n> ""serial number"" is not descriptive, and neither is ""index"". Please choose clearer names if possible and also write JSDoc for each function you add.\r\n\r\nPlease add JSDoc and use that to describe clearly what ""serial number"" means. \r\n\r\nAlso, do not respond ""Done"" until you have actually done the thing in the comment.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429851226, 'comment_body': 'Assert, before this, that the number of topics is 2.\r\n\r\nDitto for all other actions: assert the ""before"" status as well as the ""after"" status.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430010235, 'comment_body': 'Updated. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010273, 'comment_body': 'Updated. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010359, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010439, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010464, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010538, 'comment_body': 'Fixed. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010701, 'comment_body': 'yeah you are right, updated it to **keyword**', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010733, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010800, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010867, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011307, 'comment_body': 'Updated the name.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011753, 'comment_body': ""Sorry, I thought it's only to be done in services. Added them."", 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011780, 'comment_body': 'Updated this. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011845, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011900, 'comment_body': 'Updated this. Done', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430016942, 'comment_body': 'I have pinged her on hangouts. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430017108, 'comment_body': 'Updated the PR description. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430017157, 'comment_body': 'Sorry, fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430069226, 'comment_body': 'You have not removed the argnames from here. Please do a **thorough** check, here and elsewhere, before replying ""Done"" to a comment.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430069509, 'comment_body': 'Please check the ""Files Changed"" tab and proofread before you submit a PR for review.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430082890, 'comment_body': ""Shouldn't the category be 'math' since the classroom/subject name is 'math'. ([ref](https://github.com/oppia/oppia/blob/3b89e1f6340586f288267322246be12e66653bb9/feconf.py#L976))"", 'comment_created': datetime.datetime(2020, 5, 25, 21, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 430085454, 'comment_body': ""What's the problem here?"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430085526, 'comment_body': 'So sorry. Did a check, and I think this is ready to be reviewed now.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430087239, 'comment_body': 'Ah, my apologies, this was my bad. I saw the same line repeated twice and thought it was for the same model. Please ignore the previous comment -- sorry!', 'comment_created': datetime.datetime(2020, 5, 25, 22, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087507, 'comment_body': ""Shouldn't this be 2-space indentation? (I thought I commented on this before.)"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087621, 'comment_body': ""I don't understand this docstring. Perhaps list the allowed values. Also be clear, in the docstring, which of these properties are enums and which are not."", 'comment_created': datetime.datetime(2020, 5, 25, 22, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087681, 'comment_body': ""Shouldn't this and status be null rather than empty string (if they are enums)?"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087993, 'comment_body': 'Weird indentation. Consider:\r\n\r\n```\r\n      $scope.bindableDict.displayedConceptCardExplanation = (\r\n        explanationObject.getHtml());\r\n```', 'comment_created': datetime.datetime(2020, 5, 25, 22, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088117, 'comment_body': 'Follow existing style, don\'t leave spaces around ""=""', 'comment_created': datetime.datetime(2020, 5, 25, 22, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088475, 'comment_body': 'Seems like this needs a fixup todo after the angular migration is done. Please create an issue stating clearly what needs to be done, and add a todo here that links to that issue.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088595, 'comment_body': 'Should this be ""goToPageNumber""?', 'comment_created': datetime.datetime(2020, 5, 25, 22, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088733, 'comment_body': 'No dicts in the codebase. Use domain objects. Please remember this.\r\n\r\nIf you need to access properties, use the object directly or implement getters.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088859, 'comment_body': 'iD --> ID', 'comment_created': datetime.datetime(2020, 5, 25, 22, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088892, 'comment_body': 'Technically, should use UrlInterpolationService here.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430105586, 'comment_body': 'Ah, yes(it was another file.) My IDE generally tells if the spacing is off. Anyways, fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105683, 'comment_body': 'Updated them, but still not sure if they are descriptive enough now or not.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105715, 'comment_body': 'Yes, linked these to the constants. Fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105741, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105754, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105797, 'comment_body': 'Added a todo in the code.Done', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105867, 'comment_body': ""Yeah it'll be better. Done"", 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105898, 'comment_body': 'Ok fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105948, 'comment_body': 'Ok updated! Done.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430136456, 'comment_body': 'This is wrong, right? It should represent a specific value, not a list of possible values. So perhaps ""One of the values in {{name of the enum}}.""\r\n\r\nDitto for status.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136656, 'comment_body': 'One question about this. What happens when there is no selection made by the user? Is the field blank or is there a default selection? It seems like it ought to be the latter, so that it is always valid.\r\n\r\nIn general, for ""type in"" fields, an empty string is fine, but for ""select from a dropdown"" fields, have the default option always be an option in the dropdown.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136685, 'comment_body': 'Ditto (and also below).', 'comment_created': datetime.datetime(2020, 5, 26, 3, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136802, 'comment_body': ""Does breaking after { not work? It's more consistent with the existing codebase style, I think."", 'comment_created': datetime.datetime(2020, 5, 26, 3, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430137003, 'comment_body': 'Again, before asking for a review, **please self-review your PR**. Commented-out code should not be included in PRs.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430137158, 'comment_body': 'Note that if sort/status always exists then you don\'t need this ""if"".', 'comment_created': datetime.datetime(2020, 5, 26, 3, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430157343, 'comment_body': '> Should be 2-space indentation right? /cc @Hudda\r\n\r\n@seanlip already in #8423 ', 'comment_created': datetime.datetime(2020, 5, 26, 5, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Hudda', 'type': 'User'}, {'comment_id': 430458577, 'comment_body': 'Why are we adding a new file to this list? [I think we only expect to remove the file from this ist, right?]', 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 430783106, 'comment_body': 'I think you can test it when `$onInit` is called, make some assertions than shows this method was called. For example, you can check if `fetchDashboardData` was called and then assert its response.', 'comment_created': datetime.datetime(2020, 5, 27, 0, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 430784316, 'comment_body': ""Yeah, you're right @DubeySandeep "", 'comment_created': datetime.datetime(2020, 5, 27, 0, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 430894711, 'comment_body': ""Yes, that'll be better. Done."", 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894737, 'comment_body': 'Ok noted for future work. Done.\r\nThese are how they look now.\r\n![image](https://user-images.githubusercontent.com/30312043/82984071-04944180-a00f-11ea-8762-91c141c56b4b.png)\r\n', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894747, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894759, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894776, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894788, 'comment_body': 'Yeah correct. Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430946447, 'comment_body': 'Indent by 2.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430947201, 'comment_body': ""From your mocks -- it looks like the category is actually a dropdown? If so, you should treat it here similarly to the enum options (in particular, 'All' should be a named constant)."", 'comment_created': datetime.datetime(2020, 5, 27, 8, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430947379, 'comment_body': 'Ditto, no ""magic strings"" (\'All\'). Should be a named constant, here and elsewhere.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430948109, 'comment_body': 'Please update the text of the issue #9364 per the comment I left there, and assign it to yourself for future tracking. Address it at the first opportunity.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430949220, 'comment_body': 'Indentation is wrong. /cc @Hudda ', 'comment_created': datetime.datetime(2020, 5, 27, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430950267, 'comment_body': '/cc @marianazangrossi to confirm whether this is OK.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430950694, 'comment_body': 'Must use a named constant. (Never repeat raw strings/numbers throughout the codebase, for maintainability.)', 'comment_created': datetime.datetime(2020, 5, 27, 8, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430955414, 'comment_body': 'https://github.com/oppia/oppia/issues/9364#issuecomment-634519460', 'comment_created': datetime.datetime(2020, 5, 27, 8, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bansalnitish', 'type': 'User'}, {'comment_id': 431749562, 'comment_body': '@seanlip Already in #8423 ', 'comment_created': datetime.datetime(2020, 5, 28, 10, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Hudda', 'type': 'User'}, {'comment_id': 432138573, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138720, 'comment_body': '(Just copy pasted this bit, hence missed that). Fixed.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138863, 'comment_body': 'Removed that. Done. \r\n', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138913, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138941, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138986, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432140033, 'comment_body': ""@marianazangrossi The topic dashboard had an inline uibModal, and in order to test this file, I needed to separate the modal out, and hence I created a new file and added that to the list in the scripts/check_frontend_coverage.py. Since the modal is related to skills(i have only worked on topics in this PR), I plan to test that file in the next PR that I'll make and I'll remove this file from this list then(because probably I'll need to make some changes to that modal)\r\nLink for reference: #8924"", 'comment_created': datetime.datetime(2020, 5, 28, 21, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432142549, 'comment_body': ""Just wrapping up, I think it's fine to spy on private methods. If you were calling this private method here, then it would be a problem."", 'comment_created': datetime.datetime(2020, 5, 28, 21, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 432326967, 'comment_body': ""@Showtim3 Shouldn't the category be 'math' since the classroom/subject name is 'math'. ([ref](https://github.com/oppia/oppia/blob/3b89e1f6340586f288267322246be12e66653bb9/feconf.py#L976))"", 'comment_created': datetime.datetime(2020, 5, 29, 8, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 432843023, 'comment_body': 'Yeah, I was also thinking the same thing. Thanks!\r\n\r\n@DubeySandeep @seanlip I think this resolves your query too.', 'comment_created': datetime.datetime(2020, 5, 30, 13, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432843180, 'comment_body': 'Hey, @iamprayush I am not sure about this either, I have started an email thread with you, Akshay, Kevin, and Sean. WIll update the conclusion here too.', 'comment_created': datetime.datetime(2020, 5, 30, 13, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432891239, 'comment_body': 'Probably better to use a named constant here and anywhere else you state ""Mathematics"".', 'comment_created': datetime.datetime(2020, 5, 30, 22, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432891782, 'comment_body': 'The naming seems off -- there is nothing in the name of this constant that relates to ""category"".', 'comment_created': datetime.datetime(2020, 5, 30, 22, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432891819, 'comment_body': 'Why are you setting  these two vars to the same thing? Just use one.', 'comment_created': datetime.datetime(2020, 5, 30, 22, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432964303, 'comment_body': 'I think you need an `await` here', 'comment_created': datetime.datetime(2020, 5, 31, 16, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432964612, 'comment_body': ""You don't need to await `element.all` calls. Instead, await the asynchronous functions of the returned ElementArrayFinder. The [wiki page](https://github.com/oppia/oppia/wiki/Migrating-End-to-End-Tests-to-Async-Await#migrating-common-patterns) has more details. Also, you can move this `element.all` call to the top once you remove the `await`"", 'comment_created': datetime.datetime(2020, 5, 31, 16, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432964922, 'comment_body': ""Can you use the ElementArrayFinder `.get()` function instead of treating the finder like an array? We're not sure why, but `.get()` seems to be more reliable"", 'comment_created': datetime.datetime(2020, 5, 31, 16, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965149, 'comment_body': ""This requires a nested await:\r\n```suggestion\r\n    await (await browser.driver.switchTo().activeElement()).sendKeys(category + '\\n');\r\n```\r\nThe reason is that `.activeElement()` returns a promise that needs to resolve before we call `.sendKeys`"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965209, 'comment_body': 'ditto: nested await', 'comment_created': datetime.datetime(2020, 5, 31, 17, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965253, 'comment_body': ""ditto: don't need to await element.all"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965273, 'comment_body': 'ditto: .get() instead of []', 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965289, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965335, 'comment_body': 'Does `this.get()` already wait for the page to load?', 'comment_created': datetime.datetime(2020, 5, 31, 17, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965392, 'comment_body': ""You don't need to `await` ElementArrayFinders. Also, `.forEach` is unreliable with async-await"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965413, 'comment_body': ""With async-await, can we avoid using `.then()`? Also, isn't `this.navigateToTopicWithIndex` async?"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965627, 'comment_body': 'Can we make the topic name here reliably unique? Guidance on the wiki: https://github.com/oppia/oppia/wiki/End-to-End-Tests#independence', 'comment_created': datetime.datetime(2020, 5, 31, 17, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965653, 'comment_body': 'ditto: uniqueness', 'comment_created': datetime.datetime(2020, 5, 31, 17, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965713, 'comment_body': ""We don't we check that the number of topics returns to 2 after this call?"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433223420, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223453, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223497, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223543, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223593, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223711, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223819, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223862, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223921, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433224000, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433224077, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433343823, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344404, 'comment_body': ""Can we change the indentation here to make it more readable?\r\n\r\n```suggestion\r\n    await (\r\n      await browser.driver.switchTo().activeElement()\r\n    ).sendKeys(category + '\\n');\r\n```"", 'comment_created': datetime.datetime(2020, 6, 1, 16, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344609, 'comment_body': 'ditto: make more readable', 'comment_created': datetime.datetime(2020, 6, 1, 16, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344917, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433345229, 'comment_body': ""Don't need to await `.get()` because `.get()` returns an ElementFinder, not a Promise"", 'comment_created': datetime.datetime(2020, 6, 1, 16, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433345466, 'comment_body': 'ditto: No need to await `.get()`', 'comment_created': datetime.datetime(2020, 6, 1, 16, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433347217, 'comment_body': 'No need to await ElementArrayFinders', 'comment_created': datetime.datetime(2020, 6, 1, 16, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433348225, 'comment_body': 'Can we make this more reliably unique? Maybe `topic1TopicsAndSkillsDashboard`?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433349669, 'comment_body': 'Per the conventions on the wiki, can we include either `topicsAndSkillsDashboard` or `TASD` to ensure uniqueness?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433349842, 'comment_body': 'ditto: uniqueness', 'comment_created': datetime.datetime(2020, 6, 1, 16, 31, 58, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433824980, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825014, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825051, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825083, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825099, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825118, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825146, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825170, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825200, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825227, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 434299107, 'comment_body': ""Do we need both the `await Promise.all(` and the `await topicNames.map` awaits? Intuitively it feels like the outer await isn't going to be doing anything, but I'm not sure."", 'comment_created': datetime.datetime(2020, 6, 3, 4, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 434843312, 'comment_body': 'Newline after `(`[Ditto below]', 'comment_created': datetime.datetime(2020, 6, 3, 20, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 434845008, 'comment_body': ""Leaving this for @marianazangrossi to decide. I'm fine with whatever you all decide."", 'comment_created': datetime.datetime(2020, 6, 3, 20, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 436299748, 'comment_body': 'Removed. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299764, 'comment_body': 'Yeah you are right. Removed the outer await.\r\nPTAL! @U8NWXD ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299928, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 6, 6, 20, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299948, 'comment_body': 'Fixed. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436300037, 'comment_body': 'I need three arrays for the pagination, first one is the complete original one, second is the filtered one(based on the filters applied) and third one is the array that is being displayed which is a subset of the second array based on page number and items per page. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436318335, 'comment_body': 'all_classrooms_dict', 'comment_created': datetime.datetime(2020, 6, 7, 2, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318357, 'comment_body': ""It's really topic_is_assigned_to_classroom"", 'comment_created': datetime.datetime(2020, 6, 7, 2, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318420, 'comment_body': ""You can just do this before the inner for loop, and then you don't need the extra boolean variable at all."", 'comment_created': datetime.datetime(2020, 6, 7, 2, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318428, 'comment_body': 'all_classroom_names perhaps', 'comment_created': datetime.datetime(2020, 6, 7, 2, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318534, 'comment_body': 'Should we be declaring this as a separate controller? /cc @marianazangrossi @nithusha21 ', 'comment_created': datetime.datetime(2020, 6, 7, 2, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318561, 'comment_body': 'Perhaps you could do: `return bool(this.name && this.description)` -- simpler to read, perhaps?', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318566, 'comment_body': 'Can move to previous line.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318592, 'comment_body': 'A good test would examine all the failure options thoroughly, e.g. name but no description, etc.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318691, 'comment_body': ""Shouldn't this be indented by only 2 from the previous line?"", 'comment_created': datetime.datetime(2020, 6, 7, 2, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318765, 'comment_body': 'Always either prefix classes by ""oppia-"", or prefix them by some top-level class that covers this entire modal/directive (e.g. `.oppia-create-new-topic modal .input-field` or  `.oppia-create-new-topic modal .create-new-topic-input-field`) to ensure that these CSS classes don\'t get invoked outside this modal.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318860, 'comment_body': 'This is missing the necessary previx. Please double-check all your CSS classes here and elsewhere, there are similar issues in some of the above ones too.\r\n\r\nIf things get too long, add line breaks after the commas. But it is important to ensure that the CSS classes don\'t ""break out"" beyond this directive.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318959, 'comment_body': 'Just checking, why delete the ""await""? Ditto elsewhere. /cc @U8NWXD ', 'comment_created': datetime.datetime(2020, 6, 7, 2, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436319046, 'comment_body': ""I think this is OK, based on what I saw of @marianazangrossi's other PR. "", 'comment_created': datetime.datetime(2020, 6, 7, 2, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436324823, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324826, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324844, 'comment_body': ""Woah! that's smart. Done."", 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324857, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324864, 'comment_body': 'Yeah we should. Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324884, 'comment_body': 'Yes, Done', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324918, 'comment_body': 'Sorry, Done', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324926, 'comment_body': 'Ok updated this. Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324934, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324969, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324972, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324978, 'comment_body': 'You can take a look at [this](https://github.com/oppia/oppia/pull/9333#discussion_r433345229).', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436340155, 'comment_body': 'AFAICT, not done :(', 'comment_created': datetime.datetime(2020, 6, 7, 8, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436378477, 'comment_body': 'Sorry, Done!', 'comment_created': datetime.datetime(2020, 6, 7, 16, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436381859, 'comment_body': 'Can you check if this is really required?', 'comment_created': datetime.datetime(2020, 6, 7, 16, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382028, 'comment_body': 'Can you check if this is really required?', 'comment_created': datetime.datetime(2020, 6, 7, 16, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382090, 'comment_body': 'Move the string to the next line.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382182, 'comment_body': 'Can you follow the same pattern as earlier ie. wrapping with `(..)` and breaking after `(`. Here and below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382213, 'comment_body': 'This is no longer required? Why?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382258, 'comment_body': ""@Showtim3 I don't think you need the `Promise.all` either since `Promise.all` just returns a promise that returns/rejects based on the promises it's passed. Docs here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"", 'comment_created': datetime.datetime(2020, 6, 7, 17, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 436382304, 'comment_body': 'You can move this to the previous line, I think.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382357, 'comment_body': 'Wrap in `(..)` when you have statements spanning multiple lines.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382444, 'comment_body': 'Why do we need this? Maybe add a comment.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382632, 'comment_body': 'I see this style property being repeated. Can you put it in a class and use that instead?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382782, 'comment_body': 'I think we use 6 char HEX codes based on the example [here](https://github.com/oppia/oppia/wiki/Coding-style-guide#css). Ditto below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382830, 'comment_body': 'I think quotes are not required here, can you remove those?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383013, 'comment_body': 'Can you use CSS classes instead?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383075, 'comment_body': 'nit: \r\n```suggestion\r\n            <span>Delete</span>\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 17, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383116, 'comment_body': 'nit:\r\n```suggestion\r\n      <td>\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 17, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383233, 'comment_body': 'Use HEX values for colours (see [guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css)). Ditto below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383749, 'comment_body': 'Can you check if this is required for this spec?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383878, 'comment_body': 'Why are we using $scope and ctrl in this directive?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436404234, 'comment_body': ""Yeah I checked locally, it's working.\r\nDone"", 'comment_created': datetime.datetime(2020, 6, 7, 21, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404267, 'comment_body': 'Yeah, this one is. I commented this out and it was getting an Angular injector error. ', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404270, 'comment_body': 'Yeah, this one is. I commented this out and it was getting an Angular injector error.\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404278, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404294, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404310, 'comment_body': ""It is, I haven't removed it, just moved this to the bottom part. "", 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404320, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404325, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404329, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404346, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404351, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404361, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404364, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404398, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404403, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404430, 'comment_body': 'Oh here the tests were working without this. Removed.\r\nDone.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404457, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404623, 'comment_body': 'Some properties are being passed from the parent controller and to avoid using them as $scope everywhere, I used ctrl for consistency.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436405219, 'comment_body': ""I'm still seeing  `#fff` in L378 and `#eee` in L389."", 'comment_created': datetime.datetime(2020, 6, 7, 21, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436405301, 'comment_body': 'Change this as well. There seem to be few more in this file.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436405579, 'comment_body': 'Not done!', 'comment_created': datetime.datetime(2020, 6, 7, 21, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436407234, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 22, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436407238, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 22, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436705601, 'comment_body': 'Yep, `.get()` returns an ElementFinder synchronously, and then operations on that ElementFinder are asynchronous', 'comment_created': datetime.datetime(2020, 6, 8, 13, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}]","[{'commit_sha': 'b5f589ce25a457fa7ee85abb9fcc3990ae320b3c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3ba5076d7b2de84cfcd46100ba880856f21f420', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447c18834685674578af06305cd53b5b242844ba', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b02b935ae04d2b0db49610815bd5b1015b0092', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16623b570a1c21e98e7539c4d930acc157e9007', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c542fffef0648d7e77a651169b6689fbb452c9e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07655bce2870d8f7d3596b65f6c6a9dc8476f290', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a31f3d55bca4092b4232062f7bc0c3e158de009', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8601be066cc3740b6374f1cd697b2bfbd6158e7', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '389b7360f5fa1b56f109e1bda42e2d4ad21c6262', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff81cc8fee4b2ea389ca7486d86adeaf0142e1a4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '604bd76985bf1b18f75bb277e410c566b6db87e0', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc654a1926ca727a01b44486f219f6c6f420624e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a78938662951ca0f95a527ab6427ce531bab1f5', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54a5fb4a59768368a4379457e5a4c0f109a8864f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42c44f6b4332b56386273dd4b09264c75ce5b8a2', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df560fb08340ef3fbee2ed85ba33371805c8153c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '077032ffedeee08d8b759634b55caa1605233308', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e943b28d5a8495dd6d3521760bfc23d32284736', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '991b5413a720f6e8361b06f0770e9985dcbc8566', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e622f6d6bddbe9216c8851eaf49aa5882370750', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ee6efe5dbbe30f5b5d52ef4812902536d0ea719', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '913b3b8f25bc91d52c76963539abec930a921c7e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8551c3873b9308a69032a06123d2a1d749176bb6', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bb18cb0a43eeaee0439c55145d70743be73ce11', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e87457c3914d1509a7f0e46d81271ab7fa0e976', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b49783821e8016dc627f6d18c8e06849cc512b9e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd29bb1ae5cf4fe7a2665813af79a469a528a281', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2145ef59f8b06cec7ae91bda85b3b8e47cfa2b1f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58834f8f12d53cbb35fc91ab08057d24c3f3dbe1', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1b97d174d82e78768e02e8ced77fb0497498445', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79d9688b614350d25712f90fee4092ee16e6251', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6456b97183ad7cb9a8b78b0ea6d021a813aee31b', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a74e2bb22e4718daee68058f2dc80101c7727b2', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adfecd84aee8e330827098450e50b83ebaebe43e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '755e268611a8ee526d9cbe011cbe7e04e62a03e6', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0311d77046b143ce76a8bd045498eef5cf5f7479', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e37ea5a101a808da6fabc9d44373d828b1a1112', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47a0d2753bff2427e41dab1b18b5956190835a91', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd7c484557e816ae52a58a3d3b64996186813506', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d58a44935feb8cc8ff0e405c1fb7d5cb756097', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '745de7fca7ab19c738df3cffde5ba17746b1ca50', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a93440f914dc563fa1a657003cc714a3e5195490', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47b33b0bef62ef5062e69fac4c54a7242570b925', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb73fcfd45f706e9deac056402c4de18c5da347', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21461fd7534583e5b217f4d94b7bac74002bf557', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf9486a0e08083defaa84b3b01c387c6c6284ff', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02bec0c492537a7e04f2df8246c09d67d153f408', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72f6c5bee88518005df61a8b1c7eccc50a8c261', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '907d0b8b928a2eddbb55dba8066b0dd0e58ddf4a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6344ed9fdff9376e035ec4dc109ea3eab63dc04', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b94b84af7cd7a5e9fcd31c47a7cc7b4b21c4efa', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '987c9b49a98cef2b4500ea19c4123137e76608af', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc58791a45d6224d7ef494f756e6faf010ea6f4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e6020191bc5363184472cb977fc8669a8e3074c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79bcce150d898886a348caa319187ea09d607f6d', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a2f3de15b9efa606d9f67796192d6218f96a7f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1567238bea8eb0171c92bfe191e5236c54f648d4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b461620c4f49e50f7e3e0b00633d836827ca39c7', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3562c46a94bcd91a52fa05d6fe98f82187debb67', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a0346e6721ce0fe246a04a4fb2acf32eb4ca45', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ffed7565b01dae94af234d96db8395fa82c01af', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6df5ba94585072a7ca0c8ac30873b173ac0984f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3807a04cfc4731d1b5939506ac9b0c523560165a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f80309715dcb8c0bc37242fe44c7ac111bbdd2f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86b7ba0750654b21275552c768e818b02194aeb', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e948a34364eee1e3314b192d1c57e3209b4e928', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8810bb51f74aad7f4d24c0158b4c219d65736e07', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aafa2908daec5db0ec14295414cd876f8562b1a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40279b342b0b009e66c2f05ca6701ddc45d768b5', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b153c6e2a9ccc4830c1caf2c323a04c3b106ef0f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4e1cabc8e0e24ce42911491c67bb2188ac15725', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b50364a81e80952c3301872bebe9230a9b76a1d', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}]",Rishabh Rawat,30312043,,User,,39,,5,13
420604431,Topic dashboard ui,"Created UI or the topic Dashboard, added Category to topics and TopicSummary, added pagination and filters. I have not worked on skills dashboard in this PR. Also, added a One-Off job for handling topics on production server.

![createTOpic](https://user-images.githubusercontent.com/30312043/82425975-dfe71980-9aa4-11ea-9f07-84255965ab06.png)
![Untitled](https://user-images.githubusercontent.com/30312043/82425980-e4133700-9aa4-11ea-98d2-0cb5a0f1cea0.png)

karma coverage: 
![image](https://user-images.githubusercontent.com/30312043/82830559-b29ad100-9ed3-11ea-9698-8f85b008587d.png)
![image](https://user-images.githubusercontent.com/30312043/82830610-dfe77f00-9ed3-11ea-916d-5723d7c16653.png)
![image](https://user-images.githubusercontent.com/30312043/82830619-e4ac3300-9ed3-11ea-9d4b-9f09e7fd0c0b.png)

This is how it looks when I switch the server from develop to this branch, when the topic was created in the develop branch(Nothing's breaking), so to update the existing topic, I'll need to just add the category dropdown in the topic editor and update the patch API, which i plan to do in the next PR.
![image](https://user-images.githubusercontent.com/30312043/82831187-5933a180-9ed5-11ea-9f1b-09754b0a38dc.png)

## Overview
<!--
READ ME FIRST:
Please answer *both* questions below and check off every point from the Essential Checklist!
If there is no corresponding issue number, fill in N/A where it says [fill_in_number_here] below in 1.
-->

## Essential Checklist

- [ ] The PR title starts with ""Fix #bugnum: "", followed by a short, clear summary of the changes. (If this PR fixes part of an issue, prefix the title with ""Fix part of #bugnum: ..."".)
- [X] The linter/Karma presubmit checks have passed locally on your machine.
- [X] ""Allow edits from maintainers"" is checked. (See [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) for instructions on how to enable it.)
  - This lets reviewers restart your CircleCI tests for you.
- [X] The PR is made from a branch that's **not** called ""develop"".

## PR Pointers

- Oppiabot will notify you when you don't add a PR_CHANGELOG label. If you are unable to do so, please @-mention a code owner (who will be in the Reviewers list), or ask on [Gitter](https://gitter.im/oppia/oppia-chat).
- For what code owners will expect, see the [Code Owner's wiki page](https://github.com/oppia/oppia/wiki/Oppia%27s-code-owners-and-checks-to-be-carried-out-by-developers).
- Make sure your PR follows conventions in the [style guide](https://github.com/oppia/oppia/wiki/Coding-style-guide), otherwise this will lead to review delays
- Never force push. If you do, your PR will be closed.
",True,9333,https://api.github.com/repos/oppia/oppia/pulls/9333,https://github.com/oppia/oppia/pull/9333,closed,2372,471,52,73,40,292,0,4,[],2020-05-20 08:50:27+00:00,2020-06-08 13:47:48+00:00,1659441.0,"19 days, 4:57:21","[{'comment_id': 428386921, 'comment_body': 'Why not reuse (but update) the existing create_default_topic method?', 'comment_created': datetime.datetime(2020, 5, 21, 0, 49, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428392779, 'comment_body': 'Is it supposed to be one of a predefined set of strings? If so, that needs to be validated, too.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 13, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396516, 'comment_body': 'Docstring seems wrong -- ""exploration""?\r\n\r\nAlso, what is your plan for updating existing topics in prod?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 28, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396556, 'comment_body': 'Why ""2""? That\'s not a suitable name because it doesn\'t convey meaning...', 'comment_created': datetime.datetime(2020, 5, 21, 1, 28, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396653, 'comment_body': 'What does it mean for an ""id to have loaded""?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 29, 12, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428396793, 'comment_body': ""Make a domain object, don't do this. We are trying to discourage creation of raw/arbitrary dict blobs in the codebase because they are too easy to modify unintentionally."", 'comment_created': datetime.datetime(2020, 5, 21, 1, 29, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397049, 'comment_body': 'This should be part of a domain object function for the topicObject (which should be renamed if its fields are not the same as that of a Topic).', 'comment_created': datetime.datetime(2020, 5, 21, 1, 30, 45, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397331, 'comment_body': 'Use a domain object throughout, and call it the name of the domain object. For example, if it is a Topic domain object, then have the variable name be ""topic"". If it\'s something else, change the variable name accordingly. We typically do not add the ""Object"" suffix to variable names.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 31, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397525, 'comment_body': 'Pass domain objects around, never pass dicts.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397611, 'comment_body': 'Every argument needs a typedef (here and elsewhere).\r\n\r\nAlso, the previous pattern in the code was good. Either have a domain object or split the variables out into separate args.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 33, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428397853, 'comment_body': 'I have no idea what ""E"" is, perhaps you could pick a clearer name. Ditto below.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 34, 17, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398267, 'comment_body': 'Try and convert the response into a domain object or separate args within the backend API service, and only then pass it to the controller layer.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398410, 'comment_body': 'e is not a good variable name. Please pick something clearer.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 36, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398601, 'comment_body': 'totalCount is not a good variable name -- totalCount of what? Also, how does this differ from totalTopicSummaries?\r\n\r\nPlease pick clear variable names, and put effort into making the variable names as clear as possible. This is very important for future maintainability.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 37, 9, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398787, 'comment_body': ""Same thing about variable names. I'm going to stop reviewing this file until you've done a full pass and fixed all these issues."", 'comment_created': datetime.datetime(2020, 5, 21, 1, 37, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428398849, 'comment_body': 'Also, function names should start with verbs.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 38, 6, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399176, 'comment_body': 'What\'s the point of the ""1""?', 'comment_created': datetime.datetime(2020, 5, 21, 1, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399335, 'comment_body': 'No raw dicts. Use a domain object or separate args.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399460, 'comment_body': 'Function names should start with verbs.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399509, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399588, 'comment_body': 'Ditto.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 40, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399827, 'comment_body': 'The variable name makes it sound like this represents a ""page"". Please update it so that it specifies what this actually represents (e.g. TAB_NAME_UNTRIAGED_SKILLS is a better name than UNTRIAGED_SKILLS).', 'comment_created': datetime.datetime(2020, 5, 21, 1, 41, 53, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428399977, 'comment_body': 'If initDashboard is not being accessed ""from outside"" then do not bind it to ctrl. Use ctrl only for things which need to be accessible to the corresponding template.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 42, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400198, 'comment_body': 'No passing dicts around.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400260, 'comment_body': 'Add JSDoc with typeinfo and description of each arg. Try to do this for all new functions you add.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 43, 42, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400451, 'comment_body': 'Break and throw error after this so that we can catch cases where ""sort"" is incorrect.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 44, 25, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428400698, 'comment_body': 'No calling private methods from outside the file. See [frontend test guidelines](https://github.com/oppia/oppia/wiki/Frontend-unit-tests-guide#good-practices). /cc @marianazangrossi for info', 'comment_created': datetime.datetime(2020, 5, 21, 1, 45, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401249, 'comment_body': 'The test does not seem to be testing what you are stating here. It appears to test whether a modal has been opened. Please make sure the descriptions match the tests exactly. /cc @marianazangrossi for info.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401534, 'comment_body': '""serial number"" is not descriptive, and neither is ""index"".  Please choose clearer names if possible and also write JSDoc for each function you add.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 49, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428401712, 'comment_body': 'The test seems to be testing more than what is stated in the description. Have the description actually match the test in question. You can split this test into two separate ones, if you like.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 49, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428402022, 'comment_body': 'Each action should cause the ""before"" and ""after"" assertion to change, otherwise it is not clear that anything happened or that the functionality is working correctly. Please set the test up so that there is a meaningful difference between the before/after assertions.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 51, 4, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428402105, 'comment_body': 'Never leave commented code in a PR. Please proofread your PR before sending for review.', 'comment_created': datetime.datetime(2020, 5, 21, 1, 51, 28, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428422253, 'comment_body': 'Would this be okay? Or should I make them as required parameters and refractor everywhere? \r\n![image](https://user-images.githubusercontent.com/30312043/82519370-21c49e00-9b3f-11ea-9ad5-6155641bee81.png)\r\n', 'comment_created': datetime.datetime(2020, 5, 21, 3, 14, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 428422798, 'comment_body': ""Last time when I created a PR for adding description, we had a discussion that it's just 1 or 2 topics in the production right now and hence no job would be required. Have they increased recently? If yes, then I can write a One-off job for that."", 'comment_created': datetime.datetime(2020, 5, 21, 3, 16, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 428464651, 'comment_body': 'I think making it required is probably safer.', 'comment_created': datetime.datetime(2020, 5, 21, 6, 13, 21, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 428465038, 'comment_body': ""There's only 1 topic but we still need a way to handle that, right?\r\n\r\nI'm not sure if you need a one-off job since this is a topic property. Just make sure there is some kind of upgrade pathway. I am fine with upgrading manually. But you should basically checkout develop, make a topic, switch to your branch (while keeping the dev server running) and ensure that the topic still loads without errors and that it's possible to change its description."", 'comment_created': datetime.datetime(2020, 5, 21, 6, 14, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429821905, 'comment_body': 'Sorry, fixed!', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429821998, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822044, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822164, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822234, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822306, 'comment_body': 'Not needed, removed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 5, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822377, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822428, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822449, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822514, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822546, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822732, 'comment_body': 'Not needed anymore, fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822837, 'comment_body': 'Fixed the docstring. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 6, 58, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822896, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429822957, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823076, 'comment_body': 'Updated them. Done', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823133, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823165, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823245, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 42, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823305, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 7, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823414, 'comment_body': 'Oops, removed. Done!', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823455, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823529, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823589, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823697, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429823763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 8, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824026, 'comment_body': ""Needed to test it. (It's not being called from outside.)"", 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824064, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824085, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 20, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824179, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429824241, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 9, 39, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 429840320, 'comment_body': 'ALLOWED_TOPIC_CATEGORIES', 'comment_created': datetime.datetime(2020, 5, 25, 9, 41, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429840878, 'comment_body': 'Do not include the argname for args which do not have a default value specified. (Conversely, include the argname for any args which do.)\r\n\r\nPlease fix, here and elsewhere throughout this PR.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 43, 2, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429841377, 'comment_body': 'Why is this still here? Please proofread your PR.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 44, 5, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429841806, 'comment_body': 'Also, you did not reply to my last comment:\r\n\r\n> Also, what is your plan for updating existing topics in prod?\r\n\r\nThere needs to be a list of step-by-step instructions that is guaranteed to work. Also, in general, please make sure to reply to all parts of existing comments before requesting a review.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 44, 58, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429842531, 'comment_body': 'Nit: can move this to the previous line, I think.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 46, 19, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429842617, 'comment_body': 'can not --> cannot', 'comment_created': datetime.datetime(2020, 5, 25, 9, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429843451, 'comment_body': 'Is this a standard topic object? If not, name it something different.\r\n\r\nIn this case, it is more like a ""newly-created topic"", right? If so, then perhaps naming it NewlyCreatedTopicObjectFactory and $scope.newlyCreatedTopic is better.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 48, 10, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429844905, 'comment_body': 'Should be 2-space indentation right? /cc @Hudda', 'comment_created': datetime.datetime(2020, 5, 25, 9, 51, 18, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845436, 'comment_body': 'This sounds more like a list of strings than a string?', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845583, 'comment_body': 'Probably needs a more explicit name. There are many dashboards in the codebase.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429845726, 'comment_body': '2-space indentation?', 'comment_created': datetime.datetime(2020, 5, 25, 9, 52, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429846081, 'comment_body': 'Needs a more specific name -- see previous suggestion of NewlyCreatedTopic, or perhaps you could go with TopicMetadata.\r\n\r\nDashboardTopic is not a great name. There are many dashboards in Oppia and the topic doesn\'t really ""belong"" to a dashboard anyway.', 'comment_created': datetime.datetime(2020, 5, 25, 9, 53, 43, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429847224, 'comment_body': '@marianazangrossi do you think this is acceptable? (@Showtim3 please check with her explicitly, since this might get lost in the sea of comments.)', 'comment_created': datetime.datetime(2020, 5, 25, 9, 56, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429848299, 'comment_body': 'The method name doesn\'t seems to match the implementation. (It\'s also kinda vague -- what does ""change items"" mean?)', 'comment_created': datetime.datetime(2020, 5, 25, 9, 58, 41, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429849145, 'comment_body': 'The original comment was:\r\n\r\n> Add JSDoc with typeinfo and description of each arg. Try to do this for all new functions you add.\r\n\r\nPlease do this for other functions too.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 0, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429849985, 'comment_body': 'Please make sure these read as an actual English sentence. ""It should reinitialize the page after successfully deleting the topic"", ""It should show an error if the backend fails to delete the topic"".\r\n\r\nDitto below, and for all tests you write in this PR and in the future.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 2, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429850523, 'comment_body': 'The original comment, to which you wrote ""Done."", was:\r\n\r\n> ""serial number"" is not descriptive, and neither is ""index"". Please choose clearer names if possible and also write JSDoc for each function you add.\r\n\r\nPlease add JSDoc and use that to describe clearly what ""serial number"" means. \r\n\r\nAlso, do not respond ""Done"" until you have actually done the thing in the comment.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 3, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 429851226, 'comment_body': 'Assert, before this, that the number of topics is 2.\r\n\r\nDitto for all other actions: assert the ""before"" status as well as the ""after"" status.', 'comment_created': datetime.datetime(2020, 5, 25, 10, 4, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430010235, 'comment_body': 'Updated. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010273, 'comment_body': 'Updated. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010359, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010439, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010464, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 26, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010538, 'comment_body': 'Fixed. Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010701, 'comment_body': 'yeah you are right, updated it to **keyword**', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010733, 'comment_body': 'Updated.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010800, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 27, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430010867, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 28, 8, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011307, 'comment_body': 'Updated the name.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 29, 41, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011753, 'comment_body': ""Sorry, I thought it's only to be done in services. Added them."", 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011780, 'comment_body': 'Updated this. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011845, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430011900, 'comment_body': 'Updated this. Done', 'comment_created': datetime.datetime(2020, 5, 25, 16, 31, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430016942, 'comment_body': 'I have pinged her on hangouts. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 49, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430017108, 'comment_body': 'Updated the PR description. ', 'comment_created': datetime.datetime(2020, 5, 25, 16, 50, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430017157, 'comment_body': 'Sorry, fixed.', 'comment_created': datetime.datetime(2020, 5, 25, 16, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430069226, 'comment_body': 'You have not removed the argnames from here. Please do a **thorough** check, here and elsewhere, before replying ""Done"" to a comment.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430069509, 'comment_body': 'Please check the ""Files Changed"" tab and proofread before you submit a PR for review.', 'comment_created': datetime.datetime(2020, 5, 25, 20, 40, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430082890, 'comment_body': ""Shouldn't the category be 'math' since the classroom/subject name is 'math'. ([ref](https://github.com/oppia/oppia/blob/3b89e1f6340586f288267322246be12e66653bb9/feconf.py#L976))"", 'comment_created': datetime.datetime(2020, 5, 25, 21, 53, 1, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 430085454, 'comment_body': ""What's the problem here?"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 10, 27, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430085526, 'comment_body': 'So sorry. Did a check, and I think this is ready to be reviewed now.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 10, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430087239, 'comment_body': 'Ah, my apologies, this was my bad. I saw the same line repeated twice and thought it was for the same model. Please ignore the previous comment -- sorry!', 'comment_created': datetime.datetime(2020, 5, 25, 22, 22, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087507, 'comment_body': ""Shouldn't this be 2-space indentation? (I thought I commented on this before.)"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087621, 'comment_body': ""I don't understand this docstring. Perhaps list the allowed values. Also be clear, in the docstring, which of these properties are enums and which are not."", 'comment_created': datetime.datetime(2020, 5, 25, 22, 24, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087681, 'comment_body': ""Shouldn't this and status be null rather than empty string (if they are enums)?"", 'comment_created': datetime.datetime(2020, 5, 25, 22, 25, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430087993, 'comment_body': 'Weird indentation. Consider:\r\n\r\n```\r\n      $scope.bindableDict.displayedConceptCardExplanation = (\r\n        explanationObject.getHtml());\r\n```', 'comment_created': datetime.datetime(2020, 5, 25, 22, 26, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088117, 'comment_body': 'Follow existing style, don\'t leave spaces around ""=""', 'comment_created': datetime.datetime(2020, 5, 25, 22, 27, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088475, 'comment_body': 'Seems like this needs a fixup todo after the angular migration is done. Please create an issue stating clearly what needs to be done, and add a todo here that links to that issue.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 30, 1, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088595, 'comment_body': 'Should this be ""goToPageNumber""?', 'comment_created': datetime.datetime(2020, 5, 25, 22, 30, 51, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088733, 'comment_body': 'No dicts in the codebase. Use domain objects. Please remember this.\r\n\r\nIf you need to access properties, use the object directly or implement getters.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 31, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088859, 'comment_body': 'iD --> ID', 'comment_created': datetime.datetime(2020, 5, 25, 22, 32, 29, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430088892, 'comment_body': 'Technically, should use UrlInterpolationService here.', 'comment_created': datetime.datetime(2020, 5, 25, 22, 32, 46, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430105586, 'comment_body': 'Ah, yes(it was another file.) My IDE generally tells if the spacing is off. Anyways, fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 35, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105683, 'comment_body': 'Updated them, but still not sure if they are descriptive enough now or not.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 35, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105715, 'comment_body': 'Yes, linked these to the constants. Fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105741, 'comment_body': 'Fixed.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105754, 'comment_body': 'Fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105797, 'comment_body': 'Added a todo in the code.Done', 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105867, 'comment_body': ""Yeah it'll be better. Done"", 'comment_created': datetime.datetime(2020, 5, 26, 0, 36, 51, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105898, 'comment_body': 'Ok fixed!', 'comment_created': datetime.datetime(2020, 5, 26, 0, 37, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430105948, 'comment_body': 'Ok updated! Done.', 'comment_created': datetime.datetime(2020, 5, 26, 0, 37, 16, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430136456, 'comment_body': 'This is wrong, right? It should represent a specific value, not a list of possible values. So perhaps ""One of the values in {{name of the enum}}.""\r\n\r\nDitto for status.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 19, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136656, 'comment_body': 'One question about this. What happens when there is no selection made by the user? Is the field blank or is there a default selection? It seems like it ought to be the latter, so that it is always valid.\r\n\r\nIn general, for ""type in"" fields, an empty string is fine, but for ""select from a dropdown"" fields, have the default option always be an option in the dropdown.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 20, 23, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136685, 'comment_body': 'Ditto (and also below).', 'comment_created': datetime.datetime(2020, 5, 26, 3, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430136802, 'comment_body': ""Does breaking after { not work? It's more consistent with the existing codebase style, I think."", 'comment_created': datetime.datetime(2020, 5, 26, 3, 21, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430137003, 'comment_body': 'Again, before asking for a review, **please self-review your PR**. Commented-out code should not be included in PRs.', 'comment_created': datetime.datetime(2020, 5, 26, 3, 22, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430137158, 'comment_body': 'Note that if sort/status always exists then you don\'t need this ""if"".', 'comment_created': datetime.datetime(2020, 5, 26, 3, 23, 3, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430157343, 'comment_body': '> Should be 2-space indentation right? /cc @Hudda\r\n\r\n@seanlip already in #8423 ', 'comment_created': datetime.datetime(2020, 5, 26, 5, 4, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Hudda', 'type': 'User'}, {'comment_id': 430458577, 'comment_body': 'Why are we adding a new file to this list? [I think we only expect to remove the file from this ist, right?]', 'comment_created': datetime.datetime(2020, 5, 26, 14, 31, 50, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 430783106, 'comment_body': 'I think you can test it when `$onInit` is called, make some assertions than shows this method was called. For example, you can check if `fetchDashboardData` was called and then assert its response.', 'comment_created': datetime.datetime(2020, 5, 27, 0, 41, 59, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 430784316, 'comment_body': ""Yeah, you're right @DubeySandeep "", 'comment_created': datetime.datetime(2020, 5, 27, 0, 46, 33, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 430894711, 'comment_body': ""Yes, that'll be better. Done."", 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894737, 'comment_body': 'Ok noted for future work. Done.\r\nThese are how they look now.\r\n![image](https://user-images.githubusercontent.com/30312043/82984071-04944180-a00f-11ea-8762-91c141c56b4b.png)\r\n', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 13, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894747, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 14, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894759, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894776, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430894788, 'comment_body': 'Yeah correct. Done.', 'comment_created': datetime.datetime(2020, 5, 27, 6, 54, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 430946447, 'comment_body': 'Indent by 2.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 30, 40, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430947201, 'comment_body': ""From your mocks -- it looks like the category is actually a dropdown? If so, you should treat it here similarly to the enum options (in particular, 'All' should be a named constant)."", 'comment_created': datetime.datetime(2020, 5, 27, 8, 31, 56, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430947379, 'comment_body': 'Ditto, no ""magic strings"" (\'All\'). Should be a named constant, here and elsewhere.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 32, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430948109, 'comment_body': 'Please update the text of the issue #9364 per the comment I left there, and assign it to yourself for future tracking. Address it at the first opportunity.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 33, 26, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430949220, 'comment_body': 'Indentation is wrong. /cc @Hudda ', 'comment_created': datetime.datetime(2020, 5, 27, 8, 35, 15, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430950267, 'comment_body': '/cc @marianazangrossi to confirm whether this is OK.', 'comment_created': datetime.datetime(2020, 5, 27, 8, 36, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430950694, 'comment_body': 'Must use a named constant. (Never repeat raw strings/numbers throughout the codebase, for maintainability.)', 'comment_created': datetime.datetime(2020, 5, 27, 8, 37, 37, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 430955414, 'comment_body': 'https://github.com/oppia/oppia/issues/9364#issuecomment-634519460', 'comment_created': datetime.datetime(2020, 5, 27, 8, 45, 21, tzinfo=datetime.timezone.utc), 'commenter': 'bansalnitish', 'type': 'User'}, {'comment_id': 431749562, 'comment_body': '@seanlip Already in #8423 ', 'comment_created': datetime.datetime(2020, 5, 28, 10, 54, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Hudda', 'type': 'User'}, {'comment_id': 432138573, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 37, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138720, 'comment_body': '(Just copy pasted this bit, hence missed that). Fixed.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 37, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138863, 'comment_body': 'Removed that. Done. \r\n', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138913, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138941, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432138986, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 5, 28, 21, 38, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432140033, 'comment_body': ""@marianazangrossi The topic dashboard had an inline uibModal, and in order to test this file, I needed to separate the modal out, and hence I created a new file and added that to the list in the scripts/check_frontend_coverage.py. Since the modal is related to skills(i have only worked on topics in this PR), I plan to test that file in the next PR that I'll make and I'll remove this file from this list then(because probably I'll need to make some changes to that modal)\r\nLink for reference: #8924"", 'comment_created': datetime.datetime(2020, 5, 28, 21, 40, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432142549, 'comment_body': ""Just wrapping up, I think it's fine to spy on private methods. If you were calling this private method here, then it would be a problem."", 'comment_created': datetime.datetime(2020, 5, 28, 21, 46, 47, tzinfo=datetime.timezone.utc), 'commenter': 'marianadasilvadev', 'type': 'User'}, {'comment_id': 432326967, 'comment_body': ""@Showtim3 Shouldn't the category be 'math' since the classroom/subject name is 'math'. ([ref](https://github.com/oppia/oppia/blob/3b89e1f6340586f288267322246be12e66653bb9/feconf.py#L976))"", 'comment_created': datetime.datetime(2020, 5, 29, 8, 15, 27, tzinfo=datetime.timezone.utc), 'commenter': 'iamprayush', 'type': 'User'}, {'comment_id': 432843023, 'comment_body': 'Yeah, I was also thinking the same thing. Thanks!\r\n\r\n@DubeySandeep @seanlip I think this resolves your query too.', 'comment_created': datetime.datetime(2020, 5, 30, 13, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432843180, 'comment_body': 'Hey, @iamprayush I am not sure about this either, I have started an email thread with you, Akshay, Kevin, and Sean. WIll update the conclusion here too.', 'comment_created': datetime.datetime(2020, 5, 30, 13, 50, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 432891239, 'comment_body': 'Probably better to use a named constant here and anywhere else you state ""Mathematics"".', 'comment_created': datetime.datetime(2020, 5, 30, 22, 11, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432891782, 'comment_body': 'The naming seems off -- there is nothing in the name of this constant that relates to ""category"".', 'comment_created': datetime.datetime(2020, 5, 30, 22, 20, 57, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432891819, 'comment_body': 'Why are you setting  these two vars to the same thing? Just use one.', 'comment_created': datetime.datetime(2020, 5, 30, 22, 21, 44, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 432964303, 'comment_body': 'I think you need an `await` here', 'comment_created': datetime.datetime(2020, 5, 31, 16, 49, 51, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432964612, 'comment_body': ""You don't need to await `element.all` calls. Instead, await the asynchronous functions of the returned ElementArrayFinder. The [wiki page](https://github.com/oppia/oppia/wiki/Migrating-End-to-End-Tests-to-Async-Await#migrating-common-patterns) has more details. Also, you can move this `element.all` call to the top once you remove the `await`"", 'comment_created': datetime.datetime(2020, 5, 31, 16, 53, 30, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432964922, 'comment_body': ""Can you use the ElementArrayFinder `.get()` function instead of treating the finder like an array? We're not sure why, but `.get()` seems to be more reliable"", 'comment_created': datetime.datetime(2020, 5, 31, 16, 57, 24, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965149, 'comment_body': ""This requires a nested await:\r\n```suggestion\r\n    await (await browser.driver.switchTo().activeElement()).sendKeys(category + '\\n');\r\n```\r\nThe reason is that `.activeElement()` returns a promise that needs to resolve before we call `.sendKeys`"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 0, 11, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965209, 'comment_body': 'ditto: nested await', 'comment_created': datetime.datetime(2020, 5, 31, 17, 0, 46, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965253, 'comment_body': ""ditto: don't need to await element.all"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 16, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965273, 'comment_body': 'ditto: .get() instead of []', 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 29, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965289, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 5, 31, 17, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965335, 'comment_body': 'Does `this.get()` already wait for the page to load?', 'comment_created': datetime.datetime(2020, 5, 31, 17, 2, 25, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965392, 'comment_body': ""You don't need to `await` ElementArrayFinders. Also, `.forEach` is unreliable with async-await"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 3, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965413, 'comment_body': ""With async-await, can we avoid using `.then()`? Also, isn't `this.navigateToTopicWithIndex` async?"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 3, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965627, 'comment_body': 'Can we make the topic name here reliably unique? Guidance on the wiki: https://github.com/oppia/oppia/wiki/End-to-End-Tests#independence', 'comment_created': datetime.datetime(2020, 5, 31, 17, 6, 33, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965653, 'comment_body': 'ditto: uniqueness', 'comment_created': datetime.datetime(2020, 5, 31, 17, 6, 53, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 432965713, 'comment_body': ""We don't we check that the number of topics returns to 2 after this call?"", 'comment_created': datetime.datetime(2020, 5, 31, 17, 7, 34, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433223420, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223453, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 23, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223497, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223543, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 35, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223593, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223655, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 47, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223711, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 9, 54, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223763, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223819, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223862, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433223921, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433224000, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433224077, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 1, 13, 10, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433343823, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 21, 48, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344404, 'comment_body': ""Can we change the indentation here to make it more readable?\r\n\r\n```suggestion\r\n    await (\r\n      await browser.driver.switchTo().activeElement()\r\n    ).sendKeys(category + '\\n');\r\n```"", 'comment_created': datetime.datetime(2020, 6, 1, 16, 22, 54, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344609, 'comment_body': 'ditto: make more readable', 'comment_created': datetime.datetime(2020, 6, 1, 16, 23, 22, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433344917, 'comment_body': 'Can this be moved to the top of the file with the other selectors?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 23, 59, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433345229, 'comment_body': ""Don't need to await `.get()` because `.get()` returns an ElementFinder, not a Promise"", 'comment_created': datetime.datetime(2020, 6, 1, 16, 24, 35, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433345466, 'comment_body': 'ditto: No need to await `.get()`', 'comment_created': datetime.datetime(2020, 6, 1, 16, 24, 57, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433347217, 'comment_body': 'No need to await ElementArrayFinders', 'comment_created': datetime.datetime(2020, 6, 1, 16, 27, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433348225, 'comment_body': 'Can we make this more reliably unique? Maybe `topic1TopicsAndSkillsDashboard`?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 29, 2, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433349669, 'comment_body': 'Per the conventions on the wiki, can we include either `topicsAndSkillsDashboard` or `TASD` to ensure uniqueness?', 'comment_created': datetime.datetime(2020, 6, 1, 16, 31, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433349842, 'comment_body': 'ditto: uniqueness', 'comment_created': datetime.datetime(2020, 6, 1, 16, 31, 58, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 433824980, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 7, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825014, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825051, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825083, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825099, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825118, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825146, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825170, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 32, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825200, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 433825227, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 2, 12, 6, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 434299107, 'comment_body': ""Do we need both the `await Promise.all(` and the `await topicNames.map` awaits? Intuitively it feels like the outer await isn't going to be doing anything, but I'm not sure."", 'comment_created': datetime.datetime(2020, 6, 3, 4, 20, 20, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 434843312, 'comment_body': 'Newline after `(`[Ditto below]', 'comment_created': datetime.datetime(2020, 6, 3, 20, 46, 30, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 434845008, 'comment_body': ""Leaving this for @marianazangrossi to decide. I'm fine with whatever you all decide."", 'comment_created': datetime.datetime(2020, 6, 3, 20, 49, 42, tzinfo=datetime.timezone.utc), 'commenter': 'DubeySandeep', 'type': 'User'}, {'comment_id': 436299748, 'comment_body': 'Removed. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 52, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299764, 'comment_body': 'Yeah you are right. Removed the outer await.\r\nPTAL! @U8NWXD ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 52, 40, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299928, 'comment_body': 'Removed.', 'comment_created': datetime.datetime(2020, 6, 6, 20, 55, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436299948, 'comment_body': 'Fixed. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 55, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436300037, 'comment_body': 'I need three arrays for the pagination, first one is the complete original one, second is the filtered one(based on the filters applied) and third one is the array that is being displayed which is a subset of the second array based on page number and items per page. ', 'comment_created': datetime.datetime(2020, 6, 6, 20, 56, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436318335, 'comment_body': 'all_classrooms_dict', 'comment_created': datetime.datetime(2020, 6, 7, 2, 35, 30, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318357, 'comment_body': ""It's really topic_is_assigned_to_classroom"", 'comment_created': datetime.datetime(2020, 6, 7, 2, 35, 49, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318420, 'comment_body': ""You can just do this before the inner for loop, and then you don't need the extra boolean variable at all."", 'comment_created': datetime.datetime(2020, 6, 7, 2, 36, 20, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318428, 'comment_body': 'all_classroom_names perhaps', 'comment_created': datetime.datetime(2020, 6, 7, 2, 36, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318534, 'comment_body': 'Should we be declaring this as a separate controller? /cc @marianazangrossi @nithusha21 ', 'comment_created': datetime.datetime(2020, 6, 7, 2, 38, 11, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318561, 'comment_body': 'Perhaps you could do: `return bool(this.name && this.description)` -- simpler to read, perhaps?', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 13, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318566, 'comment_body': 'Can move to previous line.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 24, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318592, 'comment_body': 'A good test would examine all the failure options thoroughly, e.g. name but no description, etc.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 39, 54, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318691, 'comment_body': ""Shouldn't this be indented by only 2 from the previous line?"", 'comment_created': datetime.datetime(2020, 6, 7, 2, 41, 38, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318765, 'comment_body': 'Always either prefix classes by ""oppia-"", or prefix them by some top-level class that covers this entire modal/directive (e.g. `.oppia-create-new-topic modal .input-field` or  `.oppia-create-new-topic modal .create-new-topic-input-field`) to ensure that these CSS classes don\'t get invoked outside this modal.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 43, 22, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318860, 'comment_body': 'This is missing the necessary previx. Please double-check all your CSS classes here and elsewhere, there are similar issues in some of the above ones too.\r\n\r\nIf things get too long, add line breaks after the commas. But it is important to ensure that the CSS classes don\'t ""break out"" beyond this directive.', 'comment_created': datetime.datetime(2020, 6, 7, 2, 45, 35, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436318959, 'comment_body': 'Just checking, why delete the ""await""? Ditto elsewhere. /cc @U8NWXD ', 'comment_created': datetime.datetime(2020, 6, 7, 2, 47, 52, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436319046, 'comment_body': ""I think this is OK, based on what I saw of @marianazangrossi's other PR. "", 'comment_created': datetime.datetime(2020, 6, 7, 2, 49, 34, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436324823, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 26, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324826, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324844, 'comment_body': ""Woah! that's smart. Done."", 'comment_created': datetime.datetime(2020, 6, 7, 4, 56, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324857, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324864, 'comment_body': 'Yeah we should. Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 19, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324884, 'comment_body': 'Yes, Done', 'comment_created': datetime.datetime(2020, 6, 7, 4, 57, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324918, 'comment_body': 'Sorry, Done', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324926, 'comment_body': 'Ok updated this. Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 29, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324934, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 58, 45, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324969, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324972, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436324978, 'comment_body': 'You can take a look at [this](https://github.com/oppia/oppia/pull/9333#discussion_r433345229).', 'comment_created': datetime.datetime(2020, 6, 7, 4, 59, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436340155, 'comment_body': 'AFAICT, not done :(', 'comment_created': datetime.datetime(2020, 6, 7, 8, 45, 27, tzinfo=datetime.timezone.utc), 'commenter': 'seanlip', 'type': 'User'}, {'comment_id': 436378477, 'comment_body': 'Sorry, Done!', 'comment_created': datetime.datetime(2020, 6, 7, 16, 14, 4, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436381859, 'comment_body': 'Can you check if this is really required?', 'comment_created': datetime.datetime(2020, 6, 7, 16, 57, 12, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382028, 'comment_body': 'Can you check if this is really required?', 'comment_created': datetime.datetime(2020, 6, 7, 16, 59, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382090, 'comment_body': 'Move the string to the next line.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 0, 20, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382182, 'comment_body': 'Can you follow the same pattern as earlier ie. wrapping with `(..)` and breaking after `(`. Here and below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 1, 24, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382213, 'comment_body': 'This is no longer required? Why?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 1, 48, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382258, 'comment_body': ""@Showtim3 I don't think you need the `Promise.all` either since `Promise.all` just returns a promise that returns/rejects based on the promises it's passed. Docs here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"", 'comment_created': datetime.datetime(2020, 6, 7, 17, 2, 10, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}, {'comment_id': 436382304, 'comment_body': 'You can move this to the previous line, I think.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 2, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382357, 'comment_body': 'Wrap in `(..)` when you have statements spanning multiple lines.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 3, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382444, 'comment_body': 'Why do we need this? Maybe add a comment.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 4, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382632, 'comment_body': 'I see this style property being repeated. Can you put it in a class and use that instead?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 6, 57, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382782, 'comment_body': 'I think we use 6 char HEX codes based on the example [here](https://github.com/oppia/oppia/wiki/Coding-style-guide#css). Ditto below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 8, 47, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436382830, 'comment_body': 'I think quotes are not required here, can you remove those?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 9, 34, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383013, 'comment_body': 'Can you use CSS classes instead?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 11, 36, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383075, 'comment_body': 'nit: \r\n```suggestion\r\n            <span>Delete</span>\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 17, 12, 26, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383116, 'comment_body': 'nit:\r\n```suggestion\r\n      <td>\r\n```', 'comment_created': datetime.datetime(2020, 6, 7, 17, 12, 49, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383233, 'comment_body': 'Use HEX values for colours (see [guide](https://github.com/oppia/oppia/wiki/Coding-style-guide#css)). Ditto below.', 'comment_created': datetime.datetime(2020, 6, 7, 17, 14, 8, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383749, 'comment_body': 'Can you check if this is required for this spec?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436383878, 'comment_body': 'Why are we using $scope and ctrl in this directive?', 'comment_created': datetime.datetime(2020, 6, 7, 17, 22, 38, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436404234, 'comment_body': ""Yeah I checked locally, it's working.\r\nDone"", 'comment_created': datetime.datetime(2020, 6, 7, 21, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404267, 'comment_body': 'Yeah, this one is. I commented this out and it was getting an Angular injector error. ', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404270, 'comment_body': 'Yeah, this one is. I commented this out and it was getting an Angular injector error.\r\n\r\n', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 44, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404278, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 49, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404294, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 7, 21, 38, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404310, 'comment_body': ""It is, I haven't removed it, just moved this to the bottom part. "", 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 22, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404320, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404325, 'comment_body': 'Done', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 36, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404329, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404346, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 53, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404351, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 39, 56, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404361, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 1, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404364, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404398, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 28, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404403, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 37, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404430, 'comment_body': 'Oh here the tests were working without this. Removed.\r\nDone.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 40, 57, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404457, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 41, 12, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436404623, 'comment_body': 'Some properties are being passed from the parent controller and to avoid using them as $scope everywhere, I used ctrl for consistency.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 43, 31, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436405219, 'comment_body': ""I'm still seeing  `#fff` in L378 and `#eee` in L389."", 'comment_created': datetime.datetime(2020, 6, 7, 21, 51, 50, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436405301, 'comment_body': 'Change this as well. There seem to be few more in this file.', 'comment_created': datetime.datetime(2020, 6, 7, 21, 53, 9, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436405579, 'comment_body': 'Not done!', 'comment_created': datetime.datetime(2020, 6, 7, 21, 57, 4, tzinfo=datetime.timezone.utc), 'commenter': 'kevintab95', 'type': 'User'}, {'comment_id': 436407234, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 22, 20, 30, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436407238, 'comment_body': 'Done.', 'comment_created': datetime.datetime(2020, 6, 7, 22, 20, 33, tzinfo=datetime.timezone.utc), 'commenter': 'Showtim3', 'type': 'User'}, {'comment_id': 436705601, 'comment_body': 'Yep, `.get()` returns an ElementFinder synchronously, and then operations on that ElementFinder are asynchronous', 'comment_created': datetime.datetime(2020, 6, 8, 13, 35, 38, tzinfo=datetime.timezone.utc), 'commenter': 'U8NWXD', 'type': 'User'}]","[{'commit_sha': 'b5f589ce25a457fa7ee85abb9fcc3990ae320b3c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f3ba5076d7b2de84cfcd46100ba880856f21f420', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '447c18834685674578af06305cd53b5b242844ba', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd8b02b935ae04d2b0db49610815bd5b1015b0092', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a16623b570a1c21e98e7539c4d930acc157e9007', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5c542fffef0648d7e77a651169b6689fbb452c9e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '07655bce2870d8f7d3596b65f6c6a9dc8476f290', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6a31f3d55bca4092b4232062f7bc0c3e158de009', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8601be066cc3740b6374f1cd697b2bfbd6158e7', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '389b7360f5fa1b56f109e1bda42e2d4ad21c6262', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ff81cc8fee4b2ea389ca7486d86adeaf0142e1a4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '604bd76985bf1b18f75bb277e410c566b6db87e0', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cc654a1926ca727a01b44486f219f6c6f420624e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a78938662951ca0f95a527ab6427ce531bab1f5', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54a5fb4a59768368a4379457e5a4c0f109a8864f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42c44f6b4332b56386273dd4b09264c75ce5b8a2', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'df560fb08340ef3fbee2ed85ba33371805c8153c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '077032ffedeee08d8b759634b55caa1605233308', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0e943b28d5a8495dd6d3521760bfc23d32284736', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '991b5413a720f6e8361b06f0770e9985dcbc8566', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5e622f6d6bddbe9216c8851eaf49aa5882370750', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5ee6efe5dbbe30f5b5d52ef4812902536d0ea719', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '913b3b8f25bc91d52c76963539abec930a921c7e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8551c3873b9308a69032a06123d2a1d749176bb6', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1bb18cb0a43eeaee0439c55145d70743be73ce11', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e87457c3914d1509a7f0e46d81271ab7fa0e976', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b49783821e8016dc627f6d18c8e06849cc512b9e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bd29bb1ae5cf4fe7a2665813af79a469a528a281', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2145ef59f8b06cec7ae91bda85b3b8e47cfa2b1f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '58834f8f12d53cbb35fc91ab08057d24c3f3dbe1', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'f1b97d174d82e78768e02e8ced77fb0497498445', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd79d9688b614350d25712f90fee4092ee16e6251', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6456b97183ad7cb9a8b78b0ea6d021a813aee31b', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '4a74e2bb22e4718daee68058f2dc80101c7727b2', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'adfecd84aee8e330827098450e50b83ebaebe43e', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '755e268611a8ee526d9cbe011cbe7e04e62a03e6', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '0311d77046b143ce76a8bd045498eef5cf5f7479', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7e37ea5a101a808da6fabc9d44373d828b1a1112', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47a0d2753bff2427e41dab1b18b5956190835a91', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fd7c484557e816ae52a58a3d3b64996186813506', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '78d58a44935feb8cc8ff0e405c1fb7d5cb756097', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '745de7fca7ab19c738df3cffde5ba17746b1ca50', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a93440f914dc563fa1a657003cc714a3e5195490', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '47b33b0bef62ef5062e69fac4c54a7242570b925', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3bb73fcfd45f706e9deac056402c4de18c5da347', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '21461fd7534583e5b217f4d94b7bac74002bf557', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'faf9486a0e08083defaa84b3b01c387c6c6284ff', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '02bec0c492537a7e04f2df8246c09d67d153f408', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e72f6c5bee88518005df61a8b1c7eccc50a8c261', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '907d0b8b928a2eddbb55dba8066b0dd0e58ddf4a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6344ed9fdff9376e035ec4dc109ea3eab63dc04', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b94b84af7cd7a5e9fcd31c47a7cc7b4b21c4efa', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '987c9b49a98cef2b4500ea19c4123137e76608af', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'ccc58791a45d6224d7ef494f756e6faf010ea6f4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e6020191bc5363184472cb977fc8669a8e3074c', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '79bcce150d898886a348caa319187ea09d607f6d', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b8a2f3de15b9efa606d9f67796192d6218f96a7f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1567238bea8eb0171c92bfe191e5236c54f648d4', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b461620c4f49e50f7e3e0b00633d836827ca39c7', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3562c46a94bcd91a52fa05d6fe98f82187debb67', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd2a0346e6721ce0fe246a04a4fb2acf32eb4ca45', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1ffed7565b01dae94af234d96db8395fa82c01af', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c6df5ba94585072a7ca0c8ac30873b173ac0984f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3807a04cfc4731d1b5939506ac9b0c523560165a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7f80309715dcb8c0bc37242fe44c7ac111bbdd2f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e86b7ba0750654b21275552c768e818b02194aeb', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2e948a34364eee1e3314b192d1c57e3209b4e928', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8810bb51f74aad7f4d24c0158b4c219d65736e07', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '5aafa2908daec5db0ec14295414cd876f8562b1a', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '40279b342b0b009e66c2f05ca6701ddc45d768b5', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b153c6e2a9ccc4830c1caf2c323a04c3b106ef0f', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b4e1cabc8e0e24ce42911491c67bb2188ac15725', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b50364a81e80952c3301872bebe9230a9b76a1d', 'committer_username': 'Showtim3', 'committer_name': 'Rishabh Rawat', 'committer_email': None, 'commit_date': datetime.datetime(2017, 7, 20, 7, 47, 57, tzinfo=datetime.timezone.utc)}]",Rishabh Rawat,30312043,,User,,39,,5,13

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
40687563,oppia,oppia/oppia,Python,3840,5715,240,775,15754,1425,418,28,"[{'id': 763697720, 'number': 14117, 'closed': datetime.datetime(2021, 11, 7, 7, 44, 14, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 10, 21, 22, 15, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1416526.0, 'time_delta': '16 days, 9:28:46', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 489945358, 'number': 10731, 'closed': datetime.datetime(2020, 9, 21, 16, 24, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 20, 19, 16, 29, tzinfo=datetime.timezone.utc), 'time_taken': 76062.0, 'time_delta': '21:07:42', 'additions': 24, 'deletions': 21, 'state': 'closed'}, {'id': 487248005, 'number': 10690, 'closed': datetime.datetime(2020, 9, 21, 16, 35, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 15, 12, 3, 8, tzinfo=datetime.timezone.utc), 'time_taken': 534730.0, 'time_delta': '6 days, 4:32:10', 'additions': 68, 'deletions': 8, 'state': 'closed'}, {'id': 487135364, 'number': 10689, 'closed': datetime.datetime(2020, 9, 30, 22, 5, 43, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 15, 8, 41, 8, tzinfo=datetime.timezone.utc), 'time_taken': 1344275.0, 'time_delta': '15 days, 13:24:35', 'additions': 81, 'deletions': 0, 'state': 'closed'}, {'id': 486146993, 'number': 10673, 'closed': datetime.datetime(2020, 9, 19, 18, 15, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 13, 8, 12, 12, tzinfo=datetime.timezone.utc), 'time_taken': 554626.0, 'time_delta': '6 days, 10:03:46', 'additions': 17, 'deletions': 4, 'state': 'closed'}, {'id': 486132136, 'number': 10669, 'closed': datetime.datetime(2020, 9, 13, 17, 1, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 13, 5, 28, 39, tzinfo=datetime.timezone.utc), 'time_taken': 41548.0, 'time_delta': '11:32:28', 'additions': 13, 'deletions': 8, 'state': 'closed'}, {'id': 485797085, 'number': 10648, 'closed': datetime.datetime(2020, 9, 13, 17, 9, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 12, 7, 9, 26, tzinfo=datetime.timezone.utc), 'time_taken': 122398.0, 'time_delta': '1 day, 9:59:58', 'additions': 24, 'deletions': 9, 'state': 'closed'}, {'id': 483381147, 'number': 10615, 'closed': datetime.datetime(2020, 9, 10, 17, 47, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 10, 4, 46, 59, tzinfo=datetime.timezone.utc), 'time_taken': 46802.0, 'time_delta': '13:00:02', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 481965743, 'number': 10584, 'closed': datetime.datetime(2020, 9, 15, 18, 40, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 11, 8, 50, tzinfo=datetime.timezone.utc), 'time_taken': 631896.0, 'time_delta': '7 days, 7:31:36', 'additions': 130, 'deletions': 23, 'state': 'closed'}, {'id': 481723694, 'number': 10582, 'closed': datetime.datetime(2020, 9, 29, 9, 0, 21, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 8, 1, 59, 37, tzinfo=datetime.timezone.utc), 'time_taken': 1839644.0, 'time_delta': '21 days, 7:00:44', 'additions': 3, 'deletions': 5, 'state': 'closed'}, {'id': 479991115, 'number': 10566, 'closed': datetime.datetime(2020, 9, 5, 19, 59, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 4, 19, 8, 38, tzinfo=datetime.timezone.utc), 'time_taken': 89430.0, 'time_delta': '1 day, 0:50:30', 'additions': 927, 'deletions': 71, 'state': 'closed'}, {'id': 478824906, 'number': 10554, 'closed': datetime.datetime(2020, 9, 4, 2, 1, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 3, 18, 51, 7, tzinfo=datetime.timezone.utc), 'time_taken': 25850.0, 'time_delta': '7:10:50', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 478348595, 'number': 10545, 'closed': datetime.datetime(2020, 9, 10, 17, 48, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 3, 4, 41, 45, tzinfo=datetime.timezone.utc), 'time_taken': 651977.0, 'time_delta': '7 days, 13:06:17', 'additions': 23, 'deletions': 7, 'state': 'closed'}, {'id': 477518390, 'number': 10527, 'closed': datetime.datetime(2020, 9, 24, 3, 0, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 2, 1, 49, 59, tzinfo=datetime.timezone.utc), 'time_taken': 1905002.0, 'time_delta': '22 days, 1:10:02', 'additions': 310, 'deletions': 9, 'state': 'closed'}, {'id': 477319225, 'number': 10524, 'closed': datetime.datetime(2020, 9, 2, 13, 58, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 9, 1, 20, 34, 48, tzinfo=datetime.timezone.utc), 'time_taken': 62640.0, 'time_delta': '17:24:00', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 476570509, 'number': 10515, 'closed': datetime.datetime(2020, 9, 1, 21, 18, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 22, 5, 4, tzinfo=datetime.timezone.utc), 'time_taken': 83588.0, 'time_delta': '23:13:08', 'additions': 26, 'deletions': 24, 'state': 'closed'}, {'id': 476064856, 'number': 10507, 'closed': datetime.datetime(2020, 9, 2, 6, 44, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 31, 5, 43, 58, tzinfo=datetime.timezone.utc), 'time_taken': 176411.0, 'time_delta': '2 days, 1:00:11', 'additions': 130, 'deletions': 39, 'state': 'closed'}, {'id': 474371544, 'number': 10459, 'closed': datetime.datetime(2020, 9, 2, 2, 47, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 27, 0, 17, 39, tzinfo=datetime.timezone.utc), 'time_taken': 527396.0, 'time_delta': '6 days, 2:29:56', 'additions': 192, 'deletions': 7, 'state': 'closed'}, {'id': 473564737, 'number': 10447, 'closed': datetime.datetime(2020, 8, 27, 17, 42, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 23, 53, 42, tzinfo=datetime.timezone.utc), 'time_taken': 150518.0, 'time_delta': '1 day, 17:48:38', 'additions': 154, 'deletions': 52, 'state': 'closed'}, {'id': 472875146, 'number': 10435, 'closed': datetime.datetime(2020, 9, 2, 20, 52, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 25, 1, 52, 47, tzinfo=datetime.timezone.utc), 'time_taken': 759562.0, 'time_delta': '8 days, 18:59:22', 'additions': 236, 'deletions': 20, 'state': 'closed'}, {'id': 472726976, 'number': 10431, 'closed': datetime.datetime(2020, 8, 25, 15, 10, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 24, 19, 43, 15, tzinfo=datetime.timezone.utc), 'time_taken': 70030.0, 'time_delta': '19:27:10', 'additions': 41, 'deletions': 6, 'state': 'closed'}, {'id': 472059672, 'number': 10417, 'closed': datetime.datetime(2020, 8, 24, 13, 37, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 23, 1, 17, 10, tzinfo=datetime.timezone.utc), 'time_taken': 130839.0, 'time_delta': '1 day, 12:20:39', 'additions': 44, 'deletions': 36, 'state': 'closed'}, {'id': 471898039, 'number': 10413, 'closed': datetime.datetime(2020, 8, 24, 21, 28, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 23, 46, 26, tzinfo=datetime.timezone.utc), 'time_taken': 250911.0, 'time_delta': '2 days, 21:41:51', 'additions': 61, 'deletions': 8, 'state': 'closed'}, {'id': 471894819, 'number': 10412, 'closed': datetime.datetime(2020, 8, 23, 1, 3, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 21, 23, 29, 35, tzinfo=datetime.timezone.utc), 'time_taken': 92025.0, 'time_delta': '1 day, 1:33:45', 'additions': 7, 'deletions': 0, 'state': 'closed'}, {'id': 471264116, 'number': 10402, 'closed': datetime.datetime(2020, 8, 21, 23, 27, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 22, 2, 50, tzinfo=datetime.timezone.utc), 'time_taken': 91484.0, 'time_delta': '1 day, 1:24:44', 'additions': 5296, 'deletions': 2945, 'state': 'closed'}, {'id': 471238883, 'number': 10400, 'closed': datetime.datetime(2020, 8, 29, 8, 28, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 20, 21, 0, 10, tzinfo=datetime.timezone.utc), 'time_taken': 732492.0, 'time_delta': '8 days, 11:28:12', 'additions': 523, 'deletions': 320, 'state': 'closed'}, {'id': 469375108, 'number': 10374, 'closed': datetime.datetime(2020, 8, 28, 19, 25, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 18, 10, 27, 1, tzinfo=datetime.timezone.utc), 'time_taken': 896329.0, 'time_delta': '10 days, 8:58:49', 'additions': 241, 'deletions': 13, 'state': 'closed'}, {'id': 469096165, 'number': 10371, 'closed': datetime.datetime(2020, 8, 18, 10, 15, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 22, 20, 26, tzinfo=datetime.timezone.utc), 'time_taken': 42914.0, 'time_delta': '11:55:14', 'additions': 19, 'deletions': 17, 'state': 'closed'}, {'id': 469075175, 'number': 10370, 'closed': datetime.datetime(2020, 8, 28, 21, 46, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 17, 21, 24, 18, tzinfo=datetime.timezone.utc), 'time_taken': 951725.0, 'time_delta': '11 days, 0:22:05', 'additions': 495, 'deletions': 160, 'state': 'closed'}, {'id': 468350866, 'number': 10357, 'closed': datetime.datetime(2020, 8, 18, 18, 18, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 15, 18, 28, 3, tzinfo=datetime.timezone.utc), 'time_taken': 258649.0, 'time_delta': '2 days, 23:50:49', 'additions': 44, 'deletions': 62, 'state': 'closed'}, {'id': 468094636, 'number': 10346, 'closed': datetime.datetime(2020, 8, 17, 12, 15, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 14, 17, 18, 13, tzinfo=datetime.timezone.utc), 'time_taken': 241038.0, 'time_delta': '2 days, 18:57:18', 'additions': 27, 'deletions': 25, 'state': 'closed'}, {'id': 467668394, 'number': 10328, 'closed': datetime.datetime(2020, 8, 17, 8, 47, 46, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 22, 42, 56, tzinfo=datetime.timezone.utc), 'time_taken': 295490.0, 'time_delta': '3 days, 10:04:50', 'additions': 793, 'deletions': 534, 'state': 'closed'}, {'id': 467555792, 'number': 10325, 'closed': datetime.datetime(2020, 8, 15, 17, 40, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 13, 18, 15, 12, tzinfo=datetime.timezone.utc), 'time_taken': 170723.0, 'time_delta': '1 day, 23:25:23', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 466662798, 'number': 10289, 'closed': datetime.datetime(2020, 8, 14, 2, 39, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 12, 10, 6, 23, tzinfo=datetime.timezone.utc), 'time_taken': 145958.0, 'time_delta': '1 day, 16:32:38', 'additions': 18, 'deletions': 6, 'state': 'closed'}, {'id': 465457350, 'number': 10243, 'closed': datetime.datetime(2020, 8, 12, 5, 52, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 10, 12, 2, 41, tzinfo=datetime.timezone.utc), 'time_taken': 150585.0, 'time_delta': '1 day, 17:49:45', 'additions': 106, 'deletions': 139, 'state': 'closed'}, {'id': 465122035, 'number': 10225, 'closed': datetime.datetime(2020, 8, 12, 8, 22, 52, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 9, 8, 6, 32, tzinfo=datetime.timezone.utc), 'time_taken': 260180.0, 'time_delta': '3 days, 0:16:20', 'additions': 50, 'deletions': 7, 'state': 'closed'}, {'id': 465065775, 'number': 10221, 'closed': datetime.datetime(2020, 8, 12, 19, 28, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 8, 19, 24, 32, tzinfo=datetime.timezone.utc), 'time_taken': 345817.0, 'time_delta': '4 days, 0:03:37', 'additions': 640, 'deletions': 270, 'state': 'closed'}, {'id': 464172137, 'number': 10184, 'closed': datetime.datetime(2020, 8, 22, 22, 43, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 6, 17, 39, 28, tzinfo=datetime.timezone.utc), 'time_taken': 1400613.0, 'time_delta': '16 days, 5:03:33', 'additions': 759, 'deletions': 278, 'state': 'closed'}, {'id': 462655550, 'number': 10150, 'closed': datetime.datetime(2020, 8, 12, 5, 52, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 4, 9, 47, 11, tzinfo=datetime.timezone.utc), 'time_taken': 677100.0, 'time_delta': '7 days, 20:05:00', 'additions': 375, 'deletions': 41, 'state': 'closed'}, {'id': 461644440, 'number': 10137, 'closed': datetime.datetime(2020, 8, 5, 4, 18, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 8, 2, 2, 56, 44, tzinfo=datetime.timezone.utc), 'time_taken': 264104.0, 'time_delta': '3 days, 1:21:44', 'additions': 195, 'deletions': 198, 'state': 'closed'}, {'id': 457432133, 'number': 10077, 'closed': datetime.datetime(2020, 7, 28, 8, 57, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 22, 21, 2, tzinfo=datetime.timezone.utc), 'time_taken': 38182.0, 'time_delta': '10:36:22', 'additions': 14, 'deletions': 14, 'state': 'closed'}, {'id': 457378524, 'number': 10075, 'closed': datetime.datetime(2020, 7, 28, 20, 9, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 20, 14, 17, tzinfo=datetime.timezone.utc), 'time_taken': 86091.0, 'time_delta': '23:54:51', 'additions': 97, 'deletions': 86, 'state': 'closed'}, {'id': 457318850, 'number': 10071, 'closed': datetime.datetime(2020, 7, 27, 21, 49, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 27, 18, 6, 32, tzinfo=datetime.timezone.utc), 'time_taken': 13387.0, 'time_delta': '3:43:07', 'additions': 27, 'deletions': 33, 'state': 'closed'}, {'id': 456722202, 'number': 10046, 'closed': datetime.datetime(2020, 8, 1, 4, 24, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 26, 8, 51, 54, tzinfo=datetime.timezone.utc), 'time_taken': 502335.0, 'time_delta': '5 days, 19:32:15', 'additions': 1483, 'deletions': 476, 'state': 'closed'}, {'id': 456678031, 'number': 10040, 'closed': datetime.datetime(2020, 7, 28, 2, 12, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 22, 57, 46, tzinfo=datetime.timezone.utc), 'time_taken': 184491.0, 'time_delta': '2 days, 3:14:51', 'additions': 399, 'deletions': 99, 'state': 'closed'}, {'id': 456564689, 'number': 10034, 'closed': datetime.datetime(2020, 7, 27, 3, 36, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 25, 4, 39, 43, tzinfo=datetime.timezone.utc), 'time_taken': 169004.0, 'time_delta': '1 day, 22:56:44', 'additions': 432, 'deletions': 116, 'state': 'closed'}, {'id': 456138950, 'number': 10027, 'closed': datetime.datetime(2020, 7, 25, 19, 15, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 8, 3, 4, tzinfo=datetime.timezone.utc), 'time_taken': 126718.0, 'time_delta': '1 day, 11:11:58', 'additions': 287, 'deletions': 92, 'state': 'closed'}, {'id': 456115643, 'number': 10026, 'closed': datetime.datetime(2020, 7, 29, 18, 13, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 24, 7, 4, 14, tzinfo=datetime.timezone.utc), 'time_taken': 472158.0, 'time_delta': '5 days, 11:09:18', 'additions': 1665, 'deletions': 267, 'state': 'closed'}, {'id': 455481215, 'number': 10010, 'closed': datetime.datetime(2020, 7, 25, 21, 30, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 23, 5, 1, 11, tzinfo=datetime.timezone.utc), 'time_taken': 232134.0, 'time_delta': '2 days, 16:28:54', 'additions': 343, 'deletions': 276, 'state': 'closed'}, {'id': 455126631, 'number': 10006, 'closed': datetime.datetime(2020, 7, 24, 7, 17, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 22, 13, 40, 20, tzinfo=datetime.timezone.utc), 'time_taken': 149847.0, 'time_delta': '1 day, 17:37:27', 'additions': 672, 'deletions': 165, 'state': 'closed'}, {'id': 452956769, 'number': 9965, 'closed': datetime.datetime(2020, 7, 20, 18, 12, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 20, 2, 7, 15, tzinfo=datetime.timezone.utc), 'time_taken': 57940.0, 'time_delta': '16:05:40', 'additions': 213, 'deletions': 142, 'state': 'closed'}, {'id': 452175094, 'number': 9955, 'closed': datetime.datetime(2020, 7, 20, 11, 26, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 22, 21, 24, tzinfo=datetime.timezone.utc), 'time_taken': 133481.0, 'time_delta': '1 day, 13:04:41', 'additions': 275, 'deletions': 5, 'state': 'closed'}, {'id': 451994273, 'number': 9954, 'closed': datetime.datetime(2020, 7, 22, 14, 23, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 18, 15, 42, 7, tzinfo=datetime.timezone.utc), 'time_taken': 340855.0, 'time_delta': '3 days, 22:40:55', 'additions': 472, 'deletions': 161, 'state': 'closed'}, {'id': 451356664, 'number': 9943, 'closed': datetime.datetime(2020, 7, 18, 3, 10, 17, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 17, 18, 44, 22, tzinfo=datetime.timezone.utc), 'time_taken': 30355.0, 'time_delta': '8:25:55', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 448476660, 'number': 9901, 'closed': datetime.datetime(2020, 7, 17, 5, 44, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 13, 20, 37, 9, tzinfo=datetime.timezone.utc), 'time_taken': 292016.0, 'time_delta': '3 days, 9:06:56', 'additions': 283, 'deletions': 105, 'state': 'closed'}, {'id': 447951997, 'number': 9896, 'closed': datetime.datetime(2020, 7, 13, 17, 1, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 20, 41, 1, tzinfo=datetime.timezone.utc), 'time_taken': 73256.0, 'time_delta': '20:20:56', 'additions': 10, 'deletions': 10, 'state': 'closed'}, {'id': 447942727, 'number': 9895, 'closed': datetime.datetime(2020, 7, 15, 12, 14, 36, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 12, 19, 15, 56, tzinfo=datetime.timezone.utc), 'time_taken': 233920.0, 'time_delta': '2 days, 16:58:40', 'additions': 702, 'deletions': 283, 'state': 'closed'}, {'id': 446488212, 'number': 9852, 'closed': datetime.datetime(2020, 7, 13, 9, 11, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 8, 21, 12, 45, tzinfo=datetime.timezone.utc), 'time_taken': 388722.0, 'time_delta': '4 days, 11:58:42', 'additions': 372, 'deletions': 70, 'state': 'closed'}, {'id': 445651167, 'number': 9829, 'closed': datetime.datetime(2020, 7, 8, 7, 6, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 7, 20, 21, 30, tzinfo=datetime.timezone.utc), 'time_taken': 38698.0, 'time_delta': '10:44:58', 'additions': 58, 'deletions': 32, 'state': 'closed'}, {'id': 445030594, 'number': 9816, 'closed': datetime.datetime(2020, 7, 13, 11, 55, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 6, 22, 20, 1, tzinfo=datetime.timezone.utc), 'time_taken': 567341.0, 'time_delta': '6 days, 13:35:41', 'additions': 345, 'deletions': 29, 'state': 'closed'}, {'id': 444390954, 'number': 9789, 'closed': datetime.datetime(2020, 7, 5, 15, 30, 26, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 5, 10, 55, 36, tzinfo=datetime.timezone.utc), 'time_taken': 16490.0, 'time_delta': '4:34:50', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 444331527, 'number': 9788, 'closed': datetime.datetime(2020, 7, 10, 5, 37, 24, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 4, 21, 48, 30, tzinfo=datetime.timezone.utc), 'time_taken': 460134.0, 'time_delta': '5 days, 7:48:54', 'additions': 510, 'deletions': 80, 'state': 'closed'}, {'id': 444145027, 'number': 9776, 'closed': datetime.datetime(2020, 7, 4, 4, 39, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 17, 22, 39, tzinfo=datetime.timezone.utc), 'time_taken': 40635.0, 'time_delta': '11:17:15', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 444030723, 'number': 9774, 'closed': datetime.datetime(2020, 7, 3, 16, 54, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 3, 12, 23, 12, tzinfo=datetime.timezone.utc), 'time_taken': 16297.0, 'time_delta': '4:31:37', 'additions': 10, 'deletions': 8, 'state': 'closed'}, {'id': 443697976, 'number': 9769, 'closed': datetime.datetime(2020, 7, 13, 9, 3, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 19, 14, 56, tzinfo=datetime.timezone.utc), 'time_taken': 913696.0, 'time_delta': '10 days, 13:48:16', 'additions': 903, 'deletions': 42, 'state': 'closed'}, {'id': 443362596, 'number': 9758, 'closed': datetime.datetime(2020, 7, 3, 17, 10, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 7, 2, 8, 33, 9, tzinfo=datetime.timezone.utc), 'time_taken': 117460.0, 'time_delta': '1 day, 8:37:40', 'additions': 62, 'deletions': 6, 'state': 'closed'}, {'id': 442282093, 'number': 9743, 'closed': datetime.datetime(2020, 7, 1, 19, 21, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 20, 42, 38, tzinfo=datetime.timezone.utc), 'time_taken': 81533.0, 'time_delta': '22:38:53', 'additions': 272, 'deletions': 170, 'state': 'closed'}, {'id': 441909372, 'number': 9733, 'closed': datetime.datetime(2020, 6, 30, 22, 30, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 30, 9, 42, 32, tzinfo=datetime.timezone.utc), 'time_taken': 46061.0, 'time_delta': '12:47:41', 'additions': 325, 'deletions': 44, 'state': 'closed'}, {'id': 441337198, 'number': 9719, 'closed': datetime.datetime(2020, 6, 30, 7, 53, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 29, 11, 26, tzinfo=datetime.timezone.utc), 'time_taken': 73629.0, 'time_delta': '20:27:09', 'additions': 611, 'deletions': 130, 'state': 'closed'}, {'id': 441119805, 'number': 9706, 'closed': datetime.datetime(2020, 6, 30, 14, 52, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 28, 21, 53, 16, tzinfo=datetime.timezone.utc), 'time_taken': 147554.0, 'time_delta': '1 day, 16:59:14', 'additions': 1215, 'deletions': 296, 'state': 'closed'}, {'id': 440588657, 'number': 9672, 'closed': datetime.datetime(2020, 6, 28, 21, 15, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 26, 13, 32, 23, tzinfo=datetime.timezone.utc), 'time_taken': 200614.0, 'time_delta': '2 days, 7:43:34', 'additions': 1893, 'deletions': 203, 'state': 'closed'}, {'id': 437531066, 'number': 9603, 'closed': datetime.datetime(2020, 6, 27, 14, 18, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 21, 11, 19, 28, tzinfo=datetime.timezone.utc), 'time_taken': 529119.0, 'time_delta': '6 days, 2:58:39', 'additions': 2688, 'deletions': 988, 'state': 'closed'}, {'id': 434992260, 'number': 9551, 'closed': datetime.datetime(2020, 6, 16, 7, 10, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 5, 58, 4, tzinfo=datetime.timezone.utc), 'time_taken': 4346.0, 'time_delta': '1:12:26', 'additions': 388, 'deletions': 91, 'state': 'closed'}, {'id': 434988723, 'number': 9549, 'closed': datetime.datetime(2020, 6, 16, 22, 50, 4, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 16, 5, 47, tzinfo=datetime.timezone.utc), 'time_taken': 61384.0, 'time_delta': '17:03:04', 'additions': 388, 'deletions': 91, 'state': 'closed'}, {'id': 434081712, 'number': 9525, 'closed': datetime.datetime(2020, 6, 27, 7, 9, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 14, 1, 40, 18, tzinfo=datetime.timezone.utc), 'time_taken': 1142937.0, 'time_delta': '13 days, 5:28:57', 'additions': 2114, 'deletions': 626, 'state': 'closed'}, {'id': 431991592, 'number': 9474, 'closed': datetime.datetime(2020, 6, 17, 8, 4, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 6, 9, 18, 36, 9, tzinfo=datetime.timezone.utc), 'time_taken': 653278.0, 'time_delta': '7 days, 13:27:58', 'additions': 390, 'deletions': 93, 'state': 'closed'}, {'id': 420604431, 'number': 9333, 'closed': datetime.datetime(2020, 6, 8, 13, 47, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 20, 8, 50, 27, tzinfo=datetime.timezone.utc), 'time_taken': 1659441.0, 'time_delta': '19 days, 4:57:21', 'additions': 2372, 'deletions': 471, 'state': 'closed'}, {'id': 412667952, 'number': 9232, 'closed': datetime.datetime(2020, 5, 4, 14, 46, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 5, 3, 21, 16, 8, tzinfo=datetime.timezone.utc), 'time_taken': 63033.0, 'time_delta': '17:30:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 411084381, 'number': 9192, 'closed': datetime.datetime(2020, 5, 4, 9, 34, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 30, 2, 32, 49, tzinfo=datetime.timezone.utc), 'time_taken': 370878.0, 'time_delta': '4 days, 7:01:18', 'additions': 29, 'deletions': 7, 'state': 'closed'}, {'id': 408831930, 'number': 9152, 'closed': datetime.datetime(2020, 5, 14, 0, 30, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 25, 2, 10, 46, tzinfo=datetime.timezone.utc), 'time_taken': 1635604.0, 'time_delta': '18 days, 22:20:04', 'additions': 104, 'deletions': 14, 'state': 'closed'}, {'id': 402233335, 'number': 9055, 'closed': datetime.datetime(2020, 4, 12, 4, 17, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 4, 11, 19, 5, 17, tzinfo=datetime.timezone.utc), 'time_taken': 33125.0, 'time_delta': '9:12:05', 'additions': 1, 'deletions': 37, 'state': 'closed'}, {'id': 380385662, 'number': 8725, 'closed': datetime.datetime(2020, 4, 29, 21, 37, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 26, 16, 35, 34, tzinfo=datetime.timezone.utc), 'time_taken': 5461327.0, 'time_delta': '63 days, 5:02:07', 'additions': 127, 'deletions': 38, 'state': 'closed'}, {'id': 379108931, 'number': 8715, 'closed': datetime.datetime(2020, 2, 25, 6, 14, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 24, 17, 18, 50, tzinfo=datetime.timezone.utc), 'time_taken': 46564.0, 'time_delta': '12:56:04', 'additions': 3, 'deletions': 3, 'state': 'closed'}, {'id': 378931438, 'number': 8710, 'closed': datetime.datetime(2020, 3, 19, 20, 21, 12, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 24, 11, 7, 14, tzinfo=datetime.timezone.utc), 'time_taken': 2106838.0, 'time_delta': '24 days, 9:13:58', 'additions': 391, 'deletions': 79, 'state': 'closed'}, {'id': 378715511, 'number': 8706, 'closed': datetime.datetime(2020, 2, 23, 17, 16, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 23, 15, 5, tzinfo=datetime.timezone.utc), 'time_taken': 7883.0, 'time_delta': '2:11:23', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 376617731, 'number': 8673, 'closed': datetime.datetime(2020, 2, 20, 13, 20, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 18, 13, 28, 48, tzinfo=datetime.timezone.utc), 'time_taken': 172304.0, 'time_delta': '1 day, 23:51:44', 'additions': 8, 'deletions': 1, 'state': 'closed'}, {'id': 373471219, 'number': 8613, 'closed': datetime.datetime(2020, 2, 11, 12, 30, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 11, 4, 43, 52, tzinfo=datetime.timezone.utc), 'time_taken': 27978.0, 'time_delta': '7:46:18', 'additions': 10, 'deletions': 9, 'state': 'closed'}, {'id': 370942981, 'number': 8555, 'closed': datetime.datetime(2020, 2, 6, 15, 36, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 4, 16, 50, 28, tzinfo=datetime.timezone.utc), 'time_taken': 168374.0, 'time_delta': '1 day, 22:46:14', 'additions': 733, 'deletions': 0, 'state': 'closed'}, {'id': 370048643, 'number': 8542, 'closed': datetime.datetime(2020, 2, 9, 12, 12, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 2, 2, 19, 56, 32, tzinfo=datetime.timezone.utc), 'time_taken': 576976.0, 'time_delta': '6 days, 16:16:16', 'additions': 4, 'deletions': 3, 'state': 'closed'}, {'id': 368732866, 'number': 8519, 'closed': datetime.datetime(2020, 4, 30, 13, 36, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 29, 19, 43, 45, tzinfo=datetime.timezone.utc), 'time_taken': 7926741.0, 'time_delta': '91 days, 17:52:21', 'additions': 272, 'deletions': 36, 'state': 'closed'}, {'id': 367253255, 'number': 8501, 'closed': datetime.datetime(2020, 2, 18, 7, 33, 30, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 26, 19, 37, 16, tzinfo=datetime.timezone.utc), 'time_taken': 1943774.0, 'time_delta': '22 days, 11:56:14', 'additions': 158, 'deletions': 125, 'state': 'closed'}, {'id': 364558178, 'number': 8455, 'closed': datetime.datetime(2020, 1, 23, 21, 4, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 19, 17, 33, 44, tzinfo=datetime.timezone.utc), 'time_taken': 358275.0, 'time_delta': '4 days, 3:31:15', 'additions': 97, 'deletions': 9, 'state': 'closed'}, {'id': 363743036, 'number': 8435, 'closed': datetime.datetime(2020, 1, 18, 15, 51, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 16, 16, 45, 7, tzinfo=datetime.timezone.utc), 'time_taken': 169603.0, 'time_delta': '1 day, 23:06:43', 'additions': 10, 'deletions': 4, 'state': 'closed'}, {'id': 360821069, 'number': 8376, 'closed': datetime.datetime(2020, 1, 9, 20, 50, 1, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 9, 7, 52, 28, tzinfo=datetime.timezone.utc), 'time_taken': 46653.0, 'time_delta': '12:57:33', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 358903044, 'number': 8334, 'closed': datetime.datetime(2020, 2, 10, 16, 57, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2020, 1, 3, 7, 52, 47, tzinfo=datetime.timezone.utc), 'time_taken': 3315906.0, 'time_delta': '38 days, 9:05:06', 'additions': 734, 'deletions': 1, 'state': 'closed'}, {'id': 357005636, 'number': 8294, 'closed': datetime.datetime(2019, 12, 28, 18, 20, 50, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 26, 16, 29, 7, tzinfo=datetime.timezone.utc), 'time_taken': 179503.0, 'time_delta': '2 days, 1:51:43', 'additions': 9, 'deletions': 15, 'state': 'closed'}, {'id': 356116897, 'number': 8261, 'closed': datetime.datetime(2019, 12, 25, 22, 38, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 22, 20, 8, 48, tzinfo=datetime.timezone.utc), 'time_taken': 268185.0, 'time_delta': '3 days, 2:29:45', 'additions': 2, 'deletions': 0, 'state': 'closed'}, {'id': 356082057, 'number': 8259, 'closed': datetime.datetime(2019, 12, 22, 17, 0, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 22, 12, 31, 49, tzinfo=datetime.timezone.utc), 'time_taken': 16096.0, 'time_delta': '4:28:16', 'additions': 15, 'deletions': 15, 'state': 'closed'}, {'id': 354752494, 'number': 8229, 'closed': datetime.datetime(2019, 12, 23, 18, 38, 15, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 18, 18, 33, 54, tzinfo=datetime.timezone.utc), 'time_taken': 432261.0, 'time_delta': '5 days, 0:04:21', 'additions': 184, 'deletions': 197, 'state': 'closed'}, {'id': 353296868, 'number': 8200, 'closed': datetime.datetime(2019, 12, 17, 16, 0, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 15, 17, 35, 17, tzinfo=datetime.timezone.utc), 'time_taken': 167116.0, 'time_delta': '1 day, 22:25:16', 'additions': 529, 'deletions': 494, 'state': 'closed'}, {'id': 353149077, 'number': 8188, 'closed': datetime.datetime(2019, 12, 17, 15, 24, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 14, 6, 50, 5, tzinfo=datetime.timezone.utc), 'time_taken': 290074.0, 'time_delta': '3 days, 8:34:34', 'additions': 223, 'deletions': 284, 'state': 'closed'}, {'id': 353000715, 'number': 8183, 'closed': datetime.datetime(2019, 12, 15, 10, 4, 40, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 13, 18, 5, 45, tzinfo=datetime.timezone.utc), 'time_taken': 143935.0, 'time_delta': '1 day, 15:58:55', 'additions': 623, 'deletions': 613, 'state': 'closed'}, {'id': 349638863, 'number': 8135, 'closed': datetime.datetime(2019, 12, 11, 11, 36, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 5, 20, 49, 30, tzinfo=datetime.timezone.utc), 'time_taken': 485222.0, 'time_delta': '5 days, 14:47:02', 'additions': 94, 'deletions': 88, 'state': 'closed'}, {'id': 349047313, 'number': 8129, 'closed': datetime.datetime(2019, 12, 7, 19, 32, 16, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 12, 4, 19, 9, 57, tzinfo=datetime.timezone.utc), 'time_taken': 260539.0, 'time_delta': '3 days, 0:22:19', 'additions': 19, 'deletions': 15, 'state': 'closed'}, {'id': 346584066, 'number': 8094, 'closed': datetime.datetime(2019, 12, 5, 15, 55, 57, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 28, 8, 47, 21, tzinfo=datetime.timezone.utc), 'time_taken': 630516.0, 'time_delta': '7 days, 7:08:36', 'additions': 519, 'deletions': 625, 'state': 'closed'}, {'id': 340332204, 'number': 7990, 'closed': datetime.datetime(2019, 12, 10, 6, 12, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 13, 9, 29, 44, tzinfo=datetime.timezone.utc), 'time_taken': 2320938.0, 'time_delta': '26 days, 20:42:18', 'additions': 1587, 'deletions': 1497, 'state': 'closed'}, {'id': 338795638, 'number': 7945, 'closed': datetime.datetime(2019, 11, 14, 15, 35, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 8, 18, 10, 23, tzinfo=datetime.timezone.utc), 'time_taken': 509109.0, 'time_delta': '5 days, 21:25:09', 'additions': 865, 'deletions': 760, 'state': 'closed'}, {'id': 338212261, 'number': 7940, 'closed': datetime.datetime(2019, 11, 14, 10, 22, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 7, 19, 51, 5, tzinfo=datetime.timezone.utc), 'time_taken': 570675.0, 'time_delta': '6 days, 14:31:15', 'additions': 4, 'deletions': 1, 'state': 'closed'}, {'id': 337637202, 'number': 7935, 'closed': datetime.datetime(2019, 11, 8, 17, 54, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 6, 21, 25, 14, tzinfo=datetime.timezone.utc), 'time_taken': 160151.0, 'time_delta': '1 day, 20:29:11', 'additions': 956, 'deletions': 0, 'state': 'closed'}, {'id': 337537637, 'number': 7934, 'closed': datetime.datetime(2019, 11, 8, 11, 27, 7, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 11, 6, 19, 31, 30, tzinfo=datetime.timezone.utc), 'time_taken': 143737.0, 'time_delta': '1 day, 15:55:37', 'additions': 170, 'deletions': 155, 'state': 'closed'}, {'id': 331940910, 'number': 7835, 'closed': datetime.datetime(2019, 10, 30, 18, 10, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 24, 9, 15, 47, tzinfo=datetime.timezone.utc), 'time_taken': 550506.0, 'time_delta': '6 days, 8:55:06', 'additions': 52, 'deletions': 22, 'state': 'closed'}, {'id': 331930027, 'number': 7834, 'closed': datetime.datetime(2019, 11, 5, 15, 17, 37, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 24, 8, 51, 43, tzinfo=datetime.timezone.utc), 'time_taken': 1059954.0, 'time_delta': '12 days, 6:25:54', 'additions': 289, 'deletions': 262, 'state': 'closed'}, {'id': 331704790, 'number': 7828, 'closed': datetime.datetime(2019, 11, 6, 19, 33, 22, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 23, 19, 22, 24, tzinfo=datetime.timezone.utc), 'time_taken': 1210258.0, 'time_delta': '14 days, 0:10:58', 'additions': 56, 'deletions': 61, 'state': 'closed'}, {'id': 331689536, 'number': 7827, 'closed': datetime.datetime(2019, 11, 5, 6, 21, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 23, 18, 42, 47, tzinfo=datetime.timezone.utc), 'time_taken': 1078704.0, 'time_delta': '12 days, 11:38:24', 'additions': 111, 'deletions': 73, 'state': 'closed'}, {'id': 331420967, 'number': 7826, 'closed': datetime.datetime(2019, 11, 6, 19, 33, 39, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 23, 8, 52, 41, tzinfo=datetime.timezone.utc), 'time_taken': 1248058.0, 'time_delta': '14 days, 10:40:58', 'additions': 73, 'deletions': 62, 'state': 'closed'}, {'id': 331408671, 'number': 7825, 'closed': datetime.datetime(2019, 10, 28, 14, 32, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 23, 8, 23, 26, tzinfo=datetime.timezone.utc), 'time_taken': 454141.0, 'time_delta': '5 days, 6:09:01', 'additions': 38, 'deletions': 42, 'state': 'closed'}, {'id': 330949171, 'number': 7822, 'closed': datetime.datetime(2019, 11, 6, 19, 33, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 22, 11, 52, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1323648.0, 'time_delta': '15 days, 7:40:48', 'additions': 43, 'deletions': 34, 'state': 'closed'}, {'id': 330871913, 'number': 7821, 'closed': datetime.datetime(2019, 10, 29, 14, 52, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 22, 8, 42, 19, tzinfo=datetime.timezone.utc), 'time_taken': 626999.0, 'time_delta': '7 days, 6:09:59', 'additions': 42, 'deletions': 23, 'state': 'closed'}, {'id': 330714206, 'number': 7818, 'closed': datetime.datetime(2019, 12, 4, 11, 52, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 21, 22, 2, 51, tzinfo=datetime.timezone.utc), 'time_taken': 3764957.0, 'time_delta': '43 days, 13:49:17', 'additions': 62, 'deletions': 69, 'state': 'closed'}, {'id': 330085932, 'number': 7805, 'closed': datetime.datetime(2019, 11, 6, 5, 51, 42, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 20, 5, 38, 53, tzinfo=datetime.timezone.utc), 'time_taken': 1469569.0, 'time_delta': '17 days, 0:12:49', 'additions': 105, 'deletions': 85, 'state': 'closed'}, {'id': 327910109, 'number': 7776, 'closed': datetime.datetime(2019, 11, 4, 10, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 14, 17, 55, 45, tzinfo=datetime.timezone.utc), 'time_taken': 1787235.0, 'time_delta': '20 days, 16:27:15', 'additions': 447, 'deletions': 209, 'state': 'closed'}, {'id': 327904908, 'number': 7775, 'closed': datetime.datetime(2019, 10, 14, 17, 44, 35, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 14, 17, 39, 54, tzinfo=datetime.timezone.utc), 'time_taken': 281.0, 'time_delta': '0:04:41', 'additions': 314, 'deletions': 204, 'state': 'closed'}, {'id': 327566100, 'number': 7768, 'closed': datetime.datetime(2019, 10, 16, 6, 22, 31, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 13, 15, 35, 55, tzinfo=datetime.timezone.utc), 'time_taken': 225996.0, 'time_delta': '2 days, 14:46:36', 'additions': 39, 'deletions': 25, 'state': 'closed'}, {'id': 327538346, 'number': 7767, 'closed': datetime.datetime(2019, 10, 29, 19, 39, 11, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 13, 9, 16, 17, tzinfo=datetime.timezone.utc), 'time_taken': 1419774.0, 'time_delta': '16 days, 10:22:54', 'additions': 115, 'deletions': 6, 'state': 'closed'}, {'id': 323440332, 'number': 7726, 'closed': datetime.datetime(2019, 10, 3, 6, 29, 55, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 1, 19, 34, 13, tzinfo=datetime.timezone.utc), 'time_taken': 125742.0, 'time_delta': '1 day, 10:55:42', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 323395875, 'number': 7724, 'closed': datetime.datetime(2019, 10, 2, 3, 25, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 10, 1, 17, 45, 34, tzinfo=datetime.timezone.utc), 'time_taken': 34779.0, 'time_delta': '9:39:39', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 322513589, 'number': 7718, 'closed': datetime.datetime(2019, 9, 29, 15, 16, 6, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 29, 15, 11, 8, tzinfo=datetime.timezone.utc), 'time_taken': 298.0, 'time_delta': '0:04:58', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 322513132, 'number': 7717, 'closed': datetime.datetime(2019, 10, 2, 6, 26, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 29, 15, 5, 31, tzinfo=datetime.timezone.utc), 'time_taken': 228062.0, 'time_delta': '2 days, 15:21:02', 'additions': 3, 'deletions': 0, 'state': 'closed'}, {'id': 322444267, 'number': 7713, 'closed': datetime.datetime(2019, 9, 29, 3, 25, 34, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 28, 20, 25, 12, tzinfo=datetime.timezone.utc), 'time_taken': 25222.0, 'time_delta': '7:00:22', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 322397587, 'number': 7708, 'closed': datetime.datetime(2019, 10, 1, 19, 34, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 28, 9, 2, 52, tzinfo=datetime.timezone.utc), 'time_taken': 297096.0, 'time_delta': '3 days, 10:31:36', 'additions': 1, 'deletions': 0, 'state': 'closed'}, {'id': 322393866, 'number': 7707, 'closed': datetime.datetime(2019, 9, 28, 20, 20, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 28, 7, 59, 48, tzinfo=datetime.timezone.utc), 'time_taken': 44412.0, 'time_delta': '12:20:12', 'additions': 13, 'deletions': 2, 'state': 'closed'}, {'id': 322322531, 'number': 7705, 'closed': datetime.datetime(2019, 9, 29, 15, 11, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 9, 27, 20, 48, 53, tzinfo=datetime.timezone.utc), 'time_taken': 152576.0, 'time_delta': '1 day, 18:22:56', 'additions': 4, 'deletions': 0, 'state': 'closed'}, {'id': 312983069, 'number': 7526, 'closed': datetime.datetime(2019, 9, 8, 19, 42, 47, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 31, 21, 23, 46, tzinfo=datetime.timezone.utc), 'time_taken': 685141.0, 'time_delta': '7 days, 22:19:01', 'additions': 167, 'deletions': 23, 'state': 'closed'}, {'id': 306300591, 'number': 7361, 'closed': datetime.datetime(2019, 8, 31, 14, 56, 23, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 11, 18, 54, 33, tzinfo=datetime.timezone.utc), 'time_taken': 1713710.0, 'time_delta': '19 days, 20:01:50', 'additions': 48, 'deletions': 0, 'state': 'closed'}, {'id': 304078091, 'number': 7297, 'closed': datetime.datetime(2019, 8, 7, 17, 34, 2, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 4, 16, 7, 9, tzinfo=datetime.timezone.utc), 'time_taken': 264413.0, 'time_delta': '3 days, 1:26:53', 'additions': 45, 'deletions': 1, 'state': 'closed'}, {'id': 304018406, 'number': 7285, 'closed': datetime.datetime(2019, 8, 19, 15, 18, 8, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 3, 18, 46, 25, tzinfo=datetime.timezone.utc), 'time_taken': 1369903.0, 'time_delta': '15 days, 20:31:43', 'additions': 74, 'deletions': 7, 'state': 'closed'}, {'id': 303518166, 'number': 7265, 'closed': datetime.datetime(2019, 8, 4, 19, 42, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 8, 1, 19, 15, 47, tzinfo=datetime.timezone.utc), 'time_taken': 260800.0, 'time_delta': '3 days, 0:26:40', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 301691151, 'number': 7233, 'closed': datetime.datetime(2019, 7, 29, 19, 59, 32, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 26, 21, 29, 35, tzinfo=datetime.timezone.utc), 'time_taken': 253797.0, 'time_delta': '2 days, 22:29:57', 'additions': 32, 'deletions': 0, 'state': 'closed'}, {'id': 298599981, 'number': 7162, 'closed': datetime.datetime(2019, 7, 18, 0, 28, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 17, 17, 37, 30, tzinfo=datetime.timezone.utc), 'time_taken': 24675.0, 'time_delta': '6:51:15', 'additions': 6, 'deletions': 2, 'state': 'closed'}, {'id': 298425399, 'number': 7158, 'closed': datetime.datetime(2019, 7, 17, 17, 38, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 17, 11, 27, 38, tzinfo=datetime.timezone.utc), 'time_taken': 22280.0, 'time_delta': '6:11:20', 'additions': 9, 'deletions': 3, 'state': 'closed'}, {'id': 297943900, 'number': 7148, 'closed': datetime.datetime(2019, 7, 24, 6, 58, 41, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 16, 9, 7, 5, tzinfo=datetime.timezone.utc), 'time_taken': 683496.0, 'time_delta': '7 days, 21:51:36', 'additions': 18, 'deletions': 3, 'state': 'closed'}, {'id': 294655203, 'number': 7091, 'closed': datetime.datetime(2019, 7, 16, 8, 56, 13, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 7, 4, 17, 44, 21, tzinfo=datetime.timezone.utc), 'time_taken': 1005112.0, 'time_delta': '11 days, 15:11:52', 'additions': 3601, 'deletions': 2529, 'state': 'closed'}, {'id': 293053880, 'number': 7054, 'closed': datetime.datetime(2019, 7, 2, 5, 35, 5, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 29, 18, 5, tzinfo=datetime.timezone.utc), 'time_taken': 214205.0, 'time_delta': '2 days, 11:30:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 286487305, 'number': 6881, 'closed': datetime.datetime(2019, 6, 22, 18, 15, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 6, 9, 18, 5, 36, tzinfo=datetime.timezone.utc), 'time_taken': 1123823.0, 'time_delta': '13 days, 0:10:23', 'additions': 21, 'deletions': 14, 'state': 'closed'}, {'id': 282298760, 'number': 6801, 'closed': datetime.datetime(2019, 5, 30, 21, 22, 56, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 26, 14, 2, 17, tzinfo=datetime.timezone.utc), 'time_taken': 372039.0, 'time_delta': '4 days, 7:20:39', 'additions': 2, 'deletions': 2, 'state': 'closed'}, {'id': 280127474, 'number': 6759, 'closed': datetime.datetime(2019, 5, 19, 11, 47, 25, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2019, 5, 18, 21, 26, 22, tzinfo=datetime.timezone.utc), 'time_taken': 51663.0, 'time_delta': '14:21:03', 'additions': 2, 'deletions': 2, 'state': 'closed'}]"
