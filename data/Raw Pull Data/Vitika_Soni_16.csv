pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
1376932525,Add Postman add-on,"Related to https://github.com/zaproxy/zaproxy/issues/6960

This is the first PR for my GSoC'23 project - [Import Postman API Definitions into OWASP ZAP](https://summerofcode.withgoogle.com/programs/2023/projects/OlBxaE5X). Please let me know if anyone has any questions/suggestions regarding the project :)

Signed-off-by: VitikaSoni <vitika.program@gmail.com>
",True,4657,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4657,https://github.com/zaproxy/zap-extensions/pull/4657,closed,169,0,12,1,4,8,0,0,[],2023-06-03 12:03:32+00:00,2023-06-04 17:44:28+00:00,106856.0,"1 day, 5:40:56","[{'comment_id': 1215472755, 'comment_body': '`0.0.1`', 'comment_created': datetime.datetime(2023, 6, 3, 12, 10, 11, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215472837, 'comment_body': 'Add `url.set(""https://www.zaproxy.org/docs/desktop/addons/postman-support/"")`', 'comment_created': datetime.datetime(2023, 6, 3, 12, 10, 12, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215472984, 'comment_body': '`2023`', 'comment_created': datetime.datetime(2023, 6, 3, 12, 10, 16, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215473057, 'comment_body': 'Needs update.', 'comment_created': datetime.datetime(2023, 6, 3, 12, 10, 18, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215474722, 'comment_body': 'Would be good to override `getUIName()` too.', 'comment_created': datetime.datetime(2023, 6, 3, 12, 10, 57, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215474975, 'comment_body': 'Use the prefix `addon.*` for the targets.', 'comment_created': datetime.datetime(2023, 6, 3, 12, 11, 6, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215564876, 'comment_body': 'The other `target` references need to be updated to match the new value. The `homeID` too.', 'comment_created': datetime.datetime(2023, 6, 3, 14, 29, 13, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1215579997, 'comment_body': '@thc202 Done', 'comment_created': datetime.datetime(2023, 6, 3, 14, 44, 31, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}]","[{'commit_sha': 'e8aa06d24d00a6cbf9a4c74d5046186d925435d5', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1382579715,postman: Add dialogs for importing through the UI,"Part of https://github.com/zaproxy/zaproxy/issues/6960

Signed-off-by: VitikaSoni <vitika.program@gmail.com>",True,4663,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4663,https://github.com/zaproxy/zap-extensions/pull/4663,closed,409,1,6,1,5,4,0,0,[],2023-06-07 12:28:13+00:00,2023-06-14 10:34:59+00:00,598006.0,"6 days, 22:06:46","[{'comment_id': 1223227778, 'comment_body': ""The null initialization probably isn't necessary."", 'comment_created': datetime.datetime(2023, 6, 8, 15, 39, 41, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1223229401, 'comment_body': 'Some of these resource message names can probably be simplified, MESSAGE_PREFIX already includes ""postman"" ü§∑\u200d‚ôÇÔ∏è', 'comment_created': datetime.datetime(2023, 6, 8, 15, 41, 5, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1223237867, 'comment_body': 'Probably not limited to this class :wink:', 'comment_created': datetime.datetime(2023, 6, 8, 15, 48, 29, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1226864100, 'comment_body': 'I have made some changes üòÑ', 'comment_created': datetime.datetime(2023, 6, 12, 15, 37, 50, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}]","[{'commit_sha': '5df801667ff1126c825d9564cc76dfbd9c6e0b94', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1426077973,postman: Implement parser,"## Overview
This implements the parsing of a Postman definition into a `PostmanCollection` model class. The implementation for extracting the request messages from the Postman collection will be done in a follow-up PR.

## Related Issues
https://github.com/zaproxy/zaproxy/issues/6960

## Checklist
- [x] Update help (N/A)
- [x] Update changelog (N/A)
- [x] Run `./gradlew spotlessApply` for code formatting
- [x] Write tests
- [x] Check code coverage
- [x] Sign-off commits
- [x] Squash commits
- [x] Use a descriptive title",True,4731,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4731,https://github.com/zaproxy/zap-extensions/pull/4731,closed,378,25,10,1,3,0,0,0,[],2023-07-08 21:07:37+00:00,2023-07-12 12:57:45+00:00,316208.0,"3 days, 15:50:08",[],"[{'commit_sha': '6be69b4018a5bcbadf87d6468a67b891a3c757d9', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1447368840,postman: Implement item deserialization,"## Overview
This PR implements deserialization of items of a postman definition into `SingleItem` or `ItemGroup` model classes which are the subclasses of `Item`. The deserializer will ignore the items which doesn't fit into these model classes.


## Related Issues
https://github.com/zaproxy/zaproxy/issues/6960

## Checklist
- [x] Update help (N/A)
- [x] Update changelog (N/A)
- [x] Run `./gradlew spotlessApply` for code formatting
- [x] Write tests
- [x] Check code coverage
- [x] Sign-off commits
- [x] Squash commits
- [x] Use a descriptive title


",True,4760,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4760,https://github.com/zaproxy/zap-extensions/pull/4760,closed,274,5,8,1,3,22,0,0,[],2023-07-24 21:00:10+00:00,2023-07-29 22:06:49+00:00,435999.0,"5 days, 1:06:39","[{'comment_id': 1273921026, 'comment_body': ""Is the node ever a simple string, int, boolean? In those cases is returning an empty arraylist the right choice? [I'm just asking because I know we've hit that elsewhere parsing things like this.]\r\n\r\n@thc202 is List.of() any more efficient or correct here?"", 'comment_created': datetime.datetime(2023, 7, 25, 18, 18, 44, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1274450333, 'comment_body': 'Yes, it would be better to use `List.of()` (if the list is not modified later).', 'comment_created': datetime.datetime(2023, 7, 26, 6, 48, 26, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1274509344, 'comment_body': 'Would be good to add JavaDoc to the model types mentioning which property/type in the Postman schema is this intended to be/hold.', 'comment_created': datetime.datetime(2023, 7, 26, 7, 43, 36, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1274509395, 'comment_body': 'Should be lower case.', 'comment_created': datetime.datetime(2023, 7, 26, 7, 43, 40, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1274510455, 'comment_body': 'Can remove public.', 'comment_created': datetime.datetime(2023, 7, 26, 7, 44, 40, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1274510502, 'comment_body': ""I'd not expect these to be needed."", 'comment_created': datetime.datetime(2023, 7, 26, 7, 44, 43, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1274512826, 'comment_body': ""I'd remove these (less verbose), and add one specifically for that if really needed."", 'comment_created': datetime.datetime(2023, 7, 26, 7, 46, 49, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1275278323, 'comment_body': 'Does this mean we shall return an unmodifiable list at the other two places too?', 'comment_created': datetime.datetime(2023, 7, 26, 17, 25, 22, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1275289070, 'comment_body': 'No, if the list needs to be modifiable leave the code as-is. ', 'comment_created': datetime.datetime(2023, 7, 26, 17, 34, 31, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1275294596, 'comment_body': ""It doesn't"", 'comment_created': datetime.datetime(2023, 7, 26, 17, 40, 3, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1275306889, 'comment_body': ""Then it should use `List.of()` here. I'm not sure which other two places you mean, but it should be simple enough to test/figure out. If they need to be modifiable then use a new ArrayList if not then use List.of()"", 'comment_created': datetime.datetime(2023, 7, 26, 17, 52, 17, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1275360132, 'comment_body': 'It\'s giving `java.lang.NullPointerException: Cannot invoke ""org.parosproxy.paros.control.Control.getExtensionLoader()"" because the return value of ""org.parosproxy.paros.control.Control.getSingleton()"" is null` without these.', 'comment_created': datetime.datetime(2023, 7, 26, 18, 45, 29, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1275392924, 'comment_body': 'I made some changes, please have a look.', 'comment_created': datetime.datetime(2023, 7, 26, 19, 22, 57, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1276293950, 'comment_body': 'The directory still seems to be upper case.', 'comment_created': datetime.datetime(2023, 7, 27, 13, 36, 47, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1276302555, 'comment_body': 'Only `setUpZap()` is necessary for that.', 'comment_created': datetime.datetime(2023, 7, 27, 13, 43, 8, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1276306589, 'comment_body': 'They look good, I would still add a test with malformed JSON.', 'comment_created': datetime.datetime(2023, 7, 27, 13, 45, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1276309522, 'comment_body': '```suggestion\r\n        PostmanCollection collection = assertDoesNotThrow(() -> parser.parse(defn));\r\n        assertEquals(0, collection.getItem().size());\r\n```', 'comment_created': datetime.datetime(2023, 7, 27, 13, 47, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1278357437, 'comment_body': 'How would that be different from these? \r\n\r\nhttps://github.com/zaproxy/zap-extensions/blob/9c044c702a517bf186b8af6794dcd251d5b8fe09/addOns/postman/src/test/java/org/zaproxy/addon/postman/PostmanParserUnitTest.java#L45C1-L49C6\r\n\r\nhttps://github.com/zaproxy/zap-extensions/blob/9c044c702a517bf186b8af6794dcd251d5b8fe09/addOns/postman/src/test/java/org/zaproxy/addon/postman/PostmanParserUnitTest.java#L67C5-L72C6', 'comment_created': datetime.datetime(2023, 7, 29, 18, 36, 52, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1278358102, 'comment_body': 'Forgot about those hehe All looks good then.', 'comment_created': datetime.datetime(2023, 7, 29, 18, 39, 28, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1278358538, 'comment_body': 'Okay üòÑ', 'comment_created': datetime.datetime(2023, 7, 29, 18, 45, 47, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1278366828, 'comment_body': ""I renamed that but don't know why it was not tracked by git. Worked by moving the files to a temp folder and then renaming that."", 'comment_created': datetime.datetime(2023, 7, 29, 18, 51, 47, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1278367341, 'comment_body': 'I believe that happens because Windows file system is case insensitive.', 'comment_created': datetime.datetime(2023, 7, 29, 18, 53, 47, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}]","[{'commit_sha': '1a036d635d1a840ee5af49db0fab0a2081bca8d5', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1458260299,postman: Implement request deserialization,"## Overview
- Renamed `AbstractItemDeserializer` to `ListDeserializer` and made it usable for subclasses of the newly created `AbstractListElement` class
- Created a new `ObjectDeserializer` to ignore an object when its signature doesn't match, rather than throwing an exception
- Created the necessary model classes to deserialize the request
- Upgraded the Jackson version

## Related Issues
https://github.com/zaproxy/zaproxy/issues/6960

## Checklist
- [x] Update help (N/A)
- [x] Update changelog (N/A)
- [x] Run `./gradlew spotlessApply` for code formatting
- [x] Write tests
- [x] Check code coverage
- [x] Sign-off commits
- [x] Squash commits
- [x] Use a descriptive title",True,4777,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4777,https://github.com/zaproxy/zap-extensions/pull/4777,closed,599,20,12,1,6,10,0,0,[],2023-08-01 14:49:32+00:00,2023-08-15 19:19:48+00:00,1225816.0,"14 days, 4:30:16","[{'comment_id': 1280953796, 'comment_body': 'This can be removed now, provided by the `commonlib` add-on.', 'comment_created': datetime.datetime(2023, 8, 1, 17, 38, 50, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1281875197, 'comment_body': 'Done', 'comment_created': datetime.datetime(2023, 8, 2, 13, 2, 59, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1281916091, 'comment_body': ""Should this just be done at declaration? (like line 57 above)\r\n\r\nAlso there's probably a core constant for most methods/verbs."", 'comment_created': datetime.datetime(2023, 8, 2, 13, 34, 43, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1281917340, 'comment_body': ""Should probably be `toUpperCase(Locale.ROOT);` (I think that's the syntax, you might have to dbl check)."", 'comment_created': datetime.datetime(2023, 8, 2, 13, 35, 39, tzinfo=datetime.timezone.utc), 'commenter': 'kingthorin', 'type': 'User'}, {'comment_id': 1282182722, 'comment_body': 'I have checked, the one you suggested is correct üôÇ. It is used [here](https://github.com/zaproxy/zaproxy/blob/ba770771d7283ec0fc5a45d18f9e1304829b4ae1/zap/src/main/java/org/parosproxy/paros/network/HttpRequestHeader.java#L332) and also suggested in the java doc.', 'comment_created': datetime.datetime(2023, 8, 2, 16, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1291685198, 'comment_body': 'For the type we use `GraphQl` and for the variable `graphQl`, in other places of the codebase.', 'comment_created': datetime.datetime(2023, 8, 11, 18, 55, 20, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1291685503, 'comment_body': ""That's the default, is it really needed here that's a primitive?"", 'comment_created': datetime.datetime(2023, 8, 11, 18, 55, 40, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1291685700, 'comment_body': '`Object` ‚Üí `GraphQL`?', 'comment_created': datetime.datetime(2023, 8, 11, 18, 55, 50, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1291686724, 'comment_body': '`‚Ä¶ = language;`? Would be good to have tests deserializing all these objects (though I expect that to be added later so not a requirement).', 'comment_created': datetime.datetime(2023, 8, 11, 18, 57, 11, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1291687366, 'comment_body': ""I don't think we need to validate/constraint here, core allows anything."", 'comment_created': datetime.datetime(2023, 8, 11, 18, 58, 11, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}]","[{'commit_sha': '29f1626f3fd50f264c19f4f10edb0cca443a6daf', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1488836326,postman: Implement sending http requests,"## Related Issues
https://github.com/zaproxy/zaproxy/issues/6960

## Checklist
- [x] Update help (N/A)
- [x] Update changelog  (N/A)
- [x] Run `./gradlew spotlessApply` for code formatting
- [x] Write tests
- [x] Check code coverage
- [x] Sign-off commits
- [x] Squash commits
- [x] Use a descriptive title

",True,4847,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4847,https://github.com/zaproxy/zap-extensions/pull/4847,closed,510,3,8,1,8,55,0,0,[],2023-08-25 00:06:54+00:00,2023-09-14 15:47:27+00:00,1784433.0,"20 days, 15:40:33","[{'comment_id': 1305390680, 'comment_body': '`HttpHeader.CRLF`.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305390709, 'comment_body': '`static`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 33, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305390740, 'comment_body': '`private`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 35, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305390766, 'comment_body': '`HttpHeader.CONTENT_TYPE`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 37, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305390957, 'comment_body': 'If `request` can be `null` this needs to be done after the if. Although request is a required filed, should we fail/warn instead? We should talk about error reporting.\r\nTests are needed to cover the different representations (e.g. request as object and as string, same for other properties).', 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 48, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305391098, 'comment_body': ""- I'd have expected the raw URL to be escaped/encoded already. Did you check that it isn't?\r\n- The path variables are not being handled yet, add a task?"", 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305391149, 'comment_body': 'These should be moved to after the following if.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 56, 59, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305391207, 'comment_body': 'Was the body check meant for the previous if?', 'comment_created': datetime.datetime(2023, 8, 25, 8, 57, 2, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305391286, 'comment_body': 'Worth extracting constants, though I guess we could use an enum (if the latter better in other PR though).', 'comment_created': datetime.datetime(2023, 8, 25, 8, 57, 6, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305391856, 'comment_body': 'Extract a constant. Is this documented somewhere? The schema does not seem to have these.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 57, 39, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305391970, 'comment_body': 'Use `Locale.ROOT` although it could be used unchanged?', 'comment_created': datetime.datetime(2023, 8, 25, 8, 57, 46, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305392819, 'comment_body': 'The `HttpHeader` has constant.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 58, 36, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305392866, 'comment_body': 'Append as char (same for `=`).', 'comment_created': datetime.datetime(2023, 8, 25, 8, 58, 39, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305393022, 'comment_body': 'Could use `HttpHeader` constant for the first part.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 58, 48, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305393103, 'comment_body': 'Use `httpMessage.getRequestBody().length()` instead, number of bytes might be difference from the number of characters.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 58, 53, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305393143, 'comment_body': '`private`', 'comment_created': datetime.datetime(2023, 8, 25, 8, 58, 55, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305393219, 'comment_body': 'Usually added before instance variables.', 'comment_created': datetime.datetime(2023, 8, 25, 8, 59, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1305688901, 'comment_body': 'Request is required, will remove the null check. ', 'comment_created': datetime.datetime(2023, 8, 25, 13, 50, 27, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1305792381, 'comment_body': 'But we should still validate that we have one, the user can try import an invalid collection. Regarding the error reporting, I think that can be done in a follow up PR.', 'comment_created': datetime.datetime(2023, 8, 25, 15, 13, 12, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1306707714, 'comment_body': '> But we should still validate that we have one, the user can try import an invalid collection.\r\n\r\nI believe [this](https://github.com/zaproxy/zap-extensions/blob/ed8f0469cd7ed4bfcafda99849736ab138942861/addOns/postman/src/test/java/org/zaproxy/addon/postman/ListDeserializerUnitTest.java#L62) covers it, no?', 'comment_created': datetime.datetime(2023, 8, 27, 18, 56, 17, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1306708425, 'comment_body': 'There is no const for `multipart/form-data`', 'comment_created': datetime.datetime(2023, 8, 27, 19, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1306709428, 'comment_body': '> * I\'d have expected the raw URL to be escaped/encoded already. Did you check that it isn\'t?\r\n\r\nNo, they are not escaped. Shall I do `URLEncoder.encode(rawUrl, ""UTF-8"")`?\r\n\r\n> * The path variables are not being handled yet, add a task?\r\n\r\nYes, adding a task.\r\n\r\n', 'comment_created': datetime.datetime(2023, 8, 27, 19, 12, 1, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1306711303, 'comment_body': 'Found [this](https://github.com/postmanlabs/schemas/blob/da7578c2d71c46de2d39d04fbeebc26570591a44/schemas/draft-07/v2.1.0/collection/request.json#L72) link from the doc', 'comment_created': datetime.datetime(2023, 8, 27, 19, 29, 28, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1306711941, 'comment_body': 'I created constants as we also needed to check if the given mode is in the allowed modes.', 'comment_created': datetime.datetime(2023, 8, 27, 19, 34, 57, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1307163029, 'comment_body': ""Are you sure it's not escaped? The URI class already encodes/escapes but that will lead to incorrect encoding as different characters have different meaning depending on where they are."", 'comment_created': datetime.datetime(2023, 8, 28, 9, 10, 51, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1307167151, 'comment_body': 'There is (https://github.com/zaproxy/zaproxy/blob/76893768eb9c891c7e1c9e0e2aaaeb6429386914/zap/src/main/java/org/parosproxy/paros/network/HttpHeader.java#L102) but it was only added recently, it will have to be done for/after 2.14.', 'comment_created': datetime.datetime(2023, 8, 28, 9, 14, 54, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1307171421, 'comment_body': ""But that does not document what's being done here."", 'comment_created': datetime.datetime(2023, 8, 28, 9, 18, 14, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1307177686, 'comment_body': ""That confirms it's able to parse without the `request` but not that it's able to import it (for that it would have to call `importCollection(String)`)."", 'comment_created': datetime.datetime(2023, 8, 28, 9, 24, 3, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1310309917, 'comment_body': 'This is addressed per talk in the meeting, thank you!', 'comment_created': datetime.datetime(2023, 8, 30, 13, 45, 50, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1310310198, 'comment_body': 'Same here :)', 'comment_created': datetime.datetime(2023, 8, 30, 13, 46, 2, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1310311185, 'comment_body': 'As discussed in the weekly call, the URLs are getting encoded when imported in ZAP. I am resolving this conversation.', 'comment_created': datetime.datetime(2023, 8, 30, 13, 46, 40, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1310318901, 'comment_body': 'As discussed in the weekly call, Postman automatically attaches the `Content-type` header (which is documented [here](https://learning.postman.com/docs/sending-requests/requests/#sending-body-data), therefore I am resolving this comment.', 'comment_created': datetime.datetime(2023, 8, 30, 13, 51, 37, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1323360100, 'comment_body': 'Not actually a test, on purpose?', 'comment_created': datetime.datetime(2023, 9, 12, 17, 33, 27, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324174692, 'comment_body': ""Didn't get. It is testing if the given content type is not getting overridden by the actual one."", 'comment_created': datetime.datetime(2023, 9, 13, 8, 36, 37, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1324176849, 'comment_body': 'Does not have the `@Test` annotation.', 'comment_created': datetime.datetime(2023, 9, 13, 8, 38, 23, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324419936, 'comment_body': 'Let it be package instead of public.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 14, 12, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324419962, 'comment_body': 'Same.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 14, 13, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324423817, 'comment_body': 'Append as char.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 17, 39, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324423865, 'comment_body': 'Append as char.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 17, 41, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324424627, 'comment_body': 'Use `append`.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 18, 26, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324426004, 'comment_body': 'Use `Body.FILE`?', 'comment_created': datetime.datetime(2023, 9, 13, 12, 19, 32, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324427604, 'comment_body': '`formDataBody`', 'comment_created': datetime.datetime(2023, 9, 13, 12, 20, 59, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324427628, 'comment_body': 'Would be better to pass the `StringBuilder`, though not needed for this PR (requires more changes).', 'comment_created': datetime.datetime(2023, 9, 13, 12, 21, 1, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324428466, 'comment_body': '`multipartData`.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 21, 46, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324429556, 'comment_body': 'Should still extract a constant.', 'comment_created': datetime.datetime(2023, 9, 13, 12, 22, 42, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324751161, 'comment_body': 'Just want to confirm, do you mean that I should have passed the `formDataBodySB` to `generateMultiPartBody` to let it handle the multipart body generation instead of having to use it for every `FormData` in a loop?\r\n_Edit_: Forgot to mention - not doing in this PR, adding a task.', 'comment_created': datetime.datetime(2023, 9, 13, 16, 5, 53, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1324840899, 'comment_body': ' Yes, to reuse it inside the method, instead of appending outside a new string it would append directly to it (less string allocations).', 'comment_created': datetime.datetime(2023, 9, 13, 17, 22, 31, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324842554, 'comment_body': ""Keeping the previous order (i.e. `Body.FILE.equals(formData.getType())`) would be better, to handle the case when `getType()` returns null (that's not being checked beforehand)."", 'comment_created': datetime.datetime(2023, 9, 13, 17, 24, 5, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324844326, 'comment_body': ""Giving that this is going to be fixed shortly I don't think it's necessary to add it now."", 'comment_created': datetime.datetime(2023, 9, 13, 17, 25, 48, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1324907264, 'comment_body': ""I think I didn't get it. Constant for what?"", 'comment_created': datetime.datetime(2023, 9, 13, 18, 24, 33, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}, {'comment_id': 1324934136, 'comment_body': ""From `contentTypeMap`, that's effectively a constant."", 'comment_created': datetime.datetime(2023, 9, 13, 18, 50, 22, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1326099514, 'comment_body': '`CONTENT_TYPE_MAP`', 'comment_created': datetime.datetime(2023, 9, 14, 15, 3, 54, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1326132514, 'comment_body': 'Oops, done! :)', 'comment_created': datetime.datetime(2023, 9, 14, 15, 28, 17, tzinfo=datetime.timezone.utc), 'commenter': 'VitikaSoni', 'type': 'User'}]","[{'commit_sha': 'd5210e5bc4ea100fdb4ab58fe503e0f08768d549', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1520180870,postman: Implement error reporting,"## Related Issues
https://github.com/zaproxy/zaproxy/issues/6960

## Checklist
- [x] Update help (N/A)
- [x] Update changelog  (N/A)
- [x] Run `./gradlew spotlessApply` for code formatting
- [x] Write tests
- [x] Check code coverage  (N/A)
- [x] Sign-off commits
- [x] Squash commits
- [x] Use a descriptive title

For more details, please refer to the [developer rules and guidelines](https://www.zaproxy.org/docs/developer/dev-rules-and-guidelines/).
",True,4906,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4906,https://github.com/zaproxy/zap-extensions/pull/4906,closed,225,41,6,1,5,10,0,0,[],2023-09-18 20:31:05+00:00,2023-09-22 15:39:58+00:00,328133.0,"3 days, 19:08:53","[{'comment_id': 1331685702, 'comment_body': 'Note that the latter part of the error messages (e.g. `url is not present`) also needs to be in the `Messages.properties` file.', 'comment_created': datetime.datetime(2023, 9, 20, 14, 2, 6, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1333991445, 'comment_body': 'Should be removed.', 'comment_created': datetime.datetime(2023, 9, 22, 7, 31, 19, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1333991527, 'comment_body': 'Should be removed.', 'comment_created': datetime.datetime(2023, 9, 22, 7, 31, 21, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1333991680, 'comment_body': '`isEmpty()`', 'comment_created': datetime.datetime(2023, 9, 22, 7, 31, 27, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1333991915, 'comment_body': "" - `outputErrors`? Not logging them.\r\n - This should only be done if there's view."", 'comment_created': datetime.datetime(2023, 9, 22, 7, 31, 36, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1333992042, 'comment_body': '`Stream<String>`', 'comment_created': datetime.datetime(2023, 9, 22, 7, 31, 43, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1333996484, 'comment_body': 'Would be good to also verify the message, or at least setup the tests to verify that the key exists (you can use existing code by calling `mockMessages`).', 'comment_created': datetime.datetime(2023, 9, 22, 7, 35, 17, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1334009394, 'comment_body': 'This could be done in the following call. ', 'comment_created': datetime.datetime(2023, 9, 22, 7, 42, 48, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1334012119, 'comment_body': 'And the API should return them.', 'comment_created': datetime.datetime(2023, 9, 22, 7, 45, 36, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1334027441, 'comment_body': 'Maybe be more explicit and say `‚Ä¶ field is ‚Ä¶`?', 'comment_created': datetime.datetime(2023, 9, 22, 8, 0, 1, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}]","[{'commit_sha': '8d57f1e9b6daf7abceb9972bab879c7c947c41b8', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12
1525569530,postman: Adding variables support,"## Overview
The import dialog will now allow providing a comma-separated list of variables as key-value pairs in the format `key1=value1,key2=value2,...`

## Related Issues
https://github.com/zaproxy/zaproxy/issues/6960

## Checklist
- [x] Update help
- [x] Update changelog (N/A)
- [x] Run `./gradlew spotlessApply` for code formatting
- [x] Write tests
- [x] Check code coverage
- [x] Sign-off commits
- [x] Squash commits
- [x] Use a descriptive title
",True,4917,https://api.github.com/repos/zaproxy/zap-extensions/pulls/4917,https://github.com/zaproxy/zap-extensions/pull/4917,closed,126,14,5,1,2,4,0,0,[],2023-09-21 20:59:45+00:00,2023-09-22 17:57:10+00:00,75445.0,20:57:25,"[{'comment_id': 1334044843, 'comment_body': 'Should be adding a new field not replace the target? (Even if the target is not used right now it should at some point, maybe hide instead of replacing).', 'comment_created': datetime.datetime(2023, 9, 22, 8, 13, 9, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1334046130, 'comment_body': 'Doing this before parsing might cause the values to break the JSON (e.g. variable value as `\\`), it would be better to that after parsing.', 'comment_created': datetime.datetime(2023, 9, 22, 8, 13, 46, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1334046422, 'comment_body': '`API`', 'comment_created': datetime.datetime(2023, 9, 22, 8, 13, 54, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}, {'comment_id': 1334048865, 'comment_body': 'Preferable add these comments before the lines (which has more space, otherwise they might end up being split into multiple lines which makes it hard to read).', 'comment_created': datetime.datetime(2023, 9, 22, 8, 15, 1, tzinfo=datetime.timezone.utc), 'commenter': 'thc202', 'type': 'User'}]","[{'commit_sha': '30587a592742bc64c57e254674c57e8c25ff5750', 'committer_username': 'VitikaSoni', 'committer_name': 'Vitika Soni', 'committer_email': 'vitika.program@gmail.com', 'commit_date': datetime.datetime(2021, 2, 27, 16, 55, 9, tzinfo=datetime.timezone.utc)}]",Vitika Soni,79760854,vitika.program@gmail.com,User,,22,,6,12

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
35210580,zap-extensions,zaproxy/zap-extensions,Java,679,821,55,239,12845,42,1,42,"[{'id': 1616973465, 'number': 5120, 'closed': datetime.datetime(2024, 3, 19, 10, 51, 38, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 11, 26, 17, 50, 46, tzinfo=datetime.timezone.utc), 'time_taken': 9824452.0, 'time_delta': '113 days, 17:00:52', 'additions': 693, 'deletions': 1, 'state': 'closed'}, {'id': 1536712261, 'number': 4953, 'closed': datetime.datetime(2023, 10, 4, 7, 54, 9, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 30, 21, 23, 27, tzinfo=datetime.timezone.utc), 'time_taken': 297042.0, 'time_delta': '3 days, 10:30:42', 'additions': 238, 'deletions': 64, 'state': 'closed'}, {'id': 1525569530, 'number': 4917, 'closed': datetime.datetime(2023, 9, 22, 17, 57, 10, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 21, 20, 59, 45, tzinfo=datetime.timezone.utc), 'time_taken': 75445.0, 'time_delta': '20:57:25', 'additions': 126, 'deletions': 14, 'state': 'closed'}, {'id': 1520180870, 'number': 4906, 'closed': datetime.datetime(2023, 9, 22, 15, 39, 58, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 18, 20, 31, 5, tzinfo=datetime.timezone.utc), 'time_taken': 328133.0, 'time_delta': '3 days, 19:08:53', 'additions': 225, 'deletions': 41, 'state': 'closed'}, {'id': 1518533122, 'number': 4901, 'closed': datetime.datetime(2023, 9, 23, 7, 39, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 17, 16, 21, 45, tzinfo=datetime.timezone.utc), 'time_taken': 487038.0, 'time_delta': '5 days, 15:17:18', 'additions': 67, 'deletions': 8, 'state': 'closed'}, {'id': 1515970407, 'number': 4895, 'closed': datetime.datetime(2023, 9, 14, 16, 11, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 9, 14, 15, 52, 30, tzinfo=datetime.timezone.utc), 'time_taken': 1163.0, 'time_delta': '0:19:23', 'additions': 15, 'deletions': 12, 'state': 'closed'}, {'id': 1488836326, 'number': 4847, 'closed': datetime.datetime(2023, 9, 14, 15, 47, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 25, 0, 6, 54, tzinfo=datetime.timezone.utc), 'time_taken': 1784433.0, 'time_delta': '20 days, 15:40:33', 'additions': 510, 'deletions': 3, 'state': 'closed'}, {'id': 1458260299, 'number': 4777, 'closed': datetime.datetime(2023, 8, 15, 19, 19, 48, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 8, 1, 14, 49, 32, tzinfo=datetime.timezone.utc), 'time_taken': 1225816.0, 'time_delta': '14 days, 4:30:16', 'additions': 599, 'deletions': 20, 'state': 'closed'}, {'id': 1447368840, 'number': 4760, 'closed': datetime.datetime(2023, 7, 29, 22, 6, 49, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 24, 21, 0, 10, tzinfo=datetime.timezone.utc), 'time_taken': 435999.0, 'time_delta': '5 days, 1:06:39', 'additions': 274, 'deletions': 5, 'state': 'closed'}, {'id': 1426077973, 'number': 4731, 'closed': datetime.datetime(2023, 7, 12, 12, 57, 45, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 8, 21, 7, 37, tzinfo=datetime.timezone.utc), 'time_taken': 316208.0, 'time_delta': '3 days, 15:50:08', 'additions': 378, 'deletions': 25, 'state': 'closed'}, {'id': 1416890217, 'number': 4712, 'closed': datetime.datetime(2023, 7, 3, 16, 59, 19, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 7, 2, 19, 56, 32, tzinfo=datetime.timezone.utc), 'time_taken': 75767.0, 'time_delta': '21:02:47', 'additions': 81, 'deletions': 0, 'state': 'closed'}, {'id': 1397162389, 'number': 4683, 'closed': datetime.datetime(2023, 6, 20, 12, 52, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 18, 14, 28, 26, tzinfo=datetime.timezone.utc), 'time_taken': 167017.0, 'time_delta': '1 day, 22:23:37', 'additions': 74, 'deletions': 1, 'state': 'closed'}, {'id': 1395926064, 'number': 4682, 'closed': datetime.datetime(2023, 6, 28, 13, 23, 27, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 16, 15, 34, tzinfo=datetime.timezone.utc), 'time_taken': 1028967.0, 'time_delta': '11 days, 21:49:27', 'additions': 17, 'deletions': 0, 'state': 'closed'}, {'id': 1382579715, 'number': 4663, 'closed': datetime.datetime(2023, 6, 14, 10, 34, 59, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 7, 12, 28, 13, tzinfo=datetime.timezone.utc), 'time_taken': 598006.0, 'time_delta': '6 days, 22:06:46', 'additions': 409, 'deletions': 1, 'state': 'closed'}, {'id': 1376932525, 'number': 4657, 'closed': datetime.datetime(2023, 6, 4, 17, 44, 28, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 6, 3, 12, 3, 32, tzinfo=datetime.timezone.utc), 'time_taken': 106856.0, 'time_delta': '1 day, 5:40:56', 'additions': 169, 'deletions': 0, 'state': 'closed'}, {'id': 1361905759, 'number': 4620, 'closed': datetime.datetime(2023, 5, 23, 20, 24, 54, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 23, 19, 3, 37, tzinfo=datetime.timezone.utc), 'time_taken': 4877.0, 'time_delta': '1:21:17', 'additions': 64, 'deletions': 84, 'state': 'closed'}, {'id': 1353823379, 'number': 4606, 'closed': datetime.datetime(2023, 6, 12, 15, 2, 53, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 5, 17, 9, 41, 6, tzinfo=datetime.timezone.utc), 'time_taken': 2265707.0, 'time_delta': '26 days, 5:21:47', 'additions': 262, 'deletions': 4, 'state': 'closed'}, {'id': 1230094025, 'number': 4402, 'closed': datetime.datetime(2023, 3, 13, 16, 45, 3, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2023, 2, 6, 9, 7, 49, tzinfo=datetime.timezone.utc), 'time_taken': 3051434.0, 'time_delta': '35 days, 7:37:14', 'additions': 109, 'deletions': 4, 'state': 'closed'}]"
