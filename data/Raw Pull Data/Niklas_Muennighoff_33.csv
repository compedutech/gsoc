pr_id,pr_title,pr_body,is_merged,pr_number,pr_url,pr_html_url,pr_state,additions,deletions,pr_changed_files,pr_commits_count,pr_comments_count,pr_review_comments_count,pr_labels_count,pr_assignees_count,pr_labels,pr_created_at,pr_closed_at,time_taken,time_delta,pr_review_comments,pr_commits,contributor,contributor_id,contributor_email,contributor_type,contributions,contributor_public_repos,contributor_private_repos,contributor_followings,contributor_followers
684310243,Add Trippy to DeepPavlov,"This PR adds a new Go Bot to DeepPavlov: Trippy üéàüéâ

I appreciate any comments!

Links for more information:

Trippy: https://arxiv.org/abs/2005.02877
Gsoc: https://summerofcode.withgoogle.com/projects/#4701204728250368",True,1464,https://api.github.com/repos/deeppavlov/DeepPavlov/pulls/1464,https://github.com/deeppavlov/DeepPavlov/pull/1464,closed,7517,6,20,41,2,37,0,1,[],2021-07-06 11:55:02+00:00,2021-08-18 06:13:33+00:00,3694711.0,"42 days, 18:18:31","[{'comment_id': 667568815, 'comment_body': 'still I believe that this change should be reversed: all the model specific logic should be done in the model code', 'comment_created': datetime.datetime(2021, 7, 12, 1, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 667569165, 'comment_body': 'this should be implemented as dataset_reader or dataset_iterator', 'comment_created': datetime.datetime(2021, 7, 12, 1, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 668991929, 'comment_body': 'The whole preprocessing file? ', 'comment_created': datetime.datetime(2021, 7, 13, 17, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 668993267, 'comment_body': 'Alternatively what about we wrap the normal nlg manage as a verbose_response object? So that the text of both can be accessed via .text\r\nI just think the return type for decode() should be the same if its the json nlg manager or the normal nlg manager', 'comment_created': datetime.datetime(2021, 7, 13, 18, 0, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 671981473, 'comment_body': 'The problem is though that we also feed it through the trippy preprocessing when you just call the go bot with e.g. bot([""Hi"")\r\nThis data does not pass by the dataset_reader or dataset_iterator if I\'m not mistaken so we couldn\'t preprocess it.\r\n\r\nWe could possibly implement as its own chainer element before the trippy model, but then I\'m\r\na) Not sure if they get called when we call the model?\r\nb) There would be no real benefit to the decoupling in the chain, as you would never use the trippy preprocessing without also using the trippy', 'comment_created': datetime.datetime(2021, 7, 19, 4, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684620715, 'comment_body': 'lets discuss it in zoom', 'comment_created': datetime.datetime(2021, 8, 7, 11, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684625834, 'comment_body': '`api call` is the part of the bot in trippy and part of DST in trippy.', 'comment_created': datetime.datetime(2021, 8, 7, 12, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684627276, 'comment_body': ""we don't really need to process several dialogues at a time, so batch here represents a single utterance in a dialog. should this really be called a `batch`"", 'comment_created': datetime.datetime(2021, 8, 7, 12, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684628169, 'comment_body': 'this refers only to the dialogue state.', 'comment_created': datetime.datetime(2021, 8, 7, 12, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684628334, 'comment_body': 'here we handle the alternative make_api_call', 'comment_created': datetime.datetime(2021, 8, 7, 12, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684628688, 'comment_body': '```suggestion\r\n        loss, _,_,_,_,_,_, action_loss = outputs\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 12, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629394, 'comment_body': 'please, introduce the DialogueState class, it will be storing both the info from .ds and .ds_logits, and also do the preprocessing from lines 340-355', 'comment_created': datetime.datetime(2021, 8, 7, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629626, 'comment_body': 'we could probs move it to the init', 'comment_created': datetime.datetime(2021, 8, 7, 12, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629702, 'comment_body': 'we could move it to the init fn too', 'comment_created': datetime.datetime(2021, 8, 7, 12, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629788, 'comment_body': 'we could move these to init', 'comment_created': datetime.datetime(2021, 8, 7, 12, 53, 44, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629829, 'comment_body': 'this one goes to the init too', 'comment_created': datetime.datetime(2021, 8, 7, 12, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630116, 'comment_body': 'smth similar to the dataclass', 'comment_created': datetime.datetime(2021, 8, 7, 12, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630417, 'comment_body': '```suggestion\r\n            if intent[""slots""] :\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 13, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630696, 'comment_body': 'Multi Hot Encoding, I went to French restaurant -> 0 0 0 1 0', 'comment_created': datetime.datetime(2021, 8, 7, 13, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630860, 'comment_body': 'either `log` this or include in the error message', 'comment_created': datetime.datetime(2021, 8, 7, 13, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684631888, 'comment_body': ""```suggestion\r\n        # we don't actually support ROBERTA here, so <s>s wont actually appear\r\n        token_label_ids = []\r\n```"", 'comment_created': datetime.datetime(2021, 8, 7, 13, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684631916, 'comment_body': '```suggestion\r\n        # Account for <s>, </s></s>, </s></s>, </s> with ""- 6"" (RoBERTa) (we don\'t actually support roberta)\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 13, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684631982, 'comment_body': ""```suggestion\r\n            class_type = 'none'\r\n```"", 'comment_created': datetime.datetime(2021, 8, 7, 13, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684632342, 'comment_body': '```suggestion\r\n        # trippy still expects the slots list so even if we don\'t want to do slots prediction we will mock it w smth\r\n        slot_list = [""dummy""]\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 13, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684661479, 'comment_body': ""Ah actually I just realized it's better to keep it separated as we're adding the huggingface outputs, i.e.\r\n`outputs = (total_loss,) + (per_slot_per_example_loss, per_slot_class_logits, per_slot_start_logits, per_slot_end_logits, per_slot_refer_logits, action_logits, action_loss,) + outputs[2:]`\r\n\r\nSo depending on the huggingface version it may vary how long outputs[2:] is.."", 'comment_created': datetime.datetime(2021, 8, 7, 18, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661553, 'comment_body': 'Now logged!', 'comment_created': datetime.datetime(2021, 8, 7, 18, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661683, 'comment_body': 'Clarified this', 'comment_created': datetime.datetime(2021, 8, 7, 18, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661816, 'comment_body': 'Clarified this point', 'comment_created': datetime.datetime(2021, 8, 7, 18, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661974, 'comment_body': 'Removedüëç', 'comment_created': datetime.datetime(2021, 8, 7, 18, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662030, 'comment_body': 'Already explained in other commentüëç', 'comment_created': datetime.datetime(2021, 8, 7, 18, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662083, 'comment_body': 'Added explanations to the docstringüëç', 'comment_created': datetime.datetime(2021, 8, 7, 18, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662650, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662658, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662782, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662804, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662894, 'comment_body': 'Renamed to `trippy_input`', 'comment_created': datetime.datetime(2021, 8, 7, 18, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684737596, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 8, 8, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}]","[{'commit_sha': '5dbdf6a9aaddfc816ab80cf5d9e129fe5ed4a6a3', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03332879351686e3d4fe1f5cb988820aae814d05', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9c2644187d113047b66350c50930da56d8fe8f2', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '160739fc30f9034e6eee4900be266d275c217c4d', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1622a69191dfcc1f36d46e33f2b8232e082ca66a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42256674610b711759bf978649f160651dd157e3', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2220760df04f8e41b5dcb60cb7588c786c71e829', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '476907c31ac28ee73c72503a1db9f6c537cf0519', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c6884ac0ac0e887b38213f939071a7a810dfe9', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c374f659d1afdd7585cb11e96f7efd7855cf0d1b', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aacb9e055167f3cb281dfe4283bb9eda211bc5c', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f836ff5b474a2995ac385f93277da1ac3a73ff', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6f18b893f8ff95c5e1f461538a48a38af038bcc', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33258fb63161d02824144e8fab76b30e45a9d39a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9df55d491c0e49895e5f1569b4b15e68a612d1', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6dbbbb75f5dd774b808dbd672632fd780ea4a7a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c087a80e06b42737c669e40e4a83849ad549f11', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7c017c467568d66c7236c09a553ae019444402', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e64ffd2f39975e41f7b0264a3cdfb60d32278bfe', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c8f3849b51112f4e2c2c5c8500284247b837610', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '142f6f7e3b9b135c5d4f096528bcddf59605a5b2', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43e29f2cab2daadfaf3b8e239840601e73f68ec3', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39d044673c27a124eb5d4aa81c7a00a8e6de97e4', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54922f96852e4cc0db03174a32eb5329525a8453', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8be6585b9298b6b17fb71dda554bf0c3c2b56aec', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5ecf272f25224c6db0247068f211868a32bbd5a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9e140ac4efc09fd60c7cf8183d4293a9f7b239', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72499842a1315f795030605a8a214bea8a91f6e0', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551751be2f7e1c856606730e63099309e743a6c9', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d066a5528497408493d4c1738fd4993fb463772', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2fd8c701f774fc5179df148cd37dc2ef3e9880', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a937201cd1039f820c13c95c686dc0213c711136', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b05a02e2fb3cf1a61ac49b057381184614753aa', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aafe0e943162df40c1fb1ed6814a8da55da66ad6', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbbcf53a6263fdabc9e8be4094d25c6b70b120fa', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7432ea6fc5945e6a502d2b28ce6fb05d3ba30ed0', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fadfe5a901e932b47d19008fac77789a5675dd8a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdfd8900cfdb9d49fa3bbc087eb6efe6862e543a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e2ad413b1811d867c0029847038a7bfa51c5684', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49984f582de46da279af1109638eb8280dd2dcbe', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72e17d0a9b857675861277b0bc6a61d0f1efc100', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}]",Niklas Muennighoff,62820084,n.muennighoff@gmail.com,User,,61,,5,190
684310243,Add Trippy to DeepPavlov,"This PR adds a new Go Bot to DeepPavlov: Trippy üéàüéâ

I appreciate any comments!

Links for more information:

Trippy: https://arxiv.org/abs/2005.02877
Gsoc: https://summerofcode.withgoogle.com/projects/#4701204728250368",True,1464,https://api.github.com/repos/deeppavlov/DeepPavlov/pulls/1464,https://github.com/deeppavlov/DeepPavlov/pull/1464,closed,7517,6,20,41,2,37,0,1,[],2021-07-06 11:55:02+00:00,2021-08-18 06:13:33+00:00,3694711.0,"42 days, 18:18:31","[{'comment_id': 667568815, 'comment_body': 'still I believe that this change should be reversed: all the model specific logic should be done in the model code', 'comment_created': datetime.datetime(2021, 7, 12, 1, 20, 9, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 667569165, 'comment_body': 'this should be implemented as dataset_reader or dataset_iterator', 'comment_created': datetime.datetime(2021, 7, 12, 1, 21, 43, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 668991929, 'comment_body': 'The whole preprocessing file? ', 'comment_created': datetime.datetime(2021, 7, 13, 17, 58, 3, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 668993267, 'comment_body': 'Alternatively what about we wrap the normal nlg manage as a verbose_response object? So that the text of both can be accessed via .text\r\nI just think the return type for decode() should be the same if its the json nlg manager or the normal nlg manager', 'comment_created': datetime.datetime(2021, 7, 13, 18, 0, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 671981473, 'comment_body': 'The problem is though that we also feed it through the trippy preprocessing when you just call the go bot with e.g. bot([""Hi"")\r\nThis data does not pass by the dataset_reader or dataset_iterator if I\'m not mistaken so we couldn\'t preprocess it.\r\n\r\nWe could possibly implement as its own chainer element before the trippy model, but then I\'m\r\na) Not sure if they get called when we call the model?\r\nb) There would be no real benefit to the decoupling in the chain, as you would never use the trippy preprocessing without also using the trippy', 'comment_created': datetime.datetime(2021, 7, 19, 4, 38, 25, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684620715, 'comment_body': 'lets discuss it in zoom', 'comment_created': datetime.datetime(2021, 8, 7, 11, 19, 25, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684625834, 'comment_body': '`api call` is the part of the bot in trippy and part of DST in trippy.', 'comment_created': datetime.datetime(2021, 8, 7, 12, 14, 24, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684627276, 'comment_body': ""we don't really need to process several dialogues at a time, so batch here represents a single utterance in a dialog. should this really be called a `batch`"", 'comment_created': datetime.datetime(2021, 8, 7, 12, 28, 54, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684628169, 'comment_body': 'this refers only to the dialogue state.', 'comment_created': datetime.datetime(2021, 8, 7, 12, 37, 35, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684628334, 'comment_body': 'here we handle the alternative make_api_call', 'comment_created': datetime.datetime(2021, 8, 7, 12, 39, 23, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684628688, 'comment_body': '```suggestion\r\n        loss, _,_,_,_,_,_, action_loss = outputs\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 12, 42, 47, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629394, 'comment_body': 'please, introduce the DialogueState class, it will be storing both the info from .ds and .ds_logits, and also do the preprocessing from lines 340-355', 'comment_created': datetime.datetime(2021, 8, 7, 12, 50, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629626, 'comment_body': 'we could probs move it to the init', 'comment_created': datetime.datetime(2021, 8, 7, 12, 52, 13, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629702, 'comment_body': 'we could move it to the init fn too', 'comment_created': datetime.datetime(2021, 8, 7, 12, 53, 6, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629788, 'comment_body': 'we could move these to init', 'comment_created': datetime.datetime(2021, 8, 7, 12, 53, 44, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684629829, 'comment_body': 'this one goes to the init too', 'comment_created': datetime.datetime(2021, 8, 7, 12, 54, 15, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630116, 'comment_body': 'smth similar to the dataclass', 'comment_created': datetime.datetime(2021, 8, 7, 12, 56, 55, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630417, 'comment_body': '```suggestion\r\n            if intent[""slots""] :\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 13, 0, 43, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630696, 'comment_body': 'Multi Hot Encoding, I went to French restaurant -> 0 0 0 1 0', 'comment_created': datetime.datetime(2021, 8, 7, 13, 2, 57, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684630860, 'comment_body': 'either `log` this or include in the error message', 'comment_created': datetime.datetime(2021, 8, 7, 13, 4, 28, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684631888, 'comment_body': ""```suggestion\r\n        # we don't actually support ROBERTA here, so <s>s wont actually appear\r\n        token_label_ids = []\r\n```"", 'comment_created': datetime.datetime(2021, 8, 7, 13, 14, 1, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684631916, 'comment_body': '```suggestion\r\n        # Account for <s>, </s></s>, </s></s>, </s> with ""- 6"" (RoBERTa) (we don\'t actually support roberta)\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 13, 14, 26, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684631982, 'comment_body': ""```suggestion\r\n            class_type = 'none'\r\n```"", 'comment_created': datetime.datetime(2021, 8, 7, 13, 15, 12, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684632342, 'comment_body': '```suggestion\r\n        # trippy still expects the slots list so even if we don\'t want to do slots prediction we will mock it w smth\r\n        slot_list = [""dummy""]\r\n```', 'comment_created': datetime.datetime(2021, 8, 7, 13, 18, 45, tzinfo=datetime.timezone.utc), 'commenter': 'oserikov', 'type': 'User'}, {'comment_id': 684661479, 'comment_body': ""Ah actually I just realized it's better to keep it separated as we're adding the huggingface outputs, i.e.\r\n`outputs = (total_loss,) + (per_slot_per_example_loss, per_slot_class_logits, per_slot_start_logits, per_slot_end_logits, per_slot_refer_logits, action_logits, action_loss,) + outputs[2:]`\r\n\r\nSo depending on the huggingface version it may vary how long outputs[2:] is.."", 'comment_created': datetime.datetime(2021, 8, 7, 18, 5, 18, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661553, 'comment_body': 'Now logged!', 'comment_created': datetime.datetime(2021, 8, 7, 18, 6, 24, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661683, 'comment_body': 'Clarified this', 'comment_created': datetime.datetime(2021, 8, 7, 18, 7, 43, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661816, 'comment_body': 'Clarified this point', 'comment_created': datetime.datetime(2021, 8, 7, 18, 8, 52, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684661974, 'comment_body': 'Removedüëç', 'comment_created': datetime.datetime(2021, 8, 7, 18, 10, 5, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662030, 'comment_body': 'Already explained in other commentüëç', 'comment_created': datetime.datetime(2021, 8, 7, 18, 10, 38, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662083, 'comment_body': 'Added explanations to the docstringüëç', 'comment_created': datetime.datetime(2021, 8, 7, 18, 11, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662650, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 17, 10, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662658, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 17, 17, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662782, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 18, 46, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662804, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 7, 18, 18, 59, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684662894, 'comment_body': 'Renamed to `trippy_input`', 'comment_created': datetime.datetime(2021, 8, 7, 18, 20, 6, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}, {'comment_id': 684737596, 'comment_body': 'Done', 'comment_created': datetime.datetime(2021, 8, 8, 8, 31, 15, tzinfo=datetime.timezone.utc), 'commenter': 'Muennighoff', 'type': 'User'}]","[{'commit_sha': '5dbdf6a9aaddfc816ab80cf5d9e129fe5ed4a6a3', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '03332879351686e3d4fe1f5cb988820aae814d05', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd9c2644187d113047b66350c50930da56d8fe8f2', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '160739fc30f9034e6eee4900be266d275c217c4d', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1622a69191dfcc1f36d46e33f2b8232e082ca66a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '42256674610b711759bf978649f160651dd157e3', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2220760df04f8e41b5dcb60cb7588c786c71e829', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '476907c31ac28ee73c72503a1db9f6c537cf0519', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e7c6884ac0ac0e887b38213f939071a7a810dfe9', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'c374f659d1afdd7585cb11e96f7efd7855cf0d1b', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '9aacb9e055167f3cb281dfe4283bb9eda211bc5c', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '09f836ff5b474a2995ac385f93277da1ac3a73ff', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e6f18b893f8ff95c5e1f461538a48a38af038bcc', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '33258fb63161d02824144e8fab76b30e45a9d39a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c9df55d491c0e49895e5f1569b4b15e68a612d1', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'd6dbbbb75f5dd774b808dbd672632fd780ea4a7a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '3c087a80e06b42737c669e40e4a83849ad549f11', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'cf7c017c467568d66c7236c09a553ae019444402', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'e64ffd2f39975e41f7b0264a3cdfb60d32278bfe', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2c8f3849b51112f4e2c2c5c8500284247b837610', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '142f6f7e3b9b135c5d4f096528bcddf59605a5b2', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '43e29f2cab2daadfaf3b8e239840601e73f68ec3', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '39d044673c27a124eb5d4aa81c7a00a8e6de97e4', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '54922f96852e4cc0db03174a32eb5329525a8453', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '8be6585b9298b6b17fb71dda554bf0c3c2b56aec', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'b5ecf272f25224c6db0247068f211868a32bbd5a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1b9e140ac4efc09fd60c7cf8183d4293a9f7b239', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72499842a1315f795030605a8a214bea8a91f6e0', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '551751be2f7e1c856606730e63099309e743a6c9', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '2d066a5528497408493d4c1738fd4993fb463772', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'be2fd8c701f774fc5179df148cd37dc2ef3e9880', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'a937201cd1039f820c13c95c686dc0213c711136', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '6b05a02e2fb3cf1a61ac49b057381184614753aa', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'aafe0e943162df40c1fb1ed6814a8da55da66ad6', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'dbbcf53a6263fdabc9e8be4094d25c6b70b120fa', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '7432ea6fc5945e6a502d2b28ce6fb05d3ba30ed0', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'fadfe5a901e932b47d19008fac77789a5675dd8a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': 'bdfd8900cfdb9d49fa3bbc087eb6efe6862e543a', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '1e2ad413b1811d867c0029847038a7bfa51c5684', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '49984f582de46da279af1109638eb8280dd2dcbe', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}, {'commit_sha': '72e17d0a9b857675861277b0bc6a61d0f1efc100', 'committer_username': 'Muennighoff', 'committer_name': 'Niklas Muennighoff', 'committer_email': 'n.muennighoff@gmail.com', 'commit_date': datetime.datetime(2020, 3, 29, 0, 44, 40, tzinfo=datetime.timezone.utc)}]",Niklas Muennighoff,62820084,n.muennighoff@gmail.com,User,,61,,5,190

Project_ID,Name,Full_name,Language,Forks,Stars,Watchers,contributors,commits,issues,branches,PRs_count,contributor pullrequests
111113343,DeepPavlov,deeppavlov/DeepPavlov,Python,1140,6639,208,77,2710,45,41,21,"[{'id': 693298639, 'number': 1466, 'closed': datetime.datetime(2021, 7, 31, 20, 34, 44, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 20, 9, 12, 39, tzinfo=datetime.timezone.utc), 'time_taken': 991325.0, 'time_delta': '11 days, 11:22:05', 'additions': 1, 'deletions': 1, 'state': 'closed'}, {'id': 684310243, 'number': 1464, 'closed': datetime.datetime(2021, 8, 18, 6, 13, 33, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 7, 6, 11, 55, 2, tzinfo=datetime.timezone.utc), 'time_taken': 3694711.0, 'time_delta': '42 days, 18:18:31', 'additions': 7517, 'deletions': 6, 'state': 'closed'}, {'id': 658281613, 'number': 1455, 'closed': datetime.datetime(2021, 7, 6, 11, 55, 18, tzinfo=datetime.timezone.utc), 'created': datetime.datetime(2021, 5, 31, 12, 37, 35, tzinfo=datetime.timezone.utc), 'time_taken': 3107863.0, 'time_delta': '35 days, 23:17:43', 'additions': 1825, 'deletions': 3, 'state': 'closed'}]"
